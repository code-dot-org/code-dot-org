---
es-MX:
  data:
    short_instructions:
      2-3 Artist 1 new: Hola, soy un artista. Puedes escribir código para hacerme dibujar cualquier cosa. Usa algunos bloques para hacerme dibujar sobre las líneas grises en la imagen. (Cada línea tiene 100 píxeles de largo)
      2-3 Artist 11: 'Dale un borde a la señal de alto haciendo un octágono con ocho lados, cada uno de 100 píxeles de largo. ¿Cuántos grados debes girar? (Pista: ¿Cuánto es 360 dividido entre 8?) '
      2-3 Artist 12: Configura el bloque "repetir" de tal forma que cree un "círculo" para terminar el globo ocular. Si cada movimiento gira un grado a la derecha, ¿cuántas veces necesitas repetir para completar el círculo? ¿180? ¿360? ¿500?
      2-3 Artist 2 new: 'Esta casa tiene una pared a medio terminar. Cada lado mide 100, pero la pared incompleta solo mide 50. Completa la pared. '
      2-3 Artist 2: 'Esta casa tiene una pared a medio terminar. Cada lado mide 100, pero la pared incompleta solo mide 50. Completa la pared. '
      2-3 Artist 3.4: El bloque Salta mueve el artista sin dibujar. Dibuja la línea punteada utilizando los bloques Salta y Dibuja.
      2-3 Artist 3: Este sombrero mide 100 píxeles de alto. Dibuja un sombrero que mida 70 píxeles menos.
      2-3 Artist 3new: El sombrero rojo tiene 100 píxeles de alto. Termina de dibujar un sombrero negro que tiene 70 píxeles menos. El ancho del sombrero negro es de 50 píxeles.
      2-3 Artist 4: Ayúdame a completar la casa para este gato.
      2-3 Artist 5: Sustituye este código con el bloque "repetir" para dibujar la misma casa usando sólo 3 bloques.
      2-3 Artist 6: "¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud."
      2-3 Artist 7: Termina de dibujar la mitad derecha de la última ventana. Cada cuadrado de la ventana mide 25 píxeles.
      2-3 Artist 8: Completa las habitaciones para cada uno de los animales dividiendo el rectángulo en 2 cuadrados del mismo tamaño. El rectángulo mide 200 píxeles de ancho y 100 píxeles de alto.
      2-3 Artist 9 NEW: Termina esta cometa
      2-3 Artist 9 REPLACEMENT: Termina de dibujar estas escaleras!
      2-3 Artist 9: Termina esta cometa
      2-3 Artist Assessment 1: evaluación Termina de dibujar el último diente, 25 píxeles de ancho por 25 píxeles de alto.
      2-3 Artist Debugging 1: "¿Puedes hacer este sombrero con una longitud máxima de 100?"
      2-3 Artist Debugging 10: "La almohadilla de dirección en mi dispositivo de juego es demasiado estrecha. \n¿Puede usted hacer más ancho por 10 píxeles? \nIntenta ejecutar el código primero para ver qué está mal."
      2-3 Artist Debugging 11: Ayúdame a terminar mi hermoso copo de nieve. ¿Cuántas veces necesito "Repetir" para finalizarlo?
      2-3 Artist Debugging 12: Tengo que añadir una ola del océano a esta escena. ¿Puedes ayudarme?
      2-3 Artist Debugging 2: 'El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 píxeles de largo. Repara este código para dibujar los bigotes.'
      2-3 Artist Debugging 3: "¡Mi barco tiene un agujero! ¿Puedes repararlo cambiando el ángulo de la línea? Sugerencia: el último ángulo está errado por 15 grados."
      2-3 Artist Debugging 4: "¿Qué imagen intentamos representar? Termina de unir los puntos mediante los ángulos y líneas adecuados."
      2-3 Artist Debugging 5: 'El código para la pierna y el pie está equivocado. Sugerencia: El pie es demasiado largo, podríamos necesitar eliminar un paso (juego de palabras intencional)'
      2-3 Artist Debugging 6: Parece que estoy sentado en una silla a la que le falta una pata. Edita los Bloques para dibujar la pata.
      2-3 Artist Debugging 7: Parece que la C en Código está dibujada al revés - ¿Puedes hacer que parezca una C?
      2-3 Artist Debugging 8: Mi molinillo de viento no está terminado. ¿Cuántas veces necesito repetir para terminarlo?
      2-3 Artist Debugging 9: 'El código de este tallo es incorrecto. Sugerencia: El ángulo está fuera por 60 grados'
      2-3 Artist Debugging Assessment 1: 'Esta figura es demasiado pequeña. ¿Puedes hacerla más grande? Pista: debería tener 75 píxeles más por cada lado.'
      2-3 Artist Free Play: "¡Juego gratis! Dibuja lo que quieras."
      2-3 Artist Functions 1 a: 'Hola. Yo artista zombi. ¡Yo amo dibujar! Ayúdame a dibujar las gafas cuadradas. Sugerencia: el puente entre las gafas es 25 píxeles más corto que el ancho del cuadrado.'
      2-3 Artist Functions 1: 'Hola. Yo artista zombi. ¡Yo amo dibujar! Ayúdame a dibujar las gafas cuadradas. Sugerencia: el puente entre las gafas es 25 píxeles más corto que el ancho del cuadrado.'
      2-3 Artist Functions 10: Aquí hay dos funciones, una para dibujar un engranaje grande y otra para dibujar un engranaje pequeño. ¡Utilízalos para dibujar el interior de una máquina!
      2-3 Artist Functions 11 a: Hemos renombrado la función "dibuja un cuadrado" a "dibuja un hexágono", ¡pero sigue dibujando cuadrados! ¿Puedes modificar la función "dibuja un hexágono" para que dibuje un hexágono con 50 píxeles de cada lado y que dibuje la imagen usando la función?
      2-3 Artist Functions 11.5 a: |-
        Aquí está la misma función `dibujar un hexagon`. \\r
        \\r
        ¿Qué pasa si colocas un ciclo al programa principal por 6 veces, dan vuelta 60 grados cada vez que se ejecuta el ciclo?
      2-3 Artist Functions 11.5: |-
        Aquí está la misma función `dibujar un hexagon`. \\r
        \\r
        ¿Qué pasa si colocas un ciclo al programa principal por 6 veces, dan vuelta 60 grados cada vez que se ejecuta el ciclo?
      2-3 Artist Functions 11: Hemos renombrado la función "dibuja un cuadrado" a "dibuja un hexágono", ¡pero sigue dibujando cuadrados! ¿Puedes modificar la función "dibuja un hexágono" para que dibuje un hexágono con 50 píxeles de cada lado y que dibuje la imagen usando la función?
      2-3 Artist Functions 12 Mike: 'Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función "dibujar una flor" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  '
      2-3 Artist Functions 12 a: 'Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función "dibujar una flor" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  '
      2-3 Artist Functions 12: 'Las funciones son geniales para dibujar las cosas complejas varias veces. Puedes utilizar la función "dibujar una flor" para llenar el resto de la caja del jardinero. (Pista: las plantas están separadas por una longitud de 100 píxeles)  '
      2-3 Artist Functions 13: Tienes cuatro funciones. Utilízalas como quieras dentro de uno o varios bucles para hacer dibujos que puedes compartir con tus amigos. Pulsa "run" para ver un ejemplo.
      2-3 Artist Functions 2 a: 'Utiliza el pequeño bloque verde "dibujar un cuadrado" para llamar a esta nueva función y crear las gafas. '
      2-3 Artist Functions 2: ¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada "dibuja un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear los lentes? Los cuadrados están separados por 75 píxeles.
      2-3 Artist Functions 3 a: |-
        Editar la función "dibujar un cuadro" para dibujar unos lentes con armazón cuadrado de 115 pixeles en cada lado.

        Los cuadros están ahora separados 45 pixeles.
      2-3 Artist Functions 3: Edita la función para dibujar un cuadrado con una longitud lateral de 115 y dibuja los lentes más grandes. Los cuadrados están ahora separados 45 píxeles.
      2-3 Artist Functions 4 a: Ahora, pon la función dentro de un bucle y agrega un turno adicional para pintar estos tres cuadros.
      2-3 Artist Functions 4: Usa el bloque "repetir" para dibujar estos 3 cuadrados.
      2-3 Artist Functions 7: 'Utiliza la función "dibuja una casa" para dibujar dos casas utilizando dos parámetros diferentes. (Sugerencia: la primera casa es de 100 píxeles).'
      2-3 Artist Functions 9: Ésta es la función copo de nieve. ¡Experimenta con ella para crear una escena invernal! Éste es un nivel libre de acertijos, puedes jugar libremente. ¡Diviértete!
      2-3 Artist Loops 1: "¿Podrías hacer un hexágono cuyos lados midan 100 píxeles de largo para terminar la célula? Recuerda, eso significa que ¡sólo deberás girar 60 grados!"
      2-3 Artist Loops 10: "¿Qué pasa con el diseño cuando hacemos nuestro último paso hacia adelante hasta la mitad?"
      2-3 Artist Loops 11: "¡Ahora vamos a poner \\* otro \\* bucle alrededor de toda la creación! No olvide añadir un ángulo al final del bucle externo."
      2-3 Artist Loops 2: Ahora, usa un bloque de repetición para que la célula se convierta en una concha.
      2-3 Artist Loops 4: "¿Quieres ver lo que pasa cuando repetimos la forma una y otra vez utilizando un bucle?"
      2-3 Artist Loops 5: Ahora vamos a hacer un pequeño cambio en el bucle y ver cuán diferente se convierte nuestro foto.
      2-3 Artist Loops 6: Añadir un paso más y otra vez dentro del bucle y ver cómo cambia su diseño.
      2-3 Artist Loops 7: Podemos usar bucles para hacer todas las clases de polígonos. ¿Puede crear un rombo dentro de este hexágono?
      2-3 Artist Loops 8: Pongamos ambos elementos dentro de un ciclo.
      2-3 Artist Loops 9: Vamos a iterar sobre los mismos elementos, pero ahora vamos a añadir algo de separación entre ellos. Usa el mismo código de antes pero añade un paso mas al final del bucle exterior.
      2-3 Artist Loops New 1: "¡Dibujemos la cabeza de este robot! ¿Puedes hacer un cuadrado con lados que son de 100 píxeles?"
      2-3 Artist Loops New 10: Ahora conectemos un montón de V juntas en un ciclo.
      2-3 Artist Loops New 11: Esta vez vamos a dibujarlo 24 veces. Añadir un giro a la izquierda de 30 grados a este código y ponerlo todo en un bloque de repetición.
      2-3 Artist Loops New 12: Dibuja un diamante con lados de 100 píxeles.
      2-3 Artist Loops New 13: Ahora dibuja un diamante 3 veces en una iteración.
      2-3 Artist Loops New 14: Ahora, a dibujar el diamante 10 veces pero gire 90 grados entre cada diamante.
      2-3 Artist Loops New 15: Dibuja algo divertido.
      2-3 Artist Loops New 2: |-
        Aquí está el mismo desafío que acabamos de resolver, pero esta vez sólo puedes utilizar un bloque`avanzar` y un bloque`girar`.\\r
        \\r
        ¿Puedes usar repetición para resolver este desafío?
      2-3 Artist Loops New 9: "Dibuje una V simple (donde ambos lados \nson 50 píxeles) para completar la flecha."
      2-3 Artist Match Hex Pic: 'Iguala: Ayuda a terminar el hexágono.'
      2-3 Artist Match Rho Pic: 'Iguala: Terminar el código faltante.'
      2-3 Artist Match Sq Pic: 'Iguala: Completar el código faltante'
      2-3 Artist Match Tri pic: 'Igualando: Rellene el código faltante.'
      2-3 Artist Nested Loops 1: Has usado bucles para dibujar formas anteriormente, pero sabías que puedes poner un bucle dentro de otro bucle, todo este bloque de código 3 veces para dibujar el patrón.
      2-3 Artist Nested Loops 10: Pasa este código 12 veces para completar el patrón.
      2-3 Artist Nested Loops 11: Haga un bucle de este código 4 veces para completar el patrón, gire 90 grados después de cada círculo.
      2-3 Artist Nested Loops 12: Itera este código 12 veces para completar las curvas.
      2-3 Artist Nested Loops 2: Ahora haga un bucle del triángulo 6 veces. Después de cada triángulo, usted necesitará girar 60 grados antes de dibujar el siguiente.
      2-3 Artist Nested Loops 3: Usted necesitará el triángulo del bucle 12 veces para dibujar este patrón. Divida el número de grados en un círculo (360) por el número de formas que dibujas (12) para averiguar cuánto debe girar después de cada forma.
      2-3 Artist Nested Loops 4: 'Haga un bucle de este diamante 12 veces para dibujar una flor. Sugerencia: 12 diamantes es igual a los 12 triángulos que hiciste - ¿cuánto necesitas para girar después de cada forma?'
      2-3 Artist Nested Loops 5: Llenar en las ventanas del edificio con un bucle anidado. Las ventanas son 20 píxeles largos y 20 píxeles aparte.
      2-3 Artist Nested Loops 6: Este dinosaurio tiene 8 picos subiendo su cola; cada espiga es 30 píxeles de largo. El triángulo del bucle 8 veces, pero asegúrese de mover hacia adelante después de cada uno.
      2-3 Artist Nested Loops 7: Bucle este triángulo 10 veces para dibujar el sol, necesitarás moverte y girar después de cada triángulo. Puedes averiguar cuánto girar dividiendo la cantidad de grados en un círculo por la cantidad de figuras que lo componen.
      2-3 Artist Nested Loops 8: Ahora vamos a agregar un poco de hierba a nuestra imagen. Cada penacho de césped es 50 píxeles aparte.
      2-3 Artist Nested Loops 9: Terminaremos esta foto agregándole una flor. Enrolle el diamante 12 veces para dibujar su flor.
      2-3 Artist Nested Loops Free Play: juego libre, dibujar algo fascinante con bucles anidados.
      2-3 Bee Conditionals 1: "¡Hola! Soy una abeja. Ayúdame a obtener néctar de la flor."
      2-3 Bee Conditionals 10: Flores de color púrpura pueden tener 1 o 0 néctar. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.
      2-3 Bee Conditionals 11: Ayúdame a recolectar néctar, pero solo de las flores que tienen néctar.
      2-3 Bee Conditionals 12: Utilizar un bucle para comprobar y recolectar el néctar de todas estas flores.
      2-3 Bee Conditionals 13: 'Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si néctar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?'
      2-3 Bee Conditionals 14: Colecta néctar y miel. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.
      2-3 Bee Conditionals 15: Recoge néctar de las cuatro flores.
      2-3 Bee Conditionals 2: "¡Hola, soy una abeja! Ayúdame a recoger todo el néctar de las flores. Utiliza un bucle (loop)."
      2-3 Bee Conditionals 3: Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop).
      2-3 Bee Conditionals 4: Ayúdame a recoger todo el néctar de las flores y a hacer toda la miel.
      2-3 Bee Conditionals 5: "¡Flores de color púrpura pueden tener 1 o 0 néctar, pero no sabes cuál! Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1 utilizando el bloque if."
      2-3 Bee Conditionals 6: Verifica esta flor con un bloque de "if" para ver si hay cualquier néctar disponible.
      2-3 Bee Conditionals 7: Colecta néctar de cada flor si tiene alguno.
      2-3 Bee Conditionals 8: Este campo tiene flores rojas y púrpura. Flores rojas tienen una cantidad conocida de néctar, pero se desconoce el néctar de la flor de color púrpura. Colecta todo el néctar.
      2-3 Bee Conditionals 9: Colecta todo el néctar de cada flor.
      2-3 Bee Conditionals Assessment 1: evaluación Colecta todo el néctar. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.
      2-3 Bee Debugging 1: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 10: Estos bloques realmente me molestan. Corregir el (los) error(es) para colectar todo el néctar y hacer toda la miel.
      2-3 Bee Debugging 2: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 3: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 4: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 5: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel. Usted puede ahora usar ejecutar y paso.
      2-3 Bee Debugging 6: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer toda la miel.
      2-3 Bee Debugging 7: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 8: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 9: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging Assessment 1: 'Evaluación: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.'
      2-3 Bee Functions 1: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 2 néctar" para recolectar el néctar de cada flor.
      2-3 Bee Functions 10: Las flores moradas pueden tener 1 o 0 néctar. Crea una función que recoja el néctar solo de aquellas flores que lo tengan.
      2-3 Bee Functions 2: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      2-3 Bee Functions 3: Colecta todo el néctar de cada flor.
      2-3 Bee Functions 4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      2-3 Bee Functions 5: Ahora hay más néctar en las flores. Edita la función dada de manera que recoja 4 néctares y úsalo para recoger todo el néctar de las flores.
      2-3 Bee Functions 6: Ahora, utiliza la misma función para recoger el néctar de las tres flores.
      2-3 Bee Functions 7: Las flores están ahora más lejos. Editar la función dada y usarlo para recoger todo el néctar de las flores.
      2-3 Bee Functions 8: Crea tu propia función que obtiene 7 de néctar, avanza hacia adelante y obtén 7 de miel. Utiliza la función para recoger néctar en cada flor y hacer miel en cada panal de miel.
      2-3 Bee Functions 9: Crea tu propia función que desciende por un camino, obtiene néctar, hace miel y luego devuelve la abeja a la cima de la ruta.
      2-3 Bee Functions Assessment 1: Utilice la función dada para recolectar néctar de cada flor.
      2-3 Bee Functions Assessment 2: 'Valoracion: Crea una función para hacer 3 mieles a la vez.'
      2-3 Bee Loops 1: 'Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      2-3 Bee Loops 10: "¿Podrías utilizar un ciclo mientras dentro de otros dos ciclos para recolectar todo el néctar?"
      2-3 Bee Loops 11: Utiliza ciclos mientras para recolectar todo el néctar de las flores en este campo.
      2-3 Bee Loops 12: Utiliza ciclos mientras para recolectar todo el néctar de las flores en este campo.
      2-3 Bee Loops 13: 'Evaluación: Usa el bloque de repetición para recoger todo el néctar.'
      2-3 Bee Loops 1A: "¡Hola, soy una abeja! ¿Puedes ayudarme a recolectar el néctar de estas flores?"
      2-3 Bee Loops 2: Usa un ciclo para recolectar el néctar y hacer la miel.
      2-3 Bee Loops 2A: "¿Podrías hacer la misma tarea más fácilmente con un ciclo?"
      2-3 Bee Loops 3: Recolecta el néctar de cada flor y haz miel en cada panal.
      2-3 Bee Loops 3A: "¿Podrías utilizar un ciclo para recolectar todo el néctar?"
      2-3 Bee Loops 3B: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      2-3 Bee Loops 4: Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      2-3 Bee Loops 4A: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces? ¡No olvides hacer la miel al final!"
      2-3 Bee Loops 5: Utiliza un ciclo para seguir los pasos y recolectar el néctar.
      2-3 Bee Loops 6: Utiliza un ciclo para recolectar néctar de cada flor y hacer miel en cada panal.
      2-3 Bee Loops 7: Pon estos bloques en un ciclo para recolectar néctar de cada flor.
      2-3 Bee Loops 8: Estas flores moradas tienen una cantidad desconocida de néctar. Utiliza el ciclo "while nectar" para recolectar todo el néctar. Este ciclo va a ejecutarse mientras la condición sea verdadera, en este caso Néctar > 0.
      2-3 Bee Loops 9: El ciclo while puede ejecutar la misma acción como un estatuto if en un ciclo. Añade un ciclo while a este código para ejecutar la misma tarea.
      2-3 Bee Loops Assessment 1: Evaluación - Utiliza un ciclo while para recolectar todo el néctar de esta flor.
      2-3 Maze 1: ¿Me puedes ayudar a atrapar al cerdo malo? Apila un par de bloques "avanzar" juntos y presiona "Ejecutar".
      2-3 Maze 10: "¡Guíame al demonio verde! (Cuidado con el TNT)"
      2-3 Maze 11: "¡Llévame a la flor que tengo hambre! ¿Cuántas veces se tiene que repetir un bloque?"
      2-3 Maze 12 (copy 1): '¿Podrías reemplazar la respuesta anterior con solo dos bloques? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      2-3 Maze 12 (copy 2): '¿Podrías reemplazar la respuesta anterior con solo dos bloques? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      2-3 Maze 12 (old): "¡Llévame al cerdo, ahora con el bloque repetir!"
      2-3 Maze 12 - One Move Block: Llegar al cerdo! Pero esta vez, sólo se puede utilizar un bloque de 'avanzar'. ¿Cree que cualquier otros bloques que te pueden ayudar?
      2-3 Maze 12: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      2-3 Maze 13 (old): "¡Llévame al cerdo, ahora con el bloque repetir hasta!"
      2-3 Maze 13: Llévame al cerdo usando solo dos bloques.
      2-3 Maze 14 (old): "¡Llévame al cerdo con el bloque repetir hasta!"
      2-3 Maze 14: ¡Llévame al girasol! (¿Dónde está ese bloque "repeticiones" cuando lo necesito?)
      2-3 Maze 15 (old): "¡Llévame al cerdo con el bloque repetir hasta!"
      2-3 Maze 15: Usa dos ciclos para hacer que el cerdo use menos bloques.
      2-3 Maze 16 (old): "¡Llévame al cerdo con el bloque repetir hasta!"
      2-3 Maze 16 before: Tráeme al cerdo.
      2-3 Maze 16: Llévame al girasol. ¡Haz un ciclo con la secuencia!
      2-3 Maze 2: Este cerdo me está colmando la paciencia. ¡Ayúdame a llegar a él!
      2-3 Maze 3: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      2-3 Maze 4: "¡Guíame al demonio verde! (Cuidado con el TNT)"
      2-3 Maze 5: "¡Guíame al demonio verde! (Cuidado con el TNT)"
      2-3 Maze 6: Mantén la calma y ayúdame a encontrar al cerdo malo. ¡Si no, puede que me enfade!
      2-3 Maze 7: "¡Guíame al demonio verde! (Cuidado con el TNT)"
      2-3 Maze 8: "¡Tráeme al cerdo!"
      2-3 Maze 9: "¡Guíame al demonio verde! (Cuidado con el TNT)"
      2-3 Maze Loops 1: "¿Puedes llevarme hasta el cerdo usando 5 bloques?"
      2-3 Maze Loops 17: "¡Llévame al girasol!"
      2-3 Maze Loops 18: |-
        ¡Llévame al girasol usando la menor cantidad de bloques!

        ¡Intenta usar un loop 'repetir' dentro de otro para reducir la cantidad de código que necesitas!.
      2-3 Maze Loops 19: "¡Llévame al girasol!"
      2-3 Maze Loops 20: "¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?"
      2-3 Maze Loops 21: "¡Llévame al girasol!"
      2-3 Maze Loops Assessment 1: 'Evaluación: ¡Llévame al girasol usando solo 5 bloques! '
      2-3 Maze sq1: Este cerdo esta acabando con mi paciencia. ¡Ayúdame a encontrarlo!
      2-3 Maze sq10: "¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?"
      2-3 Maze sq10v2: "¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?"
      2-3 Maze sq2: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      2-3 Maze sq3: "¡Guíame al demonio verde! (Cuidado con el TNT)"
      2-3 Maze sq4: Mantén la calma y ayúdame a encontrar al cerdo malo. ¡Si no, puede que me enfade!
      2-3 Maze sq5: "¡Llévame al cerdo! ¿Cuántas veces debes repetir un bloque?"
      2-3 Maze sq6: '¿Podrías reemplazar la respuesta anterior con solo dos bloques? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      2-3 Maze sq7: Llévame al intruso verde usando solo tres bloques.
      2-3 Maze sq8: ¡Llevame hacia el cerdo! (¿Dónde está el bloque "repeticiones" cuando lo necesito?)
      2-3 Maze sq9: Crea bucles para llegar al cerdo usando menos bloques.
      2-3 maze sq11: "¡Llévame hasta el cerdo! ¿Qué bloques se han repetido?"
      2-3 maze sq12: ¿Podrías reemplazar la respuesta anterior con un ciclo usando un bloque de "repeticiones"?
      2-3 maze sq13: Querida persona. Yo zombie. Debo... llegar... al girasol. Crear ciclo con bloque "repetir hasta".
      2-3 maze sq14: "¿Podrías llegar al girasol usando solo cuatro bloques?"
      2-3 maze sq15: "¿Podrías llegar al girasol usando solo cinco bloques?"
      2-3 maze sq16: Ok, esto es similar, pero un poco diferente. ¿Puedes hacerlo con solo cinco bloques?
      2-3: Las flores moradas pueden tener 1 o 0 néctar. Ten cuidado de no recoger el néctar de una flor morada si esta no tiene.
      2-3level1: Ayuda al pájaro para que atrape al cerdo travieso moviéndolo hacia adelante
      20hr_farmer_stage9_1: Hola, soy un granjero. Necesito que me ayudes a aplanar el campo en mi granja para que esté listo para sembrar. Muéveme a la pila de tierra y utiliza el bloque "eliminar" para quitarla.
      20hr_farmer_stage9_10: Estoy trabajando hasta tarde, así que esta oscuro afuera y no puedo decir que tan grandes son las pilas. Ahora no tengo todas las opciones que solía tener mientras estaba en el bloque. Muéveme a lo largo del campo y si hay una pila remuevela
      20hr_farmer_stage9_11: 'Todavía está oscuro afuera. Muéveme a lo largo del campo. Si hay una pila, quítala y si hay un agujero, rellénalo. Sugerencia: utiliza el menú desplegable de opciones del bloque "si".'
      20hr_farmer_stage9_2: A continuación, muéveme hacia el agujero y llénalo con DOS paladas de tierra, usando el bloque "llenar".
      20hr_farmer_stage9_3: Muéveme a la pila de tierra y dime cuantas paladas de eliminar debo dar usando la menor cantidad de bloques posible.
      20hr_farmer_stage9_4: "¿Puedes ayudarme a quitar las cuatro pilas de tierra? Sugerencia: usa un bloque repetir si puedes."
      20hr_farmer_stage9_5: 'Ayúdame a llenar todos estos agujeros con 5 paladas de tierra. Sugerencia: puedes poner un bloque "repetir" dentro del bloque "mientras".'
      20hr_farmer_stage9_6: Quita todas las pilas de tierra, utilizando la menor cantidad de bloques que sea posible. Las nuevas opciones en el menú desplegable del bloque "mientras" me dicen si estoy parado en una pila o un agujero.
      20hr_farmer_stage9_7: "¡Vaya, encontré un agujero muy profundo! No sé cuantas paladas de tierra necesita. ¿Puedes escribir un programa que lo llene hasta que la tierra esté plana?"
      20hr_farmer_stage9_8: Ayúdame a llenar el agujero en el otro extremo del campo, con la menor cantidad posible de bloques.
      20hr_farmer_stage9_9: 'Hazme quitar todas estas pilas de tierra. Trata de usar la menor cantidad de bloques que sea posible. Sugerencia: prueba usando un bloque "mientras".'
      20hr_maze_stage2_1: ¿Puedes ayudarme a atrapar al cerdo travieso? Apila juntos un par de bloques "avanzar" y presiona "Ejecutar" para ayudarme a llegar ahí.
      20hr_maze_stage2_10: Ok, prueba el nuevo bloque "repetir hasta" - repetirá hasta que llegue al cerdo molesto.
      20hr_maze_stage2_11: Ok, una última vez para practicar - ¿se puede resolver éste usando solo 4 bloques?
      20hr_maze_stage2_12: Querida persona. Yo zombie. Yo hambriendo. Debo... llegar... al girasol... ¿Puedes llevarme ahí con solo 5 bloques?
      20hr_maze_stage2_13: Ok, esto es similar, pero un poco diferente. ¿Puedes hacerlo en sólo 5 bloques?
      20hr_maze_stage2_14: 'Usa el nuevo bloque "si" para dejarme decidir cuándo girar. Sugerencia: solo necesitas un bloque más, pero aprende cómo lo hicimos así puedes hacerlo tú solo la próxima vez.'
      20hr_maze_stage2_15: Ok, esto es como el último puzzle, pero tienes que recordar cómo usaste el bloque "si" y el bloque "repetir" juntos.
      20hr_maze_stage2_16: ¡Yo quiero girasol! Usa un bloque "si" para llevarme allí con la menor cantidad posible de bloques.
      20hr_maze_stage2_17: Ok, vamos a hacer esto nuevamente para practicar - esto no es muy diferente, ¡pero ten cuidado con los masticadores!
      20hr_maze_stage2_18: Los bloques "si-sino" comprueban una condición, y luego hacen una cosa U otra. Para llevarme al girasol intenta usar este nuevo bloque.
      20hr_maze_stage2_19: Una práctica más del bloque "si-sino", ¿puedes hacerlo bien en tu primer intento?
      20hr_maze_stage2_2: Este cerdo me está poniendo furioso. ¡Ayúdame a encontrarlo!
      20hr_maze_stage2_20: "¿Puedes agregar sólo 3 bloques para ayudarme a resolver un laberinto más complejo? Si lo haces bien, puedo caminar cualquier camino con curvas sin importar su longitud."
      20hr_maze_stage2_3: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      20hr_maze_stage2_4: "¡Guíame al demonio verde! (Cuidado con el TNT)"
      20hr_maze_stage2_5: Mantén la calma y ayúdame a encontrar al cerdo malo. O de lo contrario, ¡puedo enfadarme!
      20hr_maze_stage2_6: Hay una forma de llegar al tonto cerdo utilizando sólo 2 bloques. ¿Puedes encontrarla?
      20hr_maze_stage2_7: Intenta llevarme al intruso verde utilizando sólo tres bloques.
      20hr_maze_stage2_8: Ayúdame a desterrar este cerdito malo usando el menor número de bloques posible. Prueba usando más de un bloque "repetir veces".
      20hr_maze_stage2_9: 'Cuando un bloque es gris, significa que no puedes borrarlo. Resuelve este puzzle utilizando el bloque de "repetir" que se repite 3 veces. Intenta poner estos 3 bloques dentro del bloque gris de "repetir": mover, mover, girar.'
      4-5 Artist 1: 'Ayúdame a terminar de dibujar mi caja. (Cada línea tiene 300 píxeles de largo) '
      4-5 Artist 10: Presione "Ejecutar" para probar el código. Luego, repita varias veces para completar el dibujo. Los colores serán diferentes cada vez.
      4-5 Artist 11: Completa las líneas verdes. Las líneas son de 300 píxeles de largo y están separadas por 15 píxeles.
      4-5 Artist 2: "¿Puedes crear un bucle de código para completar el cuadrado?"
      4-5 Artist 3.5: Muy bien, trata de averiguar qué pasaría si ejecutas este código (o presiona "Run" para probarlo). Luego, repítelo la suficiente cantidad de veces para completar el dibujo. Los colores serán (probablemente) diferentes cada vez.
      4-5 Artist 3: Este parterre de flores rectangular tiene un perímetro de 600. El lado más largo tiene una longitud de 200. Dibuja el rectángulo.
      4-5 Artist 4: "¿Cuántos grados son en un círculo? Crea bucles con los bloques para crear un círculo de colores."
      4-5 Artist 5: "¿Qué ángulo utilizas?"
      4-5 Artist 6: Este triángulo equilátero tiene ángulos de 60, 60 y 60 grados. Cada lado es de 200 píxeles. Completa el dibujo.
      4-5 Artist 7: Este triángulo rectángulo tiene ángulos de 30, 60 y 90 grados. La longitud de la hipotenusa es del doble de la altura de 100 píxeles. Completa el dibujo.
      4-5 Artist 8: La línea media en un campo de fútbol es perpendicular al margen. Este campo tiene un perímetro de 800 píxeles y es 240 píxeles de largo. ¿Qué tan amplia es? Dibujar los límites y la línea media.
      4-5 Artist 9: dibuja la otra mitad para que el diseño sea simétrico. Los triángulos son equiláteros y tienen 50 píxeles de largo.
      4-5 Artist Assessment 1: 'Evaluación: Utilizar un bucle para dibujar el triángulo equilátero. Cada lado es de 300 píxeles.'
      4-5 Artist For Loops 1: Pon los números 1 a 10 en el ancho de los bloques y ejecuta el código.
      4-5 Artist For Loops 11: Completa el bloque "for" de manera que cuente 0, 20, 40, 60, 80 ... 200.
      4-5 Artist For Loops 12: '¿Qué sucedería si inviertes los números "desde" y "hasta"? Completa el bloque "para" para que cuente 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13: '¡Este diseño inicia sin un bucle "for" y está tomando demasiados bloques! Use un bloque "for" para completar la espiral. Sugerencia: La longitud de la última línea es de 250 píxeles.'
      4-5 Artist For Loops 14: '¡Alguien comenzó el código, pero se dio cuenta de que debe haber una manera más rápida! Utilice un bloque "for" para reemplazar los bloques y completar la espiral triangular. Sugerencia: La longitud de la última línea es de 300 píxeles.'
      4-5 Artist For Loops 15: '¡Alguien comenzó el código, pero se dio cuenta de que debe haber una manera más rápida! Utilice un bloque "for" para reemplazar los bloques y completar la espiral hexagonal. Sugerencia: La longitud de la última línea es de 200 píxeles.'
      4-5 Artist For Loops 2: Este es un bloque "for". En lugar de escribir 1, 2, 3… 10, el bloque "for" puede repetir los bloques dentro de él y contar los números por ti. Coloca el número 10 dentro de la sección "a" del bloque "for".
      4-5 Artist For Loops 3: ¿Cómo podemos contar de 1 a 50? Editar el bloque "for" .
      4-5 Artist For Loops 4: Completar el bloque "for" para que lo cuente de 1 a 10 de 1 por 1.
      4-5 Artist For Loops 6: Dibujar cuadrados con lados de 50, 60, 70, 80 y 90 píxeles. Usted necesitará utilizar la función "draw a square" cinco veces.
      4-5 Artist For Loops 7: 'Dibuje los mismos cuadros pero utilice un bloque "counter" para cambiar los tamaños. coloque el bloque "counter" de la función "draw a square". Sugerencia: Es en la categoría de las Variables.'
      4-5 Artist For Loops 8: Se puede completar el programa colocando los bloques dentro de un bloque "for" que se cuenta desde 10 a 200 de 10 por 10. Puedes encontrar el bloque "for" en la categoría de bucles.
      4-5 Artist For Loops 9: Estos círculos son tamaño 5, 10, 15, 20, 25, 30 y 35. Dibujar los círculos usando un bloque de "for".
      4-5 Artist Free Draw 1: "¡Dibujo libre! Dibujar lo que estés inspirado para crear."
      4-5 Artist Functions 1: Utilice un bucle de repetición para dibujar este triángulo.
      4-5 Artist Functions 10a: Ponga este código en la función 'draw a snowflake' y reemplace 50 con el parámetro 'size'. La función esta lista para dibujar un copo de nieve de 100 píxeles.
      4-5 Artist Functions 10b: 'Utilice la función "draw a snowflake" para crear copos de diversos tamaños. Sugerencia: El primer copo de nieve es de un tamaño de 25 en longitud y cada copo de nieve es el doble del anterior.'
      4-5 Artist Functions 11: 'La función "draw a hexagon" utiliza la función "draw a triangle". Completa la función del hexágono. Pista: Un hexágono tiene 6 lados, y cada lado con 100 píxeles de largo'
      4-5 Artist Functions 12: 'Completa la función ''draw waves''. Cada onda está compuesta por una onda superior y una inferior. Sugerencia: Dibujar 5 ondas azules.'
      4-5 Artist Functions 13 Free play: Aquí están algunas funciones para dibujar los planetas, las estrellas, los cohetes y los robots. Utiliza cualquier forma que te guste para hacer imágenes que puedas compartir con tus amigos.
      4-5 Artist Functions 14 Free play: Aquí te ofrecemos varias funciones. Utilízalas como quieras dentro de uno o más bucles para hacer imágenes que puedas compartir con tus amigos. Haga clic en 'Run' para ver un ejemplo.
      4-5 Artist Functions 15 Assessment: 'Evaluación: Utilice la función "draw a square" para crear los cuadros. Los cuadros tienen 50, 100 y 150 píxeles.'
      4-5 Artist Functions 2a: Ahora utiliza esos bloques en una nueva función llamada "dibuja un pequeño triángulo" y llámalo.
      4-5 Artist Functions 2b: Ahora cree una función llamada "dibuja un triangulo chico" usando los bloques proporcionados.
      4-5 Artist Functions 3: Ahora crea las funciones "dibujar un triangulo mediano" y "dibujar un triángulo grande". La función "dibuja un triangulo chico" está hecha para ti. Los triángulos tienen longitudes laterales de 50 (chico), 100 (medio) y 150 (grande).
      4-5 Artist Functions 4: Esta nueva función de "dibuja un triangulo" tiene un parámetro y puede hacer el trabajo de las tres funciones de antes. Dibuja los mismos triángulos usando esta nueva función.
      4-5 Artist Functions 5: ¿Puedes modificar la función "dibuja un triángulo" en una función "dibuja un cuadrado" y cambiar el dibujo?
      4-5 Artist Functions 6: 'Utilice "dibuja un cuadrado" y "dibuja un triángulo" para dibujar una casa. (Sugerencia: Los lados del cuadrado son de 200 píxeles)'
      4-5 Artist Functions 6b: Utilice "dibuja un cuadrado" y funciones de triángulo junto con otros bloques para crear una casa añadiéndolos a la función "dibuja una casa" y llámala.
      4-5 Artist Functions 7: Utilice la función "'dibuja una casa" para dibujar casas de 100 píxeles y 50 píxeles. Las dos casas están separadas por 50 píxeles.
      4-5 Artist Functions 8: La función de "dibuja una flor" tiene un parámetro que le permite ajustar la altura del tallo. Establézcalo en 200 y vea qué pasa.
      4-5 Artist Functions 9: Dibuja estas 3 flores. La primera es de una altura de 100 y la siguiente flor es siempre 50 píxeles más que la altura de la anterior. Las flores también son separadas por 100 píxeles.
      4-5 Artist Patterns 1: "¿Puedes dibujar esta cuadro utilizando un bucle? Cada lado es de 20 píxeles de largo."
      4-5 Artist Patterns 10: 'Este código dibuja dos filas de hexágonos - utilice un bucle de 4 veces para dibujar el panal entero. Consejo: Tendrá que retroceder 120 píxeles en su bucle para asegurarse de que el artista no dibuja fuera de la pantalla.'
      4-5 Artist Patterns 11: "¿Cuántas veces necesitas bucle para dibujar un semicírculo? Sugerencia: si hay 360 grados en un círculo y cada bucle se desplaza 3 grados, ¿cuántas veces necesitarías para que el bucle dibuje un círculo completo?"
      4-5 Artist Patterns 12: Si copia ese bucle y gira a la izquierda en lugar de la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?
      4-5 Artist Patterns 13: Ahora repitamos todo eso cuatro veces para crear este cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados! Si se repite 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos bloques de código hará un cuarto de círculo para las esquinas?
      4-5 Artist Patterns 2: Si usted pone su bucle cuadrado dentro de otro bucle, lo llamamos un bucle anidado. ¿Qué necesita agregar a su bucle externo para asegurarse de que todos los 15 cuadrados se alinean al lado del otro?
      4-5 Artist Patterns 3: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      4-5 Artist Patterns 4: Este diamante tiene 50 píxeles y lados y ángulos de 120 y 60 grados. Utiliza un bucle para dibujarlo.
      4-5 Artist Patterns 5.5: "¿Cuántas veces necesitas repetir este bloque para dibujar la red completa de diamantes?"
      4-5 Artist Patterns 5: Repetimos para hacer una fila de 6 diamantes. Observe que hemos cambiado nuestro código del diamante para repetir 3 veces en lugar de 2 - ¿por qué cree que es así?
      4-5 Artist Patterns 6: Cuantas veces crees que necesitas repetir este código para dibujar toda el área con diamantes?
      4-5 Artist Patterns 7: Vamos a modificar el código del último rompecabezas para hacer este patrón más complejo. ¿Observe cómo los diamantes se superponen ahora, intente cambiar el primer "jump backwards" de 100 a 50 (medio en la medida) - ¿ahora hasta dónde debe ir el artista en el segundo "jump backwards"?
      4-5 Artist Patterns 8: Utilice un bucle para dibujar este hexágono con 40 píxeles y lados y ángulos de 60 grados.
      4-5 Artist Patterns 9.5: Ciclemos este código para dibujar dos filas de hexágonos. Observe cómo nuestra segunda fila se desplaza hacia la derecha.
      4-5 Artist Patterns 9: Ahora repite el código 3 veces para dibujar toda la fila. Sugerencia, cada hexágono es de 80 píxeles de ancho desde los puntos más lejanos de izquierda a derecha.
      4-5 Artist Patterns Free Play: Juego libre - ¡prueba tu destreza en la fabricación de un patrón propio!
      4-5 Bee Conditionals - FC Test: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que mira debajo de TODAS LAS NUBES para verlo si está escondiendo una flor. Si es así, puedes recolectar néctar.
      4-5 Bee Conditionals 1 (copy 1): La abeja no puede decir si se trata una flor o un panal. Junten néctar solo de las flores, pero primero verifiquen si es una flor o un panal.
      4-5 Bee Conditionals 1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      4-5 Bee Conditionals 2 (copy 1): La abeja solo quiere néctar ahora mismo. Recuerda, no todos los objetos son flores, así que chequea, para solo recoger néctar de las flores.
      4-5 Bee Conditionals 2: La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores.
      4-5 Bee Conditionals 3: Ahora la abeja sólo quiere hacer miel. Asegúrese de que sólo haga miel en el panal.
      4-5 Bee Conditionals 4 (copy 1): El objeto desconocido es una flor o un panal. Use el bloque Si/Si no para recoger néctar si es una flor si no para hacer miel (porque es un panal de abejas).
      4-5 Bee Conditionals 4: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, si no haz miel (porque es un panal de abejas).
      4-5 Bee Conditionals 5: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      4-5 Bee Conditionals 6 (copy 1): Esta flor purpura puede tener un néctar de 3,2 o 1. Aquí un bloque si/si no esta combinado con otro bloque si/si no para crear un bloque si, si no, otro. Completa la solución para recoger la cantidad de néctar desconocida.
      4-5 Bee Conditionals 6: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar.
      4-5 Bee Conditionals 7: Recuerda que las flores púrpura pueden tener 1, 2 o 3 néctares. Completa la función "revisar flor púrpura" y úsala para recoger todo el néctar de las flores.
      4-5 Bee Conditionals 8: Escribe una función dentro del bloque llamada "revisar que la flor hace miel." Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel.
      4-5 Bee Conditionals Assessment 1: 'Evaluación: Este código está errado. Completa la función "consigue néctar o produce miel", entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3, 2 o 1 néctares.'
      4-5 Bee Debugging 1: Estos bloques realmente me molestan. ¿Puedes arreglarlos?
      4-5 Bee Debugging 10: Encuentra los errores y arréglalos.
      4-5 Bee Debugging 11: "¿Esto está contado correctamente?"
      4-5 Bee Debugging 2: Ayuda a la abeja a conseguir el néctar para hacer la miel.
      4-5 Bee Debugging 3: Encuentra los errores y arréglalos.
      4-5 Bee Debugging 4: Estos bloques no funcionan. ¿Cúal es el patrón?
      4-5 Bee Debugging 5: Algo no está bien aquí...
      4-5 Bee Debugging 6: La flor púrpura contiene una cantidad desconocida de néctar. Arregla los bloques, para obtener todo el néctar de la flor.
      4-5 Bee Debugging 7: A la función le falta algo...
      4-5 Bee Debugging 8: Esta función está bien, pero no fue usada correctamente.
      4-5 Bee Debugging 9: "¿Por qué la abeja no está haciendo suficiente miel?"
      4-5 Bee Debugging Assessment 1: 'Evaluación: Arregla el código.'
      4-5 Bee Nested Loops 1: Utiliza un bucle para recolectar todo el néctar.
      4-5 Bee Nested Loops 2: 'Recolecta todo el néctar de cada flor. Utiliza un bucle anidado. '
      4-5 Bee Nested Loops 3: Recolecta todo el néctar poniendo el código de arranque en un bucle anidado.
      4-5 Bee Nested Loops 4: 'Recolecta todo el néctar de cada flor y haz miel en cada panal. Utiliza un loop anidado. '
      4-5 Bee Nested Loops 5: Recolecta todo el néctar creando un bucle anidado.
      4-5 Bee Nested Loops 6: Recolecta el néctar.
      4-5 Bee Nested Loops 7: Pon este bucle dentro de otro bucle para crear un bucle anidado y recolectar todo el néctar de las flores.
      4-5 Bee Nested Loops 8: 'Recolecta todo el néctar de estas flores anidando un bucle de tiempo. Reemplaza el bloque interno repetidas veces con un bucle de tiempo. '
      4-5 Bee Nested Loops 9: Recolecta todo el néctar de estas flores, anidando un bucle de tiempo dentro de un bloque de repetición.
      4-5 Bee Nested Loops Assessment 1: Evaluación - Recolecta todo el néctar y haz toda la miel mediante el uso de bucles.
      4-5 Bee Nested Loops Rows: "¡Reune todo el néctar de las filas de las flores! Utiliza un bucle anidado."
      4-5 Maze 1 (copy 1): Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 1: Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 10: "¿Podrías llegar al girasol usando solo cuatro bloques?"
      4-5 Maze 11: "¿Puedes llegar al girasol utilizando sólo seis bloques?"
      4-5 Maze 12: Ok, esto es ligeramente diferente. ¿Puedes hacerlos con sólo seis bloques?
      4-5 Maze 13: "¡Tráeme al cerdo!"
      4-5 Maze 14: "¡Tráeme al cerdo! Utiliza la repetición hasta el bloque."
      4-5 Maze 2 (copy 1): Lleva al zombie hasta el girasol, pero evade al ¡chomper!
      4-5 Maze 2: Lleva al zombie hasta el girasol, pero evade al ¡chomper!
      4-5 Maze 3 (copy 1): Debe...llegar... al girasol.
      4-5 Maze 3: Debe...llegar... al girasol.
      4-5 Maze 4 (copy 1): Intenta usar el bloque "repeat" para utilizar menos bloques.
      4-5 Maze 4: Intenta usar el bloque "repeat" para utilizar menos bloques.
      4-5 Maze 5 (copy 1): "¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?"
      4-5 Maze 5: "¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?"
      4-5 Maze 6 (copy 1): "¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?"
      4-5 Maze 6: "¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?"
      4-5 Maze 7: Estimada persona. Yo zombie. Debe...llegar...al girasol.
      4-5 Maze 8: Utiliza el bloque "repeat" para llevar al zombie hasta el girasol. (¡Evadiendo a los chompers!)
      4-5 Maze 9: Crear un lazo en el bloque "repetir hasta".
      4-5 Maze Assessment 1: 'Evaluación: Llega hasta el girasol.'
      4-5 Maze Conditionals 1: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 10: "¿Puede añadir solo 3 bloques para ayudar al zombie a resolver un laberinto más complejo? \\\\r \\\\r si lo haces bien, él puede caminar cualquier camino con curvas sin importar la longitud!"
      4-5 Maze Conditionals 2: Utiliza el bloque repetir hasta para llevar al zombie hasta el girasol.
      4-5 Maze Conditionals 3: 'Utiliza el bloque "if" para dejarme decidir cuando voltear. Sugerencia: Sólo necesitas un bloque más, pero aprende cómo se configura, con eso lo puedes hacer por ti mismo la próxima vez.'
      4-5 Maze Conditionals 4: Ok, esto es como con el rompecabezas pasado, pero recuerda como utilizaste el bloque "if" y el bloque "repeat" juntos.
      4-5 Maze Conditionals 5: ¡Yo quiero girasol! Utiliza in bloque "if" para llevarme allá, con el menor número de bloques.
      4-5 Maze Conditionals 6: ¡Yo quiero girasol! Utiliza in bloque "if" para llevarme allá, con el menor número de bloques.
      4-5 Maze Conditionals 7: Ok, hagámoslo de nuevo para practicar - esto no es muy diferente, pero hay que estar pendiente de los ¡chompers!
      4-5 Maze Conditionals 8: Los bloques "if-else" comprueban una condición, y luego realizan una cosa o la otra. Para llevarme al girasol trata usando este nuevo bloque.
      4-5 Maze Conditionals 9: Una práctica más con el bloque "if-else", ¿Puedes hacerlo correctamente en el primer intento?
      4-5 Maze Conditionals Assessment 1: Utiliza un bloque "repeat until" y un bloque "if-else" para llevarme al girasol usando la mínima cantidad de bloques posible.
      4-5 Nested Loops 1: 'Completa el código para dibujar estos triángulos. El primero es hecho por ti. Sugerencia: 3 triángulos en una rotación de 360 grados.'
      4-5 Nested Loops 10: Dibuja la última fila de estrellas de esta bandera, por medio de un bucle de bloques proporcionados. Las estrellas son de 50 píxeles, pero recuerda que las estrellas por sí mismas son 30 píxeles de ancho.
      4-5 Nested Loops 11: "¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles."
      4-5 Nested Loops 12: "¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?"
      4-5 Nested Loops 2: 'Ahora anida este bucle dentro de otro bucle para dibujar 10 triángulos. Esto se llama un bucle anidado. Sugerencia: Todos los 10 triángulos completan una rotación de 360 grados.  '
      4-5 Nested Loops 3: Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado.
      4-5 Nested Loops 5: haz un bucle con el código dado para crear un molino de viento.
      4-5 Nested Loops 6: "¿Puedes dibujar un hexágono con un bucle del código del triángulo?"
      4-5 Nested Loops 7: 'con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuánto es 360 dividido por 10?)'
      4-5 Nested Loops 8: 'Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)'
      4-5 Nested Loops 9: "¡Dibuja los dientes en la boca de cocodrilo!"
      4-5 Nested Loops Assessment 1: Usar un bucle anidado para completar el diseño.
      4-5 While Loops 1: Muéveme al agujero y rellena con dos palas de tierra, usando el bloque de "relleno".
      4-5 While Loops 2: Muéveme a la pila de tierra y remueve con 5 palos, usando el bloque 'remover'.
      4-5 While Loops 3: 'Muéveme a la pila y remueve todo, después muéveme hacia el agujero y llénalo completamente. Sugerencia: Utiliza tan pocos bloques como sea posible.'
      4-5 While Loops 4: "¡Wow, encontré un agujero realmente profundo! no sé cuántas paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta que el suelo esté parejo? Sugerencia: trata usando el bucle mientras."
      4-5 While Loops 5: Wow, ahora hay dos agujeros muy profundos. ¿Puedes escribir un programa que llene los dos hasta que el suelo esté parejo?
      4-5 While Loops 6: "¡Wow, ahora hay un montón de tierra! ¿Puedes escribir un programa que quite todo eso para que el suelo quede parejo?"
      4-5 While Loops 7: "¡Wow, ahora hay tres montones de tierra! ¿Puedes escribir un programa que elimine cada uno de ellos hasta que la tierra quede plana?"
      4-5 While Loops 8: ' Hay un hueco muy profundo y mucha tierra amontonada. ¿Cúantas paladas son necesarias para aplanar la tierra? Sugerencia: Utiliza el circuito de bloque "while" para ambas.'
      4-5 While Loops Assessment 1: Existen un montón de huecos y pilotes. Ayúdame a llenarlos y removerlos para aplanar la tierra.
      AB_Debug_PlayLab2: |-
        ¿Porqué no hace nada este juego?

        ¿Puedes encontrar algún error "oculto"? Algunos son mas fáciles que otros.
      AB_Debug_PlayLab3: Mueve al caballero a cada una de las banderas. Si algo sale mal, ¡busca errores!
      AlgPD DR Free Play: Crea una función basada en tu propio problema de lectura.
      Alien Defender: 'Idea del proyecto: ¡ Haz un juego de defensor en Play Lab!'
      Alien Defender_2018: 'Idea del proyecto: ¡ Haz un juego de defensor en Play Lab!'
      AllTheThings Applab - Turtle move with button: Agrega un botón que mueva la tortuga al hacer clic. (Clic para ver las Instrucciones completas)
      'AllTheThings: Pixelation - Lesson 14 - Make the Letter A': "Haga \nuna letra 'A' de 3x5. El widget está configurado con las dimensiones incorrectas. Su primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles."
      'AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4': 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1: llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      'AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color': Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      App Lab test: prueba
      AppLab_test02: Resumen de una frase de la actividad. Haz clic para ver Las instrucciones completas.
      Applab AllTheThings ResourcesTab AllResources: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      Applab AllTheThings ResourcesTab MapReference: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      Applab AllTheThings ResourcesTab ReferenceLinks: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      Applab test: Este nivel es sometible. ¡Solo para pruebas!
      Artist - Nested Loops 1: |-
        Completa el código para dibujar estos triángulos. El
        primero está hecho para ti. Sugerencia: 3 triángulos en una rotación de 360 grados.\\r
        \\r
      Artist - Nested Loops 10: Dibuja la última fila de estrellas de esta bandera, por medio de un bucle de bloques proporcionados. Las estrellas son de 50 píxeles, pero recuerda que las estrellas por sí mismas son 30 píxeles de ancho.
      Artist - Nested Loops 11: "¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles."
      Artist - Nested Loops 12: "¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?"
      Artist - Nested Loops 2: 'Ahora anida este bucle dentro de otro bucle para dibujar 10 triángulos. Esto se llama bucle anidado. Sugerencia: los 10 triángulos completan una rotación de 360 grados.  '
      Artist - Nested Loops 3: Anida el código de arranque en otro bucle para crear un sol. Esto se llama bucle anidado.
      Artist - Nested Loops 5: haz un bucle con el código dado para crear un molino de viento.
      Artist - Nested Loops 6: "¿Puedes dibujar un hexágono con un bucle del código del triángulo?"
      Artist - Nested Loops 7: 'Repite el bucle en este diseño 10 veces. ¿Cuánto tienes que girar cada vez que creas un bucle? (Sugerencia: ¿Cuánto es 360 divido 10?)'
      Artist - Nested Loops 8: 'Repite el bucle de este diseño 6 veces. ¿Cuántas veces tienes que girar cada vez que creas un bucle? (Sugerencia: ¿Cuánto es 360 dividido 6?)'
      Artist - Nested Loops 9: "¡Dibuja los dientes en la boca de cocodrilo!"
      Artist - Nested Loops Assessment 1: Utiliza un circuito anidado para completar el diseño.
      Artist Autorun Test: Usa el bloque "repetir" para dibujar estos 3 cuadrados.
      Artist Inspiration: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      Auto Open Function Editor: ¡Puedes llamar una función dentro de otra función! Utilizando tu función "shape" como base, crea 3 formas de casa cada una de 20 píxeles mas larga que la anterior, empezando con 50 píxeles de longitud. Usar un circuito de contar puede ser útil.
      Bee Recommended Blocks test: "¡Las flores moradas pueden tener un tipo de néctar de 1 ó 0, pero tu no sabes cuál! Ten cuidado de no recolectar el néctar de una flor morada sin néctar. Revisa si el valor del néctar es igual a 1 usando el bloque “if”."
      Bergeron Robot Maze1: ¿Me puedes ayudar a atrapar al cerdo malo? Apila un par de bloques "avanzar" juntos y presiona "Ejecutar".
      Big Game Animation 1 (copy 1): Ahora que has aprendido a escribir funciones lineales simples, úsalas para agregar más movimiento a nuestro juego. Haz clic en "jugar" para ver lo que tu juego puede hacer ahora (¡no demasiado!), actualiza cualquier variable que quieras y luego haz clic en "finalizar" para continuar.
      Big Game Animation 2 (copy 1): La función 'actualizar-objetivo' toma el valor x actual del objetivo y devuelve un valor actualizado. Completa la función 'actualizar-objetivo' para que se añada al valor x cada vez que se llama. Cuanto más añadas a x, más rápido irá el objetivo.
      Big Game Animation 2: La función 'actualizar-objetivo' toma el valor x actual del objetivo y devuelve un valor actualizado. Completa la función 'actualizar-objetivo' para que se añada al valor x cada vez que se llama. Cuanto más añadas a x, más rápido irá el objetivo.
      Big Game Animation 3: La función actualizar-riesgo debe funcionar como actualizar-objetivo, excepto que el riesgo deba moverse desde el lado derecho hacia la izquierda. Completa actualizar-riesgo para hacer que el riesgo vuele a través de la pantalla.
      Big Game Animation 4: En este punto de tu juego, tu riesgo debería correr a través de la pantalla de derecha a izquierda, y tu objetivo debería correr de izquierda a derecha. No vuelven a la pantalla una vez que se fueron, pero nos ocuparemos de eso más tarde. Toma un minuto para asegurarte de que tu juego está funcionando como quieres, y luego haz clic en "Finalizar" para continuar.
      Big Game Booleans 2: Ve a la sección Funciones de la caja de herramientas y completa la función seguro-izquierda? para que retorne verdadero si la coordenada x del sprite es mayor que -50. Si tienes éxito, debes ver al Riesgo salir del lado izquierdo y luego volver en la derecha.
      Big Game Booleans 3: Ahora que tienes una seguro-derecha?, vamos a llenar seguro-derecha?; debería tomar una coordenada x de sprite y volver verdadero si esa coordenada es inferior a 450. Una vez que tu seguro-derecha? esté completa, deberías ver que el Objetivo se apaga a la derecha de la pantalla y vuelve en la izquierda.
      Big Game Booleans 4: Completa la función en pantalla? para que compruebe si seguro-izquierda? y seguro-derecha? son verdaderas.
      Big Game Collision 1 (copy 1): Cuando trabajaste por última vez en tu juego, teníamos nuestro objetivo y sprites de riesgo para volar por la pantalla, pero nunca regresan. Haz clic en "ejecutar" para ver cómo tu juego está funcionando actualmente, y luego haz clic en "terminar" y trabajaremos para que esos sprites vuelvan a aparecer en la pantalla después de que se hayan ido.
      Big Game Collision 2: 'Para mover al jugador hacia arriba y hacia abajo, necesitamos usar un bloque condicional para descubrir qué tecla se presiona y responder en consecuencia. Las computadoras leen pulsaciones de teclas como códigos numéricos de teclas: la flecha hacia arriba es 38 y la flecha hacia abajo es 40. Puedes buscar otros códigos de teclas en tu cuaderno de alumno. Edita la función ''actualizar-jugador'' para que mueva al jugador hacia arriba cuando esté presionada la flecha hacia arriba, y para que lo mueva hacia abajo cuando esté presionada la flecha hacia abajo.'
      Big Game Collision 3: Usa la Fórmula de distancia para que la función de distancia devuelva la distancia entre las coordenadas del centro del jugador (px, py) y las del centro de otro sprite (cx, cy).
      Big Game Collision 4: Completa la función colisionar? para que vuelva verdadera si la distancia entre dos puntos es inferior a 100 píxeles.
      Big Game Complete: Una demostración de las Ciencias de la Computación completada en el proyecto de juego grande de álgebra
      Big Game Final: "¡Lo has logrado! En este punto, tu juego debería funcionar sin problemas, tómate tu tiempo para disfrutarlo y hacer algunos cambios finales en él. Cuando estés contento con el producto final, haz clic en Finalizar y tendrás la oportunidad de compartir un enlace con tu juego. ¡Buen trabajo!"
      Big Game Player 1: ¡Ya estamos cerca de terminar un juego! La última vez que trabajaste en el juego, usaste booleanos para hacer que tu Objetivo y Riesgo regresaran a la pantalla tras desaparecer. Haz clic en "Ejecutar" para ver qué aspecto tiene tu juego ahora, y luego haremos que tu Jugador pueda moverse arriba y hacia abajo.
      Big Game Player 2: Edita la función actualizar-jugador para que el jugador se mueva hacia arriba cuando se presione la flecha hacia arriba (código de tecla 38), y para que se mueva hacia abajo (código de tecla 40) cuando se presione la tecla hacia abajo.
      Big Game Testing: Una demostración de las Ciencias de la Computación completada en el proyecto de juego grande de álgebra
      Big Game Vars 2 (copy 1): El primer paso para tomar posesión de tu propio juego es darle un buen título. Haz clic en "editar" en las variables 'título' y 'subtítulo' y cámbialas por algo nuevo.
      Big Game Vars 2: El primer paso para tomar posesión de tu propio juego es darle un buen título. Haz clic en "editar" en las variables 'título' y 'subtítulo' y cámbialas por algo nuevo.
      Big Game Vars 3 (copy 1): Ahora vamos a establecer el fondo de tu nuevo juego. Edita la variable 'bg' y selecciona una nueva Imagen de fondo del menú desplegable.
      Big Game Vars 3: Ahora vamos a establecer el fondo de tu nuevo juego. Edita la variable `bg` y selecciona una nueva Imagen de fondo del menú desplegable.
      Big Game Vars 4 (copy 1): ¡Impresionante! Ahora puedes actualizar las variables de tu Jugador, Objetivo y Riesgo. Juega con todas las variables libremente para hacer que tu juego tenga el aspecto que deseas. Haz click en "Finalizar" cuando acabes.
      Big Game Vars 4: ¡Impresionante! Ahora puedes actualizar las variables de tu Jugador, Objetivo, y Peligro. Juega con todas las variables libremente para hacer que tu juego tenga el aspecto que deseas. Haz click en "Finalizar" cuando acabes.
      Brad Spooky House Copy: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      Brad Spooky House: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      Building a Foundation Assessment: Construye una pirámide de tres niveles, ¡no hay mas instrucciones, simplemente juega con las piezas hasta lograrlo!
      Busy Bee 2: "¡Esta abeja tiene mucho trabajo por hacer! ¿Puedes encontrar algún patrón que se pueda utilizar para simplificar el código?"
      Busy Bee: "¡Esta abeja tiene mucho trabajo por hacer! ¿Puedes encontrar algún patrón que se pueda utilizar para simplificar el código?"
      C3-Farmer While Loops 1: Usa el bloque "llenar" para moverte al agujero y llenarlo con dos paleadas de tierra.
      C3-Farmer While Loops 2: Usa el bloque 'quitar' para moverte a la pila de tierra y quitarla con 5 paleadas.
      C3-Farmer While Loops 3: 'Muéveme a la pila y quita todo, después muéveme hacia el agujero y llénalo completamente.  Sugerencia: Utiliza la menor cantidad de bloques posible.'
      C3-Farmer While Loops 4: 'Wow, ¡encontré un agujero realmente profundo! No se cuántas paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta que el suelo este parejo? Sugerencia: Esta vez, intenta usar el bucle `mientras`.'
      C3-Farmer While Loops 5: Wow, ahora hay dos agujeros muy profundos. ¿Puedes escribir un programa que llene los dos hasta que el suelo esté parejo?
      C3-Farmer While Loops 6: "¡Wow, ahora hay un montón de tierra! ¿Puedes escribir un programa que quite todo eso para que el suelo quede parejo?"
      C3-Farmer While Loops 7: "¡Wow, ahora hay tres montones de tierra! ¿Puedes escribir un programa que elimine cada uno de ellos hasta que la tierra quede plana?"
      C3-Farmer While Loops 8: 'Hay un agujero realmente profundo y una pila realmente grande de tierra. ¿Cuántas paleadas de tierra es necesario mover para aplanar el terreno? Sugerencia: Utiliza el bucle `while` para ambos.'
      C3-Farmer While Loops Assessment 1: Existen un montón de huecos y pilotes. Ayúdame a llenarlos y removerlos para aplanar la tierra.
      CDEF_debugging_flappy2: "¿Por qué no funciona este juego?"
      CSD Hackathon Pt 1: "(Haz clic para ver las instrucciones completas)"
      CSD Hackathon Pt 2: "(Haz clic para ver las instrucciones completas)"
      CSD Hackathon Week 1: "(Haz clic para ver las instrucciones completas)"
      CSD Hackathon Week 2: "(Haz clic para ver las instrucciones completas)"
      CSD U3 Background Discuss: Aquí hay un programa que parece bastante similar a lo que has estado escribiendo, pero puede comportarse de forma muy diferente. Es conveniente que hagas una pausa y debatas con la clase antes de continuar.
      CSD U3 Background Experiment: Aquí hay un programa que parece bastante similar a lo que has estado escribiendo, pero puede comportarse de forma muy diferente. Es conveniente que hagas una pausa y debatas con la clase antes de continuar.
      CSD U3 Boolean Modify: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Boolean Modify_2018: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Boolean Modify_2019: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Boolean Predict: "¿Qué crees que hará este código cuando se ejecute? Predecir qué se imprimirá cada comando console.log (), luego ejecutar el programa para verificar sus predicciones."
      CSD U3 Boolean Predict_2018: "¿Qué crees que hará este código cuando se ejecute? Predecir qué se imprimirá cada comando console.log (), luego ejecutar el programa para verificar sus predicciones."
      CSD U3 Boolean Predict_2019: "¿Qué crees que hará este código cuando se ejecute? Predecir qué se imprimirá cada comando console.log (), luego ejecutar el programa para verificar sus predicciones."
      CSD U3 Draw Loop Discuss: Aquí hay un programa que parece bastante similar a lo que has estado escribiendo, pero puede comportarse de forma muy diferente. Es conveniente que hagas una pausa y debatas con la clase antes de continuar.
      CSD U3 Draw Loop Experiment: Intenta usar algunas de las otras funciones de forma que has aprendido en el bucle de `dibujo`. ¿Qué pasa cuando usas randomNumber() para generar algunas de las entradas? Es conveniente que hagas una pausa y debatas con la clase antes de continuar.
      CSD U3 Expressions calculator: Agrega los números 1 a 10. Multiplica los números 1 a 10. Comprueba tus respuestas con un compañero.
      CSD U3 Frame Rate: Bajar la animación de Gamelab Gary con frameRate()
      CSD U3 Keypress Boolean-2018: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Keypress Boolean: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Keypress Boolean_2018: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Keypress Boolean_2018_2019: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Keypress Watchers: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Keypress Watchers_2018: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 Keypress Watchers_2019: Modifique el código para que todos los comandos console.log impriman cierto
      CSD U3 L5 Freeplay: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 L5 Freeplay_2018: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 L5 Freeplay_2019: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Mouse Input Bee 2: Hacer esto
      CSD U3 Mouse Input Bee 2_2018: Hacer esto
      CSD U3 Mouse Input Bee 2_2019: Hacer esto
      CSD U3 Random Animation: Utiliza númeroaleatorio() para animar la boca de Gary.
      CSD U3 Random Choice: Usa el bloque númeroaleatorio() para generar 0 o 1
      CSD U3 Random Color: "¿Podrías usar númeroaleatorio() para elegir también colores aleatorios? Intente establecer uno o más de los canales en el bloque rgb con un número aleatorio. ¿Cuál debe ser el valor máximo?"
      CSD U3 Random Intro: "¿Qué crees que hará este código cuando se ejecute? Haz una predicción, luego ejecuta este código de 5 a 10 veces y graba la salida cada vez. Comparte tus resultados con tu compañero."
      CSD U3 Random Min Max: Usando console.log(), escribe un programa que devuelve al azar un número en un rango que tú defines.
      CSD U3 Random Width Height: Selecciona un bloque de forma y utiliza llamadas al númeroaleatorio() en lugar de uno o más de los parámetros. Asegúrate de ejecutarlo algunas veces para que puedas ver el efecto de la aleatorización.
      CSD U3 Simple Drawing - Animation 2: Utiliza númeroaleatorio() en la posición x y el ancho de sus elipses en la nube para introducir un poco de animación.
      CSD U3 Simple Drawing - Animation: Utiliza númeroaleatorio() en la posición x y el ancho de sus elipses en la nube para introducir un poco de animación.
      CSD U3 Simple Drawing - Background: Pon todo el código en un bucle dibujo() y luego añade establecer el fondo a azul con el bloque fondo().
      CSD U3 Simple Drawing - Personal Animation: HACER esto
      CSD U3 Sprites intro sprites: Hacer esto
      CSD U3 Sprites intro sprites_2018 - Validation Test: Hacer esto
      CSD U3 Sprites intro sprites_2018: Hacer esto
      CSD U3 Sprites intro sprites_2019: Hacer esto
      CSD U3 Variable Arithmetic pt2: 'Haz una predicción: ¿Qué dos números se mostrarán en la consola?'
      CSD U3 Variable Arithmetic: Cambia el valor "tamaño" inicializado para hacer un cuadrado más grande.
      CSD U3 Variable Incrementation pt2: 'Haz una predicción: ¿Qué dos números se mostrarán en la consola?'
      CSD U3 Variable Incrementation: 'Haz una predicción: ¿Qué dos números se mostrarán en la consola?'
      CSD U3 Variables CHALLENGE gamelab gary: Usa variables para darle animación a la Game Lab Gary
      CSD U3 Variables Initialize: 'Haz una predicción: ¿Qué dos números se mostrarán en la consola?'
      CSD U3 Variables Intro: 'Crea tu propia variable '
      CSD U3 Variables Random: 'Haz una predicción: ¿Qué dos números se mostrarán en la consola?'
      CSD U3 Variables Reassign pt2: Crea y asigna una nueva variable en una sola línea.
      CSD U3 Variables Reassign: 'Haz una predicción: ¿Qué dos números se mostrarán en la consola?'
      CSD U3 Variables Square Random Loop: Prueba las predicciones del último nivel.
      CSD U3 Variables Square Random: Cambia el valor "tamaño" inicializado para hacer un cuadrado más grande.
      CSD U3 Variables Square: Cambia el valor "tamaño" inicializado para hacer un cuadrado más grande.
      CSD U3 Variables TEMPLATE square: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables change circle size: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables change circle size_2018: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables change circle size_2019: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables create and assign: Crea y asigna tamaño en una sola línea de código.
      CSD U3 Variables draw loop newVars: Amplía este proyecto para crear tu propia visualización de arte aleatoria con variables.
      CSD U3 Variables draw loop rgb: Asigna valores aleatorios a las variables x1 y y1 dentro del bucle dibujo y úsalos para controlar dónde se dibuja el cuadrado.
      CSD U3 Variables draw loop xy: Asigna valores aleatorios a las variables x1 y y1 dentro del bucle dibujo y úsalos para controlar dónde se dibuja el cuadrado.
      CSD U3 Variables eyeBrows: Haz una predicción de qué sucederá cuando muevas la tarea tamañoojos dentro del bucle dibujo. Luego pruébala
      CSD U3 Variables make a big square: Cambia el valor del tamaño varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables make a square: Cambia el valor del tamaño varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables multiple assignments: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables naming rules v2-2018: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables naming rules v2: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables naming rules v2_2018: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables naming rules v2_2018_2019: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables naming rules: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables random assignment: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables random draw loop: Haz una predicción de qué sucederá cuando muevas la tarea tamañoojos dentro del bucle dibujo. Luego pruébala
      CSD U3 Variables random drawing exemplar: Revisa este ejemplo de dibujo aleatorio.
      CSD U3 Variables random with assignment: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables random with assignment_2018: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables random with assignment_2019: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      CSD U3 Variables use value rect: 'Haz una predicción: ¿Qué dos números se mostrarán en la consola?'
      CSD U3 Variables write: Usa el bloque escribir para mostrar el valor del tamaño
      CSD U3 Variables2 expressions in commands: Usa expresiones dentro de un comando de dibujo
      CSD U3 Variables2 expressions in variables: Asigna el valor de cada expresión a una variable y aplica console.log a esa variable.
      CSD U3 Variables2 expressions: Usa console.log para mostrar los resultados de cada expresión. Luego crea la tuya.
      CSD U4 - Events Template: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      CSD U5 black white images pixelation 2: Dibuja una cara sonriente (haz clic aquí para ver la imagen)
      CSD U5 black white images pixelation 2_2018: Dibuja una cara sonriente (haz clic aquí para ver la imagen)
      CSD U5 black white images pixelation 2_2019: Dibuja una cara sonriente (haz clic aquí para ver la imagen)
      CSD U5 black white images pixelation 3: Cambia los deslizadores de ancho y altura para encontrar la imagen (haz clic aquí para ver más)
      CSD U5 black white images pixelation 3_2018: Cambia los deslizadores de ancho y altura para encontrar la imagen (haz clic aquí para ver más)
      CSD U5 black white images pixelation 3_2019: Cambia los deslizadores de ancho y altura para encontrar la imagen (haz clic aquí para ver más)
      CSD U5 black white images pixelation 4: Añade cejas a la cara sonriente (haz clic aquí para ver la imagen)
      CSD U5 black white images pixelation 4_2018: Añade cejas a la cara sonriente (haz clic aquí para ver la imagen)
      CSD U5 black white images pixelation 4_2019: Añade cejas a la cara sonriente (haz clic aquí para ver la imagen)
      CSD U5 black white images pixelation 5: Dibuja cualquier cosa que te guste
      CSD U5 black white images pixelation 5_2018: Dibuja cualquier cosa que te guste
      CSD U5 black white images pixelation 5_2019: Dibuja cualquier cosa que te guste
      CSD U5 black white images pixelation: Completa la forma X escribiendo ceros y unos
      CSD U5 black white images pixelation_2018: Completa la forma X escribiendo ceros y unos
      CSD U5 black white images pixelation_2019: Completa la forma X escribiendo ceros y unos
      CSD U6 params modify clouds: |-
        # Nubes

        Este programa hace que las nubes se mueven cuando soplas en el sensor de sonido, pero no está terminado.

        # Hacer esto

        -   Crea una nueva función `movernube(nombre)` que moverá cualquier nube.
        -   (Sugerencia: usarás casi todo el mismo código como la función `moveCloud0`)
        -   Llama a su nueva función de `movernube(nombre)` dentro del bloque del evento, una vez para cada nombre de nube.
        -   (Sugerencia: esto es similar a cómo la función `buclenube(nombre)` se llama muchas veces.
      CSD U6 params modify clouds_2018: |-
        # Nubes

        Este programa hace que las nubes se mueven cuando soplas en el sensor de sonido, pero no está terminado.

        # Hacer esto

        -   Crea una nueva función `movernube(nombre)` que moverá cualquier nube.
        -   (Sugerencia: usarás casi todo el mismo código como la función `moveCloud0`)
        -   Llama a su nueva función de `movernube(nombre)` dentro del bloque del evento, una vez para cada nombre de nube.
        -   (Sugerencia: esto es similar a cómo la función `buclenube(nombre)` se llama muchas veces.
      CSD U6 params modify planes: |-
        # Controlador multiavión

        Este programa mueve los tres aviones mediante el uso del acelerómetro del tablero y las casillas en la pantalla. En este momento, solo funciona el avión rojo.

        # Hacer esto

        -   Crea una nueva función de `moveravión(nombre)` que pueda mover cualquier avión.
        -   Llama a la función `moveravión(nombre)` dentro del bloque del evento, que sólo se mueve cuando se marca su casilla.

        \_Challenge: ahora los aviones se mueven demasiado rápido. ¿Puedes averiguar cómo cambiar el código para que se mueva más lento? \_
      CSD U6 params modify planes_2018: |-
        # Controlador multiavión

        Este programa mueve los tres aviones mediante el uso del acelerómetro del tablero y las casillas en la pantalla. En este momento, solo funciona el avión rojo.

        # Hacer esto

        -   Crea una nueva función de `moveravión(nombre)` que pueda mover cualquier avión.
        -   Llama a la función `moveravión(nombre)` dentro del bloque del evento, que sólo se mueve cuando se marca su casilla.

        \_Challenge: ahora los aviones se mueven demasiado rápido. ¿Puedes averiguar cómo cambiar el código para que se mueva más lento? \_
      CSD U6 params modify planes_2019: |-
        # Controlador multiavión

        Este programa mueve los tres aviones mediante el uso del acelerómetro del tablero y las casillas en la pantalla. En este momento, solo funciona el avión rojo.

        # Hacer esto

        -   Crea una nueva función de `moveravión(nombre)` que pueda mover cualquier avión.
        -   Llama a la función `moveravión(nombre)` dentro del bloque del evento, que sólo se mueve cuando se marca su casilla.

        \_Challenge: ahora los aviones se mueven demasiado rápido. ¿Puedes averiguar cómo cambiar el código para que se mueva más lento? \_
      CSDU4 - AppLab - 1: Lee la documentación para bolígrafocolor() y bolígrafoancho() antes de usarlo para dibujar el cuadrado azul.
      CSDU4 - AppLab - 2: Escribe un programa que actúe como una calculadora simple. (Haz clic para ver las instrucciones completas)
      CSDU4 - AppLab - 3: Usa la consola para comprobar el valor final del número. (Haz clic para ver las instrucciones completas)
      CSDU4 - AppLab - 4: Utiliza los Comandos de depuración para hacer una lista de todos los valores lanzados antes de un 6. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 1: Agrega un botón que mueva la tortuga al hacer clic. (Clic para ver las Instrucciones completas)
      CSDU4 - Design Mode - 10: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSDU4 - Design Mode - 11: Experimenta con diferentes tipos de eventos y selecciona el que piensas que es el mejor. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 12: Usa el comando textoEtiqueta para reemplazar el botón de tu programa con una etiqueta de texto. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 16: Añade un controlador de eventos para el botón mediante el enlace "Insertar y mostrar" en la pestaña Eventos de Modo Diseño. (Haz clic para ver las instrucciones completas).
      CSDU4 - Design Mode - 17: Actualiza los nombres de ID y los mensajes `console.log` para coincidir con el botón correcto. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 18: Arregla el diseño del juego de dardos. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 2: Ejecuta un programa con dos botones que tengan la mismo ID para ver el mensaje de advertencia en la consola. Cambia los ID para hacer que el programa se ejecute sin recibir un mensaje de advertencia.
      CSDU4 - Design Mode - 24: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 25: Añade un gestor de eventos al botón Enviar para que cuando el botón sea pulsado aparezca el nombre introducido en el cuadro de texto a la consola. Utiliza obtenerTexto para obtener el valor fuera del cuadro de texto. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 26: Guarda la edad y el nombre del usuario en variables (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 27: Escribe un mensaje al 'textoÁrea' (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 28: Usa el evento 'cambio' para escribir un saludo al usuario cuando presionen 'ingresar' en la entrada de texto. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 29: Agrega un menú desplegable para sus suposiciones en lugar de entradaNúmero (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 30: Muestra diferentes imágenes gráficas para el número aleatorio generado. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 31: Configura un gestor de eventos para responder a eventos de pulsación de teclas y mostrar event.key en la consola. Pulsa las teclas del teclado para ver qué sucede. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 32: Prueba los eventos de tecla hacia arriba y tecla hacia abajo para ver en qué forma se diferencian de la pulsación de tecla. (Haz clic para ver instrucciones completas)
      CSDU4 - Design Mode - 33: Cambia el código para que el sonido sólo se pueda reproducir cuando se presiona la flecha arriba. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 4: Elige un ID descriptivo y significativo para mejorar el botón. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 5: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      CSDU4 - Design Mode - 6: Ordena correctamente los comandos de los botones y los gestores de eventos para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 7: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSDU4 - Design Mode - 8: Mueve el botón a la mitad de la pantalla. (Haz clic para ver las instrucciones completas)
      CSDU4 nameAgeTemplate: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      CSDU6 - Arrays - expressionsAsIndexes: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 - Arrays - indexPractice: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 - Arrays - length: Usar lista.largo para determinar la longitud de cada arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 - Arrays - lengthMinus1: Usa lista.largo - 1 para registrar el último elemento del arreglo a la consola. (Haz clic para ver las instrucciones completas)
      CSDU6 - for loop - color buttons with for: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 - for loop - color buttons: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 - for loop - why for: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays rainbow: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays random: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select icons: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select rainbow: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select rainbow_2018: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select rainbow_2019: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select random: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select random_2018: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select random_2019: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select variable: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select variable_2018: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays select variable_2019: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSDU6 arrays variable: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSP Data Unit - Counting Multiple Things: "Si puedes contar una cosa, puedes contar varias cosas\n\nDescubre a cuántas personas les gustan cosas que no son perros y gatos \n\nContar perros\nContar gatos\nContar total\nHacer las cuentas\n\nen blanco/ total blanco\n\nTambién puede usar esto para encontrar los porcentajes de este\n\nx% son amantes de los perros"
      CSP Loops: Cambia la sentencia `si` a un bucle `mientras` para que el programa se ejecute hasta que lance un 6. (Haz clic para ver las instrucciones completas)
      CSP U4 - JSON Object Intro - Bad Way: Activa el evento del teclado y del ratón, y examina los objetos de evento que se muestran en la consola. ¿Por qué un objeto puede ser la mejor manera de almacenar esta información? (Haz clic para ver las instrucciones completas)
      CSP U4 - JSON Object Intro - Good Way: Crea un objeto con, la menos, 5 valores que incluyan, al menos, una cadena y un número. (Haz clic para ver las instrucciones completas)
      CSP U4 - Objects - createObject: Crea un objeto con, la menos, 5 valores que incluyan, al menos, una cadena y un número. (Haz clic para ver las instrucciones completas)
      CSP student contact info: Ingresa tu dirección de correo electrónico.
      CSPU5 Add Screens to Chaser Game: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add a 2nd Screen: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      CSPU5 Add a 2nd Screen_2018: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      CSPU5 Add a 2nd Screen_2019: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      CSPU5 Add full screen image to bg of chaser game: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add full screen image to bg of chaser game_2018: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add full screen image to bg of chaser game_2019: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add game over screen: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add game over screen_2018: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add game over screen_2019: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add onEvent from Design Mode: Añade un controlador de eventos para el botón mediante el enlace "Insertar y mostrar" en la pestaña Eventos de Modo Diseño. (Haz clic para ver las instrucciones completas).
      CSPU5 Add onEvent from Design Mode_2018: Añade un controlador de eventos para el botón mediante el enlace "Insertar y mostrar" en la pestaña Eventos de Modo Diseño. (Haz clic para ver las instrucciones completas).
      CSPU5 Add onEvent from Design Mode_2019: Añade un controlador de eventos para el botón mediante el enlace "Insertar y mostrar" en la pestaña Eventos de Modo Diseño. (Haz clic para ver las instrucciones completas).
      CSPU5 Add welcome screen to chaser game: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add welcome screen to chaser game_2018: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Add welcome screen to chaser game_2019: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5 Adding Screens Template: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      CSPU5 Adding Screens Template_2018: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      CSPU5 Adding Screens Template_2019: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      CSPU5 Debugging Overlapping Objects and Screen Events: Usa el Modo Diseño para recrear el juego "Chaser" de la última lección. (Haz clic para ver las instrucciones completas)
      CSPU5 Debugging Overlapping Objects and Screen Events_2018: Usa el Modo Diseño para recrear el juego "Chaser" de la última lección. (Haz clic para ver las instrucciones completas)
      CSPU5 Debugging Overlapping Objects and Screen Events_2019: Usa el Modo Diseño para recrear el juego "Chaser" de la última lección. (Haz clic para ver las instrucciones completas)
      CSPU5 First Time Console.log: Añade 3 mensajes de console.log y pruébalos. (Haz clic para ver las instrucciones completas)
      CSPU5 First Time Console.log_2018: Añade 3 mensajes de console.log y pruébalos. (Haz clic para ver las instrucciones completas)
      CSPU5 First Time Console.log_2019: Añade 3 mensajes de console.log y pruébalos. (Haz clic para ver las instrucciones completas)
      CSPU5 Layering and Deleting in Design Mode: Arregla el diseño del juego de dardos. (Haz clic para ver las instrucciones completas)
      CSPU5 Layering and Deleting in Design Mode_2018: Arregla el diseño del juego de dardos. (Haz clic para ver las instrucciones completas)
      CSPU5 Layering and Deleting in Design Mode_2019: Arregla el diseño del juego de dardos. (Haz clic para ver las instrucciones completas)
      CSPU5 Project - Multi Screen App: Crea tu aplicación multipantalla. (Haz clic para ver las instrucciones completas)
      CSPU5 Use Console.log to update IDs: Actualiza los nombres de ID y los mensajes `console.log` para coincidir con el botón correcto. (Haz clic para ver las instrucciones completas)
      CSPU5 Use setScreen for first time: Crea una aplicación de 2 pantallas que pueda alternar entre una pantalla negra y una pantalla blanca mediante el uso de botones. (Haz clic para ver las instrucciones completas)
      CSPU5 Use setScreen for first time_2018: Crea una aplicación de 2 pantallas que pueda alternar entre una pantalla negra y una pantalla blanca mediante el uso de botones. (Haz clic para ver las instrucciones completas)
      CSPU5 Use setScreen for first time_2019: Crea una aplicación de 2 pantallas que pueda alternar entre una pantalla negra y una pantalla blanca mediante el uso de botones. (Haz clic para ver las instrucciones completas)
      CSPU5_AddImageToChaserGame: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_AddImage_andMakeChaserGame: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_AddLabelToChaserGame: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_AddLabelToChaserGame_2018: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_AddLabelToChaserGame_2019: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_Debugging predict unexpected behavior - two onEvents to one ID: Haz una predicción de lo que sucederá. Una vez que hayas hecho una predicción, ejecuta el código para ver lo que sucede. (Haz clic para ver las instrucciones completas)
      CSPU5_Debugging predict unexpected behavior - two onEvents to one_2018: Haz una predicción de lo que sucederá. Una vez que hayas hecho una predicción, ejecuta el código para ver lo que sucede. (Haz clic para ver las instrucciones completas)
      CSPU5_Debugging predict unexpected behavior - two onEvents to one_2019: Haz una predicción de lo que sucederá. Una vez que hayas hecho una predicción, ejecuta el código para ver lo que sucede. (Haz clic para ver las instrucciones completas)
      CSPU5_FinalizeChaserGame: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_Project - Multi Screen App: Crea tu aplicación multipantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - Demo App: Utiliza la aplicación "Mis Cosas Favoritas". ¿De qué manera esta aplicación podría estar utilizando un arreglo? (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Arrays - Demo App_2018: Utiliza la aplicación "Mis Cosas Favoritas". ¿De qué manera esta aplicación podría estar utilizando un arreglo? (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Arrays - Demo App_2019: Utiliza la aplicación "Mis Cosas Favoritas". ¿De qué manera esta aplicación podría estar utilizando un arreglo? (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Arrays - appendItem: Usa agregarElemento para crear un arreglo de números impares 1-11. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - appendItem_2018: Usa agregarElemento para crear un arreglo de números impares 1-11. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - appendItem_2019: Usa agregarElemento para crear un arreglo de números impares 1-11. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment: Utiliza índices para cambiar los valores en este arreglo de 1 a 0. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment2: Calcula la suma de tres valores almacenados en una arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment2_2018: Calcula la suma de tres valores almacenados en una arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment2_2019: Calcula la suma de tres valores almacenados en una arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment3: Incrementa el valor de cada valor en un arreglo generado aleatoriamente por 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment3_2018: Incrementa el valor de cada valor en un arreglo generado aleatoriamente por 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment3_2019: Incrementa el valor de cada valor en un arreglo generado aleatoriamente por 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment_2018: Utiliza índices para cambiar los valores en este arreglo de 1 a 0. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - assignment_2019: Utiliza índices para cambiar los valores en este arreglo de 1 a 0. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - createFirstArray: Crea un arreglo de los números pares del 0 al 10 y muestra su contenido con console.log. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - createFirstArray_2018: Crea un arreglo de los números pares del 0 al 10 y muestra su contenido con console.log. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - createFirstArray_2019: Crea un arreglo de los números pares del 0 al 10 y muestra su contenido con console.log. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - expressionsAsIndexes: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - expressionsAsIndexes_2018: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - expressionsAsIndexes_2019: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Counting Variable: Crea una variable global para el índice actual y úsalo para mostrar el primer elemento en la arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Counting Variable_2018: Crea una variable global para el índice actual y úsalo para mostrar el primer elemento en la arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Counting Variable_2019: Crea una variable global para el índice actual y úsalo para mostrar el primer elemento en la arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Next: Escribe código que permita al usuario avanzar a través de tu lista mediante la pulsación del botón "Siguiente". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Next_2018: Escribe código que permita al usuario avanzar a través de tu lista mediante la pulsación del botón "Siguiente". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Next_2019: Escribe código que permita al usuario avanzar a través de tu lista mediante la pulsación del botón "Siguiente". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Prev: Escribe código que le permita al usuario retroceder en tu lista mediante la pulsación del botón "Último". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Prev_2018: Escribe código que le permita al usuario retroceder en tu lista mediante la pulsación del botón "Último". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings Prev_2019: Escribe código que le permita al usuario retroceder en tu lista mediante la pulsación del botón "Último". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings addItem: Escribe código que le permite a un usuario añadir sus propias cosas favoritas a la lista. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings addItem_2018: Escribe código que le permite a un usuario añadir sus propias cosas favoritas a la lista. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings addItem_2019: Escribe código que le permite a un usuario añadir sus propias cosas favoritas a la lista. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings bounds: Añade sentencias `si` a los gestores de eventos que impiden que el índice global salga de los límites. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings bounds_2018: Añade sentencias `si` a los gestores de eventos que impiden que el índice global salga de los límites. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings bounds_2019: Añade sentencias `si` a los gestores de eventos que impiden que el índice global salga de los límites. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings createArray: Crea un arreglo de palabras que describan tus cosas favoritas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings createArray_2018: Crea un arreglo de palabras que describan tus cosas favoritas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings createArray_2019: Crea un arreglo de palabras que describan tus cosas favoritas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings firstOutput: Utiliza configurarTexto para mostrar el primer elemento en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings firstOutput_2018: Utiliza configurarTexto para mostrar el primer elemento en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings firstOutput_2019: Utiliza configurarTexto para mostrar el primer elemento en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings giveIDs: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings giveIDs_2018: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings giveIDs_2019: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - favThings keepPlaying: "¡Haz cualquier otra mejora que quieras! (Haz clic para ver las instrucciones completas)"
      CSPU5_U3 - Arrays - favThings keepPlaying_2018: "¡Haz cualquier otra mejora que quieras! (Haz clic para ver las instrucciones completas)"
      CSPU5_U3 - Arrays - favThings keepPlaying_2019: "¡Haz cualquier otra mejora que quieras! (Haz clic para ver las instrucciones completas)"
      CSPU5_U3 - Arrays - indexPractice: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - indexPractice_2018: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - indexPractice_2019: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - insertingItems: Inserta elementos en un arreglo para formar una frase completa. (Haga clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - insertingItems_2018: Inserta elementos en un arreglo para formar una frase completa. (Haga clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - insertingItems_2019: Inserta elementos en un arreglo para formar una frase completa. (Haga clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - insertionErrors: Ejecuta cada comando que hace referencia a índices que están fuera de límites y observa los resultados. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - insertionErrors_2018: Ejecuta cada comando que hace referencia a índices que están fuera de límites y observa los resultados. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - insertionErrors_2019: Ejecuta cada comando que hace referencia a índices que están fuera de límites y observa los resultados. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - introIndex: Muestra el primer y último elemento en el arreglo. Muestra el número 5 del arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - introIndex_2018: Muestra el primer y último elemento en el arreglo. Muestra el número 5 del arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - introIndex_2019: Muestra el primer y último elemento en el arreglo. Muestra el número 5 del arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - length: Usar lista.largo para determinar la longitud de cada arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - lengthMinus1: Usa lista.largo - 1 para registrar el último elemento del arreglo a la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - lengthMinus1_2018: Usa lista.largo - 1 para registrar el último elemento del arreglo a la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - lengthMinus1_2019: Usa lista.largo - 1 para registrar el último elemento del arreglo a la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - length_2018: Usar lista.largo para determinar la longitud de cada arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - length_2019: Usar lista.largo para determinar la longitud de cada arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - remove: Quita elementos de un arreglo para formar una frase completa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - remove_2018: Quita elementos de un arreglo para formar una frase completa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - remove_2019: Quita elementos de un arreglo para formar una frase completa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - stringsInArrays: Añade cadenas a un arreglo para escribir una oración palabra por palabra. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - stringsInArrays_2018: Añade cadenas a un arreglo para escribir una oración palabra por palabra. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Arrays - stringsInArrays_2019: Añade cadenas a un arreglo para escribir una oración palabra por palabra. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - 200dots: Añade un bucle a tu programa que dibuje 200 puntos en tu lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - 200dots_2018: Añade un bucle a tu programa que dibuje 200 puntos en tu lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - 200dots_2019: Añade un bucle a tu programa que dibuje 200 puntos en tu lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - One Dot sprayPaint: Escribe código que vuelva a dibujar tu imagen mediante el uso de un punto cuyas ubicaciones "x" e "y" usan offsetX y offsetY con un pequeño valor aleatorio añadido. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - One Dot sprayPaint_2018: Escribe código que vuelva a dibujar tu imagen mediante el uso de un punto cuyas ubicaciones "x" e "y" usan offsetX y offsetY con un pequeño valor aleatorio añadido. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - One Dot sprayPaint_2019: Escribe código que vuelva a dibujar tu imagen mediante el uso de un punto cuyas ubicaciones "x" e "y" usan offsetX y offsetY con un pequeño valor aleatorio añadido. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - appendToArray: Crea un arreglo para almacenar cada parámetro de evento. Añade cada parámetro de evento a este arreglo dentro de tu gestor de eventos. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - appendToArray_2018: Crea un arreglo para almacenar cada parámetro de evento. Añade cada parámetro de evento a este arreglo dentro de tu gestor de eventos. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - appendToArray_2019: Crea un arreglo para almacenar cada parámetro de evento. Añade cada parámetro de evento a este arreglo dentro de tu gestor de eventos. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - changeToMouseMove: Cambia tu programa para que los puntos se dibujen en la ubicación del ratón mientras el usuario mueve el ratón en el lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - changeToMouseMove_2018: Cambia tu programa para que los puntos se dibujen en la ubicación del ratón mientras el usuario mueve el ratón en el lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - changeToMouseMove_2019: Cambia tu programa para que los puntos se dibujen en la ubicación del ratón mientras el usuario mueve el ratón en el lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - clickToAdd: Cambia tu programa para que los puntos se añadan al lienzo cuando el usuario haga clic en él. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - clickToAdd_2018: Cambia tu programa para que los puntos se añadan al lienzo cuando el usuario haga clic en él. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - clickToAdd_2019: Cambia tu programa para que los puntos se añadan al lienzo cuando el usuario haga clic en él. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - delete: Crea un botón que borre el dibujo borrando el lienzo y quitando todos los valores almacenados. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - delete_2018: Crea un botón que borre el dibujo borrando el lienzo y quitando todos los valores almacenados. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - delete_2019: Crea un botón que borre el dibujo borrando el lienzo y quitando todos los valores almacenados. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - draw at click point: Cambia tu programa para que los puntos se dibujen en la ubicación donde el ratón hace clic. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - draw at click point_2018: Cambia tu programa para que los puntos se dibujen en la ubicación donde el ratón hace clic. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - draw at click point_2019: Cambia tu programa para que los puntos se dibujen en la ubicación donde el ratón hace clic. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - freePlay: Extiende la funcionalidad de uno de los efectos, o crea uno completamente nuevo.(Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - freePlay_2018: Extiende la funcionalidad de uno de los efectos, o crea uno completamente nuevo.(Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - freePlay_2019: Extiende la funcionalidad de uno de los efectos, o crea uno completamente nuevo.(Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - introCanvas: Añade un lienzo a tu aplicación y configúralo para que sea el lienzo activo. Luego añade un punto grande a tu lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - introCanvas_2018: Añade un lienzo a tu aplicación y configúralo para que sea el lienzo activo. Luego añade un punto grande a tu lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - introCanvas_2019: Añade un lienzo a tu aplicación y configúralo para que sea el lienzo activo. Luego añade un punto grande a tu lienzo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - movementFunction fix Orig: Modifica el controlador de eventos de botón "Original" para que tenga en cuenta el movimiento del ratón. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - movementFunction fix Orig_2018: Modifica el controlador de eventos de botón "Original" para que tenga en cuenta el movimiento del ratón. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - movementFunction fix Orig_2019: Modifica el controlador de eventos de botón "Original" para que tenga en cuenta el movimiento del ratón. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - movementFunction: Escribe una función que tome el movimiento del ratón como entrada y genere un ancho de línea como salida. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - movementFunction_2018: Escribe una función que tome el movimiento del ratón como entrada y genere un ancho de línea como salida. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - movementFunction_2019: Escribe una función que tome el movimiento del ratón como entrada y genere un ancho de línea como salida. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawOriginal: Escribe una función que procese tu matriz y vuelva a dibujar los puntos como se presentaron originalmente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawOriginal_2018: Escribe una función que procese tu matriz y vuelva a dibujar los puntos como se presentaron originalmente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawOriginal_2019: Escribe una función que procese tu matriz y vuelva a dibujar los puntos como se presentaron originalmente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawRandom: Configure un controlador de botón y evento para la función aleatoria. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawRandom2: Escribe una función que procese tu arreglo y vuelva a dibujar los puntos con un tamaño aleatorio. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawRandom2_2018: Escribe una función que procese tu arreglo y vuelva a dibujar los puntos con un tamaño aleatorio. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawRandom2_2019: Escribe una función que procese tu arreglo y vuelva a dibujar los puntos con un tamaño aleatorio. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawRandom_2018: Configure un controlador de botón y evento para la función aleatoria. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - redrawRandom_2019: Configure un controlador de botón y evento para la función aleatoria. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - shiftKey: Añade una sentencia `si` a tu controlador de eventos para que los puntos solo se dibujen cuando se presione la tecla de cambio. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - shiftKey_2018: Añade una sentencia `si` a tu controlador de eventos para que los puntos solo se dibujen cuando se presione la tecla de cambio. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - shiftKey_2019: Añade una sentencia `si` a tu controlador de eventos para que los puntos solo se dibujen cuando se presione la tecla de cambio. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - sketch: Escribe un código que vuelva a dibujar tu imagen mediante el uso de un efecto de boceto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - sketch_2018: Escribe un código que vuelva a dibujar tu imagen mediante el uso de un efecto de boceto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - sketch_2019: Escribe un código que vuelva a dibujar tu imagen mediante el uso de un efecto de boceto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - sprayPaint: Actualiza el código de pintura de pulverización para que vuelva a dibujar tu imagen mediante el uso de varios puntos aleatorios en lugar de usar un anidado para bucle. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - sprayPaint_2018: Actualiza el código de pintura de pulverización para que vuelva a dibujar tu imagen mediante el uso de varios puntos aleatorios en lugar de usar un anidado para bucle. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - sprayPaint_2019: Actualiza el código de pintura de pulverización para que vuelva a dibujar tu imagen mediante el uso de varios puntos aleatorios en lugar de usar un anidado para bucle. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - transparentDots: Cambia los colores de tus puntos para que tengan un trazo completamente transparente y un relleno parcialmente transparente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - transparentDots_2018: Cambia los colores de tus puntos para que tengan un trazo completamente transparente y un relleno parcialmente transparente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - transparentDots_2019: Cambia los colores de tus puntos para que tengan un trazo completamente transparente y un relleno parcialmente transparente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - usingOffsetXY: Añade un comando console.log dentro de la función de tu controlador de eventos. Úsalo para mostrar el parámetro del evento. Haz clic en la pantalla para ver el contenido del parámetro del evento (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - usingOffsetXY_2018: Añade un comando console.log dentro de la función de tu controlador de eventos. Úsalo para mostrar el parámetro del evento. Haz clic en la pantalla para ver el contenido del parámetro del evento (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Canvas - usingOffsetXY_2019: Añade un comando console.log dentro de la función de tu controlador de eventos. Úsalo para mostrar el parámetro del evento. Haz clic en la pantalla para ver el contenido del parámetro del evento (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditional Basics - 6: Añade un setText después de la sentencia `si` a "No. Adivina de nuevo." (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Combine AND OR Simple: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Dormir hasta tarde!" si es el fin de semana y el usuario es un adolescente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Combine AND OR Simple_2018: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Dormir hasta tarde!" si es el fin de semana y el usuario es un adolescente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Combine AND OR Simple_2019: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Dormir hasta tarde!" si es el fin de semana y el usuario es un adolescente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Combine AND OR and NOT: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Hora de ir a la escuela!" si no es el fin de semana y el usuario es menor de 18 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_2018: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Hora de ir a la escuela!" si no es el fin de semana y el usuario es menor de 18 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_2019: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Hora de ir a la escuela!" si no es el fin de semana y el usuario es menor de 18 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Simple AND: Escribe una sentencia `si` que utilice Y para mostrar "Eres un adolescente." si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Simple AND_2018: Escribe una sentencia `si` que utilice Y para mostrar "Eres un adolescente." si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Simple AND_2019: Escribe una sentencia `si` que utilice Y para mostrar "Eres un adolescente." si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Simple OR: Escribe una sentencia `si` que utilice Y para mostrar "¡Es fin de semana!" si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Simple OR_2018: Escribe una sentencia `si` que utilice Y para mostrar "¡Es fin de semana!" si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Conditionals - Simple OR_2019: Escribe una sentencia `si` que utilice Y para mostrar "¡Es fin de semana!" si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Design Mode - Console Log: Actualiza los nombres de ID y los mensajes `console.log` para coincidir con el botón correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Design Mode - Layers and Delete: Arregla el diseño del juego de dardos. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Design Mode - Multi Screens 2: Crea una aplicación de 2 pantallas que pueda alternar entre una pantalla negra y una pantalla blanca mediante el uso de botones. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Design Mode - Multi Screens: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      CSPU5_U3 - Design Mode - WTF Console Log: Añade 3 mensajes de console.log y pruébalos. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Design Mode -Recreate Beyond Buttons: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Design Mode 1: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      CSPU5_U3 - Design Mode 1_2018: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      CSPU5_U3 - Design Mode 1_2019: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      CSPU5_U3 - Dice - Dropdown and Score: Añade predecir y anotar al juego de dados (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Dice - Dropdown with Strings: Añade un menú desplegable para el nivel de dificultad que escribe el nivel de dificultad en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Dice - If: Muestra diferentes imágenes gráficas para el número aleatorio generado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Dice - Nested: Usa sentencias `si` anidadas para hacer que el puntaje sea diferente para los diferentes niveles del juego. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Debug: Depura el orden de los condicionales para que realmente le diga al usuario cuando sus predicciones estén cerca. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Debug_2018: Depura el orden de los condicionales para que realmente le diga al usuario cuando sus predicciones estén cerca. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Debug_2019: Depura el orden de los condicionales para que realmente le diga al usuario cuando sus predicciones estén cerca. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Dropdown: Agrega un menú desplegable para sus suposiciones en lugar de entradaNúmero (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Else if: Añade una sentencia `si no-si` para decirle al usuario si sus predicciones son altas o bajas en lugar de simplemente incorrectas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Else if_2018: Añade una sentencia `si no-si` para decirle al usuario si sus predicciones son altas o bajas en lugar de simplemente incorrectas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Else if_2019: Añade una sentencia `si no-si` para decirle al usuario si sus predicciones son altas o bajas en lugar de simplemente incorrectas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - Else: Añade una sentencia `si no` para que el programa le diga al usuario cuando esté en lo correcto y cuando no lo esté. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - High Low - If: Añade código a la sentencia `si` que indique al usuario adivinado el número secreto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Add Image URLs: Añade URL de imagen a tu arreglo. Reemplaza el área de texto con una imagen y setText con setImageURL. ¡Luego prueba tu aplicación! (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Add Image URLs_2018: Añade URL de imagen a tu arreglo. Reemplaza el área de texto con una imagen y setText con setImageURL. ¡Luego prueba tu aplicación! (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Add Image URLs_2019: Añade URL de imagen a tu arreglo. Reemplaza el área de texto con una imagen y setText con setImageURL. ¡Luego prueba tu aplicación! (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Buttons and Keys: Haz que el programa responda de la misma manera para hacer clic en las imágenes de la pantalla y pulsar las teclas de arriba y abajo en el teclado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Buttons and Keys_2018: Haz que el programa responda de la misma manera para hacer clic en las imágenes de la pantalla y pulsar las teclas de arriba y abajo en el teclado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Buttons and Keys_2019: Haz que el programa responda de la misma manera para hacer clic en las imágenes de la pantalla y pulsar las teclas de arriba y abajo en el teclado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Demo App: Reproduce con el desplazamiento de imágenes. Presiona las flechas de izquierda y derecha para avanzar a través de las imágenes.
      CSPU5_U3 - Keys - Demo App_2018: Reproduce con el desplazamiento de imágenes. Presiona las flechas de izquierda y derecha para avanzar a través de las imágenes.
      CSPU5_U3 - Keys - Demo App_2019: Reproduce con el desplazamiento de imágenes. Presiona las flechas de izquierda y derecha para avanzar a través de las imágenes.
      CSPU5_U3 - Keys - Final Image Scroller: Actualiza el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Functions: Escribe las funciones hacerFlechaArriba y hacerFlechaAbajo y llama a las funciones en lugar de duplicar el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Functions_2018: Escribe las funciones hacerFlechaArriba y hacerFlechaAbajo y llama a las funciones en lugar de duplicar el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Functions_2019: Escribe las funciones hacerFlechaArriba y hacerFlechaAbajo y llama a las funciones en lugar de duplicar el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Key Up and Down: Prueba los eventos de tecla hacia arriba y tecla hacia abajo para ver en qué forma se diferencian de la pulsación de tecla. (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Keys - Key Up and Down_2018: Prueba los eventos de tecla hacia arriba y tecla hacia abajo para ver en qué forma se diferencian de la pulsación de tecla. (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Keys - Key Up and Down_2019: Prueba los eventos de tecla hacia arriba y tecla hacia abajo para ver en qué forma se diferencian de la pulsación de tecla. (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Keys - Multiple Keys: Reproduce un sonido diferente cuando se presione la flecha hacia abajo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Multiple Keys_2018: Reproduce un sonido diferente cuando se presione la flecha hacia abajo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Keys - Multiple Keys_2019: Reproduce un sonido diferente cuando se presione la flecha hacia abajo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops -  Complex Condition: Cambia la expresión booleana para el bucle `mientras` para que se detenga cuando ambos dados sean mayores o iguales a 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops -  Complex Condition_2018: Cambia la expresión booleana para el bucle `mientras` para que se detenga cuando ambos dados sean mayores o iguales a 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops -  Complex Condition_2019: Cambia la expresión booleana para el bucle `mientras` para que se detenga cuando ambos dados sean mayores o iguales a 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 1: Cambia la condición del bucle `mientras` para comprobar si el número de variable es menor a 90. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 10: Escribe un programa que simule la arrojada de dos dados. Arroje los dados repetidamente hasta que la suma de los dados sea o 7 u 11.
      CSPU5_U3 - Loops - 10_2018: Escribe un programa que simule la arrojada de dos dados. Arroje los dados repetidamente hasta que la suma de los dados sea o 7 u 11.
      CSPU5_U3 - Loops - 10_2019: Escribe un programa que simule la arrojada de dos dados. Arroje los dados repetidamente hasta que la suma de los dados sea o 7 u 11.
      CSPU5_U3 - Loops - 11: Arregle la condición para que siga arrojando el dado siempre que el valor no sea un 2 o un 3 en lugar de girar infinitamente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 11_2018: Arregle la condición para que siga arrojando el dado siempre que el valor no sea un 2 o un 3 en lugar de girar infinitamente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 11_2019: Arregle la condición para que siga arrojando el dado siempre que el valor no sea un 2 o un 3 en lugar de girar infinitamente. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 12: Cambia el código para que imprima la cadena "Hola" 5 veces. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 12_2018: Cambia el código para que imprima la cadena "Hola" 5 veces. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 12_2019: Cambia el código para que imprima la cadena "Hola" 5 veces. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 14: Cambia la condición del bucle para impedir el bucle infinito y la interrupción del conteo cuando que el conteo sea mayor de 30. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 14_2018: Cambia la condición del bucle para impedir el bucle infinito y la interrupción del conteo cuando que el conteo sea mayor de 30. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 14_2019: Cambia la condición del bucle para impedir el bucle infinito y la interrupción del conteo cuando que el conteo sea mayor de 30. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 15: Cuenta la cantidad de veces que la suma del dados es 12. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 15_2018: Cuenta la cantidad de veces que la suma del dados es 12. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 15_2019: Cuenta la cantidad de veces que la suma del dados es 12. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 1_2018: Cambia la condición del bucle `mientras` para comprobar si el número de variable es menor a 90. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 1_2019: Cambia la condición del bucle `mientras` para comprobar si el número de variable es menor a 90. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 2: Intenta crear un bucle infinito mediante el uso de !=, > y \<. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 2_2018: Intenta crear un bucle infinito mediante el uso de !=, > y \<. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 2_2019: Intenta crear un bucle infinito mediante el uso de !=, > y \<. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 3: Cambia la sentencia `si` a un bucle `mientras` para que el programa se ejecute hasta que lance un 6. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 3_2018: Cambia la sentencia `si` a un bucle `mientras` para que el programa se ejecute hasta que lance un 6. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 3_2019: Cambia la sentencia `si` a un bucle `mientras` para que el programa se ejecute hasta que lance un 6. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 4: Utiliza los Comandos de depuración para hacer una lista de todos los valores lanzados antes de un 6. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 4_2018: Utiliza los Comandos de depuración para hacer una lista de todos los valores lanzados antes de un 6. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 4_2019: Utiliza los Comandos de depuración para hacer una lista de todos los valores lanzados antes de un 6. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 5: Añade código dentro del bucle `mientras` que actualizará el número de variable para que la condición finalmente se convierta en falsa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 5_2018: Añade código dentro del bucle `mientras` que actualizará el número de variable para que la condición finalmente se convierta en falsa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 5_2019: Añade código dentro del bucle `mientras` que actualizará el número de variable para que la condición finalmente se convierta en falsa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 6: Corrija el problema para que el `bucle` se ejecute al menos una vez. Cambie el valor inicial del número a un valor falso como -1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 6_2018: Corrija el problema para que el `bucle` se ejecute al menos una vez. Cambie el valor inicial del número a un valor falso como -1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 6_2019: Corrija el problema para que el `bucle` se ejecute al menos una vez. Cambie el valor inicial del número a un valor falso como -1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 7: Sin añadir ninguna línea de código, vuelve a ordenar el código para que imprima todos los valores del número. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 7_2018: Sin añadir ninguna línea de código, vuelve a ordenar el código para que imprima todos los valores del número. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 7_2019: Sin añadir ninguna línea de código, vuelve a ordenar el código para que imprima todos los valores del número. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 8: Depura qué número no se está escribiendo y añade una sentencia de escritura para mostrar ese valor. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 8_2018: Depura qué número no se está escribiendo y añade una sentencia de escritura para mostrar ese valor. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 8_2019: Depura qué número no se está escribiendo y añade una sentencia de escritura para mostrar ese valor. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 9: Modifica la condición para que siga girando mientras ambos sean inferiores a 3. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 9_2018: Modifica la condición para que siga girando mientras ambos sean inferiores a 3. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - 9_2019: Modifica la condición para que siga girando mientras ambos sean inferiores a 3. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Minus Minus: Cambia el código para contar regresivamente de 10 a 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Minus Minus_2018: Cambia el código para contar regresivamente de 10 a 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Minus Minus_2019: Cambia el código para contar regresivamente de 10 a 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Plus Plus: Cambia el código para usar conteo++ en lugar de conteo = conteo + 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Plus Plus_2018: Cambia el código para usar conteo++ en lugar de conteo = conteo + 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Plus Plus_2019: Cambia el código para usar conteo++ en lugar de conteo = conteo + 1. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Typing in Console: Usa la consola para comprobar el valor final del número. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Typing in Console_2018: Usa la consola para comprobar el valor final del número. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - Typing in Console_2019: Usa la consola para comprobar el valor final del número. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - minus = operator: Actualiza el código para usar el operador -= para contar de 30 a 0 de a 3. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - minus = operator_2018: Actualiza el código para usar el operador -= para contar de 30 a 0 de a 3. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - minus = operator_2019: Actualiza el código para usar el operador -= para contar de 30 a 0 de a 3. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - plus and minus = operator: Actualiza el código para usar el operador +=. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - plus and minus = operator_2018: Actualiza el código para usar el operador +=. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops - plus and minus = operator_2019: Actualiza el código para usar el operador +=. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Add 5: Añade 5 a todos los valores en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Add 5_2018: Añade 5 a todos los valores en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Add 5_2019: Añade 5 a todos los valores en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Counting Times: Cuenta la cantidad de veces que aparece el 5 en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Counting Times_2018: Cuenta la cantidad de veces que aparece el 5 en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Counting Times_2019: Cuenta la cantidad de veces que aparece el 5 en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Divid by 2: Divide cada valor por 2 en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Divid by 2_2018: Divide cada valor por 2 en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Divid by 2_2019: Divide cada valor por 2 en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Find Min: Completa la función encontrarValMín para encontrar y mostrar el valor más pequeño en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Find Min_2018: Completa la función encontrarValMín para encontrar y mostrar el valor más pequeño en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Find Min_2019: Completa la función encontrarValMín para encontrar y mostrar el valor más pequeño en un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - General Search Param: Añade un segundo parámetro a la función de búsqueda para el valor que se buscará.  (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - General Search Param_2018: Añade un segundo parámetro a la función de búsqueda para el valor que se buscará.  (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - General Search Param_2019: Añade un segundo parámetro a la función de búsqueda para el valor que se buscará.  (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Intro For Loop: Añade un bucle `para` con un console.log dentro y prueba las 3 piezas del bucle `para`. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Intro For Loop_2018: Añade un bucle `para` con un console.log dentro y prueba las 3 piezas del bucle `para`. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Intro For Loop_2019: Añade un bucle `para` con un console.log dentro y prueba las 3 piezas del bucle `para`. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Linear Search: Visita cada elemento del arreglo y muestra "verdadero" si el valor es 5, y "falso" si ocurre lo contrario. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Linear Search_2018: Visita cada elemento del arreglo y muestra "verdadero" si el valor es 5, y "falso" si ocurre lo contrario. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Linear Search_2019: Visita cada elemento del arreglo y muestra "verdadero" si el valor es 5, y "falso" si ocurre lo contrario. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Loop Array If: Usa una sentencia `si` para mostrar los valores de un arreglo que son mayores a 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Loop Array If_2018: Usa una sentencia `si` para mostrar los valores de un arreglo que son mayores a 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Loop Array If_2019: Usa una sentencia `si` para mostrar los valores de un arreglo que son mayores a 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list param_2018: Crea una función que tome un parámetro de lista y escriba si la lista contiene 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list param_2019: Crea una función que tome un parámetro de lista y escriba si la lista contiene 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list parameter: Crea una función que tome un parámetro de lista y escriba si la lista contiene 5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function: Mueve el código que busca la lista de 5 en una función llamada "búsqueda". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function_2018: Mueve el código que busca la lista de 5 en una función llamada "búsqueda". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function_2019: Mueve el código que busca la lista de 5 en una función llamada "búsqueda". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Print Array: Usa un bucle `para` para escribir todos los valores de un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Print Array_2018: Usa un bucle `para` para escribir todos los valores de un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Print Array_2019: Usa un bucle `para` para escribir todos los valores de un arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Printing Single True: Procesa el arreglo y muestra una solo "verdadero" si el arreglo contiene un 5 o un solo "falso" si no lo hace. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Printing Single True_2018: Procesa el arreglo y muestra una solo "verdadero" si el arreglo contiene un 5 o un solo "falso" si no lo hace. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Printing Single True_2019: Procesa el arreglo y muestra una solo "verdadero" si el arreglo contiene un 5 o un solo "falso" si no lo hace. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Search with Boolean Var: Haz una variable booleana para usar como un indicador para mantener un seguimiento de si hay 5 en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Search with Boolean Var_2018: Haz una variable booleana para usar como un indicador para mantener un seguimiento de si hay 5 en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Loops And Arrays - Search with Boolean Var_2019: Haz una variable booleana para usar como un indicador para mantener un seguimiento de si hay 5 en el arreglo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Movie Bot - Multiple If Sequences: Añade otro conjunto de sentencias `si`, `sino si` y `si no` dentro de la pregunta si la sentencia para comprobar las palabras clave para las calificaciones de película (G, PG, PG-13 y R). (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Movie Bot - Nested Motivation: Añade un conjunto separado de sentencias `si` para comprobar un "?" en la entrada. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Movie Bot - When Multiple If Statements: Añade una sentencia `si` y `si no` que compruebe "por favor" y "gracias". (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Movie Bot - toLowerCase: Utilice el comando de abajo para cambiar todos los datos de usuario en minúsculas después de que lo introduzcan. (Haga clic para ver las instrucciones completas)
      CSPU5_U3 - Practice Create Performance Task: Diseña e implementa tu práctica Crear tarea de rendimiento. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - constrainTurtle: Usa la restricción en esta aplicación simple para evitar que la tortuga se mueva fuera de la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - constrainTurtle_2018: Usa la restricción en esta aplicación simple para evitar que la tortuga se mueva fuera de la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - constrainTurtle_2019: Usa la restricción en esta aplicación simple para evitar que la tortuga se mueva fuera de la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - debuggingConstrain: Corrige el error en la restricción para que devuelva el valor apropiado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - debuggingConstrain_2018: Corrige el error en la restricción para que devuelva el valor apropiado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - debuggingConstrain_2019: Corrige el error en la restricción para que devuelva el valor apropiado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - debuggingMaxVal: Corrige el error en Valmáx para que informe el valor máximo apropiado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - debuggingMaxVal_2018: Corrige el error en Valmáx para que informe el valor máximo apropiado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - debuggingMaxVal_2019: Corrige el error en Valmáx para que informe el valor máximo apropiado. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - useMinVal: Llama a Valmín dentro de la sentencia console.log para calcular el mínimo de dos valores. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - useMinVal_2018: Llama a Valmín dentro de la sentencia console.log para calcular el mínimo de dos valores. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - useMinVal_2019: Llama a Valmín dentro de la sentencia console.log para calcular el mínimo de dos valores. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - wrapTurtle: Escribe envoltura en esta sencilla aplicación para permitir que la tortuga "envuelva" al otro lado de la pantalla cuando se apaga. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - wrapTurtle_2018: Escribe envoltura en esta sencilla aplicación para permitir que la tortuga "envuelva" al otro lado de la pantalla cuando se apaga. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - wrapTurtle_2019: Escribe envoltura en esta sencilla aplicación para permitir que la tortuga "envuelva" al otro lado de la pantalla cuando se apaga. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - writeMaxVal: Escribe la función Valmáx y luego úsala dentro de la sentencia console.org para calcular el máximo de dos valores. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - writeMaxVal_2018: Escribe la función Valmáx y luego úsala dentro de la sentencia console.org para calcular el máximo de dos valores. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Return Values - writeMaxVal_2019: Escribe la función Valmáx y luego úsala dentro de la sentencia console.org para calcular el máximo de dos valores. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 1: Usa un bucle `mientras` para "lanzar la moneda 10 veces" y escribe los valores en la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 1_2018: Usa un bucle `mientras` para "lanzar la moneda 10 veces" y escribe los valores en la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 1_2019: Usa un bucle `mientras` para "lanzar la moneda 10 veces" y escribe los valores en la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 2.1: Cambia tu condición de bucle para que la simulación se ejecute hasta que haya 5 caras lanzadas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 2.1_2018: Cambia tu condición de bucle para que la simulación se ejecute hasta que haya 5 caras lanzadas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 2.1_2019: Cambia tu condición de bucle para que la simulación se ejecute hasta que haya 5 caras lanzadas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 2.5: "¡Ejecuta tu simulación para obtener las 10.000 caras completas! ¡Cuánto tiempo tomó? (Haz clic para ver las instrucciones completas)"
      CSPU5_U3 - Simulation - 2.5_2018: "¡Ejecuta tu simulación para obtener las 10.000 caras completas! ¡Cuánto tiempo tomó? (Haz clic para ver las instrucciones completas)"
      CSPU5_U3 - Simulation - 2.5_2019: "¡Ejecuta tu simulación para obtener las 10.000 caras completas! ¡Cuánto tiempo tomó? (Haz clic para ver las instrucciones completas)"
      CSPU5_U3 - Simulation - 2: Lleva un registro de cuántas caras (1) tu programa genera e imprime los resultados en la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 2_2018: Lleva un registro de cuántas caras (1) tu programa genera e imprime los resultados en la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 2_2019: Lleva un registro de cuántas caras (1) tu programa genera e imprime los resultados en la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 3: Añade funcionalidad que cuente cuántas caras seguidas se lanzan. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 3_2018: Añade funcionalidad que cuente cuántas caras seguidas se lanzan. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 3_2019: Añade funcionalidad que cuente cuántas caras seguidas se lanzan. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 4: Actualiza la condición de tu bucle mientras que la moneda gire hasta que haya tres caras seguidas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 4_2018: Actualiza la condición de tu bucle mientras que la moneda gire hasta que haya tres caras seguidas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 4_2019: Actualiza la condición de tu bucle mientras que la moneda gire hasta que haya tres caras seguidas. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 5: Cambia tu bucle `mientras` para ejecutar hasta que recibas una racha de 12 caras. ¿Cuántas lanzadas tomó? (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 5_2018: Cambia tu bucle `mientras` para ejecutar hasta que recibas una racha de 12 caras. ¿Cuántas lanzadas tomó? (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 5_2019: Cambia tu bucle `mientras` para ejecutar hasta que recibas una racha de 12 caras. ¿Cuántas lanzadas tomó? (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 6: Sigue añadiendo a tu simulación. ¿Qué quieres explorar más adelante? (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 6_2018: Sigue añadiendo a tu simulación. ¿Qué quieres explorar más adelante? (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Simulation - 6_2019: Sigue añadiendo a tu simulación. ¿Qué quieres explorar más adelante? (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - User Input - Save getText To Variable: Guarda la edad y el nombre del usuario en variables (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - User Input - Save getText To Variable_2018: Guarda la edad y el nombre del usuario en variables (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - User Input - Save getText To Variable_2019: Guarda la edad y el nombre del usuario en variables (Haz clic para ver las instrucciones completas)
      CSPU5_U3 - Variables - Set to Expression with Other Variables: 'Escribe una expresión que calcule la puntuación total del jugador y la almacene en la variable puntajeTotal. El cálculo es: los puntos del jugador multiplicado por las vidas dividido por el tiempo total. (Haz clic para ver las instrucciones completas)'
      CSPU5_U3 - Variables - Set to Expression with Other Variables_2018: 'Escribe una expresión que calcule la puntuación total del jugador y la almacene en la variable puntajeTotal. El cálculo es: los puntos del jugador multiplicado por las vidas dividido por el tiempo total. (Haz clic para ver las instrucciones completas)'
      CSPU5_U3 - Variables - Set to Expression with Other Variables_2019: 'Escribe una expresión que calcule la puntuación total del jugador y la almacene en la variable puntajeTotal. El cálculo es: los puntos del jugador multiplicado por las vidas dividido por el tiempo total. (Haz clic para ver las instrucciones completas)'
      CSPU5_U3 - Variables - Set to Expression: Prueba las nuevas expresiones. (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Variables - Set to Expression_2018: Prueba las nuevas expresiones. (Haz clic para ver instrucciones completas)
      CSPU5_U3 - Variables - Set to Expression_2019: Prueba las nuevas expresiones. (Haz clic para ver instrucciones completas)
      CSPU5_U3 Digital Assistant Design: Elige un tema para tu Asistente Digital y crea el diseño básico con una entrada de texto y área de texto. (Haz clic para mostrar las instrucciones completas)
      CSPU5_U3 Digital Assistant Set Text: Haz que tu asistente digital repita lo que el usuario escribe e incluye una respuesta agrupada. (Haz clic para ver las instrucciones completas)
      CSPU5_U3 Digital Assistant Target: "¡Prueba una demostración del Asistente Digital!"
      CSPU5_U3 full clicker demo: Juego de clics - ¡Pruébalo!
      CSPU5_U3 full clicker demo_2018: Juego de clics - ¡Pruébalo!
      CSPU5_U3 full clicker demo_2019: Juego de clics - ¡Pruébalo!
      CSPU5_U3- Variables - Create And Assign: En una línea, añade una variable llamada "vidas" y asígnale el valor 3. Escríbelo en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3- Variables - Create And Assign_2018: En una línea, añade una variable llamada "vidas" y asígnale el valor 3. Escríbelo en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3- Variables - Create And Assign_2019: En una línea, añade una variable llamada "vidas" y asígnale el valor 3. Escríbelo en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3- Variables - Text Mode: 1.  Cambia al modo de texto y las instrucciones de tipo; 2. Arrastra bloques hacia el modo de texto; 3. Experimenta con la finalización del código
      CSPU5_U3- Variables - Text Mode_2018: 1.  Cambia al modo de texto y las instrucciones de tipo; 2. Arrastra bloques hacia el modo de texto; 3. Experimenta con la finalización del código
      CSPU5_U3- Variables - Text Mode_2019: 1.  Cambia al modo de texto y las instrucciones de tipo; 2. Arrastra bloques hacia el modo de texto; 3. Experimenta con la finalización del código
      CSPU5_U3-Design Mode-ID and Event Handler: Añade un controlador de eventos para el botón mediante el enlace "Insertar y mostrar" en la pestaña Eventos de Modo Diseño. (Haz clic para ver las instrucciones completas).
      CSPU5_U3-Design Mode-Image: Usa el Modo Diseño para recrear el juego "Chaser" de la última lección. (Haz clic para ver las instrucciones completas)
      CSPU5_U313 Two Buttons with Ids: Haz una predicción de lo que sucederá. Una vez que hayas hecho una predicción, ejecuta el código para ver lo que sucede. (Haz clic para ver las instrucciones completas)
      CSPU5_U313 drag Two Buttons: Ejecuta un programa con dos botones que tengan la mismo ID para ver el mensaje de advertencia en la consola. Cambia los ID para hacer que el programa se ejecute sin recibir un mensaje de advertencia.
      CSPU5_U3L13 - Debug Id Problem: Elige un ID descriptivo y significativo para mejorar el botón. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L13 - Debugging 1: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      CSPU5_U3L13 - Debugging 2: Ordena correctamente los comandos de los botones y los gestores de eventos para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L13 - Debugging 3: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L13 - Debugging 3_2018: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L13 - Debugging 3_2019: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L13 - Debugging IDs case sensitive: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      CSPU5_U3L13 - Debugging IDs case sensitive_2018: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      CSPU5_U3L13 - Debugging IDs case sensitive_2019: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      CSPU5_U3L13 - Project: Crea tu aplicación multipantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L13 - Turtle Driver Project: Crea un "controlador de tortuga" que incluye botones para hacer avanzar a la tortuga y girarla a la izquierda y a la derecha. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L13 - Turtle move with button: Agrega un botón que mueva la tortuga al hacer clic. (Clic para ver las Instrucciones completas)
      CSPU5_U3L13 eventsDetails: Añade un controlar de eventos al botón para mover la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - Assigning Random Value: Escribe un programa que simula el lanzamiento de dos dados e informa sus valores individuales, además de la suma. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - Assigning Random Value_2018: Escribe un programa que simula el lanzamiento de dos dados e informa sus valores individuales, además de la suma. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - Assigning Random Value_2019: Escribe un programa que simula el lanzamiento de dos dados e informa sus valores individuales, además de la suma. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - Mini Calculator embed: Se te pedirán dos números; uno justo después del otro. Mira lo que sucede. Introduce diferentes números hasta que entiendas la idea.
      CSPU5_U3L14 - Mini Calculator embed_2018: Se te pedirán dos números; uno justo después del otro. Mira lo que sucede. Introduce diferentes números hasta que entiendas la idea.
      CSPU5_U3L14 - Mini Calculator embed_2019: Se te pedirán dos números; uno justo después del otro. Mira lo que sucede. Introduce diferentes números hasta que entiendas la idea.
      CSPU5_U3L14 - User Input Division calculator: Escribe un programa que actúe como una calculadora simple. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - User Input Division calculator_2018: Escribe un programa que actúe como una calculadora simple. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - User Input Division calculator_2019: Escribe un programa que actúe como una calculadora simple. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - Variable ReAssignment pt2: Rastrea el código y haz una predicción de lo que piensas que se escribirá en la consola. Luego añade una sentencia console.log al final del programa para ver el último valor de algúnNúm para ver si tu predicción completa es correcta. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - Variable ReAssignment pt2_2018: Rastrea el código y haz una predicción de lo que piensas que se escribirá en la consola. Luego añade una sentencia console.log al final del programa para ver el último valor de algúnNúm para ver si tu predicción completa es correcta. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - Variable ReAssignment pt2_2019: Rastrea el código y haz una predicción de lo que piensas que se escribirá en la consola. Luego añade una sentencia console.log al final del programa para ver el último valor de algúnNúm para ver si tu predicción completa es correcta. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - concatenate simple: Modifica la sentencia de escritura en la línea 3 para combinar texto y variables para que la aplicación muestre una sola línea de texto que muestre las vidas y la puntuación del jugador. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - concatenate simple_2018: Modifica la sentencia de escritura en la línea 3 para combinar texto y variables para que la aplicación muestre una sola línea de texto que muestre las vidas y la puntuación del jugador. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - concatenate simple_2019: Modifica la sentencia de escritura en la línea 3 para combinar texto y variables para que la aplicación muestre una sola línea de texto que muestre las vidas y la puntuación del jugador. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge1: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge1_2018: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge1_2019: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge2: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge2_2018: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge2_2019: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge3: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge3_2018: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge3_2019: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge4: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge4_2018: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge4_2019: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge5: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge5_2018: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge5_2019: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge6: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge6_2018: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L14 - moving memory challenge6_2019: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Add reset button to UpDown app: Añade código para que hacer clic en el botón de "comenzar de nuevo" restablezca el juego y te envíe de vuelta a la pantalla principal. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Add reset button to UpDown app_2018: Añade código para que hacer clic en el botón de "comenzar de nuevo" restablezca el juego y te envíe de vuelta a la pantalla principal. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Add reset button to UpDown app_2019: Añade código para que hacer clic en el botón de "comenzar de nuevo" restablezca el juego y te envíe de vuelta a la pantalla principal. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - DEMO up down count practice app: Prueba la aplicación de demostración. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - DEMO up down count practice app_2018: Prueba la aplicación de demostración. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - DEMO up down count practice app_2019: Prueba la aplicación de demostración. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debug forget to update var on reset in UpDown app: Ejecuta la aplicación y haz clic en el botón arriba o abajo hasta llegar a la pantalla de final de juego. Haz clic en 'Comenzar de nuevo' y prueba la aplicación de nuevo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_2018: Ejecuta la aplicación y haz clic en el botón arriba o abajo hasta llegar a la pantalla de final de juego. Haz clic en 'Comenzar de nuevo' y prueba la aplicación de nuevo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_2019: Ejecuta la aplicación y haz clic en el botón arriba o abajo hasta llegar a la pantalla de final de juego. Haz clic en 'Comenzar de nuevo' y prueba la aplicación de nuevo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debug if never triggers in UpDown app: Ejecuta la aplicación y usa las flechas arriba y abajo para intentar alcanzar la pantalla de final de juego. ¡No puedes! Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debug if never triggers in UpDown app_2018: Ejecuta la aplicación y usa las flechas arriba y abajo para intentar alcanzar la pantalla de final de juego. ¡No puedes! Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debug if never triggers in UpDown app_2019: Ejecuta la aplicación y usa las flechas arriba y abajo para intentar alcanzar la pantalla de final de juego. ¡No puedes! Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debugging Simple If-statements =v==: Ejecuta la aplicación y haz clic en el botón arriba. Luego reinicia y ejecuta de nuevo, y haz clic en el botón abajo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debugging Simple If-statements =v==_2018: Ejecuta la aplicación y haz clic en el botón arriba. Luego reinicia y ejecuta de nuevo, y haz clic en el botón abajo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Debugging Simple If-statements =v==_2019: Ejecuta la aplicación y haz clic en el botón arriba. Luego reinicia y ejecuta de nuevo, y haz clic en el botón abajo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Simple If-statements in UpDown App: Añade una sentencia `si` para que la aplicación cambie las pantallas cuando el conteo alcance -5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Simple If-statements in UpDown App_2018: Añade una sentencia `si` para que la aplicación cambie las pantallas cuando el conteo alcance -5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - Simple If-statements in UpDown App_2019: Añade una sentencia `si` para que la aplicación cambie las pantallas cuando el conteo alcance -5. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - add code to make count down work: Escribe código para hacer que la flecha abajo funcione como se esperaba. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - add code to make count down work_2018: Escribe código para hacer que la flecha abajo funcione como se esperaba. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - add code to make count down work_2019: Escribe código para hacer que la flecha abajo funcione como se esperaba. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug forget to set text: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug forget to set text_2018: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug forget to set text_2019: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug logic error wrong update: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug logic error wrong update_2018: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug logic error wrong update_2019: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug var not created globally: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug var not created globally_2018: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - count upDown bug var not created globally_2019: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - global var example count up: Mira el código de esta aplicación y observa cómo funciona para actualizar la variable de conteo cuando se hace clic en la flecha arriba. (Haz clic para ver las instrucciones completas).
      CSPU5_U3L15 - global var example count up_2018: Mira el código de esta aplicación y observa cómo funciona para actualizar la variable de conteo cuando se hace clic en la flecha arriba. (Haz clic para ver las instrucciones completas).
      CSPU5_U3L15 - global var example count up_2019: Mira el código de esta aplicación y observa cómo funciona para actualizar la variable de conteo cuando se hace clic en la flecha arriba. (Haz clic para ver las instrucciones completas).
      CSPU5_U3L15 - mini clicker update score: Añade código para actualizar la puntuación cuando se haga clic en la manzana. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - mini clicker update score_2018: Añade código para actualizar la puntuación cuando se haga clic en la manzana. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - mini clicker update score_2019: Añade código para actualizar la puntuación cuando se haga clic en la manzana. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - practice with setText: Utiliza configurarTexto para completar el controlador de eventos de clic para la flecha de abajo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - practice with setText_2018: Utiliza configurarTexto para completar el controlador de eventos de clic para la flecha de abajo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - practice with setText_2019: Utiliza configurarTexto para completar el controlador de eventos de clic para la flecha de abajo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - variable scoping problem debugging: Ve si puedes averiguar por qué el código ya no está funcionando. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - variable scoping problem debugging_2018: Ve si puedes averiguar por qué el código ya no está funcionando. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 - variable scoping problem debugging_2019: Ve si puedes averiguar por qué el código ya no está funcionando. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 click add lives: Añade vidas al juego de clics que decrece en 1 cuando se haga clic en la imagen de fondo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 click add lives_2018: Añade vidas al juego de clics que decrece en 1 cuando se haga clic en la imagen de fondo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 click add lives_2019: Añade vidas al juego de clics que decrece en 1 cuando se haga clic en la imagen de fondo. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 full clicker app: Completa tu juego de clics. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 full clicker app_2018: Completa tu juego de clics. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L15 full clicker app_2019: Completa tu juego de clics. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - challenge say hi app: Usa el evento 'cambio' para escribir un saludo al usuario cuando presionen 'ingresar' en la entrada de texto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - chaserApp: Crea tu propio juego "Chaser". (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - chooseImages: Reemplaza la imagen en tu aplicación con uno de tus imágenes propias. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - doubleQuotes: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - doubleQuotes_2018: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - doubleQuotes_2019: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - intro getText: Añade un gestor de eventos al botón Enviar para que cuando el botón sea pulsado aparezca el nombre introducido en el cuadro de texto a la consola. Utiliza obtenerTexto para obtener el valor fuera del cuadro de texto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - intro getText_2018: Añade un gestor de eventos al botón Enviar para que cuando el botón sea pulsado aparezca el nombre introducido en el cuadro de texto a la consola. Utiliza obtenerTexto para obtener el valor fuera del cuadro de texto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - intro getText_2019: Añade un gestor de eventos al botón Enviar para que cuando el botón sea pulsado aparezca el nombre introducido en el cuadro de texto a la consola. Utiliza obtenerTexto para obtener el valor fuera del cuadro de texto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - introSetPosition: Mueve los botones al fondo de la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - introStrings: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - introStrings_2018: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - introStrings_2019: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - newEventTypes: Experimenta con diferentes tipos de eventos y selecciona el que piensas que es el mejor. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - outputWithTextArea: Escribe un mensaje al 'textoÁrea' (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - outputWithTextArea_2018: Escribe un mensaje al 'textoÁrea' (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - outputWithTextArea_2019: Escribe un mensaje al 'textoÁrea' (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - setPosition to fixed location: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_U3L16 - setPosition to move button: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_U3L16 - setPosition to move button_2018: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_U3L16 - setPosition to move button_2019: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_U3L16 - singleSetPosition: Mueve el botón a la mitad de la pantalla. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - text labels: Usa el comando textoEtiqueta para reemplazar el botón de tu programa con una etiqueta de texto. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - textInput getText write: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - textInput getText write_2018: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - textInput getText write_2019: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - toUpper: Haz que el nombre del usuario aparezca en mayúscula. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - toUpper_2018: Haz que el nombre del usuario aparezca en mayúscula. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - toUpper_2019: Haz que el nombre del usuario aparezca en mayúscula. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 - use images: Usa el comando de imagen para reemplazar la etiqueta del texto de tu programa con una imagen. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L16 Mad Lib Clear Input: 'Borrar el texto anterior del usuario cuando se haga clic en el botón Reproducir de nuevo. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib Clear Input_2018: 'Borrar el texto anterior del usuario cuando se haga clic en el botón Reproducir de nuevo. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib Clear Input_2019: 'Borrar el texto anterior del usuario cuando se haga clic en el botón Reproducir de nuevo. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib Demo: Demo de Mad Libs - ¡Pruébalo!
      CSPU5_U3L16 Mad Lib Demo_2018: Demo de Mad Libs - ¡Pruébalo!
      CSPU5_U3L16 Mad Lib Demo_2019: Demo de Mad Libs - ¡Pruébalo!
      CSPU5_U3L16 Mad Lib Student Setup: 'Volver a Mad Libs: Para empezar, configura las dos pantallas para tu aplicación Mad Libs. (Haz clic para mostrar las instrucciones completas)'
      CSPU5_U3L16 Mad Lib Student Setup_2018: 'Volver a Mad Libs: Para empezar, configura las dos pantallas para tu aplicación Mad Libs. (Haz clic para mostrar las instrucciones completas)'
      CSPU5_U3L16 Mad Lib Student Setup_2019: 'Volver a Mad Libs: Para empezar, configura las dos pantallas para tu aplicación Mad Libs. (Haz clic para mostrar las instrucciones completas)'
      CSPU5_U3L16 Mad Lib getText: 'Antes de establecer el área de texto con tu esquema de Mad Libs, obtén el texto del usuario e incorpora sus respuestas. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib getText_2018: 'Antes de establecer el área de texto con tu esquema de Mad Libs, obtén el texto del usuario e incorpora sus respuestas. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib getText_2019: 'Antes de establecer el área de texto con tu esquema de Mad Libs, obtén el texto del usuario e incorpora sus respuestas. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib setText: 'Cuando se haga clic en el botón "Siguiente", configura el área de texto para tener el diseño principal de tu "Lista de procedimientos de Mad Libs" (sin la entrada del usuario). (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib setText_2018: 'Cuando se haga clic en el botón "Siguiente", configura el área de texto para tener el diseño principal de tu "Lista de procedimientos de Mad Libs" (sin la entrada del usuario). (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib setText_2019: 'Cuando se haga clic en el botón "Siguiente", configura el área de texto para tener el diseño principal de tu "Lista de procedimientos de Mad Libs" (sin la entrada del usuario). (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib toUpper: 'Aplica las funciones de cadena de paraMayúscula y paraMinúscula al texto del usuario. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib toUpper_2018: 'Aplica las funciones de cadena de paraMayúscula y paraMinúscula al texto del usuario. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L16 Mad Lib toUpper_2019: 'Aplica las funciones de cadena de paraMayúscula y paraMinúscula al texto del usuario. (Haz clic para ver las instrucciones completas) '
      CSPU5_U3L18 comparison operators: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L18 comparison operators_2018: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L18 comparison operators_2019: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - fix the var name syntax error v2: Corrige el error y logra que imprima el valor de ambas variables. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - fix the var name syntax error v2_2018: Corrige el error y logra que imprima el valor de ambas variables. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - fix the var name syntax error v2_2019: Corrige el error y logra que imprima el valor de ambas variables. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - test reassignment of two vars: Haz una predicción del valor de a y b. Agrega sentencias console.log para averiguar el valor real de a y b. (Haz clic para obtener las instrucciones completas)
      CSPU5_U3L19 - test reassignment of two vars_2018: Haz una predicción del valor de a y b. Agrega sentencias console.log para averiguar el valor real de a y b. (Haz clic para obtener las instrucciones completas)
      CSPU5_U3L19 - test reassignment of two vars_2019: Haz una predicción del valor de a y b. Agrega sentencias console.log para averiguar el valor real de a y b. (Haz clic para obtener las instrucciones completas)
      CSPU5_U3L19 - three basic ops of variables: Añade otra variable llamada "vidas" y configura el valor a 3. Escribe el valor de la variable a la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - three basic ops of variables_2018: Añade otra variable llamada "vidas" y configura el valor a 3. Escribe el valor de la variable a la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - three basic ops of variables_2019: Añade otra variable llamada "vidas" y configura el valor a 3. Escribe el valor de la variable a la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - variable reassignment challenge pt2: Haz una predicción sobre los valores finales de a, b y c. Luego usa console.log para ver si has comprendido. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - variable reassignment challenge pt2_2018: Haz una predicción sobre los valores finales de a, b y c. Luego usa console.log para ver si has comprendido. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - variable reassignment challenge pt2_2019: Haz una predicción sobre los valores finales de a, b y c. Luego usa console.log para ver si has comprendido. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - write var and string with same name v2: Arregla el código para que los valores de ambas variables se escriban en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - write var and string with same name v2_2018: Arregla el código para que los valores de ambas variables se escriban en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L19 - write var and string with same name v2_2019: Arregla el código para que los valores de ambas variables se escriban en la consola. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L23 Chatbot Conditionals 1: Añade sentencias `si`, `sino si` y `si no` para detectar los géneros de película Comedia, Romance, Acción y Horror. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L24 Chatbot Basic Conditionals: Revisa la descripción del proyecto para las instrucciones. (Haga clic para ver las instrucciones completas.)
      CSPU5_U3L24 Nested Conditionals 1: Cambia todas las expresiones booleanas para usar `incluye` en lugar de ==. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L24 Nested Conditionals 2: 'Anida las sentencias `si` de género de película dentro de las sentencias `si` para comprobar un ? en la entrada. '
      CSPU5_U3L24 introIncludes: Usa el comando `incluye` para practicar. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L25 - drag out key event: Configura un gestor de eventos para responder a eventos de pulsación de teclas y mostrar event.key en la consola. Pulsa las teclas del teclado para ver qué sucede. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L25 - drag out key event_2018: Configura un gestor de eventos para responder a eventos de pulsación de teclas y mostrar event.key en la consola. Pulsa las teclas del teclado para ver qué sucede. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L25 - drag out key event_2019: Configura un gestor de eventos para responder a eventos de pulsación de teclas y mostrar event.key en la consola. Pulsa las teclas del teclado para ver qué sucede. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L25 - play sound when up key: Cambia el código para que el sonido sólo se pueda reproducir cuando se presiona la flecha arriba. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L25 - play sound when up key_2018: Cambia el código para que el sonido sólo se pueda reproducir cuando se presiona la flecha arriba. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L25 - play sound when up key_2019: Cambia el código para que el sonido sólo se pueda reproducir cuando se presiona la flecha arriba. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L26 AND operator: Actualiza las sentencias `si` de género y calificación para dar solo una sugerencia de película a la vez. (Haz clic para ver las instrucciones completas)
      CSPU5_U3L26 OR operator: Actualiza la sentencia `si` para usar una O para comprobar un "?", además de quién, dónde, cuándo, por qué, cómo en la entrada del usuario. (Haz clic para ver las instrucciones completas)
      CSPU5_addDescriptiveIDsToTurtleDriver: Elige un ID descriptivo y significativo para mejorar el botón. (Haz clic para ver las instrucciones completas)
      CSPU5_addDescriptiveIDsToTurtleDriver_2018: Elige un ID descriptivo y significativo para mejorar el botón. (Haz clic para ver las instrucciones completas)
      CSPU5_addDescriptiveIDsToTurtleDriver_2019: Elige un ID descriptivo y significativo para mejorar el botón. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if - DIY secret number: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if - DIY secret number_2018: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if - DIY secret number_2019: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if - check driving age: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if - check driving age_2018: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if - check driving age_2019: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if - voting examle: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if-else - driving age: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if-else - driving age_2018: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_basic if-else - driving age_2019: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      CSPU5_clickerGame_v1_template: Crea tu propia aplicación "Chaser". (Haz clic para ver las instrucciones completas)
      CSPU5_clickerGame_v1_template_2018: Crea tu propia aplicación "Chaser". (Haz clic para ver las instrucciones completas)
      CSPU5_clickerGame_v1_template_2019: Crea tu propia aplicación "Chaser". (Haz clic para ver las instrucciones completas)
      CSPU5_moveTurtleOnButtonClick: Añade un controlar de eventos al botón para mover la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      CSPU5_moveTurtleOnButtonClick_2018: Añade un controlar de eventos al botón para mover la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      CSPU5_moveTurtleOnButtonClick_2019: Añade un controlar de eventos al botón para mover la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      CSPU5_playWithEventTypes: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSPU5_playWithEventTypes_2018: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSPU5_playWithEventTypes_2019: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      CSPU5_setPosition to fixed location: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_setPosition to fixed location_2018: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_setPosition to fixed location_2019: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      CSPU5_turtleDriver_add2ndButton: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      CSPU5_turtleDriver_add2ndButton_2018: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      CSPU5_turtleDriver_add2ndButton_2019: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      Calc Circles of Eval 1 (copy 1): Convierte esta sentencia en \<some\_shape> de evaluación.
      Calc Circles of Eval 1: Cada operador matemático (+, -, \*, /, etc.) puede ser representado por un Bloque de Evaluación en código. Cambia el Bloque de Evaluación para coincidir con la expresión.
      Calc Circles of Eval 2 (copy 1): Convierte esta sentencia en \<some\_shape> de evaluación.
      Calc Circles of Eval 6: Completa los Bloques de Evaluación para coincidir con esta expresión.
      Calc Define Funcs 1 (copy 1): Ahora veamos algunas funciones algebraicas más. Aquí hay una función traducida de la simple función algebraic f(x) = x + 1. ¿Qué esperarías que esta función produjera si se proporciona una entrada de 15?
      Calc Define Funcs 1: Ahora veamos algunas funciones algebraicas más. Aquí hay una función traducida de la simple función algebraic f(x) = x + 1. ¿Qué esperarías que esta función produjera si se proporciona una entrada de 15?
      Calc Define Funcs 2: Escribe una función f que toma un parámetro x y devuelve x - 10. Usa f(15) para evaluar tu función.
      Calc Define Funcs 3: No tenemos que llamar a nuestra función f cada vez; crea una función llamada por-diez que debería tomar un parámetro x y devolver x \* 10. Una vez que hayas creado la función, ejecuta por-diez (50).
      Calc Define Funcs 4: Escribe una función llamada mitad que toma un número x y devuelve la mitad de ese número. Una vez que has escrito la función, úsala para calcular la mitad(21)
      Calc Define Funcs 5 - multiply 1: ¡Oh, no! ¡Hemos perdido nuestro bloque multiplicador! Tendremos que crear una función para que multiplique por nosotros. Para empezar, escribe una función "f" que toma un parámetro "x" y devuelva x\*5. Usa f(3) para evaluar tu función.
      Calc Design Recipe 1: Utilicemos la Receta de Diseño para crear una función llamada cubo; esta función debe tomar un Número y devolver ese número a la potencia de 3. ¡Asegúrate de escribir dos casos de ejemplo! Cuando hayas terminado, utiliza tu nueva función para calcular cubo(7).
      Calc Design Recipe 2: |-
        Tu escuela está organizando un puesto de venta de panadería y necesitas rastrear el costo de hacer cada cookie, el dinero pagado y el beneficio total. El costo de cada unidad de cookie es $0,25, y venden por $1,50/cookie.

        Escribe el costo de la función, que toma el número de cookies que pretendes vender, y devuelve el costo de hacer esas cookies.

        Pruebe tu función mediante el cálculo del costo de 42 cookies
      Calc Design Recipe 3: |-
        Escriba las ventas de la función, que toma en el número de cookies vendidas y produce la cantidad de dinero que los clientes gastaron para comprar esas cookies (cada cookie se vende a $1,50).

        Evalúa su función mediante el cálculo de las ventas de 135 cookies
      Calc Design Recipe 4: |-
        Usando las dos funciones que acabamos de escribir, escribe la ganancia de la función, que toma el número de cookies que vendiste y te da la ganancia total que generas al vender tus cookies, lo cual incluye el costo de hornear.

        Evalúa tu función mediante el cálculo del beneficio total de 15 cookies.
      Calc Free Play: 'Juego libre: ¡Escribe funciones y algoritmos de tu propio diseño!'
      Calc Rocket 1 (copy 1): En el último rompecabezas, escribiste un contrato para la función "altura-cohete" que indica que tiene un rango de Número, dominio del Número, y debe devolver la altura del cohete que viaja a 15 m/s después de un determinado número de segundos. Escribamos un ejemplo ahora para la altura del cohete a 3 segundos.
      Calc Rocket 1: En el último rompecabezas, escribiste un contrato para la función de altura de cohete que indica que tiene un rango de Número, dominio del Número, y debe devolver la altura del cohete que viaja a 15 m/s después de un determinado número de segundos. Escribamos un ejemplo ahora para la altura del cohete a 3 segundos.
      Calc Vars 1.1: Aquí hemos establecido la variable de edad a 17 años. ¿Puede escribir una expresión que calcula la edad en días?
      Calc Vars 1: Las variables nos permiten nombrar valores para que podamos fácilmente referirlos repetidamente a través de nuestros programas. Aquí hay una variable llamada edad. Establece su valor a su edad y haz clic en ejecutar.
      Calc Vars 2 (copy 1): 'Aquí hemos establecido la variable "edad" a 17: ¿puede escribir una expresión que calcula "edad" en meses?'
      Calc Vars 2.1: Aquí hay una nueva variable llamada edad-en-meses. Usa la edad variable para establecer la edad-en-meses.
      Calc Vars 2: "¿Puedes escribir una expresión que calcule la edad en meses?"
      Calc Vars 3 (copy 1): ¿Puedes añadir a este código para que calcule cuántas horas hay en años de "edad"?
      Calc Vars 3: ¿Puede añadir a este código para que utilice la variable "edad" para calcular la edad en horas?
      Calc Vars 4: 'También podemos establecer variables usando otras variables. Digamos que tienes un hermano que es dos años más joven que tú: ¿puede establecer una nueva variable "hermano-edad" mediante el uso de tu variable "edad"?'
      Choose Your Own Adventure: "¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo para escoger tu propia historia de aventura en el laboratorio de juego."
      Choose Your Own Adventure_2018: "¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo para escoger tu propia historia de aventura en el laboratorio de juego."
      Code Studio Puzzle Challenge 1 - Artist: 'Dibuja la línea. Tiene 200 píxeles de largo. '
      Code Studio Puzzle Challenge 1 Artist1: 'Dibuja la línea. Tiene 200 píxeles de largo. '
      Code Studio Puzzle Challenge 10 - Bee (copy 1): Mueve la abeja hasta las flores y consigue todo el néctar.
      Code Studio Puzzle Challenge 10 - Bee: Mueve la abeja hasta las flores y consigue todo el néctar.
      Code Studio Puzzle Challenge 10b - Bee: Mueva la abeja hasta las flores y consigue todo el néctar en cada una.
      Code Studio Puzzle Challenge 11 - Artist: Utiliza la variable "longitud" para dibujar esta línea. Cada segmento de línea tiene 75 píxeles de largo.
      Code Studio Puzzle Challenge 11b - Artist: " Usa la longitud de la variable proporcionada para dibujar un cuadrado."
      Code Studio Puzzle Challenge 12 - Artist: El código proporcionado dibuja un triángulo. Agrega a él para dibujar triángulos en un patrón hexágono.
      Code Studio Puzzle Challenge 12a - Artist: El código proporcionado dibuja un triángulo. Agrega a él para dibujar triángulos en un patrón hexágono.
      Code Studio Puzzle Challenge 13 - Artist: 'Esto es como un bucle "para" . Completa el código para dibujar seis líneas que crecen de 50, 60, 70, 80, 90 a 100 pixeles de largo. '
      Code Studio Puzzle Challenge 14 - Artist: 'Esto es como un bucle "para" . Completa el bucle para dibujar 4 cuadrados que crecen de 80, 100, 120 a 140 píxeles. '
      Code Studio Puzzle Challenge 2 - Artist: Ahora añade un giro y otra línea. Las líneas tienen 200 píxeles de largo.
      Code Studio Puzzle Challenge 3 - Artist: Dibuja el cuadrado. Cada lado tiene 100 píxeles de largo.
      Code Studio Puzzle Challenge 4 - Artist: Dibuja el octágono. Cada lado tiene 100 píxeles de largo.
      Code Studio Puzzle Challenge 5 - Bee (copy 1): Mueve la abeja hasta las flores y consigue todo el néctar.
      Code Studio Puzzle Challenge 5 - Bee: Las flores contienen una cantidad específica de néctar. Mueve la abeja hasta la flor y recoge el néctar con el bloque de obtener néctar.
      Code Studio Puzzle Challenge 6 - Bee: Las panales de miel pueden contener una cantidad específica de miel. Consigue el néctar de la flor y haz un poco de miel.
      Code Studio Puzzle Challenge 7 - Bee: Mueve la abeja hasta las flores y consigue todo el néctar.
      Code Studio Puzzle Challenge 8 - Bee: La nube podría estar ocultando una flor o un panal de miel. Sólo consigue néctar de flores. Sólo haz miel en los panales de miel.
      Code Studio Puzzle Challenge 9 - Bee: La nube podría estar ocultando una flor o un panal de miel. Sólo consigue néctar de flores. Sólo haz miel en los panales de miel.
      Code Studio Puzzle Challenge Artist Screencast (copy 1): Dibuja la línea. Cada lado tiene 100 pixeles de largo.
      Code Studio Puzzle Challenge Artist Screencast 2: 'Completa el código para dibujar la línea. Cada segmento tiene 100 píxeles de largo. '
      Code Studio Puzzle Challenge Artist Screencast: Dibuja la línea. Cada lado tiene 100 pixeles de largo.
      Code Studio Puzzle Challenge Bee Screencast: Mueva la abeja a las flores y consigue todo el néctar.
      Code Studio Puzzle Challenge Square - Artist: " Usa la longitud de la variable proporcionada para dibujar un cuadrado."
      Code Studio Puzzle Challenge Var - Artist: Dibuja una línea usando una variable "longitud" establecida a 180.
      Collector Demo: "¡Mira todo este botín! Ayúdame a obtener la mayor cantidad de monedas posibles para que pueda mejorar mi granja. ¡Pero solo puedo usar 9 bloques!"
      CoureE_HOC 2018 Level_7a: Explora estas ruinas submarinas para encontrar un cofre.
      Course 2 Bee Loops 1: "¡Hola, soy una abeja! ¿Puedes ayudarme a recolectar el néctar de estas flores?"
      Course 2 Bee Loops 13: 'Evaluación: Utiliza el bloque de repetición para recoger todo el néctar.'
      Course 2 Bee Loops 2: "¿Puedes facilitar más la misma tarea con un bucle?"
      Course 2 Bee Loops 3: Ahora usa el nuevo bloque de repetición para recoger todo el néctar y hacer toda la miel.
      Course 2 Bee Loops 3_: "¿Podrías utilizar un bucle para recoger todo el néctar?"
      Course 2 Bee Loops 4: "¿Qué sucede si enlazas esta secuencia 3 veces? ¡No olvides hacer toda la miel al final!"
      Course 2 Maze Loops 1: "¿Puedes llevarme hasta el cerdo usando 5 bloques?"
      Course 4 2: La abeja solo quiere néctar ahora mismo. Recuerda, no todos los objetos son flores, así que chequea, para solo recoger néctar de las flores.
      Course 4 Artist 1: Ayúdame a terminar de dibujar mi caja. (Cada línea es de 200 píxeles de largo)
      Course 4 Artist 10: "¡Haz clic para ver las sugerencias otra vez! Aquí esta el código para una interesante figura. ¿Qué pasa cuando lo repites muchas veces, torneado entre cada interacción? Nota que el giro en esta figura agrega más de 420 grados, lo cual significa que cuando el artista termino de dibujar, verá otra dirección diferente que cuando empezó. Esa nueva dirección es exactamente 60 grados a la derecha de cuando comenzó."
      Course 4 Artist 11: "¡Ahora, un desafío! Aquí hay un diseño que solamente usa bloques que ya te hemos mostrado. ¿Puedes averiguar cómo crearlo nuevamente sin información extra? Sugerencia: Tantea, usa ensayo y error. No se espera que esté perfecto la primera vez."
      Course 4 Artist 12: 'Inspiración para ejercicio libre: ¡Ya has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Echa un vistazo aquí: <https://levelbuilder-studio.code.org/c/8781/edit>'
      Course 4 Artist 13: "¿Aún jugando? ¡Aquí hay un lienzo en blanco en donde usted podrá diseñar lo que quiera!"
      Course 4 Artist 2: "¿Puedes enlazar este código para que dibuje de gris el cuadrado?"
      Course 4 Artist 20: "¿Aún jugando? ¡Aquí hay un lienzo en blanco donde usted podrá crear lo que quiera!"
      Course 4 Artist 3: Muy bien, trate de averiguar qué sucede si ejecuta este código (o presiona "Run" para comprobarlo). Entonces repítelo varias veces hasta completar el dibujo.
      Course 4 Artist 4: "¿Cúantos grados tiene un círculo? Rellena el bloque de repetición con ese número para crear un círculo de colores."
      Course 4 Artist 5: Dibuja la otra mitad de este diseño de tal manera que sea simétrico. Los triángulos son equiláteros y tienen 50 píxeles de longitud.
      Course 4 Artist 6: 'Completa el código para dibujar estos triángulos. Sugerencia: 3 triángulos en una rotación de 360 grados.'
      Course 4 Artist 7: 'Ahora anida este circuito dentro de otro circuito para dibujar 3 triángulos. Esto es llamado un circuito anidado. Sugerencia: Todos los 10 triángulos completan una rotación de 360 grados.'
      Course 4 Artist 8: Dibuje este sol enlazando este bloque de código íntegramente 12 veces.
      Course 4 Artist 8a: "¿Recuerdas esta forma? ¡Ahora vamos a dejarte construirla sin darte ningún bloque para empezar! Sugerencia: hay 3 triángulos dentro de la rotación de 360 grados... ¿Cuántas veces 3 va en 360?"
      Course 4 Artist 9: 'Continúe con este diseño 10 veces y asegúrese de que cada forma que dibuja apunte hacia adentro. Aquí hay una sugerencia de cuánto más debe apuntar: ¿Cuánto es 360 dividido entre 10?'
      Course 4 Artist Binary 1: Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver cómo el artista usa el binario para dibujar el patrón.
      Course 4 Artist Binary 1a: Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver cómo el artista usa el binario para dibujar el patrón.
      Course 4 Artist Binary 2: "¿Cuántas de estas secuencias binarias podría enlazar 8 veces para dibujar esta imagen?"
      Course 4 Artist Binary 3: "¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?"
      Course 4 Artist Binary 4: Cada secuencia binaria representa una fila de esta figura. ¿Puede reacomodarla de tal manera que dibuje una cara con una sonrisa en lugar de una cara de aspecto fruncido?
      Course 4 Artist Binary 5: "¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?"
      Course 4 Artist Binary 6: "¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?"
      Course 4 Artist Binary 7: Termine este dibujo.
      Course 4 Artist Binary Free Play 2: 'Juego Libre: Aquí tiene un lienzo de alta resolución para dibujar - ¡16 bits por 16 bits!'
      Course 4 Artist Binary Free Play 2a: Aquí hay un lienzo con mejor resolución para pintar - ¡16 píxeles por 16 píxeles! ¿Ves lo que pasa cuando empezamos a ser creativos con los bits?
      Course 4 Artist Binary Free Play 2b: Haga clic aquí para ver sugerencias.
      Course 4 Artist Binary Free Play: 'Juego Gratis: ¡Dibuje lo que quiera con binarios!'
      Course 4 Artist Binary pre1: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      Course 4 Artist Binary ryan: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      Course 4 Artist For  Functions 10: Elevemos un poco el nivel de dificultad. ¿Puede dibujar una forma de estrella usando la función "Dibuje una Línea Cuadrada"? ¡Buena suerte!
      Course 4 Artist For  Functions 11: Elevemos un poco el nivel de dificultad. ¿Puede dibujar una forma de estrella usando la función "Dibuje una Línea Cuadrada"? ¡Buena suerte!
      Course 4 Artist For Loops 1: 'Dibuje este triángulo que tiene un tamaño de 50 píxeles. Sugerencia: Use un bloque de repetición.'
      Course 4 Artist For Loops 10: 'Juego Gratis: Diviértase dibujando lo que le guste con los bloques que ha aprendido a usar'
      Course 4 Artist For Loops 11: "¿Recuerdas cuando usamos una variable para controlar el número de lados de una forma? Este patrón empieza con un triángulo y agrega un cada lado a la vez hasta que dibuja un decágono (10 lados). Cada lado debe ser de 100 píxeles de largo. Sugerencia: 360 dividido por el número de lados de una forma, es el número de grados que necesitarás para girar."
      Course 4 Artist For Loops 11a: ¡Vamos a poner todo junto! Usando tu conocimiento de "ciclos for" y del "contador", crea este dibujo donde cada forma tiene dos partes más que la anterior. Asegúrate de que cada lado sea 10 veces más largo que el número de lados del polígono. Muy poco del código se ha proporcionado para ti.
      Course 4 Artist For Loops 12: 'Eso se ve muy bien, pero ahora me gustaría que dibuje cada forma junto a la otra. Esta vez, cada lado es de 20 píxeles. Use un bloque de salto para saltar 20 píxeles adelante después de cada forma. '
      Course 4 Artist For Loops 13: "¡Hmmm, esas formas están creciendo a cada instante! ¿No solucionamos este problema con las variables? ¿Cómo podemos usar la variable de contar para hacer lados mas pequeños, ya que hay más de ellos? En lugar de mover hacia adelante estableciendo una cantidad, tratemos de avanzar (100/counter) píxeles."
      Course 4 Artist For Loops 14: Si girara un poco más o menos de lo que normalmente haría para una forma, crearía un efecto más nítido. Intente girar 89 grados para crear esta espiral cuadrada torcida.
      Course 4 Artist For Loops 15: 'Juego Gratis: Intente hacer algunos dibujos propios usando Para Vueltas. Hemos añadido también algunas variables genéricas para su uso.'
      Course 4 Artist For Loops 2: He puesto un código para dibujar un triángulo dentro de una iteración que cuenta de 50 a 100 por 10. Revise cómo he creado el código y presione "Ejecutar" cuando esté listo para verlo en acción.
      Course 4 Artist For Loops 3: El triángulo más pequeño tiene 20 píxeles de lado, el más grande tiene 200 píxeles de lado y cada triángulo es 20 píxeles más grande que el anterior. Actualiza el bucle "for" para dibujar estos triángulos.
      Course 4 Artist For Loops 4: Usa un bucle "FOR" para dibujar estos cuadrados. Empiezan a 15 píxeles de largo, el más grande es de 300 píxeles de largos, y cada cuadrado es 15 píxeles más grande que el anterior. Te he dado casi todo el código que vas a necesitar - haz perdido un bloque, ¿cuál es?
      Course 4 Artist For Loops 5: ¡Buen trabajo en el último rompecabezas! Usemos ese bloque variable "counter" de nuevo para dibujar esta asombrosa pintura.
      Course 4 Artist For Loops 6: "¡Juego gratis! Intenta usando un circuito para dibujar un patrón de forma creciente con tu propio diseño."
      Course 4 Artist For Loops 6a: "¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!"
      Course 4 Artist For Loops 7: Que pasa si eliminas el "repeat 3" de este algoritmo, manteniendo los bloques "move" y "turn" en el circuito. En este triángulo en espiral, cada lado es 20 píxeles mas largo que el anterior.
      Course 4 Artist For Loops 8: La línea más pequeña de este espiral cuadrado es 10, el más largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      Course 4 Artist For Loops 8a: La línea más pequeña de este espiral cuadrado es 10, el más largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      Course 4 Artist For Loops 9: "¿Puedes hacer un espiral? Avanza de 1 a 75 píxeles, incrementando de 1 a 1 píxeles."
      Course 4 Artist For Loops Challenge: Con todas las cosas que ha aprendido, ¿podrías decir cómo se hizo esta imagen? ¿Necesita una ayuda? Presione aquí.
      Course 4 Artist For Loops Challenge_a: "¿Puedes descubrir cómo usar todas las cosas que has aprendido para crear esta imagen? \n\n¿Necesita una pista? Presiona aquí."
      Course 4 Artist For Loops inspire: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      Course 4 Artist Functions 1: "¿Puedes dibujar en cuadrado que tiene 100 píxeles de longitud, utilizando un circuito?"
      Course 4 Artist Functions 10: "¿Cúal bloque necesitas agregar para conseguir que el triángulo se ubique en la cima del cuadrado?"
      Course 4 Artist Functions 11: Mira este código que dibuja un cubo - ¿Puedes moverlo en una función llamada "Draw a cube"?
      Course 4 Artist Functions 12.1: Creemos una función llamada "dibujar un octágono 20" que dibuja un octágono donde cada lado es de 20 píxeles de largo.
      Course 4 Artist Functions 12: La función circuito cuadrado para dibujar una línea
      Course 4 Artist Functions 13.1: 'Ahora, vamos a hacer una función llamada "salto para arriba a la derecha" que mueve el artista a la derecha superior del Octógono que usted acaba de dibujar, por lo que podemos terminar este toque patrón: para usted llegar a la esquina superior derecha, trate de saltar en un patrón que hace apenas 3/8 del octágono.'
      Course 4 Artist Functions 13: Mira, tenemos una nueva función llamada "draw a line of squares". No dudes en echar un vistazo dentro de la función de bloque para ver cómo se construye. Haz clic en "Run" cuando estés listo para el siguiente rompecabezas.
      Course 4 Artist Functions 14.1: Ahora, vamos a hacer una función llamada "saltar arriba a la derecha" que mueve al artista a la parte superior derecha del Octágono que usted acaba de dibujar, por lo que podemos terminar este patrón.
      Course 4 Artist Functions 14: ¡Estás haciéndolo muy bien! Usemos tu nueva función "Draw a line of squares" para dibujar un cuadrado. Recuerda que cada cuadrado es de 40 píxeles de longitud.
      Course 4 Artist Functions 15: '¡Demos un pequeño paso hacia adelante! ¿Puedes dibujar una forma de estrella usando la función "dibuja una línea de cuadrados"? ¡Buena Suerte! Sugerencia: Debes girar a 144 grados'
      Course 4 Artist Functions 2: "¿Puedes dibujar 3 cuadrados de 20 píxeles separado uno del otro? Sugerencia: cada cuadrado es de una medida de 100 píxeles "
      Course 4 Artist Functions 3: 'Usando la función de bloque "dibuja un cuadrado", ¿puedes dibujar este dibujo? Sugerencia: cada cuadrado debe ser de 120 píxeles entre uno y otro.'
      Course 4 Artist Functions 4: '¿Estás listo para crear tu propio "Function Block"? Haz clic en el bloque "functions" en la caja de herramientas, donde dice "draw a triangle", entonces crea un triángulo como lo has hecho con anterioridad con los bloques acción y circuitos. Haz clic en guardar y cerrar en la esquina superior derecha . Sugerencia: Crea un triángulo que tiene 100 píxeles de longitud. ¡Buena suerte!'
      Course 4 Artist Functions 5 OLD: Tratemos de usar nuestras dos funciones para dibujar una casa - ¿Qué se necesita arreglar en este código para dibujar la casa correctamente?
      Course 4 Artist Functions 5: 'Usando la función de bloque "dibuja un cuadrado", ¿puedes dibujar este dibujo? Sugerencia: cada cuadrado debe ser de 120 píxeles entre uno y otro.'
      Course 4 Artist Functions 6: "¿Cúal bloque necesitas agregar para conseguir que el triángulo se ubique en la cima del cuadrado?"
      Course 4 Artist Functions 7: "¿Puedes dibujar una línea de cuadrados usando la función de cuadrado? Cada cuadrado es 40 píxeles de longitud."
      Course 4 Artist Functions 8: '¿Estás comenzando a comprender cómo usar la función de los bloques? Modifiquemos este cuadrado de 200 píxeles de medida. Sugerencia: haz clic en "edit" para cambiar el tamaño del "draw a square" en la función editor. Recuerda hacer clic en "guardar y cerrar" para salir de la función editor.'
      Course 4 Artist Functions 9: Te hemos dado la mayor parte del código para crear una función. Sin embargo, parece que falta algo. ¿Puedes completar esta función de bloques?
      Course 4 Artist Functions Inspiration: Haz clic aquí para ver las sugerencias nuevamente.
      Course 4 Artist Functions challenge: Haz clic aquí para ver las sugerencias nuevamente.
      Course 4 Artist Functions inspire: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      Course 4 Artist Inspire: 'Inspiración para ejercicio libre: ¡Ya has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Echa un vistazo aquí: <https://levelbuilder-studio.code.org/c/8781/edit>'
      Course 4 Artist Params 1: Editemos una función que dibuje un cuadrado de 50 píxeles cada lado
      Course 4 Artist Params 10: ¡Puedes llamar una función dentro de otra función! Utilizando tu función "shape" como base, crea 3 formas de casa cada una de 20 píxeles mas larga que la anterior, empezando con 50 píxeles de longitud. Usar un circuito de contar puede ser útil.
      Course 4 Artist Params 11: '¿Qué opinas de una función llamada "molinete" que tome tres parámetros: "lados", "longitud" y "repetición"? Puedes calcular la cantidad de giros después de cada forma mediante el uso de las mismas matemáticas que usaste para determinar las curvas de una forma de "lados". ¿Puedes recrear esta imagen? Esta es una pista, cada forma tiene 100 pixeles de longitud.'
      Course 4 Artist Params 12: Utilice la función "pinwheel" (molinete) para dibujar cada una de estas formas. La longitud del lado de cada imagen es 50.
      Course 4 Artist Params 13: 'Freeplay: Aquí están las funciones que has escrito y algunas más para que juegues. ¡Dibuja algo impresionante!'
      Course 4 Artist Params 2: Esa función de triángulo sería mucho más útil si pudiera dibujar triángulos de diferentes tamaños. He añadido un parámetro para la longitud de la línea, pero todavía no hace nada. ¿Puedes actualizar la función para que utilice el parámetro "longitud" cuando dibuja cada lado? Los tamaños del triángulo son 150 píxeles, 75 píxeles y 25 píxeles.
      Course 4 Artist Params 3: 'Impresionante, ¿puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50, y el tercero es de 75. '
      Course 4 Artist Params 4: "¿Puede agregar una nueva función llamada cuadrado? También debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez dibuja 3 cuadrados, 25, 50 y 75 píxeles de lado, además de uno de 100 píxeles."
      Course 4 Artist Params 5: Usa tus dos funciones para dibujar esta imagen. Para hacer esto más fácil, usa un bucle con un parámetro de "contador".
      Course 4 Artist Params 6: 'Vamos a editar esta función "dibujar una forma". Ya tiene un parámetro de "longitud". Ahora, vamos a editar la función para añadir un parámetro "lados". Recuerda que el ángulo de una forma determinada es de 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo de 100 píxeles, el hexágono de 25 píxeles y el cuadrado de 50 píxeles.'
      Course 4 Artist Params 7: 'Puedes dibujar estas formas rellenando el "???" El cuadrado y triángulo son 100 píxeles de tamaño mientras que el hexágono es de 75 píxeles de tamaño. '
      Course 4 Artist Params 8: "¿Puedes calcular cómo dibujar esta forma? Aquí hay una pista, crea una nueva función con 6 lados llamada hexágono."
      Course 4 Artist Params 9: ¿Recuerdas cuando usamos el bucle con Contador pero habíamos quitado un bucle dentro? Vamos a divertirnos y usar la función "dibujar una forma" con parámetros de "lados" y "longitud". ¿Puede volver a crear estas formas? El contador de cuadrados debe ser 5/100/5, el contador del triángulo debe ser 10/100/10 y el hexágono es 2/100/2.
      Course 4 Artist Var 9: 'Aquí está el algoritmo para dibujar un triángulo, modificarlo para que utilice la variable "lados". Reemplazar el número 3 con la variable "lados". Sugerencia: Recuerda que debes utilizar el bloque de "set sides to".'
      Course 4 Artist Vars 1: "¿Puedes ayudarme a dibujar un triángulo? Es de 100 píxeles de largo en cada lado."
      Course 4 Artist Vars 10: Aquí encontrarás un algoritmo que dibuja un triángulo de pequeños triángulos. ¿Podrías modificarlo usando la variable de "sides" para dibujar cada triángulo? Observa a través del código y cada vez que veas el número 3, reemplázalo con tu variable "sides". Recuerda el uso del bloque "set sides".
      Course 4 Artist Vars 11: Aquí está el mismo algoritmo que ideamos con el último rompecabezas - ¿Qué debes establecer en la variable "sides" para dibujar este dibujo de cuadrados?
      Course 4 Artist Vars 12: Vamos a poner la variable "sides" en 5. Si agrego mas lados a este algoritmo, ¡más grande es el patrón entero! Agreguemos una nueva variable llamada longitud "lengh" y úsala si tienes que avanzar "move forward". Establece la variable longitud "lengh" a 75 para esta figura.
      Course 4 Artist Vars 13: Cuando una forma tiene varios lados, cada lado necesita ser más corto si tú quieres el patrón completo para ajustar la pantalla. Vamos a recrear el algoritmo desde este increíble patrón, pero en lugar de poner manualmente la variable de "longitud", vamos a usar un bloque de matemáticas con la variable de "lados" dentro para asegurarse de que cada forma se ajusta correctamente. El perímetro de cada polígono es de 300 píxeles. ¿Necesitas algunos consejos? Haga clic aquí.
      Course 4 Artist Vars 14: 'Juego Gratis: revísalo, ahora tu algoritmo está anidado dentro de otro circuito. Experimenta cambiando los valores de tus dos variables para dibujar patrones asombrosos.'
      Course 4 Artist Vars 2: En lugar de avanzar por 100 "moving forward by 100", el bloque mover "move" ahora referencia la variable longitud "length". ¿Podrías establecer la longitud "length" a 150 para dibujar este nuevo triángulo?.
      Course 4 Artist Vars 3: 'Aquí es un bucle que dibuja un cuadrado, pero algo está mal. ¿Puedes arreglarlo para que utilice la variable "largo" para averiguar qué tan largo debe ser cada lado? '
      Course 4 Artist Vars 4: Ahora quiero hacer un rectángulo que es dos veces tan alto como ancho. Tenemos una variable llamada "ancho" que se encuentra a 100. ¿Puedes usar los bloques de matemáticas para completar el código?
      Course 4 Artist Vars 5: Utiliza las variable "caras" para controlar cuántas veces el bucle se repite.
      Course 4 Artist Vars 6: Aquí hay un código que puede dibujar cualquier polígono regular. Hay una nueva variable llamada lados que se inicializa a 4. ¿Puedes usar la variable lados (junto con el bloque de matemáticas) para activar la cantidad correcta independientemente de cuántos lados hay en el polígono? ¡Haz clic aquí para regresar a la pista!
      Course 4 Artist Vars 7: Utiliza lo que aprendiste en el rompecabezas anterior para crear el hexágono usando la variable "lados". Vé cómo puedes cambiar solo una variable para dibujar un triángulo, cuadrado, pentágono u octágono?
      Course 4 Artist Vars 8: 'Juego libre: Experimento con el número de lados de esta forma. ¿Puedes cambiar el algoritmo de modo que el tamaño total de la forma siga siendo el mismo, sin importa cuántos lados tenga? Consejo: Tendrás que usar tus bloques de matemáticas (360 dividido por "caras" en dos lugares esta vez) '
      Course 4 Artist Vars 9: Modifica este algoritmo para utilizar la variable "caras" en lugar de un número fijo para dibujar un triángulo. Reemplaza el número 3 con la variable "caras" y utiliza el bloque de "establecer lados".
      Course 4 Bee 1: La abeja no puede decir si se trata de una flor o un panal de miel. Compruebe primero si se trata de una flor o un panal de abejas y entonces sólo recogen néctar si es una flor.
      Course 4 Bee 2: Utiliza el bloque "Si/de lo contrario" para revisar cada objeto para ver si es una flor o un panal...de lo contrario, ¡haz miel!
      Course 4 Bee 3: El objeto desconocido es una flor o un panal de miel. Ahora utiliza el bloque "Si/de lo contrario" para colectar néctar, "Si" si es una flor, "de lo contrario" haz miel (porque entonces sería un panal).
      Course 4 Bee 4: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque Si-de lo contrario es combinado con otro bloque Si/de lo contrario para crear una sentencia "Si/de lo contrario-Si/de lo contrario". Completa la solución para recoger la cantidad desconocida de néctar.
      Course 4 Bee 5: Esta flor púrpura puede tener 3, 2 o 1 néctares. Agrega un bloque si-de lo contrario para crear un bloque si, de lo contrario-si, de lo contrario. Completa la solución para recolectar la cantidad desconocida de néctar.
      Course 4 Bee 6: Esta flor púrpura puede tener 3, 2 o 1 néctares. Crea un bloque si, de lo contrario-si, de lo contrario para recoger la cantidad desconocida de néctar.
      Course 4 Bee 7: Aprovecha todo lo que has aprendido hasta ahora para recolectar todo el néctar. La flor púrpura puede tener 3, 2 o 1 néctares.
      Course 4 Bee For Loops 1: Utiliza un bucle para recolectar el néctar de cada flor.
      Course 4 Bee For Loops 10: Si tu ciclo es regresivo, se resta el incremento de la variable contador en cada bucle. ¿Lo que debería ser un incremento a recoger néctar 9, luego 6 y 3?
      Course 4 Bee For Loops 11: "¿Qué hay de malo en este ciclo? A ver si puedes arreglarlo y hacer que las abejas recolecten el néctar."
      Course 4 Bee For Loops 2: Aquí está un nuevo tipo de lazo, llamado el bucle "for" . Este particular bucle contará de 1 a 5 por 1 y ejecutará el contenido del bucle cada cuenta. Ayudar a la abeja el néctar.
      Course 4 Bee For Loops 3: Puede resolver este problema utilizando un bucle para contar del 1 al 3 por 1. ¡Ahora vamos a obtener un néctar!
      Course 4 Bee For Loops 4: Recoge todo el néctar de las flores. Me pregunto si hay una manera más fácil de hacer esto...
      Course 4 Bee For Loops 5: 'Ah, ¡el bucle lo hace mucho más fácil! Usando la variable "contador" de la de circuito a circuito al "obtener néctar", bloquea el mismo número de veces que el bucle. ¡Wow! Eso es un montón de bucles. Todo el código que necesitas, echa un vistazo a cómo es juntar a continuación, haz clic en ejecutar y vé cómo funciona. '
      Course 4 Bee For Loops 6: También puedes utilizar un bucle a contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      Course 4 Bee For Loops 7: Usa tu variable "contador" de bucle para el controlar qué tan lejos debe moverse horizontalmente.
      Course 4 Bee For Loops 8: "¿Puedes utilizar la variable de bucle para controlar el movimiento y la recolección del néctar?"
      Course 4 Bee For Loops 9: El último número en tu bucle se llama "incremento", y cada vez que se ejecuta el bucle, la variable contador cambia por el incremento. Trata de recoger la flores usando un incremento de 2.
      Course 4 Bee Loops 5 NEW: Aquí hay tres flores. ¿Puedes encontrar el patrón de instrucciones que se repita 3 veces para recoger el néctar con el menor número de bloques?
      Course 4 Bee Loops 5a NEW: Ahora, utiliza ciclos para ayudar a la abeja a recoger todo el néctar en su camino hacia el panal con tan pocos bloques como sea posible. Al llegar allí, ¡no olvides hacer la miel!
      Course 4 Bee Params 1: Use la función "obtener néctar 3" que gira, mueve para recoger el néctar y luego regresa a su ubicación original. Escriba una secuencia para recoger todo el néctar usando "obtener néctar 3".
      Course 4 Bee Params 2: Modifique la función "obtener néctar 3" de tal manera que me haga girar a la derecha hacia las flores en vez de a la izquierda.
      Course 4 Bee Params 3 (copy 1): ¡Ahora hay flores en ambos lados! Tal vez puede usar un parámetro de tal manera que la misma funcione para la flores en cada lado. He añadido un parámetro a la función denominado "dirección". Si el parámetro "dirección" es igual a 0, debería voltear a la izquierda, si es 1 debería voltear a la derecha.
      Course 4 Bee Params 3: ¡Ahora hay flores en ambos lados! He añadido un parámetro a la función. Use las variables "izquierda" y "derecha" para controlar la dirección. Termine el resto de la definición de la función y luego haga clic en "Salvar y Cerrar".
      Course 4 Bee Params 4 (copy 1): Trate de usar la nueva función para recoger todas las flores. Recuerde, 0 = izquierda y 1 = derecha.
      Course 4 Bee Params 4 - Two WhenRun: Pruebe usando su nueva función para recolectar todas las flores. Recuerde usar las variables izquierda y derecha.
      Course 4 Bee Params 4 backup: ¿No sería bueno si pudiéramos recoger todo este néctar con una sola función? Intente añadir un nuevo parámetro a la función denominada "néctares" para controlar la cantidad de néctar a ser recogido. ¡Probablemente también querrás cambiar de nombre a la función!
      Course 4 Bee Params 4: Intente usar su nueva función para recoger todas las flores. Recuerde usar las variables izquierda y derecha.
      Course 4 Bee Params 5: Vamos a empezar desde cero. ¿Puedes crear una nueva función llamada "recoger 5 néctares" con un parámetro de dirección?
      Course 4 Bee Params 6 (copy 1): Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Bee Params 6: ¿No sería genial si pudiéramos recolectar todo este néctar con una sola función? Intenta agregar un nuevo parámetro a tu función "nectars" para controlar la cantidad de néctar para recolectar. ¡Probablemente quieras renombrar la función también!
      Course 4 Bee Params 7 (copy 1): Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Bee Params 7: Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Bee Params 8 Clone 2: "¡Oooh, ahora también hay miel de la que ocuparse! ¿Cómo puedes actualizar tu función para así obtener néctar o hacer miel?"
      Course 4 Bee Params 8 Clone: "¡Oooh, ahora también hay miel de la que ocuparse! ¿Cómo puedes actualizar tu función para así obtener néctar o hacer miel?"
      Course 4 Bee Params 8 clone 3: "¡Oooh, ahora también hay miel de la que ocuparse! ¿Cómo puedes actualizar tu función para así obtener néctar o hacer miel?"
      Course 4 Bee Params 8 new: "¡Oooh, ahora también hay miel de la que ocuparse! ¿Cómo puedes actualizar tu función para así obtener néctar o hacer miel?"
      Course 4 Bee Params 8: 'Desafío: ¡Ahora hay que ocuparse de la miel! Vuelve a escribir tu función para usar las dos el número de unidades de miel y el número de unidades de néctar. ¿Cómo utilizarías esos números para decidir qué puedes hacer?'
      Course 4 Bee Params Ex: Trata de utilizar tu nueva función para recolectar todos este néctar.
      Course 4 Binary 1: Ésta es una función que toma una cadena binaria de 0s y 1s e instruye al granjero a girar de izquierda a derecha, de arriba a abajo, girando en los cuadrados donde el número tiene un cero. Ejecute el código proporcionado para ver cómo los granjeros utilizan binario para dibujar una imagen.
      Course 4 Binary 2: '¿Qué cadena binaria podrías repetir 8 veces para dibujar esta imagen? Pista: el número "1" llena un hueco.'
      Course 4 Binary 3: "¿Puedes dibujar este patrón repitiendo una sola cadena binaria?"
      Course 4 Binary 5 (copy 1): "¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?"
      Course 4 Binary 5: "¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?"
      Course 4 Binary 6 (copy 1): "¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?"
      Course 4 Binary 6: "¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?"
      Course 4 Binary 7: "¿Qué cadena binaria, repetida 10 veces, dibujará esta imagen?"
      Course 4 Binary 8: Puedes completar la mayor parte de esta imagen repitiendo un numero binario de 5 bits - luego, necesitarás un número más de 4 bits a la esquina inferior derecha.
      Course 4 EC 1a: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 1b: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2a: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2b: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2c: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 2d: Sin reglas. Sin pistas. ¡Sólo el desafío!
      Course 4 EC 3: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como ésta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 EC 3a: 'Desafío Extremo: Sin reglas. Sin pistas. ¡Solo el desafío!'
      Course 4 Maze 1: "¡Envía las aves enojadas al cerdo!"
      Course 4 Maze 2: "¡Evite la TNT!"
      Course 4 Maze 3: Programe la aves enojadas para llegar al cerdo.
      Course 4 Maze 4: Intenta usar un bloque de "repetición" para utilizar menos bloques cuando resuelvas el rompecabezas...
      Course 4 Maze 5: "¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?"
      Course 4 Maze 6: "¿Puedes resolver este rompecabezas utilizando el menor número de bloque posibles?"
      Course 4 Play Lab For Loops 2: Esta vez, intentemos contar los números impares de 1 a 100.
      Course 4 Play Lab Params 1: Aquí está la función denominada "salto" que permite que tu personaje principal salte hasta 100 píxeles. Use la función salto para recoger todas las banderas.
      Course 4 Play Lab Params 10: 'Añadimos una última función para ti. Utiliza una sentencia "Si" para que tu programa llame la función "livel_mas" solo cuando "puntuacion_jugador" sea mayor que un cierto número. Por ejemplo: "puntuacion\_jugador" > 6 Juega el juego, y hazlo pasar de nivel 4 para mover al siguiente problema. '
      Course 4 Play Lab Params 2: '¡Ahora tenemos banderas que son muy altas para nuestro actual salto! Usaremos ambas flechas "arriba" y "abajo" para poder tener múltiples saltos de altura. Necesitamos agregar un parámetro a nuestra función llamada "altura". La flecha arriba debe hacer al perro saltar 200 píxeles y la flecha de abajo debe hacerlo saltar solo 100 píxeles. Pista: deberás hacer clic en "editar" en la función brinca y actualizar para que uses el parámetro "altura".'
      Course 4 Play Lab Params 3: Añadimos otro parámetro a la función salto para poder usar otros actores. Cada actor es representado por un número, empezando por uno. Edita la función de "salto" para que utilice el parámetro "actor" hacer el correcto salto del personaje.
      Course 4 Play Lab Params 4: Aquí hay una función denominada "patrulla". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      Course 4 Play Lab Params 5: Llene el parámetro de entrada "actor" de tal manera que podamos llamar la función "patrulla" para cada uno de los actores. Recuerde, los actores corresponden a los números 1, 2 y 3.
      Course 4 Play Lab Params 6: Agrega otro parámetro llamado "velocidad" a la función de "patrulla". Trata de usar un bloque "obtén velocidad" con el nuevo parámetro "velocidad" para ayudar a Pingüino a que obtenga ambas banderas antes de que los otros duendes obtengan una.
      Course 4 Play Lab Params 7: "¡Vamos a divertirnos! Mira el código dado para ver si puedes averiguar qué es lo que hace cada bloque. Cuando termines, usa las flechas de tu teclado para controlar el Perro y colecta todas las banderas."
      Course 4 Play Lab Params 8: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      Course 4 Play Lab Params 9: 'Aquí esta nuestro juego de una etapa anterior, pero la mayoría del código está oculto. Hay una nueva función "puntuación." Editar la función para que el parámetro "puntos" sea agregado a la variable "puntuacion_jugador". La variable "puntuación_jugador" debe aumentar cada vez que Perro etiquete Gato con corazones y disminuir cada vez que Gato etiquete Perro con corazones. Nota: cuando haya terminado, haga clic en "Ejecutar" para jugar. Cuando perro tenga 6 puntos, tú serás llevado al siguiente rompecabezas. '
      Course 4 Play Lab Vars 1: ¡Ahora no tienes que escribir nada de código, sólo presiona "ejecutar" para jugar el juego! En este juego, tú eres el perro que está tratando de recoger más banderas que el Gato. Use la flecha abajo para controlar al Perro. Presiona "Finalizar" cuando terminaste de jugar.
      Course 4 Play Lab Vars 2: ¡Esa carrera en ese último problema no fue justa! Cambie la variable de "velocidad\_perro" para asegurarse de que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!
      Course 4 Play Lab Vars 3: "¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia abajo para saltar. Vea si puede recoger todas las banderas."
      Course 4 Play Lab Vars 4: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro. Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas. Pista: las banderas nuevas tienen 200 píxeles de altura.'
      Course 4 Play Lab Vars 5: ¡Diseñemos un juego! Primero necesitaremos una calificación. Use el bloque "asigne puntos a" para establecer la calificación a 10.
      Course 4 Play Lab Vars 6 (copy 1): ¡Qué bueno! Ahora tenemos nuestra variable puntuación pero, ¿cómo vamos a hacerla útil? ¿Qué tal si añadimos tu variable puntuación cada vez que toca al enemigo con una bola de fuego? Usa el evento "cuando el actor 2 toca cualquier cosa" para generar una actualización a tu puntuación cuando tus bolas de fuego toquen al gato. Puedes incrementar tu puntuación estableciendo puntuación= puntuación + 1. Obtén tu puntuación más de 10 (¡yendo una a la vez!) para pasar de nivel.
      Course 4 Play Lab Vars 6: Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      Course 4 Play Lab Vars 7: Bien, ahora asegurémonos que este juego no sea muy fácil - cada vez que el Perro (actor 1) es golpeado por una bola de fuego usted debe perder un punto. Empiece con 10 puntos de tal manera que no sea muy difícil. Deje que su calificación caiga de 10 a 0 para pasar de nivel.
      Course 4 Play Lab Vars 8 (copy 1): Muy bien, una consideración final para este juego - programémoslo de tal manera que el jugador pueda ganar (o perder). Use una iteración infinita para verificar el valor de la calificación ' si la calificación es alguna vez mayor de 20, haga que el enemigo se esfume. Si la calificación es menor de 0, haga que el jugador se esfume. Presione "Terminar" cuando el juego funcione como le gustaría.
      Course 4 Play Lab Vars 8: Vamos a configurar este juego donde el Perro puede ganar (o perder). Use un ciclo continuo para verificar el valor de la puntuación - Si la puntuación es mayor que 20, haga que desaparezca un enemigo (Un gato), Si la puntuación es siempre menor que 0, haz que desaparezca el jugador (El Perro). Presiona "Finalizar" cuando el juego funcione como te gustaría.
      Course 4 Play Lab Vars 9: "¡Tiempo Libre para jugar! Aquí están todas las variables con las que hemos jugado hasta ahora, también unas pocas más en caso de necesitarlas. Haz un juego o historia que utilice estas variables. Sugerencia: desplázate hacia abajo para ver todos los comandos en el área de trabajo."
      Course 4 Play Lab Vars: Muy bien, una cosa más para este juego - configúralo para que pueda ganar (perder). Usa un ciclo continuo para verificar el valor de la puntuación - si la puntuación es siempre mayor que 20, haz que el enemigo desaparezca. Si la puntuación es siempre menor que 0, haz que el jugador desaparezca.
      Course 4 Play Labs For Loops 1: Vamos a hacer que el perro diga todos los números desde el 1 hasta el 100. Usa un ciclo y un bloque contador para decir la variable contador cada vez que se ejecute el ciclo.
      Course 4 Play Labs For Loops 2: Esta vez, ayuda a Olivia la Gata a contar solamente los números impares entre el 1 y el 101.
      Course 4 Play Labs For Loops 3: Si contamos con números mayores, nosotros podríamos contar velozmente en el mismo tiempo. Pruébalo haciendo al perro contar de 10 en 10 hasta mil empezando de 10
      Course 4 Play Labs For Loops 4: Cambiar el incremento puede ser beneficioso, pero seguiríamos contando linealmente (cada número cambia en la misma medida que el anterior). ¿Que pasaría si contamos exponencialmente? Sin cambiar las instrucciones en este enlace, ¿podrías contar 1,4, 9,16,25...(conteo cuadrádico)?
      Course 4 Play Labs For Loops 4a: Ahora, vamos a mezclar las variables del nivel 7 junto con la variable "contador" para que la magia suceda. En este rompecabezas, el perro contará de 0 a 1000 "incrementando". Establezca la variable "incremento" en 10 al principio de su código para ver qué pasa.
      Course 4 Play Labs For Loops 5: En el último paso, contamos el cuadrado de cada número. Intenta cambiar "conteo ^ 2" a "conteo ^ 3" para trabajar con el cubo de cada número
      Course 4 Play Labs For Loops 5a: |-
        En este rompecabezas, Perro será tu guardián de tiempo.

        Perro contará de 0 a 30 por "incremento". La variable "incremento" comenzará con un valor de 1.

        ¿Puedes hacerlo para que cada vez que hagas clic en Perro, el incremento aumente en 2? Haz clic en la flecha hacia delante para ejecutar el bucle `para`.

        Haz clic en Perro antes de cada uno y ejecuta el bucle un par de veces.
      Course 4 Play Labs For Loops 6: Recordarás que los números primos son cualquier número que solo puede ser dividido por sí mismo y por 1. Utiliza la función "is\_prime" para dialogar solo con los números primos desde 1 a 100
      Course 4 Play Labs For Loops 6a: El Perro aún mantendrá tiempo contando con nuestro bucle "for" de incremento, pero esta vez, vamos a añadir el asistente en la mezcla. ¿Se puede cambiar el código para que el "incremento" suba de dos en dos cada vez que se hace clic en el Asistente? ¡Cuidado! ¡El asistente se mueve rápidamente!
      Course 4 Play Labs For Loops 7: "¿Podrías utilizar un enlace para dialogar la secuencia 1, 4, 7, 10, 13, 16, 19, 22, 25?"
      Course 4 Play Labs For Loops 7a: ¡Ahora estamos consiguiendo algo! ¿Qué pasa si empezamos contando cuántas veces podemos hacer clic en el Asistente antes de que el perro llegue a 30? Termina de añadir bloques al mago para que cada vez que se hace clic en la variable, "hacer clic en" aumenta de a uno. Puede ignorar "incrementar" por ahora. Perro comenzará a contar cuando usted haga clic en "Ejecutar".
      Course 4 Play Labs For Loops 8: "¿Qué enlace me haría dialogar 19, 27, 35, 43, 51?"
      Course 4 Play Labs For Loops 8a: Para terminar nuestro juego, tenemos que usar de nuevo la variable "incremento". Vamos a vincularlo al nivel del juego. 1) Registra la cantidad de veces que se hace clic en el asistente. 2) Si hace clic al mago en al menos 10 veces antes de que el perro cuente 30, suma 1 a la variable "incrementar" y comienza de nuevo. 3) Si el mago no hace clic en al menos 10 veces, el juego es terminado.
      Course 4 Playlab For Loop Freeplay: Utiliza todo lo que has aprendido hasta ahora para hacer un juego que incluya un bucle 'for'.
      Course 4 Playlab For Loops 4b: "¡Ahora, estos dos personajes van a correr! \\\\r \\\\r cada uno de ellos se moverá 'contador' pasos en un momento, pero sus contadores tendrán diferentes valores debido a los bucles 'for'.\\\\r \\\\r ¿Puede cambiar el valor del incremento en uno de los bucles para que la carrera sea un empate?"
      Course 4 Playlab For Loops 5b: Ajusta el intervalo de los bucles 'for' para que ambos personajes terminen exactamente en el mismo lugar.
      Course 4 Playlab For Loops 6b: 'Editar este bucle ''for'' para crear un juego que es divertido para jugar! \\r \\r Presione "Run" y haga clic en Madame unicornio cuatro veces para ganar. '
      Course 4 SCF 1: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta de cómo nuestras filas pares se desplazan hacia la derecha?
      Course 4 SCF 1a: "¿Puedes averiguar cómo recolectar todo este néctar con la menor cantidad de bloques posibles?"
      Course 4 SCF 1b: "¿Puedes averiguar cómo recolectar todo este néctar con la menor cantidad de bloques posibles?"
      Course 4 SCF 2: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como ésta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 SCF 3 Fail 1: Puedes averiguar cómo...
      Course 4 SCF 3 Fail 2: Puedes averiguar cómo...
      Course 4 SCF 3: 'Utiliza lo que aprendiste en la lección anterior para dibujar una imagen como ésta. Nota: El código se vuelve más simple si incorporas parámetros. '
      Course 4 SCFL 1: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      Course 4 SCFL 1a: "¿Puedes hacer que Scrat llegue hasta su bellota con la menor cantidad de bloques posible?"
      Course 4 SCFL 1b: "¿Puedes hacer que Scrat llegue hasta su bellota con la menor cantidad de bloques posible?"
      Course 4 SCFL 2: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      Course 4 SCFL 3: "¿Puedes averiguar cómo volver a crear este dibujo?"
      Course 4 SCFL 4: "¿Puedes averiguar cómo volver a crear este dibujo?"
      Course 4 SCFL 5: "¿Puedes averiguar cómo volver a crear este dibujo?"
      Course 4 SCFL 6: "¿Puedes averiguar cómo volver a crear este dibujo utilizando un solo ciclo?"
      Course 4 SCFL 7: "¡El artista quiere pegar algunas olas! ¿Puedes averiguar cómo volver a crear este dibujo?"
      Course 4 SCFP 1: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de píxeles, y además arriba y abajo una cantidad y de píxeles (utilizando números positivos y negativos).
      Course 4 SCV 1: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCV 2: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCV 3: "¡Ahora por un juego de tocar! Toca al Gato para obtener 2 puntos. Toca al Pingüino para conseguir 3 puntos. ¡Consigue 10 puntos para ganar!, pero ten cuidado, cuando Gato y Pingüino se tocan mutuamente, le quitan puntos. Agrega los bloques necesarios para hacer que este juego funcione de la manera que se explica. ¿Cómo podrá el perro moverse en todas las direcciones con las flechas? ¿Cómo se va añadir puntos cuando el perro toque al gato o al pingüino? ¿Cómo se restarán puntos cuando gato y Pinguino se tocan?"
      Course 4 SCV 4: Resuelve este rompecabezas con el menor número de bloques posible.
      Course 4 SCV 5: Resuelve este rompecabezas con el menor número de bloques posible.
      Course 4 SCV 6: Haga clic aquí para ver las instrucciones de nuevo.
      Course 4 SCVP 1: Crea una función con parámetros que permita al artista saltar hacia adelante y atrás una cantidad x de píxeles, y además arriba y abajo una cantidad y de píxeles (utilizando números positivos y negativos).
      Course 4 Variables Assessment: "¿Puedes crear esta imagen utilizando una variable para los lados? Cada línea debe tener 50 píxeles de largo."
      Course E MC Conditionals1: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Course1BeePuzzle12: Toma tres néctares y luego haz dos mieles
      Course1MazeAssessment1: |-
        ¡Esta es una prueba!
        Muévete en una dirección, luego en otra para llevarme hasta el cerdo
      Course1MazeAssessment2: |-
        ¡Esta es una prueba!
        Muévete en una dirección, luego en otra para llevarme hasta el cerdo.
      CourseD_Dance_Party_01: Arrastra el bloque de 'Crear nuevo' en el espacio de trabajo y conéctalo dentro del bloque de 'instalación'.
      CourseD_Dance_Party_02: Haz que el alce comience un nuevo movimiento después de 4 medidas.
      CourseD_Dance_Party_03: Haz que el bailarín comience un nuevo movimiento después de 6 medidas.
      CourseD_Dance_Party_04: Añade un efecto de fondo a tu programa.
      CourseD_Dance_Party_05: Usa un nuevo bloque para hacer que el bailarín cambie los movimientos cada 2 medidas.
      CourseD_Dance_Party_06: Crea un bailarín llamado 'backup\_dancer1' para que baile con el gato.
      CourseD_Dance_Party_08: "¿Puedes hacer que ambos bailarines sean del mismo tamaño?"
      CourseD_Dance_Party_09: Utiliza el bloque de 'definir tinte ' para cambiar el color de un bailarín.
      CourseD_Dance_Party_10: Haz que el otro bailarín también responda a la música usando el bloque 'comienza después'.
      CourseD_Dance_Party_11: El bloque 'cuando presiona arriba' le permite ejecutar el código cuando se presiona la flecha hacia arriba. Tratar de hacer que el bailarín haga un movimiento rápido cuando pulses la tecla arriba.
      CourseD_Dance_Party_11_5: Usa los bloques de "todos los patos" para hacer que todos los patos bailen juntos.
      CourseD_Dance_Party_11b: Haz que el Robot baile una vez cuando se pulse la tecla de flecha derecha y haga el "hilo", una vez cuando presiones la tecla de flecha hacia arriba. ¡Haz el baile del robot y el hilo tan rápido como puedas!
      CourseD_Dance_Party_12: |-
        ¡Vamos baila! Crea tu propio baile para compartir con tus
        amigos.
      CourseE_HOC 2018 Level_1: Obtén un bote en el cofre.
      CourseE_HOC 2018 Level_10: Dirígete a la entrada de este monumento oceánico.
      CourseE_HOC 2018 Level_11: Fabrica un conducto con prismarina dentro del monumento oceánico.
      CourseE_HOC 2018 Level_2: Dirígete al final del muelle.
      CourseE_HOC 2018 Level_3: Cruza el mar para ir hacia donde está el bacalao.
      CourseE_HOC 2018 Level_4: Usa un giro para llegar a donde está el delfín.
      CourseE_HOC 2018 Level_5: Explora el barco hundido para llegar a donde está el cofre.
      CourseE_HOC 2018 Level_6: Cruza el hielo para llegar a donde está el salmón.
      CourseE_HOC 2018 Level_7a: Explora estas ruinas submarinas para encontrar un cofre.
      CourseE_HOC 2018 Level_9b: Usa el coral como punto de referencia para llegar a donde está el tesoro.
      CourseF_PlayLab_vars1: 'No necesitas escribir código para jugar. ¡Solamente presiona "Ejecutar"! '
      CourseF_PlayLab_vars10: "¡Tiempo Libre para jugar! Aquí están todas las variables con las que hemos jugado hasta ahora, también unas pocas más en caso de necesitarlas. Haz un juego o historia que utilice estas variables. Sugerencia: desplázate hacia abajo para ver todos los comandos en el área de trabajo."
      CourseF_PlayLab_vars2: ¡Esa carrera en ese último problema no fue justa! Cambie la variable de "velocidad\_perro" para asegurarse de que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!
      CourseF_PlayLab_vars3: "¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia abajo para saltar. Vea si puede recoger todas las banderas."
      CourseF_PlayLab_vars4: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro. Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas. Pista: las banderas nuevas tienen 200 píxeles de altura.'
      CourseF_PlayLab_vars5: ¡Diseñemos un juego! Primero necesitaremos una calificación. Use el bloque "asigne puntos a" para establecer la calificación a 10.
      CourseF_PlayLab_vars6: Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars7: Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars8: Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      CourseF_PlayLab_vars9: Bien, ahora asegurémonos que este juego no sea muy fácil - cada vez que el Perro (actor 1) es golpeado por una bola de fuego usted debe perder un punto. Empiece con 10 puntos de tal manera que no sea muy difícil. Deje que su calificación caiga de 10 a 0 para pasar de nivel.
      Crack Random Substitution: Instrucciones
      Crack Random Substitution_2018: Instrucciones
      Crack Random Substitution_2019: Instrucciones
      Crack a Caesar Cipher: Instrucciones
      Crack a Caesar Cipher_2018: Instrucciones
      Crack a Caesar Cipher_2019: Instrucciones
      D_Frozen_nested3: "¡Hagamos grar la línea de formas!"
      D_Frozen_nested4: "¡Es hor de poner las formas en capas!"
      D_Frozen_nested5: "¡Juega con los copos de nieve!"
      D_Frozen_nested6: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      D_Frozen_nested7: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      D_Frozen_nested8: Haz girar la forma 5 ó 6 veces en círculo.
      D_Frozen_nested9: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!

        -   ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        -   ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        -   ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      Dance Party 1-validated: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Dance Party 1-validated_2019: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Dance Party 1-validated_simple: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Dance Party 2: Cambia el comportamiento dentro del bloque `___ comienza ___` para hacer que el extraterrestre comience a dar vueltas.
      Dance Party 2_2019: Cambia el comportamiento dentro del bloque `spring comienza` para hacer que el extraterrestre comience a dar vueltas.
      Dance Party 2_simple: Cambia el comportamiento dentro del bloque `___ comienza ___` para hacer que el extraterrestre comience a dar vueltas.
      Dance Party 3 - Validated: 'Crea un nuevo sprite llamado `extraterrestre2`, luego haz que haga un movimiento de danza diferente cuando se haga clic.  '
      Dance Party 3 Ram: Haz que el sprite haga algo diferente cuando presiones la flecha hacia arriba.
      Dance Party 3: 'Crea un nuevo sprite llamado `extraterrestre2`, luego haz que haga un movimiento de danza diferente cuando se haga clic.  '
      Dance Party 3_2019: 'Crea un nuevo sprite que parezca un extraterrestre rosado, luego haz que haga un movimiento de danza diferente cuando se haga clic.  '
      Dance Party 3_simple: 'Crea un nuevo sprite llamado `extraterrestre2`, luego haz que haga un movimiento de danza diferente cuando se haga clic.  '
      Dance Party 4 Validated: 'Crea un tercer sprite llamado `extraterrestre3` y haz que todos tus extraterrestres se pongan en una línea. '
      Dance Party 4: 'Crea un tercer sprite llamado `extraterrestre3` y haz que todos tus extraterrestres se pongan en una línea. '
      Dance Party 4_2019: 'Crea un tercer sprite que parezca un extraterrestre amarillo, y haz que todos tus extraterrestres se pongan en una línea. '
      Dance Party 4_simple: 'Crea un tercer sprite llamado `extraterrestre3` y haz que todos tus extraterrestres se pongan en una línea. '
      Dance Party 5 - Validated: Añade código para cambiar el color de cada extraterrestre cuando se le haga clic.
      Dance Party 5: Añade código para cambiar el color de cada extraterrestre cuando se le haga clic.
      Dance Party 5_2019: Añade código para cambiar el color de cada extraterrestre cuando se le haga clic.
      Dance Party 5_simple: Añade código para cambiar el color de cada extraterrestre cuando se le haga clic.
      Dance Party 6 - Validated: Usa el bloque `detiene todo` para hacer que cada extraterrestre deje de moverse cuando se le haga clic.
      Dance Party 6: Usa el bloque `detiene todo` para hacer que cada extraterrestre deje de moverse cuando se le haga clic.
      Dance Party 6_2019: Usa el bloque `detiene todo` para hacer que cada extraterrestre deje de moverse cuando se le haga clic.
      Dance Party 6_simple: Usa el bloque `detiene todo` para hacer que cada extraterrestre deje de moverse cuando se le haga clic.
      Dance Party 7 - Validated: Añade un nuevo sprite de campana llamado `miCampana` que hace que todos los extraterrestres empiecen a hacer el mismo movimiento de baile cuando se le hace clic.
      Dance Party 7: Añade un nuevo sprite de campana llamado `miCampana` que hace que todos los extraterrestres empiecen a hacer el mismo movimiento de baile cuando se le hace clic.
      Dance Party 7_2019: Añade un nuevo sprite que parezca una campana. Haz que todos los extraterrestres empiecen a hacer el mismo movimiento de baile cuando se haga clic en la campana.
      Dance Party 7_simple: Añade un nuevo sprite de campana llamado `miCampana` que hace que todos los extraterrestres empiecen a hacer el mismo movimiento de baile cuando se le hace clic.
      Dance Party Freeplay: "¡Ahora crea tu propia discoteca extraterrestre!"
      Dance Party Freeplay_2019: "¡Ahora crea tu propia discoteca extraterrestre!"
      Dance Party Freeplay_simple: "¡Ahora crea tu propia discoteca extraterrestre!"
      Dance Party Predict: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Dance Party Predict_2019: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Dance Party Predict_simple: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Dance_Party_01: Arrastra el bloque de 'Crear nuevo' en el espacio de trabajo y conéctalo dentro del bloque de 'instalación'.
      Dance_Party_01_low: Arrastra el bloque de 'Crear nuevo' en el espacio de trabajo y conéctalo dentro del bloque de 'instalación'.
      Dance_Party_02: Haz que el alce comience un nuevo movimiento después de 4 medidas.
      Dance_Party_03: Haz que el bailarín comience un nuevo movimiento después de 6 medidas.
      Dance_Party_04: Añade un efecto de fondo a tu programa.
      Dance_Party_05: Usa un nuevo bloque para hacer que el bailarín cambie los movimientos cada 2 medidas.
      Dance_Party_06: Crea un bailarín llamado 'backup\_dancer1' para que baile con el gato.
      Dance_Party_08: "¿Puedes hacer que ambos bailarines sean del mismo tamaño?"
      Dance_Party_09: Utiliza el bloque de 'definir tinte ' para cambiar el color de un bailarín.
      Dance_Party_10: Haz que el otro bailarín también responda a la música usando el bloque 'comienza después'.
      Dance_Party_11.5_test: Usa los bloques de "todos los patos" para hacer que todos los patos bailen juntos.
      Dance_Party_11: El bloque 'cuando presiona arriba' le permite ejecutar el código cuando se presiona la flecha hacia arriba. Tratar de hacer que el bailarín haga un movimiento rápido cuando pulses la tecla arriba.
      Dance_Party_11_5: Usa los bloques de "todos los patos" para hacer que todos los patos bailen juntos.
      Dance_Party_11b: Haz que el Robot baile una vez cuando se pulse la tecla de flecha derecha y haga el "hilo", una vez cuando presiones la tecla de flecha hacia arriba. ¡Haz el baile del robot y el hilo tan rápido como puedas!
      Dance_Party_12: |-
        ¡Vamos baila! Crea tu propio baile para compartir con tus
        amigos.
      Dance_Party_extras_battle: Grupos de Baile (Haz clic en "Más" para obtener más detalles)
      Dance_Party_extras_every_beat: Negras (Haz clic en "Más" para obtener más detalles)
      Dance_Party_extras_layout: ¡Vamos a entrar en formato! (Haz clic en "Más" para obtener más detalles)
      Dance_Party_extras_on_beat: Bass, Mid y Treble (Haz clic en "Más" para obtener más detalles)
      Dance_Party_extras_speed: Aceléralo, Atrásalo (Haz clic en "Más" para obtener más detalles)
      Dance_Party_extras_visible: ¿Dónde habrá ido? (Haz clic en "Más" para obtener más detalles)
      ECSPD Binary Odometer: Este es otro recurso que podrías usar con tus estudiantes.
      Eval Booleans 1: Los operadores booleanos (como >, \<, =) nos permiten comparar diferentes valores, y devolver o verdadero o falso. Haz clic en "Ejecutar" para ver cómo evalúa esta expresión.
      Eval Booleans 2: "¿Puedes establecer los valores para que esta expresión evalúe como verdadera?"
      Eval Booleans 3: 'La función longitud-cadena devuelve el número de caracteres en una cadena (¡incluidos los espacios!): haz que este código evalúe a verdadero.'
      Eval Booleans 4: 'Aquí hay un Bloque de Evaluación llamado Y: devuelve verdadero si ambos parámetros son verdaderos; de lo contrario, devuelve falso. Edita la variable x para que esta expresión devuelva verdadero.'
      Eval Booleans 5: Este bloque `O` devuelve verdadero si alguno de sus parámetros es verdadero. De lo contrario, si ambos parámetros son falsos, devolverá falso. Establece la variable y a un valor que causará que esta expresión devuelva falso.
      Eval Booleans 6: Aquí hay un bloque booleano más llamado NO. Este bloque va de verdadero a falso, o falso a verdadero. Si envuelve este bloque de código en un bloque NO, debe volver verdadero (porque estamos preguntando si las dos expresiones NO producen valores iguales).
      Eval Booleans: Los booleanos nos permiten comparar diferentes valores, y devolver "verdadero" si son iguales, o "falso" si no lo son. ¿A qué crees que se evaluará este código?
      Eval Cond 1: El bloque `cond` comprueba las expresiones booleanas en la columna izquierda, y tan pronto como encuentre una que devuelva "verdadero", ejecuta el código correspondiente a la derecha. Si ninguna de las expresiones evalúa a "verdadero", ejecuta el bloque inferior. Actualiza la variable "temperatura" para que este bloque devuelva "Es justo"
      Eval Cond 2 (copy 1): 'Esta condición devuelve una forma diferente basada en el valor de la variable "lados": cambiar el valor de "lados" para que el condicional devuelva un triángulo.'
      Eval Cond 2: 'Esta condición devuelve una forma diferente basada en el valor de la variable "lados": cambiar el valor de "lados" para que el condicional devuelva un triángulo.'
      Eval Cond 3 (copy 1): '¿Puedes escribir una condición que compruebe la variable "edad" y devuelve "Edad suficiente como para votar y conducir" si tienes una edad > 17, "Edad suficiente como para conducir" si la edad es > 15, y "No puedes conducir o votar" si ninguna de las condiciones es verdadera. Pista: la primera condición en devolver "verdadero" gana; asegúrate de que pones las condiciones en el orden correcto.'
      Eval Cond 3: '¿Puedes escribir una condición que compruebe la variable "edad" y devuelve "Edad suficiente como para votar y conducir" si tienes una edad > 17, "Edad suficiente como para conducir" si la edad es > 15, y "No puedes conducir o votar" si ninguna de las condiciones es verdadera. Pista: la primera condición en devolver "verdadero" gana; asegúrate de que pones las condiciones en el orden correcto.'
      Eval Cond 4: Podemos usar la función string=? para hacer condicionales que respondan a la entrada de texto. Esta es una función llamada forma verde que toma una cadena para el tipo de forma. Completa las condiciones para que la forma verde sólida correcta se devuelva cuando la función se ejecuta con "círculo", "triángulo", "cuadrado" o "rectángulo".
      Eval Cond 5: Esta es una forma roja de función similar con una variable adicional para el tamaño. Completa las condiciones para que la imagen roja sólida correcta de un tamaño determinado sea dibujada para "círculo", "triángulo" y "estrella".
      Eval Cond 6: |-
        Escribe una función llamada crítico-comida, que toma el nombre de un alimento y produce una Cadena que dice cómo te siente con respecto a ese alimento. Por ejemplo, (crítico-comida "pizza") podría evaluar a "delicioso", pero (crítico-comida "huevos podridos") podría evaluar a "grosero". Elige al menos dos comidas para revisar, pero puedes escribir más si quieres. No olvides añadir una cláusula "otra"
        Un ejemplo (y parte de la definición) ya se ha hecho por ti.
      Eval Cond 7: |-
        Juego libre: Escribe una función llamada forma-verde, que toma el nombre de una forma y produce una forma verde sólida. Tu función debe funcionar con al menos “círculo”, “estrella” y “rectángulo”, pero puedes añadir otras formas si lo deseas. Puedes elegir el tamaño de cada forma. No olvides añadir una cláusula “otra”.
        Un ejemplo (y parte de la definición) ya se ha hecho para ti.
      Eval Cond 8: 'Juego libre: Supón que quieres tener un coche a las 21:00, o tener tu propio negocio para cuando cumplas 30. Escribe una función llamada objetivos-vida, que toma una edad y produce una cadena que describe tus objetivos de vida para entonces. ¡No olvides añadir una cláusula “otra”!    '
      Eval Contracts 1: Usa la función "estrella" para producir una estrella roja con un radio de 60 pixeles
      Eval Contracts 10A: Completemos el próximo desafío con un Cuadrado Verde que tenga un tamaño de 175 pixeles.
      Eval Contracts 11A: ¿Puedes completar este desafío para leer "Hola, mundo" en el banner?
      Eval Contracts 2: 'Echa un vistazo a la función "rotar": ¿puedes usarlo para rotar este cuadrado verde de 90 pixeles en 45 grados?'
      Eval Contracts 3: Intenta utilizar la función "texto" para escribir este texto en tamaño 40.
      Eval Contracts 4 A: 'La función "escala" devuelve una imagen que se escala a un tamaño mayor o menor que la imagen de entrada. Intenta escalar este círculo por un factor de 10: ¿de qué manera la imagen resultante difiere de si acabas de hacer un círculo de ese tamaño en primer lugar?'
      Eval Contracts 4: La función de escala devuelve una imagen que es mayor o menor que la imagen de entrada. Intenta escalar este círculo por un factor de 10. ¿De qué manera la imagen devuelta difiere de si acabas de hacer un círculo de ese tamaño en primer lugar?
      Eval Contracts 8A: "¿Puedes completar este desafío? El triángulo-grande es de 200 pixeles de tamaño y púrpura?"
      Eval Contracts A: Usa la función "estrella" para producir una estrella roja sólida con un radio de 60 pixeles
      Eval Contracts C: 'Echa un vistazo a la función "rotar": ¿puedes usarlo para rotar este cuadrado verde de 90 pixeles en 45 grados?'
      Eval Contracts E: Intenta utilizar la función "texto" para escribir "Hola, mundo" en teal, en tamaño 40.
      Eval Contracts shrink: '¿Puedes completar esta imagen usando el bloque de función "achicar"? El radio es 20. '
      Eval Define Funcs 1: Aquí hay una nueva función llamada triángulo-verde que toma un único número para tamaño y produce un triángulo verde. Usa la nueva función para crear un triángulo verde de 125 pixeles.
      Eval Define Funcs 2: Vamos a mirar dentro de esa función triángulo-verde para ver cómo funciona. ¿Puedes modificarla para que la función triángulo-verde siempre dibuje triángulos verdes delineados?
      Eval Define Funcs 3: Este es el inicio de otra nueva función llamada círculo-púrpura con un dominio de un número (el radio) y un rango de Imagen. Si embargo, el cuerpo de la función se rompe; arréglalo y luego haz un círculo púrpura con un radio de 150 pixeles.
      Eval Define Funcs 4: Crea una nueva función llamada estrella-acuática que tiene un Dominio de un único Número para el radio y devuelve una estrella acuática del radio dado. Ejecuta tu nueva función con un radio de 75.
      Eval Define Funcs 5: Utilicemos esa función estrella-acuática para hacer una fila de estrellas de diferentes tamaños. De izquierda a derecha, las estrellas deberían tener un radio de 25, 50 y 75.
      Eval Define Funcs Test: Este es el inicio de otra nueva función llamada círculo-púrpura con un dominio de un número (el radio) y un rango de Imagen. Si embargo, el cuerpo de la función se rompe; arréglalo y luego haz un círculo púrpura con un radio de 150 pixeles.
      Eval Defining Vars Free Play 1: 'Juego libre: Hemos proporcionado una función que llena tu pantalla con mi-imagen. Cambia mi-imagen para ver qué patrones puedes hacer.'
      Eval Design Recipe .1: Esta es una Receta de Diseño para una función llamada cuadrado-círculo con el nombre de dominio Número de Cadena y rango de Imagen. Haga clic en Editar para escribir la definición de función (verá dos ejemplos proporcionados).
      Eval Design Recipe 1 (copy 1): 'Vamos a escribir una función que dibuja un rectángulo sólido de cualquier color que es el doble de ancho al igual que de alto. Empieza con un ejemplo: dibuja un rectángulo verde sólido que tiene una altura de 100 pixeles.'
      Eval Design Recipe 1: 'Ahora dado el Contrato de ancho-rect: Número de Cadena -> Imagen, escribe un ejemplo; dibuja un rectángulo verde sólido que tiene una altura de 100 pixeles.'
      Eval Design Recipe 2 (copy 1): Hagamos un ejemplo más antes de escribir la definición de función; esta vez, dibuja un rectángulo rojo sólido con una altura de 75 pixeles.
      Eval Design Recipe 2: Hagamos un ejemplo más antes de escribir la definición de función; esta vez, dibuja un rectángulo rojo sólido con una altura de 75 pixeles.
      Eval Design Recipe 3: La receta de diseño para el ancho-rectángulo ya tiene un contrato y un ejemplo. ¿Puede escribir un segundo ejemplo y luego completar la definición? La función de ancho-rectángulo debe producir un rectángulo de color dado, cuya anchura sea dos veces mayor a la altura.
      Eval Design Recipe 4: Use la Receta de Diseño para crear una función `explosión de estrellas`. Cuando se le dan varios puntos y un radio externo, `explosión de estrellas` devuelve una estrella radial amarilla con puntos dados, y un radio interior que es la mitad del radio externo.
      Eval Design Recipe 5: Usando la Receta de Diseño, escribe una función `marcador-rayado` que toma dos colores y produce una bandera de 250 pixeles de ancho, 150 pixeles de altura, con tres rayas horizontales de colores planas, en el orden color2, color1, color2.
      Eval Design Recipe 6: Escribe una función `polígono-grande` que debe producir un polígono sólido de los lados y color que ocupa la mayor parte de la ventana, independientemente del número de lados. Para asegurarse de que el polígono no se vuelve demasiado grande al aumentar el número de lados, la longitud lateral debe ser inversamente proporcional al número lateral, con una longitud de (800/lados).
      Eval Free Play: 'Juego libre: ¡Haz arte con código!'
      Eval Strings Images .2: La función de añadir-cadena toma dos cadenas y devuelve una cadena combinada. Agrega una cadena "Universo" al segundo argumento de añadir-cadena.
      Eval Strings Images 1: El tercer tipo de datos que vamos a utilizar es una Imagen. Esta función estrella toma un Número y dos Cadenas, y evalúa una Imagen. Utiliza esta función para hacer una estrella roja sólida con radio de 100.
      Eval Strings Images 3: Algunas funciones sólo pueden tomar un conjunto específico de cadenas, como el segundo argumento de esta función de círculo, que controla su estilo. Dibuja este círculo de contorno naranja usando el bloque de cadena especial con un menú desplegable para asegurarse de que sólo utiliza estilos válidos.
      Eval Strings Images 4: Intenta usar el bloque rectángulo para dibujar este rectángulo sólido rojo; es de 175 pixeles de ancho y 100 pixeles de altura.
      Eval Strings Images 5: Intenta usar este nuevo Bloque de Evaluación llamado overlay para colocar un triángulo blanco de 100 pixeles en la parte superior de un círculo rojo de 200 pixeles.
      Eval Strings Images 7: El bloque de desplazamiento permite mover una imagen relativa a donde normalmente se colocaría. Utiliza este bloque para compensar el cuadrado en 100 pixeles en el eje y.
      Eval Strings Images 8: "¡Aquí hay un bloque de estrella diferente, se llama estrella-radial y te permite dibujar estrellas con cualquier número de puntos! Úsalo para crear una estrella naranja sólida de 7 puntos con un radio interno de 75 pixeles y un radio externo de 175 pixeles."
      Farmer for Authored Hint testing: 'Wow, ¡encontré un agujero realmente profundo! No se cuántas paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta que el suelo este parejo? Sugerencia: Esta vez, intenta usar el bucle `mientras`.'
      Farmer for TTS testing: 'Wow, ¡encontré un agujero realmente profundo! No se cuántas paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta que el suelo este parejo? Sugerencia: Esta vez, intenta usar el bucle `mientras`.'
      Finalize Your Chaser Game v.1: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      Finalize Your Chaser Game v.1_2018: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      Finalize Your Chaser Game v.1_2019: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      Find the Wizard: Construye lo que quieras. ¡Este es un ejemplo de un juego de adivinación de números!
      Find the Wizard_2018: Construye lo que quieras. ¡Este es un ejemplo de un juego de adivinación de números!
      Fish Tank 2-validated: Convierte a Dusty (la planta rodadora) en un pez.
      Fish Tank 2-validated_2019: Convierte a Dusty (la planta rodadora) en un pez.
      Fish Tank 2-validated_simple: Convierte a Dusty (la planta rodadora) en un pez.
      Fish Tank 3-validated Ram: Cambia el comportamiento del pez para que se mueva alrededor del tanque.
      Fish Tank 3-validated: Cambia el comportamiento del pez para que se mueva alrededor del tanque.
      Fish Tank 3-validated_2019: Cambia el comportamiento del pez para que se mueva alrededor del tanque.
      Fish Tank 3-validated_simple: Cambia el comportamiento del pez para que se mueva alrededor del tanque.
      Fish Tank 4-validated: Usa el bloque `configurar color de fondo` para hacer azul el fondo.
      Fish Tank 4-validated_2019: Usa el bloque `configurar color de fondo` para hacer azul el fondo.
      Fish Tank 4-validated_simple: Usa el bloque `configurar color de fondo` para hacer azul el fondo.
      Fish Tank 5-validated_simple: El pez quiere un amigo. Agrega un nuevo sprite.
      Fish Tank 6-validated: Añade un comportamiento al nuevo amigo del pescado.
      Fish Tank 6-validated_2019: Añade un comportamiento al nuevo amigo del pescado.
      Fish Tank 6-validated_simple: Añade un comportamiento al nuevo amigo del pescado.
      Fish Tank 7-validated: "¡Usa algunos bloques nuevos de la caja de herramientas para darle un toque especial a tu pecera!"
      Fish Tank 7-validated_2019: "¡Usa algunos bloques nuevos de la caja de herramientas para darle un toque especial a tu pecera!"
      Fish Tank 7-validated_simple: "¡Usa algunos bloques nuevos de la caja de herramientas para darle un toque especial a tu pecera!"
      Food Fight!: 'Añadimos una última función para ti. Utiliza una sentencia "Si" para que tu programa llame la función "livel_mas" solo cuando "puntuacion_jugador" sea mayor que un cierto número. Por ejemplo: "puntuacion\_jugador" > 6 Juega el juego, y hazlo pasar de nivel 4 para mover al siguiente problema. '
      Food Fight: "¡Puedes hacer lo que quieras en el laboratorio de juego! Este es un ejemplo de juego que puedes crear."
      FoodFight: Este es un ejemplo de un juego que puedes hacer en el laboratorio de juego.
      FoodFight_2018: Este es un ejemplo de un juego que puedes hacer en el laboratorio de juego.
      Frequency Analysis: Prueba
      Function intro Ryan: Usa la función "Construir puente" dos veces para crear un camino para la antorcha.
      Function intro Ryan_2019: Usa la función "Construir puente" dos veces para crear un camino para la antorcha.
      GLJ Drag and fall: "¡Este Corgi ha sido un buen chico! Arrastra esta zanahoria hasta él a modo de regalo especial."
      GLJ Dragity: "¡Este Corgi ha sido un buen chico! Arrastra esta zanahoria hasta él a modo de regalo especial."
      GLJ Flappy2: 'Haz clic para agitar: ¡no toques el suelo!'
      GLJr_Behavior_1: En tu hoja de trabajo, escribe lo que crees que el perro hará cuando hagas clic en "Ejecutar".
      GLJr_Behavior_2: "¡Ahora tienes algunos bloques nuevos! Pruébalos y mira cómo funcionan. En tu hoja de trabajo, escribe cuáles has probado y qué hacen."
      GLJr_Behavior_5: "¡Ahora tenemos dos sprites! Usa comportamientos para hacer que el perro se ponga nervioso y que el gato deambule."
      GLJr_Behavior_6: 'Probemos más comportamientos: haz que el perro corra hacia arriba y que el gato corra a la derecha.'
      GLJr_Forever_1: En tu hoja de trabajo, escribe lo que crees que el perro hará cuando hagas clic en "Ejecutar".
      GLJr_Forever_2: "¡Ahora tienes algunos bloques nuevos! Pruébalos y mira cómo funcionan. En tu hoja de trabajo, escribe cuáles has probado y qué hacen."
      'Game Lab Workshop: Random': Selecciona un bloque de forma y utiliza llamadas al númeroaleatorio() en lugar de uno o más de los parámetros. Asegúrate de ejecutarlo algunas veces para que puedas ver el efecto de la aleatorización.
      Geometric Pattern: 'Idea del proyecto: usa ideas geométricas como formas para crear un patrón. ¡Esto requiere persistencia y planificación!'
      Geometric Sun: 'Idea del proyecto: usa ideas geométricas como formas para crear un patrón. ¡Esto requiere persistencia y planificación!'
      Geometric Sun_2018: 'Idea del proyecto: usa ideas geométricas como formas para crear un patrón. ¡Esto requiere persistencia y planificación!'
      Geometric Sun_2019: 'Idea del proyecto: usa ideas geométricas como formas para crear un patrón. ¡Esto requiere persistencia y planificación!'
      Get To The Goal: Construye lo que quieras. ¡Este es un ejemplo de un juego de adivinación de números!
      'Grade 4 Example PlayLab Project #1': Echa un vistazo a este proyecto. ¿Puedes ver cómo se hizo?
      'Grade 4 Example PlayLab Project #2': Echa un vistazo a este proyecto. ¿Puedes ver cómo se hizo?
      Guess The Number 2: Construye lo que quieras. ¡Este es un ejemplo de un juego de adivinación de números!
      Guess The Number: Construye lo que quieras. ¡Este es un ejemplo de un juego de adivinación de números!
      Guess The Number_2018: Construye lo que quieras. ¡Este es un ejemplo de un juego de adivinación de números!
      HOC 2018 Level_1: Obtén un bote en el cofre.
      HOC 2018 Level_10: Dirígete a la entrada de este monumento oceánico.
      HOC 2018 Level_11: Fabrica un conducto con prismarina dentro del monumento oceánico.
      HOC 2018 Level_12: "¡Diseña tu propio ambiente submarino como quieras!"
      HOC 2018 Level_2: Dirígete al final del muelle.
      HOC 2018 Level_3: Cruza el mar para ir hacia donde está el bacalao.
      HOC 2018 Level_4: Usa un giro para llegar a donde está el delfín.
      HOC 2018 Level_5: Explora el barco hundido para llegar a donde está el cofre.
      HOC 2018 Level_6: Cruza el hielo para llegar a donde está el salmón.
      HOC 2018 Level_7a: Explora estas ruinas submarinas para encontrar un cofre.
      HOC 2018 Level_9b: Usa el coral como punto de referencia para llegar a donde está el tesoro.
      Hannah DataVis Test: Cambia la expresión booleana para el bucle `mientras` para que se detenga cuando ambos dados sean mayores o iguales a 5. (Haz clic para ver las instrucciones completas)
      Harvester Test: "¡Es tiempo de cosecha! Pero olvidé qué cultivo planté en qué baldosa. Por favor, ayúdame a cosechar todos mis cultivos, sin importar cómo se plantaron originalmente."
      Harvesting: Oh, he perdido mi mapa y no puedo recordar lo que planté. Cada brote podría crecer hasta convertirse en maíz, frijoles o calabazas. ¿Puedes escribir algún código para elegir todos los cultivos, independientemente de lo que sean?
      HoCAB_labyrinth1: "¡Usa los bloques de flecha para resolver este laberinto!"
      Infinity_catch: ¿Puedes hacer que Elsa ("actor2") alcance a Anna utilizando las teclas de flecha?
      Infinity_finale: "¡Crea cualquier cosa que desees compartir!"
      Infinity_move_collide: Hiro es el "actor 1". Muévelo cerca de Baymax y reproduce un sonido cuando se toquen.
      Infinity_move_directions: Baymax es el "actor 2". Agrega bloques de movimiento y luego mueve a Baymax utilizando las flechas. Haz que toque a los otros dos personajes.
      Infinity_move_right: Hiro es el "actor 1". Utiliza el bloque de movimiento para mover a Hiro hasta a tocar Baymax.
      Infinity_repeat: Utilice un bloque "repetir para siempre" para mover a Anna arriba y abajo de 400 píxeles.
      Infinity_say: Haz a Anna decir "Hola" utilizando el bloque de decir.
      Infinity_shoot: Baymax es el "actor 2". Haz que Baymax lance un cohete a Hiro.
      Infinity_shoot_directions: Hiro es el "actor 3". Has que Hiro lance un proyectil a cada uno de los cuatro personajes. Espera un segundo entre cada tiro.
      Infinity_test: Este es un nivel de infinito de prueba.
      Infinity_touch_faster: "¡Toca aún más copos de nieve!"
      Infinity_touch_four: Mueve a Anna hacia arriba, abajo a la izquierda y a la derecha para tocar cada uno de los cuatro copos de nieve.
      Infinity_touch_score: Haz que Anna anote un punto cuando ella toque un copo de nieve. Después, haz clic en "Ejecutar" y condúcela para tocar una vez cada copo de nieve.
      Inspirational Artwork: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      InspirationalArtwork: Si esta imagen te inspira, intenta hacer algo similar. De lo contrario, crea algo propio.
      InspirationalArtwork_2018: Si esta imagen te inspira, intenta hacer algo similar. De lo contrario, crea algo propio.
      InspirationalArtwork_2019: Si esta imagen te inspira, intenta hacer algo similar. De lo contrario, crea algo propio.
      'Internet Simulator: Broadcast Mode': Ahora usa el simulador de Internet para enviar los movimientos de la nave de batalla. Para configurar, únete a una Sala con tu grupo, y añade barcos a su tablero de papel para cada oponente. Al jugar, toda la comunicación debe hacerse a través de la herramienta, ¡así que no debes hablar, sino divertirte!
      'Internet Simulator: Broadcast': Ahora usa el simulador de Internet para enviar los movimientos de la nave de batalla. Para configurar, únete a una Sala con tu grupo, y añade barcos a su tablero de papel para cada oponente. Al jugar, toda la comunicación debe hacerse a través de la herramienta, ¡así que no debes hablar, sino divertirte!
      'Internet Simulator: Broadcast_2018': Ahora usa el simulador de Internet para enviar los movimientos de la nave de batalla. Para configurar, únete a una Sala con tu grupo, y añade barcos a su tablero de papel para cada oponente. Al jugar, toda la comunicación debe hacerse a través de la herramienta, ¡así que no debes hablar, sino divertirte!
      'Internet Simulator: Broadcast_2019': Ahora usa el simulador de Internet para enviar los movimientos de la nave de batalla. Para configurar, únete a una Sala con tu grupo, y añade barcos a su tablero de papel para cada oponente. Al jugar, toda la comunicación debe hacerse a través de la herramienta, ¡así que no debes hablar, sino divertirte!
      'Internet Simulator: DNS Mode': En esta versión del simulador de Internet, se te proporciona un sistema de nombres de dominio (DNS) y este conoce las direcciones IP de todos las computadoras conectadas. Envía un mensaje en el formulario GET [hostname] al servicio DNS en la dirección <yourRouterNumber>.15 para obtener la dirección de un estudiante.
      'Internet Simulator: DNS': En esta versión del simulador de Internet, se te proporciona un sistema de nombres de dominio (DNS) y este conoce las direcciones IP de todos las computadoras conectadas. Envía un mensaje en el formulario GET [hostname] al servicio DNS en la dirección <yourRouterNumber>.15 para obtener la dirección de un estudiante.
      'Internet Simulator: DNS_2018': En esta versión del simulador de Internet, se te proporciona un sistema de nombres de dominio (DNS) y este conoce las direcciones IP de todos las computadoras conectadas. Envía un mensaje en el formulario GET [hostname] al servicio DNS en la dirección <yourRouterNumber>.15 para obtener la dirección de un estudiante.
      'Internet Simulator: DNS_2019': En esta versión del simulador de Internet, se te proporciona un sistema de nombres de dominio (DNS) y este conoce las direcciones IP de todos las computadoras conectadas. Envía un mensaje en el formulario GET [hostname] al servicio DNS en la dirección <yourRouterNumber>.15 para obtener la dirección de un estudiante.
      'Internet Simulator: Packets': |-
        Desarrolla un Protocolo para enviar un mensaje de manera fiable.

        Restricciones:

        -   Los paquetes pueden contener sólo 8 caracteres
        -   Los paquetes pueden bajar con probabilidad pequeña
        -   Los paquetes podrían no llegar en orden
      'Internet Simulator: Packets_2018': |-
        Desarrolla un Protocolo para enviar un mensaje de manera fiable.

        Restricciones:

        -   Los paquetes pueden contener sólo 8 caracteres
        -   Los paquetes pueden bajar con probabilidad pequeña
        -   Los paquetes podrían no llegar en orden
      'Internet Simulator: Packets_2019': |-
        Desarrolla un Protocolo para enviar un mensaje de manera fiable.

        Restricciones:

        -   Los paquetes pueden contener sólo 8 caracteres
        -   Los paquetes pueden bajar con probabilidad pequeña
        -   Los paquetes podrían no llegar en orden
      'Internet Simulator: Routers': Enviar mensajes con tus compañeros de clase. (Haz clic para ver las instrucciones completas)
      'Internet Simulator: Routers_2018': Enviar mensajes con tus compañeros de clase. (Haz clic para ver las instrucciones completas)
      'Internet Simulator: Routers_2019': Enviar mensajes con tus compañeros de clase. (Haz clic para ver las instrucciones completas)
      'Internet Simulator: Sending Binary Messages 1': 'Desarrolla, documenta y prueba un protocolo que le permite usar el simulador de Internet para transmitir un mensaje. Mira la hoja de trabajo para obtener instrucciones más detalladas.  '
      'Internet Simulator: Sending Binary Messages': 'Desarrolla, documenta y prueba un protocolo que le permite usar el simulador de Internet para transmitir un mensaje. Mira la hoja de trabajo para obtener instrucciones más detalladas.  '
      'Internet Simulator: Sending Binary Messages_2018': 'Desarrolla, documenta y prueba un protocolo que le permite usar el simulador de Internet para transmitir un mensaje. Mira la hoja de trabajo para obtener instrucciones más detalladas.  '
      'Internet Simulator: Sending Binary Messages_2019': 'Desarrolla, documenta y prueba un protocolo que le permite usar el simulador de Internet para transmitir un mensaje. Mira la hoja de trabajo para obtener instrucciones más detalladas.  '
      'Internet Simulator: Sending Numbers': Con su compañero, desarrolla un protocolo o un conjunto de reglas para comunicar un dibujo mediante la utilización de bits solamente. ¡Mira la hoja de trabajo que entrega tu profesor para obtener instrucciones más detalladas!
      'Internet Simulator: Sending Numbers_2018': Con su compañero, desarrolla un protocolo o un conjunto de reglas para comunicar un dibujo mediante la utilización de bits solamente. ¡Mira la hoja de trabajo que entrega tu profesor para obtener instrucciones más detalladas!
      'Internet Simulator: Sending Numbers_2019': Con su compañero, desarrolla un protocolo o un conjunto de reglas para comunicar un dibujo mediante la utilización de bits solamente. ¡Mira la hoja de trabajo que entrega tu profesor para obtener instrucciones más detalladas!
      'Internet Simulator: Sending Text': Trabaja con un compañero o en un pequeño equipo para desarrollar un protocolo que te permite enviar texto formateado. ¡Mira la hoja de trabajo que tu profesor ha entregado para obtener instrucciones más detalladas!
      'Internet Simulator: Sending Text_2018': Trabaja con un compañero o en un pequeño equipo para desarrollar un protocolo que te permite enviar texto formateado. ¡Mira la hoja de trabajo que tu profesor ha entregado para obtener instrucciones más detalladas!
      'Internet Simulator: Sending Text_2019': Trabaja con un compañero o en un pequeño equipo para desarrollar un protocolo que te permite enviar texto formateado. ¡Mira la hoja de trabajo que tu profesor ha entregado para obtener instrucciones más detalladas!
      K-1 Artist 1 Assessment 1: "¡Dibuja una línea corta hacia arriba y una larga a la derecha!"
      K-1 Artist Loops 1: Dibuja esa línea moviéndote al este 4 veces
      K-1 Artist Loops 2: "¿Podrías dibujar la misma línea usando un enlace?"
      K-1 Artist Loops 3: "¿Podrías enlazar estos bloques para dibujar 6 líneas?"
      K-1 Artist Loops 4: "¿Podría un enlace ayudarnos a dibujar el tope del castillo?"
      K-1 Artist Loops 5: "¿Puedes repetir 4 veces el mismo enlace para dibujar la escalera?"
      K-1 Artist Loops 6: 'Aquí se necesitan dos enlaces: Uno para subir y otro para bajar la escalera.'
      K-1 Artist Loops 7: "¿Podrías terminar este patrón con dos enlaces?"
      K-1 Artist Loops 8: Esta escalera tiene escalones largos
      K-1 Artist Loops 9: 'Evaluación: utilice un enlace para dibujar la escalera'
      K-1 Artist Loops Free Play: Dibuja algo divertido.
      K-1 Artist1 1: Dibuja el pie del hombre con una línea
      K-1 Artist1 10: Dibuja y salta para trazar el camino al tesoro
      K-1 Artist1 2: "¡Dibuja el bigote del gato con dos líneas!"
      K-1 Artist1 3: "¡Dibuja dos líneas al este y dos al norte para terminar la casa!"
      K-1 Artist1 4: "¡Dibuja líneas verticales, superiores e inferiores para terminar el castillo!"
      K-1 Artist1 5.5: Completa la tercera torre del castillo usando líneas pequeñas
      K-1 Artist1 5: "¡Dibuja el tallo de la flor con dos líneas! "
      K-1 Artist1 6: "¡Termina el dibujo usando el bloque de salto! "
      K-1 Artist1 7: Use el bloque de salto para moverte sin dibujar. Salta hacia arriba y dibuja una línea
      K-1 Artist1 8: Dibuja una línea punteada utilizando los bloques de dibujar y saltar
      K-1 Artist1 9: Dibuja y salta para trazar una línea
      K-1 Artist1 Assessment 1: "¡Dibuja líneas largas y cortas!"
      K-1 Artist1 Assessment 2: "¡Dibuja un trazo de líneas cortas!"
      K-1 Artist2 1: Dibuja un cuadrado debajo del triángulo
      K-1 Artist2 2: '"Salta y dibuja un cuadrado junto a la casa".'
      K-1 Artist2 3: Dibuja un cuadrado arriba de otro cuadrado
      K-1 Artist2 4: Dibuja un rectángulo para completar el puente.
      K-1 Artist2 5: Dibuja un rectángulo para completar los soportes del puente
      K-1 Artist2 6: "¡Dibuja dos cuadrados para hacer el rectángulo!"
      K-1 Artist2 Assessment1: '"Evaluación: Dibuja un cuadrado junto a otro cuadrado".'
      K-1 Artist2 Free Draw: "¡Dibuja cualquier cosa!"
      K-1 Artist2_7: "¡Dibuja un rectángulo para hacerle un cajón al vestidor!"
      K-1 Bee 1: Llévame a la flor, toma el néctar, entonces llévame a la colmena, y haz miel
      K-1 Bee 10: "¡Toma cuatro néctares y entonces haz dos mieles!"
      K-1 Bee 11.5: "¡Toma cuatro néctares y haz cuatro mieles!"
      K-1 Bee 11: Toma tres néctares y entonces haz una miel
      K-1 Bee 12: "¡Toma tres néctares y entonces haz dos mieles!"
      K-1 Bee 13: "¡Toma tres néctares y entonces haz una miel!"
      K-1 Bee 14: Llévame al néctar, recógelo, llévame a la colmena y haz miel
      K-1 Bee 15: "¡Conseguir dos néctares para hacer dos unidades de miel!"
      K-1 Bee 2: Llévame a la flor, toma el néctar, entonces llévame a la colmena, y haz miel
      K-1 Bee 3: Llévame a la flor, toma el néctar, entonces llévame a la colmena, y haz miel
      K-1 Bee 4: "¡Consigue dos unidades de néctar y luego haz dos unidades de miel!"
      K-1 Bee 5: "¡Toma tres néctares y entonces haz dos mieles!"
      K-1 Bee 6: "¡Consigue dos unidades de néctar y luego haz dos unidades de miel!"
      K-1 Bee 7: "¡Toma tres néctares y entonces haz dos mieles!"
      K-1 Bee 8: "¡Consigue dos unidades de néctar y luego haz dos unidades de miel!"
      K-1 Bee 9: "¡Consigue dos unidades de néctar y luego haz dos unidades de miel!"
      K-1 Bee Assessment 1: "¡Consigue néctar para hacer miel!"
      K-1 Bee Assessment 2: "¡Consigue néctar para hacer miel!"
      K-1 Bee Loops 1: "¡Obtén el néctar para hacer miel!"
      K-1 Bee Loops 10: "¡Utiliza enlaces para obtener néctar, miel y para moverte!"
      K-1 Bee Loops 11: 'Evaluación: ¡Utiliza enlaces para obtener néctar y miel!'
      K-1 Bee Loops 12: 'Evaluación: ¡Utiliza enlaces para obtener néctar, miel y moverte!'
      K-1 Bee Loops 2: "¡Utiliza un enlace para moverte y obtener el néctar y hacer miel!"
      K-1 Bee Loops 3: "¡Utiliza enlaces para obtener néctar y para hacer miel!"
      K-1 Bee Loops 4: "¡Ulilice enlaces para obtener néctar, hacer miel y moverse!"
      K-1 Bee Loops 5: "¡Utiliza enlaces para tomar néctar y miel!"
      K-1 Bee Loops 6: "¡Utiliza enlaces para obtener néctar, miel y para moverte!"
      K-1 Bee Loops 7: "¡Utiliza enlaces para obtener néctar y para hacer miel!"
      K-1 Bee Loops 8: "¡Utiliza enlaces para obtener néctar y para hacer miel!"
      K-1 Bee Loops 9: "¡Utiliza enlaces para obtener néctar, miel y para moverte!"
      K-1 Bee Loops Assessment 1: "¡Toma néctar para hacer miel y usa enlaces para moverte!"
      K-1 Bee Loops Assessment 2: "¡Utiliza enlaces para tomar néctar y hacer miel!"
      K-1 Bee Puzzle 12: Toma tres néctares y luego haz dos mieles
      K-1 Building a Foundation Assessment: Construye una pirámide de tres niveles, ¡no hay mas instrucciones, simplemente juega con las piezas hasta lograrlo!
      K-1 Maze 10: "¡Evita el TNT para llevarme al cerdo!"
      K-1 Maze 11: '"Traza la ruta y llévame con el cerdo loco". ¡Evita el TNT o las plumas volarían! Ayuda: él está al sur de mí".'
      K-1 Maze 2: "¡Muéveme al Este para llevarme al cerdo!"
      K-1 Maze 3: "¡Muéveme al sur para llegar al cerdo!"
      K-1 Maze 4: "¡Muéveme al norte para llegar al cerdo!"
      K-1 Maze 5: "¡Muéveme al Este para llevarme al cerdo!"
      K-1 Maze 6: "¡Muéveme en una dirección, luego en otra para llevarme el cerdo!"
      K-1 Maze 7: "¡Muéveme en una dirección, luego en otra para llevarme el cerdo!"
      K-1 Maze 8: "¡Muéveme en una dirección, luego en otra para llevarme el cerdo!"
      K-1 Maze 9: "¡Muéveme en una dirección, luego en otra para llevarme el cerdo!"
      K-1 Maze Assessment 1: Evaluación, ¡tráeme al cerdo!
      K-1 Maze Assessment 12: Nivel de evaluación
      K-1 Maze Assessment 13: Nivel de evaluación
      K-1 Maze Assessment 2: Evaluación, ¡tráeme al cerdo!
      K-1 Maze Loops 1: "¡Tráeme al cerdo!"
      K-1 Maze Loops 10: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 11: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 12: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 2: "¡Usa el bloque de Repetición para llevarme al cerdo!"
      K-1 Maze Loops 3: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 4: "¡Tráeme al cerdo!"
      K-1 Maze Loops 5: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 6: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 7: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 8: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 9: "¡Tráeme al cerdo!"
      K-1 Maze Loops Assessment 1: Evaluación -- ¡Usa ciclos para llevarme al cerdo!
      K-1 Maze Loops Assessment 2: Evaluación -- ¡Usa ciclos para llevarme al cerdo!
      K-1 Maze Multi 14: Nivel de evaluación
      K-1 Maze Multi 15: Nivel de evaluación
      K-1 Maze Sequence Assessment 1: "¡Ésta es una prueba! Muévete en una dirección, luego en otra para llevarme al cerdo"
      K-1 Maze Sequence Assessment 2: "¡Ésta es una prueba! Muévete en una dirección, luego en otra para llevarme al cerdo."
      K-1 Maze debug Assessment 1: Evaluación -- ¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!
      K-1 artist 1 level 10: Dibuja una línea punteada utilizando los bloques de dibujar y saltar
      K-1 artist 1 level 9: Dibuja esto utilizando tres líneas
      K-1 maze debug 1: "¡Cambie el código para traerme al cerdo!"
      K-1 maze debug 10: "¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!"
      K-1 maze debug 11: "¡Ésta es una prueba! Depura este nivel reorganizando y agregando bloques para llevarme al cerdo"
      K-1 maze debug 2: "¡Averigua qué falta y entonces agrega bloques para llevarme al cerdo!"
      K-1 maze debug 3: "¡Averigua cuál es el problema y borra bloques para llevarme al cerdo!"
      K-1 maze debug 4: "¡Ejecuta estos bloques y arréglalos! Yo creo que voy en la dirección equivocada."
      K-1 maze debug 5: "¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!"
      K-1 maze debug 6: "¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!"
      K-1 maze debug 7: "¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!"
      K-1 maze debug 8: "¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!"
      K-1 maze debug 9: "¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!"
      K2.0 sequence 1: "¡Cambie el código para traerme al cerdo!"
      K2.0 sequence 10: 'Desafío: muéveme alrededor del TNT para llevar al pájaro hasta el cerdo.'
      K2.0 sequence 12: "¡Vamos a atrapar a ese cerdo! "
      K2.0 sequence 2: "¡Cambie el código para traerme al cerdo!"
      K2.0 sequence 3: Algo no está bien. ¡REMUEVE un bloque para llevarme al cerdo!
      K2.0 sequence 4: "¡Es hora de un desafío más corto! Muévete en una dirección, y luego en otra, para llevarme hasta el cerdo.  "
      K2.0 sequence 4a: "¡Intenta con este desafío de nuevo desde el comienzo!"
      K2.0 sequence 5: "¡Muéveme en una dirección, luego en otra para llevarme el cerdo!"
      K2.0 sequence 6: "¡Averigua qué falta y entonces agrega bloques para llevarme al cerdo!"
      K2.0 sequence 7: "¡Resuelve este nivel y llévame hasta el cerdo!"
      K2.0 sequence 8: "¡Depura este nivel agregando bloques para llevarme hasta el cerdo!"
      K2.0 sequence 9: "¡Evita el TNT para llevarme al cerdo!"
      K2.0 sequence FP: "¡Ahora descifra cómo atrapar al cerdo de cualquier forma que puedas!"
      K2.0 sequence pre: "¡Juega con estos bloques para ver si puedes llevarme hasta el cerdo!"
      KIKI GLJ Test Response: Oserva el código de más abajo. ¿Qué crees que hará el avión cuando hagas clic en "Ejecutar"?
      KTest1: "¿Me puedes hacer mover al Sur una vez más para llegar hasta el cerdo?"
      KTest2: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      Kiki_StarWars_Test_3: Texto
      Kiki_StarWars_Test_4: Texto
      Kiki_StarWars_Test_5: Texto
      Kiki_StarWars_Test_5_Example: Texto
      LaurelDebugging4Video1: Mueve a Laurel y consigue la mayor cantidad de oro que puedas.
      Limited Quantity of Blocks Test: Agrega solamente un bloque para llevarme hasta el cerdo
      Luigi's Pizza 1: "¡Bienvenido a Luigi's Pizza! Para pedir una pizza, escribe el nombre de un ingrediente en la función de costo, y devolveremos el precio de esa pizza. Intenta ordenar una pizza de pepperoni para empezar."
      Luigi's Pizza 2 (copy 1): Ahora solo hay cuatro opciones disponibles en Luigi's Pizza. ¡Vamos a arreglarlo! Añade un par de nuevos ingredientes al bloque condicional en la función "costo". Una vez que hayas añadido tus ingredientes, prueba la función para asegurarte de que funciona.
      Luigi's Pizza 2: Ahora solo hay cuatro opciones disponibles en Luigi's Pizza. ¡Vamos a arreglarlo! Añade un par de nuevos ingredientes al bloque condicional en la función "costo". Una vez que hayas añadido tus ingredientes, prueba la función para asegurarte de que funciona.
      Luigi's Pizza 3 (copy 1): ¡Eso está mejor! A todo el mundo le encanta tener más variedad de ingredientes para la pizza. Pero todavía no puedes complacer a todos, y hay gente que está llegando a pedir ingredientes que Luigi no tiene. En lugar de decirles que "no" a esas personas, ¿podría actualizar la cláusula "sino" para que les cobremos un recargo por los ingredientes que normalmente no ofrecemos?
      Luigi's Pizza 3: ¡Eso está mejor! A todo el mundo le encanta tener más variedad de ingredientes para la pizza. Pero todavía no puedes complacer a todos, y hay gente que está llegando a pedir ingredientes que Luigi no tiene. En lugar de decirles que "no" a esas personas, ¿podría actualizar la cláusula "sino" para que les cobremos un recargo por los ingredientes que normalmente no ofrecemos? Cobremos $10.000 por un ingrediente que la pizza no tiene.
      Luigi's Pizza 4: 'Juego libre: ¿Qué puedes hacer para lograr que la función de costo de Luigi sea aún más útil?'
      MC Agent Freeplay: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      MC HOC 2016 Level 10: "¡Es hora de crear tu propio Minecraft! Genera criaturas y haz que hagan lo que tú quieras. ¡Diviértete!"
      MC HOC 2016 Level 2-2: La gallina está quieta. Para lograr que se mueva, debes colocar los bloques "mover" y "girar" en el espacio "cuando se genera".
      MC HOC 2016 Level 3: ¡Perfecto! ¡La gallina se movió! Pero luego se detuvo. En los videojuegos, las gallinas están en movimiento constante. Usa un bucle "hacer siempre" para que las gallinas no dejen de moverse.
      MC HOC 2016 Level 4: Ahora se ven raras moviéndose todas iguales. Para darle autenticidad a las cosas, los videojuegos usan movimientos aleatorios. Puedes hacer que las gallinas "giren al azar".
      MC HOC 2016 Level 5: ¡Estas vacas están perdidas! Condúcelas hasta el pasto con el bloque "dar un paso hacia" en un bucle "hacer siempre".
      MC HOC 2016 Level 6: Puedes crear zombis. Usar el bloque "generar" para crear 3 zombis cuando caiga la noche. Haz que se acerquen a ti. Sobrevive hasta la mañana.
      MC HOC 2016 Level 8: El camino hasta la oveja está obstruido por un muro de piedra. Por suerte, hay un Creeper aquí. Los Creepers explotan cuando los tocas. ¡Para poder llegar a la oveja, tienes que hacer el Creeper explote cerca del muro!
      MC HOC 2016 New Drop: En Minecraft, las ovejas sueltan lana. Coloca un bloque "soltar" en el espacio "cuando se usa", luego acércate y usa la oveja para que suelte un objeto.
      MC HOC 2016 New Spawn: En los videojuegos, generar cosas significa agregar cosas al mundo. Para generar algo cuando comienza el juego, debes colocar el bloque "generar" debajo de "cuando se ejecuta".
      MC HOC 2016 New Walk: "¡Exploremos el mundo! Puedes moverte con las fechas y usar objetos con la barra espaciadora o tocando la pantalla. Usa la puerta para entrar a la casa."
      MC HOC 2016 SCORE LEVEL: En algunos juegos, puedes sumar puntos. Juega a la mancha con gólems de hierro y usa el bloque "agregar 1 a la puntuación", así podrás anotar un punto cada vez que atrapes uno. ¡Acumula cinco puntos y gana!
      MC HOC 2016 Village Test: "¡Ay, no! ¡Los zombis te tienen atrapado! ¡Escribe código que haga que el gólem de hierro persiga y ataque a los zombis!"
      MC_2017_Ryan_02: Usa bucles para ayudar al jugador a salir y llevar al Agente hasta la placa de presión.
      MC_HOC_2017 Agent Test: Haz clic en "Ejecutar" para mover al jugador al cuadrado naranja dentro de la casa.
      MC_HOC_2017_01: Haz clic en "Ejecutar" para mover al jugador al cuadrado naranja dentro de la casa.
      MC_HOC_2017_01_Cole: Debes recoger todas las herramientas en esta aventura. Muévete usando las **teclas de flecha** y llega al cofre del camino para ganar
      MC_HOC_2017_01_Kiki: Haz clic en "Ejecutar" para mover al jugador al cuadrado naranja dentro de la casa.
      MC_HOC_2017_01_RETRY: Lleva al Agent a la placa de presión, luego presiona "Ejecutar" y usa las teclas de flecha para mover al jugador fuera de la casa para recoger el cofre.
      MC_HOC_2017_01_RETRY_2019: Lleva al Agent a la placa de presión, luego presiona "Ejecutar" y usa las teclas de flecha para mover al jugador fuera de la casa para recoger el cofre.
      MC_HOC_2017_02: Lleva al Agent a la placa de presión.
      MC_HOC_2017_02_Cole: Mueve al Agent a la placa de presión para que {currentPlayerName} pueda llegar al mapa.
      MC_HOC_2017_02_Cole_2019: Mueve al Agent a la placa de presión para que {currentPlayerName} pueda llegar al mapa.
      MC_HOC_2017_02_Kiki: Lleva al Agent a la placa de presión y luego lleva al jugador al cuadrado naranja.
      MC_HOC_2017_02_Will: Lleva al Agent a la placa de presión.
      MC_HOC_2017_03_Cole: Dale un código al Agent para que abra la puerta.
      MC_HOC_2017_03_Cole_2019: Dale un código al Agent para que abra la puerta.
      MC_HOC_2017_03_Kiki: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04: Cambia el bucle del último acertijo para ayudar al Agent a crear un camino sobre la parte más ancha de este río.
      MC_HOC_2017_04POINT5_Cole: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04POINT5_RYAN: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04POINT5_RYAN_2019: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04_Cole: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04_Cole_2019: Lleva al Agent a la placa de presión.
      MC_HOC_2017_04_Kiki: Lleva al Agent a la placa de presión.
      MC_HOC_2017_05: Usa una función para ayudar al Agent a llegar a la placa de presión.
      MC_HOC_2017_05_Cole: Haz que el jugador vaya por la pala.
      MC_HOC_2017_05_Cole_2019: Haz que el jugador vaya por la pala.
      MC_HOC_2017_05_Josh: Haz que el jugador vaya por la pala.
      MC_HOC_2017_05_Kiki: Haz que el jugador vaya al cuadrado naranja.
      MC_HOC_2017_06_Cole: Arregla este código para que el Agent construya un puente sobre este río.
      MC_HOC_2017_06_Cole_2019: Arregla este código para que el Agent construya un puente sobre este río.
      MC_HOC_2017_06_Josh: Arregla este código para ayudar al Agent a construir un puente sobre este río.
      MC_HOC_2017_06_Kiki: Arregla este código para ayudar al Agent a construir un puente sobre este río.
      MC_HOC_2017_07_Cole: Destruye el hielo y lleva a {currentPlayerName} a la vagoneta.
      MC_HOC_2017_07_Cole_2019: Destruye el hielo y lleva a {currentPlayerName} a la vagoneta.
      MC_HOC_2017_07_Kiki: Usa una función para despejar el camino hasta el cuadrado naranja.
      MC_HOC_2017_07a_Kiki: Despeja el camino hacia el cuadrado naranja.
      MC_HOC_2017_08_Cole: Cambia la función proporcionada para que funcione en este bioma.
      MC_HOC_2017_08_Kiki: Cambia la función para que funcione con este acertijo.
      MC_HOC_2017_08_RY: Usa las funciones para encontrar un modo de cruzar la lava.
      MC_HOC_2017_08_Will: Usa las funciones para encontrar un modo de cruzar la lava.
      MC_HOC_2017_09_Cole: Programa al Agent para despejar el camino del jugador.
      MC_HOC_2017_09_Kiki: Programa al Agent para despejar el camino del jugador y llegar a la placa de presión.
      MC_HOC_2017_10_Cole: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_Cole_old: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_Kiki: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_RETRY: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_RETRY_2019: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_RYAN: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_10_RYAN2: Crea una función que te ayude a terminar esta vagoneta.
      MC_HOC_2017_13_Cole: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      MC_HOC_2017_4.5v2: Lleva al Agent a la placa de presión.
      MC_HOC_2017_Ali: Usa las funciones para encontrar un modo de cruzar la lava.
      MC_HOC_2017_Ali_2019: Usa las funciones para encontrar un modo de cruzar la lava.
      MC_HOC_2017_FP10x10: "**Improvisación:** ¿Puedes ponerte el desafío de recoger todos los diamantes de este nivel?"
      MC_HOC_2017_FP10x10_RE: "**Improvisación:** ¿Puedes ponerte el desafío de recoger todos los diamantes de este nivel?"
      MC_HOC_2017_FP20x20: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      MC_HOC_2017_FP20x20_2019: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      MC_HOC_2017_Ryan_03: Ahora usa bucles para ayudar al Agent a construir un puente sobre el río colocando bloques en el agua.
      MC_HOC_2017_Ryan_05: Destruye estos cactus para que el jugador pueda llegar a la meta.
      MC_HOC_Kiki_02: Lleva al Agent a la placa de presión.
      MSM Big Game Empty: Todas las variables y funciones están actualmente stubs vacíos. Cada progresión del desafío se centrará en definir algunos de ellos y, por lo tanto, añadir funcionalidad.
      MSM Big Game Vars 1 (copy 1): En la barra de herramientas de Variables, verás varias variables que definen cómo se ven, mueven e interactúan los personajes de tu juego
      MSM Big Game Vars 1: En la barra de herramientas de Variables, verás varias variables que definen cómo se ven, mueven e interactúan los personajes de tu juego
      MSM Big Game Vars Backup: En la barra de herramientas de Variables, verás varias variables que definen cómo se ven, mueven e interactúan los personajes de tu juego
      MSM Defining Vars 2 (copy 1): Si quisiéramos hacer cincuenta triángulos verdes, sería un dolor de cabeza repetir ese bloque de código 50 veces. Vamos a crear una variable llamada "mi-forma" y poner el código para un triángulo verde sólido de 50 pixeles dentro.
      MSM Defining Vars 2: Si quisiéramos hacer cincuenta triángulos verdes, sería un dolor de cabeza repetir ese bloque de código 50 veces. Vamos a crear una variable llamada "mi-forma" y poner el código para un triángulo verde sólido de 50 pixeles dentro.
      MSM Defining Vars 3 (copy 1): Toma tu variable "mi-forma" y úsala con este código proporcionado para dibujar dos triángulos verdes idénticos.
      MSM Defining Vars 3: Toma tu variable "mi-forma" y úsala con este código proporcionado para dibujar dos triángulos verdes idénticos que tengan un tamaño de 50 pixeles.
      MSM Defining Vars 4: Edita tu variable mi-forma para que dibuje estrellas rojas sólidas de 75 pixeles.
      MSM Play Lab Butterfly 1: Ayuda a Sam a permanecer en la pantalla para que siempre puedas ver al menos una parte de él. Usando las teclas de flechas, observa hasta qué punto Sam puede ir a la izquierda y permanecer en la pantalla. Descubrirás que Sam está en pantalla mientras que su coordenada x sea mayor que -50. Luego, rellena el código para hacer que Sam permanezca en la pantalla.
      MSM Play Lab Butterfly 2: Ahora haz que Sam permanezca en el lado derecho de la pantalla. Tendrás que experimentar para ver hasta qué punto puede ir y seguir siendo parcialmente visible en la pantalla.
      MSM Play Lab Butterfly 3: Ahora, combina tu trabajo para hacer que Sam permanezca en ambos lados de la pantalla.
      MSM Play Lab Game 2: Las variables también pueden utilizarse para controlar la velocidad de los jugadores en un juego. Establece la velocidad del jugador y la velocidad del enemigo, y mira cómo cambia el movimiento. La velocidad puede ser entre 2 y 12.
      Middle School Hackathon Pt 1: "(Haz clic para ver las instrucciones completas)"
      Middle School Hackathon Pt 2: "(Haz clic para ver las instrucciones completas)"
      Mike Pair Programming: Estas son las instrucciones.
      Mike Test Bee Conditionals 1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      Mike Test Bee Conditionals 2: Recoge todo el néctar. Sólo puedes recoger el néctar de las flores, pero puedes revisar cualquier espacio para ver si hay una flor.
      MikeAssessment1: "¡Ahora hazlo bien!"
      MikeStar: Dibuja esto.
      MikeStarHard: Dibuja esto.
      MikeStarNested: Dibuja esto.
      MikeTest1: "¡¿Quién sabe qué debes hacer?!"
      MikeTest2: "¡Dibuja algo!"
      MikeTest3: "¡Construye algo!"
      NEW Course 4 Artist Functions 1: "¿Puedes dibujar un cuadrado de 100 píxeles de largo usando un ciclo?"
      NEW Course 4 Artist Functions 10.1: Use las funciones de los puzzles anteriores para dibujar este patrón.
      NEW Course 4 Artist Functions 10: Haz clic en "editar" para llenar los bloques en la definición de la función, para hacer un cuadrado de 40 píxeles.
      NEW Course 4 Artist Functions 11: Tenemos una nueva función llamada "dibuja una fila de cuadrados". Puedes mirar dentro del bloque de función para entender cómo la construimos. Haz clic en "Ejecutar" cuando estés listo/a para el siguiente ejercicio.
      NEW Course 4 Artist Functions 12: Utiliza la función "trazar una línea de cuadrados" del rompecabezas anterior para trazar este patrón.
      NEW Course 4 Artist Functions 13: '¿Puede dibujar la forma de una estrella usando la función "traza una línea de cuadrados"? Te daré una pista: puedes avanzar 60 píxeles y girar 144 grados'
      NEW Course 4 Artist Functions 14: "¡Tiempo de juego libre!"
      NEW Course 4 Artist Functions 2: "¿Puedes dibujar 3 cuadrados de 20 píxeles separado uno del otro? Sugerencia: cada cuadrado es de una medida de 100 píxeles "
      NEW Course 4 Artist Functions 3: Aquí está el nuevo tipo de Bloque. Es llamado "Bloque función". Haga clic en "Ejecutar" para ver qué pasa.
      NEW Course 4 Artist Functions 4: 'Utiliza la función "dibujar un cuadrado" para dibujar este patrón. Pista: tendrás que usar un bloque "girar a la derecha 120 grados" después de cada cuadrado.'
      NEW Course 4 Artist Functions 5: ¿Cómo sabía el bloque "dibujar un cuadrado" qué comandos ejecutar? Haz clic en "Editar" en el bloque de función "dibujar un cuadrado". Los bloques en el editor de la función son la definición de lo que lleva a cabo "dibujar un cuadrado". Cuando hayas terminado, haz clic en "Guardar y Cerrar" y luego en "Ejecutar".
      NEW Course 4 Artist Functions 6: '¿Puedes dibujar esta imagen usando la función "dibujar un cuadrado"? Pista: cada cuadrado está separado por 20 píxeles.'
      NEW Course 4 Artist Functions 7: '¿Estás comenzando a entender cómo usar los bloques de función? Modifiquemos este cuadrado para que mida 200 píxeles. Sugerencia: haz clic en "editar" para cambiar el tamaño del editor de la función "dibujar un cuadrado". Recuerda hacer clic en "guardar y cerrar" para salir del editor de la función. '
      NEW Course 4 Artist Functions 8: Te hemos dado la mayoría del código para crear una función. Sin embargo, parece que falta algo. ¿Puedes editar la definición de la función para dibujar el triángulo?
      NEW Course 4 Artist Functions 9: "¿Qué bloque necesitas añadir para conseguir que el triángulo se ponga encima del cuadrado?"
      NEW Course 4 Artist Functions inspire: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      NEW Course 4 Artist Params 1: Vamos a definir esta función para dibujar un cuadrado con lados de 50 píxeles. Haz clic en "editar" para empezar.
      NEW Course 4 Artist Params 10: 'Crea un bloque de función "dibujar un hexágono" con un parámetro de longitud. Pista: este hexágono tiene 100 píxeles de tamaño. '
      NEW Course 4 Artist Params 11: ¿Puedes averiguar cómo dibujar esta forma? Edita la función para usar el parámetro "lados".
      NEW Course 4 Artist Params 12: "¿Puedes completar este dibujo? Los lados de todas las formas son 100 píxeles de largo."
      NEW Course 4 Artist Params 12a: Esta imagen es similar a la última. ¿Se puede utilizar un "ciclo for" con tu función para hacer este diseño?
      NEW Course 4 Artist Params 13: 'Vamos a editar esta función "dibujar una forma". Ya tiene un parámetro de "longitud". Ahora, vamos a editar la función para añadir también un parámetro "lados". Recuerda que el ángulo para girar una forma determinada es 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo es de 100 píxeles, el hexágono es de 25 píxeles y el cuadrado es de 50 píxeles.'
      NEW Course 4 Artist Params 14: '¿Puedes recrear estas formas? Arrastra el parámetro "longitud" en la definición de función. '
      NEW Course 4 Artist Params 15: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      NEW Course 4 Artist Params 2: Crea una función `dibujar triángulo` desde cero para crear un triángulo con lados de 50 pixeles.
      NEW Course 4 Artist Params 3: 'Ahora vamos a utilizar la función para dibujar tres triángulos desde el último puzzle en una fila. Sugerencia: cada triángulo tiene 50 píxeles de separación.'
      NEW Course 4 Artist Params 4: ¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.
      NEW Course 4 Artist Params 5: 'Llena en el ??? en el bloque de entrada del parámetro de longitud. Sugerencia: El Pentágono es de 100 píxeles de tamaño. '
      NEW Course 4 Artist Params 6: Llena el parámetro "longitud" para dibujar estas formas sustituyendo el "???" con los números correctos. El cuadrado y el triángulo son de 100 píxeles de tamaño mientras que el hexágono es de 75 píxeles de tamaño.
      NEW Course 4 Artist Params 7: "¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño."
      NEW Course 4 Artist Params 8: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      NEW Course 4 Artist Params 9: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      NEW Course 4 Artist Params inspire: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      NEW Course 4 Artist Vars 1.5: 'Echa un vistazo al código, ¿puedes ver cómo los bloques "establecer longitud" y "longitud" trabajan juntos? Haz clic en "Ejecutar" para verlo en acción. '
      NEW Course 4 Artist Vars 12: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      NEW Course 4 Artist Vars 2.5: 'Echa un vistazo al código, ¿puedes ver cómo los bloques "establecer longitud" y "longitud" trabajan juntos? Haz clic en "Ejecutar" para verlo en acción. '
      NEW Course 4 Artist Vars 2: Arrastra un bloque de número hasta el bloque "establecer longitud" para dibujar un conjunto de triángulos de 50 píxeles.
      NEW Course 4 Artist Vars 4 5: Impresionante trabajo en el último puzzle, vamos a intentarlo de nuevo, esta vez vamos a hacer este diseño cool con un hexágono de 60 píxeles.
      NEW Course 4 Artist Vars 4: Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles.
      NEW Course 4 Artist Vars 6: ¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable "longitud" en los lugares correctos?
      NEW Course 4 Bee For Loops 1: Utiliza un bucle para recolectar el néctar de cada flor.
      NEW Course 4 Bee For Loops 10: Usa tu variable "contador" de bucle para el controlar qué tan lejos debe moverse horizontalmente.
      NEW Course 4 Bee For Loops 10a: "¿Listo para un desafío? Toma lo que has aprendido sobre ciclos y trata de solucionar este problema. Recuerda: puedes tener que ejecutar la solución varias veces antes de averiguar todos los pasos."
      NEW Course 4 Bee For Loops 11: "¿Puedes utilizar la variable de bucle para controlar el movimiento y la recolección del néctar?"
      NEW Course 4 Bee For Loops 2: Agrega el código necesario para asegurarte de que la abeja recolecta todo el néctar. ¡Mira cuánto código necesitas para este puzzle! (Aprenderemos una manera más simple en el siguiente puzzle).
      NEW Course 4 Bee For Loops 3: '¡Ah, el de bucle for hace esto mucho más fácil! Todo el código que necesitas está allí, echa un vistazo a cómo se colocan juntos, luego haz clic en "Ejecutar" para ver cómo funciona. '
      NEW Course 4 Bee For Loops 4 4: "¿Puedes ayudar a la abeja a recolectar el resto de la miel utilizando este bucle for? "
      NEW Course 4 Bee For Loops 4: 'Reemplaza el ??? en el bucle for con la mayor cantidad de néctar que la abeja debe recoger. '
      NEW Course 4 Bee For Loops 5 5: ¿Has comprendido el truco al bucle "for"? Vamos a ayudar a la abeja a obtener el resto del néctar.
      NEW Course 4 Bee For Loops 5: También puedes utilizar un bucle para contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      NEW Course 4 Bee For Loops 6: El último número en tu bucle for se llama el "incremento", y cada vez que el bucle se ejecuta la variable contador cambia al incrementarse. Trata de recoger estas flores con un incremento de 2.
      NEW Course 4 Bee For Loops 7: "¿Estás comprendiendo el truco a los bucles? Esto es parecido al último puzzle, pero tienes que conseguir 2, 4, 6, 8,10 de néctar. Ya tienes el código de arranque, excepto los números en los bucles del contador. ¡Vamos a recoger algo de néctar!"
      NEW Course 4 Bee For Loops 8: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      NEW Course 4 Bee For Loops 9: Si tu ciclo es regresivo, se resta el incremento de la variable contador en cada bucle. ¿Lo que debería ser un incremento a recoger néctar 9, luego 6 y 3?
      NEW Course 4 Bee For Loops 95: Echa un vistazo a cada pieza del ciclo "for" que acabas de crear. ¿Puedes averiguar qué números necesitas multiplicar por dos para resolver este rompecabezas? ¿Por qué funciona?
      NEW Course 4 Play Lab Params 11: "¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. "
      NEW Course 4 Play Lab Params 5 5: Introducir entradas de parámetro de actor con los números (1, 2 y 3) para hacer de estos actores patrulla.
      NEW Course 4 Play Lab Vars 4 5: '"¿Qué piensas que este código realizará? Presiona "Ejecutar" para ver qué ocurre".'
      NEW Course 4 Play Labs For Loops 7a: Usando lo que has aprendido hasta ahora, ¿puedes hacer al dinosaurio dar un paso adelante cada vez que el pingüino cuenta?
      NEW Course 4 Play Labs For Loops 8 Free Play: Es hora de jugar libremente, diviértete con todos los bloques de tu caja de herramientas.
      NEW Course 4 Play Labs For Loops 8a: 'Desafío: ¿Cómo utilizas el ciclo for para lograr que todos los actores den la vuelta, digan su número de actor y desaparezcan de la pantalla? '
      NetSim Standalone Automatic DNS: En esta versión del simulador de Internet, se te proporciona un sistema de nombres de dominio (DNS) y este conoce las direcciones IP de todos las computadoras conectadas. Envía un mensaje en el formulario GET [hostname] al servicio DNS en la dirección <yourRouterNumber>.15 para obtener la dirección de un estudiante.
      NetSim Standalone Broadcast: En esta versión del simulador de Internet, puedes conectarte con hasta 5 personas más en una sala. Cuando envías mensajes en la sala, todos los reciben. ¿Cuáles son algunos de los desafíos de este sistema y cómo puedes resolverlos?
      NetSim Standalone Classroom Routers: En esta versión del simulador de Internet, todos se conectan a un router y tienen una dirección específica. Para enviar mensajes, tienes que dirigir el mensaje a la dirección específica del destinatario, y el router se encargará de entregarlo a la computadora correcta. Si hay otros routers creados en tu clase, pide la dirección de uno de tus compañeros de clase y envíales un mensaje. Mira el Router de Registro para ver la ruta que los mensajes han tomado a través de la red.
      NetSim Standalone Freeplay: En esta configuración, la mayoría de las opciones están activadas y puedes jugar con ellas. ¡Diviértete!
      NetSim Standalone Manual DNS: En esta versión del simulador, no puedes ver las direcciones de los otros estudiantes. En lugar de ello, uno de ustedes debe actuar como nombre de servicio, para ayudar a compartir direcciones entre sí.
      NetSim Standalone Packets TCP: 'Los mensajes en Internet pueden tomar muchas rutas para llegar a su destino y, a veces, en el recorrido, el mensaje se elimina. En esta versión del simulador de Internet, hay un 10 % de probabilidad de que un paquete se elimine, varios paquetes pueden tomar diferentes rutas para llegar a destino, y el tamaño máximo del paquete predeterminado se establece a 6 caracteres adicionales. '
      NetSim Standalone Routers Addresses: |-
        Para esta actividad, conéctate a un router con los demás de tu grupo. Nota importante: el router sólo enrutará correctamente los mensajes donde los primeros 4 bits son Para: dirección y los segundos 4 bits son De: dirección.

        [PENDIENTE: Es necesario que NetSim sea compatible con direcciones jerárquicas. Por ahora, el nivel está configurado para direcciones "de" y "para" de 4 bits]
      NetSim Standalone SendAB: Tu compañero y tú comparten un solo cable que sólo puede estar en estado A o estado B. Puedes establecer el cable a cualquiera de los estados en cualquier momento, y puedes leer el estado del cable en cualquier momento. ¿Puedes encontrar una forma de comunicarte eficazmente con este sistema?
      NetSim Standalone Sending Numbers Ascii: 'Ahora que has transmitido información representada como números decimales, puedes asignar esos números a caracteres de texto para enviar información basada en texto de un lado a otro. Con un protocolo basado en texto, puede representar y comunicar fácilmente todo tipo de información. '
      NetSim Standalone Sending Numbers: "¡Ahora tu compañero y tú pueden enviar mensajes confiablemente de una parte a otra sin coordinación adicional! Si bien siempre estás enviando bits de un lado a otro, también puedes representar esos bits como números decimales. ¿Qué tipo de información puedes representar con este sistema? "
      NetSim_AddressingMessages: En esta versión del simulador, te conectarás a un Router en lugar de hacerlo directamente a otro estudiante. Introduce una dirección en el cuadro "Para" para enviar un mensaje a otro estudiante.
      NetSim_AutomaticDNS: En esta versión del simulador, se te proporciona un servicio DNS. Envía un mensaje en el formulario GET [hostname] al servicio DNS en la dirección 15 para obtener la dirección de un estudiante.
      NetSim_ManualDNS: En esta versión del simulador, no puedes ver las direcciones de los otros estudiantes. En lugar de ello, uno de ustedes debe actuar como nombre de servicio, para ayudar a compartir direcciones entre sí.
      NetSim_SendAB: Conéctate a otro estudiante. Cada uno de ustedes puede establecer el valor del cable entre ustedes con "A" o "B". ¡Mira si puedes enviar un mensaje completo!
      NetSim_SendAscii: En esta versión del simulador, puedes enviar números o caracteres ASCII entre sí, de a 1 bit a la vez.
      NetSim_SendBits: Conéctate a otro estudiante. Ahora puedes configurar tu cable a "0" o "1". ¡Envía un mensaje a tu compañero!
      NetSim_SendNumbers: En esta versión del simulador, puedes ver las representaciones decimales del binario que estás enviando.
      NetSim_SendingABTest: Esta es la prueba de Sarah de hacer un nivel de Netsim
      NetSim_Superuser: Has cargado NetSim en modo superusuario.
      NetSim_Variant1: 'NetSim: la variante 1 permite a los estudiantes calcular manualmente el tiempo de envío de bits de un lado a otro.'
      NetSim_Variant2: 'NetSim: variante 2: los estudiantes se conectan directamente entre sí y envían paquetes enteros de un lado a otro, y exploran sistemas de codificación de datos.'
      NetSim_Variant3: 'NetSim: Variante 3: Conecta grupos de 2-6 estudiantes con un router, y explora problemas de enrutamiento y DNS'
      New Artist Project: "¡Dibuja algo impresionante! Tu código ha sido guardado como un proyecto al que puedes regresar en cualquier momento."
      New Basketball Project: Crea tu propio juego de baloncesto. Puedes cambiar todas las reglas. Cuando hayas terminado, haz clic en Compartir para permitirles a tus amigos/as probar tu juego en sus teléfonos.
      New Bounce Project: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      New Course 4 Artist Functions Level 4: Usa la función "dibujar un cuadrado" para dibujar este patrón.
      New Gumball Project: "¡Crea cualquier cosa que desees compartir!"
      New Ice Age Project: "¡Crea cualquier cosa que desees compartir!"
      New Infinity Project: "¡Crea cualquier cosa que desees compartir!"
      New Minecraft Hero Project: "**Improvisación:**  ¡Es hora de explorar por tu cuenta!"
      New Sports Project: 'Crea tu propio juego. Ahora estás al mando: puedes cambiar todas las reglas y mezclar deportes. ¡Puedes ser creativo! Cuando estés listo, haz clic en "Terminar" para que tus amigos prueben tu juego en sus teléfonos.'
      Ninjacat Demo B (copy 1): Comencemos explorando un videojuego simple, y luego averigüemos cómo funciona. Puedes usar las teclas de flecha para mover al ninja a la izquierda, a la derecha y saltar; intenta capturar el unicornio y evitar el dragón.
      Ninjacat Demo B: Comencemos explorando un videojuego simple, y luego averigüemos cómo funciona. Puedes usar las teclas de flecha para mover al ninja hacia arriba y hacia abajo; intenta capturar el unicornio y evitar el dragón. Cuando creas saber cómo funciona el juego, haz clic en "Finalizar".
      Ninjacat Demo No Animate: Comencemos explorando un videojuego simple, y luego averigüemos cómo funciona. Puedes usar las teclas de flecha para mover al ninja hacia arriba y hacia abajo; intenta capturar el unicornio y evitar el dragón. Cuando creas saber cómo funciona el juego, haz clic en "Finalizar".
      October15 JoL 1: "¡Programa al artista para diseñar una cara para su jack-o-lantern!"
      October15 bat: 'Juego libre: Estas son algunas funciones con las que puedes jugar. ¿Puedes dibujar un murciélago?  '
      October15 ghost 1: Usa la función "dibujar un círculo" para darle ojos al fantasma.
      October15 pumpkin 1: Termina el el jack-o-lantern con el dibujo de los ojos y la nariz en cualquier estilo que quieras.
      October15 stars 1: Usa bucles y el bloque "entero aleatorio" para llenar el cielo nocturno con estrellas de diferentes formas y tamaños.
      Overworld Avoid Monsters: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Avoid Monsters_2018: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Avoid Monsters_2019: Ir contra un Creeper no es buena idea. Evítalos con cuidado y llega a casa para estar a salvo.
      Overworld Chop Tree - allthethings: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree_2018: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Tree_2019: La madera es un recurso muy importante. Sirve para hacer muchas cosas. Ve hacia el árbol y usa el comando "destruir bloque" para talarlo.
      Overworld Chop Trees: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Chop Trees_2018: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Chop Trees_2019: Necesitamos construir una casa antes de que se ponga el sol. Las casas necesitan mucha madera. Tala los tres árboles.
      Overworld Free Play 20x20: "¡Felicitaciones! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido."
      Overworld Free Play 20x20_2018: "¡Felicitaciones! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido."
      Overworld Free Play 20x20_2019: "¡Felicitaciones! Has completado todos los rompecabezas. Ahora extrae recursos, construye y crea algo único con todo lo que has aprendido."
      Overworld House Frame Chosen: Construye el resto de tu casa de cualquier material que desees. El comando "repetir" va a venir bien.
      Overworld House Frame Chosen_2018: Construye el resto de tu casa de cualquier material que desees. El comando "repetir" va a venir bien.
      Overworld House Frame Chosen_2019: Construye el resto de tu casa de cualquier material que desees. El comando "repetir" va a venir bien.
      Overworld Move to Sheep: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Move to Sheep_2018: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Move to Sheep_2019: Añade un segundo comando "avanzar" para llegar a la oveja.
      Overworld Place Wall: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Place Wall_2018: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Place Wall_2019: Cada casa comienza con un muro. Construye la primera parte colocando los comandos "colocar" y "avanzar" en el bucle de repetición.
      Overworld Plant Crops: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Plant Crops_2018: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Plant Crops_2019: Es bueno planificar. Planta cultivos a ambos lados del agua para no pasar hambre después.
      Overworld Powered Minecart: "¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar."
      Overworld Powered Minecart_2018: "¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar."
      Overworld Powered Minecart_2019: "¡Buen trabajo! Has reunido muchos recursos y ya tienes una casita. Ahora, coloca un raíl desde el extremo del mapa a la puerta de tu hogar."
      Overworld Shear Sheep: ¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.
      Overworld Shear Sheep_2018: ¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.
      Overworld Shear Sheep_2019: ¡Hora de esquilar! Usa el comando "esquilar" para obtener lana de ambas ovejas.
      PDAlg 13-16 Sam Extension Puzzle: Añade un segundo parámetro a "en pantalla?" para Sam, y coordina y actualiza la función para que lo mantenga seguro en los cuatro lados.
      PDAlg 17-20 Luigi Extension Puzzle: Sin modificar tu función "costo" existente, crea una nueva función "cupón" que toma un código de ingrediente de pizza y cupón y devuelve el costo de una pizza con ese ingrediente. Si el código de cupón es correcto (tú decides qué es), aplica un descuento del 30 % a la pizza.
      PDAlg 8-12 Rocket Height Puzzle: Escribamos una función "altura-cohete" con aceleración simple. Escribe una función que garantice que el cohete se encuentra a 15 metros en 1 segundo, a 45 metros en 2 segundos, a 95 metros en 3 segundos y a 165 en 4 segundos.
      PDAlg 8-12 ex dr 1: La definición en esta Receta de Diseño no coincide con ambos ejemplos. Prueba cada ejemplo para ver qué falla, y luego arregla la definición para coincidir.
      PDAlg 8-12 ex dr 2: Este estudiante ha creado dos ejemplos para la función "manzanas", pero algo no está del todo bien. ¿Cómo podrías dirigir a este estudiante para que corrija su error?
      PDAlg Big Game History: Ahora que has jugado en un nivel de Gran Juego, deberías ver una nueva entrada en tu historial. Haz clic en el botón Historial de versiones y deberías ver al menos una versión. Cada vez que vuelvas a un nivel de Gran Juego, recibirás un nuevo registro en tu historial de versiones al que puedes volver.
      PDAlg Big Game Remix: |-
        Aquí está tu Gran Juego, tal cual lo dejaste por última vez. Intenta hacer clic en el botón Remix para lanzar una nueva remix de tu proyecto.

        Cualquier cambio que hagas después de hacer clic en Remix será guardado en tu nuevo remix y no en tu Gran Juego principal.
      PDAlg Design Recipe Delete: Haz clic en el botón de borrar para deshacerte de esta función, y luego intenta crear y eliminar algunos de los tuyos.
      PDAlg Design Recipe Examples: La definición en esta Receta de Diseño no coincide con ambos ejemplos. Prueba cada ejemplo para ver qué falla, y luego arregla la definición para coincidir.
      PDAlg Design Recipe Required: Completa la Receta de Diseño para la función "huevos", y asegúrate de crear y probar tus ejemplos.
      PDAlg Updates Cond: Cuando fuiste a PD en verano, el bloque condicional que te presentaron fue negro y se permitió que se usara cualquier tipo de datos. Esto resultó ser confuso, dado que cada otra función que hemos visto siempre produce el mismo tipo de datos. Para ayudar a que las condiciones sean más claras y más consistentes, hemos reemplazado el bloque negro único con un bloque separado para cada tipo de datos.
      PDAlg Updates Errors: Ejecuta el programa proporcionado y utiliza los mensajes de error para intentar rastrear los errores.
      PDAlg Updates Space: Hacer uso de espacio de programación limitado (especialmente en pantallas pequeñas) es desafiante con un lenguaje basado en bloques. Para ayudar con esto, hemos añadido algunas características. Experimenta con este código proporcionado para ver cómo se puede manipular el espacio para tratar con programas más grandes.
      PDK5 Conditionals 1: "¡Las flores moradas pueden tener un tipo de néctar de 1 ó 0, pero tu no sabes cuál! Ten cuidado de no recolectar el néctar de una flor morada sin néctar. Revisa si el valor del néctar es igual a 1 usando el bloque “if”."
      PDK5 Conditionals 2: 'Prueba este desafío que utiliza condicionales y bucles en forma conjunta. Usa el bloque "si" para decidir cuándo girar. Sugerencia: solo necesitas un bloque más para completar este desafío. '
      PDK5 Events 1: 'Hasta ahora, todos los programas que hemos escrito son ejecutados en orden desde arriba hacia abajo. En este desafío, usaremos "Eventos" para responder a una acción por demanda. Haz que el pulpo diga "Hola" sólo cuando hagas clic en el Pulpo. '
      PDK5 Functions 1: 'Hola. Yo zombie artista. ¡Yo gusta dibujar! Ayúdame a dibujar las gafas cuadradas. Pista: El puente de las gafas es 25 pixeles más corto que el largo del cuadrado.'
      PDK5 Functions 2: ¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada "dibuja un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear los lentes? Los cuadrados están separados por 75 píxeles.
      PDK5 Loops 1: 'En lugar de usar 5 bloques "avanzar", utiliza el bloque "repetir" con un bloque "avanzar" dentro de él. En ciencias de la computación, se llama "bucle". '
      PDK5 Loops 3: Aquí hay otro desafío para practicar bucles. ¿Qué pasa si usas el bloque `repetir` para ejecutar el código ya proporcionado en el espacio de trabajo 4 veces?
      PS - test - pixelation: Completa la forma X escribiendo ceros y unos
      PS FR test 7-25: 'Aquí están tus instrucciones para esta respuesta gratuita.  '
      PS Log test - Define and use turnAround: Define una función llamada darVuelta. Llama a la función y luego mueva la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      PS copy 2-3 Bee Conditionals 5: "¡Flores de color púrpura pueden tener 1 o 0 néctar, pero no sabes cuál! Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1 utilizando el bloque if."
      PS predictive Applab level test: 'Aquí hay algunas instrucciones. '
      Pattern Bee 1: "¡Qué campo extraño de golosinas! Me pregunto si hay un patrón aquí..."
      Pixelation - AllTheThings 4: Este nivel de pixelación demuestra el uso de la opción `ocultar_controles_codificación`. Ten en cuenta que el nivel muestra los datos de imagen en hexadecimal y no te permite volver a convertirlo en binario.
      Pixelation - AllTheThings 5: Este nivel de pixelación demuestra el uso de la opción "Ocultar controles deslizantes". Ten en cuenta que los controles deslizantes de ancho y alto no están disponibles, y los campos de ancho y alto no son editables.
      Pixelation - Lesson 14 - Fix bit offset: Un solo bit adicional se inserta en el flujo de bits que componen el logotipo C del Code.org. Ese bit adicional rompe todos los demás bits en la línea, lo que hace que el logotipo se vea desordenado. Rastrea el bit adicional y quítalo para arreglar el logotipo Code.org.
      Pixelation - Lesson 14 - Fix bit offset_2018: Un solo bit adicional se inserta en el flujo de bits que componen el logotipo C del Code.org. Ese bit adicional rompe todos los demás bits en la línea, lo que hace que el logotipo se vea desordenado. Rastrea el bit adicional y quítalo para arreglar el logotipo Code.org.
      Pixelation - Lesson 14 - Fix bit offset_2019: Un solo bit adicional se inserta en el flujo de bits que componen el logotipo C del Code.org. Ese bit adicional rompe todos los demás bits en la línea, lo que hace que el logotipo se vea desordenado. Rastrea el bit adicional y quítalo para arreglar el logotipo Code.org.
      Pixelation - Lesson 14 - Make the Letter A: "Haga \nuna letra 'A' de 3x5. El widget está configurado con las dimensiones incorrectas. Su primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles."
      Pixelation - Lesson 14 - Make the Letter A_2018: "Haga \nuna letra 'A' de 3x5. El widget está configurado con las dimensiones incorrectas. Su primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles."
      Pixelation - Lesson 14 - Make the Letter A_2019: "Haga \nuna letra 'A' de 3x5. El widget está configurado con las dimensiones incorrectas. Su primera tarea es establecer el segundo byte en el código binario de 8 bits para 5: 0000 0101. Luego comience a ingresar datos de píxeles."
      Pixelation - Lesson 14 - Make your own B and W Image: "¡Ahora haz tu propia imagen! Hemos empezado con un lienzo de 10 x 10, pero puedes hacerlo del tamaño que quieras. ¡Que te diviertas pixelando!"
      Pixelation - Lesson 14 - Make your own B&W Image: "¡Ahora haz tu propia imagen! Hemos empezado con un lienzo de 10 x 10, pero puedes hacerlo del tamaño que quieras. ¡Que te diviertas pixelando!"
      Pixelation - Lesson 15 - Color Free Play: 'Requisitos: El icono debe ser de 16 x 16 pixeles. Debes utilizar el Widget Pixelation para codificar los bits de información de color. La imagen debe codificarse con al menos 12 bits por pixel.'
      Pixelation - Lesson 15 - Color Shades 4x4: 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1: llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      Pixelation - Lesson 15 - Color Shades 4x4_2018: 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1: llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      Pixelation - Lesson 15 - Color Shades 4x4_2019: 'Comenzamos con la imagen 4x4 que Maddie creó en el video. Su tarea es llenar una cuadrícula de 4x4 con colores utilizando 12 bits por píxel. Estos son los requisitos: Fila 1: llenar con tonos de rojo. Fila 2: tonos de verde. Fila 3 - tonos de azul. Fila 4 - tonos de gris.'
      Pixelation - Lesson 15 - Color Shades: Te iniciamos con la fila de sombras de rojo que Maddie creó en el video. Experimenta con color de 6 bits rellenando la fila inferior de la imagen con sombras de un color diferente. Aquí tienes un ejemplo con algunas sombras de azul. ¡Prueba tu propio color!
      Pixelation - Lesson 15 - Color Shades_2018: Te iniciamos con la fila de sombras de rojo que Maddie creó en el video. Experimenta con color de 6 bits rellenando la fila inferior de la imagen con sombras de un color diferente. Aquí tienes un ejemplo con algunas sombras de azul. ¡Prueba tu propio color!
      Pixelation - Lesson 15 - Color Shades_2019: Te iniciamos con la fila de sombras de rojo que Maddie creó en el video. Experimenta con color de 6 bits rellenando la fila inferior de la imagen con sombras de un color diferente. Aquí tienes un ejemplo con algunas sombras de azul. ¡Prueba tu propio color!
      Pixelation - Lesson 15 - Complete 3-bit color: Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      Pixelation - Lesson 15 - Complete 3-bit color_2018: Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      Pixelation - Lesson 15 - Complete 3-bit color_2019: Comenzamos con la imagen de 4x2 que Maddie estaba creando, pero hemos omitido los dos últimos cuadrados. Termine la imagen descubriendo los dos colores que faltan y codifíquelos.
      Pixelation Bee: 'Esta imagen más grande de una abeja codifica el color con 12 bits por pixel, pero ver en hex hace más fácil ver el color de cada píxel. Si cambias al modo binario (sujétate a tu sombrero), es un montón de bits. Aquí hay otra cosa sorprendente para probar: desliza los bits por pixel hasta 24 bits por pixel. ¿Qué sucede? ¿Puedes explicar este comportamiento?'
      Pixelation Bee_2018: 'Esta imagen más grande de una abeja codifica el color con 12 bits por pixel, pero ver en hex hace más fácil ver el color de cada píxel. Si cambias al modo binario (sujétate a tu sombrero), es un montón de bits. Aquí hay otra cosa sorprendente para probar: desliza los bits por pixel hasta 24 bits por pixel. ¿Qué sucede? ¿Puedes explicar este comportamiento?'
      Pixelation Bee_2019: 'Esta imagen más grande de una abeja codifica el color con 12 bits por pixel, pero ver en hex hace más fácil ver el color de cada píxel. Si cambias al modo binario (sujétate a tu sombrero), es un montón de bits. Aquí hay otra cosa sorprendente para probar: desliza los bits por pixel hasta 24 bits por pixel. ¿Qué sucede? ¿Puedes explicar este comportamiento?'
      Pixelation Flappy: Esta es una imagen más grande a 9 bits por pixel. Con 9 bits por pixel puedes expresar 512 colores diferentes. Haz clic para ver la siguiente imagen que es aún más sofisticada, pero más fácil de entender.
      Pixelation Flappy_2018: Esta es una imagen más grande a 9 bits por pixel. Con 9 bits por pixel puedes expresar 512 colores diferentes. Haz clic para ver la siguiente imagen que es aún más sofisticada, pero más fácil de entender.
      Pixelation Flappy_2019: Esta es una imagen más grande a 9 bits por pixel. Con 9 bits por pixel puedes expresar 512 colores diferentes. Haz clic para ver la siguiente imagen que es aún más sofisticada, pero más fácil de entender.
      Pizza on a Plate: 'Idea del proyecto: Crear una imagen de algo conocido del mundo real. ¡Esto requiere persistencia y planificación!'
      Planning Farmer: "¡Qué campo extraño de golosinas! Me pregunto si hay un patrón aquí..."
      Planter Test: "¡Ayúdame a plantar mis campos!"
      Play Lab Rocket 1: Un cohete se despega y viaja a 15 metros por segundo... presione "Ejecutar" para ver cómo este problema de palabras se ve como una animación.
      Play Lab Rocket 2: Hemos iniciado la Receta de Diseño para la altura de cohetes mediante el contrato y ejemplos que acabas de escribir. Completa la definición de función para la altura de cohetes y ejecuta tu animación.
      Play Lab Rocket 2B: Un cohete despega y viaja a 15 metros por segundo. Usando la Receta de Diseño, escribe una función llamada altura-cohete que lleva el número de segundos transcurridos desde que despegó el cohete, y que produce la altura del cohete en aquel momento.
      Play Lab Rocket 4 (copy 1): Los cohetes reales comienzan lentamente y ganan velocidad con el tiempo. ¡Vamos a hacer que los nuestros hagan lo mismo! Escribe una función exponencial que describa un cohete que viaja a "segundos" metros cuadrados por segundo.
      Play Lab Rocket 4: Los cohetes reales comienzan lentamente y ganan velocidad con el tiempo, ¡así que añadamos una aceleración simple a la nuestra! ¿Puedes escribir una función que describe un cohete que está a 10 metros en 1 segundo, 40 metros en 2 segundos, 90 metros en 3 segundos, 160 metros en 4 segundos y así sucesivamente?
      Play Lab Rocket 5: Mucho mejor, pero escribamos una función más con aceleración simple. Esta vez, el cohete debe ser de 15 metros en 1 segundo, 45 metros en 2 segundos, 95 metros en 3 segundos y 165 metros en 4 segundos.
      Play Lab Rocket Free Play: 'Juego libre: Experimenta con tu función altura-cohete para hacer que el cohete vuele de diferentes maneras. Haz clic en "Finalizar" cuando hayas terminado.'
      Poorva copy U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      Poorva-test: Estas son instrucciones normales para un nivel. En esta parte, no hay nada extraordinario.
      Practice Create Performance Task: Diseña e implementa tu práctica Crear tarea de rendimiento. (Haz clic para ver las instrucciones completas)
      Practice Create Performance Task_2018: Diseña e implementa tu práctica Crear tarea de rendimiento. (Haz clic para ver las instrucciones completas)
      Practice Create Performance Task_2019: Diseña e implementa tu práctica Crear tarea de rendimiento. (Haz clic para ver las instrucciones completas)
      Project - Final Image Scroller: Actualiza el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haz clic para ver las instrucciones completas)
      Project - Final Image Scroller_2018: Actualiza el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haz clic para ver las instrucciones completas)
      Project - Final Image Scroller_2019: Actualiza el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haz clic para ver las instrucciones completas)
      Project - Finish your canvas app: Extiende la funcionalidad de uno de los efectos, o crea uno completamente nuevo.(Haz clic para ver las instrucciones completas)
      Project - Make Your Own Clicker Game: Completa tu juego de clics. (Haz clic para ver las instrucciones completas)
      Project - Your Own Multi Screen App: Crea tu aplicación multipantalla. (Haz clic para ver las instrucciones completas)
      Project - Your Own Multi Screen App_2018: Crea tu aplicación multipantalla. (Haz clic para ver las instrucciones completas)
      Project - Your Own Multi Screen App_2019: Crea tu aplicación multipantalla. (Haz clic para ver las instrucciones completas)
      Prompt Test: Construye lo que quieras. ¡Este es un ejemplo de un juego de adivinación de números!
      Quantum Bee - Ryan: "¡Estas nubes me están molestando! Algunas de las nubes tienen flores dentro, y otras, no. Debo comprobar cada nube y solo obtener el néctar de las flores."
      Quantum Bee: "¡Las flores moradas pueden tener un tipo de néctar de 1 ó 0, pero tu no sabes cuál! Ten cuidado de no recolectar el néctar de una flor morada sin néctar. Revisa si el valor del néctar es igual a 1 usando el bloque “if”."
      Ram Spritelab Validation Test: Presiona la tecla arriba
      Robot Doodle: 'Idea del proyecto: Crear una imagen de algo conocido del mundo real. ¡Esto requiere persistencia y planificación!'
      Robot Doodle_2018: 'Idea del proyecto: Crear una imagen de algo conocido del mundo real. ¡Esto requiere persistencia y planificación!'
      Robot Doodle_2019: 'Idea del proyecto: Crear una imagen de algo conocido del mundo real. ¡Esto requiere persistencia y planificación!'
      Robot Drawing: 'Idea del proyecto: Crear una imagen de algo conocido del mundo real. ¡Esto requiere persistencia y planificación!'
      Robot: 'Idea del proyecto: Crear una imagen de algo conocido del mundo real. ¡Esto requiere persistencia y planificación!'
      Rocket Height Course A: Sigue la Receta de Diseño para crear un función altura-cohete.
      Ryan - 4-5 Bee Conditionals 2: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que mira debajo de TODAS LAS NUBES para verlo si está escondiendo una flor. Si es así, puedes recolectar néctar.
      Ryan - Bee Conditionals: La abeja sólo quiere néctar ahora. No todos los objetos son flores, así que mira debajo de TODAS LAS NUBES para verlo si está escondiendo una flor. Si es así, puedes recolectar néctar.
      Ryan App Lab: "¡Resuelve esto!"
      Ryan Doily Step 1: Ahora vamos a dibujar una carpeta paso a paso. Primero, dibuja un cuadrado.
      Ryan Doily Step 2: Ahora debes girar y repetirlo 20 veces. ¿Cuántos grados giras para obtener 360 después de 20 iteraciones?
      Ryan Doily Step 3: Ahora debes girar y repetirlo 20 veces. ¿Cuántos grados giras para obtener 360 después de 20 iteraciones?
      Ryan Test Locked Blocks: Aquí hay una función denominada "patrulla". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      Ryan's clone of C4S15P10: "Añadimos una última función para ti.\n\nUtiliza una sentencia \"si\" para que tu programa llame a la función \"nivel_arriba\" solo cuando \"puntuación_jugador\" sea mayor que un cierto numero.\n\nPor ejemplo: \"puntuación\\_jugador\" > 6\n\nJuégalo y pasa el nivel 4 para avanzar al siguiente desafío. "
      RyanTest3: "¡Este nivel tiene activado el cambio de forma! Actualiza para ver diferentes variantes."
      Ryan_Demo: Haz que el alce comience un nuevo movimiento después de 4 medidas.
      SG Add Subgoals practice: Dibuja una cuadrícula de 3x3 en el frente y la derecha de la tortuga lo más eficientemente posible. La tortuga debería finalizar en la ubicación original, de cara a su dirección original. (Haz clic para ver las instrucciones completas)
      SG U3L03 - draw rect function: |-
        Escribe una función llamada drawRectangle().
        (Haz clic para ver las instrucciones completas)
      SG U3L03 - draw step: Escribe la función drawStep. (Haz clic para ver las instrucciones completas)
      SG U3L03 Define and use turnAround: Define una función llamada darVuelta. Llama a la función y luego mueva la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      SG U3L03 Draw a T using turnAround: Dibuja un signo de suma usando la versión proporcionada de turnAround(). (Haz clic para ver las instrucciones completas)
      SG U3L03 Three Steps: Define la función llamada drawSide(), que dibuja tres pasos y mueve la tortuga para prepararse para el próximo lado. (Haz clic para ver las instrucciones completas)
      SG U3L03 define turnRight and draw a rectangle: Define una función llamada right(), que gira la tortuga a la derecha. Luego usa esta función para dibujar un rectángulo, como se muestra a continuación. (Haz clic para ver las instrucciones completas)
      SG U3L03 draw diamond: Crea una función llamada drawDiamond() que hace uso del trabajo anterior para dibujar el diamante completo. (Haz clic para ver las instrucciones completas)
      SG U3L04 - 3 by 3 with functions: Haz el cuadrado de 3x3 lo más eficientemente que puedas. (Haz clic para ver las instrucciones completas)
      SG U3L04 - snowflake: Crea el diseño desglosándolo en capas de funciones. (Haz clic para ver las instrucciones completas)
      SG U3L06 - moveForwardwithParams: Usa un comando único para mover la tortuga el borde de la pantalla. (Haz clic para ver las instrucciones completas)
      SG U3L06 Challenge 1 triangle: Usa las versiones parametrizadas de los comandos de la tortuga para crear un triángulo con lados de 100 pixeles de largo. (Haz clic para ver las instrucciones completas)
      SG U3L06 Challenge 2 purple square: Lee la documentación para bolígrafocolor() y bolígrafoancho() antes de usarlo para dibujar el cuadrado azul.
      SG U3L06 Challenge 3 fill pink: Completa el fondo de la pantalla con tu color favorito. (Haz clic para ver las instrucciones completas)
      SG U3L06 Challenge 4 bullseye: Crea el juego de dardos con colores hexadecimales y dot(). (Haz clic para ver las instrucciones completas)
      SG U3L06 Challenge 5 overlapping circles: 'Esta imagen se crea usando solamente dot() y penColor(), ¿pero cómo haremos para que esos círculos sean transparentes? Si no has obtenida la sugerencia aún: ¡mira la documentación!'
      SG U3L06 Challenge 6 squiggles: 'Lee la documentación para los comandos "arcLeft" y "arcRight" y luego dibuja los garabatos como se muestra. '
      SG U3L06 Challenge 7 smiley face: Usa turnTo() y moveTo() para ayudar a dibujar una cara sonriente. (Haz clic para ver las instrucciones completas)
      SG U3L06 Challenge 8 make your own: Crea un dibujo propio. (Haz clic para ver las instrucciones completas)
      SG U3L07 - Free Play Loops and Random: "¡Juego libre! Usa lo que has prendido de bucles y aleatorio para crear tu propia escena. Diviértete."
      SG U3L07 - allSeaGrass: Agrega 50 piezas de hierba marina a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      SG U3L07 - bubbles: Agrega 200 burbujas a la imagen escribiendo drawAllBubbles con un bucle. (Haz clic para ver las instrucciones completas)
      SG U3L07 - createTriangleParam: Define una función que acepte un parámetro para hacer coincidir las llamadas a funciones y completar la imagen. (Haz clic para ver las instrucciones completas)
      SG U3L07 - fish: Agrega 15 peces a la imagen escribiendo drawAllFish con un bucle. (Haz clic para ver las instrucciones completas)
      SG U3L07 - introSquare: Usa un bucle para dibujar un cuadrado. Luego agrega otro bucle para dibujar muchos cuadrados, cada uno rotado en alguna medida. (Haz clic para ver las instrucciones completas)
      SG U3L07 - loopsWithRandom: Aumenta la cantidad de iteraciones para completar la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      SG U3L07 - randomDots1: Aumenta la cantidad de iteraciones para completar totalmente la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      SG U3L07 - randomSquare: Usa un bucle para dibujar la figura. (Haz clic para ver las instrucciones completas)
      SG U3L07 - seaGrass: Agrega un parámetro para dibujar drawSeagrass que controla la cantidad de olas en la hierba. (Haz clic para ver las instrucciones completas)
      SG U3L07 - seaStar: Agrega 5 estrellas marinas a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      SG U3L07 - sunBeams: Agrega 100 rayos de luz a la imagen escribiendo drawAllSunbeams con un bucle. (Haz clic para ver las instrucciones completas)
      SG U3L07 - topDownDesign: Ponte cómodo con la estructura de este programa, luego avanza al siguiente ejercicio. (Haz clic para ver las instrucciones completas)
      SG U3L07 More Subgoals: Lee la documentación para bolígrafocolor() y bolígrafoancho() antes de usarlo para dibujar el cuadrado azul.
      SG U3L08 - createTwoParamTriangle: Define una función llamada drawTriangle() que acepta dos parámetros para establecer el tamaño y el ancho del triángulo. (Haz clic para ver las instrucciones completas)
      SG U3L08 - digitalScene: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      SG U3L08 - drawSquareWithParam: Usa drawSquare() para recrear la imagen de ambos cuadrados, y esta vez usa parámetros. (Haz clic para ver las instrucciones completas)
      SG U3L08 - fish: Agrega un parámetro para dibujar drawFish que controla el tamaño de los peces dibujados. (Haz clic para ver las instrucciones completas)
      SG U3L08 - freePlay: Crea más llamadas para tus nuevas funciones con parámetros para seguir agregando a tu imagen. (Haz clic para ver las instrucciones completas)
      SG U3L08 - individualCode: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      SG U3L08 - introUnderTheSea - recovery: Agrega un pez, una estrella de mar y una porción de hierba marina adicionales a tu imagen. Mira las funciones que los crean, pero no cambies estas funciones. (Haz clic para ver las instrucciones completas)
      SG U3L08 - introUnderTheSea: Agrega un pez, una estrella de mar y una porción de hierba marina adicionales a tu imagen. Mira las funciones que los crean, pero no cambies estas funciones. (Haz clic para ver las instrucciones completas)
      SG U3L08 - multiParamFish: Agrega tres parámetros a tu función drawFish para aceptar los valores rojos, verdes y azules para hacer que tus peces tengan colores diferentes. (Haz clic para ver las instrucciones completas)
      SG U3L08 - paramsToStarfish: Agrega un parámetro para drawStarfish que controla el tamaño de la estrella de mar dibujada. (Haz clic para ver las instrucciones completas)
      SG U3L08 - randomInput: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      SG U3L08 - seaGrass: Agrega un parámetro para drawStarfish que controla el tamaño de la porción de hierba marina dibujada. (Haz clic para ver las instrucciones completas)
      SG U3L08 - squareTwoParams: Llama drawSquare() para completar el dibujo de dos cuadrados. (Haz clic para ver las instrucciones completas)
      SG U3L08 comments: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      SG U3L08 how to add comments: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      SG U3L2 Using Simple Commands part 1: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      SG U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      SG U3L2_Add-subgoals: Dibuja una cuadrícula de 3x3 en el frente y la derecha de la tortuga lo más eficientemente posible. La tortuga debería finalizar en la ubicación original, de cara a su dirección original. (Haz clic para ver las instrucciones completas)
      SG U3L2_Turtle3by3Grid: Dibuja una cuadrícula de 3x3 en el frente y la derecha de la tortuga lo más eficientemente posible. La tortuga debería finalizar en la ubicación original, de cara a su dirección original. (Haz clic para ver las instrucciones completas)
      SG U3L2_TurtleSquare_right: Dibuja un cuadrado al frente y a la derecha de la ubicación de inicio. (Haz clic para ver las instrucciones completas)
      SGU3L07 - randomDots1: Aumenta la cantidad de iteraciones para completar totalmente la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      Sam the Butterfly 1 (copy 1): Esta mariposa se llama Sam, y el área de juego es el patio de Sam. El patio de Sam es de 400 pixeles de ancho por 400 pixeles de altura. Como puedes ver, Sam puede caminar alrededor del patio, y las coordenadas en la parte superior de la actualización de pantalla te indica su ubicación. Usa las teclas de flecha para mover a Sam alrededor de su patio. Ayuda a Sam a recoger todas las banderas para avanzar.
      Sam the Butterfly 1: Este murciélago se llama Sam, y el área de juego es el patio de Sam. El patio de Sam tiene 400 pixeles de ancho por 400 pixeles de altura. Como puedes ver, Sam puede caminar alrededor del patio, y las coordenadas en la parte superior de la actualización de pantalla te indica su ubicación. Haz clic en "Ejecutar", luego utiliza las teclas de flecha para mover a Sam alrededor de su patio y toma nota de las coordenadas de Sam en diferentes ubicaciones. Haz clic en "Finalizar" cuando estés listo para avanzar.
      Sam the Butterfly 2: La mamá de Sam quiere asegurarse de que siempre pueda ver al menos un poco de él, así que escribamos algunas funciones que la ayuden a asegurarse de que él no vaya demasiado lejos del patio. Esta es una función llamada segura-izquierda?; debe tomar un Número para su dominio que representa las coordenadas x de Sam y volver verdad si es completamente visible en la pantalla. Si su función no falla, Sam no debería ser capaz de dejar el patio desde el lado izquierdo.
      Sam the Butterfly 3: En el último desafío, hemos impedido que Sam saliera por la izquierda; ahora vamos a hacer lo mismo con la derecha. ¿Completa la función seguro-derecha? para asegurarse de que Sam no puede salir del lado derecho de la pantalla.
      Sam the Butterfly 4: Uy, podemos impedir que Sam salga por la izquierda, o podemos impedir que salga por la derecha, ¿pero cómo podemos mantenerlo seguro de salir de ambas direcciones? Intenta usar el y bloquea para programar la función en-pantalla? para comprobar si Sam está seguro-izquierda? y seguro-derecha?
      Sam the Butterfly 5: 'Juego libre: Increíble, ¡hemos mantenido a Sam a salvo a la izquierda y a la derecha! Usa esta etapa de juego libre para experimentar con tus funciones y mejorar aún más enpantalla?'
      Sam the Butterfly 6: Hemos añadido un nuevo parámetro "y" a la función "enpantalla?". Actualiza la función para que compruebe que "seguro-izquierda?" Y "seguro-derecha?" Y "seguro-arriba?" sean todos verdaderos. Cuando hayas arreglado la función, intenta salir del patio desde la izquierda, desde la derecha y desde los lados superiores.
      Sam the Butterfly 7: ¡Sólo una última indicación para preocuparse! Crea una función "seguro-abajo?" y actualiza la función "enpantalla?" para que compruebe arriba, abajo, izquierda y derecha.
      Sam the Butterfly Complete: ¡Sólo una última indicación para preocuparse! Crea una función "seguro-abajo?" y actualiza la función "enpantalla?" para que compruebe arriba, abajo, izquierda y derecha.
      SpecialFrozenLevel: "¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal."
      Standalone_Artist_1: "¡Bienvenido a Artista! En primer lugar, vamos a intentar hacer un simple cuadrado usando el bloque vuelta derecha y el bloque mover hacia adelante. Cada lado debe tener 100 píxeles de largo."
      Standalone_Artist_2: Dibuja este diamante con 120 y 60 grados de ángulo y lados largos de 150 píxeles.
      Standalone_Artist_3: "¿Puede dibujar este hexágono con lados de 100 píxeles y vueltas de 60 grados?"
      Standalone_Artist_4: Ahora tienes un nuevo bloque para poder jugar, el bucle. Éste repetirá un conjunto de comandos. ¿Qué sucede si se realiza un bucle de estos comandos 6 veces?
      Standalone_Artist_5.5: 'Nota que simplificamos el código del diamante convirtiéndolo en una repetición. Puedes repetir toda la secuencia 12 veces para dibujar la flor. Pista: Necesitas girar 30 grados después de dibujar el diamante, para que no sigas dibujando sobre el mismo diamante.'
      Standalone_Artist_5: "¿Cuántas veces necesitas repetir este diamante para dibujar la flor?"
      Standalone_Artist_6: 'Repite este código de hexágono 6 veces para crear el diseño. ¿Cuántos grados necesitarás girar cada vez? Pista: Divide el numero de grados en un círculo por el número de veces que estás repitiendo.'
      Standalone_Artist_7: 'Una función es otra herramienta de programación que te ayuda a evitar repetir código. Esta función dibuja una flor, para que la puedas utilizar en cualquier momento para dibujar una flor. Utiliza esto y el nuevo bloque de salto para dibujar estas flores. Pista: Hay 150 píxeles de espacio entre cada flor'
      Standalone_Artist_8: Aquí hay una función llamada "Dibuja una figura" que hemos programado para dibujar hexágonos. Ejecuta el código para ver lo que hace y luego experimenta con la función para ver qué pasa. ¿Puedes hacer que dibuje un patrón de cuadrados, triángulos u octágonos?
      Standalone_Artist_9: "¡Ahora sigue adelante y haz la imagen que tú quieras! ¡Incluso tienes una función vacía con la que puedes hacer lo que quieras!"
      Standalone_Artist_v2: "¡Bienvenido a Artista! En primer lugar, vamos a intentar hacer un simple cuadrado usando el bloque vuelta derecha y el bloque mover hacia adelante. Cada lado debe tener 100 píxeles de largo."
      StepIntro: Así se usa el botón "Paso".
      Test Play Lab: Este es un nivel de laboratorio de juego de prueba.
      Test embedded Blockly in instructions: |-
        Como elemento de bloque, deberíamos poder incluir XML que represente un bloque o bloques Blockly válidos.

        <xml>
        <block type="draw_move_by_constant">
        <title name="DIR">avanzar</title>
        <title name="VALUE">100</title>
        </block>
        </xml>

        También brindamos compatibilidad con XML de Blockly como un elemento en línea como: <xml><block type="draw_move_by_constant"><title name="DIR">avanzar</title><title name="VALUE">100</title></block></xml>. La diferencia en el formato de entrada es que este está insertado dentro de un párrafo, mientras que el anterior es un bloque de texto independiente. La diferencia en el valor es comparable.
      Test embedded K1 Blockly in instructions: Usa tres bloques "mover oeste" y un bloque "recoger maíz" para resolver este desafío.
      Test of comment block: Arrastra el bloque de etiqueta de submeta que quieras.
      Testing Quantum Farmer: "¡Wow, encontré un agujero realmente profundo! no sé cuántas paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta que el suelo esté parejo? Sugerencia: trata usando el bucle mientras."
      The Vigenere Cipher Widget: Instrucciones
      The Vigenere Cipher Widget_2018: Instrucciones
      The Vigenere Cipher Widget_2019: Instrucciones
      The Vigenere Cipher: Instrucciones
      Tortoise and Hare: "¡Ayuda a que la tortuga golpee a la liebre!"
      Total Artist Clone Me: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      U1L10 NetSim numbers with decimal: Invente y pruebe un protocolo para codificar y enviar mensajes de texto. Su protocolo debe incluir las letras a-z, espacios y marcas de puntuación comunes. Puedes añadir caracteres adicionales si lo deseas. Vea la hoja de trabajo entregada por su profesor para obtener instrucciones más detalladas.
      U1L11 NetSim numbers with Ascii: Trabaja con un compañero o en un pequeño equipo para desarrollar un protocolo que te permite enviar texto formateado. ¡Mira la hoja de trabajo que tu profesor ha entregado para obtener instrucciones más detalladas!
      U1L4 NetSim SendAB: 'Desarrolla, documenta y prueba un protocolo que le permite usar el simulador de Internet para transmitir un mensaje. Mira la hoja de trabajo para obtener instrucciones más detalladas.  '
      U1L8 NetSim numbers no decimal: Instrucciones predeterminadas
      U1L8 NetSim numbers with decimal: Con su compañero, desarrolla un protocolo o un conjunto de reglas para comunicar un dibujo mediante la utilización de bits solamente. ¡Mira la hoja de trabajo que entrega tu profesor para obtener instrucciones más detalladas!
      U2 Vigenere: Prueba
      U2 frequency caesar: Instrucciones
      U2 frequency random sub: Instrucciones
      U2 vigenere cipher: Instrucciones
      U2L04 - NetSim Routers with Addresses: Enviar mensajes con tus compañeros de clase. (Haz clic para ver las instrucciones completas)
      U2L05 - NetSim - Packets and Building TCP: |-
        Desarrolla un Protocolo para enviar un mensaje de manera confiable.

        Restricciones:

        -   Los paquetes pueden contener sólo 6 caracteres
        -   Los paquetes pueden bajar con probabilidad pequeña
        -   Los paquetes podrían no llegar en orden
      U2L10 NetSim Automatic DNS: En esta versión del simulador de Internet, se te proporciona un sistema de nombres de dominio (DNS) y este conoce las direcciones IP de todos las computadoras conectadas. Envía un mensaje en el formulario GET [hostname] al servicio DNS en la dirección <yourRouterNumber>.15 para obtener la dirección de un estudiante.
      U2L10 NetSim Manual DNS: En esta versión del simulador, no puedes ver las direcciones de los otros estudiantes. En lugar de ello, uno de ustedes debe actuar como nombre de servicio, para ayudar a compartir direcciones entre sí.
      U2L14 frequency random: Prueba
      U2L2 NetSim Hub Mode: Ahora usa el simulador de Internet para enviar los movimientos de la nave de batalla. Para configurar, únete a una Sala con tu grupo, y añade barcos a su tablero de papel para cada oponente. Al jugar, toda la comunicación debe hacerse a través de la herramienta, ¡así que no debes hablar, sino divertirte!
      U2L3 NetSim Hub Mode: Usa el simulador de Internet para probar el protocolo de comunicación binaria de tu grupo para la nave. ¿Cuán corto puedes hacer que sea el mensaje y la respuesta?
      U2L4 NetSim Routers Addresses: |-
        Para esta actividad, conéctate a un router con los demás de tu grupo. Nota importante: el router sólo enrutará correctamente los mensajes donde los primeros 4 bits son Para: dirección y los segundos 4 bits son De: dirección.

        [PENDIENTE: Es necesario que NetSim sea compatible con direcciones jerárquicas. Por ahora, el nivel está configurado para direcciones "de" y "para" de 4 bits]
      U2L5 NetSim Classroom Internet: Para esta actividad, conéctate a un router con los demás de tu grupo. El simulador de Internet ahora proporciona un lugar para que pongas las direcciones A y Desde, para que no tengas que escribir los bits manualmente.
      U2L7 NetSim Need for Packets: Transfiere tu favicon a un socio a través de una red en la que mientras más crece el paquete, más probable es que se deseche.
      U3 - Arrays - Demo App: Utiliza la aplicación "Mis Cosas Favoritas". ¿De qué manera esta aplicación podría estar utilizando un arreglo? (Haz clic para ver instrucciones completas)
      U3 - Arrays - appendItem: Usa agregarElemento para crear un arreglo de números impares 1-11. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - assignment: Utiliza índices para cambiar los valores en este arreglo de 1 a 0. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - assignment2: Calcula la suma de tres valores almacenados en una arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - assignment3: Incrementa el valor de cada valor en un arreglo generado aleatoriamente por 1. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - createFirstArray: Crea un arreglo de los números pares del 0 al 10 y muestra su contenido con console.log. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - expressionsAsIndexes: Escribe un programa que muestre un color elegido aleatoriamente desde el arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings Counting Variable: Crea una variable global para el índice actual y úsalo para mostrar el primer elemento en la arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings Next: Escribe código que permita al usuario avanzar a través de tu lista mediante la pulsación del botón "Siguiente". (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings Prev: Escribe código que le permita al usuario retroceder en tu lista mediante la pulsación del botón "Último". (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings addItem: Escribe código que le permite a un usuario añadir sus propias cosas favoritas a la lista. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings bounds: Añade sentencias `si` a los gestores de eventos que impiden que el índice global salga de los límites. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings createArray: Crea un arreglo de palabras que describan tus cosas favoritas. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings firstOutput: Utiliza configurarTexto para mostrar el primer elemento en el arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings giveIDs: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings keepPlaying: "¡Haz cualquier otra mejora que quieras! (Haz clic para ver las instrucciones completas)"
      U3 - Arrays - favThings template: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings template_2018: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - favThings template_2019: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - globalVariableIndex: Dale ID descriptivas y significativa a los elementos de tu IU. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - indexPractice: Escribe el contenido del arreglo en la pantalla en orden numérico. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - insertingItems: Inserta elementos en un arreglo para formar una frase completa. (Haga clic para ver las instrucciones completas)
      U3 - Arrays - insertionErrors: Ejecuta cada comando que hace referencia a índices que están fuera de límites y observa los resultados. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - introIndex: Muestra el primer y último elemento en el arreglo. Muestra el número 5 del arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - length: Usar lista.largo para determinar la longitud de cada arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - lengthMinus1: Usa lista.largo - 1 para registrar el último elemento del arreglo a la consola. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - remove: Quita elementos de un arreglo para formar una frase completa. (Haz clic para ver las instrucciones completas)
      U3 - Arrays - stringsInArrays: Añade cadenas a un arreglo para escribir una oración palabra por palabra. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - 200dots: Añade un bucle a tu programa que dibuje 200 puntos en tu lienzo. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - One Dot sprayPaint: Escribe código que vuelva a dibujar tu imagen mediante el uso de un punto cuyas ubicaciones "x" e "y" usan offsetX y offsetY con un pequeño valor aleatorio añadido. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - appendToArray: Crea un arreglo para almacenar cada parámetro de evento. Añade cada parámetro de evento a este arreglo dentro de tu gestor de eventos. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - changeToMouseMove: Cambia tu programa para que los puntos se dibujen en la ubicación del ratón mientras el usuario mueve el ratón en el lienzo. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - clickToAdd: Cambia tu programa para que los puntos se añadan al lienzo cuando el usuario haga clic en él. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - delete: Crea un botón que borre el dibujo borrando el lienzo y quitando todos los valores almacenados. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - draw at click point: Cambia tu programa para que los puntos se dibujen en la ubicación donde el ratón hace clic. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - freePlay: Extiende la funcionalidad de uno de los efectos, o crea uno completamente nuevo.(Haz clic para ver las instrucciones completas)
      U3 - Canvas - introCanvas: Añade un lienzo a tu aplicación y configúralo para que sea el lienzo activo. Luego añade un punto grande a tu lienzo. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - movementFunction fix Orig: Modifica el controlador de eventos de botón "Original" para que tenga en cuenta el movimiento del ratón. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - movementFunction: Escribe una función que tome el movimiento del ratón como entrada y genere un ancho de línea como salida. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - redrawOriginal: Escribe una función que procese tu matriz y vuelva a dibujar los puntos como se presentaron originalmente. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - redrawRandom: Configure un controlador de botón y evento para la función aleatoria. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - redrawRandom2: Escribe una función que procese tu arreglo y vuelva a dibujar los puntos con un tamaño aleatorio. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - shiftKey: Añade una sentencia `si` a tu controlador de eventos para que los puntos solo se dibujen cuando se presione la tecla de cambio. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - sketch: Escribe un código que vuelva a dibujar tu imagen mediante el uso de un efecto de boceto. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - sprayPaint: Actualiza el código de pintura de pulverización para que vuelva a dibujar tu imagen mediante el uso de varios puntos aleatorios en lugar de usar un anidado para bucle. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - transparentDots: Cambia los colores de tus puntos para que tengan un trazo completamente transparente y un relleno parcialmente transparente. (Haz clic para ver las instrucciones completas)
      U3 - Canvas - usingOffsetXY: Añade un comando console.log dentro de la función de tu controlador de eventos. Úsalo para mostrar el parámetro del evento. Haz clic en la pantalla para ver el contenido del parámetro del evento (Haz clic para ver las instrucciones completas)
      U3 - Conditional Basics - 6: Añade un setText después de la sentencia `si` a "No. Adivina de nuevo." (Haz clic para ver las instrucciones completas)
      U3 - Conditionals - Combine AND OR Simple: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Dormir hasta tarde!" si es el fin de semana y el usuario es un adolescente. (Haz clic para ver las instrucciones completas)
      U3 - Conditionals - Combine AND OR and NOT: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Hora de ir a la escuela!" si no es el fin de semana y el usuario es menor de 18 años. (Haz clic para ver las instrucciones completas)
      U3 - Conditionals - Combine AND and OR: Escribe una sentencia `si` que utiliza Y y O para mostrar "¡Hora de ir a la escuela!" si no es el fin de semana y el usuario es menor de 18 años. (Haz clic para ver las instrucciones completas).
      U3 - Conditionals - Simple AND: Escribe una sentencia `si` que utilice Y para mostrar "Eres un adolescente." si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      U3 - Conditionals - Simple OR: Escribe una sentencia `si` que utilice Y para mostrar "¡Es fin de semana!" si el usuario ingresa una edad de entre 13 y 19 años. (Haz clic para ver las instrucciones completas)
      U3 - Conditionals - intoOr: Añade 2 sentencias `si` que usan el operador O. (Haz clic para ver las instrucciones completas)
      U3 - Conditionals - introAND: Añade 2 sentencias `si` que usan el operador O. (Haz clic para ver las instrucciones completas)
      U3 - Design Mode - Console Log: Actualiza los nombres de ID y los mensajes `console.log` para coincidir con el botón correcto. (Haz clic para ver las instrucciones completas)
      U3 - Design Mode - Layers and Delete: Arregla el diseño del juego de dardos. (Haz clic para ver las instrucciones completas)
      U3 - Design Mode - Multi Screens 2: Crea una aplicación de 2 pantallas que pueda alternar entre una pantalla negra y una pantalla blanca mediante el uso de botones. (Haz clic para ver las instrucciones completas)
      U3 - Design Mode - Multi Screens: Crea una aplicación de 2 pantallas con una pantalla negra y una pantalla blanca. (Haz clic para ver las instrucciones detalladas)
      U3 - Design Mode - Other Events: Elimina el botón y haz que la imagen se mueva a una ubicación aleatoria cuando haces clic en él. (Haz clic para ver las instrucciones detalladas)
      U3 - Design Mode - WTF Console Log: Añade 3 mensajes de console.log y pruébalos. (Haz clic para ver las instrucciones completas)
      U3 - Design Mode -Recreate Beyond Buttons: Recrea el juego "Chaser" con una pantalla de bienvenida y una pantalla de fin de la partida. (Haz clic para ver las instrucciones completas)
      U3 - Design Mode 1: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      U3 - Dice - Dropdown and Score: Añade predecir y anotar al juego de dados (Haz clic para ver las instrucciones completas)
      U3 - Dice - Dropdown with Strings: Añade un menú desplegable para el nivel de dificultad que escribe el nivel de dificultad en la consola. (Haz clic para ver las instrucciones completas)
      U3 - Dice - If: Muestra diferentes imágenes gráficas para el número aleatorio generado. (Haz clic para ver las instrucciones completas)
      U3 - Dice - Nested: Usa sentencias `si` anidadas para hacer que el puntaje sea diferente para los diferentes niveles del juego. (Haz clic para ver las instrucciones completas)
      U3 - High Low - Debug: Depura el orden de los condicionales para que realmente le diga al usuario cuando sus predicciones estén cerca. (Haz clic para ver las instrucciones completas)
      U3 - High Low - Dropdown: Agrega un menú desplegable para sus suposiciones en lugar de entradaNúmero (Haz clic para ver las instrucciones completas)
      U3 - High Low - Else if: Añade una sentencia `si no-si` para decirle al usuario si sus predicciones son altas o bajas en lugar de simplemente incorrectas. (Haz clic para ver las instrucciones completas)
      U3 - High Low - Else: Añade una sentencia `si no` para que el programa le diga al usuario cuando esté en lo correcto y cuando no lo esté. (Haz clic para ver las instrucciones completas)
      U3 - High Low - If: Añade código a la sentencia `si` que indique al usuario adivinado el número secreto. (Haz clic para ver las instrucciones completas)
      U3 - Keys - Add Image URLs: Añade URL de imagen a tu arreglo. Reemplaza el área de texto con una imagen y setText con setImageURL. ¡Luego prueba tu aplicación! (Haz clic para ver las instrucciones completas)
      U3 - Keys - Buttons and Keys: Haz que el programa responda de la misma manera para hacer clic en las imágenes de la pantalla y pulsar las teclas de arriba y abajo en el teclado. (Haz clic para ver las instrucciones completas)
      U3 - Keys - Demo App: Reproduce con el desplazamiento de imágenes. Presiona las flechas de izquierda y derecha para avanzar a través de las imágenes.
      U3 - Keys - Final Image Scroller: Actualiza el desplazamiento de la imagen para responder a los botones y presionar las teclas. (Haz clic para ver las instrucciones completas)
      U3 - Keys - Functions: Escribe las funciones hacerFlechaArriba y hacerFlechaAbajo y llama a las funciones en lugar de duplicar el código. (Haz clic para ver las instrucciones completas)
      U3 - Keys - Key Up and Down: Prueba los eventos de tecla hacia arriba y tecla hacia abajo para ver en qué forma se diferencian de la pulsación de tecla. (Haz clic para ver instrucciones completas)
      U3 - Keys - Multiple Keys: Reproduce un sonido diferente cuando se presione la flecha hacia abajo. (Haz clic para ver las instrucciones completas)
      U3 - Keys - Practice Adding Images with URL: Añade URL de imagen a tu arreglo de imágenes. Prueba el botón de añadir. Dale estilo a tu desplazamiento de imagen. (Haz clic para ver las instrucciones completas)
      U3 - Keys - Words to Images: Añade URL de imagen a tu arreglo de imágenes. Prueba el botón de añadir. Dale estilo a tu desplazamiento de imagen. (Haz clic para ver las instrucciones completas)
      U3 - Loops -  9 Part 2: Cambia la expresión booleana para el bucle `mientras` para que se detenga cuando ambos dados sean mayores o iguales a 3. (Haz clic para ver las instrucciones completas)
      U3 - Loops -  Complex Condition: Cambia la expresión booleana para el bucle `mientras` para que se detenga cuando ambos dados sean mayores o iguales a 5. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 1: Cambia la condición del bucle `mientras` para comprobar si el número de variable es menor a 90. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 10: Escribe un programa que simule la arrojada de dos dados. Arroje los dados repetidamente hasta que la suma de los dados sea o 7 u 11.
      U3 - Loops - 11: Arregle la condición para que siga arrojando el dado siempre que el valor no sea un 2 o un 3 en lugar de girar infinitamente. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 12: Cambia el código para que imprima la cadena "Hola" 5 veces. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 13: Actualiza el código para contar de a 3 en lugar de a 1. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 14: Cambia la condición del bucle para impedir el bucle infinito y la interrupción del conteo cuando que el conteo sea mayor de 30. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 15: Cuenta la cantidad de veces que la suma del dados es 12. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 16: Descubre cuántas veces tienes que tirar para obtener 100 veces la suma de 7. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 2: Intenta crear un bucle infinito mediante el uso de !=, > y \<. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 3: Cambia la sentencia `si` a un bucle `mientras` para que el programa se ejecute hasta que lance un 6. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 4: Utiliza los Comandos de depuración para hacer una lista de todos los valores lanzados antes de un 6. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 5: Añade código dentro del bucle `mientras` que actualizará el número de variable para que la condición finalmente se convierta en falsa. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 6: Corrija el problema para que el `bucle` se ejecute al menos una vez. Cambie el valor inicial del número a un valor falso como -1. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 7: Sin añadir ninguna línea de código, vuelve a ordenar el código para que imprima todos los valores del número. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 8: Depura qué número no se está escribiendo y añade una sentencia de escritura para mostrar ese valor. (Haz clic para ver las instrucciones completas)
      U3 - Loops - 9: Modifica la condición para que siga girando mientras ambos sean inferiores a 3. (Haz clic para ver las instrucciones completas)
      U3 - Loops - Continue: Utiliza los Comandos de depuración para hacer una lista de todos los valores lanzados antes de un 6. (Haz clic para ver las instrucciones completas)
      U3 - Loops - Minus Minus: Cambia el código para contar regresivamente de 10 a 1. (Haz clic para ver las instrucciones completas)
      U3 - Loops - Plus Plus: Cambia el código para usar conteo++ en lugar de conteo = conteo + 1. (Haz clic para ver las instrucciones completas)
      U3 - Loops - Typing in Console: Usa la consola para comprobar el valor final del número. (Haz clic para ver las instrucciones completas)
      U3 - Loops - minus = operator: Actualiza el código para usar el operador -= para contar de 30 a 0 de a 3. (Haz clic para ver las instrucciones completas)
      U3 - Loops - plus and minus = operator: Actualiza el código para usar el operador +=. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Add 5: Añade 5 a todos los valores en un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Challenge 1: Escribe una función que encuentra y devuelve el valor mínimo en un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Challenge 2: Escribe una función que encuentra y devuelve el valor mínimo en un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Counting Times: Cuenta la cantidad de veces que aparece el 5 en un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Divid by 2: Divide cada valor por 2 en el arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Find Max: Diseña una función que muestra el número más pequeño en un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Find Min: Completa la función encontrarValMín para encontrar y mostrar el valor más pequeño en un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Functions that Return Value: Llama a encontrarMín dentro de la sentencia console.log para calcular el mínimo de dos valores. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - General Search Param: Añade un segundo parámetro a la función de búsqueda para el valor que se buscará.  (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Intro For Loop: Añade un bucle `para` con un console.log dentro y prueba las 3 piezas del bucle `para`. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Linear Search: Visita cada elemento del arreglo y muestra "verdadero" si el valor es 5, y "falso" si ocurre lo contrario. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Loop Array If: Usa una sentencia `si` para mostrar los valores de un arreglo que son mayores a 5. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Make it a Function - add list parameter: Crea una función que tome un parámetro de lista y escriba si la lista contiene 5. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Make it a Function: Mueve el código que busca la lista de 5 en una función llamada "búsqueda". (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Multiple Returns: Evalúa los valores de retorno de la función encontrarMáx. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Print Array: Usa un bucle `para` para escribir todos los valores de un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Printing Single True: Procesa el arreglo y muestra una solo "verdadero" si el arreglo contiene un 5 o un solo "falso" si no lo hace. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Return Index: Haz que la función de búsqueda devuelva el índice del valor de búsqueda en un arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Return Value: Usa la restricción en esta aplicación simple para evitar que la tortuga se mueva fuera de la pantalla. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Search and Remove: Busca 5 en el arreglo y elimínalo del arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - Search with Boolean Var: Haz una variable booleana para usar como un indicador para mantener un seguimiento de si hay 5 en el arreglo. (Haz clic para ver las instrucciones completas)
      U3 - Loops And Arrays - useFindMin: Llama a encontrarMín dentro de la sentencia console.log para calcular el mínimo de dos valores. (Haz clic para ver las instrucciones completas)
      U3 - Movie Bot - Multiple If Sequences: Añade otro conjunto de sentencias `si`, `sino si` y `si no` dentro de la pregunta si la sentencia para comprobar las palabras clave para las calificaciones de película (G, PG, PG-13 y R). (Haz clic para ver las instrucciones completas)
      U3 - Movie Bot - Nested Motivation: Añade un conjunto separado de sentencias `si` para comprobar un "?" en la entrada. (Haz clic para ver las instrucciones completas)
      U3 - Movie Bot - When Multiple If Statements: Añade una sentencia `si` y `si no` que compruebe "por favor" y "gracias". (Haz clic para ver las instrucciones completas)
      U3 - Movie Bot - toLowerCase: Utilice el comando de abajo para cambiar todos los datos de usuario en minúsculas después de que lo introduzcan. (Haga clic para ver las instrucciones completas)
      U3 - Practice Create Performance Task: Diseña e implementa tu práctica Crear tarea de rendimiento. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 1.2: Usa console.log para los registros devueltos por una llamada a leerRegistros. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 1.5: Usa console.log para los registros devueltos por una llamada a leerRegistros. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 1.6: Usa console.log para los registros devueltos por una llamada a leerRegistros. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 1: Usa console.log para los registros devueltos por una llamada a leerRegistros. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 2: Cambia el nombre de la tabla para que los registros sean leídos de la nueva tabla. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 3: Cambia el nombre de la tabla en un comando leerRegistros para leer desde una tabla que no existe. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 4.1: Imprime cada retorno de registro desde la llamada leerRegistros individualmente. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 4: Imprime cada retorno de registro desde la llamada leerRegistros individualmente. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 5 and half: Imprime el nombre de cada película en los devolución de registros de la llamada leerRegistros. (Haz clic para ver las instrucciones completas)
      U3 - Read Record - 5: Imprime el nombre de cada película en los devolución de registros de la llamada leerRegistros. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - constrainTurtle: Usa la restricción en esta aplicación simple para evitar que la tortuga se mueva fuera de la pantalla. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - debuggingConstrain: Corrige el error en la restricción para que devuelva el valor apropiado. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - debuggingMaxVal: Corrige el error en Valmáx para que informe el valor máximo apropiado. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - debuggingReturns: Corrige el error en Valmáx para que informe el valor máximo apropiado. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - increase1: Llama a la función de aumento dentro de avanzar, escribir y console.log. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - increase2: Cambia la función de aumento para devolver 3 veces el valor de entrada. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - min1: Evalúa los valores de retorno de la función encontrarMáx. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - useFindMin: Llama a encontrarMín dentro de la sentencia console.log para calcular el mínimo de dos valores. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - useMinVal: Llama a Valmín dentro de la sentencia console.log para calcular el mínimo de dos valores. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - wrapTurtle: Escribe envoltura en esta sencilla aplicación para permitir que la tortuga "envuelva" al otro lado de la pantalla cuando se apaga. (Haz clic para ver las instrucciones completas)
      U3 - Return Values - writeMaxVal: Escribe la función Valmáx y luego úsala dentro de la sentencia console.org para calcular el máximo de dos valores. (Haz clic para ver las instrucciones completas)
      U3 - Search Terms - 1: Crea un arreglo de todas las películas realizadas en 2008 e imprímelas. (Haz clic para ver las instrucciones completas)
      U3 - Search Terms - 2: Usa los términos de búsqueda de leerRegistros para imprimir todas las películas con el año 2008. (Haz clic para ver las instrucciones completas)
      U3 - Search Terms - 3: Imprime si hay o no películas que coincidan con los criterios de búsqueda. (Haz clic para ver las instrucciones completas)
      U3 - Search Terms - 4: Imprime si hay o no películas que coincidan con los criterios de búsqueda. (Haz clic para ver las instrucciones completas)
      U3 - Search Terms - 5: Imprime las ciudades que están en California o tienen una población de 2.000.000. (Haz clic para ver las instrucciones completas)
      U3 - Search Terms - 6: Imprime las ciudades que están en California o tienen una población de 2.000.000. (Haz clic para ver las instrucciones completas)
      U3 - Simple Drawing - Comments: Hacer esto
      U3 - Simple Drawing - Ellipse and No Fill: Hacer esto
      U3 - Simple Drawing - Fill: Hacer esto
      U3 - Simple Drawing - No Fill: Hacer esto
      U3 - Simple Drawing - Order of Blocks: Hacer esto
      U3 - Simple Drawing - Oval: Hacer esto
      U3 - Simple Drawing - Personal Drawing: HACER esto
      U3 - Simple Drawing - Rectangle Width and Height: Hacer esto
      U3 - Simple Drawing - Rectangle: Hacer esto
      U3 - Simple Drawing - Road Ellipse: Hacer esto
      U3 - Simple Drawing - Road Rects and Color: Hacer esto
      U3 - Simple Drawing - Simple Shape Drawing: Hacer esto
      U3 - Simple Drawing - Stroke and Stroke Weight: Hacer esto
      U3 - Simple Drawing - X and Y values: Hacer esto
      U3 - Simple Drawing - regular polygon: Hacer esto
      U3 - Simple Drawing - text: Hacer esto
      U3 - Simulation - 1: Usa un bucle `mientras` para "lanzar la moneda 10 veces" y escribe los valores en la pantalla. (Haz clic para ver las instrucciones completas)
      U3 - Simulation - 2.1: Cambia tu condición de bucle para que la simulación se ejecute hasta que haya 5 caras lanzadas. (Haz clic para ver las instrucciones completas)
      U3 - Simulation - 2.5: "¡Ejecuta tu simulación para obtener las 10.000 caras completas! ¡Cuánto tiempo tomó? (Haz clic para ver las instrucciones completas)"
      U3 - Simulation - 2: Lleva un registro de cuántas caras (1) tu programa genera e imprime los resultados en la pantalla. (Haz clic para ver las instrucciones completas)
      U3 - Simulation - 3: Añade funcionalidad que cuente cuántas caras seguidas se lanzan. (Haz clic para ver las instrucciones completas)
      U3 - Simulation - 4: Actualiza la condición de tu bucle mientras que la moneda gire hasta que haya tres caras seguidas. (Haz clic para ver las instrucciones completas)
      U3 - Simulation - 5: Cambia tu bucle `mientras` para ejecutar hasta que recibas una racha de 12 caras. ¿Cuántas lanzadas tomó? (Haz clic para ver las instrucciones completas)
      U3 - Simulation - 6: Sigue añadiendo a tu simulación. ¿Qué quieres explorar más adelante? (Haz clic para ver las instrucciones completas)
      U3 - Simulation - App: Cambia tu código para ejecutar la simulación completa con 10.000 monedas. ¿Cuál fue tu racha de caras más larga? (Haz clic para ver las instrucciones completas)
      U3 - Simulation - Template: Usa un bucle `mientras` para "lanzar 10 monedas" y escríbelas en la pantalla. (Haz clic para ver las instrucciones completas)
      U3 - Simulation - Template_2018: Usa un bucle `mientras` para "lanzar 10 monedas" y escríbelas en la pantalla. (Haz clic para ver las instrucciones completas)
      U3 - Simulation - Template_2019: Usa un bucle `mientras` para "lanzar 10 monedas" y escríbelas en la pantalla. (Haz clic para ver las instrucciones completas)
      U3 - Sprites - Intro Sprites: Hacer esto
      U3 - Sprites and Mod - Create  and Draw Sprite: Hacer esto
      U3 - Sprites and Mod - Mouse Width and Height: Hacer esto
      U3 - Sprites and Mod - Mouse X and Y: Hacer esto
      U3 - Sprites and Mod - Rand Around Mouse: Hacer esto
      U3 - Sprites and Mod - Rand Shape Color: Hacer esto
      U3 - Sprites and Mod - Shape Color: Hacer esto
      U3 - Sprites and Mod - Wrap Many Squares: Hacer esto
      U3 - Sprites and Mod - X and Y Prop: Hacer esto
      U3 - Sprites and Mod - two sprites: Hacer esto
      U3 - User Input - Save getText To Variable: Guarda la edad y el nombre del usuario en variables (Haz clic para ver las instrucciones completas)
      U3 - User Input - Saving After Input: Guarda la edad y el usuario en una variable mediante el uso de obtenerTexto. (Haz clic para ver las instrucciones completas)
      U3 - User Input and String -  Concat: Escribe un mensaje sobre la edad en un Área de texto. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Clicker Game: Crea tu juego "Chaser" mejorado aquí. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Debug Scope: "¿Por qué el valor de foo no están cambiando correctamente? Haz una conjetura. (Haz clic para ver las instrucciones completas)"
      U3 - Variables - Debugging with Turtle: Utiliza tus nuevas técnicas de depuración para que el código se ejecute correctamente. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Decrement: Reduce el valor de la variable. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Identify Variables: Identifica los valores que se imprimen en la terminal con sentencias console.log. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Increment: Usa la técnica de depuración console.log para ver lo que está ocurriendo en este ejemplo. Añade otra variable e incrementa su valor. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Incrementing Variables: "¡Crea un bucle de repetición para el código repetido y usa incremento para recrear el programa original con menos líneas de código! (Haz clic para ver las instrucciones completas)"
      U3 - Variables - Read Using Turtle: Crea un segundo conjunto de variables para la posición x e y. Mueve la tortuga a esa nueva ubicación. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Reassigning Variables with Console.log: Añade otra sentencia de reasignación al final del código para cambiar el valor de la variable en segunda vez. (Haz clic para ver las instrucciones completas)
      U3 - Variables - Set to Expression with Other Variables and Turtle: "(haz clic para ver las instrucciones completas)"
      U3 - Variables - Set to Expression with Other Variables: 'Escribe una expresión que calcule la puntuación total del jugador y la almacene en la variable puntajeTotal. El cálculo es: los puntos del jugador multiplicado por las vidas dividido por el tiempo total. (Haz clic para ver las instrucciones completas)'
      U3 - Variables - Set to Expression with Turtle: "(haz clic para ver todo)"
      U3 - Variables - Set to Expression: Prueba las nuevas expresiones. (Haz clic para ver instrucciones completas)
      U3 - images - bee free play: Hacer esto
      U3 Digital Assistant Design: Elige un tema para tu Asistente Digital y crea el diseño básico con una entrada de texto y área de texto. (Haz clic para mostrar las instrucciones completas)
      U3 Digital Assistant Set Text: Haz que tu asistente digital repita lo que el usuario escribe e incluye una respuesta agrupada. (Haz clic para ver las instrucciones completas)
      U3 Digital Assistant Target - Mehal: "¡Prueba una demostración del Asistente Digital!"
      U3 Digital Assistant Target: "¡Prueba una demostración del Asistente Digital!"
      U3 Digital Assistant Template: "¡Esta es una plantilla de proyecto!"
      U3 Digital: Elige un tema de especialización para tu asistente digital. Crea un asistente digital básico que tome la entrada del usuario y muestre una respuesta predeterminada.
      U3 Variables consolelog: Usa el bloque escribir para mostrar el valor del tamaño
      U3 Variables flower example: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      U3 Variables gray square: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      U3 Variables make a square: Cambia el valor del tamaño varias veces. ¿Cómo cambia tu dibujo?
      U3 Variables misconceptions try it: Prueba tus predicciones del nivel anterior.
      U3 Variables randomize your square: Cambie el valor de petalSize varias veces. ¿Cómo cambia tu dibujo?
      U3 Variables write: Usa el bloque escribir para mostrar el valor del tamaño
      U3 full clicker demo: Juego de clics - ¡Pruébalo!
      U3 mehal's clone: "¡Prueba una demostración del Asistente Digital!"
      U3- Variables - Assign Random For Turtle Draw: Intenta escribir el mismo código en modo texto.
      U3- Variables - Changing the Value: Actualiza el valor de 'girarCantidad' antes de cada "avanzar" para que la tortuga gire una cantidad diferente cada vez. (Haz clic para ver las instrucciones completas)
      U3- Variables - Create And Assign: En una línea, añade una variable llamada "vidas" y asígnale el valor 3. Escríbelo en la consola. (Haz clic para ver las instrucciones completas)
      U3- Variables - Text Mode: 1.  Cambia al modo de texto y las instrucciones de tipo; 2. Arrastra bloques hacia el modo de texto; 3. Experimenta con la finalización del código
      U3-Design Mode-ID and Event Handler: Añade un controlador de eventos para el botón mediante el enlace "Insertar y mostrar" en la pestaña Eventos de Modo Diseño. (Haz clic para ver las instrucciones completas).
      U3-Design Mode-ID: Utilizando los Eventos de Modo Diseño, cambia el ID del botón y actualiza el código para coincidir. (Haz clic para ver las instrucciones de detalle).
      U3-Design Mode-Image: Usa el Modo Diseño para recrear el juego "Chaser" de la última lección. (Haz clic para ver las instrucciones completas)
      U313 Two Buttons with Ids: Haz una predicción de lo que sucederá. Una vez que hayas hecho una predicción, ejecuta el código para ver lo que sucede. (Haz clic para ver las instrucciones completas)
      U313 drag Two Buttons: Ejecuta un programa con dos botones que tengan la mismo ID para ver el mensaje de advertencia en la consola. Cambia los ID para hacer que el programa se ejecute sin recibir un mensaje de advertencia.
      U313 eventsDetails: Ejecuta un programa con dos botones que tengan la mismo ID para ver el mensaje de advertencia en la consola. Cambia los ID para hacer que el programa se ejecute sin recibir un mensaje de advertencia.
      U3L03 - draw rect function: |-
        Escribe una función llamada drawRectangle().
        (Haz clic para ver las instrucciones completas)
      U3L03 - draw rect function_2018: |-
        Escribe una función llamada drawRectangle().
        (Haz clic para ver las instrucciones completas)
      U3L03 - draw rect function_2019: |-
        Escribe una función llamada drawRectangle().
        (Haz clic para ver las instrucciones completas)
      U3L03 - draw step: Escribe la función drawStep. (Haz clic para ver las instrucciones completas)
      U3L03 - draw step_2018: Escribe la función drawStep. (Haz clic para ver las instrucciones completas)
      U3L03 - draw step_2019: Escribe la función drawStep. (Haz clic para ver las instrucciones completas)
      U3L03 Creating Procedures 1: 'Escribe la función turnAround() y úsala para hacer que la tortuga se mueva como se describe. Mira: U3L03-turnAndDown.gif'
      U3L03 Define and use turnAround: Define una función llamada darVuelta. Llama a la función y luego mueva la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      U3L03 Define and use turnAround_2018: Define una función llamada darVuelta. Llama a la función y luego mueva la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      U3L03 Define and use turnAround_2019: Define una función llamada darVuelta. Llama a la función y luego mueva la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      U3L03 Draw a T using turnAround: Dibuja un signo de suma usando la versión proporcionada de turnAround(). (Haz clic para ver las instrucciones completas)
      U3L03 Draw a T using turnAround_2018: Dibuja un signo de suma usando la versión proporcionada de turnAround(). (Haz clic para ver las instrucciones completas)
      U3L03 Draw a T using turnAround_2019: Dibuja un signo de suma usando la versión proporcionada de turnAround(). (Haz clic para ver las instrucciones completas)
      U3L03 Three Steps: Define la función llamada drawSide(), que dibuja tres pasos y mueve la tortuga para prepararse para el próximo lado. (Haz clic para ver las instrucciones completas)
      U3L03 Three Steps_2018: Define la función llamada drawSide(), que dibuja tres pasos y mueve la tortuga para prepararse para el próximo lado. (Haz clic para ver las instrucciones completas)
      U3L03 Three Steps_2019: Define la función llamada drawSide(), que dibuja tres pasos y mueve la tortuga para prepararse para el próximo lado. (Haz clic para ver las instrucciones completas)
      U3L03 choose your own drawing: '¡Ahora elige el tuyo propio! Elige uno de los tres dibujos que se muestran aquí e intenta crearlos por ti mismo. Para esto, toma decisiones inteligentes sobre cómo desglosar el problema en funciones reutilizables. Revisarás tu trabajo con un compañero mediante "procedimientos de revisión de pares."  Comprueba los requisitos.  GIF: U3L3-Procedimientos-ChooseOne.png'
      U3L03 define turnRight and draw a rectangle: Define una función llamada right(), que gira la tortuga a la derecha. Luego usa esta función para dibujar un rectángulo, como se muestra a continuación. (Haz clic para ver las instrucciones completas)
      U3L03 define turnRight and draw a rectangle_2018: Define una función llamada right(), que gira la tortuga a la derecha. Luego usa esta función para dibujar un rectángulo, como se muestra a continuación. (Haz clic para ver las instrucciones completas)
      U3L03 define turnRight and draw a rectangle_2019: Define una función llamada right(), que gira la tortuga a la derecha. Luego usa esta función para dibujar un rectángulo, como se muestra a continuación. (Haz clic para ver las instrucciones completas)
      U3L03 draw diamond: Crea una función llamada drawDiamond() que hace uso del trabajo anterior para dibujar el diamante completo. (Haz clic para ver las instrucciones completas)
      U3L03 draw diamond_2018: Crea una función llamada drawDiamond() que hace uso del trabajo anterior para dibujar el diamante completo. (Haz clic para ver las instrucciones completas)
      U3L03 draw diamond_2019: Crea una función llamada drawDiamond() que hace uso del trabajo anterior para dibujar el diamante completo. (Haz clic para ver las instrucciones completas)
      U3L04 - 3 by 3 with functions: Haz el cuadrado de 3x3 lo más eficientemente que puedas. (Haz clic para ver las instrucciones completas)
      U3L04 - 3 by 3 with functions_2018: Haz el cuadrado de 3x3 lo más eficientemente que puedas. (Haz clic para ver las instrucciones completas)
      U3L04 - 3 by 3 with functions_2019: Haz el cuadrado de 3x3 lo más eficientemente que puedas. (Haz clic para ver las instrucciones completas)
      U3L04 - snowflake: Crea el diseño desglosándolo en capas de funciones. (Haz clic para ver las instrucciones completas)
      U3L04 - snowflake_2018: Crea el diseño desglosándolo en capas de funciones. (Haz clic para ver las instrucciones completas)
      U3L04 - snowflake_2019: Crea el diseño desglosándolo en capas de funciones. (Haz clic para ver las instrucciones completas)
      U3L04 choose your own drawing: ¡Ahora elige el tuyo propio! Elige uno de los tres dibujos que se muestran aquí e intenta crearlos por ti mismo. Para esto, toma decisiones inteligentes sobre cómo desglosar el problema en funciones reutilizables. Revisarás tu trabajo con un compañero mediante la "rúbrica de procedimientos de revisión de pares". Comprueba los requisitos.
      U3L04 diamond solution: Estudia esta solución al problema de dibujarDiamante. Ten en cuenta que todo el programa comienza al llamar a drawDiamond() en la parte superior. El programa sigue una cadena de llamadas de función. Puedes rastrear lo que está sucediendo en el código para ver las funciones reutilizadas. También es fácil de leer, porque los nombres de funciones describen el comportamiento esperado.
      U3L05_3x3GridEfficiencyChallenge: Vamos a volver el problema de la cuadrícula 3x3 que hiciste hace algunas lecciones.  Esta vez, el reto es programar la solución "lo más eficientemente posible."  Ahora que sabes cómo escribir funciones, debería ser más fácil desglosar el problema, y su código debería ser más fácil de leer y depurar.  Mira la rúbrica para obtener más detalles sobre los requisitos y expectativas.
      U3L05_draw3x3GridEfficiently: 'Dibuja una cuadrícula de 3x3 arriba y a la derecha de la tortuga. Intenta hacer con la menor cantidad de comandos posible. NOTA: este es un problema muy exigente. Debes jugar un poco con él y luego ajustarlo. También podrías considerar el uso de lápiz y papel para bosquejar tus ideas.'
      U3L06 - moveForwardwithParams: Usa un comando único para mover la tortuga el borde de la pantalla. (Haz clic para ver las instrucciones completas)
      U3L06 - moveForwardwithParams_2018: Usa un comando único para mover la tortuga el borde de la pantalla. (Haz clic para ver las instrucciones completas)
      U3L06 - moveForwardwithParams_2019: Usa un comando único para mover la tortuga el borde de la pantalla. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 1 triangle: Usa las versiones parametrizadas de los comandos de la tortuga para crear un triángulo con lados de 100 pixeles de largo. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 1 triangle_2018: Usa las versiones parametrizadas de los comandos de la tortuga para crear un triángulo con lados de 100 pixeles de largo. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 1 triangle_2019: Usa las versiones parametrizadas de los comandos de la tortuga para crear un triángulo con lados de 100 pixeles de largo. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 2 purple square: Lee la documentación para bolígrafocolor() y bolígrafoancho() antes de usarlo para dibujar el cuadrado azul.
      U3L06 Challenge 2 purple square_2018: Lee la documentación para bolígrafocolor() y bolígrafoancho() antes de usarlo para dibujar el cuadrado azul.
      U3L06 Challenge 2 purple square_2019: Lee la documentación para bolígrafocolor() y bolígrafoancho() antes de usarlo para dibujar el cuadrado azul.
      U3L06 Challenge 3 fill pink: Completa el fondo de la pantalla con tu color favorito. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 3 fill pink_2018: Completa el fondo de la pantalla con tu color favorito. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 3 fill pink_2019: Completa el fondo de la pantalla con tu color favorito. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 4 bullseye: Crea el juego de dardos con colores hexadecimales y dot(). (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 4 bullseye_2018: Crea el juego de dardos con colores hexadecimales y dot(). (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 4 bullseye_2019: Crea el juego de dardos con colores hexadecimales y dot(). (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 5 overlapping circles: 'Esta imagen se crea usando solamente dot() y penColor(), ¿pero cómo haremos para que esos círculos sean transparentes? Si no has obtenida la sugerencia aún: ¡mira la documentación!'
      U3L06 Challenge 5 overlapping circles_2018: 'Esta imagen se crea usando solamente dot() y penColor(), ¿pero cómo haremos para que esos círculos sean transparentes? Si no has obtenida la sugerencia aún: ¡mira la documentación!'
      U3L06 Challenge 5 overlapping circles_2019: 'Esta imagen se crea usando solamente dot() y penColor(), ¿pero cómo haremos para que esos círculos sean transparentes? Si no has obtenida la sugerencia aún: ¡mira la documentación!'
      U3L06 Challenge 6 squiggles: 'Lee la documentación para los comandos "arcLeft" y "arcRight" y luego dibuja los garabatos como se muestra. '
      U3L06 Challenge 6 squiggles_2018: 'Lee la documentación para los comandos "arcLeft" y "arcRight" y luego dibuja los garabatos como se muestra. '
      U3L06 Challenge 6 squiggles_2019: 'Lee la documentación para los comandos "arcLeft" y "arcRight" y luego dibuja los garabatos como se muestra. '
      U3L06 Challenge 7 smiley face: Usa turnTo() y moveTo() para ayudar a dibujar una cara sonriente. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 7 smiley face_2018: Usa turnTo() y moveTo() para ayudar a dibujar una cara sonriente. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 7 smiley face_2019: Usa turnTo() y moveTo() para ayudar a dibujar una cara sonriente. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 8 make your own: Crea un dibujo propio. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 8 make your own_2018: Crea un dibujo propio. (Haz clic para ver las instrucciones completas)
      U3L06 Challenge 8 make your own_2019: Crea un dibujo propio. (Haz clic para ver las instrucciones completas)
      U3L07 - Free Play Loops and Random: "¡Juego libre! Usa lo que has prendido de bucles y aleatorio para crear tu propia escena. Diviértete."
      U3L07 - Free Play Loops and Random_2018: "¡Juego libre! Usa lo que has prendido de bucles y aleatorio para crear tu propia escena. Diviértete."
      U3L07 - Free Play Loops and Random_2019: "¡Juego libre! Usa lo que has prendido de bucles y aleatorio para crear tu propia escena. Diviértete."
      U3L07 - Starry Night Starter Code: 'Vas a usar bucles y números aleatorios para generar la imagen de un cielo estrellado similar a uno que se muestra aquí. Te hemos dado un poco de código inicial para generar el suelo y el cielo (solo dos puntos gigantes); agregarás código a este proyecto para hacer las estrellas, el pasto y la luna. Todos los efectos son aplicaciones inteligentes de puntos, líneas y colores de la tortuga. Para comenzar, sigue la serie de pasos sugeridos en la hoja de trabajo adjunta. '
      U3L07 - allSeaGrass: Agrega 50 piezas de hierba marina a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - allSeaGrass_2018: Agrega 50 piezas de hierba marina a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - allSeaGrass_2019: Agrega 50 piezas de hierba marina a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - bubbles: Agrega 200 burbujas a la imagen escribiendo drawAllBubbles con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - bubbles_2018: Agrega 200 burbujas a la imagen escribiendo drawAllBubbles con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - bubbles_2019: Agrega 200 burbujas a la imagen escribiendo drawAllBubbles con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - callingFunctionsInLoops: Llama a la función dentro del bucle para completar la figura. (Haz clic para ver las instrucciones completas)
      U3L07 - createTriangleParam: Define una función que acepte un parámetro para hacer coincidir las llamadas a funciones y completar la imagen. (Haz clic para ver las instrucciones completas)
      U3L07 - createTriangleParam_2018: Define una función que acepte un parámetro para hacer coincidir las llamadas a funciones y completar la imagen. (Haz clic para ver las instrucciones completas)
      U3L07 - createTriangleParam_2019: Define una función que acepte un parámetro para hacer coincidir las llamadas a funciones y completar la imagen. (Haz clic para ver las instrucciones completas)
      U3L07 - fish: Agrega 15 peces a la imagen escribiendo drawAllFish con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - fish_2018: Agrega 15 peces a la imagen escribiendo drawAllFish con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - fish_2019: Agrega 15 peces a la imagen escribiendo drawAllFish con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - introSquare: Usa un bucle para dibujar un cuadrado. Luego agrega otro bucle para dibujar muchos cuadrados, cada uno rotado en alguna medida. (Haz clic para ver las instrucciones completas)
      U3L07 - introSquare_2018: Usa un bucle para dibujar un cuadrado. Luego agrega otro bucle para dibujar muchos cuadrados, cada uno rotado en alguna medida. (Haz clic para ver las instrucciones completas)
      U3L07 - introSquare_2019: Usa un bucle para dibujar un cuadrado. Luego agrega otro bucle para dibujar muchos cuadrados, cada uno rotado en alguna medida. (Haz clic para ver las instrucciones completas)
      U3L07 - loopsWithRandom: Aumenta la cantidad de iteraciones para completar la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      U3L07 - loopsWithRandom_2018: Aumenta la cantidad de iteraciones para completar la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      U3L07 - loopsWithRandom_2019: Aumenta la cantidad de iteraciones para completar la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      U3L07 - randomDots1: Aumenta la cantidad de iteraciones para completar totalmente la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      U3L07 - randomDots1_2018: Aumenta la cantidad de iteraciones para completar totalmente la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      U3L07 - randomDots1_2019: Aumenta la cantidad de iteraciones para completar totalmente la pantalla con blanco. (Haz clic para ver las instrucciones completas)
      U3L07 - randomSquare: Usa un bucle para dibujar la figura. (Haz clic para ver las instrucciones completas)
      U3L07 - randomSquare_2018: Usa un bucle para dibujar la figura. (Haz clic para ver las instrucciones completas)
      U3L07 - randomSquare_2019: Usa un bucle para dibujar la figura. (Haz clic para ver las instrucciones completas)
      U3L07 - seaGrass: Agrega un parámetro para dibujar drawSeagrass que controla la cantidad de olas en la hierba. (Haz clic para ver las instrucciones completas)
      U3L07 - seaGrass_2018: Agrega un parámetro para dibujar drawSeagrass que controla la cantidad de olas en la hierba. (Haz clic para ver las instrucciones completas)
      U3L07 - seaGrass_2019: Agrega un parámetro para dibujar drawSeagrass que controla la cantidad de olas en la hierba. (Haz clic para ver las instrucciones completas)
      U3L07 - seaStar: Agrega 5 estrellas marinas a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - seaStar_2018: Agrega 5 estrellas marinas a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - seaStar_2019: Agrega 5 estrellas marinas a la imagen escribiendo drawAllSeagrass con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - sunBeams: Agrega 100 rayos de luz a la imagen escribiendo drawAllSunbeams con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - sunBeams_2018: Agrega 100 rayos de luz a la imagen escribiendo drawAllSunbeams con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - sunBeams_2019: Agrega 100 rayos de luz a la imagen escribiendo drawAllSunbeams con un bucle. (Haz clic para ver las instrucciones completas)
      U3L07 - topDownDesign: Ponte cómodo con la estructura de este programa, luego avanza al siguiente ejercicio. (Haz clic para ver las instrucciones completas)
      U3L07 - topDownDesign_2018: Ponte cómodo con la estructura de este programa, luego avanza al siguiente ejercicio. (Haz clic para ver las instrucciones completas)
      U3L07 - topDownDesign_2019: Ponte cómodo con la estructura de este programa, luego avanza al siguiente ejercicio. (Haz clic para ver las instrucciones completas)
      U3L08 - createTwoParamTriangle: Define una función llamada drawTriangle() que acepta dos parámetros para establecer el tamaño y el ancho del triángulo. (Haz clic para ver las instrucciones completas)
      U3L08 - createTwoParamTriangle_2018: Define una función llamada drawTriangle() que acepta dos parámetros para establecer el tamaño y el ancho del triángulo. (Haz clic para ver las instrucciones completas)
      U3L08 - createTwoParamTriangle_2019: Define una función llamada drawTriangle() que acepta dos parámetros para establecer el tamaño y el ancho del triángulo. (Haz clic para ver las instrucciones completas)
      U3L08 - digitalScene: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      U3L08 - digitalScene_2018: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      U3L08 - digitalScene_2019: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      U3L08 - drawSquareWithParam - for video: Usa drawSquare() para recrear la imagen de ambos cuadrados, y esta vez usa parámetros. (Haz clic para ver las instrucciones completas)
      U3L08 - drawSquareWithParam: Usa drawSquare() para recrear la imagen de ambos cuadrados, y esta vez usa parámetros. (Haz clic para ver las instrucciones completas)
      U3L08 - drawSquareWithParam_2018: Usa drawSquare() para recrear la imagen de ambos cuadrados, y esta vez usa parámetros. (Haz clic para ver las instrucciones completas)
      U3L08 - drawSquareWithParam_2019: Usa drawSquare() para recrear la imagen de ambos cuadrados, y esta vez usa parámetros. (Haz clic para ver las instrucciones completas)
      U3L08 - fish: Agrega un parámetro para dibujar drawFish que controla el tamaño de los peces dibujados. (Haz clic para ver las instrucciones completas)
      U3L08 - fish_2018: Agrega un parámetro para dibujar drawFish que controla el tamaño de los peces dibujados. (Haz clic para ver las instrucciones completas)
      U3L08 - fish_2019: Agrega un parámetro para dibujar drawFish que controla el tamaño de los peces dibujados. (Haz clic para ver las instrucciones completas)
      U3L08 - freePlay: Crea más llamadas para tus nuevas funciones con parámetros para seguir agregando a tu imagen. (Haz clic para ver las instrucciones completas)
      U3L08 - freePlay_2018: Crea más llamadas para tus nuevas funciones con parámetros para seguir agregando a tu imagen. (Haz clic para ver las instrucciones completas)
      U3L08 - freePlay_2019: Crea más llamadas para tus nuevas funciones con parámetros para seguir agregando a tu imagen. (Haz clic para ver las instrucciones completas)
      U3L08 - individualCode: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      U3L08 - individualCode_2018: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      U3L08 - individualCode_2019: Crea las funciones que se te asignaron como parte de la escena digital. (Haz clic para ver las instrucciones completas)
      U3L08 - introUnderTheSea with comments: Agrega un pez, una estrella de mar y una porción de hierba marina adicionales a tu imagen. Mira las funciones que los crean, pero no cambies estas funciones. (Haz clic para ver las instrucciones completas)
      U3L08 - introUnderTheSea: Agrega un pez, una estrella de mar y una porción de hierba marina adicionales a tu imagen. Mira las funciones que los crean, pero no cambies estas funciones. (Haz clic para ver las instrucciones completas)
      U3L08 - introUnderTheSea_2018: Agrega un pez, una estrella de mar y una porción de hierba marina adicionales a tu imagen. Mira las funciones que los crean, pero no cambies estas funciones. (Haz clic para ver las instrucciones completas)
      U3L08 - introUnderTheSea_2019: Agrega un pez, una estrella de mar y una porción de hierba marina adicionales a tu imagen. Mira las funciones que los crean, pero no cambies estas funciones. (Haz clic para ver las instrucciones completas)
      U3L08 - multiParamFish: Agrega tres parámetros a tu función drawFish para aceptar los valores rojos, verdes y azules para hacer que tus peces tengan colores diferentes. (Haz clic para ver las instrucciones completas)
      U3L08 - multiParamFish_2018: Agrega tres parámetros a tu función drawFish para aceptar los valores rojos, verdes y azules para hacer que tus peces tengan colores diferentes. (Haz clic para ver las instrucciones completas)
      U3L08 - multiParamFish_2019: Agrega tres parámetros a tu función drawFish para aceptar los valores rojos, verdes y azules para hacer que tus peces tengan colores diferentes. (Haz clic para ver las instrucciones completas)
      U3L08 - paramsToStarfish: Agrega un parámetro para drawStarfish que controla el tamaño de la estrella de mar dibujada. (Haz clic para ver las instrucciones completas)
      U3L08 - paramsToStarfish_2018: Agrega un parámetro para drawStarfish que controla el tamaño de la estrella de mar dibujada. (Haz clic para ver las instrucciones completas)
      U3L08 - paramsToStarfish_2019: Agrega un parámetro para drawStarfish que controla el tamaño de la estrella de mar dibujada. (Haz clic para ver las instrucciones completas)
      U3L08 - randomInput: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      U3L08 - randomInput_2018: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      U3L08 - randomInput_2019: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      U3L08 - seaGrass: Agrega un parámetro para drawStarfish que controla el tamaño de la porción de hierba marina dibujada. (Haz clic para ver las instrucciones completas)
      U3L08 - seaGrass_2018: Agrega un parámetro para drawStarfish que controla el tamaño de la porción de hierba marina dibujada. (Haz clic para ver las instrucciones completas)
      U3L08 - seaGrass_2019: Agrega un parámetro para drawStarfish que controla el tamaño de la porción de hierba marina dibujada. (Haz clic para ver las instrucciones completas)
      U3L08 - squareTwoParams: Llama drawSquare() para completar el dibujo de dos cuadrados. (Haz clic para ver las instrucciones completas)
      U3L08 - squareTwoParams_2018: Llama drawSquare() para completar el dibujo de dos cuadrados. (Haz clic para ver las instrucciones completas)
      U3L08 - squareTwoParams_2019: Llama drawSquare() para completar el dibujo de dos cuadrados. (Haz clic para ver las instrucciones completas)
      U3L08 - starFish: Agrega un pez, una estrella de mar y una porción de hierba marina adicionales a tu imagen. Mira las funciones que los crean, pero no cambies estas funciones. (Haz clic para ver las instrucciones completas)
      U3L08 - triangleTwoParams: Llama drawSquare() para completar el dibujo de dos cuadrados. (Haz clic para ver las instrucciones completas)
      U3L08 how to add comments: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      U3L08 how to add comments_2018: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      U3L08 how to add comments_2019: Usa los bloques randomNumber() para probar las funciones que has diseñado con entrada aleatoria. (Haz clic para ver las instrucciones completas)
      U3L1 - Simulation - Template: Usa un bucle `mientras` para "lanzar 10 monedas" y escríbelas en la pantalla. (Haz clic para ver las instrucciones completas)
      U3L12 Chaser Template: "¡Esta es una plantilla de proyecto!"
      U3L13 - Debug Id Problem: Elige un ID descriptivo y significativo para mejorar el botón. (Haz clic para ver las instrucciones completas)
      U3L13 - Debugging 1: Depura el programa mediante la verificación de que sus identificadores están siendo referenciados correctamente. (Haz clic para ver instrucciones completas)
      U3L13 - Debugging 2: Ordena correctamente los comandos de los botones y los gestores de eventos para depurar el programa. (Haz clic para ver las instrucciones completas)
      U3L13 - Debugging 3: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      U3L13 - Project: Crea tu aplicación multipantalla. (Haz clic para ver las instrucciones completas)
      U3L13 - Turtle Driver Project: Crea un "controlador de tortuga" que incluye botones para hacer avanzar a la tortuga y girarla a la izquierda y a la derecha. (Haz clic para ver las instrucciones completas)
      U3L13 - Turtle move with button: Agrega un botón que mueva la tortuga al hacer clic. (Clic para ver las Instrucciones completas)
      U3L13 eventsDetails: Añade un controlar de eventos al botón para mover la tortuga hacia adelante. (Haz clic para ver las instrucciones completas)
      U3L14 - Assigning Random Value: Escribe un programa que simula el lanzamiento de dos dados e informa sus valores individuales, además de la suma. (Haz clic para ver las instrucciones completas)
      U3L14 - Mini Calculator embed: Se te pedirán dos números; uno justo después del otro. Mira lo que sucede. Introduce diferentes números hasta que entiendas la idea.
      U3L14 - User Input Division calculator: Escribe un programa que actúe como una calculadora simple. (Haz clic para ver las instrucciones completas)
      U3L14 - Variable ReAssignment pt2: Rastrea el código y haz una predicción de lo que piensas que se escribirá en la consola. Luego añade una sentencia console.log al final del programa para ver el último valor de algúnNúm para ver si tu predicción completa es correcta. (Haz clic para ver las instrucciones completas)
      U3L14 - concatenate simple: Modifica la sentencia de escritura en la línea 3 para combinar texto y variables para que la aplicación muestre una sola línea de texto que muestre las vidas y la puntuación del jugador. (Haz clic para ver las instrucciones completas)
      U3L14 - moving memory challenge1: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      U3L14 - moving memory challenge2: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      U3L14 - moving memory challenge3: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      U3L14 - moving memory challenge4: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      U3L14 - moving memory challenge5: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      U3L14 - moving memory challenge6: Utilizando sólo las variables proporcionadas, asignaciones (=) y aritmética (+ - \* /), vuelve a asignar los valores para que la sentencia console.log muestre el valor correcto. (Haz clic para ver las instrucciones completas)
      U3L15 - Add reset button to UpDown app: Añade código para que hacer clic en el botón de "comenzar de nuevo" restablezca el juego y te envíe de vuelta a la pantalla principal. (Haz clic para ver las instrucciones completas)
      U3L15 - DEMO up down count practice app: Prueba la aplicación de demostración. (Haz clic para ver las instrucciones completas)
      U3L15 - Debug forget to update var on reset in UpDown app: Ejecuta la aplicación y haz clic en el botón arriba o abajo hasta llegar a la pantalla de final de juego. Haz clic en 'Comenzar de nuevo' y prueba la aplicación de nuevo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      U3L15 - Debug if never triggers in UpDown app: Ejecuta la aplicación y usa las flechas arriba y abajo para intentar alcanzar la pantalla de final de juego. ¡No puedes! Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      U3L15 - Debugging Simple If-statements =v==: Ejecuta la aplicación y haz clic en el botón arriba. Luego reinicia y ejecuta de nuevo, y haz clic en el botón abajo. Encuentra y arregla el problema en el código. (Haz clic para ver las instrucciones completas)
      U3L15 - Simple If-statements in UpDown App: Añade una sentencia `si` para que la aplicación cambie las pantallas cuando el conteo alcance -5. (Haz clic para ver las instrucciones completas)
      U3L15 - add code to make count down work: Escribe código para hacer que la flecha abajo funcione como se esperaba. (Haz clic para ver las instrucciones completas)
      U3L15 - clicker update score: Añade código para actualizar la puntuación cuando se haga clic en la manzana. (Haz clic para ver las instrucciones completas)
      U3L15 - count upDown bug forget to set text: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      U3L15 - count upDown bug logic error wrong update: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      U3L15 - count upDown bug var not created globally: Encuentra el error en el programa y corrígelo. (Haz clic para ver las instrucciones completas)
      U3L15 - global var example count up: Mira el código de esta aplicación y observa cómo funciona para actualizar la variable de conteo cuando se hace clic en la flecha arriba. (Haz clic para ver las instrucciones completas).
      U3L15 - mini clicker update score: Añade código para actualizar la puntuación cuando se haga clic en la manzana. (Haz clic para ver las instrucciones completas)
      U3L15 - practice with setText: Utiliza configurarTexto para completar el controlador de eventos de clic para la flecha de abajo. (Haz clic para ver las instrucciones completas)
      U3L15 - variable scoping problem debugging: Ve si puedes averiguar por qué el código ya no está funcionando. (Haz clic para ver las instrucciones completas)
      U3L15 click add lives: Añade vidas al juego de clics que decrece en 1 cuando se haga clic en la imagen de fondo. (Haz clic para ver las instrucciones completas)
      U3L15 full clicker app: Completa tu juego de clics. (Haz clic para ver las instrucciones completas)
      U3L16 - challenge say hi app: Usa el evento 'cambio' para escribir un saludo al usuario cuando presionen 'ingresar' en la entrada de texto. (Haz clic para ver las instrucciones completas)
      U3L16 - chaserApp: Crea tu propio juego "Chaser". (Haz clic para ver las instrucciones completas)
      U3L16 - chooseImages: Reemplaza la imagen en tu aplicación con uno de tus imágenes propias. (Haz clic para ver las instrucciones completas)
      U3L16 - doubleQuotes: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      U3L16 - intro getText: Añade un gestor de eventos al botón Enviar para que cuando el botón sea pulsado aparezca el nombre introducido en el cuadro de texto a la consola. Utiliza obtenerTexto para obtener el valor fuera del cuadro de texto. (Haz clic para ver las instrucciones completas)
      U3L16 - introSetPosition: Mueve los botones al fondo de la pantalla. (Haz clic para ver las instrucciones completas)
      U3L16 - introStrings: Guarda una cadena dentro de una variable y regístrala en la consola. (Haz clic para ver las instrucciones completas)
      U3L16 - nameAgeTemplate: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      U3L16 - nameAgeTemplate_2018: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      U3L16 - nameAgeTemplate_2019: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      U3L16 - newEventTypes: Experimenta con diferentes tipos de eventos y selecciona el que piensas que es el mejor. (Haz clic para ver las instrucciones completas)
      U3L16 - outputWithTextArea: Escribe un mensaje al 'textoÁrea' (Haz clic para ver las instrucciones completas)
      U3L16 - projectTemplate: Crea tu propia aplicación "Chaser". (Haz clic para ver las instrucciones completas)
      U3L16 - quick double click: Mini proyecto. El juego del doble clic rápido. En este juego sencillo, un objeto (una imagen) se mueve, o aparece aleatoriamente en la pantalla, a medida que el usuario hace clic. El objetivo de nuestro juego será hacer doble clic en el objeto antes de que se mueva. Parte del desafío (y de la diversión) es crear esta aplicación desde cero. Puedes ver tu trabajo anterior en busca de ejemplos, pero también es divertido crear algo desde cero. ¡Pruébalo! Si quieres obtener más detalles, consulta la guía de actividades para esta lección.
      U3L16 - setPosition to move button: Presentación del comando establecerPosición. Reemplaza el moverA en el controlador de eventos de clic en el botón para usar establecerPosición para mover el botón mismo a una ubicación aleatoria cuando se haga clic.
      U3L16 - singleSetPosition: Mueve el botón a la mitad de la pantalla. (Haz clic para ver las instrucciones completas)
      U3L16 - text labels: Usa el comando textoEtiqueta para reemplazar el botón de tu programa con una etiqueta de texto. (Haz clic para ver las instrucciones completas)
      U3L16 - textInput getText write: Añade un cuadro de entrada de texto para el nombre y la edad. (Haz clic para ver las instrucciones completas)
      U3L16 - toUpper: Haz que el nombre del usuario aparezca en mayúscula. (Haz clic para ver las instrucciones completas)
      U3L16 - use images: Usa el comando de imagen para reemplazar la etiqueta del texto de tu programa con una imagen. (Haz clic para ver las instrucciones completas)
      U3L16 Mad Lib Clear Input: 'Borrar el texto anterior del usuario cuando se haga clic en el botón Reproducir de nuevo. (Haz clic para ver las instrucciones completas) '
      U3L16 Mad Lib Demo: Demo de Mad Libs - ¡Pruébalo!
      U3L16 Mad Lib Student Setup: 'Volver a Mad Libs: Para empezar, configura las dos pantallas para tu aplicación Mad Libs. (Haz clic para mostrar las instrucciones completas)'
      U3L16 Mad Lib getText: 'Antes de establecer el área de texto con tu esquema de Mad Libs, obtén el texto del usuario e incorpora sus respuestas. (Haz clic para ver las instrucciones completas) '
      U3L16 Mad Lib setText: 'Cuando se haga clic en el botón "Siguiente", configura el área de texto para tener el diseño principal de tu "Lista de procedimientos de Mad Libs" (sin la entrada del usuario). (Haz clic para ver las instrucciones completas) '
      U3L16 Mad Lib toUpper: 'Aplica las funciones de cadena de paraMayúscula y paraMinúscula al texto del usuario. (Haz clic para ver las instrucciones completas) '
      U3L18 comparison operators: Usa console.log para imprimir las diferentes expresiones booleanas abajo para ver qué información devuelven. (Haz clic para ver las instrucciones completas)
      U3L19 - DEMO up down count practice app: Prueba la aplicación de demostración. (Haz clic para ver las instrucciones completas)
      U3L19 - Simple If-statements in UpDown App: Añade una sentencia `si` para que la aplicación cambie las pantallas cuando el conteo alcance -5. (Haz clic para ver las instrucciones completas)
      U3L19 - fix the var name syntax error v2: Corrige el error y logra que imprima el valor de ambas variables. (Haz clic para ver las instrucciones completas)
      U3L19 - fix the var name syntax error: Corrige el error y logra que imprima el valor de ambas variables. (Haz clic para ver las instrucciones completas)
      U3L19 - global var example count up: Mira el código de esta aplicación y observa cómo funciona para actualizar la variable de conteo cuando se hace clic en la flecha arriba. (Haz clic para ver las instrucciones completas).
      U3L19 - test reassignment of two vars: Haz una predicción del valor de a y b. Agrega sentencias console.log para averiguar el valor real de a y b. (Haz clic para obtener las instrucciones completas)
      U3L19 - three basic ops of variables: Añade otra variable llamada "vidas" y configura el valor a 3. Escribe el valor de la variable a la consola. (Haz clic para ver las instrucciones completas)
      U3L19 - updating variables pt1: 'Esta aplicación sólo es LEVEMENTE diferente de la anterior, pero mucho más dinámica. Fíjate si puedes averiguar cómo y por qué el recuento está creciendo. Una vez que lo hayas configurado, entonces deberías poder HACER ESTO: añadir un botón a la aplicación que, al hacerle clic, haga que el recuento baje y actualice la etiqueta. Cuando hayas terminado, la aplicación debe funcionar como se muestra en la demostración.  GIF: U3L19 - upDownCountApp.gif'
      U3L19 - variable reassignment challenge pt2: Haz una predicción sobre los valores finales de a, b y c. Luego usa console.log para ver si has comprendido. (Haz clic para ver las instrucciones completas)
      U3L19 - variable reassignment part 1: Haz una predicción del valor de a y b. Agrega sentencias console.log para averiguar el valor real de a y b. (Haz clic para obtener las instrucciones completas)
      U3L19 - variable scope problem 2: "¿Qué está sucediendo con foo? Juega con el nivel para intentar descubrirlo. (Haz clic para ver las instrucciones completas)"
      U3L19 - variable scoping problem debugging: Fíjate si puedes descubrir por qué el código ya no funciona. (Haz clic para ver las instrucciones completas)
      U3L19 - write var and string with same name v2: Arregla el código para que los valores de ambas variables se escriban en la consola. (Haz clic para ver las instrucciones completas)
      U3L19 - write var and string with same name: Arregla el código para que el valor de ambas variables se imprima en la consola. (Haz clic para ver las instrucciones completas)
      U3L2 Using Simple Commands (no tooltips): Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      U3L2 Using Simple Commands_2018: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      U3L2 Using Simple Commands_2019: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      U3L23 Chatbot Conditionals 1: Añade sentencias `si`, `sino si` y `si no` para detectar los géneros de película Comedia, Romance, Acción y Horror. (Haz clic para ver las instrucciones completas)
      U3L23 Chatbot Intro 1a: Almacena la entrada del usuario dentro de una variable y regístralo en la consola.
      U3L23 Chatbot Intro 2: 'Usa la concatenación de cadena para almacenar la entrada del usuario y la respuesta del asistente en la variable de conversación usando el formato "Usuario: <input><bot name>: <default response>". Registra la conversación en la consola.'
      U3L23 Chatbot Intro 2a: 'Muestra la conversación en el elemento "texto\_área". Opcional: borrar la entrada del usuario después de cada evento "cambiar".'
      U3L23 Chatbot Intro 3: Añade caracteres de nueva línea "\\n" para separar la entrada del usuario y la respuesta de la computadora.
      U3L23 Chatbot Intro 4: Usa este nivel para que tu chatbot luzca y funcione mejor.
      U3L23 Chatbot Intro: Elige un tema de especialización para tu asistente digital. Crea un asistente digital básico que tome la entrada del usuario y muestre una respuesta predeterminada.
      U3L23 Digital Assistant 1: Establece el elemento texto_área para mostrar la entrada del usuario desde el elemento texto_entrada.
      U3L23 Digital Assistant 2: Añade la respuesta "No lo sé." después de cada una de las entradas del usuario.
      U3L23 Digital Assistant 3: Añade la respuesta "No lo sé." después de cada una de las entradas del usuario.
      U3L23 Digital Assistant 4: Muestra la entrada del usuario y la respuesta del asistente digital en diferentes líneas.
      U3L23 Digital Assistant 5: Comienza el comando del usuario con la frase "Usuario:" y la respuesta del asistente digital con la frase "Bot:"
      U3L23 Digital Assistant 6: Cuando el usuario aprieta "Ejecutar", muestra el texto "Soy un asistente digital genérico. ¡Pregúntame algo!"
      U3L24 Basic String Parsing 1: Utiliza la función "entradadeusuario.índicede(<food>)" para comprobar si las cadenas "pizza" o "sopa" están en cualquier lugar en la respuesta del usuario.
      U3L24 Chatbot Basic Conditionals: Revisa la descripción del proyecto para las instrucciones. (Haga clic para ver las instrucciones completas.)
      U3L24 Chatbot Conditionals 2: Ajusta el bloque "if" para hacer que el bot responda "No conozco ese color." si el usuario escribe algo además de "azul"
      U3L24 Chatbot Conditionals 3: Ajuste el bloque "si/si no" para hacer que el bot responda a los colores azul, rojo y verde, y a dos colores adicionales.
      U3L24 Chatbot Keyword Record: Usa el próximo nivel para registrar las palabras clave/frases de tu asistente digital.
      U3L24 Chatbot Nested Conditionals: Agrega un condicional encadenado con, al menos, 3 sentencias "sino si" a tu asistente personal.
      U3L24 Nested Conditionals 1: Cambia todas las expresiones booleanas para usar `incluye` en lugar de ==. (Haz clic para ver las instrucciones completas)
      U3L24 Nested Conditionals 2: 'Anida las sentencias `si` de género de película dentro de las sentencias `si` para comprobar un ? en la entrada. '
      U3L24 Nested Conditionals Bugs 2: Arregla el problema con el código para que todas las condiciones se puedan alcanzar. (Haz clic para ver las instrucciones completas)
      U3L24 Nested Conditionals Bugs 3: Arregla los errores que todavía existen en este programa. Demuestra que el programa funciona correctamente.
      U3L24 Nested Conditionals Bugs: Escribe entradas en el cuadro entrada-usuario para mostrar los errores en este problema. Rastrea qué entradas causan valores inesperados.
      U3L24 introIncludes: Usa el comando `incluye` para practicar. (Haz clic para ver las instrucciones completas)
      U3L25 - drag out key event: Configura un gestor de eventos para responder a eventos de pulsación de teclas y mostrar event.key en la consola. Pulsa las teclas del teclado para ver qué sucede. (Haz clic para ver las instrucciones completas)
      U3L25 - play sound when up key: Cambia el código para que el sonido sólo se pueda reproducir cuando se presiona la flecha arriba. (Haz clic para ver las instrucciones completas)
      U3L25 Chatbot Strings: 1.  Ajusta tu asistente digital para evaluar las entradas de la misma manera, independientemente de si las entradas se escriben con mayúscula o minúscula. 2. Si un usuario pregunta "Qué es <phrase>?", donde <phrase> es una entrada que tu asistente digital no reconoce, haz que tu asistente digital responda "No sé qué es <phrase>."
      U3L25 String Parsing 1: Dada la cadena "La duda es el principio de la sabiduría.", ¿cuál es el índice de los siguientes caracteres W, t, w, ., d, y k? Confirma tu expectativa mediante el uso de la función índice.cadenaDe().
      U3L25 String Parsing 2: Usa longitud.cadena para encontrar la longitud de las cadenas “Hola, mundo”, “¡La ciencia de la computación es lo máximo!”, y “Prometo hacer mis deberes todos los días”.
      U3L25 String Parsing 3: Escribe un verificador de longitud de contraseña que escribe “sí” en la consola si una cadena tiene una longitud mayor a 10, o “no” si es menor o igual a 10. Evalúa tu función mediante dos cadenas, una que cumpla con cada opción condicional.
      U3L25 String Parsing 4: Se te da la cadena "La duda es el principio de la sabiduría". Utiliza la función cadena.subcadena(principio, final) para imprimir "principio" y "duda" en la consola.
      U3L25 String Parsing 5: |-
        Rellena la función, encontrarPrincipioDuda() para obtener las cadenas "principio" y "duda" de una frase sin importar dónde exista en la oración.
        Imprime las cadenas y su índice en la consola.
      U3L25 String Parsing 6: Escribe una función que toma un nombre (primer último) y la reordena (último, primero).
      U3L25 String Parsing 7: Se te da la cadena “La tierra tiene música para aquellos que escuchan”. Manipúlala mediante el uso de las funciones cad.aMayúscula() y cad.aMinúscula().
      U3L26 AND operator: Actualiza las sentencias `si` de género y calificación para dar solo una sugerencia de película a la vez. (Haz clic para ver las instrucciones completas)
      U3L26 Chatbot Compound Conditionals: Actualiza tu asistente digital para incluir al menos uno de cada Y, O, y NO
      U3L26 Chatbot Final: Actualiza tu asistente digital para incluir al menos uno de cada Y, O, y NO
      U3L26 Compound Logic: Escribe una sentencia condicional que detecte si un comando contiene todas las frases "2000", "animadas" y "calificación G". Si se detectan todas estas frases, haga que Movie Bot responda "La película animada y con calificación G más exitosa de la década del 2000 fue Buscando a Nemo."
      U3L26 NOT operator: 'Escribe una sentencia condicional que detecte si un comando no contiene la frase "mala." Si "mala" no se detecta, haga que el Movie Bot responda normalmente. De lo contrario, haga que el Movie Bot responda "Lo siento, no entiendo de películas malas". '
      U3L26 OR operator: Actualiza la sentencia `si` para usar una O para comprobar un "?", además de quién, dónde, cuándo, por qué, cómo en la entrada del usuario. (Haz clic para ver las instrucciones completas)
      U3L27 Chatbot Final: Haz que tu asistente digital sea asombroso y cuando hayas terminado, pide a uno de tus compañeros de clase que use la guía de actividades para probarlo por ti. A medida que añadas características a tu asistente digital, rastréalas en el siguiente nivel.
      U3L2_Turtle3by3Grid: Dibuja una cuadrícula de 3x3 en el frente y la derecha de la tortuga lo más eficientemente posible. La tortuga debería finalizar en la ubicación original, de cara a su dirección original. (Haz clic para ver las instrucciones completas)
      U3L2_Turtle3by3Grid_2018: Dibuja una cuadrícula de 3x3 en el frente y la derecha de la tortuga lo más eficientemente posible. La tortuga debería finalizar en la ubicación original, de cara a su dirección original. (Haz clic para ver las instrucciones completas)
      U3L2_Turtle3by3Grid_2019: Dibuja una cuadrícula de 3x3 en el frente y la derecha de la tortuga lo más eficientemente posible. La tortuga debería finalizar en la ubicación original, de cara a su dirección original. (Haz clic para ver las instrucciones completas)
      U3L2_TurtleSquare_right: Dibuja un cuadrado al frente y a la derecha de la ubicación de inicio. (Haz clic para ver las instrucciones completas)
      U3L2_TurtleSquare_right_2018: Dibuja un cuadrado al frente y a la derecha de la ubicación de inicio. (Haz clic para ver las instrucciones completas)
      U3L2_TurtleSquare_right_2019: Dibuja un cuadrado al frente y a la derecha de la ubicación de inicio. (Haz clic para ver las instrucciones completas)
      U4 - Add Row By Hand: Añade un nuevo registro a tu tabla en el Visor de Datos. (Haz clic para ver las instrucciones completas)
      U4 - Add Row By Hand_2018: Añade un nuevo registro a tu tabla en el Visor de Datos. (Haz clic para ver las instrucciones completas)
      U4 - Add Row By Hand_2019: Añade un nuevo registro a tu tabla en el Visor de Datos. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Export Data: Exporta los datos de la tabla “edades” como archivo CSV, luego vuelve a mezclar esta aplicación e importa el archivo CSV. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Export Data_2018: Exporta los datos de la tabla “edades” como archivo CSV, luego vuelve a mezclar esta aplicación e importa el archivo CSV. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Export Data_2019: Exporta los datos de la tabla “edades” como archivo CSV, luego vuelve a mezclar esta aplicación e importa el archivo CSV. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Import Data 1: Descarga el archivo CSV que hemos proporcionado, y luego utiliza el visor de datos para importar los datos del archivo en la tabla "mitabla". (Haz clic para ver las instrucciones completas)
      U4 - Charts - Import Data 1_2018: Descarga el archivo CSV que hemos proporcionado, y luego utiliza el visor de datos para importar los datos del archivo en la tabla "mitabla". (Haz clic para ver las instrucciones completas)
      U4 - Charts - Import Data 1_2019: Descarga el archivo CSV que hemos proporcionado, y luego utiliza el visor de datos para importar los datos del archivo en la tabla "mitabla". (Haz clic para ver las instrucciones completas)
      U4 - Charts - Import Data 2: Llama a leerRegistros en “mitabla” e imprime cada registro en la consola. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Import Data 2_2018: Llama a leerRegistros en “mitabla” e imprime cada registro en la consola. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Import Data 2_2019: Llama a leerRegistros en “mitabla” e imprime cada registro en la consola. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Line Chart 1: Crea un cuadro de línea que muestre el cambio de popularidad de “#tbt” a lo largo del tiempo. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Line Chart 1_2018: Crea un cuadro de línea que muestre el cambio de popularidad de “#tbt” a lo largo del tiempo. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Line Chart 1_2019: Crea un cuadro de línea que muestre el cambio de popularidad de “#tbt” a lo largo del tiempo. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Line Chart 2: Añade una segunda línea a tu cuadro para mostrar el cambio de popularidad de “#tbt” y “#nofilter” al mismo tiempo. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Line Chart 2_2018: Añade una segunda línea a tu cuadro para mostrar el cambio de popularidad de “#tbt” y “#nofilter” al mismo tiempo. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Line Chart 2_2019: Añade una segunda línea a tu cuadro para mostrar el cambio de popularidad de “#tbt” y “#nofilter” al mismo tiempo. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Line Chart Template: Esta es una plantilla.
      U4 - Charts - Line Chart Template_2018: Esta es una plantilla.
      U4 - Charts - Line Chart Template_2019: Esta es una plantilla.
      U4 - Charts - Remixing Apps with Data: Ejecuta esta aplicación y mira lo que imprime en la consola. Luego vuelve a mezclar la aplicación y ejecuta la versión remezclada para ver lo que ha ocurrido con los datos. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Remixing Apps with Data_2018: Ejecuta esta aplicación y mira lo que imprime en la consola. Luego vuelve a mezclar la aplicación y ejecuta la versión remezclada para ver lo que ha ocurrido con los datos. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Remixing Apps with Data_2019: Ejecuta esta aplicación y mira lo que imprime en la consola. Luego vuelve a mezclar la aplicación y ejecuta la versión remezclada para ver lo que ha ocurrido con los datos. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Scatter Chart: Usa la nueva tabla y nombres de columna para crear un diagrama de dispersión de la tabla “Tomatespodridos”. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Scatter Chart_2018: Usa la nueva tabla y nombres de columna para crear un diagrama de dispersión de la tabla “Tomatespodridos”. (Haz clic para ver las instrucciones completas)
      U4 - Charts - Scatter Chart_2019: Usa la nueva tabla y nombres de columna para crear un diagrama de dispersión de la tabla “Tomatespodridos”. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords 1: Usa el bloque dibujarCuadroDeRegistros para crear un gráfico de dispersión de la tabla de la base de datos. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords 1_2018: Usa el bloque dibujarCuadroDeRegistros para crear un gráfico de dispersión de la tabla de la base de datos. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords 1_2019: Usa el bloque dibujarCuadroDeRegistros para crear un gráfico de dispersión de la tabla de la base de datos. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords Options 1: Añade un título a tu gráfico y cambia los colores de tus líneas usando el parámetro de opciones de dibujarCuadroDeRegistros. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords Options 1_2018: Añade un título a tu gráfico y cambia los colores de tus líneas usando el parámetro de opciones de dibujarCuadroDeRegistros. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords Options 1_2019: Añade un título a tu gráfico y cambia los colores de tus líneas usando el parámetro de opciones de dibujarCuadroDeRegistros. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords Options 2: Mira a través de la API de dibujarCuadroDeRegistros y elige algunas opciones más para personalizar. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords Options 2_2018: Mira a través de la API de dibujarCuadroDeRegistros y elige algunas opciones más para personalizar. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartFromRecords Options 2_2019: Mira a través de la API de dibujarCuadroDeRegistros y elige algunas opciones más para personalizar. (Haz clic para ver las instrucciones completas)
      U4 - Charts - drawChartsFromRecords 1: Añade un elemento de pantalla, retira el bloque dibujarCuadros, ¡ejecuta el programa!
      U4 - CreateRecord - 1: Añade un comando crearRegistro y ejecutar el programa. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 1_2018: Añade un comando crearRegistro y ejecutar el programa. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 1_2019: Añade un comando crearRegistro y ejecutar el programa. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 2.5: Cambia el nombre de la tabla de crearRegistro, luego verifica el Visor de Datos para ver la nueva tabla. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 2.5_2018: Cambia el nombre de la tabla de crearRegistro, luego verifica el Visor de Datos para ver la nueva tabla. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 2.5_2019: Cambia el nombre de la tabla de crearRegistro, luego verifica el Visor de Datos para ver la nueva tabla. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 2: Cambia el nombre de "Alicia" a otra cosa en el comando crearRegistro. Ejecuta el programa y usa el Visor de Datos para ver los cambios en tu tabla. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 2_2018: Cambia el nombre de "Alicia" a otra cosa en el comando crearRegistro. Ejecuta el programa y usa el Visor de Datos para ver los cambios en tu tabla. (Haz clic para ver las instrucciones completas)
      U4 - CreateRecord - 2_2019: Cambia el nombre de "Alicia" a otra cosa en el comando crearRegistro. Ejecuta el programa y usa el Visor de Datos para ver los cambios en tu tabla. (Haz clic para ver las instrucciones completas)
      U4 - Objects - eventParameter: Activa el evento del teclado y del ratón, y examina los objetos de evento que se muestran en la consola. ¿Por qué un objeto puede ser la mejor manera de almacenar esta información? (Haz clic para ver las instrucciones completas)
      U4 - Objects - eventParameter_2018: Activa el evento del teclado y del ratón, y examina los objetos de evento que se muestran en la consola. ¿Por qué un objeto puede ser la mejor manera de almacenar esta información? (Haz clic para ver las instrucciones completas)
      U4 - Objects - eventParameter_2019: Activa el evento del teclado y del ratón, y examina los objetos de evento que se muestran en la consola. ¿Por qué un objeto puede ser la mejor manera de almacenar esta información? (Haz clic para ver las instrucciones completas)
      U4 - Read Record - 3: Cambia el nombre de la tabla en un comando leerRegistros para leer desde una tabla que no existe. (Haz clic para ver las instrucciones completas)
      U4 - Read Record - 3_2018: Cambia el nombre de la tabla en un comando leerRegistros para leer desde una tabla que no existe. (Haz clic para ver las instrucciones completas)
      U4 - Read Record - 3_2019: Cambia el nombre de la tabla en un comando leerRegistros para leer desde una tabla que no existe. (Haz clic para ver las instrucciones completas)
      U4 - Read Record - 4: Imprime cada retorno de registro desde la llamada leerRegistros individualmente. (Haz clic para ver las instrucciones completas)
      U4 Model App: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      U4 Model App_2018: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      U4 Model App_2019: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      U4 Model Design 1: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      U4 Model Design 1_2018: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      U4 Model Design 1_2019: Usa el Modo Diseño para agregar un botón rojo grande a tu pantalla. (Haz clic para ver las instrucciones completas).
      U4 vigenere cipher 2: Instrucciones
      U4L02 - Objects - Template1: Plantilla
      U4L02 - Objects - Template1_2018: Plantilla
      U4L02 - Objects - Template1_2019: Plantilla
      U4L02 - Objects - createObject: Crea un objeto con, la menos, 5 valores que incluyan, al menos, una cadena y un número. (Haz clic para ver las instrucciones completas)
      U4L02 - Objects - eventParameter: Activa el evento del teclado y del ratón, y examina los objetos de evento que se muestran en la consola. ¿Por qué un objeto puede ser la mejor manera de almacenar esta información? (Haz clic para ver las instrucciones completas)
      U4L06 Data Storage 7: Añade una segunda pantalla a la aplicación de muestra que hemos estado construyendo para capturar una imagen de un usuario. Vuelve a la pantalla 1 después de que el objeto JSON haya sido almacenado en la tabla.
      U4L15 Read Data 1: Ejecuta el nivel y observa lo que sucede. Luego edita el código para que imprima una columna de información diferente.
      U4L15 Read Data 2: |-
        El estudiante debe crear una frase que agrupe todas las piezas de un registro.

        \<<Name>> tiene \<<Age>> años y le gusta \<<Food>>
      U4L15 Read Data 3: Imprime la oración mediante el primer objeto JSON del arreglo
      U4L15 Read Data 4: Usa un registro aleatorio de la lista de registros para mostrar tu oración.
      U5 if-else-if movie example: Añade una sentencia `si no-si` para decirle al usuario si sus predicciones son altas o bajas en lugar de simplemente incorrectas. (Haz clic para ver las instrucciones completas)
      U5 if-else-if movie example_2018: Añade una sentencia `si no-si` para decirle al usuario si sus predicciones son altas o bajas en lugar de simplemente incorrectas. (Haz clic para ver las instrucciones completas)
      U5 if-else-if movie example_2019: Añade una sentencia `si no-si` para decirle al usuario si sus predicciones son altas o bajas en lugar de simplemente incorrectas. (Haz clic para ver las instrucciones completas)
      U6 - Final Project - Project Level: Construye tu proyecto final aquí. (Haz clic para ver las instrucciones completas)
      U6 - Final Project - Project Level_2018: Construye tu proyecto final aquí. (Haz clic para ver las instrucciones completas)
      U6 - Final Project - Project Level_2019: Construye tu proyecto final aquí. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Callback Success Parameter: Añade un bloque si-si no dentro de la función de devolución de llamada para actualizarRegistro. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Callback Success Parameter_2018: Añade un bloque si-si no dentro de la función de devolución de llamada para actualizarRegistro. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Callback Success Parameter_2019: Añade un bloque si-si no dentro de la función de devolución de llamada para actualizarRegistro. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Edit UI: Configura los elementos de la interfaz de usuario para editar contactos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Edit UI_2018: Configura los elementos de la interfaz de usuario para editar contactos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Edit UI_2019: Configura los elementos de la interfaz de usuario para editar contactos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Edit event handler: Escribe gestores de eventos para los elementos de la interfaz de usuario de edición de contactos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Edit event handler_2018: Escribe gestores de eventos para los elementos de la interfaz de usuario de edición de contactos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Edit event handler_2019: Escribe gestores de eventos para los elementos de la interfaz de usuario de edición de contactos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Save edited contact: Utiliza actualizarRegistro para almacenar las ediciones del usuario en la base de datos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Save edited contact_2018: Utiliza actualizarRegistro para almacenar las ediciones del usuario en la base de datos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Contacts - Save edited contact_2019: Utiliza actualizarRegistro para almacenar las ediciones del usuario en la base de datos. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Default Block: Usa actualizarRegistro para cambiar el registro de "Ojo del Tigre." (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Default Block_2018: Usa actualizarRegistro para cambiar el registro de "Ojo del Tigre." (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Default Block_2019: Usa actualizarRegistro para cambiar el registro de "Ojo del Tigre." (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Update Nonexistent Record: Cambia el ID de canciónParaActualizar para forzar actualizarRegistro para fallar. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Update Nonexistent Record_2018: Cambia el ID de canciónParaActualizar para forzar actualizarRegistro para fallar. (Haz clic para ver las instrucciones completas)
      U6 - updateRecord - Update Nonexistent Record_2019: Cambia el ID de canciónParaActualizar para forzar actualizarRegistro para fallar. (Haz clic para ver las instrucciones completas)
      Underground Avoiding Lava: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground Avoiding Lava_2018: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground Avoiding Lava_2019: Hay lava bajo algunos de estos bloques. Tendrás que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade un comando "avanzar" en el lugar correcto para extraer los recursos de estos bloques.
      Underground If Statements: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground If Statements_2018: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground If Statements_2019: Ahora las cosas se complican. Recoge tres bloques de piedra rojiza pero no te caigas en la lava. Usa un comando "si" para colocar roca sobre la lava que descubras.
      Underground Iron: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Iron_2018: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Iron_2019: Caminar hacia la lava fundida es una mala idea. Coloca rocas para crear un puente y extrae el hierro de al menos dos bloques.
      Underground Mining Coal: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Underground Mining Coal_2018: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Underground Mining Coal_2019: Encontrarás los recursos más valiosos bajo tierra, pero puede estar oscuro. Coloca al menos dos antorchas y extrae al menos dos de carbón.
      Unicorn Tag: Echa un vistazo a este proyecto. ¿Puedes ver cómo se hizo?
      Valentine_artist2_01: Programa al artista para dibujar algo de hierba para el bicho del amor.
      Valentine_artist_01: Ayuda al artista a terminar su corazón de llama.
      Valentine_playlab_01: 'Programa Kiki (Actor 1) para moverse a la izquierda y a la derecha cuando se presionan las flechas de izquierda y derecha. Cuando se haga clic en Kiki, debe arrojar corazones hacia sus amigos. '
      Vigenere: Prueba
      Virtual Pet 1 Predict: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Virtual Pet 1 Predict_2019: ¿Qué crees que ocurrirá al hacer clic en "▶ Ejecutar"?
      Virtual Pet 1 Predict_simple: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      Virtual Pet 1 fix: ¿Qué crees que sucederá si presionas "Ejecutar" y luego haces clic en ella?
      Virtual Pet 1: ¿Qué crees que sucederá si presionas "Ejecutar" y luego haces clic en ella?
      Virtual Pet 1_2019: Lee y ejecuta el código a continuación, luego observa lo que hace la mascota. Intenta cambiar parte del código para producir resultados diferentes. Cuando hayas terminado, haz clic en **Finalizar**.
      Virtual Pet 1_simple: ¿Qué crees que sucederá si presionas "Ejecutar" y luego haces clic en ella?
      Virtual Pet 2 - Validated (Ram): Crea un **evento** para que cuando Geraldine toca el charco, su color cambie a marrón.
      Virtual Pet 2 - Validated: Crea un **evento** para que cuando Geraldine toca el charco, su color cambie a marrón.
      Virtual Pet 2: Crea un **evento** para que cuando Geraldine toca el charco, su color cambie a marrón.
      Virtual Pet 2_2019: "¡Crea tu propia mascota virtual! Haz clic en la pestaña **Disfraces** para crear o seleccionar un nuevo disfraz para tu mascota virtual. En el código a continuación, cambia el disfraz de la mascota sprite por el tuyo."
      Virtual Pet 2_simple: Crea un **evento** para que cuando Geraldine toca la tierra, su color cambie a marrón.
      Virtual Pet 2_simple_clone: Crea un **evento** para que cuando Geraldine toca la tierra, su color cambie a marrón.
      Virtual Pet 3: Añade un nuevo sprite de jabón a la pantalla. ¿Puedes hacerlo para que cuando la jirafa y el jabón se toquen, la jirafa vuelva a su color normal?
      Virtual Pet 3_2019: Añade un nuevo sprite a la pantalla, luego dale un disfraz que parezca alimento que le gusta comer a tu mascota.
      Virtual Pet 3_simple: Añade un nuevo sprite de jabón a la pantalla. ¿Puedes hacerlo para que cuando la jirafa y el jabón se toquen, la jirafa vuelva a su color normal?
      Virtual Pet 4: Añade un comportamiento a tu jabón para que sea arrastrable, luego arrástralo para limpiar la jirafa.
      Virtual Pet 4_simple: Añade un comportamiento a tu jabón para que sea arrastrable, luego arrástralo para limpiar la jirafa.
      Virtual Pet 5 - Validated: Añade acciones a cada evento para que cuando la jirafa choque con cada sprite, se reduzca por 5.
      Virtual Pet 5: Añade acciones a cada evento para que cuando la jirafa choque con cada sprite, se reduzca por 5.
      Virtual Pet 5_2019: Añade un sprite para comida que a tu mascota no le gusta comer. Haz un evento que haga que este alimento salte a una ubicación aleatoria cuando tu mascota lo toca.
      Virtual Pet 5_simple: Añade acciones a cada evento para que cuando la jirafa choque con cada sprite, se reduzca por 5.
      Virtual Pet 6: Añade una manzana que devuelve la jirafa al tamaño normal cuando se toquen.
      Virtual Pet 6_2019: Establece la variable `felicidad` a 0 cuando el programa comienza. Cuando tu mascota come comida que le gusta, cambia `felicidad` por 1. Cuando tu mascota come comida no le gusta, cambia `felicidad` por -1.
      Virtual Pet 6_simple: Añade una manzana que devuelve la jirafa al tamaño normal cuando se toquen.
      Virtual Pet 7_2019: |-
        Imprime el nivel de felicidad de tu mascota cada vez que come alimento. Usa este bloque, que se encuentra en la categoría de caja de herramientas "Mundo":
        <xml>
        <block type="gamelab_printText" block-text="print text block">
        <value name="TEXT">
        <block type="text_join_simple" inputcount="2">
        <value name="ADD0">
        <block type="text">

        <title name="TEXT">Mi nivel de felicidad: </title>
        </block>
        </value>
        <value name="ADD1">
        <block type="variables_get">
        <title name="VAR">felicidad</title>
        </block>
        </value>
        </block>
        </value>
        </block></xml>
      Virtual Pet 8_2019: "**Juego libre:**¿Qué más puedes lograr que tu mascota haga? ¡Prueba lo que quieras!"
      Virtual Pet Freeplay: 'Juego libre: ¿Qué más puedes lograr que tu jirafa haga? '
      Virtual Pet Freeplay_2019: "**Juego libre:**¿Qué más puedes lograr que tu mascota haga? ¡Prueba lo que quieras!"
      Virtual Pet Freeplay_simple: 'Juego libre: ¿Qué más puedes lograr que tu jirafa haga? '
      WhileAdventure: Nuestra aventurera quiere recoger monedas. ¿Puedes ayudarla a agarrar la mayor cantidad que pueda usando solo un `eliminar 1 bloque`?
      'Widget: Black and White Pixelation': "¡Ahora haz tu propia imagen! Hemos empezado con un lienzo de 10 x 10, pero puedes hacerlo del tamaño que quieras. ¡Que te diviertas pixelando!"
      'Widget: Black and White Pixelation_2018': "¡Ahora haz tu propia imagen! Hemos empezado con un lienzo de 10 x 10, pero puedes hacerlo del tamaño que quieras. ¡Que te diviertas pixelando!"
      'Widget: Black and White Pixelation_2019': "¡Ahora haz tu propia imagen! Hemos empezado con un lienzo de 10 x 10, pero puedes hacerlo del tamaño que quieras. ¡Que te diviertas pixelando!"
      'Widget: Color Pixelation': 'Requisitos: El icono debe ser de 16 x 16 pixeles. Debes utilizar el Widget Pixelation para codificar los bits de información de color. La imagen debe codificarse con al menos 12 bits por pixel.'
      'Widget: Color Pixelation_2018': 'Requisitos: El icono debe ser de 16 x 16 pixeles. Debes utilizar el Widget Pixelation para codificar los bits de información de color. La imagen debe codificarse con al menos 12 bits por pixel.'
      'Widget: Color Pixelation_2019': 'Requisitos: El icono debe ser de 16 x 16 pixeles. Debes utilizar el Widget Pixelation para codificar los bits de información de color. La imagen debe codificarse con al menos 12 bits por pixel.'
      XML Scratchpad: Usar este nivel de prueba para obtener el xml para pruebas de unidades
      aE1: "¡Has elegido crear una servilleta cuadrada! \n\nPara terminar, dibuja un cuadrado con lados de 20 pixeles. "
      aE2: Si pones tu bucle cuadrado dentro de otro bucle, lo llamamos "bucle anidado". ¿Qué necesitas agregar a tu bucle externo para asegurarte de que las 14 servilletas se alinean una al lado de la otra?
      aE3: "¡Tenemos que tener un mantel!  \n\nToma tu fila de 14 servilletas y cóselas juntas con otro **bucle externo** para hacer una cobertura para nuestra mesa."
      aE3alternate: Alternativa
      aE3alternateB: Alternativa
      aE4: Alternativa
      aE5: Ejemplo de desafío mediante el uso de la forma de nivel de dificultad más alta.
      aE7: Si copia ese bucle y gira a la izquierda en lugar de la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?
      aE8: Ahora repitamos todo eso cuatro veces para crear este cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados! Si se repite 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos bloques de código hará un cuarto de círculo para las esquinas?
      allthethings_U3 - Simple Drawing - Rectangle Width and Height: Hacer esto
      allthethings_ttscsf contained: Recoge todas las lechugas (solo mientras haya alguna que recoger).
      allthethings_ttscsp: Corrige el error lógico dentro del programa para depurar el programa. (Haz clic para ver las instrucciones completas)
      artistDebugVideo1: Usa el loop 'repetir' para agregar olas al agua.
      artistLoopsK1: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      artistLoopsK2: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      artistLoopsK2gradek_artist_loops3: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      asteroids: "¡Este Corgi ha sido un buen chico! Arrastra esta zanahoria hasta él a modo de regalo especial."
      beeDebugVideo1: "¿Podrías utilizar un ciclo para recolectar todo el néctar?"
      birdsDebugVideo1: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      bounce_1: Une un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar Programa". Mueve la paleta usando la flecha izquierda para alcanzar el objetivo final.
      bounce_10: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_2018: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_basketball: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pierde mano" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_10_sports: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pierde mano" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11_2018: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      bounce_11_basketball: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la mano y la pelota y ver cuantos puntos puedes anotar antes de que tu oponente anote dos veces!
      bounce_11_sports: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la mano y la pelota y ver cuantos puntos puedes anotar antes de que tu oponente anote dos veces!
      bounce_12: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      bounce_12_2018: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      bounce_12_basketball: Crea tu propio juego de baloncesto. Puedes cambiar todas las reglas. Cuando hayas terminado, haz clic en finalizar para permitir a tus amigos/as probar el juego en sus teléfonos.
      bounce_12_sports: 'Crea tu propio juego. Ahora estás al mando: puedes cambiar todas las reglas y mezclar deportes. ¡Puedes ser creativo! Cuando estés listo, haz clic en "Terminar" para que tus amigos prueben tu juego en sus teléfonos.'
      bounce_1_2018: Une un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar Programa". Mueve la paleta usando la flecha izquierda para alcanzar el objetivo final.
      bounce_1_basketball: Une un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar". Mueve la mano usando la flecha izquierda para alcanzar el objetivo final.
      bounce_1_sports: ¡Llega a la bandera! Agrega un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hasta la bandera.
      bounce_2: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      bounce_2_2018: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      bounce_2_basketball: Une un bloque a los bloques "cuando flecha derecha" y "cuando flecha izquierda". Mueve la mano para alcanzar los 2 objetivos finales.
      bounce_2_sports: ¡Ahora hay dos banderas! Coloque un bloque en "cuando flecha izquierda" y "cuando flecha derecha" para mover a tu jugador en las dos direcciones.
      bounce_3: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      bounce_3_2018: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      bounce_4: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este desafío.
      bounce_4_2018: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este desafío.
      bounce_5: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      bounce_5_2018: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      bounce_5_basketball: Lanzaremos una pelota hacia la mano. Añade un bloque al bloque "cuando la bola golpee mano" para asegurar que la pelota llegue a la bandera.
      bounce_5_sports: La pastilla de hockey se deslizará hacia el jugador. Coloque un bloque en "cuando la bola golpea al jugador".
      bounce_6: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este desafío.
      bounce_6_2018: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este desafío.
      bounce_6_basketball: Ahora la bandera está en la parte superior. Necesitas añadir bloques a ambos bloques "cuando la bola golpee" para resolver este acertijo.
      bounce_6_sports: Ahora la bandera está en la parte superior. Necesitas añadir bloques a ambos bloques "cuando la bola golpee" para resolver este acertijo.
      bounce_7: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      bounce_7_2018: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      bounce_7_basketball: Coloca bloques cada uno de lo bloques "cuando". Bota la pelota hasta que toque la bandera.
      bounce_7_sports: Coloca bloques cada uno de lo bloques "cuando". Bota la pelota hasta que toque la bandera.
      comment_intro_maze_2018: Usa el nuevo bloque `comentar` para dejarte recordatorios rápidos.
      comment_intro_maze_2018_2019: Usa el nuevo bloque `comentar` para dejarte recordatorios rápidos.
      conditionals_forvideo_harvester: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      course1_artist_loops_challenge1: |-
        Puede usar un loop para dibujar muchas líneas seguidas.

        ¿Puedes dibujar una casa? ¡Haz que se vea como a ti te gusta! Intenta buscar patrones que se repiten!
      course1_artist_loops_challenge2: "¡Vamos a jugar un juego!! Dibuja tantas X como tú puedas! ¿Puedes obtener 3 en una fila?"
      course1_artist_loops_challenge3: '"¿Puedes ayudarme a hacer dos casas para pájaros?"'
      course1_artist_loops_challenge4: |-
        "¡Es hora de tirar los
         dados! ¿Puedes ayudarme a dibujar estos?"
      course1_collector_loops_challenge1: '"¿Puedes ayudarme a detectar algunos bugs? Sé por que camino quiero ir, pero no estoy segura de cuántos pasos dar".'
      course1_collector_loops_challenge2: 'Esta vez solo puedes usar uno de cada bloque de flecha. ¡Obtén todo el tesoro! '
      course1_collector_loops_challenge3: 'Esta vez solo puedes usar uno de cada bloque de flecha. ¡Obtén todo el tesoro! '
      course1_collector_loops_challenge4: "¡Consigamos el tesoro! Ayúdame a cruzar cada fila y luego regresa para comenzar la siguiente fila. ¿Puedes encontrar un patrón?"
      course1_maze_debugging_challenge2: Depura este nivel. ¡Estos son los bloques correctos, pero están en el orden equivocado!
      course2_artist_nestedLoops_challenge1: "¿Puedes descifrar cómo hacer una imagen como esta?"
      course2_artist_nestedLoops_challenge2: "¿Puedes descifrar cómo hacer una imagen como esta?"
      course2_artist_prog_challenge2: _¡Ayúdame a pintar de amarillo las líneas en este camino!_
      course2_bee_conditionals_challenge1: Recoge todo el néctar o haz toda la miel.
      course2_bee_conditionals_challenge2: Recoge todo el néctar o haz toda la miel.
      course2_collector_prog_challenge1: "¡Mira con cuidado! ¿Puedes recolectar todas las **10** piezas del tesoro?"
      course2_harvester_loops_challenge1: Recoge todo el maíz.
      course2_harvester_loops_challenge2: Recoge toda la lechuga. ¡Evita los árboles y los campos!
      course2_maze_loops_challenge1: "¡Ahora Scrat quiere usar bucles para intentar encontrar su bellota! "
      course2_maze_programming_challenge2: A veces hay más de una forma de resolver el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      course2_maze_seq_challenge1: Traza el camino y llévame al cerdo tonto. ¡Evita el TNT o las plumas volarán!
      course2_playlab_stage17_1: |-
        ¿Puedes hacer que Jorge el Perro (actor 1)
        diga "Hola"?
      course2_playlab_stage17_10: |-
        Agrega bloques al evento "cuando se ejecuta"
        para cambiar el fondo y la velocidad de Waddles.\\r
        \\r
        Juega y
        mueve a Waddles con las flechas hasta que anotes.
      course2_playlab_stage17_11: Crea tu propia historia. Cuando estés listo, haz clic en Finalizar para que tus amigos la prueben en sus teléfonos.
      course2_playlab_stage17_2: "¿Puedes hacer que el perro diga algo y que a continuación el gato le conteste?"
      course2_playlab_stage17_3: "¿Puedes escribir un programa para que Jorge (actor 1) se mueva hacia Olive el Gato?"
      course2_playlab_stage17_4: |-
        ¿Puedes escribir un programa que haga que
        Jorge (actor 1) mueva a Olive el Gato, y que Olive diga "Hola" cuando Jorge
        la alcance?
      course2_playlab_stage17_5: |-
        ¿Puedes escribir un programa que haga que Octavia
        diga "Hola" cuando se hace clic en ella?
      course2_playlab_stage17_6: |-
        Ahora, ¡escribe un programa que haga que Waddles
        se mueva usando las teclas arriba/abajo/izquierda/derecha para tocar a todos los blancos!
      course2_playlab_stage17_8: |-
        ¿Puedes hacer que Waddles (actor 1) diga "¡Auch!" y haga un ruido de "golpe" si se encuentra con Chomp?

        Cuando termines, juaga el juago para que eso suceda.
      course2_playlab_stage17_9: |-
        ¿Puedes agregar un bloque para ganar un punto
        cuando Waddles choque con Octavia (actor 3)?\\r
        ¡Juega y mueve a Waddles
        con las flechas hasta que anotes!
      course3_artist_functions_challenge1: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      course3_artist_functions_challenge2: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      course3_bee_functions_challenge1: Estás por tu cuenta para este desafío. ¡Esto puede "ser" más difícil de lo que parece!
      course3_bee_functions_challenge3: Crea una función para recoger todo el néctar y la miel mientras hay un camino por delante. ¡Úsalo para completar el desafío!
      course3_bee_functions_challenge4: "¡Usa todo lo que has aprendido para completar este desafío!"
      course3_collector_debugging_challenge2: "¿Eres experto en loops anidados? ¡Usa lo que has aprendido hasta ahora para recolectar todo el tesoro!"
      course3_farmer_condLoops_challenge2: Recoge todo para completar el nivel.
      course3_farmer_until_challenge2: Usa bloques si/si no para seguir el camino con curvas. En cada esquina, usa el comando 'remover 1' en un loop para limpiar los montones.
      course3_maze_until_challenge1: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      course3_playLab_challenge1: "Algo debería suceder cuando obtegas suficientes puntos o cuando se te acaben los puntos. Agrega algo de código a las funciones 'ganar juego' y 'perder juego' para hacer que el juego funcione de la manera que deberñia. \n¡Haz clic en las pistas para más ideas!"
      course3_playlab_challenge2: ¿Puedes descifrar cómo funciona la aplicación "Adivino"? Haz clic en 'MÁS' para ver tus desafós.
      course3_playlab_stage16_1: ¿Puedes hacer que este perro diga "Hola, mundo"?
      course3_playlab_stage16_2: "¿Puedes hacer que el perro diga algo y que el gato le conteste?"
      course3_playlab_stage16_3: "¿Puedes crear un programa que haga que el perro se mueva hacia el gato?"
      course3_playlab_stage16_4: ¿Puedes escribir un programa que haga que el perro se mueva hacia el gato, y que el gato diga "hola" cuando el perro se acerque a él?
      course3_playlab_stage16_5: "¿Puedes agregar un bloque para que el pulpo esté feliz?"
      course3_playlab_stage16_6: Crea tu propia historia. Cuando estés listo, haz clic en Finalizar para que tus amigos la prueben en sus teléfonos.
      course3_playlab_stage17_1: ¿Puedes escribir un programa para que el pulpo diga "hola" cuando se hace clic sobre él?
      course3_playlab_stage17_2: "¿Puedes escribir un programa que haga que este pingüino se mueva al presionar las teclas de flecha arriba/abajo/izquierda/derecha para alcanzar todos los objetivos?"
      course3_playlab_stage17_3: El bloque de "repetir para siempre" te permite ejecutar el código de manera continua. ¿Puedes adjuntar los bloques que se necesitan para mover este dinosaurio hacia arriba y hacia abajo continuamente?
      course3_playlab_stage17_4: ¿Puedes hacer que el pingüino diga "¡Ouch!" y reproduzca un sonido de "golpe", si él choca con el dinosaurio? Hay que moverlo con las teclas de flecha para hacer que esto ocurra
      course3_playlab_stage17_5: "¿Puedes agregar un bloque para anotar un punto cuando el pingüino choque con el pulpo?, hay que moverlo con las teclas de flecha para anotar un punto"
      course3_playlab_stage17_6: "¿Puedes agregar bloques para cambiar el fondo y la velocidad del pingüino y moverlo con las flechas hasta anotar?"
      course3_playlab_stage17_7: Crea tu propia historia. Cuando estés listo, haz clic en Finalizar para que tus amigos la prueben en sus teléfonos.
      course4_artist_binary_challenge1: Sólo puedes usar cada valor binario (0 ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar este dibujo.
      course4_artist_binary_challenge2: "¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?"
      course4_artist_concept_challenge2: Crea cinco molinillos usando el código de más abajo.
      course4_artist_functions_challenge2: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      course4_artist_fwp_challenge1: Intente ejecutar este programa y haga cambios para ver que ocurre. ¿Puedes averiguar cómo funciona? (o elimínalo y reemplázalo con algo totalmente diferente)
      course4_artist_variables_challenge1: "¡Has aprendido todo lo que necesitas saber para hacer un patrón como este! Este desafío está hecho para ser difícil. ¿Puedes quedarte aquí hasta que descifres la solución?"
      course4_artist_variables_challenge2: "¡Has aprendido todo lo que necesitas saber para hacer un patrón como este! Este desafío está hecho para ser difícil. ¿Puedes quedarte aquí hasta que descifres la solución?"
      course4_bee_fwp_challenge1: Usa un 'loop para' en una función para recoger todo el maíz. El mismo 'loop para' puede contar a valores máximos diferentes usando el parámetro 'longitud'.
      course4_collector_nested_loops_challenge2: Ayuda al recolector a alcanzar al menos dos pilas del tesoro usando solo los bloques en tu caja de herramientas. Es posible recolectar las 4.
      course4_harvester_nested_loops_challenge1: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      course4_playlab_variables_challenge1: Usa estos bloques para hacer que los actores compartan un chiste toc/toc. ¡Cambia el remate y establece tu propio chiste!
      course4_playlab_variables_challenge3: ¿Puedes descifrar cómo funciona la aplicación "Adivino"? Haz clic en 'MÁS' para ver tus desafós.
      courseA_artist_loops1: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseA_artist_loops10: "¡Ayúdame a poner piedras para que no me caiga!"
      courseA_artist_loops10_2018: "¡Ayúdame a poner piedras para que no me caiga!"
      courseA_artist_loops10_2019: "¡Ayúdame a poner piedras para que no me caiga!"
      courseA_artist_loops11: Ayúdame a construir escalones para ver cómo zarpa el barco.
      courseA_artist_loops11_2018: Ayúdame a construir escalones para ver cómo zarpa el barco.
      courseA_artist_loops11_2019: Ayúdame a construir escalones para ver cómo zarpa el barco.
      courseA_artist_loops12: El artista vio algo gracioso a la distancia. Dibuja lo que crees que vio.
      courseA_artist_loops12_2018: El artista vio algo gracioso a la distancia. Dibuja lo que crees que vio.
      courseA_artist_loops12_2019: El artista vio algo gracioso a la distancia. Dibuja lo que crees que vio.
      courseA_artist_loops1_2018: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseA_artist_loops1_2019: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseA_artist_loops2: Ayuda al artista a dibujar esta línea dos veces hacia adelante.
      courseA_artist_loops2_2018: Ayuda al artista a dibujar esta línea dos veces hacia adelante.
      courseA_artist_loops2_2019: Ayuda al artista a dibujar esta línea dos veces hacia adelante.
      courseA_artist_loops3: Dibuja una línea hacia adelante cinco veces.
      courseA_artist_loops3_2018: Dibuja una línea hacia adelante cinco veces.
      courseA_artist_loops3_2019: Dibuja una línea hacia adelante cinco veces.
      courseA_artist_loops4: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      courseA_artist_loops4_2018: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      courseA_artist_loops4_2019: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      courseA_artist_loops5: Dibuja una línea de siete pasos de largo. Esta se convertirá en nuestro horizonte.
      courseA_artist_loops5_2018: Dibuja una línea de siete pasos de largo. Esta se convertirá en nuestro horizonte.
      courseA_artist_loops5_2019: Dibuja una línea de siete pasos de largo. Esta se convertirá en nuestro horizonte.
      courseA_artist_loops6: Pongamos una colina bonita en el fondo.
      courseA_artist_loops6_2018: Pongamos una colina bonita en el fondo.
      courseA_artist_loops6_2019: Pongamos una colina bonita en el fondo.
      courseA_artist_loops7: Usa el loop 'repetir' para agregar olas al agua.
      courseA_artist_loops7_2018: Usa el loop 'repetir' para agregar olas al agua.
      courseA_artist_loops7_2019: Usa el loop 'repetir' para agregar olas al agua.
      courseA_artist_loops7_forVideo: Usa el loop 'repetir' para agregar olas al agua.
      courseA_artist_loops8: Necesitamos una escalera hasta el bote.
      courseA_artist_loops8_2018: Necesitamos una escalera hasta el bote.
      courseA_artist_loops8_2019: Necesitamos una escalera hasta el bote.
      courseA_artist_loops9: 'Desafío: arreglar las escaleras.'
      courseA_artist_loops9_2018: 'Desafío: arreglar las escaleras.'
      courseA_artist_loops9_2019: 'Desafío: arreglar las escaleras.'
      courseA_artist_loops_challenge1: "¿Puedes dibujar una casa? ¡Haz que se vea como a ti te gusta!"
      courseA_artist_loops_challenge1_2018: "¿Puedes dibujar una casa? ¡Haz que se vea como a ti te gusta!"
      courseA_artist_loops_challenge1_2019: "¿Puedes dibujar una casa? ¡Haz que se vea como a ti te gusta!"
      courseA_artist_loops_challenge2: '"¿Puedes ayudarme a hacer dos casas para pájaros?"'
      courseA_artist_loops_challenge2a: _"¡Ayúdame a armar estas tres tiendas!"_
      courseA_artist_loops_challenge2a_2018: _"¡Ayúdame a armar estas tres tiendas!"_
      courseA_artist_loops_challenge2a_2019: _"¡Ayúdame a armar estas tres tiendas!"_
      courseA_artist_loops_challenge3: "¡Vamos a jugar un juego!! Dibuja tantas X como tú puedas! ¿Puedes obtener 3 en una fila?"
      courseA_bee_seq1: Juega con estos bloques para ayudar a la abeja a obtener _un_ néctar.
      courseA_bee_seq10: "¡Inténtalo tú mismo! Obtén todo el néctar."
      courseA_bee_seq11: Obtén todo el néctar.
      courseA_bee_seq12: Juega con estos bloques para ayudar a la abeja a obtener _un_ néctar.
      courseA_bee_seq13: Utiliza tres bloques `Mover al oeste` y un bloque 'Obtener néctar\`.
      courseA_bee_seq14: Utiliza tres bloques `Mover al norte` y un bloque 'Obtener néctar\`.
      courseA_bee_seq2: "¡Ayuda a la abeja a obtener el néctar!"
      courseA_bee_seq3: "¡Encuentra el error y arréglalo!"
      courseA_bee_seq4: "¡Inténtalo tú mismo!"
      courseA_bee_seq5: "¡Inténtalo tú mismo!"
      courseA_bee_seq6: "¡Ahora la abeja necesita obtener el néctar de dos flores!"
      courseA_bee_seq7: "¡Agrega dos bloques para terminar este desafío!"
      courseA_bee_seq8: "¡Asegúrate de obtener el néctar de cada flor!"
      courseA_bee_seq9: "¡Asegúrate de obtener el néctar de cada flor!"
      courseA_collector_loops1: "¡Mueve a Laurel y obtén todo el tesoro que puedas!"
      courseA_collector_loops10: Ayuda a Laurel a obtener todo el tesoro a lo largo de este camino.
      courseA_collector_loops10_2018: Ayuda a Laurel a obtener todo el tesoro a lo largo de este camino.
      courseA_collector_loops10_2019: Ayuda a Laurel a obtener todo el tesoro a lo largo de este camino.
      courseA_collector_loops11: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseA_collector_loops11_2018: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseA_collector_loops11_2019: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseA_collector_loops12: _"¡Eureka! ¡Consigue todo el tesoro que puedas!"_
      courseA_collector_loops12_2018: _"¡Eureka! ¡Consigue todo el tesoro que puedas!"_
      courseA_collector_loops12_2019: _"¡Eureka! ¡Consigue todo el tesoro que puedas!"_
      courseA_collector_loops1_2018: "¡Mueve a Laurel y obtén todo el tesoro que puedas!"
      courseA_collector_loops1_2019: "¡Mueve a Laurel y obtén todo el tesoro que puedas!"
      courseA_collector_loops2: Consigue los tres montones para pasar este nivel.
      courseA_collector_loops2_2018: Consigue los tres montones para pasar este nivel.
      courseA_collector_loops2_2019: Consigue los tres montones para pasar este nivel.
      courseA_collector_loops4: Arregla el camino de Laurel para obtener todo este tesoro.
      courseA_collector_loops4_2018: Arregla el camino de Laurel para obtener todo este tesoro.
      courseA_collector_loops4_2019: Arregla el camino de Laurel para obtener todo este tesoro.
      courseA_collector_loops5: Usa lo que has aprendido para obtener todo el tesoro.
      courseA_collector_loops5_2018: Usa lo que has aprendido para obtener todo el tesoro.
      courseA_collector_loops5_2019: Usa lo que has aprendido para obtener todo el tesoro.
      courseA_collector_loops6: Añade bloques a este código para obtener todo el tesoro.
      courseA_collector_loops6_2018: Añade bloques a este código para obtener todo el tesoro.
      courseA_collector_loops6_2019: Añade bloques a este código para obtener todo el tesoro.
      courseA_collector_loops7: "¿Qué deberías añadir a este código para obtener todo el tesoro?"
      courseA_collector_loops7_2018: "¿Qué deberías añadir a este código para obtener todo el tesoro?"
      courseA_collector_loops7_2019: "¿Qué deberías añadir a este código para obtener todo el tesoro?"
      courseA_collector_loops8: Escribe el código para obtener todo este tesoro.
      courseA_collector_loops8_2018: Escribe el código para obtener todo este tesoro.
      courseA_collector_loops8_2019: Escribe el código para obtener todo este tesoro.
      courseA_collector_loops9: "**Desafío:** ¡El tesoro está a lo largo de estas escaleras! Escribe el código para ayudar a Laurel a obtenerlo todo."
      courseA_collector_loops9_2018: "**Desafío:** ¡El tesoro está a lo largo de estas escaleras! Escribe el código para ayudar a Laurel a obtenerlo todo."
      courseA_collector_loops9_2019: "**Desafío:** ¡El tesoro está a lo largo de estas escaleras! Escribe el código para ayudar a Laurel a obtenerlo todo."
      courseA_collector_loops_challenge1: _"¿Puedes ayudarme a encontrar algunos errores?"_
      courseA_collector_loops_challenge1_2018: _"¿Puedes ayudarme a encontrar algunos errores?"_
      courseA_collector_loops_challenge1_2019: _"¿Puedes ayudarme a encontrar algunos errores?"_
      courseA_collector_loops_challenge2: "¡Consigue todo el tesoro! "
      courseA_collector_loops_challenge2kp: Recoge al menos **3** piezas de tesoro para pasar este nivel.
      courseA_collector_loops_challenge2kp_2018: Recoge al menos **3** piezas de tesoro para pasar este nivel.
      courseA_collector_loops_challenge2kp_2019: Recoge al menos **3** piezas de tesoro para pasar este nivel.
      courseA_collector_preLoops1: |-
        ¡Ella es Laurel la Aventurera!

        Presiona el botón "Ejecutar" para verla caminar hasta el tesoro y recogerlo.
      courseA_collector_preLoops2: "¡Muy bien! ¡Ahora puedes agregar el código!  \n\nColoca un bloque de ´recoger tesoro´ en la parte inferior del programa y haz clic en \"Ejecutar\"."
      courseA_collector_preLoops3: Encaja dos bloques `E -->`y un bloque de `recoger tesoro` en la parte inferior del programa; luego, haz clic en "Ejecutar".
      courseA_collector_preLoops4: "¿Puedes descifrar la manera de resolver este desafío?"
      courseA_collector_preLoops5: Consigue 1 de estas 2 gemas para resolver este desafío.
      courseA_collector_preLoops6: Consigue las dos piezas del tesoro para resolver este desafío.
      courseA_collector_preLoops7: Consigue los tres montones para pasar este nivel.
      courseA_data widget: "Presiona \"Ejecutar\".\nEl mago hará que aparezcan animales. \n\nCuéntalos. \n¿Qué observas?"
      courseA_forVideoTest_artist: Usa el loop 'repetir' para agregar olas al agua.
      courseA_harvester_forVideo: "¿Puedes recoger todo el maíz con **un** solo bloque de movimiento?"
      courseA_harvester_loops1: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops10: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops10_2019: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops11: "¡Intenta uno más por tu cuenta! "
      courseA_harvester_loops11_2019: "¡Intenta uno más por tu cuenta! "
      courseA_harvester_loops1_2019: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops2: "¡Asegúrate de recoger todo el maíz!"
      courseA_harvester_loops2_2019: "¡Asegúrate de recoger todo el maíz!"
      courseA_harvester_loops3: "¿Puedes recoger todo el maíz con **un** solo bloque de movimiento?"
      courseA_harvester_loops3_2019: "¿Puedes recoger todo el maíz con **un** solo bloque de movimiento?"
      courseA_harvester_loops4: "¿Puedes ayudar a la cosechadora a encontrar el error en su código?"
      courseA_harvester_loops4_2019: "¿Puedes ayudar a la cosechadora a encontrar el error en su código?"
      courseA_harvester_loops5: "¡Inténtalo tú mismo! ¿Puedes recoger el maíz al final?"
      courseA_harvester_loops5_2019: "¡Inténtalo tú mismo! ¿Puedes recoger el maíz al final?"
      courseA_harvester_loops5a: "¡Mira todo este maíz! ¿Puedes recogerlo todo por ti mismo?"
      courseA_harvester_loops5a_2019: "¡Mira todo este maíz! ¿Puedes recogerlo todo por ti mismo?"
      courseA_harvester_loops5b: "¿Puedes cambiar tu código para que la cosechadora recoja todo el maíz?"
      courseA_harvester_loops5b_2019: "¿Puedes cambiar tu código para que la cosechadora recoja todo el maíz?"
      courseA_harvester_loops6: Necesitarás **un** bloque `Mover al sur` y **un** bloque `Mover al oeste`.
      courseA_harvester_loops6_2019: Necesitarás **un** bloque `Mover al sur` y **un** bloque `Mover al oeste`.
      courseA_harvester_loops7: "¡Inténtalo tú mismo! "
      courseA_harvester_loops7_2019: "¡Inténtalo tú mismo! "
      courseA_harvester_loops8: Es el mismo desafío, ¡pero ahora tienes que repetir **tres** veces!
      courseA_harvester_loops9: "¿Sabes cómo recoger todo el maíz?"
      courseA_harvester_loops9_2019: "¿Sabes cómo recoger todo el maíz?"
      courseA_harvester_seq1: Juega con estos bloques para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq10: "¡Asegúrate de recoger todo el maíz!"
      courseA_harvester_seq10_2019: "¡Asegúrate de recoger todo el maíz!"
      courseA_harvester_seq11: "¡Inténtalo tú mismo! Recoge el maíz."
      courseA_harvester_seq11_2019: "¡Inténtalo tú mismo! Recoge el maíz."
      courseA_harvester_seq12: Recoge todo el maíz.
      courseA_harvester_seq12_2019: Recoge todo el maíz.
      courseA_harvester_seq13: Juega con estos bloques para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq13_2019: Juega con estos bloques para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq1_2019: Juega con estos bloques para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq2: Usa tres bloques "mover oeste" y un bloque "recoger maíz" para resolver este desafío.
      courseA_harvester_seq2_2019: Usa tres bloques "mover oeste" y un bloque "recoger maíz" para resolver este desafío.
      courseA_harvester_seq3: Utiliza tres bloques `Mover al norte` y un bloque `Recoger maíz`.
      courseA_harvester_seq3_2019: Utiliza tres bloques `Mover al norte` y un bloque `Recoger maíz`.
      courseA_harvester_seq4: Agrega un bloque para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq4_2019: Agrega un bloque para ayudar a la cosechadora a recoger el maíz.
      courseA_harvester_seq5: "¡Encuentra el error y arréglalo!"
      courseA_harvester_seq5_2019: "¡Encuentra el error y arréglalo!"
      courseA_harvester_seq6: "¡Inténtalo tú mismo!"
      courseA_harvester_seq6_2019: "¡Inténtalo tú mismo!"
      courseA_harvester_seq7: "¡Inténtalo tú mismo!"
      courseA_harvester_seq7_2019: "¡Inténtalo tú mismo!"
      courseA_harvester_seq8: "¡Ahora la cosechadora necesita recoger el maíz dos veces!"
      courseA_harvester_seq8_2019: "¡Ahora la cosechadora necesita recoger el maíz dos veces!"
      courseA_harvester_seq9: "¡Agrega dos bloques para terminar este desafío!"
      courseA_harvester_seq9_2019: "¡Agrega dos bloques para terminar este desafío!"
      courseA_maze_ramp2_2018: Encaja todos los bloques para terminar tu código; luego, haz clic en "Ejecutar".
      courseA_maze_ramp2_2019: Encaja todos los bloques para terminar tu código; luego, haz clic en "Ejecutar".
      courseA_maze_ramp2a_2018: Encaja todos los bloques para terminar tu código; luego, haz clic en "Ejecutar".
      courseA_maze_ramp3_2018: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseA_maze_ramp3a_2018: Agrega un bloque `Norte` en la parte inferior de los otros bloques para terminar este código; luego, haz clic en "▶ Ejecutar".
      courseA_maze_ramp3a_2019: Agrega un bloque `Norte` en la parte inferior de los otros bloques para terminar este código; luego, haz clic en "▶ Ejecutar".
      courseA_maze_ramp3b_2018: Agrega un bloque `Norte` en la parte inferior de los otros bloques para finalizar este código; luego, haz clic en "Ejecutar".
      courseA_maze_ramp3b_2019: Agrega un bloque `Norte` en la parte inferior de los otros bloques para finalizar este código; luego, haz clic en "Ejecutar".
      courseA_maze_ramp4_2018: "¡Evita el TNT o volarán plumas!"
      courseA_maze_ramp4a_2018: "¿Puedes descubrir qué bloque necesitas agregar al final de los otros bloques para terminar este código?"
      courseA_maze_ramp4a_2019: "¿Puedes descubrir qué bloque necesitas agregar al final de los otros bloques para terminar este código?"
      courseA_maze_ramp5_2018: Evita el TNT.
      courseA_maze_ramp5a_2018: Haz que el pájaro llegue al cerdo
      courseA_maze_ramp5a_2019: Haz que el pájaro llegue al cerdo
      courseA_maze_seq1: "¡Haz que el pájaro llegue al cerdo malo!"
      courseA_maze_seq10: 'Desafío: ¡Rodea el TNT para que el pájaro llegue hasta el cerdo! '
      courseA_maze_seq10_2018: 'Desafío: ¡Evita el TNT para que el pájaro llegue hasta el cerdo! '
      courseA_maze_seq10_2019: 'Desafío: ¡Evita el TNT para que el pájaro llegue hasta el cerdo! '
      courseA_maze_seq11: Muévete en una dirección, y luego en otra, para que el pájaro llegue hasta el cerdo.
      courseA_maze_seq11_2018: Muévete en una dirección, y luego en otra, para que el pájaro llegue hasta el cerdo.
      courseA_maze_seq11_2019: Muévete en una dirección, y luego en otra, para que el pájaro llegue hasta el cerdo.
      courseA_maze_seq12: "¡Atrapa a ese cerdo! "
      courseA_maze_seq12_2018: "¡Atrapa a ese cerdo! "
      courseA_maze_seq12_2019: "¡Atrapa a ese cerdo! "
      courseA_maze_seq13: "¡Atrapa al cerdo como sea!"
      courseA_maze_seq13_2018: "¡Atrapa al cerdo como sea!"
      courseA_maze_seq13_2019: "¡Atrapa al cerdo como sea!"
      courseA_maze_seq1_2018: "¡Haz que el pájaro llegue al cerdo malo!"
      courseA_maze_seq1_2019: "¡Haz que el pájaro llegue al cerdo malo!"
      courseA_maze_seq2: "¡Cambie el código para traerme al cerdo!"
      courseA_maze_seq2_2018: "¡Cambie el código para traerme al cerdo!"
      courseA_maze_seq3: "¡Arregla el código para que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq3_2018: "¡Arregla el código para que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq4: "¡QUITA un bloque para que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq4_2018: "¡QUITA un bloque para que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq4a: Haz que el pájaro llegue hasta el cerdo con la menor cantidad posible de bloques.
      courseA_maze_seq5: Inténtalo tu mismo/a desde el comienzo.
      courseA_maze_seq5_2018: Prueba este.
      courseA_maze_seq5_2019: Prueba este.
      courseA_maze_seq5a_2018: "¿Qué puedes agregar al final de este código para que el pájaro llegue hasta el cerdo?"
      courseA_maze_seq5a_2019: "¿Qué puedes agregar al final de este código para que el pájaro llegue hasta el cerdo?"
      courseA_maze_seq6: "¡Mueve en una dirección, y luego en otra, para que el pájaro pueda llegar hasta el cerdo!"
      courseA_maze_seq6_2018: "¡Mueve en una dirección, y luego en otra, para que el pájaro pueda llegar hasta el cerdo!"
      courseA_maze_seq6_2019: "¡Mueve en una dirección, y luego en otra, para que el pájaro pueda llegar hasta el cerdo!"
      courseA_maze_seq7: "¡Descubre qué falta y luego agrega bloques para que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq7_2018: "¡Descubre qué falta y luego agrega bloques para que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq8: "¡Resuelve este nivel y haz que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq8_2018: "¡Resuelve este nivel y haz que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq8_2019: "¡Resuelve este nivel y haz que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq9: "¡Añade bloques para depurar este nivel y que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq9_2018: "¡Añade bloques para depurar este nivel y que el pájaro llegue hasta el cerdo!"
      courseA_maze_seq_challenge1: Algo está mal aquí. ¡Ayuda a arreglar el código para que el pájaro llegue hasta el cerdo!
      courseA_maze_seq_challenge1_2018: Algo está mal aquí. ¡Ayuda a arreglar el código para que el pájaro llegue hasta el cerdo!
      courseA_maze_seq_challenge1_2019: Algo está mal aquí. ¡Ayuda a arreglar el código para que el pájaro llegue hasta el cerdo!
      courseA_maze_seq_challenge2: Traza el camino para que el pájaro llegue hasta el cerdo. ¡Evita el TNT o volarán plumas!
      courseA_maze_seq_challenge2_2018: Traza el camino para que el pájaro llegue hasta el cerdo. ¡Evita el TNT o volarán plumas!
      courseA_maze_seq_challenge2_2019: Traza el camino para que el pájaro llegue hasta el cerdo. ¡Evita el TNT o volarán plumas!
      courseA_playLab_events1: Este es un nivel de Laboratorio de juegos. ¡Mueve los bloques al espacio de trabajo y mira lo que ocurre!
      courseA_playLab_events1_2018: Este es un nivel de Laboratorio de juegos. ¡Mueve los bloques al espacio de trabajo y mira lo que ocurre!
      courseA_playLab_events1_2019: Este es un nivel de Laboratorio de juegos. ¡Mueve los bloques al espacio de trabajo y mira lo que ocurre!
      courseA_playLab_events2: Jorge el Perro quiere decir "Hola". ¿Puedes ayudarlo?
      courseA_playLab_events2_2018: Jorge el Perro quiere decir "Hola". ¿Puedes ayudarlo?
      courseA_playLab_events2_2019: Jorge el Perro quiere decir "Hola". ¿Puedes ayudarlo?
      courseA_playLab_events3: Conecta el bloque `mover a la izquierda` al bloque de evento `cuando izquierda` que ya está en el espacio de trabajo.
      courseA_playLab_events3_2018: Conecta el bloque `mover a la izquierda` al bloque de evento `cuando izquierda` que ya está en el espacio de trabajo.
      courseA_playLab_events3_2019: Conecta el bloque `mover a la izquierda` al bloque de evento `cuando izquierda` que ya está en el espacio de trabajo.
      courseA_playLab_events4: Agrega bloques para moverte a la derecha si se hace clic en el botón `derecha`.
      courseA_playLab_events4_2018: Agrega otro bloque de evento para que Jorge se mueva a la derecha si haces clic en el botón `derecha`.
      courseA_playLab_events4_2019: Agrega otro bloque de evento para que Jorge se mueva a la derecha si haces clic en el botón `derecha`.
      courseA_playLab_events5: Agrega eventos para que Jorge se mueva hacia arriba y hacia abajo si se presionan los botones `arriba` y `abajo`.
      courseA_playLab_events5_2018: Agrega eventos para que Jorge se mueva hacia arriba y hacia abajo si se presionan los botones `arriba` y `abajo`.
      courseA_playLab_events5_2019: Agrega eventos para que Jorge se mueva hacia arriba y hacia abajo si se presionan los botones `arriba` y `abajo`.
      courseA_playLab_events6: "¡Hazlo aún más interesante! Cambia el fondo y reproduce un sonido aleatorio cuando se hace clic en Jorge."
      courseA_playLab_events6_2018: "¡Hazlo aún más interesante! Cambia el fondo y reproduce un sonido aleatorio cuando se hace clic en Jorge."
      courseA_playLab_events6_2019: "¡Hazlo aún más interesante! Cambia el fondo y reproduce un sonido aleatorio cuando se hace clic en Jorge."
      courseA_playLab_events7: Agrega todo lo que quieras a este juego. ¿Puedes hacer que el dinosaurio desaparezca cuando Jorge se encuentra con él?
      courseA_playLab_events7_2018: _Juego libre:_ Agrega lo que quieras a este juego.
      courseA_playLab_events7_2019: _Juego libre:_ Agrega lo que quieras a este juego.
      courseA_playlab_events_challenge1: "¿Puedes escribir código para mostrar al resto de mis amigos? Los consejos te ayudarán a desarrollar este proyecto paso a paso."
      courseA_playlab_events_challenge1_2018: "¿Puedes escribir código para mostrar al resto de mis amigos? Los consejos te ayudarán a desarrollar este proyecto paso a paso."
      courseA_playlab_events_challenge1_2019: "¿Puedes escribir código para mostrar al resto de mis amigos? Los consejos te ayudarán a desarrollar este proyecto paso a paso."
      courseA_playlab_events_challenge2: Dale a cada uno algo para hacer cuando hagas clic en ellos.
      courseA_playlab_events_challenge2_2018: Dale a cada uno algo para hacer cuando hagas clic en ellos.
      courseA_playlab_events_challenge2_2019: Dale a cada uno algo para hacer cuando hagas clic en ellos.
      courseA_playlab_events_challengeClone: "¿Dónde están escondidos mis amigos? ¿Puedes escribir el código para mostrar al resto de mis amigos?"
      courseA_toMakeLoopsVideo_Collector: "¡Los bucles te permiten hacer lo que está adentro una y otra vez!"
      courseA_video_events: Necesitas una mejor combinación de laboratorio de juegos/eventos
      courseA_video_events_2018: Necesitas una mejor combinación de laboratorio de juegos/eventos
      courseA_video_events_2019: Necesitas una mejor combinación de laboratorio de juegos/eventos
      courseB_Scrat_ramp1_2018: Para este desafío, ¡junta los bloques y haz clic en "▶ Ejecutar"!
      courseB_Scrat_ramp1_2019: Para este desafío, ¡junta los bloques y haz clic en "▶ Ejecutar"!
      courseB_Scrat_ramp2_2018: Junta todos los bloques para terminar tu código. Luego, haz clic en "▶ Ejecutar".
      courseB_Scrat_ramp2_2019: Junta todos los bloques para terminar tu código. Luego, haz clic en "▶ Ejecutar".
      courseB_Scrat_ramp3a_2018: Agrega un bloque `Norte` en la parte inferior de los otros bloques para terminar este código; luego, haz clic en "▶ Ejecutar".
      courseB_Scrat_ramp3a_2019: Agrega un bloque `Norte` en la parte inferior de los otros bloques para terminar este código; luego, haz clic en "▶ Ejecutar".
      courseB_Scrat_ramp3b_2018: Arrastra el bloque sobrante hacia la barra de herramientas para descartarlo.
      courseB_Scrat_ramp3b_2019: Arrastra el bloque sobrante hacia la barra de herramientas para descartarlo.
      courseB_Scrat_ramp4a_2018: "¿Puedes descubrir qué bloque necesitas agregar al final de los otros bloques para terminar este código?"
      courseB_Scrat_ramp4a_2019: "¿Puedes descubrir qué bloque necesitas agregar al final de los otros bloques para terminar este código?"
      courseB_Scrat_ramp5a_2018: "¡Prueba este tú mismo!"
      courseB_Scrat_ramp5a_2019: "¡Prueba este tú mismo!"
      courseB_artist_loops1: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseB_artist_loops10: Usa lo que has aprendido para dibujar lo que crees que el artista vio cuando llegó a casa.
      courseB_artist_loops10_2018: Usa lo que has aprendido para dibujar lo que crees que el artista vio cuando llegó a casa.
      courseB_artist_loops10_2019: Usa lo que has aprendido para dibujar lo que crees que el artista vio cuando llegó a casa.
      courseB_artist_loops1_2018: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseB_artist_loops1_2019: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      courseB_artist_loops2: El artista está tratando de dibujar una línea **6** veces, pero no puede hacerlo bien. ¿Puedes ayudarlo?
      courseB_artist_loops2_2018: El artista está tratando de dibujar una línea **6** veces, pero no puede hacerlo bien. ¿Puedes ayudarlo?
      courseB_artist_loops2_2019: El artista está tratando de dibujar una línea **6** veces, pero no puede hacerlo bien. ¿Puedes ayudarlo?
      courseB_artist_loops3: Ayuda al artista a dibujar una línea 7 veces para crear un muro en el jardín.
      courseB_artist_loops3_2018: Ayuda al artista a dibujar una línea 7 veces para crear un muro en el jardín.
      courseB_artist_loops3_2019: Ayuda al artista a dibujar una línea 7 veces para crear un muro en el jardín.
      courseB_artist_loops4: 'Ahora tenemos que preparar el suelo para plantar. Encuentra los errores en el código y ayuda al artista a preparar el terreno. '
      courseB_artist_loops4_2018: 'Ahora tenemos que preparar el suelo para plantar. Encuentra los errores en el código y ayuda al artista a preparar el terreno. '
      courseB_artist_loops4_2019: 'Ahora tenemos que preparar el suelo para plantar. Encuentra los errores en el código y ayuda al artista a preparar el terreno. '
      courseB_artist_loops5: "¡Es hora de arreglar las escaleras! Repite este patrón **5** veces para que el artista pueda alcanzar la parte superior de los arbustos."
      courseB_artist_loops5_2018: "¡Es hora de arreglar las escaleras! Repite este patrón **5** veces para que el artista pueda alcanzar la parte superior de los arbustos."
      courseB_artist_loops5_2019: "¡Es hora de arreglar las escaleras! Repite este patrón **5** veces para que el artista pueda alcanzar la parte superior de los arbustos."
      courseB_artist_loops6: "¿Subir la viña y ver hasta dónde llega?"
      courseB_artist_loops6_2018: "¿Subir la viña y ver hasta dónde llega?"
      courseB_artist_loops6_2019: "¿Subir la viña y ver hasta dónde llega?"
      courseB_artist_loops7: "**Desafío:** ¡Es un jardín escondido! Vamos a recorrerlo."
      courseB_artist_loops7_2018: "**Desafío:** ¡Es un jardín escondido! Vamos a recorrerlo."
      courseB_artist_loops7_2019: "**Desafío:** ¡Es un jardín escondido! Vamos a recorrerlo."
      courseB_artist_loops8: Es hora de irse a casa. ¿Puedes arreglar esta escalera con un solo bloque para ayudar al artista a bajar?
      courseB_artist_loops8_2018: Es hora de irse a casa. ¿Puedes arreglar esta escalera con un solo bloque para ayudar al artista a bajar?
      courseB_artist_loops8_2019: Es hora de irse a casa. ¿Puedes arreglar esta escalera con un solo bloque para ayudar al artista a bajar?
      courseB_artist_loops9: Tomemos el atajo del estanque. ¿Puedes ayudar al artista a permanecer en las piedras?
      courseB_artist_loops9_2018: Tomemos el atajo del estanque. ¿Puedes ayudar al artista a permanecer en las piedras?
      courseB_artist_loops9_2019: Tomemos el atajo del estanque. ¿Puedes ayudar al artista a permanecer en las piedras?
      courseB_artist_loops_challenge1: |-
        "¡Es hora de tirar los
         dados! ¿Puedes ayudarme a dibujar estos?"
      courseB_artist_loops_challenge1_2018: |-
        "¡Es hora de tirar los
         dados! ¿Puedes ayudarme a dibujar estos?"
      courseB_artist_loops_challenge1_2019: |-
        "¡Es hora de tirar los
         dados! ¿Puedes ayudarme a dibujar estos?"
      courseB_artist_loops_challenge2: Dibuja tantas X como puedas. ¿Puedes lograr 3 en fila?
      courseB_artist_loops_challenge2_2018: Dibuja tantas X como puedas. ¿Puedes lograr 3 en fila?
      courseB_artist_loops_challenge2_2019: Dibuja tantas X como puedas. ¿Puedes lograr 3 en fila?
      courseB_collector_loops1: "¡Ella es Laurel la Aventurera! ¿Puedes moverla para obtener tesoros?"
      courseB_collector_loops10: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseB_collector_loops10_2018: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseB_collector_loops10_2019: Ayuda a Laurel a obtener todo el tesoro de esta cueva.
      courseB_collector_loops11: "¡Eureka! ¡Consigue todos los tesoros que puedas!"
      courseB_collector_loops11_2018: "¡Eureka! ¡Consigue todos los tesoros que puedas!"
      courseB_collector_loops11_2019: "¡Eureka! ¡Consigue todos los tesoros que puedas!"
      courseB_collector_loops1_2018: "¡Debes conseguir al menos una pieza del tesoro sin errores para pasar!"
      courseB_collector_loops1_2019: "¡Debes conseguir al menos una pieza del tesoro sin errores para pasar!"
      courseB_collector_loops2: Debes obtener los cuatro montones para pasar este nivel.
      courseB_collector_loops2_2018: Debes obtener los cuatro montones para pasar este nivel.
      courseB_collector_loops2_2019: Debes obtener los cuatro montones para pasar este nivel.
      courseB_collector_loops3: "¿Cómo puedes hacer que Laurel consiga los cinco montones del tesoro con un solo bloque `E ->`?"
      courseB_collector_loops3_2018: "¿Cómo puedes hacer que Laurel consiga los cinco montones del tesoro con un solo bloque `E ->`?"
      courseB_collector_loops3_2019: "¿Cómo puedes hacer que Laurel consiga los cinco montones del tesoro con un solo bloque `E ->`?"
      courseB_collector_loops3_predict1: "¿Cómo puede Laurel recoger los cinco montones de oro con un solo bloque `E ->`?"
      courseB_collector_loops4: "¡Arregla el camino de Laurel para conseguir todo el tesoro!"
      courseB_collector_loops4_2018: "¡Arregla el camino de Laurel para conseguir todo el tesoro!"
      courseB_collector_loops4_2019: "¡Arregla el camino de Laurel para conseguir todo el tesoro!"
      courseB_collector_loops5: 'Agrégalo al código del último desafío para obtener todo el tesoro. '
      courseB_collector_loops5_2018: 'Agrégalo al código del último desafío para obtener todo el tesoro. '
      courseB_collector_loops5_2019: 'Agrégalo al código del último desafío para obtener todo el tesoro. '
      courseB_collector_loops6: "¡Descubre el código para ayudar a Laurel a obtener todo el tesoro!"
      courseB_collector_loops6_2018: "¡Descubre el código para ayudar a Laurel a obtener todo el tesoro!"
      courseB_collector_loops6_2019: "¡Descubre el código para ayudar a Laurel a obtener todo el tesoro!"
      courseB_collector_loops7: Escribe el código para obtener todo el tesoro.
      courseB_collector_loops7_2018: Escribe el código para obtener todo el tesoro.
      courseB_collector_loops7_2019: Escribe el código para obtener todo el tesoro.
      courseB_collector_loops8: "**Desafío:** ¡El tesoro baja por estas escaleras! Escribe el código para ayudar a Laurel a conseguirlo."
      courseB_collector_loops8_2018: "**Desafío:** ¡El tesoro baja por estas escaleras! Escribe el código para ayudar a Laurel a conseguirlo."
      courseB_collector_loops8_2019: "**Desafío:** ¡El tesoro baja por estas escaleras! Escribe el código para ayudar a Laurel a conseguirlo."
      courseB_collector_loops9: _"Ayúdame a obtener el tesoro de este valle profundo"._
      courseB_collector_loops9_2018: _"Ayúdame a obtener el tesoro de este valle profundo"._
      courseB_collector_loops9_2019: _"Ayúdame a obtener el tesoro de este valle profundo"._
      courseB_collector_loops_challenge1: 'Esta vez tienes bloques limitados. ¡Obtén todo el tesoro! '
      courseB_collector_loops_challenge1_2018: 'Esta vez tienes bloques limitados. ¡Obtén todo el tesoro! '
      courseB_collector_loops_challenge1_2019: 'Esta vez tienes bloques limitados. ¡Obtén todo el tesoro! '
      courseB_collector_loops_challenge2: "¡Consigamos el tesoro! Ayúdame a cruzar cada fila y luego regresa para comenzar la siguiente fila. ¿Puedes encontrar un patrón?"
      courseB_collector_loops_challenge2_2018: "¡Consigamos el tesoro! Ayúdame a cruzar cada fila y luego regresa para comenzar la siguiente fila. ¿Puedes encontrar un patrón?"
      courseB_collector_loops_challenge2a: Ayuda a Laurel a obtener al menos **5** piezas del tesoro para completar este desafío.
      courseB_collector_loops_challenge2a_2018: Ayuda a Laurel a obtener al menos **5** piezas del tesoro para completar este desafío.
      courseB_collector_loops_challenge2a_2019: Ayuda a Laurel a obtener al menos **5** piezas del tesoro para completar este desafío.
      courseB_collector_loops_challenge`: 'Esta vez solo puedes usar uno de cada bloque de flecha. ¡Obtén todo el tesoro! '
      courseB_collector_prog1: "¡Ella es Laurel la Aventurera! ¿Puedes moverla para obtener tesoros?"
      courseB_collector_prog2: "¡Cuatro montones de oro! Recoge todos."
      courseB_collector_prog3: "¿Cómo puede Laurel recoger los cinco montones de oro con un solo bloque `E ->`?"
      courseB_iceage_loops1: "¡Ayuda a Scrat a cruzar el hielo para llegar hasta la bellota!"
      courseB_iceage_loops10: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops10_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops11: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops11_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops11_forVideo: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops12: "¡Llega a la bellota como sea!"
      courseB_iceage_loops12_2019: "¡Llega a la bellota como sea!"
      courseB_iceage_loops1_2019: "¡Ayuda a Scrat a cruzar el hielo para llegar hasta la bellota!"
      courseB_iceage_loops2: "¡Utiliza dos bloques diferentes de movimientos para llegar a la bellota!"
      courseB_iceage_loops2_2019: "¡Utiliza dos bloques diferentes de movimientos para llegar a la bellota!"
      courseB_iceage_loops3: "¿Puedes alcanzar la bellota con un solo bloque `W`?"
      courseB_iceage_loops3_2019: "¿Puedes alcanzar la bellota con un solo bloque `W`?"
      courseB_iceage_loops4: "¡Añade un bloque más para que Scrat llegue hasta la bellota!"
      courseB_iceage_loops4_2019: "¡Añade un bloque más para que Scrat llegue hasta la bellota!"
      courseB_iceage_loops5: "¿Puedes agregar un bucle más para llegar a la bellota?"
      courseB_iceage_loops6: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseB_iceage_loops6_2019: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseB_iceage_loops7: "¡Scrat realmente quiere esa bellota! "
      courseB_iceage_loops7_2019: "¡Scrat realmente quiere esa bellota! "
      courseB_iceage_loops8: "¿Puedes arreglar este código? "
      courseB_iceage_loops8_2019: "¿Puedes arreglar este código? "
      courseB_iceage_loops9: "¡La bellota está muy lejos! ¿Puedes utilizar los bucles para ayudar a Scrat a llegar hasta allí?"
      courseB_iceage_loops9_2019: "¡La bellota está muy lejos! ¿Puedes utilizar los bucles para ayudar a Scrat a llegar hasta allí?"
      courseB_maze_seq1: "¡Juega con estos bloques y mira lo que le hacen hacer al pájaro! \n\nHaz que el pájaro llegue hasta el cerdo para completar el nivel."
      courseB_maze_seq10: Arregla los errores para que el pájaro llegue hasta el cerdo.
      courseB_maze_seq10_2018: Arregla los errores para que Scrat llegue hasta la bellota.
      courseB_maze_seq10_2019: Arregla los errores para que Scrat llegue hasta la bellota.
      courseB_maze_seq11: "¡Depende de ti! Haz que el pájaro llegue hasta el cerdo."
      courseB_maze_seq11_2018: "¡Depende de ti! Haz que Scrat llegue hasta la bellota."
      courseB_maze_seq11_2019: "¡Depende de ti! Haz que Scrat llegue hasta la bellota."
      courseB_maze_seq12: "¡Ahora consigue ese cerdo como sea!"
      courseB_maze_seq12_2018: "¡Ahora consigue esa bellota como sea!"
      courseB_maze_seq12_2019: "¡Ahora consigue esa bellota como sea!"
      courseB_maze_seq1_2018: "¡Juega con estos bloques y mira lo que le hacen hacer a Scrat! \n\nHaz que Scrat llegue hasta la bellota para completar el nivel."
      courseB_maze_seq1_2019: "¡Juega con estos bloques y mira lo que le hacen hacer a Scrat! \n\nHaz que Scrat llegue hasta la bellota para completar el nivel."
      courseB_maze_seq2: _"¡Hay un error! Arregla el código para llevarme hasta el cerdo."_
      courseB_maze_seq2_2018: "¡Hay un error! ¡Arregla el código para que Scrat llegue hasta la bellota!"
      courseB_maze_seq3: '"¡Arregla el código para llevarme hasta el cerdo!"'
      courseB_maze_seq4: Agrega 2 bloques para que el pájaro llegue hasta el cerdo.
      courseB_maze_seq4_2018: Usa **2** bloques de movimiento para que Scrat llegue hasta la bellota.
      courseB_maze_seq4_2019: Usa **2** bloques de movimiento para que Scrat llegue hasta la bellota.
      courseB_maze_seq5: "¡Ahora intenta con este desafío desde el comienzo!"
      courseB_maze_seq5_2018: "¡Este desafío es un poco complicado!"
      courseB_maze_seq5_2019: "¡Este desafío es un poco complicado!"
      courseB_maze_seq6: "¡Mueve en una dirección, y luego en otra, para que el pájaro pueda llegar hasta el cerdo!"
      courseB_maze_seq6_2018: "¡Muévete de un lado a otro para que Scrat llegue hasta la bellota!"
      courseB_maze_seq6_2019: "¡Muévete de un lado a otro para que Scrat llegue hasta la bellota!"
      courseB_maze_seq7: "¡Descubre qué falta y luego agrega bloques para que el pájaro llegue hasta el cerdo!"
      courseB_maze_seq7_2018: "¡Averigua lo que falta y añade bloques para que Scrat llegue hasta la bellota!"
      courseB_maze_seq7_2019: "¡Averigua lo que falta y añade bloques para que Scrat llegue hasta la bellota!"
      courseB_maze_seq8: "¡Es tu turno! ¿Qué tienes que hacer para que el pájaro llegue hasta el cerdo?"
      courseB_maze_seq8_2018: "¡Es tu turno! ¿Qué tienes que hacer para que Scrat llegue hasta la bellota?"
      courseB_maze_seq8_2019: "¡Es tu turno! ¿Qué tienes que hacer para que Scrat llegue hasta la bellota?"
      courseB_maze_seq9: 'Desafío: Rodea el TNT para que el pájaro llegue hasta el cerdo.'
      courseB_maze_seq9_2018: 'Desafío: Rodea el hielo roto para que Scrat llegue hasta la bellota.'
      courseB_maze_seq9_2019: 'Desafío: Rodea el hielo roto para que Scrat llegue hasta la bellota.'
      courseB_maze_seq9_challenge1: _¿Dónde se esconde el cerdo ahora?_
      courseB_maze_seqCold: 'Desafío: ¡Añade bloques para depurar este nivel y que el pájaro llegue hasta el cerdo!'
      courseB_maze_seqOld: "¡Rodea el TNT para que el pájaro llegue hasta el cerdo! "
      courseB_maze_seq_challenge1: "¿Puedes encontrar un camino antes de que se te acaben los bloques?"
      courseB_maze_seq_challenge1_2018: "¿Puedes encontrar un camino antes de que se te acaben los bloques?"
      courseB_maze_seq_challenge1_2019: "¿Puedes encontrar un camino antes de que se te acaben los bloques?"
      courseB_maze_seq_challenge2: Depura este nivel. ¡Estos son los bloques correctos, pero están en el orden equivocado!
      courseB_maze_seq_challenge2_2018: Depura este nivel. ¡Estos son los bloques correctos, pero están en el orden equivocado!
      courseB_maze_seq_challenge2_2019: Depura este nivel. ¡Estos son los bloques correctos, pero están en el orden equivocado!
      courseB_playLab_events1: Intenta averiguar qué hace cada bloque.
      courseB_playLab_events1_2018: Intenta averiguar qué hace cada bloque.
      courseB_playLab_events1_2019: Intenta averiguar qué hace cada bloque.
      courseB_playlab_events2: Haz que Daisy la Dragón diga algo cuando haces clic en "Ejecutar".
      courseB_playlab_events2_2018: Haz que Daisy la Dragón diga algo cuando haces clic en "Ejecutar".
      courseB_playlab_events2_2019: Haz que Daisy la Dragón diga algo cuando haces clic en "Ejecutar".
      courseB_playlab_events3: Usa un evento para que Daisy la Dragón cambie a un estado de ánimo aleatorio cada vez que haces clic sobre ella.
      courseB_playlab_events3_2018: Usa un evento para que Daisy la Dragón cambie a un estado de ánimo aleatorio cada vez que haces clic sobre ella.
      courseB_playlab_events3_2019: Usa un evento para que Daisy la Dragón cambie a un estado de ánimo aleatorio cada vez que haces clic sobre ella.
      courseB_playlab_events4: "¡Es tiempo de caballeros! Añade un evento para que el caballero se mueva hacia el dragón cada vez que se hace clic en la flecha izquierda."
      courseB_playlab_events4_2018: "¡Consigue el dragón para completar este nivel!"
      courseB_playlab_events4_2019: "¡Consigue el dragón para completar este nivel!"
      courseB_playlab_events5: Ahora añade un evento para que el caballero huya del dragón si presionas la flecha derecha.
      courseB_playlab_events5_2018: Añade un evento para que el caballero huya del dragón si presionas la flecha derecha.
      courseB_playlab_events5_2019: Añade un evento para que el caballero huya del dragón si presionas la flecha derecha.
      courseB_playlab_events6: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!

        Para ello, necesitarás añadir eventos que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events6_2018: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!

        Para ello, necesitarás añadir eventos que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events6_2019: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!

        Para ello, necesitarás añadir eventos que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events7: "¿Quieres que este juego sea aún más divertido? Haz que el caballero se desvanezca cuando se encuentre con el dragón mientras busca las banderas y, para que parezca más real, reproduce un sonido cada vez que choquen."
      courseB_playlab_events7_2018: "1.  Haz que el caballero se desvanezca cuando se encuentre con el dragón.   \n2.  Reproduce un sonido cuando choquen para que parezca más real.  "
      courseB_playlab_events7_2019: "1.  Haz que el caballero se desvanezca cuando se encuentre con el dragón.   \n2.  Reproduce un sonido cuando choquen para que parezca más real.  "
      courseB_playlab_events8: Usa tu imaginación. ¿Qué puedes hacer para que este juego sea más divertido?
      courseB_playlab_eventsFP: Usa tu imaginación. ¿Qué puedes hacer para que este juego sea más divertido?
      courseB_playlab_eventsFP_2018: "**Juego libre.** Usa tu imaginación. ¿Qué puedes hacer para que este juego sea más divertido?"
      courseB_playlab_eventsFP_2019: "**Juego libre.** Usa tu imaginación. ¿Qué puedes hacer para que este juego sea más divertido?"
      courseB_playlab_eventsToolbox: Para terminar, ¡reproduce un sonido y haz que el caballero se desvanezca cuando se encuentra con el dragón!
      courseB_playlab_events_challenge1: 'Haz que los animales se muevan hacia abajo si presionas ▼. '
      courseB_playlab_events_challenge1_2018: 'Haz que los animales se muevan hacia abajo si presionas ▼. '
      courseB_playlab_events_challenge1_2019: 'Haz que los animales se muevan hacia abajo si presionas ▼. '
      courseB_playlab_events_challenge2: Haz que los animales desaparezcan si haces clic en ellos.
      courseB_playlab_events_challenge2_2018: Haz que los animales desaparezcan si haces clic en ellos.
      courseB_playlab_events_challenge2_2019: Haz que los animales desaparezcan si haces clic en ellos.
      courseB_playlab_events_challenge2_embed: "¡Aquí está tu juego terminado!"
      courseB_playlab_events_challenge2_template: "¡Hagamos que los animales desaparezcan si haces clic en ellos! ¡También puedes agregar sonidos y ganar puntos para crear un divertido juego de Animal Tag!"
      courseB_playlab_events_challenge2_template_2018: "¡Hagamos que los animales desaparezcan si haces clic en ellos! ¡También puedes agregar sonidos y ganar puntos para crear un divertido juego de Animal Tag!"
      courseB_playlab_events_challenge2_template_2019: "¡Hagamos que los animales desaparezcan si haces clic en ellos! ¡También puedes agregar sonidos y ganar puntos para crear un divertido juego de Animal Tag!"
      courseB_scrat_forVideo: "¡Consigue la bellota!"
      courseB_starWars_prog1: '"¡Ve por la chatarra, BB-8!"'
      courseB_starWars_prog10: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog10_2018: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog10_2019: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog11: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog11_2018: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog11_2019: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog1_2018: '"¡Ve por la chatarra, BB-8!"'
      courseB_starWars_prog1_2019: '"¡Ve por la chatarra, BB-8!"'
      courseB_starWars_prog2: Consigue todo el metal.
      courseB_starWars_prog2_2018: Consigue todo el metal.
      courseB_starWars_prog2_2019: Consigue todo el metal.
      courseB_starWars_prog3: Consigue toda la chatarra
      courseB_starWars_prog3_2018: Consigue toda la chatarra
      courseB_starWars_prog3_2019: Consigue toda la chatarra
      courseB_starWars_prog4: Consigue toda la chatarra
      courseB_starWars_prog4_2018: Consigue toda la chatarra
      courseB_starWars_prog4_2019: Consigue toda la chatarra
      courseB_starWars_prog5: Consigue la chatarra
      courseB_starWars_prog5_2018: Consigue la chatarra
      courseB_starWars_prog5_2019: Consigue la chatarra
      courseB_starWars_prog6: Consigue toda la chatarra
      courseB_starWars_prog6_2018: Consigue toda la chatarra
      courseB_starWars_prog6_2019: Consigue toda la chatarra
      courseB_starWars_prog7: "¡Ve a buscarla!"
      courseB_starWars_prog7_2018: "¡Ve a buscarla!"
      courseB_starWars_prog7_2019: "¡Ve a buscarla!"
      courseB_starWars_prog8: "\\*\\* Desafío: \\*\\* Ayuda BB-8 a recoger la chatarra que brilla intensamente"
      courseB_starWars_prog8_2018: "\\*\\* Desafío: \\*\\* Ayuda BB-8 a recoger la chatarra que brilla intensamente"
      courseB_starWars_prog8_2019: "\\*\\* Desafío: \\*\\* Ayuda BB-8 a recoger la chatarra que brilla intensamente"
      courseB_starWars_prog9: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog9_2018: Ayuda a BB-8 a recoger la chatarra brillante
      courseB_starWars_prog9_2019: Ayuda a BB-8 a recoger la chatarra brillante
      courseC19_playLab_EOC1: Escoge un fondo y un mapa, y luego un actor para que sea el héroe de tu juego.
      courseC19_playLab_EOC2: Usa eventos y acciones para que tu héroe se mueva. Llega a los objetivos.
      courseC19_playLab_EOC3: Agrega dos o más actores a tu juego y haz que se muevan.
      courseC19_playLab_EOC4: Encuentra formas interesantes de cambiar el puntaje en tu juego. Obtén el puntaje para mostrar algo más que 0 para continuar.
      courseC19_playLab_EOC5: "¡Buen trabajo! Tienes todos los componentes básicos de un juego que funciona. Ahora pasa algo de tiempo asegurándote de que el juego funcione de la manera que quieres."
      courseC19_playLab_EOC6: "¡Has terminado! Ahora puedes jugar tu juego o compartirlo con tus amigos o compañeros!"
      courseC_PlayLab_events1: Haz que Jorge el Perro (actor 1) diga "Hola".
      courseC_PlayLab_events1_2018: Haz que Jorge el Perro (actor 1) diga "Hola".
      courseC_PlayLab_events1_2019: Haz que Jorge el Perro (actor 1) diga "Hola".
      courseC_PlayLab_events2: "¿Puedes hacer que Jorge el Perro (actor 1) diga algo y que Olivia la Gata (actor 2) diga algo después?"
      courseC_PlayLab_events2_2018: "¿Puedes hacer que Jorge el Perro (actor 1) diga algo y que Olivia la Gata (actor 2) diga algo después?"
      courseC_PlayLab_events2_2019: "¿Puedes hacer que Jorge el Perro (actor 1) diga algo y que Olivia la Gata (actor 2) diga algo después?"
      courseC_PlayLab_events3: "¿Puedes escribir un programa para que Jorge (actor 1) se mueva hacia Olive el Gato?"
      courseC_PlayLab_events3_2018: "¿Puedes escribir un programa para que Jorge (actor 1) se mueva hacia Olive el Gato?"
      courseC_PlayLab_events3_2019: "¿Puedes escribir un programa para que Jorge (actor 1) se mueva hacia Olive el Gato?"
      courseC_PlayLab_events4: ¿Puedes escribir un programa que haga que Jorge (actor 1) se mueva hasta Olivia la Gata, y que Olivia diga "Hola" cuando Jorge la alcance?
      courseC_PlayLab_events4_2018: ¿Puedes escribir un programa que haga que Jorge (actor 1) se mueva hasta Olivia la Gata, y que Olivia diga "Hola" cuando Jorge la alcance?
      courseC_PlayLab_events4_2019: ¿Puedes escribir un programa que haga que Jorge (actor 1) se mueva hasta Olivia la Gata, y que Olivia diga "Hola" cuando Jorge la alcance?
      courseC_PlayLab_events5: ¿Puedes escribir un programa para hacer que Octavia la Pulpo diga "¿Qué hay de nuevo?" cuando se hace clic sobre ella?
      courseC_PlayLab_events5_2018: ¿Puedes escribir un programa para hacer que Octavia la Pulpo diga "¿Qué hay de nuevo?" cuando se hace clic sobre ella?
      courseC_PlayLab_events5_2019: ¿Puedes escribir un programa para hacer que Octavia la Pulpo diga "¿Qué hay de nuevo?" cuando se hace clic sobre ella?
      courseC_PlayLab_events6: Ahora, escribe un programa para que Waddles el Pingüino se mueva con las teclas arriba / abajo / izquierda / derecha para tocar a todos los objetivos.
      courseC_PlayLab_events6_2018: Ahora, escribe un programa para que Waddles el Pingüino se mueva con las teclas arriba / abajo / izquierda / derecha para tocar a todos los objetivos.
      courseC_PlayLab_events6_2019: Ahora, escribe un programa para que Waddles el Pingüino se mueva con las teclas arriba / abajo / izquierda / derecha para tocar a todos los objetivos.
      courseC_PlayLab_events7: El bloque `repetir siempre` te permite ejecutar el código una y otra vez. Usa este bloque para mover a Chomp el Dinosaurio (actor 2) hacia arriba y abajo por 400 pixeles para siempre.
      courseC_PlayLab_events7_2018: El bloque `repetir siempre` te permite ejecutar el código una y otra vez. Usa este bloque para mover a Chomp el Dinosaurio (actor 2) hacia arriba y abajo por 400 pixeles para siempre.
      courseC_PlayLab_events7_2019: El bloque `repetir siempre` te permite ejecutar el código una y otra vez. Usa este bloque para mover a Chomp el Dinosaurio (actor 2) hacia arriba y abajo por 400 pixeles para siempre.
      courseC_PlayLab_events8: ¿Puedes hacer que Waddles (actor 1) diga "¡Ouch!" y reproduzca un sonido de "golpe" si choca con Chomp? Cuando termines, juega para que esto suceda.
      courseC_PlayLab_events8_2018: ¿Puedes hacer que Waddles (actor 1) diga "¡Ouch!" y reproduzca un sonido de "golpe" si choca con Chomp? Cuando termines, juega para que esto suceda.
      courseC_PlayLab_events8_2019: ¿Puedes hacer que Waddles (actor 1) diga "¡Ouch!" y reproduzca un sonido de "golpe" si choca con Chomp? Cuando termines, juega para que esto suceda.
      courseC_PlayLab_events9: "¿Puedes agregar un bloque para anotar un punto cuando Waddles el Pingüino (actor 1) choque con Octavia la Pulpo (actor 3)? \n¡Juega y mueve a Waddles con las flechas hasta que anotes!"
      courseC_PlayLab_events9_2018: "¿Puedes agregar un bloque para anotar un punto cuando Waddles el Pingüino (actor 1) choque con Octavia la Pulpo (actor 3)? \n¡Juega y mueve a Waddles con las flechas hasta que anotes!"
      courseC_PlayLab_events9_2019: "¿Puedes agregar un bloque para anotar un punto cuando Waddles el Pingüino (actor 1) choque con Octavia la Pulpo (actor 3)? \n¡Juega y mueve a Waddles con las flechas hasta que anotes!"
      courseC_PlayLab_eventsA: |-
        Agrega bloques al evento `cuando se ejecuta` para cambiar el fondo y la velocidad de Waddles el Pingüino.

        Juega y mueve a Waddles con las flechas hasta que anotes.
      courseC_PlayLab_eventsA_2018: |-
        Agrega bloques al evento `cuando se ejecuta` para cambiar el fondo y la velocidad de Waddles el Pingüino.

        Juega y mueve a Waddles con las flechas hasta que anotes.
      courseC_PlayLab_eventsA_2019: |-
        Agrega bloques al evento `cuando se ejecuta` para cambiar el fondo y la velocidad de Waddles el Pingüino.

        Juega y mueve a Waddles con las flechas hasta que anotes.
      courseC_PlayLab_eventsA_embed_2019: Juguemos un juego. ¡Anota 5 puntos moviendo el Pingüino hacia el Pulpo!
      courseC_PlayLab_eventsFP: Crea tu propia historia. Cuando termines, haz clic en "Finalizar" para compartirla con tus amigos. Mira ideas de historias en las pistas.
      courseC_PlayLab_eventsFP_2018: Crea tu propia historia. Cuando termines, haz clic en "Finalizar" para compartirla con tus amigos. Mira ideas de historias en las pistas.
      courseC_PlayLab_eventsFP_2019: Crea tu propia historia. Cuando termines, haz clic en "Finalizar" para compartirla con tus amigos. Mira ideas de historias en las pistas.
      courseC_PlayLab_events_challenge1: "Usa un nuevo bloque para que Waddles regrese automáticamente al inicio si se encuentra con el Dinosaurio y si anota un punto. \nJuega y mueve a Waddles con las flechas hasta que anotes suficientes puntos."
      courseC_PlayLab_events_challenge1_2018: "Usa un nuevo bloque para que Waddles regrese automáticamente al inicio si se encuentra con el Dinosaurio y si anota un punto. \nJuega y mueve a Waddles con las flechas hasta que anotes suficientes puntos."
      courseC_PlayLab_events_challenge1_2019: "Usa un nuevo bloque para que Waddles regrese automáticamente al inicio si se encuentra con el Dinosaurio y si anota un punto. \nJuega y mueve a Waddles con las flechas hasta que anotes suficientes puntos."
      courseC_PlayLab_events_challenge1_xy_blocks: |-
        Este es un nuevo bloque un poco más complicado. Se usa para mover a Waddles de vuelta al inicio cuando se encuentra con el Dinosaurio y cuando anota un punto. ¡Así tu juego será más desafiante y divertido!

        Juega y mueve a Waddles con las flechas hasta que anotes suficientes puntos.
      courseC_artist_loop1: "¡Agreguemos un poco de dinamismo!"
      courseC_artist_loop1_2018: Agreguemos un poco de dinamismo con un bloque `establecer patrón`.
      courseC_artist_loop1_2019: Agreguemos un poco de dinamismo con un bloque `establecer patrón`.
      courseC_artist_loops1: "_\"Zombie. ¡Dibuja!\"_\n\nEl zombie quiere dibujar una línea desde donde está hasta el jardín de girasoles. ¿Puedes ayudarlo?  \n_(El jardín está a 250 pixeles de distancia)_  "
      courseC_artist_loops1a: 'Lleva al artista al centro del área de juego, y luego dibuja un pájaro con un sticker. '
      courseC_artist_loops1a_2018: 'Lleva al artista al centro del área de juego, y luego dibuja un pájaro con un sticker. '
      courseC_artist_loops1a_2019: 'Lleva al artista al centro del área de juego, y luego dibuja un sticker. '
      courseC_artist_loops1b_2019: 'Agrega un comando `girar` a tu código para cambiar la orientación de tu sticker. '
      courseC_artist_loops2: Ahora que el zombie sabe por dónde ir, ¡ayúdalo a cavar agujeros a lo largo del camino para plantar más flores!
      courseC_artist_loops2a: Ahora usa un bucle para que tu pájaro dé vueltas 12 veces con un giro de 30 grados.
      courseC_artist_loops2a_2018: Ahora usa un bucle para que tu pájaro dé vueltas 12 veces con un giro de 30 grados.
      courseC_artist_loops2a_2019: Ahora, usa un bucle para hacer más copias de tu sticker. Intenta cambiar los números en los bloques 'girar' y 'repetir' para crear diferentes patrones.
      courseC_artist_loops3: "¡Excelente! Ahora que las flores han brotado, ayuda al zombie a colocar a un amigo cada 50 pixeles para que las proteja hasta que crezcan."
      courseC_artist_loops3a: "¡Ahora agrega un murciélago!"
      courseC_artist_loops3a_2018: "¡Ahora agrega un murciélago!"
      courseC_artist_loops3a_2019: "¡Ahora agrega un segundo sticker!"
      courseC_artist_loops4: "¡El zombie ha encontrado una granja vacía! ¿Puedes ayudarlo a estampar stickers de animales cada 100 pixeles alrededor del borde para darle vida?"
      courseC_artist_loops4a: Intenta saltar 75 pixeles hacia adelante.
      courseC_artist_loops4a_2018: Intenta saltar 75 pixeles hacia adelante.
      courseC_artist_loops4a_2019: Edita tu código para saltar entre los dibujos de los dos stickers.
      courseC_artist_loops5: "¡Genial! Llegó el momento de hacer una cerca adentro para mantener a los animales afuera.   "
      courseC_artist_loops5a: "¡Prueba nuevos stickers!"
      courseC_artist_loops5a_2018: "¡Prueba nuevos stickers!"
      courseC_artist_loops5a_2019: "¡Prueba nuevos stickers!"
      courseC_artist_loops5b: "¡Prueba agregando líneas!"
      courseC_artist_loops5b_2018: "¡Prueba agregando líneas!"
      courseC_artist_loops5b_2019: "¡Prueba agregando líneas!"
      courseC_artist_loops6: "¿Qué debe poner el zombie dentro del jardín?  "
      courseC_artist_loops6a: "¡Agrega otro sticker!"
      courseC_artist_loops6a_2018: "¡Agrega otro sticker!"
      courseC_artist_loops6a_2019: "¡Agrega otro sticker!"
      courseC_artist_loops7a: Juega con los bucles y los ángulos.
      courseC_artist_loops7a_2018: Juega con los bucles y los ángulos.
      courseC_artist_loops7a_2019: Juega con los bucles y los ángulos.
      courseC_artist_loops8a: "¡Ahora intenta algo por tu cuenta!"
      courseC_artist_loops8a_2018: "¡Ahora intenta algo por tu cuenta!"
      courseC_artist_loops8a_2019: "¡Ahora intenta algo por tu cuenta!"
      courseC_artist_loopsPre1a: "¡Es hora de girar esa línea!"
      courseC_artist_loopsPre1a_2018: "¡Es hora de girar esa línea!"
      courseC_artist_loopsPre1a_2019: "¡Es hora de girar esa línea!"
      courseC_artist_loopsPrePre1a: 'Lleva al artista hasta el centro del área de juego y luego dibuja una línea. '
      courseC_artist_loopsPrePre1a_2018: 'Lleva al artista hasta el centro del área de juego y luego dibuja una línea. '
      courseC_artist_loopsPrePre1a_2019: 'Lleva al artista hasta el centro del área de juego y luego dibuja una línea. '
      courseC_artist_loopsTemplate: "¡Excelente! Ahora que las flores han brotado, ayuda al zombie a colocar a un amigo cada 50 pixeles para que las proteja hasta que crezcan."
      courseC_artist_loopsTemplateA: 'Lleva al artista al centro del área de juego, y luego dibuja un pájaro con un sticker. '
      courseC_artist_loopsTemplateA_2018: 'Lleva al artista al centro del área de juego, y luego dibuja un pájaro con un sticker. '
      courseC_artist_loopsTemplateA_2019: 'Lleva al artista al centro del área de juego, y luego dibuja un pájaro con un sticker. '
      courseC_artist_prog1: "¡Juega con los bloques de la caja de herramientas para ver lo que hacen!"
      courseC_artist_prog1_2018: "¡Juega con los bloques de la caja de herramientas para ver lo que hacen!"
      courseC_artist_prog1_2019: "¡Juega con los bloques de la caja de herramientas para ver lo que hacen!"
      courseC_artist_prog2: Arrastra bloques a la pantalla para que el artista dibuje sobre las líneas grises de la imagen (cada línea tiene una longitud de 100 pixeles).
      courseC_artist_prog2_2018: Arrastra bloques a la pantalla para que el artista dibuje sobre las líneas grises de la imagen (cada línea tiene una longitud de 100 pixeles).
      courseC_artist_prog2_2019: Arrastra bloques a la pantalla para que el artista dibuje sobre las líneas grises de la imagen (cada línea tiene una longitud de 100 pixeles).
      courseC_artist_prog3: Cada lado del cuadrado interior tiene 100 pixeles y todos los ángulos son de 90 grados.
      courseC_artist_prog3_2018: Cada lado del cuadrado interior tiene 100 pixeles y todos los ángulos son de 90 grados.
      courseC_artist_prog3_2019: Cada lado del cuadrado interior tiene 100 pixeles y todos los ángulos son de 90 grados.
      courseC_artist_prog4: Termina el cohete de Starla para que pueda perseguir a su mascota.
      courseC_artist_prog4_2018: Termina el cohete de Starla para que pueda perseguir a su mascota.
      courseC_artist_prog4_2019: Termina el cohete de Starla para que pueda perseguir a su mascota.
      courseC_artist_prog5: Dibuja un rectángulo alrededor del exterior para terminar esta etiqueta (los lados largos tienen 200 pixeles cada uno y los lados cortos, 100 pixeles)
      courseC_artist_prog5_2018: Dibuja un rectángulo alrededor del exterior para terminar esta etiqueta (los lados largos tienen 200 pixeles cada uno y los lados cortos, 100 pixeles)
      courseC_artist_prog5_2019: Dibuja un rectángulo alrededor del exterior para terminar esta etiqueta (los lados largos tienen 200 pixeles cada uno y los lados cortos, 100 pixeles)
      courseC_artist_prog6: Dibuja este diamante con lados de 200 pixeles.
      courseC_artist_prog6_2018: Dibuja este diamante con lados de 200 pixeles.
      courseC_artist_prog6_2019: Dibuja este diamante con lados de 200 pixeles.
      courseC_artist_prog7: "**Desafío:** ¡Esta etiqueta es especial! ¿Puedes descubrir cómo dibujar el contorno?"
      courseC_artist_prog7_2018: "**Desafío:** ¡Esta etiqueta es especial! ¿Puedes descubrir cómo dibujar el contorno?"
      courseC_artist_prog7_2019: "**Desafío:** ¡Esta etiqueta es especial! ¿Puedes descubrir cómo dibujar el contorno?"
      courseC_artist_prog8: "Una etiqueta más. Este es un triángulo para Pi. \n(Cada lado tiene 150 pixeles)"
      courseC_artist_prog8_2018: "Una etiqueta más. Este es un triángulo para Pi. \n(Cada lado tiene 150 pixeles)"
      courseC_artist_prog8_2019: "Una etiqueta más. Este es un triángulo para Pi. \n(Cada lado tiene 150 pixeles)"
      courseC_artist_prog_challenge1-doghouse: "¡Vamos a construir una casa para Jorge!"
      courseC_artist_prog_challenge1: 'Dibuja habitaciones para cada uno de los animales. '
      courseC_artist_prog_challenge1_2018: 'Dibuja habitaciones para cada uno de los animales. '
      courseC_artist_prog_challenge1_2019: 'Dibuja habitaciones para cada uno de los animales. '
      courseC_artist_prog_challenge2: _¡Ayúdame a pintar de amarillo las líneas en este camino!_
      courseC_artist_prog_challenge2a: _¡Ayúdame a pintar de amarillo las líneas en este camino!_
      courseC_artist_prog_challenge2a_2018: _¡Ayúdame a pintar de amarillo las líneas en este camino!_
      courseC_artist_prog_challenge2a_2019: _¡Ayúdame a pintar de amarillo las líneas en este camino!_
      courseC_collector_loops_challenge2: "¡Obtén al menos **5** piezas del tesoro!"
      courseC_collector_loops_challenge2_2018: "¡Obtén al menos **5** piezas del tesoro!"
      courseC_collector_loops_challenge2_2019: "¡Obtén al menos **5** piezas del tesoro!"
      courseC_collector_prog1: Juega con los bloques para ver si puedes ayudar a Laurel a recoger algún tesoro.
      courseC_collector_prog1_2018: Juega con los bloques para ver si puedes ayudar a Laurel a recoger algún tesoro.
      courseC_collector_prog1_2019: Juega con los bloques para ver si puedes ayudar a Laurel a recoger algún tesoro.
      courseC_collector_prog2: Mueve a Laurel hacia el tesoro y luego usa `recolectar` para recogerlo.
      courseC_collector_prog2_2018: Mueve a Laurel hacia el tesoro y luego usa `recolectar` para recogerlo.
      courseC_collector_prog2_2019: Mueve a Laurel hacia el tesoro y luego usa `recolectar` para recogerlo.
      courseC_collector_prog3: Ordena estos bloques para recoger el tesoro y resolver el desafío.
      courseC_collector_prog3_2018: Ordena estos bloques para recoger el tesoro y resolver el desafío.
      courseC_collector_prog3_2019: Ordena estos bloques para recoger el tesoro y resolver el desafío.
      courseC_collector_prog4: Ordena estos bloques para recoger todo el tesoro y resolver el desafío.
      courseC_collector_prog4_2018: Ordena estos bloques para recoger todo el tesoro y resolver el desafío.
      courseC_collector_prog4_2019: Ordena estos bloques para recoger todo el tesoro y resolver el desafío.
      courseC_collector_prog5: Estos bloques están en el orden equivocado. ¿Puedes corregirlos?
      courseC_collector_prog5_2018: Estos bloques están en el orden equivocado. ¿Puedes corregirlos?
      courseC_collector_prog5_2019: Estos bloques están en el orden equivocado. ¿Puedes corregirlos?
      courseC_collector_prog6: Reorganiza los bloques para recoger todo el tesoro.
      courseC_collector_prog6_2018: Reorganiza los bloques para recoger todo el tesoro.
      courseC_collector_prog6_2019: Reorganiza los bloques para recoger todo el tesoro.
      courseC_collector_prog7: Utiliza bloques de la caja de herramientas para recoger todo el tesoro.
      courseC_collector_prog7_2018: Utiliza bloques de la caja de herramientas para recoger todo el tesoro.
      courseC_collector_prog7_2019: Utiliza bloques de la caja de herramientas para recoger todo el tesoro.
      courseC_collector_prog8: _"¡Sigue trabajando así de bien! Ayúdame a recoger todo el tesoro"._
      courseC_collector_prog8_2018: _"¡Sigue trabajando así de bien! Ayúdame a recoger todo el tesoro"._
      courseC_collector_prog8_2019: _"¡Sigue trabajando así de bien! Ayúdame a recoger todo el tesoro"._
      courseC_collector_prog9: _"¡Recojamos todo el tesoro!"_
      courseC_collector_prog9_2018: _"¡Recojamos todo el tesoro!"_
      courseC_collector_prog9_2019: _"¡Recojamos todo el tesoro!"_
      courseC_collector_progA: Ayuda a Laurel a recoger todo el tesoro.
      courseC_collector_progB: "¡Recoge la mayor cantidad de monedas que puedas para finalizar esta etapa!"
      courseC_collector_prog_challenge1: "¡Mira con cuidado! ¿Puedes recolectar todas las **10** piezas del tesoro?"
      courseC_collector_prog_challenge1_2018: "¡Mira con cuidado! ¿Puedes recolectar todas las **10** piezas del tesoro?"
      courseC_collector_prog_challenge1_2019: "¡Mira con cuidado! ¿Puedes recolectar todas las **10** piezas del tesoro?"
      courseC_collector_prog_challenge2: "¡Recoge por lo menos **10** piezas del tesoro para finalizar este desafío!"
      courseC_collector_prog_challenge2_2018: "¡Recoge por lo menos **10** piezas del tesoro para finalizar este desafío!"
      courseC_collector_prog_challenge2_2019: "¡Recoge por lo menos **10** piezas del tesoro para finalizar este desafío!"
      courseC_data widget: "Presiona \"Ejecutar\".\nEl mago hará que aparezcan animales. \n\nCuéntalos. \n¿Qué observas?"
      courseC_data wizard: "Presiona \"Ejecutar\".\nEl mago hará que aparezcan animales. \n\nCuéntalos. \n¿Qué observas?"
      courseC_flappy_embed_events: "¡Este es un ejemplo de un juego que estás por crear! Juega una o dos veces para tener una idea de lo que estás a punto de hacer."
      courseC_flappy_events1: Agrega el bloque `cantidad normal de aleteo` al evento `cuando hagas clic` y, a continuación, presiona "Ejecutar". Haz clic o toca en el espacio de juego para mover a Flappy hacia el objetivo.
      courseC_flappy_events10: "¡Crea tu propio juego de Flappy! "
      courseC_flappy_events10_2018: "¡Crea tu propio juego de Flappy! "
      courseC_flappy_events10_2019: "¡Crea tu propio juego de Flappy! "
      courseC_flappy_events1_2018: Agrega el bloque `cantidad normal de aleteo` al evento `cuando hagas clic` y, a continuación, presiona "Ejecutar". Haz clic o toca en el espacio de juego para mover a Flappy hacia el objetivo.
      courseC_flappy_events1_2019: Agrega el bloque `cantidad normal de aleteo` al evento `cuando hagas clic` y, a continuación, presiona "Ejecutar". Haz clic o toca en el espacio de juego para mover a Flappy hacia el objetivo.
      courseC_flappy_events2: Intenta agregar un bloque que establezca la velocidad cuando se presiona el botón "Ejecutar". Juega y apunta al objetivo para continuar.
      courseC_flappy_events2_2018: Intenta agregar un bloque que establezca la velocidad cuando se presiona el botón "Ejecutar". Juega y apunta al objetivo para continuar.
      courseC_flappy_events2_2019: Intenta agregar un bloque que establezca la velocidad cuando se presiona el botón "Ejecutar". Juega y apunta al objetivo para continuar.
      courseC_flappy_events3: Conecta el bloque `juego final` al evento `cuando toque el suelo`. Juega y estrella al pájaro contra el suelo para continuar.
      courseC_flappy_events3_2018: Conecta el bloque `juego final` al evento `cuando toque el suelo`. Juega y estrella al pájaro contra el suelo para continuar.
      courseC_flappy_events3_2019: Conecta el bloque `juego final` al evento `cuando toque el suelo`. Juega y estrella al pájaro contra el suelo para continuar.
      courseC_flappy_events4: Conecta el bloque al evento `cuando golpee un obstáculo` para que el juego finalice cuando Flappy choque contra el primer grupo de tuberías.
      courseC_flappy_events4_2018: Conecta el bloque al evento `cuando golpee un obstáculo` para que el juego finalice cuando Flappy choque contra el primer grupo de tuberías.
      courseC_flappy_events4_2019: Conecta el bloque al evento `cuando golpee un obstáculo` para que el juego finalice cuando Flappy choque contra el primer grupo de tuberías.
      courseC_flappy_events5: Agrega un bloque al evento `cuando pase un obstáculo`, y luego presiona "Ejecutar" para que Flappy vuele a través del primer grupo de tuberías y, así, anotar un punto.
      courseC_flappy_events5_2018: Agrega un bloque al evento `cuando pase un obstáculo`, y luego presiona "Ejecutar" para que Flappy vuele a través del primer grupo de tuberías y, así, anotar un punto.
      courseC_flappy_events5_2019: Agrega un bloque al evento `cuando pase un obstáculo`, y luego presiona "Ejecutar" para que Flappy vuele a través del primer grupo de tuberías y, así, anotar un punto.
      courseC_flappy_events6: Ve si aún puedes hacer que Flappy aletee más rápido o más lento con cada clic para anotar un punto.
      courseC_flappy_events6_2018: Ve si aún puedes hacer que Flappy aletee más rápido o más lento con cada clic para anotar un punto.
      courseC_flappy_events6_2019: Ve si aún puedes hacer que Flappy aletee más rápido o más lento con cada clic para anotar un punto.
      courseC_flappy_events7: A continuación, intenta agregar un bloque al evento `cuando se ejecute` para cambiar la escena.
      courseC_flappy_events7_2018: A continuación, intenta agregar un bloque al evento `cuando se ejecute` para cambiar la escena.
      courseC_flappy_events7_2019: A continuación, intenta agregar un bloque al evento `cuando se ejecute` para cambiar la escena.
      courseC_flappy_events8: Intenta configurar una escena **aleatoria** cuando suceden otros eventos... por ejemplo, al pasar un obstáculo.
      courseC_flappy_events8_2018: Intenta configurar una escena **aleatoria** cuando suceden otros eventos... por ejemplo, al pasar un obstáculo.
      courseC_flappy_events8_2019: Intenta configurar una escena **aleatoria** cuando suceden otros eventos... por ejemplo, al pasar un obstáculo.
      courseC_flappy_events9: Para hacerlo más difícil, en lugar de finalizar el juego cuando Flappy golpea un obstáculo, trata de volver el puntaje a 0.
      courseC_flappy_events9_2018: Para hacerlo más difícil, en lugar de finalizar el juego cuando Flappy golpea un obstáculo, trata de volver el puntaje a 0.
      courseC_flappy_events9_2019: Para hacerlo más difícil, en lugar de finalizar el juego cuando Flappy golpea un obstáculo, trata de volver el puntaje a 0.
      courseC_harvester_loops1: Utiliza bucles para recoger todas las calabazas.
      courseC_harvester_loops10: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops10_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops10_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops11: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops11_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops11_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops1_2018: Utiliza bucles para recoger todas las calabazas.
      courseC_harvester_loops1_2019: Utiliza bucles para recoger todas las calabazas.
      courseC_harvester_loops2: "¿Puedes combinar dos bucles diferentes para moverte hacia las calabazas, y luego recogerlas todas?"
      courseC_harvester_loops2_2018: "¿Puedes combinar dos bucles diferentes para moverte hacia las calabazas, y luego recogerlas todas?"
      courseC_harvester_loops2_2019: "¿Puedes combinar dos bucles diferentes para moverte hacia las calabazas, y luego recogerlas todas?"
      courseC_harvester_loops3: Recoge todas las calabazas.
      courseC_harvester_loops3_2018: Recoge todas las calabazas.
      courseC_harvester_loops3_2019: Recoge todas las calabazas.
      courseC_harvester_loops4: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops4_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops4_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops5: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops5_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops5_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops6: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops6_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops6_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops7: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops7_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops7_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops8: "**Desafío**: Recoge todo el maíz y todas las calabazas."
      courseC_harvester_loops8_2018: "**Desafío**: Recoge todo el maíz y todas las calabazas."
      courseC_harvester_loops8_2019: "**Desafío**: Recoge todo el maíz y todas las calabazas."
      courseC_harvester_loops9: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops9_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops9_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops_challenge1: Recoge todo el maíz.
      courseC_harvester_loops_challenge1a: Recoge todo el maíz.
      courseC_harvester_loops_challenge1a_2018: Recoge todo el maíz.
      courseC_harvester_loops_challenge1a_2019: Recoge todo el maíz.
      courseC_harvester_loops_challenge2: Recoge toda la lechuga. ¡Evita los árboles y los campos!
      courseC_harvester_loops_challenge2_2018: Recoge toda la lechuga. ¡Evita los árboles y los campos!
      courseC_harvester_loops_challenge2_2019: Recoge toda la lechuga. ¡Evita los árboles y los campos!
      courseC_harvester_loops_forVid: Recoge todo el maíz, toda la lechuga y todas las calabazas.
      courseC_maze_debugging1: Corrige el código para ayudar a Scrat a llegar hasta la bellota.
      courseC_maze_debugging10: "¡Depura este nivel reorganizando y agregando bloques para llevarme al cerdo!"
      courseC_maze_debugging1_2018: Corrige el código para ayudar a Scrat a llegar hasta la bellota.
      courseC_maze_debugging1_2019: Corrige el código para ayudar a Scrat a llegar hasta la bellota.
      courseC_maze_debugging2: Utiliza tus habilidades de depuración para que Scrat llegue hasta la bellota.
      courseC_maze_debugging2_2018: Utiliza tus habilidades de depuración para que Scrat llegue hasta la bellota.
      courseC_maze_debugging2_2019: Utiliza tus habilidades de depuración para que Scrat llegue hasta la bellota.
      courseC_maze_debugging3: "¡Quita bloques para que Scrat llegue hasta la bellota!"
      courseC_maze_debugging3_2018: "¡Quita bloques para que Scrat llegue hasta la bellota!"
      courseC_maze_debugging3_2019: "¡Quita bloques para que Scrat llegue hasta la bellota!"
      courseC_maze_debugging4: "¡Alguien no sabe cómo llegar! ¿Puedes ayudar?"
      courseC_maze_debugging4_2018: "¡Alguien no sabe cómo llegar! ¿Puedes ayudar?"
      courseC_maze_debugging4_2019: "¡Alguien no sabe cómo llegar! ¿Puedes ayudar?"
      courseC_maze_debugging5: Reorganiza y cambia los bloques para depurar este nivel.
      courseC_maze_debugging5_2018: Reorganiza y cambia los bloques para depurar este nivel.
      courseC_maze_debugging5_2019: Reorganiza y cambia los bloques para depurar este nivel.
      courseC_maze_debugging6: Descubre el error y lleva a Scrat hasta la bellota.
      courseC_maze_debugging6_2018: Descubre el error y lleva a Scrat hasta la bellota.
      courseC_maze_debugging6_2019: Descubre el error y lleva a Scrat hasta la bellota.
      courseC_maze_debugging7: "**Desafío**: Reorganiza, agrega y elimina bloques para depurar este nivel."
      courseC_maze_debugging7_2018: "**Desafío**: Reorganiza, agrega y elimina bloques para depurar este nivel."
      courseC_maze_debugging7_2019: "**Desafío**: Reorganiza, agrega y elimina bloques para depurar este nivel."
      courseC_maze_debugging8: Depura este nivel para llevar a Scrat hasta la bellota.
      courseC_maze_debugging9: Depura este nivel para llevar a Scrat hasta la bellota.
      courseC_maze_debugging9_2018: Depura este nivel para llevar a Scrat hasta la bellota.
      courseC_maze_debugging9_2019: Usa los bloques de la caja de herramientas para crear tu programa. Haz que el pájaro llegue hasta el cerdo.
      courseC_maze_debugging_challenge1: Ayuda a Scrat a decidir cuál es el camino para llegar hasta la bellota.
      courseC_maze_debugging_challenge1_2018: Ayuda a Scrat a decidir cuál es el camino para llegar hasta la bellota.
      courseC_maze_debugging_challenge1_2019: Ayuda a Scrat a decidir cuál es el camino para llegar hasta la bellota.
      courseC_maze_debugging_challenge2: Ayuda a Scrat a llegar hasta la bellota con solo cuatro comandos `girar`.
      courseC_maze_debugging_challenge2_2018: Ayuda a Scrat a llegar hasta la bellota con solo cuatro comandos `girar`.
      courseC_maze_debugging_challenge2_2019: Ayuda a Scrat a llegar hasta la bellota con solo cuatro comandos `girar`.
      courseC_maze_loops1: "¿Puedes hacer que el pájaro llegue hasta el cerdo?"
      courseC_maze_loops10: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_maze_loops11: "¡Ya casi llegas! ¡Ahora puedes elegir el camino que quieras!"
      courseC_maze_loops2: "¿Podrías crear un bucle que utilice un solo bloque `ir hacia adelante` en vez de un bloque `repetir` para que el pájaro hasta el cerdo?"
      courseC_maze_loops3: "¡Crea un bucle para resolver este desafío!"
      courseC_maze_loops4: En este desafío, ¡dos bucles 'repetir' te ayudarán a llevar al pájaro hasta el cerdo con la menor cantidad de bloques!
      courseC_maze_loops5: _"¡Llévame hasta el cerdo lo más pronto posible!"_
      courseC_maze_loops6: "¡Los bucles pueden funcionar con más de un bloque adentro! ¿Podrías hacer un bucle con esta secuencia?"
      courseC_maze_loops7: "¡Utiliza lo que has aprendido en los otros desafíos!"
      courseC_maze_loops8: 'Desafío: Combina ideas de los últimos retos para completar este nivel.'
      courseC_maze_loops9: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_maze_loops_challenge1: "¡Ahora Scrat quiere usar bucles para intentar encontrar su bellota! "
      courseC_maze_loops_challenge1a: "¡Ahora Scrat quiere usar bucles para intentar encontrar su bellota! "
      courseC_maze_loops_challenge1a_2018: "¡Ahora Scrat quiere usar bucles para intentar encontrar su bellota! "
      courseC_maze_loops_challenge1a_2019: "¡Ahora Scrat quiere usar bucles para intentar encontrar su bellota! "
      courseC_maze_loops_challenge2: "¡Vamos a cazar tesoros con bucles! Ayuda al recolector a depurar este código. ¡Recoge todo el tesoro!"
      courseC_maze_programming1: Para este desafío, arrastra todos los bloques para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseC_maze_programming1_2018: Para este desafío, arrastra todos los bloques para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseC_maze_programming1_2019: Para este desafío, arrastra todos los bloques para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseC_maze_programming2: Arrastra un bloque 'avanzar' extra desde la caja de herramientas para finalizar tu código.
      courseC_maze_programming2_2018: Arrastra un bloque 'avanzar' extra desde la caja de herramientas para finalizar tu código.
      courseC_maze_programming2_2019: Arrastra un bloque 'avanzar' extra desde la caja de herramientas para finalizar tu código.
      courseC_maze_programming3: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseC_maze_programming3_2018: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseC_maze_programming3_2019: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseC_maze_programming4: "¡Evita el TNT o volarán plumas!"
      courseC_maze_programming4_2018: "¡Evita el TNT o volarán plumas!"
      courseC_maze_programming4_2019: "¡Evita el TNT o volarán plumas!"
      courseC_maze_programming5: Evita el TNT.
      courseC_maze_programming5_2018: Evita el TNT.
      courseC_maze_programming5_2019: Evita el TNT.
      courseC_maze_programming6: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseC_maze_programming6_2018: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseC_maze_programming6_2019: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseC_maze_programming7: "**Desafío**: Este código tiene algunos errores. Deberás eliminar algunos bloques y agregar otros."
      courseC_maze_programming7_2018: "**Desafío**: Este código tiene algunos errores. Deberás eliminar algunos bloques y agregar otros."
      courseC_maze_programming7_2019: "**Desafío**: Este código tiene algunos errores. Deberás eliminar algunos bloques y agregar otros."
      courseC_maze_programming8: _"Mantén la calma y ayúdame a encontrar al cerdo malo"._
      courseC_maze_programming8_2018: _"Mantén la calma y ayúdame a encontrar al cerdo malo"._
      courseC_maze_programming8_2019: _"Mantén la calma y ayúdame a encontrar al cerdo malo"._
      courseC_maze_programming8_predict1: _"Mantén la calma y ayúdame a encontrar al cerdo malo"._
      courseC_maze_programming8_predict1_2018: _"Mantén la calma y ayúdame a encontrar al cerdo malo"._
      courseC_maze_programming8_predict1_2019: _"Mantén la calma y ayúdame a encontrar al cerdo malo"._
      courseC_maze_programming9: _"¡Ahora ayúdame a acercarme sigilosamente al cerdo de la forma que quieras!"_
      courseC_maze_programming9_2018: _"¡Ahora ayúdame a acercarme sigilosamente al cerdo de la forma que quieras!"_
      courseC_maze_programming9_2019: _"¡Ahora ayúdame a acercarme sigilosamente al cerdo de la forma que quieras!"_
      courseC_maze_programming_challenge1: 'Este cerdo está escondido: el objetivo es encontrarlo. '
      courseC_maze_programming_challenge1_2018: 'Este cerdo está escondido: el objetivo es encontrarlo. '
      courseC_maze_programming_challenge1_2019: 'Este cerdo está escondido: el objetivo es encontrarlo. '
      courseC_maze_programming_challenge2: A veces hay más de una forma de resolver el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_maze_programming_challenge2_2018: A veces hay más de una forma de resolver el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_maze_programming_challenge2_2019: A veces hay más de una forma de resolver el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_playLab_embedded: |-
        ¡Aquí tenemos un juego para ti! Para ganar, debes hacer que el pingüino se encuentre con el pulpo.

        Una vez que hayas terminado, ¡aprenderás cómo crear este juego!
      courseC_puppy_loops10: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_puppy_loops11: "¡Ya casi llegas! ¡Ahora puedes elegir el camino que quieras!"
      courseC_puppy_loops8: 'Desafío: Combina ideas de los últimos retos para completar este nivel.'
      courseC_puppy_loops8courseC_maze_loops8: 'Desafío: Combina ideas de los últimos retos para completar este nivel.'
      courseC_puppy_loops9: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_starWars_loops1: BB-8 recogerá la chatarra a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger toda la chatarra en el área de juego.
      courseC_starWars_loops10: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_starWars_loops10_2018: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_starWars_loops10_2019: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_starWars_loops10_predict2: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_starWars_loops10_predict2_2018: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_starWars_loops10_predict2_2019: "¡Lo estás haciendo muy bien! ¡Sigue así!"
      courseC_starWars_loops11: "¡Ya casi llegas! ¡Ahora puedes elegir el camino que quieras!"
      courseC_starWars_loops11_2018: "¡Ya casi llegas! ¡Ahora puedes elegir el camino que quieras!"
      courseC_starWars_loops11_2019: "¡Ya casi llegas! ¡Ahora puedes elegir el camino que quieras!"
      courseC_starWars_loops1_2018: BB-8 recogerá la chatarra a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger toda la chatarra en el área de juego.
      courseC_starWars_loops1_2019: BB-8 recogerá la chatarra a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger toda la chatarra en el área de juego.
      courseC_starWars_loops1_predict1: BB-8 recogerá la chatarra a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger toda la chatarra en el área de juego.
      courseC_starWars_loops1_predict1_2018: BB-8 recogerá la chatarra a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger toda la chatarra en el área de juego.
      courseC_starWars_loops1_predict1_2019: BB-8 recogerá la chatarra a lo largo del camino. Utiliza 5 de los mismos bloques para que BB-8 pueda recoger toda la chatarra en el área de juego.
      courseC_starWars_loops2: Para obtener toda la chatarra, intenta crear un bucle que utilice un solo bloque dentro de un bloque `repetir`.
      courseC_starWars_loops2_2018: Para obtener toda la chatarra, intenta crear un bucle que utilice un solo bloque dentro de un bloque `repetir`.
      courseC_starWars_loops2_2019: Para obtener toda la chatarra, intenta crear un bucle que utilice un solo bloque dentro de un bloque `repetir`.
      courseC_starWars_loops4: En este desafío, ¡dos bucles `repetir` te ayudarán a llevar a BB-8 hasta la chatarra con la menor cantidad de bloques posible!
      courseC_starWars_loops4_2018: En este desafío, ¡dos bucles `repetir` te ayudarán a llevar a BB-8 hasta la chatarra con la menor cantidad de bloques posible!
      courseC_starWars_loops4_2019: En este desafío, ¡dos bucles `repetir` te ayudarán a llevar a BB-8 hasta la chatarra con la menor cantidad de bloques posible!
      courseC_starWars_loops5: "¡Haz que BB-8 recoja toda la chatarra lo más rápido posible!"
      courseC_starWars_loops5_2018: "¡Haz que BB-8 recoja toda la chatarra lo más rápido posible!"
      courseC_starWars_loops5_2019: "¡Haz que BB-8 recoja toda la chatarra lo más rápido posible!"
      courseC_starWars_loops6: "¡Los bucles pueden funcionar con más de un bloque adentro! ¿Podrías hacer un bucle con esta secuencia?"
      courseC_starWars_loops6_2018: "¡Los bucles pueden funcionar con más de un bloque adentro! ¿Podrías hacer un bucle con esta secuencia?"
      courseC_starWars_loops6_2019: "¡Los bucles pueden funcionar con más de un bloque adentro! ¿Podrías hacer un bucle con esta secuencia?"
      courseC_starWars_loops7: "¿Puedes conseguir toda la chatarra con un solo bucle? Intenta programar todo y luego busca el código que se repite para ponerlo en un bucle."
      courseC_starWars_loops7_2018: "¿Puedes conseguir toda la chatarra con un solo bucle? Intenta programar todo y luego busca el código que se repite para ponerlo en un bucle."
      courseC_starWars_loops7_2019: "¿Puedes conseguir toda la chatarra con un solo bucle? Intenta programar todo y luego busca el código que se repite para ponerlo en un bucle."
      courseC_starWars_loops9: "¡Usa lo que has aprendido para recoger toda la chatarra!"
      courseC_starWars_loops9_2018: "¡Usa lo que has aprendido para recoger toda la chatarra!"
      courseC_starWars_loops9_2019: "¡Usa lo que has aprendido para recoger toda la chatarra!"
      courseD_Frozen_nested1: 'Dibuja una forma pequeña, de entre **20 a 50** pixeles de ancho. Puede ser cualquier forma que quieras.  '
      courseD_Frozen_nested2: "¡Ahora toma tu forma y dibuja dos o tres seguidas!"
      courseD_Frozen_nested3: "¡Hagamos grar la línea de formas!"
      courseD_Frozen_nested4: "¡Es hor de poner las formas en capas!"
      courseD_Frozen_nested5: "¡Juega con los copos de nieve!"
      courseD_Frozen_nested6: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      courseD_Frozen_nested7: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_Frozen_nested8: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_Frozen_nested9: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!

        -   ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        -   ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        -   ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_1_2018: Dibuja un hexágono con lados de **50** pixeles de largo.
      courseD_artist_1_2018_2019: Dibuja un hexágono con lados de **50** pixeles de largo.
      courseD_artist_2_2018: Ahora gira a la derecha **60** grados; luego dibuja una línea recta de **150** pixeles de largo y salta hacia el centro del área de juego.
      courseD_artist_2_2018_2019: Ahora gira a la derecha **60** grados; luego dibuja una línea recta de **150** pixeles de largo y salta hacia el centro del área de juego.
      courseD_artist_3_2018: 'Anida todo el código dentro de otro bucle `repetir` y ejecútalo un total de **6** veces. '
      courseD_artist_3_2018_2019: 'Anida todo el código dentro de otro bucle `repetir` y ejecútalo un total de **6** veces. '
      courseD_artist_4_2018: "¡Agrega una forma pequeña al final de tu línea!"
      courseD_artist_4_2018_2019: "¡Agrega una forma pequeña al final de tu línea!"
      courseD_artist_5_2018: "¡Juega con los copos de nieve!"
      courseD_artist_5_2018_2019: "¡Juega con los copos de nieve!"
      courseD_artist_6_2018: Intenta transformar tu línea de 150 pixeles de largo en 6 líneas cortas de **25** pixeles, con pequeños giros al final.
      courseD_artist_6_2018_2019: Intenta transformar tu línea de 150 pixeles de largo en 6 líneas cortas de **25** pixeles, con pequeños giros al final.
      courseD_artist_7_2018: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_artist_8_2018: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_artist_9_2018: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!

        -   ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        -   ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        -   ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_binary1: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary1_2018: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary1_2019: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      courseD_artist_binary2: Ejecuta este código para ver cómo el artista usa el sistema binario para dibujar este patrón.
      courseD_artist_binary2_2018: Ejecuta este código para ver cómo el artista usa el sistema binario para dibujar este patrón.
      courseD_artist_binary2_2019: Ejecuta este código para ver cómo el artista usa el sistema binario para dibujar este patrón.
      courseD_artist_binary3: "¿En cuál de los hilos binarios de abajo podrías aplicar un bucle 8 veces para dibujar esta imagen?"
      courseD_artist_binary3_2018: "¿En cuál de los hilos binarios de abajo podrías aplicar un bucle 8 veces para dibujar esta imagen?"
      courseD_artist_binary3_2019: "¿En cuál de los hilos binarios de abajo podrías aplicar un bucle 8 veces para dibujar esta imagen?"
      courseD_artist_binary4: "¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?"
      courseD_artist_binary4_2018: "¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?"
      courseD_artist_binary4_2019: "¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?"
      courseD_artist_binary5: "Cada hilo binario de abajo representa una fila de esta imagen. \n\n¿Puedes reorganizarlos para que dibujen una cara sonriente en lugar de un ceño fruncido?"
      courseD_artist_binary5_2018: "Cada hilo binario de abajo representa una fila de esta imagen. \n\n¿Puedes reorganizarlos para que dibujen una cara sonriente en lugar de un ceño fruncido?"
      courseD_artist_binary5_2019: "Cada hilo binario de abajo representa una fila de esta imagen. \n\n¿Puedes reorganizarlos para que dibujen una cara sonriente en lugar de un ceño fruncido?"
      courseD_artist_binary6: "¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?"
      courseD_artist_binary6_2018: "¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?"
      courseD_artist_binary6_2019: "¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?"
      courseD_artist_binary7: "¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?"
      courseD_artist_binary7_2018: "¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?"
      courseD_artist_binary7_2019: "¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?"
      courseD_artist_binary8: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_2018: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_2019: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_predict1: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_predict1_2018: Finaliza el código para crear este dibujo.
      courseD_artist_binary8_predict1_2019: Finaliza el código para crear este dibujo.
      courseD_artist_binaryFP: "Aquí hay un lienzo con mejor resolución para inspirarte. ¡Tiene 16 pixeles por 16 pixeles! \n\n¡Mira lo que pasa cuando empezamos a ser creativos con los bits!"
      courseD_artist_binaryFP8: "**Juego libre:** ¡Dibuja lo que quieras en código binario! "
      courseD_artist_binaryFP_2018: "Aquí hay un lienzo con mejor resolución para inspirarte. ¡Tiene 16 pixeles por 16 pixeles! \n\n¡Mira lo que pasa cuando empezamos a ser creativos con los bits!"
      courseD_artist_binaryFP_2019: "Aquí hay un lienzo con mejor resolución para inspirarte. ¡Tiene 16 pixeles por 16 pixeles! \n\n¡Mira lo que pasa cuando empezamos a ser creativos con los bits!"
      courseD_artist_binary_challenge0: Intenta usar bucles anidados para completar este dibujo.
      courseD_artist_binary_challenge1: Sólo puedes usar cada valor binario (0 ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar este dibujo.
      courseD_artist_binary_challenge1_2018: Sólo puedes usar cada valor binario (0 ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar este dibujo.
      courseD_artist_binary_challenge1_2019: Sólo puedes usar cada valor binario (0 ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar este dibujo.
      courseD_artist_binary_challenge2: "¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?"
      courseD_artist_binary_challenge2_2018: "¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?"
      courseD_artist_binary_challenge2_2019: "¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?"
      courseD_artist_binary_challenge3: "¿Eres lo suficientemente persevaerante para restaurar este logo de vuelta a lo normal?"
      courseD_artist_embed_frozen: "¡Presiona Ejecutar para ver el diseño de un copo de nieve!"
      courseD_artist_embed_frozen2: Presiona Ejecutar para ver el diseño de un copo de nieve.
      courseD_artist_functions10: Esta vez, usa líneas de 8 hexágonos con lados de 25 pixeles.
      courseD_artist_functions2: Esta vez, usa la función `dibujar un cuadrado` para crear los vasos.
      courseD_artist_functions3: Puedes agregar un bloque `repetir` para hacer este dibujo.
      courseD_artist_functions4: Ahora que puedes dibujar una estrella, ¡intenta dibujar cuatro!
      courseD_artist_functions5: Dibuja solamente esas tres estrellas para finalizar este desafío.
      courseD_artist_functions6: Dibuja un cuadrado para crear esta ventana. Luego, gira 90 grados antes de dibujar otro, y así sucesivamente.
      courseD_artist_functions7: Crea `dibujar una ventana` y llama la función cinco veces para resolver este desafío. ¡Cuidado con la puerta!
      courseD_artist_functions8: 'Desafío: Crea todas las funciones que piensas que necesitas para dibujar estos cuadrados de 50 pixeles.'
      courseD_artist_functions9: Crea esta imagen con los bloques proporcionados.
      courseD_artist_nestedLoops1: "Dibuja un triángulo para comenzar esta etapa. \n(Cada lado tiene 100 pixeles de largo y necesitarás girar 120 grados para cada ángulo exterior)."
      courseD_artist_nestedLoops10: Toma los cuadrados anteriores, pero esta vez dibuja solo 7 de ellos y ponlos en fila.
      courseD_artist_nestedLoops10_2018: Toma los cuadrados anteriores, pero esta vez dibuja solo 7 de ellos y ponlos en fila.
      courseD_artist_nestedLoops10_2019: Toma los cuadrados anteriores, pero esta vez dibuja solo 7 de ellos y ponlos en fila.
      courseD_artist_nestedLoops1_2018: "Dibuja un triángulo para comenzar esta etapa. \n(Cada lado tiene 100 pixeles de largo y necesitarás girar 120 grados para cada ángulo exterior)."
      courseD_artist_nestedLoops1_2019: "Dibuja un triángulo para comenzar esta etapa. \n(Cada lado tiene 100 pixeles de largo y necesitarás girar 120 grados para cada ángulo exterior)."
      courseD_artist_nestedLoops1a: 'Ahora haz un bucle con el triángulo 6 veces. '
      courseD_artist_nestedLoops1a_2018: 'Ahora haz un bucle con el triángulo 6 veces. '
      courseD_artist_nestedLoops1a_2019: 'Ahora haz un bucle con el triángulo 6 veces. '
      courseD_artist_nestedLoops2: Esta vez, completa el desafío con la menor cantidad de bloques posible.
      courseD_artist_nestedLoops2_2018: Esta vez, completa el desafío con la menor cantidad de bloques posible.
      courseD_artist_nestedLoops2_2019: Esta vez, completa el desafío con la menor cantidad de bloques posible.
      courseD_artist_nestedLoops3: |-
        Usa tus nuevas habilidades para dibujar rápidamente la última fila de ventanas de este edificio.

        Las ventanas son cuadrados de 20 pixeles, con 20 pixeles de separación.
      courseD_artist_nestedLoops3_2018: |-
        Usa tus nuevas habilidades para dibujar rápidamente la última fila de ventanas de este edificio.

        Las ventanas son cuadrados de 20 pixeles, con 20 pixeles de separación.
      courseD_artist_nestedLoops3_2019: |-
        Usa tus nuevas habilidades para dibujar rápidamente la última fila de ventanas de este edificio.

        Las ventanas son cuadrados de 20 pixeles, con 20 pixeles de separación.
      courseD_artist_nestedLoops4: "¡Excelente! Haz lo mismo con estos círculos."
      courseD_artist_nestedLoops4_2018: "¡Excelente! Haz lo mismo con estos círculos."
      courseD_artist_nestedLoops4_2019: "¡Excelente! Haz lo mismo con estos círculos."
      courseD_artist_nestedLoops5: "¿Qué sucede si también giras 90 grados entre los círculos?"
      courseD_artist_nestedLoops5_2018: "¿Qué sucede si también giras 90 grados entre los círculos?"
      courseD_artist_nestedLoops5_2019: "¿Qué sucede si también giras 90 grados entre los círculos?"
      courseD_artist_nestedLoops6: Edita los bloques dentro del código existente para crear esta imagen.
      courseD_artist_nestedLoops7: Usa lo que has aprendido para hacer este dibujo.
      courseD_artist_nestedLoops7_2018: Usa lo que has aprendido para hacer este dibujo.
      courseD_artist_nestedLoops7_2019: Usa lo que has aprendido para hacer este dibujo.
      courseD_artist_nestedLoops8: Crea esta imagen desde el comienzo con lo que has aprendido en los últimos desafíos.
      courseD_artist_nestedLoops8_2018: Crea esta imagen desde el comienzo con lo que has aprendido en los últimos desafíos.
      courseD_artist_nestedLoops8_2019: Crea esta imagen desde el comienzo con lo que has aprendido en los últimos desafíos.
      courseD_artist_nestedLoops9: "**Desafío:** ¿Puedes descubrir cómo crear una imagen como esta?"
      courseD_artist_nestedLoops9_2018: "**Desafío:** ¿Puedes descubrir cómo crear una imagen como esta?"
      courseD_artist_nestedLoops9_2019: "**Desafío:** ¿Puedes descubrir cómo crear una imagen como esta?"
      courseD_artist_nestedLoops9_predict1: "**Desafío:** ¿Puedes descubrir cómo crear una imagen como esta?"
      courseD_artist_nestedLoops9_predict1_2018: "**Desafío:** ¿Puedes descubrir cómo crear una imagen como esta?"
      courseD_artist_nestedLoops9_predict1_2019: "**Desafío:** ¿Puedes descubrir cómo crear una imagen como esta?"
      courseD_artist_nestedLoopsFP: Ahora es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
      courseD_artist_nestedLoopsFP_2018: Ahora es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
      courseD_artist_nestedLoopsFP_2019: Ahora es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
      courseD_artist_nestedLoopsPre1: Crea un triángulo para comenzar esta etapa.
      courseD_artist_nestedLoops_challenge1: "¿Puedes descifrar cómo hacer una imagen como esta?"
      courseD_artist_nestedLoops_challenge1_2018: "¿Puedes descifrar cómo hacer una imagen como esta?"
      courseD_artist_nestedLoops_challenge1_2019: "¿Puedes descifrar cómo hacer una imagen como esta?"
      courseD_artist_nestedLoops_challenge2: "¡Arregla el código para crear esta imagen!"
      courseD_artist_nestedLoops_challenge2_2018: "¡Arregla el código para crear esta imagen!"
      courseD_artist_nestedLoops_challenge2_2019: "¡Arregla el código para crear esta imagen!"
      courseD_artist_project1: 'Dibuja una forma pequeña, de entre **20 a 50** pixeles de ancho. Puede ser cualquier forma que quieras.  '
      courseD_artist_project1_2018: 'Dibuja una forma pequeña, de entre **20 a 50** pixeles de ancho. Puede ser cualquier forma que quieras.  '
      courseD_artist_project1_2019: 'Dibuja una forma pequeña, de entre **20 a 50** pixeles de ancho. Puede ser cualquier forma que quieras.  '
      courseD_artist_project1a: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      courseD_artist_project1a_2018: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      courseD_artist_project1a_2019: Dibuja un patrón de peldaños que use entre 75 y 105 grados.
      courseD_artist_project2: "¡Ahora toma tu forma y dibuja dos o tres seguidas!"
      courseD_artist_project2_2018: "¡Ahora toma tu forma y dibuja dos o tres seguidas!"
      courseD_artist_project2_2019: "¡Ahora toma tu forma y dibuja dos o tres seguidas!"
      courseD_artist_project2a: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_artist_project2a_2018: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_artist_project2a_2019: Ahora, gira 180 grados y dibuja el patrón de estrella nuevamente!
      courseD_artist_project3: "¡Hagamos grar la línea de formas!"
      courseD_artist_project3_2018: "¡Hagamos grar la línea de formas!"
      courseD_artist_project3_2019: "¡Hagamos grar la línea de formas!"
      courseD_artist_project3a: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_artist_project3a_2018: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_artist_project3a_2019: Haz girar la forma 5 ó 6 veces en círculo.
      courseD_artist_project4: "¡Es hor de poner las formas en capas!"
      courseD_artist_project4_2018: "¡Es hor de poner las formas en capas!"
      courseD_artist_project4_2019: "¡Es hor de poner las formas en capas!"
      courseD_artist_project4a: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!

        -   ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        -   ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        -   ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_project4a_2018: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!

        -   ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        -   ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        -   ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_project4a_2019: |-
        Intenta jugar con lo que has credo. ¡Dibuja lo que quieras!

        -   ¿Quée sucede si usas dos ángulos diferentes en tu patrón de escalones?
        -   ¿Qué sucede si haces tu patrón de diamante más largo o más coto?
        -   ¿Cómo luce dibujar dos copos de nieve uno encima del otro?
      courseD_artist_project5: "¡Juega con los copos de nieve!"
      courseD_artist_project5_2018: "¡Juega con los copos de nieve!"
      courseD_artist_project5_2019: "¡Juega con los copos de nieve!"
      courseD_artist_project_embedded: "¡Esto es lo que crearás muy pronto!"
      courseD_artist_ramp11: "¡Ahora haz un cuadrado con Artista!"
      courseD_artist_ramp12: Usa lo que has aprendido para dibujar este triángulo dentro de un cuadrado.
      courseD_autorun_binary2_2019: Ejecuta este código para ver cómo el artista usa el sistema binario para dibujar este patrón.
      courseD_autorun_binary3_2019: "¿En cuál de los hilos binarios de abajo podrías aplicar un bucle 8 veces para dibujar esta imagen?"
      courseD_autorun_binary4_2019: "¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?"
      courseD_autorun_binary5_2019: "Cada hilo binario de abajo representa una fila de esta imagen. \n\n¿Puedes reorganizarlos para que dibujen una cara sonriente en lugar de un ceño fruncido?"
      courseD_autorun_binary6_2019: "¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?"
      courseD_autorun_binary7_2019: "¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?"
      courseD_autorun_binary8_2019: Finaliza el código para crear este dibujo.
      courseD_autorun_binary8_predict1_2019: Finaliza el código para crear este dibujo.
      courseD_bee_conditionals1: Mira si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseD_bee_conditionals10: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals10_2018: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals10_2019: Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals1_predict1: Mira si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseD_bee_conditionals1_predict1_2018: Mira si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseD_bee_conditionals1_predict1_2019: Mira si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseD_bee_conditionals2: 'Antes de recoger el néctar, mira debajo de cada nube para ver si hay una flor escondida.  '
      courseD_bee_conditionals2_2018: 'Antes de recoger el néctar, mira debajo de cada nube para ver si hay una flor escondida.  '
      courseD_bee_conditionals2_2019: 'Antes de recoger el néctar, mira debajo de cada nube para ver si hay una flor escondida.  '
      courseD_bee_conditionals2_test: 'Antes de recoger el néctar, mira debajo de cada nube para ver si hay una flor escondida.  '
      courseD_bee_conditionals3: |-
        Ayuda a la abeja a recoger todo el néctar.

        Solo puedes recoger el néctar de las flores, pero puedes revisar todos los espacios para ver si hay una flor.
      courseD_bee_conditionals3_2018: |-
        Ayuda a la abeja a recoger todo el néctar.

        Solo puedes recoger el néctar de las flores, pero puedes revisar todos los espacios para ver si hay una flor.
      courseD_bee_conditionals3_2019: |-
        Ayuda a la abeja a recoger todo el néctar.

        Solo puedes recoger el néctar de las flores, pero puedes revisar todos los espacios para ver si hay una flor.
      courseD_bee_conditionals4: Obtén todo el néctar con la menor cantidad de bloques posible.
      courseD_bee_conditionals4_2018: Obtén todo el néctar con la menor cantidad de bloques posible.
      courseD_bee_conditionals4_2019: Obtén todo el néctar con la menor cantidad de bloques posible.
      courseD_bee_conditionals5: Recoge todo el néctar con la menor cantidad de bloques posible
      courseD_bee_conditionals5_2018: Recoge todo el néctar con la menor cantidad de bloques posible
      courseD_bee_conditionals5_2019: Recoge todo el néctar con la menor cantidad de bloques posible
      courseD_bee_conditionals6: Algunas de estas nubes pueden tener una panal debajo de ellas. ¡Asegúrate de revisar si hay un panal escondido debajo de cada nube!
      courseD_bee_conditionals6_2018: Algunas de estas nubes pueden tener una panal debajo de ellas. ¡Asegúrate de revisar si hay un panal escondido debajo de cada nube!
      courseD_bee_conditionals6_2019: Algunas de estas nubes pueden tener una panal debajo de ellas. ¡Asegúrate de revisar si hay un panal escondido debajo de cada nube!
      courseD_bee_conditionals7: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseD_bee_conditionals7_2018: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseD_bee_conditionals7_2019: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseD_bee_conditionals7_predict2: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseD_bee_conditionals7_predict2_2018: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseD_bee_conditionals7_predict2_2019: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseD_bee_conditionals8: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseD_bee_conditionals8_2018: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseD_bee_conditionals8_2019: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseD_bee_conditionals9: Recoge todo el néctar o haz toda la miel.
      courseD_bee_conditionals9_2018: Recoge todo el néctar o haz toda la miel.
      courseD_bee_conditionals9_2019: Recoge todo el néctar o haz toda la miel.
      courseD_bee_conditionals_challenge1: Recoge el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge1_2018: Recoge el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge1_2019: Recoge el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge2: Recoge el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge2_2018: Recoge el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge2_2019: Recoge el néctar y haz toda la miel.
      courseD_bee_conditionals_challenge3: Recoge todo el néctar o haz toda la miel.
      courseD_bee_debugging1: Corrige los errores para recoger todo el néctar.
      courseD_bee_debugging2: Corrige los errores para recoger todo el néctar.
      courseD_bee_debugging3: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      courseD_bee_debugging4: Corrige los errores para hacer toda la miel.
      courseD_bee_debugging5: 'Desafío: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.'
      courseD_bee_debugging6: 'Desafío: Corrige los errores para recoger el néctar y hacer toda la miel.'
      courseD_bee_debugging9: Ayuda a la abeja a corregir el código para obtener todo el néctar.
      courseD_bee_debugging_challenge1: Observa cómo las abejas obtienen el néctar. ¿Puedes usar el mismo tipo de patrón para ayudar a la abeja a hacer toda la miel?
      courseD_bee_debugging_challenge1_2018: Observa cómo las abejas obtienen el néctar. ¿Puedes usar el mismo tipo de patrón para ayudar a la abeja a hacer toda la miel?
      courseD_bee_debugging_challenge1a: Observa cómo la abeja obtiene el néctar. Usa el mismo patrón para ayudar a la abeja a hacer toda la miel.
      courseD_bee_debugging_challenge2: Observa cómo la abeja obtiene el néctar ¿Puedes usar el mismo tipo de patrón para ayudar a la abeja a hacer toda la miel?
      courseD_bee_nestedLoops1: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1_2018: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1_2019: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1a: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1a_2018: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops1a_2019: Ayuda a la abeja a recoger todo el néctar.
      courseD_bee_nestedLoops2: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_2018: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_2019: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1_2018: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1_2019: Esta vez, ayuda a la abeja a recoger todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops3: Recoge todo el néctar de cada flor.
      courseD_bee_nestedLoops5: 'Recolecta todo el néctar de cada flor y haz miel en cada panal. Utiliza un loop anidado. '
      courseD_bee_nestedLoops6: Haz todo el néctar.
      courseD_bee_nestedLoops6_2018: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      courseD_bee_nestedLoops7: 'Desafío: Descubre cómo obtener todo el néctar solamente con los bloques disponibles.'
      courseD_bee_nestedLoops7_2018: 'Desafío: Descubre cómo obtener todo el néctar solamente con los bloques disponibles.'
      courseD_bee_nestedLoops7_2019: 'Desafío: Descubre cómo obtener todo el néctar solamente con los bloques disponibles.'
      courseD_bee_nestedLoops8: 'Recolecta todo el néctar de cada flor y haz miel en cada panal. Utiliza un loop anidado. '
      courseD_bee_nestedLoops8_2018: 'Recolecta todo el néctar de cada flor y haz miel en cada panal. Utiliza un loop anidado. '
      courseD_bee_nestedLoops8_2019: 'Recolecta todo el néctar de cada flor y haz miel en cada panal. Utiliza un loop anidado. '
      courseD_bee_nestedLoops9: Haz toda la miel.
      courseD_bee_nestedLoops9_2018: Haz toda la miel.
      courseD_bee_nestedLoops9_2019: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2_2018: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2_2019: Haz toda la miel.
      courseD_bee_nested_loops_challenge1: Vamos a cazar un tesoro - ¡usando bucles! Ayuda al coleccionista a alcanzar al menos dos pilas del tesoro usando sólo los bloques en tu caja de herramientas.
      courseD_bee_nested_loops_challenge2: Vamos a cazar un tesoro - ¡usando bucles! Ayuda al coleccionista a alcanzar al menos dos pilas del tesoro usando sólo los bloques en tu caja de herramientas.
      courseD_bounce_embed_endgame: Usa las flechas izquierda y derecha para mover el remo. ¡Observa cuántos puntos puedes obtener antes de que tu oponente anote dos veces!
      courseD_bounce_embedded: Escribe las instrucciones aquí
      courseD_bounce_events1: Añade un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hacia la bandera.
      courseD_bounce_events10: Ahora hay una meta en la parte superior. Une los bloques "anotar punto" y "anotar punto del oponente" a los bloques "cuando pelota alcanza la meta" y "cuando pelota pasa de largo" para crear un juego. Prueba cuantos puntos puedes anotar antes de que tu oponente anote dos veces.
      courseD_bounce_events10s: 'Añade el bloque `anotar un punto` al evento `cuando la pelota llega a la meta` y el bloque `anotar punto al oponente` al evento `cuando la pelota no alcanza la mano` para crear un juego. '
      courseD_bounce_events10s_2018: 'Añade el bloque `anotar un punto` al evento `cuando la pelota llega a la meta` y el bloque `anotar punto al oponente` al evento `cuando la pelota no alcanza la mano` para crear un juego. '
      courseD_bounce_events10s_2019: 'Añade el bloque `anotar un punto` al evento `cuando la pelota llega a la meta` y el bloque `anotar punto al oponente` al evento `cuando la pelota no alcanza la mano` para crear un juego. '
      courseD_bounce_events11: Ahora puedes unir bloques al bloque "cuando ejecute". Tienes que colocar el nuevo bloque "lanzar pelota nueva" en más de un lugar. También, trata de cambiar la escena o la velocidad de la paleta y la pelota y ver cuántos puntos puedes anotar antes de que tu oponente anote dos veces.
      courseD_bounce_events11s: 'Añade el bloque `lanzar nueva pelota` en todos los lugares donde el juego necesite una pelota nueva. '
      courseD_bounce_events11s_2018: 'Añade el bloque `lanzar nueva pelota` en todos los lugares donde el juego necesite una pelota nueva. '
      courseD_bounce_events11s_2019: 'Añade el bloque `lanzar nueva pelota` en todos los lugares donde el juego necesite una pelota nueva. '
      courseD_bounce_events12: Crea tu propio juego "Rebote". Puedes cambiar todos los efectos visuales y las reglas. Cuando estés listo, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      courseD_bounce_events12s: Personaliza este juego. Puedes cambiar las imágenes y las reglas. Cuando estés listo, haz clic en "Finalizar" para que tus amigos prueben el juego en sus teléfonos.
      courseD_bounce_events12s_2018: Personaliza este juego. Puedes cambiar las imágenes y las reglas. Cuando estés listo, haz clic en "Finalizar" para que tus amigos prueben el juego en sus teléfonos.
      courseD_bounce_events12s_2019: Personaliza este juego. Puedes cambiar las imágenes y las reglas. Cuando estés listo, haz clic en "Finalizar" para que tus amigos prueben el juego en sus teléfonos.
      courseD_bounce_events1s: Añade un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hacia la red.
      courseD_bounce_events1s_2018: Añade un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hacia la red.
      courseD_bounce_events1s_2019: Añade un bloque al bloque "cuando flecha izquierda" y presiona "Ejecutar" para mover al jugador hacia la red.
      courseD_bounce_events2: Une un bloque a los bloques "cuándo flecha derecha" y "cuándo flecha izquierda". Mueve la paleta para alcanzar ambos objetivos finales.
      courseD_bounce_events2s: Ahora, agrega un bloque al evento 'cuando evento derecho' para que la mano pueda obtener ambas cestas.
      courseD_bounce_events2s_2018: Ahora, agrega un bloque al evento 'cuando evento derecho' para que la mano pueda obtener ambas cestas.
      courseD_bounce_events2s_2019: Ahora, agrega un bloque al evento 'cuando evento derecho' para que la mano pueda obtener ambas cestas.
      courseD_bounce_events3: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      courseD_bounce_events3s: Ahora intenta algo similar con el bloque "cuándo flecha arriba". Mueve la paleta hacia el objetivo final en la parte superior.
      courseD_bounce_events4: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este desafío.
      courseD_bounce_events4s: Esta vez tienes que añadir cuatro bloques. Mueve la paleta a los cuatro objetivos finales para completar este desafío.
      courseD_bounce_events5: Vamos a lanzar una pelota hacia la paleta. Une un bloque al bloque "cuando la pelota golpea la paleta" para asegurar que la pelota alcance el objetivo final.
      courseD_bounce_events5s: Añade un bloque al evento `cuando la pelota toque la mano` para garantizar que la pelota alcance la canasta.
      courseD_bounce_events5s_2018: Añade un bloque al evento `cuando la pelota toque la mano` para garantizar que la pelota alcance la canasta.
      courseD_bounce_events5s_2019: Añade un bloque al evento `cuando la pelota toque la mano` para garantizar que la pelota alcance la canasta.
      courseD_bounce_events6: Ahora el objetivo final está en la parte superior. Tienes que unir bloques a ambos bloques de "cuando la pelota choca" para resolver este desafío.
      courseD_bounce_events6s: Para resolver este desafío, añade el código para hacer que la pelota rebote si golpea el muro.
      courseD_bounce_events6s_2018: Para resolver este desafío, añade el código para hacer que la pelota rebote si golpea el muro.
      courseD_bounce_events6s_2019: Para resolver este desafío, añade el código para hacer que la pelota rebote si golpea el muro.
      courseD_bounce_events7: Une bloques a cada uno de los bloques "cuando". Rebota la pelota hasta que alcance el objetivo final.
      courseD_bounce_events7s: Añade bloques de sonido para que la red emita un silbido si tocas la canasta, y haz que suene el silbato si la pelota no alcanza tu mano. Rebota la pelota hasta que golpee el blanco final.
      courseD_bounce_events7s_2018: Añade bloques de sonido para que la red emita un silbido si tocas la canasta, y haz que suene el silbato si la pelota no alcanza tu mano. Rebota la pelota hasta que golpee el blanco final.
      courseD_bounce_events7s_2019: Añade bloques de sonido para que la red emita un silbido si tocas la canasta, y haz que suene el silbato si la pelota no alcanza tu mano. Rebota la pelota hasta que golpee el blanco final.
      courseD_collector_debugging1: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging1_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging1a: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging1a_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging1a_2019: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2a: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2a_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2a_2019: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3a: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3a_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3a_2019: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4a: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4a_2018: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4a_2019: Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging5: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.
      courseD_collector_debugging5_2018: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.
      courseD_collector_debugging5a: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.
      courseD_collector_debugging5a_2018: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.
      courseD_collector_debugging5a_2019: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.
      courseD_collector_debugging6: 'Desafío: Usa tus habilidades de depuración para corregir los errores y recoger todo el tesoro.'
      courseD_collector_debugging6_2018: 'Desafío: Usa tus habilidades de depuración para corregir los errores y recoger todo el tesoro.'
      courseD_collector_debugging6a: 'Desafío: ¡Usa el código en el área de trabajo para obtener al menos **6** piezas del tesoro!'
      courseD_collector_debugging6a_2018: 'Desafío: ¡Usa el código en el área de trabajo para obtener al menos **6** piezas del tesoro!'
      courseD_collector_debugging6a_2019: 'Desafío: ¡Usa el código en el área de trabajo para obtener al menos **6** piezas del tesoro!'
      courseD_collector_debugging7: 'Desafío: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.'
      courseD_collector_debugging_challenge2: "¿Eres experto en bucles anidados? ¡Usa lo que has aprendido hasta ahora para recoger todo el tesoro!"
      courseD_collector_debugging_challenge2_2018: "¿Eres experto en bucles anidados? ¡Usa lo que has aprendido hasta ahora para recoger todo el tesoro!"
      courseD_collector_nested_loops_challenge2: Ayuda al recolector a alcanzar al menos dos pilas del tesoro usando solo los bloques en tu caja de herramientas. Es posible recolectar las 4.
      courseD_collector_nested_loops_challenge2_2018: Ayuda al recolector a alcanzar al menos dos pilas del tesoro usando solo los bloques en tu caja de herramientas. Es posible recolectar las 4.
      courseD_collector_nested_loops_challenge2_2019: Ayuda al recolector a alcanzar al menos dos pilas del tesoro usando solo los bloques en tu caja de herramientas. Es posible recolectar las 4.
      courseD_collector_nested_loops_challenge2a: Ayuda a Laurel a recoger al menos dos pilas de tesoro.
      courseD_collector_ramp10: Ayuda a Laurel a recoger todo el tesoro.
      courseD_collector_ramp8: Ayuda a Laurel a recoger todo el tesoro.
      courseD_collector_ramp9: Ayuda a Laurel a recoger todo el tesoro.
      courseD_collector_until_challenge1: "¿Eres experto en loops anidados? ¡Usa lo que has aprendido hasta ahora para recolectar todo el tesoro!"
      courseD_debugging_1: Corrige los errores para recoger todo el néctar.
      courseD_debugging_2: Corrige los errores para recoger todo el néctar.
      courseD_debugging_3: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      courseD_debugging_4: Corrige los errores para hacer toda la miel.
      courseD_debugging_5: 'Desafío: Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver el desafío.'
      courseD_debugging_6: 'Desafío: Corrige los errores para recoger el néctar y hacer toda la miel.'
      courseD_farmer_condLoops1: Usa condicionales para asegurarte de recoger todo el maíz solamente cuando esté ahí.
      courseD_farmer_condLoops1_2018: Usa condicionales para asegurarte de recoger todo el maíz solamente cuando esté ahí.
      courseD_farmer_condLoops1_2019: Usa condicionales para asegurarte de recoger todo el maíz solamente cuando esté ahí.
      courseD_farmer_condLoops2: Ayuda a la cosechadora a recoger el maíz y las lechugas del campo.
      courseD_farmer_condLoops2_2018: Ayuda a la cosechadora a recoger el maíz y las lechugas del campo.
      courseD_farmer_condLoops2_2019: Ayuda a la cosechadora a recoger el maíz y las lechugas del campo.
      courseD_farmer_condLoops3: _"¡Maíz, lechuga Y calabazas! Ayúdame a recoger todo"._
      courseD_farmer_condLoops3_2018: _"¡Maíz, lechuga Y calabazas! Ayúdame a recoger todo"._
      courseD_farmer_condLoops3_2019: _"¡Maíz, lechuga Y calabazas! Ayúdame a recoger todo"._
      courseD_farmer_condLoops4: Ayuda a la cosechadora a recoger todas las lechugas en cada racimo antes de moverte a la siguiente rama.
      courseD_farmer_condLoops4_2018: Ayuda a la cosechadora a recoger todas las lechugas en cada racimo antes de moverte a la siguiente rama.
      courseD_farmer_condLoops4_2019: Ayuda a la cosechadora a recoger todas las lechugas en cada racimo antes de moverte a la siguiente rama.
      courseD_farmer_condLoops4a: Ayuda a la granjera a recoger todas las lechugas en cada racimo antes de moverte a la siguiente rama.
      courseD_farmer_condLoops5: Recoge todo el maíz y las lechugas, y al final, toma la calabaza.
      courseD_farmer_condLoops5_2018: Recoge todo el maíz y las lechugas, y al final, toma la calabaza.
      courseD_farmer_condLoops5_2019: Recoge todo el maíz y las lechugas, y al final, toma la calabaza.
      courseD_farmer_condLoops6: "¿Puedes descubrir cómo recoger la calabaza? ¡Asegúrate de recoger todo el maíz a lo largo del camino!"
      courseD_farmer_condLoops6_2018: "¿Puedes descubrir cómo recoger la calabaza? ¡Asegúrate de recoger todo el maíz a lo largo del camino!"
      courseD_farmer_condLoops6_2019: "¿Puedes descubrir cómo recoger la calabaza? ¡Asegúrate de recoger todo el maíz a lo largo del camino!"
      courseD_farmer_condLoops7: 'Desafío: Recoge todo el maíz y las lechugas, y luego recoge la calabaza.'
      courseD_farmer_condLoops7_2018: 'Desafío: Recoge todo el maíz y las lechugas, y luego recoge la calabaza.'
      courseD_farmer_condLoops7_2019: 'Desafío: Recoge todo el maíz y las lechugas, y luego recoge la calabaza.'
      courseD_farmer_condLoops8: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops8_2018: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops8_2019: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9_2018: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9_2019: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9_predict1: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9_predict1_2018: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops9_predict1_2019: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      courseD_farmer_condLoops_challenge1: Recoge todo para completar el nivel. Cada cultivo oculto solo tiene un maíz o una lechuga.
      courseD_farmer_condLoops_challenge1_2018: Recoge todo para completar el nivel. Cada cultivo oculto solo tiene un maíz o una lechuga.
      courseD_farmer_condLoops_challenge1_2019: Recoge todo para completar el nivel. Cada cultivo oculto solo tiene un maíz o una lechuga.
      courseD_farmer_condLoops_challenge2: Recoge todo para completar el nivel.
      courseD_farmer_condLoops_challenge2_2018: Recoge todo para completar el nivel.
      courseD_farmer_condLoops_challenge2_2019: Recoge todo para completar el nivel.
      courseD_farmer_condLoops_challenge2_clone: Recoge todo para completar el nivel.
      courseD_farmer_conditionals1: Muévete a la pila de tierra y usa el bloque `remover` para eliminarla.
      courseD_farmer_conditionals10: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_conditionals2: Muévete hacia el orificio y llénalo con 6 paladas de tierra; usa el bloque `llenar`.
      courseD_farmer_conditionals3: Usa la menor cantidad de bloques posible para resolver este desafío.
      courseD_farmer_conditionals4: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      courseD_farmer_conditionals5: 'Ayúdame a quitar toda esta tierra. '
      courseD_farmer_conditionals6: Usa el bucle `mientras` para llenar los orificios fácilmente.
      courseD_farmer_conditionals7: Llena el orificio al final de cada uno de estos caminos.
      courseD_farmer_conditionals8: 'Desafío: Llena estos orificios con la menor cantidad de bloques posible. '
      courseD_farmer_conditionals9: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_until_challenge2: Usa bloques si/si no para seguir el camino con curvas. En cada esquina, usa el comando 'remover 1' en un loop para limpiar los montones.
      courseD_farmer_until_challenge2_2018: Usa bloques si/si no para seguir el camino con curvas. En cada esquina, usa el comando 'remover 1' en un loop para limpiar los montones.
      courseD_farmer_while1: Muévete a la pila de tierra y usa el bloque `remover` para eliminarla.
      courseD_farmer_while10: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while10_2018: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while10_2019: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while10_predict2: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while10_predict2_2018: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while10_predict2_2019: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while1_2018: Muévete a la pila de tierra y usa el bloque `remover` para eliminarla.
      courseD_farmer_while1_2019: Muévete a la pila de tierra y usa el bloque `remover` para eliminarla.
      courseD_farmer_while2: Muévete hacia el orificio y llénalo con 6 paladas de tierra; usa el bloque `llenar`.
      courseD_farmer_while2_2018: Muévete hacia el orificio y llénalo con 6 paladas de tierra; usa el bloque `llenar`.
      courseD_farmer_while2_2019: Muévete hacia el orificio y llénalo con 6 paladas de tierra; usa el bloque `llenar`.
      courseD_farmer_while3: Usa la menor cantidad de bloques posible para resolver este desafío.
      courseD_farmer_while3_2018: Usa la menor cantidad de bloques posible para resolver este desafío.
      courseD_farmer_while3_2019: Usa la menor cantidad de bloques posible para resolver este desafío.
      courseD_farmer_while4: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      courseD_farmer_while4_2018: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      courseD_farmer_while4_2019: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      courseD_farmer_while4_predict1: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      courseD_farmer_while4_predict1_2018: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      courseD_farmer_while4_predict1_2019: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      courseD_farmer_while5: 'Ayúdame a quitar toda esta tierra. '
      courseD_farmer_while5_2018: 'Ayúdame a quitar toda esta tierra. '
      courseD_farmer_while5_2019: 'Ayúdame a quitar toda esta tierra. '
      courseD_farmer_while6: Usa el bucle `mientras` para llenar los orificios fácilmente.
      courseD_farmer_while6_2018: Usa el bucle `mientras` para llenar los orificios fácilmente.
      courseD_farmer_while6_2019: Usa el bucle `mientras` para llenar los orificios fácilmente.
      courseD_farmer_while7: Llena el orificio al final de cada uno de estos caminos.
      courseD_farmer_while7_2018: Llena el orificio al final de cada uno de estos caminos.
      courseD_farmer_while7_2019: Llena el orificio al final de cada uno de estos caminos.
      courseD_farmer_while8: 'Desafío: Llena estos orificios con la menor cantidad de bloques posible. '
      courseD_farmer_while8_2018: 'Desafío: Llena estos orificios con la menor cantidad de bloques posible. '
      courseD_farmer_while8_2019: 'Desafío: Llena estos orificios con la menor cantidad de bloques posible. '
      courseD_farmer_while9: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while9_2018: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while9_2019: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      courseD_farmer_while_challenge1: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge1_2018: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge1_2019: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge2: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge2_2018: Llena todos los hoyos y remueve todos los montones.
      courseD_harvester_nested_loops_challenge1-broken: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      courseD_harvester_nested_loops_challenge1: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      courseD_harvester_nested_loops_challenge1_2018: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      courseD_harvester_nested_loops_challenge1_2019: '"¡Necesito ayuda en la granja! Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."'
      courseD_iceage_loops1: "¡Ayuda a Scrat a cruzar el hielo para llegar hasta la bellota!"
      courseD_iceage_loops10: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops10_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops11: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops11_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops12: "¡Llega a la bellota como sea!"
      courseD_iceage_loops12_2019: "¡Llega a la bellota como sea!"
      courseD_iceage_loops1_2019: "¡Ayuda a Scrat a cruzar el hielo para llegar hasta la bellota!"
      courseD_iceage_loops2: "¡Usa un bloque `girar a la izquierda` para obtener la bellota!"
      courseD_iceage_loops2_2019: "¡Usa un bloque `girar a la izquierda` para obtener la bellota!"
      courseD_iceage_loops3: "¿Puedes obtener la bellota con un solo bloque `mover hacia adelante`?"
      courseD_iceage_loops3_2019: "¿Puedes obtener la bellota con un solo bloque `mover hacia adelante`?"
      courseD_iceage_loops4: "¡Añade un bloque más para que Scrat llegue hasta la bellota!"
      courseD_iceage_loops4_2019: "¡Añade un bloque más para que Scrat llegue hasta la bellota!"
      courseD_iceage_loops6: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseD_iceage_loops6_2019: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseD_iceage_loops7: "¡Scrat realmente quiere esa bellota! "
      courseD_iceage_loops7_2019: "¡Scrat realmente quiere esa bellota! "
      courseD_iceage_loops8: "¿Puedes arreglar este código? "
      courseD_iceage_loops8_2019: "¿Puedes arreglar este código? "
      courseD_iceage_loops9: "¡La bellota está muy lejos! ¿Puedes utilizar los bucles para ayudar a Scrat a llegar hasta allí?"
      courseD_iceage_loops9_2019: "¡La bellota está muy lejos! ¿Puedes utilizar los bucles para ayudar a Scrat a llegar hasta allí?"
      courseD_maze_intro4_2019: Ayuda a Red a llegar al cerdo.
      courseD_maze_intro5a_2019: Pon atención a la secuencia y ve si puedes descifrar ¡cómo llegar a ese cerdo!
      courseD_maze_intro5c_2019: "¡Ten cuidado con el TNT! Ayuda a que Red llegue hasta el cerdo."
      courseD_maze_loops_challenge1: Vamos a cazar un tesoro - ¡usando bucles! Ayuda al coleccionista a alcanzar al menos dos pilas del tesoro usando sólo los bloques en tu caja de herramientas.
      courseD_maze_nestedLoops3: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      courseD_maze_nestedLoops3_2018: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      courseD_maze_nestedLoops3_2019: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      courseD_maze_nestedLoops4: "¡Lleva al zombie hasta el girasol usando la menor cantidad de bloques posible!  "
      courseD_maze_nestedLoops4_2018: "¡Lleva al zombie hasta el girasol usando la menor cantidad de bloques posible!  "
      courseD_maze_nestedLoops4_2019: "¡Lleva al zombie hasta el girasol usando la menor cantidad de bloques posible!  "
      courseD_maze_nestedLoops5: "¡Lleva al zombie hasta el girasol con la menor cantidad de bloques posible!"
      courseD_maze_nestedLoops5_2018: "¡Lleva al zombie hasta el girasol con la menor cantidad de bloques posible!"
      courseD_maze_nestedLoops5_2019: "¡Lleva al zombie hasta el girasol con la menor cantidad de bloques posible!"
      courseD_maze_nestedLoops6: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      courseD_maze_nestedLoops6_2018: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      courseD_maze_nestedLoops6_2019: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      courseD_maze_ramp1: Para este desafío, encaja todos los bloques juntos y haz clic en "Ejecutar" ¡para verlos funcionar!
      courseD_maze_ramp1_2018: Para este desafío, encaja todos los bloques juntos y haz clic en "Ejecutar" ¡para verlos funcionar!
      courseD_maze_ramp1_2019: Para este desafío, encaja todos los bloques juntos y haz clic en "Ejecutar" ¡para verlos funcionar!
      courseD_maze_ramp2: Arrastra un bloque 'avanzar' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseD_maze_ramp2_2018: Arrastra un bloque 'avanzar' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseD_maze_ramp2_2019: Arrastra un bloque 'avanzar' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseD_maze_ramp3: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseD_maze_ramp3_2018: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseD_maze_ramp3_2019: Elimina el bloque sobrante "mover hacia adelante".
      courseD_maze_ramp4: "¡Evita el TNT o volarán plumas!"
      courseD_maze_ramp4_2018: "¡Evita el TNT o volarán plumas!"
      courseD_maze_ramp4_2019: Ayuda a Scrat a llegar a la bellota.
      courseD_maze_ramp5: Evita el TNT.
      courseD_maze_ramp5_2018: Evita el TNT.
      courseD_maze_ramp5_2019: Evita el TNT.
      courseD_maze_ramp5a: Pon atención a la secuencia y ve si puedes descifrar ¡cómo llegar a ese cerdo!
      courseD_maze_ramp5a_2018: Pon atención a la secuencia y ve si puedes descifrar ¡cómo llegar a ese cerdo!
      courseD_maze_ramp5a_2019: Pon atención a la secuencia y ve si puedes descifrar ¡cómo llegar a ese cerdo!
      courseD_maze_ramp5b: "¡Navega por el laberinto para ayudar al pájaro a encontrar al cerdo!"
      courseD_maze_ramp5b_2018: "¡Navega por el laberinto para ayudar al pájaro a encontrar al cerdo!"
      courseD_maze_ramp5b_2019: "¡Navega por el laberinto para ayudar al pájaro a encontrar al cerdo!"
      courseD_maze_ramp5c: Ayuda al pájaro a llegar al cerdo.
      courseD_maze_ramp5c_2018: Ayuda al pájaro a llegar al cerdo.
      courseD_maze_ramp5c_2019: "¡Ten cuidado con el hielo roto! Ayuda a Scrat a llegar hasta la bellota."
      courseD_maze_ramp5d: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp5d_2018: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp5d_2019: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp6: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseD_maze_ramp6a: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseD_maze_ramp7: Haz que el pájaro llegue al cerdo
      courseD_maze_until1: Lleva al pájaro enojado hasta el cerdo.
      courseD_maze_until10: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until1_2018: Lleva al pájaro enojado hasta el cerdo.
      courseD_maze_until1_2019: Lleva al pájaro enojado hasta el cerdo.
      courseD_maze_until2: Ahora, usa el bucle 'repetir hasta' para hacer l mismo sin especificar cuántas veces moverse hacia adelate y girar.
      courseD_maze_until3: Lleva al pájaro hasta el cerdo.
      courseD_maze_until3_2018: Lleva al pájaro hasta el cerdo.
      courseD_maze_until3_2019: Lleva al pájaro hasta el cerdo.
      courseD_maze_until4: "¿Puedes llevar al zombie hasta el girasol solamente con los bloques que están disponibles?"
      courseD_maze_until4_2018: "¿Puedes llevar al zombie hasta el girasol solamente con los bloques que están disponibles?"
      courseD_maze_until4_2019: "¿Puedes llevar al zombie hasta el girasol solamente con los bloques que están disponibles?"
      courseD_maze_until5: Usa el bloque 'sí' para ayudar al zombie a decidir cuándo girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until5_2018: Usa el bloque 'sí' para ayudar al zombie a decidir cuándo girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until5_2019: Usa el bloque 'sí' para ayudar al zombie a decidir cuándo girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until6: Ayuda al zombie a llegar al girasol.
      courseD_maze_until6_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until6_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until8: Ayuda al zombie a llegar al girasol.
      courseD_maze_until8_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until9: "**Desafío:** Evita las mordidas y ayuda al zombie a llegar hasta el girasol."
      courseD_maze_until9_2018: "**Desafío:** Evita las mordidas y ayuda al zombie a llegar hasta el girasol."
      courseD_maze_until9_2019: "**Desafío:** Evita las mordidas y ayuda al zombie a llegar hasta el girasol."
      courseD_maze_until_challenge: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge1-delete-this-copy: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge1: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge1_2018: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_maze_until_challenge2: Sin pistas, sólo desafío. Lleva al zombie hasta el girasol.
      courseD_pixelation: Crea una imagen a tu elección en código binario. El lenguaje binario estará representado por '0' y '1' únicamente.
      courseD_playLab_cond1: Lleva a Pegleg hasta las banderas para resolver este desafío.
      courseD_playLab_cond1_2018: Lleva a Pegleg hasta las banderas para resolver este desafío.
      courseD_playLab_cond1_2019: Lleva a Pegleg hasta las banderas para resolver este desafío.
      courseD_playLab_cond2: 'Regala un punto a Pegleg cada vez que llegue hasta el dragón. '
      courseD_playLab_cond2_2018: 'Regala un punto a Pegleg cada vez que llegue hasta el dragón. '
      courseD_playLab_cond2_2019: 'Regala un punto a Pegleg cada vez que llegue hasta el dragón. '
      courseD_playLab_cond3: 'Haz que el dragón cambie entre emociones al azar a cada segundo.  '
      courseD_playLab_cond3_2018: 'Haz que el dragón cambie entre emociones al azar a cada segundo.  '
      courseD_playLab_cond3_2019: 'Haz que el dragón cambie entre emociones al azar a cada segundo.  '
      courseD_playLab_cond3a: Hazlo de manera tal que, cuando Pegleg llegue hasta el dragón, obtenga 2 puntos si el dragón está feliz, y 1 punto si no lo está.
      courseD_playLab_cond3a_2018: Hazlo de manera tal que, cuando Pegleg llegue hasta el dragón, obtenga 2 puntos si el dragón está feliz, y 1 punto si no lo está.
      courseD_playLab_cond3a_2019: Hazlo de manera tal que, cuando Pegleg llegue hasta el dragón, obtenga 2 puntos si el dragón está feliz, y 1 punto si no lo está.
      courseD_playLab_cond3b: "1.  Haz que el dragón cambie entre emociones al azar a cada segundo.  \n2.  Hazlo de manera tal que, cuando Pegleg llegue hasta el dragón, obtenga 2 puntos si el dragón está feliz, y 1 punto si no lo está."
      courseD_playLab_cond4: Añade código para que el ninja (actor 3) comience a perseguir a Pegleg apenas comienza el juego. Si el ninja lo atrapa, el juego finaliza con una derrota.
      courseD_playLab_cond4_2018: Añade código para que el ninja (actor 3) comience a perseguir a Pegleg apenas comienza el juego. Si el ninja lo atrapa, el juego finaliza con una derrota.
      courseD_playLab_cond4_2019: Añade código para que el ninja (actor 3) comience a perseguir a Pegleg apenas comienza el juego. Si el ninja lo atrapa, el juego finaliza con una derrota.
      courseD_playLab_cond5: Agrega un bucle `repetir siempre` que revise continuamente si el puntaje es mayor a 5; cuando lo sea, el juego finaliza con una victoria.
      courseD_playLab_cond5_2018: Agrega un bucle `repetir siempre` que revise continuamente si el puntaje es mayor a 5; cuando lo sea, el juego finaliza con una victoria.
      courseD_playLab_cond5_2019: Agrega un bucle `repetir siempre` que revise continuamente si el puntaje es mayor a 5; cuando lo sea, el juego finaliza con una victoria.
      courseD_playLab_cond6: "1.  Reduce la marcha del ninja (actor 3) antes de que comience a perseguir al pirata. \n2.  Si el pirata es más grande que 225 pixeles, haz que el ninja **huya** del pirata.\n    De lo contrario, haz que el ninja **persiga** al pirata.  "
      courseD_playLab_cond6_2018: "1.  Reduce la marcha del ninja (actor 3) antes de que comience a perseguir al pirata. \n2.  Si el pirata es más grande que 225 pixeles, haz que el ninja **huya** del pirata.\n    De lo contrario, haz que el ninja **persiga** al pirata.  "
      courseD_playLab_cond6_2019: "1.  Reduce la marcha del ninja (actor 3) antes de que comience a perseguir al pirata. \n2.  Si el pirata es más grande que 225 pixeles, haz que el ninja **huya** del pirata.\n    De lo contrario, haz que el ninja **persiga** al pirata.  "
      courseD_playLab_cond6a: Si el pirata (actor 1) está en la zona segura, espera un segundo y, luego, quítale un punto mientras permanezca debajo de la línea del pulpo.
      courseD_playLab_cond6a_2018: Si el pirata (actor 1) está en la zona segura, espera un segundo y, luego, quítale un punto mientras permanezca debajo de la línea del pulpo.
      courseD_playLab_cond6a_2019: Si el pirata (actor 1) está en la zona segura, espera un segundo y, luego, quítale un punto mientras permanezca debajo de la línea del pulpo.
      courseD_playLab_cond6cloneForTest: Probando
      courseD_playLab_condFP: "¡Crea tu propio juego para presumir con tus amigos!"
      courseD_playLab_condFP_2018: "¡Crea tu propio juego para presumir con tus amigos!"
      courseD_playLab_condFP_2019: "¡Crea tu propio juego para presumir con tus amigos!"
      courseD_playLab_condFP_a: "¡Crea tu propio juego para presumir con tus amigos!"
      courseD_playLab_condForVideo: "¡Crea tu propio juego para presumir con tus amigos!"
      courseD_playLab_embedded: |-
        Mueve a Pegleg el Pirata con las teclas de flechas. ¡Haz que llegue hasta el dragón para anotar puntos, pero evita al ninja! Si te detienes debajo de la línea del pulpo, el ninja dejará de perseguirte. ¡Pero ten cuidado! Mientras más te quedes allí, ¡más puntos perderás!

        ¡Logra 5 puntos para ganar!
      courseD_scrat_ramp1: Para este desafío, encaja todos los bloques juntos y haz clic en "Ejecutar" ¡para verlos funcionar!
      courseD_scrat_ramp1_2018: Para este desafío, encaja todos los bloques juntos y haz clic en "Ejecutar" ¡para verlos funcionar!
      courseD_scrat_ramp2: Arrastra un bloque 'avanzar' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseD_scrat_ramp2_2018: Arrastra un bloque 'avanzar' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseD_scrat_ramp3: Hay un bloque sobrante que hará que Scrat se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseD_scrat_ramp3_2018: Hay un bloque sobrante que hará que Scrat se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseD_scrat_ramp4: "¡Evita el hielo trizado para mantener seguro a Scrat!"
      courseD_scrat_ramp4_2018: "¡Evita el hielo trizado para mantener seguro a Scrat!"
      courseD_scrat_ramp5: Evita el hielo roto.
      courseD_scrat_ramp5_2018: Evita el hielo roto.
      courseD_scrat_ramp6: "¡Ayuda a Scrat para llegar a la bellota usando un loop!"
      courseD_scrat_ramp6_2018: "¡Ayuda a Scrat para llegar a la bellota usando un loop!"
      courseD_scrat_ramp7: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_scrat_ramp7_2018: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_scrat_ramp8: "¡Usa lo que has aprendido para que Scrat llegue hasta la bellota!"
      courseD_scrat_ramp8_2018: "¡Usa lo que has aprendido para que Scrat llegue hasta la bellota!"
      courseE_aboutme_1: |-
        Rikki está usando Laboratorio de Sprite para crear un **póster interactivo** que puede compartir en la web. ¡Ha elegido este sprite para representarla!

        ¡Ejecuta el código a continuación y haz clic en el sprite de Rikki para ver lo que ha hecho hasta ahora!
      courseE_aboutme_2: |-
        ¡Rikki tiene tantas cosas interesantes que compartir! Además de su saludo, hagamos que comparta **Información Personal** cuando se hace clic en ella.

        Siéntete libre de usar tu imaginación para ayudar a Rikki. Solo ten cuidado de que no comparta **Información Privada** accidentalmente.
      courseE_aboutme_4: |-
        ¡Aquí está Thuy, el mejor amigo de Rikki!

        Haz que Rikki comparta información SEGURA sobre ella cuando se hace clic en Thuy.
      courseE_aboutme_5: "¡A Rikki le encanta el helado! Ella estaba buscando un disfraz de cono de helado, pero lo más parecido que pudo encontrar fue... un jabón. ¡Puaj! \n\nVamos a sorprenderla: **dibuja un traje de cono de helado** que puede utilizar para ese sprite.\n\n**Crea un disfraz de cono de helado**\n\n-   Haz clic en la pestaña **Disfraces**.\n\n-   ¡Dibuja un cono de helado!\n\n-   ¡Reemplaza el disfraz de jabón del sprite con tu disfraz de cono de helado en el código de abajo!"
      courseE_aboutme_6: |-
        El póster de Rikki se ve bien, ¡pero puede ser aún mejor!

        **Tres tareas para completar el póster de Rikki**

        -   Haz que Rikki comience a recorrer cuando se hace clic en ella. ¡Ella ama explorar!

        -   Haz que Thuy comience a girar cuando Rikki la toca. ¡Ella tiene cosquillas!

        -   Haz que el cono de helado desaparezca cuando Rikki lo toca. ¡Qué rico!
      courseE_aboutme_7: |-
        Rikki está usando Laboratorio de Sprite para crear un **póster interactivo** que puede compartir en la web. ¡Ha elegido este sprite para representarla!

        ¡Ejecuta el código a continuación y haz clic en el sprite de Rikki para ver lo que ha hecho hasta ahora!
      courseE_aboutme_freeplay: "Gracias por ayudar a Rikki. Ahora es tu turno de **hacer tu propio póster interactivo**.\n\nUsa disfraces, mensajes, eventos y comportamientos para contarle al mundo sobre ti. \n\nAl igual que Rikki, ¡recuerda compartir información SEGURA!"
      courseE_artist_concept1: 'Recrea esta imagen. '
      courseE_artist_concept1_2018: 'Recrea esta imagen. '
      courseE_artist_concept1_2019: 'Recrea esta imagen. '
      courseE_artist_concept4: Recrea este dibujo.
      courseE_artist_concept4_2018: Recrea este dibujo.
      courseE_artist_concept4_2019: Recrea este dibujo.
      courseE_artist_concept_challenge1: 'Ayuda al artista a dibujar una forma única. '
      courseE_artist_concept_challenge1_2018: 'Ayuda al artista a dibujar una forma única. '
      courseE_artist_concept_challenge1_2019: 'Ayuda al artista a dibujar una forma única. '
      courseE_artist_concept_challenge2: Crea cinco molinillos usando el código de más abajo.
      courseE_artist_concept_challenge2_2018: Crea cinco molinillos usando el código de más abajo.
      courseE_artist_concept_challenge2_2019: Crea cinco molinillos usando el código de más abajo.
      courseE_artist_embed_functions8: Observa cuidadosamente este nivel. ¿Qué tipo de funciones ves que necesita un programa para crear un diseño como este? Pronto lo harás tú mismo, así que vuelve aquí cuando necesites ayuda.
      courseE_artist_functions1: "Usa cuadrados con lados de 100 pixeles para ayudar al zombi a dibujar gafas. \nEl puente entre las gafas es de 75 pixeles de largo."
      courseE_artist_functions10: Esta vez, usa líneas de 8 hexágonos con lados de 25 pixeles.
      courseE_artist_functions10_2018: Esta vez, usa líneas de 8 hexágonos con lados de 25 pixeles.
      courseE_artist_functions10_2019: Esta vez, usa líneas de 8 hexágonos con lados de 25 pixeles.
      courseE_artist_functions1_2018: "Usa cuadrados con lados de 100 pixeles para ayudar al zombi a dibujar gafas. \nEl puente entre las gafas es de 75 pixeles de largo."
      courseE_artist_functions2: 'Esta vez, usa la función `dibujar un cuadrado` para crear las gafas. '
      courseE_artist_functions2_2018: 'Usa la función `dibujar un cuadrado` para crear las gafas. '
      courseE_artist_functions2_2019: 'Usa la función `dibujar un cuadrado` para crear las gafas. '
      courseE_artist_functions3: Puedes agregar un bloque `repetir` para hacer este dibujo.
      courseE_artist_functions3_2018: Desarrolla una función que creará esta estrella.
      courseE_artist_functions3_2019: Desarrolla una función que creará esta estrella.
      courseE_artist_functions4: Ahora que puedes dibujar una estrella, ¡intenta dibujar cuatro!
      courseE_artist_functions4_2018: Ahora que puedes dibujar una estrella, ¡intenta dibujar cuatro!
      courseE_artist_functions5: Dibuja solamente esas tres estrellas para finalizar este desafío.
      courseE_artist_functions5_2018: Dibuja solamente esas tres estrellas para finalizar este desafío.
      courseE_artist_functions5_2019: Dibuja solamente esas tres estrellas para finalizar este desafío.
      courseE_artist_functions6: Dibuja un cuadrado para crear esta ventana. Luego, gira 90 grados antes de dibujar otro, y así sucesivamente.
      courseE_artist_functions6_2018: Dibuja un cuadrado para crear esta ventana. Luego, gira 90 grados antes de dibujar otro, y así sucesivamente.
      courseE_artist_functions7: Crea `dibujar una ventana` y llama la función cinco veces para resolver este desafío. ¡Cuidado con la puerta!
      courseE_artist_functions7_2018: Crea `dibujar una ventana` y llama la función cinco veces para resolver este desafío. ¡Cuidado con la puerta!
      courseE_artist_functions7_2019: Crea `dibujar una ventana` y llama la función cinco veces para resolver este desafío. ¡Cuidado con la puerta!
      courseE_artist_functions8: 'Desafío: Crea todas las funciones que piensas que necesitas para dibujar estos cuadrados de 50 pixeles.'
      courseE_artist_functions8_2018: Usa todo lo que has aprendido hasta ahora para recrear este diseño.
      courseE_artist_functions8_2019: Usa todo lo que has aprendido hasta ahora para recrear este diseño.
      courseE_artist_functions8a_2018: Crea una función para un solo cuadrado.
      courseE_artist_functions8a_2019: Crea una función para un solo cuadrado.
      courseE_artist_functions8b_2018: Llama a la función `dibujar un cuadrado` desde el interior de la función `dibujar una línea de cuadrados` para que esto sea incluso más fácil.
      courseE_artist_functions8b_2019: Llama a la función `dibujar un cuadrado` desde el interior de la función `dibujar una línea de cuadrados` para que esto sea incluso más fácil.
      courseE_artist_functions8c_2018: Agrega una función más que cree esta pila de cuadrados escalonados.
      courseE_artist_functions8c_2019: Agrega una función más que cree esta pila de cuadrados escalonados.
      courseE_artist_functions9: Crea esta imagen con los bloques proporcionados.
      courseE_artist_functions9_2018: "**Desafío:** Crea esta imagen con los bloques proporcionados."
      courseE_artist_functions9_2019: "**Desafío:** Crea esta imagen con los bloques proporcionados."
      courseE_artist_functionsProj_2018: "**Inspiración:** ¡Usa lo que has aprendido para hacer lo que quieras!"
      courseE_artist_functionsProj_2019: "**Inspiración:** ¡Usa lo que has aprendido para hacer lo que quieras!"
      courseE_artist_functions_challenge: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge1: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge1_2018: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge1_2019: Una vez que defines una función, puedes llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge2: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      courseE_artist_functions_challenge2_2018: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      courseE_artist_functions_challenge2_2019: Intenta este código para ver cómo funciona, ¡luego has tu programa propio!
      courseE_artist_ramp10: Ahora arrastra el código para el último triángulo al nuevo bucle para hacerlo girar y hacer un copo de nieve.
      courseE_artist_ramp11: "¡Ahora haz un cuadrado con Artista!"
      courseE_artist_ramp12: Usa lo que has aprendido para dibujar este triángulo dentro de un cuadrado.
      courseE_artist_ramp8: "¡Ahora haz un cuadrado con Artista!"
      courseE_artist_ramp8_2: "¡Ahora haz un cuadrado con Artista!"
      courseE_artist_ramp8_2018: "¡Ahora haz un cuadrado con Artista!"
      courseE_artist_ramp8_2_2018: "¡Ahora haz un cuadrado con Artista!"
      courseE_artist_ramp9: Usa lo que has aprendido para dibujar este triángulo.
      courseE_artist_ramp9_2: Usa lo que has aprendido para dibujar este triángulo.
      courseE_artist_ramp9_2018: Usa lo que has aprendido para dibujar este triángulo.
      courseE_artist_ramp9_2_2018: Usa lo que has aprendido para dibujar este triángulo.
      courseE_bee_concept1: Recoge todo el néctar de cada flor.
      courseE_bee_concept1_2018: Recoge todo el néctar de cada flor.
      courseE_bee_concept1_2019: Recoge todo el néctar de cada flor.
      courseE_bee_concept2: 'Ayuda a la abeja a hacer toda la miel. '
      courseE_bee_concept2_2018: 'Ayuda a la abeja a hacer toda la miel. '
      courseE_bee_concept2_2019: 'Ayuda a la abeja a hacer toda la miel. '
      courseE_bee_concept3: Usa la menor cantidad posible de bloques para recoger todo el néctar.
      courseE_bee_concept3_2018: Usa la menor cantidad posible de bloques para recoger todo el néctar.
      courseE_bee_concept3_2019: Usa la menor cantidad posible de bloques para recoger todo el néctar.
      courseE_bee_concept4: "¡Ah, oh! La abeja no está segura de si debería recoger el néctar o hacer miel. ¿Puedes ayudarla?"
      courseE_bee_concept4_2018: "¡Ah, oh! La abeja no está segura de si debería recoger el néctar o hacer miel. ¿Puedes ayudarla?"
      courseE_bee_concept4_2019: "¡Ah, oh! La abeja no está segura de si debería recoger el néctar o hacer miel. ¿Puedes ayudarla?"
      courseE_bee_concept5: "¿Hay que ayudar a la abeja a recoger el néctar de las flores?"
      courseE_bee_concept5_2018: "¿Hay que ayudar a la abeja a recoger el néctar de las flores?"
      courseE_bee_concept5_2019: "¿Hay que ayudar a la abeja a recoger el néctar de las flores?"
      courseE_bee_functions1: Colecta todo el néctar de cada flor.
      courseE_bee_functions10: Resuelve este desafío mediante la creación de una función que ayude a la abeja a obtener la miel antes de regresar al camino principal.
      courseE_bee_functions10_2018: Resuelve este desafío mediante la creación de una función que ayude a la abeja a obtener la miel antes de regresar al camino principal.
      courseE_bee_functions1_2018: Colecta todo el néctar de cada flor.
      courseE_bee_functions2: Usa la función `obtener 2 néctares` para recoger el néctar de cada flor.
      courseE_bee_functions2_2018: Usa la función `obtener 2 néctares` para recoger el néctar de cada flor.
      courseE_bee_functions3: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      courseE_bee_functions3_2018: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      courseE_bee_functions4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseE_bee_functions4_2018: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseE_bee_functions5: Ahora escribe la función para recoger el néctar de las flores.
      courseE_bee_functions5_2018: Ahora escribe la función para recoger el néctar de las flores.
      courseE_bee_functions6: Crea una función y llámala para recoger el néctar en cada flor y hacer miel en cada panal.
      courseE_bee_functions6_2018: Crea una función y llámala para recoger el néctar en cada flor y hacer miel en cada panal.
      courseE_bee_functions6test: Crea una función y llámala para recoger el néctar en cada flor y hacer miel en cada panal.
      courseE_bee_functions7: Crea tu propia función que recorra el camino, obtenga el néctar, haga la miel, y luego regrese a la abeja a la cima del camino. ¡Recoge todo el néctar y haz toda la miel!
      courseE_bee_functions7_2018: Crea tu propia función que recorra el camino, obtenga el néctar, haga la miel, y luego regrese a la abeja a la cima del camino. ¡Recoge todo el néctar y haz toda la miel!
      courseE_bee_functions8: Crea una función que recoja todo el néctar de cada flor.
      courseE_bee_functions8_2018: Crea una función que recoja todo el néctar de cada flor.
      courseE_bee_functions9: Crea una función que recoja todo el néctar de cada flor.
      courseE_bee_functions9_2018: Crea una función que recoja todo el néctar de cada flor.
      courseE_bee_functions9b: "¡Ahora inténtalo en la Abeja!"
      courseE_bee_functions_challenge1: Estás por tu cuenta para este desafío. ¡Esto puede "ser" más difícil de lo que parece!
      courseE_bee_functions_challenge1_2018: Estás por tu cuenta para este desafío. ¡Esto puede "ser" más difícil de lo que parece!
      courseE_bee_functions_challenge2: Estás por tu cuenta para este desafío. ¡Qué bueno!
      courseE_bee_functions_challenge2_2018: Estás por tu cuenta para este desafío. ¡Qué bueno!
      courseE_bee_ramp14: Ayuda a la abeja a seguir el camino para juntar toda la miel y todo el néctar.
      courseE_bee_ramp14_2018: Ayuda a la abeja a seguir el camino para juntar toda la miel y todo el néctar.
      courseE_bee_ramp17: Usa lo que has aprendido para resolver este desafío.
      courseE_collector_ramp10: Ayuda a Laurel a recoger todo el tesoro.
      courseE_collector_ramp8: Ayuda a Laurel a recoger todo el tesoro.
      courseE_collector_ramp9: Ayuda a Laurel a recoger todo el tesoro.
      courseE_farmer_concept1: "¿Puedes escribir un programa que llene estos orificios hasta que el terreno esté plano?"
      courseE_farmer_concept1_2018: "¿Puedes escribir un programa que llene estos orificios hasta que el terreno esté plano?"
      courseE_farmer_concept1_2019: "¿Puedes escribir un programa que llene estos orificios hasta que el terreno esté plano?"
      courseE_farmer_concept2: Recoge todas las calabazas.
      courseE_farmer_concept2_2018: Recoge todas las calabazas.
      courseE_farmer_concept2_2019: Recoge todas las calabazas.
      courseE_farmer_concept3: Llena el orificio al final de cada uno de estos caminos.
      courseE_farmer_concept3_2018: Llena el orificio al final de cada uno de estos caminos.
      courseE_farmer_concept3_2019: Llena el orificio al final de cada uno de estos caminos.
      courseE_farmer_concept4: Ahora vamos a un nivel más profundo. Hemos anidado todo el bloque de código en otro bucle, pero tienes que poner al artista en su lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede usted colocar al final del bucle exterior para dibujar la red entera?
      courseE_farmer_elseif_test: Llena el orificio al final de cada uno de estos caminos.
      courseE_farmer_functions1: Ayuda a la cosechadora a llegar a la calabaza y recogerla.
      courseE_farmer_functions10: Nadie sabe en qué se convertirán estos brotes. Usa las sentencias `si` para escribir el código para controlar y cosechar cada uno de ellos.
      courseE_farmer_functions10a1_2018: "¡Usa todo lo que has aprendido hasta ahora para resolver este desafío!"
      courseE_farmer_functions10a1_2019: "¡Usa todo lo que has aprendido hasta ahora para resolver este desafío!"
      courseE_farmer_functions10b: Usa tu nueva función dos veces para resolver este desafío.
      courseE_farmer_functions10b_2018: Usa tu nueva función dos veces para resolver este desafío.
      courseE_farmer_functions13_2018: Resuelve este desafío en 23 bloques o menos.
      courseE_farmer_functions13_2019: Resuelve este desafío en 23 bloques o menos.
      courseE_farmer_functions1_2018: Ayuda a la cosechadora a llegar a la calabaza y recogerla.
      courseE_farmer_functions1_2019: Ayuda a la cosechadora a llegar a la calabaza y recogerla.
      courseE_farmer_functions1a: Ahora ayuda a la cosechadora a recoger el maíz, la lechuga **y** la calabaza.
      courseE_farmer_functions1a_2018: Ayuda a la cosechadora a recoger todo el maíz y, luego, la calabaza.
      courseE_farmer_functions1a_2019: Ayuda a la cosechadora a recoger todo el maíz y, luego, la calabaza.
      courseE_farmer_functions2: "Ahora, habrá un número diferente de calabazas cada vez que ejecutes el programa.  \n\nUsa el bloque `mientras` para recoger solo la cantidad de calabazas que necesites."
      courseE_farmer_functions2a: Vamos a controlar muchos cuadrados para cultivos en los próximos desafíos. Movamos todo a una función para hacerlo más fácil.
      courseE_farmer_functions2aALT: Vamos a controlar muchos cuadrados para cultivos en los próximos desafíos. Movamos todo a una función para hacerlo más fácil.
      courseE_farmer_functions2b: Ayuda a la cosechadora a recoger el maíz y las calabazas.
      courseE_farmer_functions2b_2018: Ayuda a la cosechadora a recoger el maíz y las calabazas.
      courseE_farmer_functions2b_2019: Ayuda a la cosechadora a recoger el maíz y las calabazas.
      courseE_farmer_functions2ba: Ayuda a la granjera a recoger el maíz y las calabazas mediante la función `maíz y calabaza`.
      courseE_farmer_functions2ba_2018: Usa la función `maíz y calabaza` para ayudar a la granjera a recoger el maíz y las calabazas.
      courseE_farmer_functions2ba_2019: Ayuda a la granjera a recoger el maíz y las calabazas mediante la función `maíz y calabaza`.
      courseE_farmer_functions3: "¿Qué sucede cuando los caminos hacia las calabazas son de longitudes diferentes?  \n\nRecógelas todas con la menor cantidad posible de bloques."
      courseE_farmer_functions3b: Ahora ayuda a la granjera a recoger el maíz, la lechuga **y** la calabaza.
      courseE_farmer_functions3c: Ahora saca los bloques del código y déjalos dentro de la **función definición** para completar la función tú mismo.
      courseE_farmer_functions3c1_2018: "¡Esta función llama a otras funciones!"
      courseE_farmer_functions3c1_2019: "¡Esta función llama a otras funciones!"
      courseE_farmer_functions3c_2018: Intenta por un camino más largo.
      courseE_farmer_functions3c_2019: Intenta por un camino más largo.
      courseE_farmer_functions4: |-
        ¡Grandioso! Ahora tienes un código que funcionará para obtener calabazas de un camino de cualquier tamaño.

        Arrastremos ese código dentro de una función para que podamos usarlo de muchas maneras... pero primero usémoslo para resolver este desafío.
      courseE_farmer_functions4b: Usa tu nueva función para resolver este desafío.
      courseE_farmer_functions4b_2018: Usa tu nueva función para resolver este desafío.
      courseE_farmer_functions5: "¿Cómo puedes cambiar tu programa para hacer que esta función se adapte a cada uno de estos caminos?"
      courseE_farmer_functions5a: "¿Cómo puedes cambiar tu programa para hacer que esta función se adapte a cada uno de estos caminos?"
      courseE_farmer_functions5b: Los cultivos están creciendo en grupos. Agrega algunos bucles `mientras` a tu función para asegurarte de que obtendrás toda la producción.
      courseE_farmer_functions5c: Tu función será útil aquí.
      courseE_farmer_functions5c_2018: Tu función será útil aquí.
      courseE_farmer_functions6: |-
        _"¡Vamos a intentar algo nuevo!"_

        Aquí hay un código para recoger toda la lechuga. Muévelo dentro de una función para que podamos usarlo más tarde.
      courseE_farmer_functions6b: Recoge toda la producción.
      courseE_farmer_functions6c: "¿Qué necesitas agregar a este programa para que controle si el brote es maíz o lechuga?"
      courseE_farmer_functions6c_2018: "¿Qué necesitas agregar a este programa para que controle si el brote es maíz o lechuga?"
      courseE_farmer_functions7: Usa tus funciones para resolver este desafío.
      courseE_farmer_functions7a1_2018: Crea una función que envíe a la cosechadora por un camino cuadrado para recoger una sola planta de lechuga de la mitad de cada fila.
      courseE_farmer_functions7a1_2019: Crea una función que envíe a la cosechadora por un camino cuadrado para recoger una sola planta de lechuga de la mitad de cada fila.
      courseE_farmer_functions7b: Gira a la izquierda en el maíz y a la derecha en la lechuga para ayudar a la cosechadora a encontrar su sendero hasta la calabaza en este confuso camino.
      courseE_farmer_functions7b_2018: Gira a la izquierda en el maíz y a la derecha en la lechuga para ayudar a la cosechadora a encontrar su sendero hasta la calabaza en este confuso camino.
      courseE_farmer_functions8: "**Desafío:** Resuelve este desafío con la menor cantidad posible de bloques."
      courseE_farmer_functions8a1_2018: "¿Todavía es útil tu función?"
      courseE_farmer_functions8a1_2019: "¿Todavía es útil tu función?"
      courseE_farmer_functions8b: "**Desafío:** Usa el método de los últimos desafíos para recoger todas las calabazas. "
      courseE_farmer_functions8b_2018: "**Desafío:** Usa el método de los últimos desafíos para recoger todas las calabazas. "
      courseE_farmer_functions9: Utiliza condicionales para simplificar tu programa.
      courseE_farmer_functions9a1_2018: "¿Todavía es útil tu función?"
      courseE_farmer_functions9a1_2019: "¿Todavía es útil tu función?"
      courseE_farmer_functions9b: "¿Puedes descifrar el patrón que necesitas para resolver este desafío?"
      courseE_farmer_functions9b_2018: "¿Puedes descifrar el patrón que necesitas para resolver este desafío?"
      courseE_farmer_functions9b_clone: "¿Puedes descifrar el patrón que necesitas para resolver este desafío?"
      courseE_farmer_predict1: Recoge todas las lechugas (solo mientras haya alguna que recoger).
      courseE_farmer_predict1_2018: Recoge todas las lechugas (solo mientras haya alguna que recoger).
      courseE_farmer_ramp11: Este desafío también usa bucles anidados. ¿Puedes descifrar cómo?
      courseE_farmer_ramp11a: Cuando haya una pila, quita la tierra.
      courseE_farmer_ramp11a_2018: Cuando haya una pila, quita la tierra.
      courseE_farmer_ramp11a_2019: Cuando haya una pila, quita la tierra.
      courseE_farmer_ramp11b: Cuando haya una pila, quita la tierra.
      courseE_farmer_ramp11b_2018: Cuando haya una pila, quita la tierra.
      courseE_farmer_ramp11b_2019: Cuando haya una pila, quita la tierra.
      courseE_farmer_ramp12: Ahora usa bucles anidados para resolver este desafío.
      courseE_farmer_ramp12_2018: Ahora usa bucles anidados para resolver este desafío.
      courseE_farmer_ramp12_forswap: Ahora usa bucles anidados para resolver este desafío.
      courseE_farmer_ramp12_forswap_2018: Ahora usa bucles anidados para resolver este desafío.
      courseE_farmer_ramp12_forswap_2019: Ahora usa bucles anidados para resolver este desafío.
      courseE_farmer_ramp12a: Ayuda a la granjera a recorrer el camino correctamente para recolectar toda la lechuga.
      courseE_farmer_ramp12a_2018: Ayuda a la granjera a recorrer el camino correctamente para recolectar toda la lechuga.
      courseE_farmer_ramp12b: "¡Cuando haya lechuga, recoge la lechuga!"
      courseE_farmer_ramp12b_2018: "¡Cuando haya lechuga, recoge la lechuga!"
      courseE_farmer_ramp12b_2019: "¡Cuando haya lechuga, recoge la lechuga!"
      courseE_farmer_ramp12c: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12c_2018: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12c_2019: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12d: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12d_2018: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12d_2019: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12e: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12e_2018: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12e_2019: Muévete hacia adelante hasta que alcances la lechuga, y luego usa un bucle `mientras` para recogerla toda.
      courseE_farmer_ramp12f: Avanza hasta llegar a la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp12f_2018: Avanza hasta llegar a la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp12f_2019: Avanza hasta llegar a la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp12g: Avanza hasta llegar a la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp12g_2018: Avanza hasta llegar a la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp12g_2019: Avanza hasta llegar a la lechuga, luego gira a la izquierda **si** hay un camino a la izquierda. De lo contrario, gira a la derecha.
      courseE_farmer_ramp13: Recoge el maíz si hay maíz, y la lechuga cuando haya lechuga.
      courseE_farmer_ramp13_2018: Recoge el maíz si hay maíz, y la lechuga cuando haya lechuga.
      courseE_farmer_ramp15: Usa solo los bloques disponibles para resolver este desafío.
      courseE_farmer_ramp15_2018: Usa solo los bloques disponibles para resolver este desafío.
      courseE_farmer_ramp16: "**Desafío:** Resuelve este rompecabezas con la menor cantidad de bloques."
      courseE_maze_predict1: Este código incluye un nuevo bloque. ¿Qué crees que sucederá si presionas el bloque "Ejecutar"?
      courseE_maze_predict1_2018: Este código incluye un nuevo bloque. ¿Qué crees que sucederá si presionas el bloque "Ejecutar"?
      courseE_maze_ramp1: Para este desafío, arrastra todos los bloques para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseE_maze_ramp13: "¡Llegó la hora de un último desafío para demostrar todo lo que sabes!"
      courseE_maze_ramp1_2018: Para este desafío, arrastra todos los bloques para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseE_maze_ramp2: Arrastra un bloque 'avanzar' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseE_maze_ramp2_2018: Arrastra un bloque 'avanzar' extra desde la caja de herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseE_maze_ramp3: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseE_maze_ramp3_2018: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      courseE_maze_ramp4: "¡Evita el TNT o volarán plumas!"
      courseE_maze_ramp4_2018: "¡Evita el TNT o volarán plumas!"
      courseE_maze_ramp5: Evita el TNT.
      courseE_maze_ramp5_2018: Evita el TNT.
      courseE_maze_ramp6: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseE_maze_ramp6_2018: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseE_maze_ramp7: "¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!"
      courseE_maze_ramp7_2018: "¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!"
      courseE_maze_ramp_predict1: Este código incluye un nuevo bloque. ¿Qué crees que sucederá si presionas el bloque "Ejecutar"?
      courseE_multi_maze_ramp5: Evita el TNT.
      courseE_playLab_challenge1: "Algo debería suceder cuando obtegas suficientes puntos o cuando se te acaben los puntos. Agrega algo de código a las funciones 'ganar juego' y 'perder juego' para hacer que el juego funcione de la manera que deberñia. \n¡Haz clic en las pistas para más ideas!"
      courseE_playLab_challenge1_2018: "Algo debería suceder cuando obtegas suficientes puntos o cuando se te acaben los puntos. Agrega algo de código a las funciones 'ganar juego' y 'perder juego' para hacer que el juego funcione de la manera que deberñia. \n¡Haz clic en las pistas para más ideas!"
      courseE_playLab_embedded: Este es un juego de ejemplo con el que puedes divertirte. Mueve al perro con las teclas de flechas. Cuando el perro toca algunos de los gatos, ¡anota un punto! ¡Anota 5 puntos para ganar!
      courseE_playLab_exampleProject2: Aquí está todo tu código para escoger una carta; ¡intenta agregar otras características divertidas!
      courseE_playLab_scaffold1: Escoge un fondo y un mapa, y luego un actor para que sea el héroe de tu juego.
      courseE_playLab_scaffold1_2018: Escoge un fondo y un mapa, y luego un actor para que sea el héroe de tu juego.
      courseE_playLab_scaffold2: Usa el controlador de eventos y acciones para que tu héroe se mueva.
      courseE_playLab_scaffold2_2018: Usa el controlador de eventos y acciones para que tu héroe se mueva.
      courseE_playLab_scaffold3: Agrega dos o más actores a tu juego y haz que se muevan.
      courseE_playLab_scaffold3_2018: Agrega dos o más actores a tu juego y haz que se muevan.
      courseE_playLab_scaffold4: Encuentra formas interesantes de cambiar el puntaje en tu juego. Obtén el puntaje para mostrar algo más que 0 para continuar.
      courseE_playLab_scaffold4_2018: Encuentra formas interesantes de cambiar el puntaje en tu juego. Obtén el puntaje para mostrar algo más que 0 para continuar.
      courseE_playLab_scaffold5: Ahora pasa algo de tiempo asegurándote de que el juego funcione de la manera que quieras. Incluye una manera para ganar o perder tu juego, y luego juega hasta que encuentres esas condiciones.
      courseE_playLab_scaffold5_2018: Ahora pasa algo de tiempo asegurándote de que el juego funcione de la manera que quieras. Incluye una manera para ganar o perder tu juego, y luego juega hasta que encuentres esas condiciones.
      courseE_playLab_scaffold6: "¡Has terminado! Ahora puedes jugar tu juego o compartirlo con tus amigos o compañeros!"
      courseE_playLab_scaffold6_2018: "¡Has terminado! Ahora puedes jugar tu juego o compartirlo con tus amigos o compañeros!"
      courseE_playlab_challenge2: ¿Puedes descifrar cómo funciona la aplicación "Adivino"? Haz clic en 'MÁS' para ver tus desafós.
      courseE_playlab_variables_challenge2: ¿Puedes descifrar cómo funciona la aplicación "Adivino"? Haz clic en 'MÁS' para ver tus desafós.
      courseE_video_createFunctions: Aún no tenemos un video para crear funciones. Este es un marcador.
      courseE_video_createFunctions2: Aún no tenemos un video para crear funciones. Este es un marcador.
      courseE_video_createFunctions2_2018: Aún no tenemos un video para crear funciones. Este es un marcador.
      courseE_video_createFunctions2_2019: Aún no tenemos un video para crear funciones. Este es un marcador.
      courseE_video_createFunctions_2018: Aún no tenemos un video para crear funciones. Este es un marcador.
      courseF_IceAge_1: Arrastra el bloque `actor 1 dice` y conéctalo al final del evento `cuando ejecuta` para ayudar a Sid a decir "¡Hola!".
      courseF_IceAge_10: Usa el comando `actor __ lanza` para que Sid (actor 1) lance corazones a Granny (actor 2) y configura el estado de ánimo de Granny en feliz cuando es tocada por ellos.
      courseF_IceAge_11: "¡Llegó el momento de crear tu propio juego o historia! "
      courseF_IceAge_2: Usa el bloque `actor ___ dice` dos veces para que Manny y Sid se saluden.
      courseF_IceAge_3: "¡Scrat está buscando su bellota! ¿Puedes ayudarlo a moverse los últimos 200 pixeles?"
      courseF_IceAge_4: Conecta un bloque al evento `cuando actor toca` para reproducir un sonido cuando Diego encuentra a Manny.
      courseF_IceAge_5: Muévete a la izquierda y a la derecha una y otra vez para ayudar a Granny a hacer algo de ejercicio.
      courseF_IceAge_6: "¿Puedes ayudar a Sid a llamar a sus amigos cuando hagas clic en él? "
      courseF_IceAge_7: "¡Escribe el código para ayudar a Scrat a llegar hasta las bellotas!"
      courseF_IceAge_8: "¿Puedes terminar este programa de tal manera que **reproduzcas un sonido** y **anotes un punto** cuando Sid y Granny choquen? "
      courseF_IceAge_9: Cambia la escena a un fondo con hielo y configura la velocidad de Sid (actor 1) en rápido.
      courseF_IceAge_template: "¡Escribe el código para ayudar a Scrat a llegar hasta las bellotas!"
      courseF_artist_embed_for7: "¡Presiona Ejecutar para ver un programa en acción! Este usa bucles `desde`."
      courseF_artist_embed_variables9: "¡Presiona Ejecutar para ver este programa en acción!"
      courseF_artist_for1: Experimenta con un bucle `desde` y juega con la variable `contador`.
      courseF_artist_for10: 'Juego libre: intenta usar la variable `contador` con otros elementos del dibujo para crear imágenes mágicas como esta.'
      courseF_artist_for10_2018: 'Juego libre: intenta usar la variable `contador` con otros elementos del dibujo para crear imágenes mágicas como esta.'
      courseF_artist_for10_2019: 'Juego libre: intenta usar la variable `contador` con otros elementos del dibujo para crear imágenes mágicas como esta.'
      courseF_artist_for1_2018: Experimenta con un bucle `desde` y juega con la variable `contador`.
      courseF_artist_for1_2019: Experimenta con un bucle `desde` y juega con la variable `contador`.
      courseF_artist_for2: Crea este grupo de triángulos con lados que van de 50 pixeles a 100 pixeles.
      courseF_artist_for2_2018: Crea este grupo de triángulos con lados que van de 50 pixeles a 100 pixeles.
      courseF_artist_for2_2019: Crea este grupo de triángulos con lados que van de 50 pixeles a 100 pixeles.
      courseF_artist_for3: 'Estos triángulos tienen lados que van de 20 pixeles a 200 pixeles, y cada triángulo es 20 pixeles más grande que el anterior. '
      courseF_artist_for3_2018: 'Estos triángulos tienen lados que van de 20 pixeles a 200 pixeles, y cada triángulo es 20 pixeles más grande que el anterior. '
      courseF_artist_for3_2019: 'Estos triángulos tienen lados que van de 20 pixeles a 200 pixeles, y cada triángulo es 20 pixeles más grande que el anterior. '
      courseF_artist_for4: 'Estos cuadrados comienzan con 15 pixeles de largo. El más grande tiene 300 pixeles de largo, y cada cuadrado es 15 pixeles más grande que el anterior. '
      courseF_artist_for4_2018: 'Estos cuadrados comienzan con 15 pixeles de largo. El más grande tiene 300 pixeles de largo, y cada cuadrado es 15 pixeles más grande que el anterior. '
      courseF_artist_for4_2019: 'Estos cuadrados comienzan con 15 pixeles de largo. El más grande tiene 300 pixeles de largo, y cada cuadrado es 15 pixeles más grande que el anterior. '
      courseF_artist_for5: Con un pequeño cambio en el código de la última imagen puedes crear este dibujo. ¿Puedes descubrir cuál es ese cambio?
      courseF_artist_for5_2018: Con un pequeño cambio en el código de la última imagen puedes crear este dibujo. ¿Puedes descubrir cuál es ese cambio?
      courseF_artist_for5_2019: Con un pequeño cambio en el código de la última imagen puedes crear este dibujo. ¿Puedes descubrir cuál es ese cambio?
      courseF_artist_for6: Vuelve a crear tu código del último nivel, pero gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for6_2018: Vuelve a crear tu código del último nivel, pero gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for6_2019: Vuelve a crear tu código del último nivel, pero gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for7: "¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!"
      courseF_artist_for7_2018: "¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!"
      courseF_artist_for7_2019: "¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!"
      courseF_artist_for8: Baja el ángulo a 72 grados para obtener un pentágono en espiral.
      courseF_artist_for8_2018: Baja el ángulo a 72 grados para obtener un pentágono en espiral.
      courseF_artist_for8_2019: Baja el ángulo a 72 grados para obtener un pentágono en espiral.
      courseF_artist_for9: "**Inspiración:** Usa el contador dentro del bloque `establecer alfa` para obtener este centro borroso."
      courseF_artist_for9_2018: "**Inspiración:** Usa el contador dentro del bloque `establecer alfa` para obtener este centro borroso."
      courseF_artist_for9_2019: "**Inspiración:** Usa el contador dentro del bloque `establecer alfa` para obtener este centro borroso."
      courseF_artist_for_Template: Intenta usar algo del código del último nivel, pero gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for_Template_2018: Intenta usar algo del código del último nivel, pero gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for_Template_2019: Intenta usar algo del código del último nivel, pero gira 89 grados para crear esta espiral cuadrada torcida.
      courseF_artist_for_challenge1: "¿Puedes averiguar cómo volver a crear este dibujo?"
      courseF_artist_for_challenge1_2018: "¿Puedes averiguar cómo volver a crear este dibujo?"
      courseF_artist_for_challenge1_2019: "¿Puedes averiguar cómo volver a crear este dibujo?"
      courseF_artist_for_challenge2: "¿Puedes averiguar cómo volver a crear este dibujo utilizando un solo ciclo?"
      courseF_artist_for_challenge2_2018: "¿Puedes averiguar cómo volver a crear este dibujo utilizando un solo ciclo?"
      courseF_artist_for_challenge2_2019: "¿Puedes averiguar cómo volver a crear este dibujo utilizando un solo ciclo?"
      courseF_artist_fwp1: Edita la función 'dibujar un cuadrado' para encontrar errores.
      courseF_artist_fwp1_2018: Edita la función 'dibujar un cuadrado' para encontrar errores.
      courseF_artist_fwp2: Edita la función para aceptar el parámetro llamado `longitud`.
      courseF_artist_fwp2_2018: Edita la función para aceptar el parámetro llamado `longitud`.
      courseF_artist_fwp2_predict1: Edita la función para aceptar el parámetro llamado `longitud`.
      courseF_artist_fwp2_predict1_2018: Edita la función para aceptar el parámetro llamado `longitud`.
      courseF_artist_fwp3: Crea una función llamada 'dibujar un cuadrado' y úsala para trazar estas cuatro cajas mediante los parámetros.
      courseF_artist_fwp3_2018: Crea una función llamada 'dibujar un cuadrado' y úsala para trazar estas cuatro cajas mediante los parámetros.
      courseF_artist_fwp4: Edita esta función para agregar un parámetro para el número de lados de tu polígono.
      courseF_artist_fwp4_2018: Edita esta función para agregar un parámetro para el número de lados de tu polígono.
      courseF_artist_fwp5: 'Usa la función del último desafío para dibujar esta serie de formas.  '
      courseF_artist_fwp5_2018: 'Usa la función del último desafío para dibujar esta serie de formas.  '
      courseF_artist_fwp6: 'Desafío: edita `dibujar un borde en espiral` para usar los parámetros `longitud` y `lados`, y luego vuelve a crear estas formas.'
      courseF_artist_fwp6_2018: 'Desafío: edita `dibujar un borde en espiral` para usar los parámetros `longitud` y `lados`, y luego vuelve a crear estas formas.'
      courseF_artist_fwp7: Finaliza la función `dibujar un borde en espiral` para que también pida una longitud mínima para el centro de la espiral.
      courseF_artist_fwp7_2018: Finaliza la función `dibujar un borde en espiral` para que también pida una longitud mínima para el centro de la espiral.
      courseF_artist_fwp8: "¿Puedes descubrir cómo hacer este dibujo con la función que acabas de crear?"
      courseF_artist_fwp8_2018: "¿Puedes descubrir cómo hacer este dibujo con la función que acabas de crear?"
      courseF_artist_fwp9: 'Juego libre: ¡Dibuja algo increíble! ¡Juega con el ancho del lápiz para ver qué tan diferentes lucen tus dibujos!'
      courseF_artist_fwp9_2018: 'Juego libre: ¡Dibuja algo increíble! ¡Juega con el ancho del lápiz para ver qué tan diferentes lucen tus dibujos!'
      courseF_artist_fwp_challenge1: "¿Puedes descubrir cómo funciona este programa?"
      courseF_artist_fwp_challenge1_2018: "¿Puedes descubrir cómo funciona este programa?"
      courseF_artist_fwp_challenge2: Usa lo que has aprendido en el nivel anterior para dibujar una imagen como esta.
      courseF_artist_fwp_challenge2_2018: Usa lo que has aprendido en el nivel anterior para dibujar una imagen como esta.
      courseF_artist_ramp10: Ahora arrastra el código para el último triángulo al nuevo bucle para hacerlo girar y hacer un copo de nieve.
      courseF_artist_ramp10_2018: Ahora arrastra el código para el último triángulo al nuevo bucle para hacerlo girar y hacer un copo de nieve.
      courseF_artist_ramp8: "¡Ahora haz un cuadrado con Artista!"
      courseF_artist_ramp8_2018: "¡Ahora haz un cuadrado con Artista!"
      courseF_artist_ramp9: Usa lo que has aprendido para dibujar este triángulo.
      courseF_artist_ramp9_2018: Usa lo que has aprendido para dibujar este triángulo.
      courseF_artist_variables1: Dibujemos un triángulo equilátero que tenga exactamente 50 pixeles de largo en cada lado.
      courseF_artist_variables10: 'Este es tu código del último desafío. Intenta editar la variable de otras maneras.  '
      courseF_artist_variables10_2018: 'Este es tu código del último desafío. Intenta editar la variable de otras maneras.  '
      courseF_artist_variables10_2019: 'Este es tu código del último desafío. Intenta editar la variable de otras maneras.  '
      courseF_artist_variables2: 'Ahora dibuja tres de esos triángulos, uno al lado del otro.   '
      courseF_artist_variables2_2018: 'Ahora dibuja tres de esos triángulos, uno al lado del otro.   '
      courseF_artist_variables2_2019: 'Ahora dibuja tres de esos triángulos, uno al lado del otro.   '
      courseF_artist_variables3: Mueve la longitud de 50 a una variable, para que podamos usarla en los próximos desafíos.
      courseF_artist_variables3_2018: Mueve la longitud de 50 a una variable, para que podamos usarla en los próximos desafíos.
      courseF_artist_variables3_2019: Mueve la longitud de 50 a una variable, para que podamos usarla en los próximos desafíos.
      courseF_artist_variables4: Ahora usa la variable 'longitud' para hacer que el artista salte hacia adelante y hacia abajo en 'longitud' de los pixeles entre los triángulos.
      courseF_artist_variables4_2018: Ahora usa la variable 'longitud' para hacer que el artista salte hacia adelante y hacia abajo en 'longitud' de los pixeles entre los triángulos.
      courseF_artist_variables4_2019: Ahora usa la variable 'longitud' para hacer que el artista salte hacia adelante y hacia abajo en 'longitud' de los pixeles entre los triángulos.
      courseF_artist_variables5: Agrega otro grupo de loops al final de tu código para agregar tres triángulos más. ¡Esta vez, para moverse hacia adelante y hacia arriba!
      courseF_artist_variables5_2018: Agrega otro grupo de loops al final de tu código para agregar tres triángulos más. ¡Esta vez, para moverse hacia adelante y hacia arriba!
      courseF_artist_variables5_2019: Agrega otro grupo de loops al final de tu código para agregar tres triángulos más. ¡Esta vez, para moverse hacia adelante y hacia arriba!
      courseF_artist_variables6: 'Ahora haz que los triángulos tengan 60 pixeles de ancho, con saltos de 60 pixeles.  '
      courseF_artist_variables6_2018: 'Ahora haz que los triángulos tengan 60 pixeles de ancho, con saltos de 60 pixeles.  '
      courseF_artist_variables6_2019: 'Ahora haz que los triángulos tengan 60 pixeles de ancho, con saltos de 60 pixeles.  '
      courseF_artist_variables6a: Crea este diseño en el que los cuadrados tienen lados de 80 pixeles y el artista salta 80 pixeles por encima y hacia abajo entre cada uno.
      courseF_artist_variables6a_2018: Crea este diseño en el que los cuadrados tienen lados de 80 pixeles y el artista salta 80 pixeles por encima y hacia abajo entre cada uno.
      courseF_artist_variables6a_2019: Crea este diseño en el que los cuadrados tienen lados de 80 pixeles y el artista salta 80 pixeles por encima y hacia abajo entre cada uno.
      courseF_artist_variables7: 'Dibuja un triángulo con lados de 150 pixeles. '
      courseF_artist_variables7_2018: 'Dibuja un triángulo con lados de 150 pixeles. '
      courseF_artist_variables7_2019: 'Dibuja un triángulo con lados de 150 pixeles. '
      courseF_artist_variables8: Vuelve a crear el código del triángulo del último desafío, pero esta vez usa el bloque `establecer longitud a` para restablecer la variable `longitud` a `longitud`+10 al final de cada repetición de un bucle.
      courseF_artist_variables8_2018: Vuelve a crear el código del triángulo del último desafío, pero esta vez usa el bloque `establecer longitud a` para restablecer la variable `longitud` a `longitud`+10 al final de cada repetición de un bucle.
      courseF_artist_variables8_2019: Vuelve a crear el código del triángulo del último desafío, pero esta vez usa el bloque `establecer longitud a` para restablecer la variable `longitud` a `longitud`+10 al final de cada repetición de un bucle.
      courseF_artist_variables9: "¡Mira lo que pasa cuando repites el código del último desafío 30 veces en lugar de 3! Haz tus líneas de cualquier color o patrón para agregar algo de diversión."
      courseF_artist_variables9_2018: "¡Mira lo que pasa cuando repites el código del último desafío 30 veces en lugar de 3! Haz tus líneas de cualquier color o patrón para agregar algo de diversión."
      courseF_artist_variables9_2019: "¡Mira lo que pasa cuando repites el código del último desafío 30 veces en lugar de 3! Haz tus líneas de cualquier color o patrón para agregar algo de diversión."
      courseF_artist_variablesFP: "**Juego libre:** Usa lo que has aprendido y haz tu propio dibujo. "
      courseF_artist_variablesFP_2018: "**Juego libre:** Usa lo que has aprendido y haz tu propio dibujo. "
      courseF_artist_variablesFP_2019: "**Juego libre:** Usa lo que has aprendido y haz tu propio dibujo. "
      courseF_artist_variables_10: 'Este es tu código del último desafío. Intenta editar la variable de otras maneras.  '
      courseF_artist_variables_2: "Ahora usa otro bucle para dibujar tres de esos triángulos, uno al lado del otro.  \nPuedes anidar el código de tu último desafío dentro."
      courseF_artist_variables_5: Agrega otro grupo de loops al final de tu código para agregar tres triángulos más. ¡Esta vez, para moverse hacia adelante y hacia arriba!
      courseF_artist_variables_6: |-
        ¡Ups! Realmente necesitamos que los lados de los triángulos sean de 60 pixeles de ancho, con 60 pixeles para saltar. \\r
        ¿No estás feliz de estar usando una variable?
      courseF_artist_variables_6a: Crea este diseño en el que los cuadrados tienen lados de 80 pixeles y el artista salta 80 pixeles por encima y hacia abajo entre cada uno.
      courseF_artist_variables_9: "¡Mira lo que pasa cuando repites el código del último desafío 30 veces en lugar de 3! \n\nHaz tus líneas de cualquier color o patrón para agregar algo de diversión."
      courseF_artist_variables_FP: |-
        **Juego libre:** Toma lo que has aprendido y haz tu propio dibujo. \\r
        \\r
        ¿Cómo puedes usar las variables con cuadrados, pentágonos o hexágonos?
      courseF_artist_variables_challenge1: "¿Puedes crear una variable de `longitud` y usarla para crear este patrón?"
      courseF_artist_variables_challenge1_2018: "¿Puedes crear una variable de `longitud` y usarla para crear este patrón?"
      courseF_artist_variables_challenge1_2019: "¿Puedes crear una variable de `longitud` y usarla para crear este patrón?"
      courseF_artist_variables_challenge1a: "¡Has aprendido todo lo que necesitas saber para hacer un patrón como este! Este desafío está hecho para ser difícil. ¿Puedes quedarte aquí hasta que descifres la solución?"
      courseF_artist_variables_challenge2: "¡Has aprendido todo lo que necesitas saber para crear un patrón como este!"
      courseF_artist_variables_challenge2_2018: "¡Has aprendido todo lo que necesitas saber para crear un patrón como este!"
      courseF_artist_variables_challenge2_2019: "¡Has aprendido todo lo que necesitas saber para crear un patrón como este!"
      courseF_artistembed_variables9: "¡Mira lo que pasa cuando repites el código del último desafío 30 veces en lugar de 3! Haz tus líneas de cualquier color o patrón para agregar algo de diversión."
      courseF_bee_conditionals10: Recoge todo el néctar y haz toda la miel.
      courseF_bee_conditionals10_2018: Recoge todo el néctar y haz toda la miel.
      courseF_bee_conditionals1_predict1: Mira si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseF_bee_conditionals1_predict1_2018: Mira si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseF_bee_conditionals2: 'Revisa debajo de cada nube para ver si hay una flor escondida antes de recoger el néctar.  '
      courseF_bee_conditionals2_2018: 'Revisa debajo de cada nube para ver si hay una flor escondida antes de recoger el néctar.  '
      courseF_bee_conditionals3: 'Ayuda a la abeja a recoger todo el néctar. '
      courseF_bee_conditionals3_2018: 'Ayuda a la abeja a recoger todo el néctar. '
      courseF_bee_conditionals4: Obtén todo el néctar con la menor cantidad de bloques posible.
      courseF_bee_conditionals4_2018: Obtén todo el néctar con la menor cantidad de bloques posible.
      courseF_bee_conditionals5: Recoge todo el néctar con la menor cantidad de bloques posible
      courseF_bee_conditionals5_2018: Recoge todo el néctar con la menor cantidad de bloques posible
      courseF_bee_conditionals7_predict2: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseF_bee_conditionals7_predict2_2018: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      courseF_bee_conditionals8: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseF_bee_conditionals8_2018: |-
        Recoge el néctar si hay una flor.
        De lo contrario, haz miel (porque hay un panal).
      courseF_bee_for1: Recoge el néctar de cada flor con la menor cantidad de bloques posible.
      courseF_bee_for10: "**Desafío:** Toma lo que has aprendido acerca de los bucles `desde` e intenta resolver este problema. "
      courseF_bee_for10_2018: "**Desafío:** Toma lo que has aprendido acerca de los bucles `desde` e intenta resolver este problema. "
      courseF_bee_for10_2019: "**Desafío:** Toma lo que has aprendido acerca de los bucles `desde` e intenta resolver este problema. "
      courseF_bee_for11: "¿Cuál debería ser tu incremento para recoger 15, luego 12, y luego 9, 6 y 3 néctares?"
      courseF_bee_for11_2018: "¿Cuál debería ser tu incremento para recoger 15, luego 12, y luego 9, 6 y 3 néctares?"
      courseF_bee_for11_2019: "¿Cuál debería ser tu incremento para recoger 15, luego 12, y luego 9, 6 y 3 néctares?"
      courseF_bee_for1_2018: Recoge el néctar de cada flor con la menor cantidad de bloques posible.
      courseF_bee_for1_2019: Recoge el néctar de cada flor con la menor cantidad de bloques posible.
      courseF_bee_for2: Escribe el código para ayudar a la abeja a recoger todo el néctar.
      courseF_bee_for2_2018: Escribe el código para ayudar a la abeja a recoger todo el néctar.
      courseF_bee_for2_2019: Escribe el código para ayudar a la abeja a recoger todo el néctar.
      courseF_bee_for3: Usa el bucle `desde` y la variable `contador` para ver cuánto más cortos se vuelven tus códigos y resolver este desafío.
      courseF_bee_for4: Ayuda a la abeja a recoger todo el néctar.
      courseF_bee_for4_2018: Ayuda a la abeja a recoger todo el néctar.
      courseF_bee_for4_2019: Ayuda a la abeja a recoger todo el néctar.
      courseF_bee_for5: Usa la variable `contador` dos veces para resolver este desafío.
      courseF_bee_for5_2018: Usa la variable `contador` dos veces para resolver este desafío.
      courseF_bee_for5_2019: Usa la variable `contador` dos veces para resolver este desafío.
      courseF_bee_for6: Cuenta en forma regresiva de 5 a 1, de a 1, para intentar recoger este néctar.
      courseF_bee_for6_2018: Cuenta en forma regresiva de 5 a 1, de a 1, para intentar recoger este néctar.
      courseF_bee_for6_2019: Cuenta en forma regresiva de 5 a 1, de a 1, para intentar recoger este néctar.
      courseF_bee_for7: Usa un incremento de 2 para intentar recoger estas flores.
      courseF_bee_for7_2018: Usa un incremento de 2 para intentar recoger estas flores.
      courseF_bee_for7_2019: Usa un incremento de 2 para intentar recoger estas flores.
      courseF_bee_for8: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      courseF_bee_for8_2018: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      courseF_bee_for8_2019: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      courseF_bee_for9: Usa la variable `contador` para navegar por este jardín con la menor cantidad de bloques posible.
      courseF_bee_for9_2018: Usa la variable `contador` para navegar por este jardín con la menor cantidad de bloques posible.
      courseF_bee_for9_2019: Usa la variable `contador` para navegar por este jardín con la menor cantidad de bloques posible.
      courseF_bee_for_challenge1: 'Usa este bucle `desde` para recoger todo el néctar. '
      courseF_bee_for_challenge1_2018: 'Usa este bucle `desde` para recoger todo el néctar. '
      courseF_bee_for_challenge1_2019: 'Usa este bucle `desde` para recoger todo el néctar. '
      courseF_bee_for_challenge2: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge2_2018: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge2_2019: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_for_challenge3: Resuelve este rompecabezas con la menor cantidad de bloques posible.
      courseF_bee_functions2: Usa la función `recoger solo néctar` para recoger el néctar de cada flor.
      courseF_bee_functions2_2018: Usa la función `recoger solo néctar` para recoger el néctar de cada flor.
      courseF_bee_functions3: Haz clic en "editar" para poner un código dentro de la función `solo hacer miel`, y luego úsalo para resolver este desafío.
      courseF_bee_functions3_2018: Haz clic en "editar" para poner un código dentro de la función `solo hacer miel`, y luego úsalo para resolver este desafío.
      courseF_bee_functions3a: Escribe una función que recoja el néctar si la abeja está en una flor; de lo contrario, obtendrá la miel. ¡Usa tu función para resolver el desafío!
      courseF_bee_functions3a_2018: Escribe una función que recoja el néctar si la abeja está en una flor; de lo contrario, obtendrá la miel. ¡Usa tu función para resolver el desafío!
      courseF_bee_functions4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseF_bee_functions4_2018: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      courseF_bee_functions5: Ahora escribe la función para recoger el néctar de las flores.
      courseF_bee_functions5a: Usa la función `mover y revisar` para recoger todo el néctar.
      courseF_bee_functions5a_2018: Usa la función `mover y revisar` para recoger todo el néctar.
      courseF_bee_functions6: Gira a la izquierda en las flores y a la derecha en los panales para ayudar a la abeja a atravesar el laberinto.
      courseF_bee_functions6_2018: Gira a la izquierda en las flores y a la derecha en los panales para ayudar a la abeja a atravesar el laberinto.
      courseF_bee_functions7: Vuelve a crear la función del último desafío para resolver este laberinto.
      courseF_bee_functions7_2018: Vuelve a crear la función del último desafío para resolver este laberinto.
      courseF_bee_functions8a: "¡Recoge todo el néctar o haz toda la miel!"
      courseF_bee_functions8a_2018: "¡Recoge todo el néctar o haz toda la miel!"
      courseF_bee_functionsPre7: Ahora intenta crear una función para resolver este laberinto. ¿Por qué es diferente al de la última vez?
      courseF_bee_functionsPre7_2018: Ahora intenta crear una función para resolver este laberinto. ¿Por qué es diferente al de la última vez?
      courseF_bee_functions_1_2018: Finaliza este código para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_functions_2_2018: Edita tu solución en un lugar, para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_functions_3_2018: "¿Quieres usar la misma función para resolver este nivel? Resta uno de la variable cada vez que atravieses el bucle."
      courseF_bee_functions_challenge1: Crea una nueva función para recoger todo el néctar y la miel mientras haya un camino por delante.
      courseF_bee_functions_challenge1_2018: Crea una nueva función para recoger todo el néctar y la miel mientras haya un camino por delante.
      courseF_bee_functions_challenge2: "¡Usa todo lo que has aprendido para completar este desafío!"
      courseF_bee_functions_challenge2_2018: "¡Usa todo lo que has aprendido para completar este desafío!"
      courseF_bee_functions_challenge2_recursion: "¡Recoge todo el néctar o haz toda la miel!"
      courseF_bee_fwp2: Transforma este código en una función, y luego llama a la función para revisar esta fila en busca de néctar.
      courseF_bee_fwp2_2018: Transforma este código en una función, y luego llama a la función para revisar esta fila en busca de néctar.
      courseF_bee_fwp3: Veamos si esta función permite recoger estas tres filas de néctar más fácilmente.
      courseF_bee_fwp3_2018: Veamos si esta función permite recoger estas tres filas de néctar más fácilmente.
      courseF_bee_fwp4: Agrega el parámetro `longitud` a la función para que funcione aun cuando la fila tenga una longitud diferente.
      courseF_bee_fwp4_2018: Agrega el parámetro `longitud` a la función para que funcione aun cuando la fila tenga una longitud diferente.
      courseF_bee_fwp5: Usa esta función para recoger todo el néctar.
      courseF_bee_fwp5_2018: Usa esta función para recoger todo el néctar.
      courseF_bee_fwp6: Crea una solución breve y dulce para este desafío.
      courseF_bee_fwp6_2018: Crea una solución breve y dulce para este desafío.
      courseF_bee_fwp7: "**Desafío:** Modifica tu función para que también haga miel."
      courseF_bee_fwp7_2018: "**Desafío:** Modifica tu función para que también haga miel."
      courseF_bee_fwp8: Usa tu nueva función para resolver este espiral.
      courseF_bee_fwp8_2018: Usa tu nueva función para resolver este espiral.
      courseF_bee_fwp9: Usa tu nueva función para resolver este desafío.
      courseF_bee_fwp9_predict1: Usa tu nueva función para resolver este desafío.
      courseF_bee_fwp9_predict1_2018: Usa tu nueva función para resolver este desafío.
      courseF_bee_fwp_challenge1: Usa un bucle `desde` en una función con un parámetro de `longitud` para recoger todo el maíz.
      courseF_bee_fwp_challenge1_2018: Usa un bucle `desde` en una función con un parámetro de `longitud` para recoger todo el maíz.
      courseF_bee_fwp_challenge2: 'Usa un bucle `desde` en una función con un parámetro de `longitud` para recoger todos los vegetales en cada fila. '
      courseF_bee_fwp_challenge2_2018: 'Usa un bucle `desde` en una función con un parámetro de `longitud` para recoger todos los vegetales en cada fila. '
      courseF_bee_variables_1_2018: Finaliza este código para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_variables_1_2019: Finaliza este código para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_variables_2_2018: Edita tu solución en un lugar, para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_variables_2_2019: Edita tu solución en un lugar, para que la abeja pueda recoger toda la miel y el néctar.
      courseF_bee_variables_3_2018: "¿Quieres usar la misma función para resolver este nivel? Resta uno de la variable cada vez que atravieses el bucle."
      courseF_bee_variables_3_2019: "¿Quieres usar la misma función para resolver este nivel? Resta uno de la variable cada vez que atravieses el bucle."
      courseF_bee_variables_4_2018: Edita el código para adaptarlo a este desafío.
      courseF_bee_variables_4_2019: Edita el código para adaptarlo a este desafío.
      courseF_bee_variables_5_2018: Crea tu propio código para resolver este desafío
      courseF_bee_variables_5_2019: Crea tu propio código para resolver este desafío
      courseF_bee_variables_6_2018: "**Desafío:** ¡Ahora inténtalo con este desafío!"
      courseF_bee_variables_6_2019: "**Desafío:** ¡Ahora inténtalo con este desafío!"
      courseF_bee_variables_7_2018: Este desafío es un poco diferente. ¿Qué necesitas para resolverlo?
      courseF_bee_variables_7_2019: Este desafío es un poco diferente. ¿Qué necesitas para resolverlo?
      courseF_bee_variables_8_2018: "¿Cuánto néctar recogerá la abeja de esta flor?"
      courseF_bee_variables_8_2019: "¿Cuánto néctar recogerá la abeja de esta flor?"
      courseF_data_1: "¡Bienvenido a WildSim, el simulador de vida silvestre controlado por ti! Haz clic en el conejo, el lobo y la zanahoria, y observa lo que sucede con los números encima de sus cabezas."
      courseF_farmer_ramp11: Este desafío también usa bucles anidados. ¿Puedes descifrar cómo?
      courseF_farmer_ramp11_2018: Este desafío también usa bucles anidados. ¿Puedes descifrar cómo?
      courseF_maze_predict1: Este código incluye un nuevo bloque. ¿Qué crees que sucederá si presionas el bloque "Ejecutar"?
      courseF_maze_ramp13: "¡Es el momento de aplicar todo lo aprendido en otro desafío de Angry Birds!"
      courseF_maze_ramp15: "¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!"
      courseF_maze_ramp4: "¡Evita el TNT o volarán plumas!"
      courseF_maze_ramp4_2018: "¡Evita el TNT o volarán plumas!"
      courseF_maze_ramp5: Evita el TNT.
      courseF_maze_ramp5_2018: Evita el TNT.
      courseF_maze_ramp6: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseF_maze_ramp6_2018: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      courseF_maze_ramp7: "¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!"
      courseF_playlab_brokenText: "¡En el resto de esta etapa, vamos a construir un juego que tú controlarás!"
      courseF_playlab_embed_vars: Responde las preguntas de Pegleg el Pirata. ¿Qué sucede si ingresas el nombre en código "contraseña"? ¿Qué sucede con los otros nombres en código?
      courseF_playlab_variables0: Este es el pirata Pegleg. ¡Es muy difícil de entender en estos días!
      courseF_playlab_variables1: Este es el pirata Pegleg. ¡Es muy difícil de entender en estos días!
      courseF_playlab_variables1a: Las variables se pueden usar para guardar texto que te puede servir más adelante. Asigna la variable `gritar` a este texto para que Kiki, la jugadora de fútbol, grite "¡Gol!".
      courseF_playlab_variables1a_2018: Las variables se pueden usar para guardar texto que te puede servir más adelante. Asigna la variable `gritar` a este texto para que Kiki, la jugadora de fútbol, grite "¡Gol!".
      courseF_playlab_variables2: 'Ahora, ¡cambia el valor de las variables en dos lugares para descifrar el discurso del pirata Pegleg! '
      courseF_playlab_variables2a: 'Ahora, ¡cambia el valor de las variables en dos lugares para descifrar el discurso del pirata Pegleg! '
      courseF_playlab_variables2b RYAN CLONE: Pon la variable `color` en el espacio vacío del bloque `unir` para insertarla en el medio de una oración.
      courseF_playlab_variables2b: Pon la variable `color` en el espacio vacío del bloque `unir` para insertarla en el medio de una oración.
      courseF_playlab_variables2b_2018: Pon la variable `color` en el espacio vacío del bloque `unir` para insertarla en el medio de una oración.
      courseF_playlab_variables3: El bloque `preguntar` guardará automáticamente las respuestas del usuario en la variable que elijas.
      courseF_playlab_variables3b: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''edad'' en todos los lugares don se deba usar edad ''12''. '
      courseF_playlab_variables3bEdit: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''A1'' en todos los lugares donde se debería usar la edad ''12''. '
      courseF_playlab_variables3b_josh: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''edad'' en todos los lugares don se deba usar edad ''12''. '
      courseF_playlab_variables3b_josh_2018: 'Ayuda a Kiki a tener una conversación con Brian usando la variable ''edad'' en todos los lugares don se deba usar edad ''12''. '
      courseF_playlab_variables4: "¿Puedes encontrar la variable correcta en la caja de herramientas para llenar el espacio?"
      courseF_playlab_variables4b: Pon las variables en los lugares correctos para crear esta conversación.
      courseF_playlab_variables4b_2018: Pon las variables en los lugares correctos para crear esta conversación.
      courseF_playlab_variables5: "¿Puedes encontrar la variable correcta en la caja de herramientas para llenar el espacio?"
      courseF_playlab_variables5b: Pon todas las variables en el lugar correcto para que la historia de Pegleg tenga sentido.
      courseF_playlab_variables5c RYAN Copy: "¡Vamos a combinar el bloque `preguntar` con la sentencia `si/si no` para crear un juego!"
      courseF_playlab_variables5c: "¡Vamos a combinar el bloque `preguntar` con la sentencia `si/si no` para divertirnos!"
      courseF_playlab_variables5c_2018: "¡Vamos a combinar el bloque `preguntar` con la sentencia `si/si no` para divertirnos!"
      courseF_playlab_variables6b: Junta las variables para crear una historia divertida que te lleve más de una burbuja de diálogo contar.
      courseF_playlab_variables6c: "¡En el resto de esta etapa, vamos a construir un juego que tú controlarás!"
      courseF_playlab_variables6c_2018: "¡En el resto de esta etapa, vamos a construir un juego que tú controlarás!"
      courseF_playlab_variables7b: Crea algunas preguntas e incluye las respuestas en tu propia historia.
      courseF_playlab_variables7b_2018: Crea algunas preguntas e incluye las respuestas en tu propia historia.
      courseF_playlab_variables7c: Pide al usuario que adivine un color para que el juego haga algo.
      courseF_playlab_variables7c_2018: Pide al usuario que adivine un color para que el juego haga algo.
      courseF_playlab_variables8b: Usa lo que has aprendido para crear una escena de improvisación entre los actores.
      courseF_playlab_variables8c: Usa las variables para personalizar el juego aún más.
      courseF_playlab_variables8c_2018: Usa las variables para personalizar el juego aún más.
      courseF_playlab_variables_challenge1: 'Usa estos bloques para que los actores compartan chistes de "Toc toc… ¿Quién es?". '
      courseF_playlab_variables_challenge1_2018: 'Usa estos bloques para que los actores compartan chistes de "Toc toc… ¿Quién es?". '
      courseF_playlab_variables_challenge2: Este juego usará las variables para llevar un registro de los puntos. Etiqueta a Gato para obtener 2 puntos. Etiqueta a Pingüino para obtener 3 puntos. Los puntos se irán cuando Gato y Pingüino se toquen. ¡Consigue 10 puntos para ganar!
      courseF_playlab_variables_challenge2_2018: Este juego usará las variables para llevar un registro de los puntos. Etiqueta a Gato para obtener 2 puntos. Etiqueta a Pingüino para obtener 3 puntos. Los puntos se irán cuando Gato y Pingüino se toquen. ¡Consigue 10 puntos para ganar!
      courseF_playlab_variables_challenge3: ¿Puedes descifrar cómo funciona la aplicación "Adivino"? Haz clic en 'MÁS' para ver tus desafós.
      courseF_video_createFunctions: Aún no tenemos un video para crear funciones. Este es un marcador.
      courseF_video_createFunctions_2018: Aún no tenemos un video para crear funciones. Este es un marcador.
      course_playlab_variables1: Este es el pirata Pegleg. ¡Es muy difícil de entender en estos días!
      course_playlab_variables2: 'Ahora, ¡cambia el valor de las variables en dos lugares para descifrar el discurso del pirata Pegleg! '
      course_playlab_variables3: 'Ahora, ¡cambia el valor de las variables en dos lugares para descifrar el discurso del pirata Pegleg! '
      coursea_maze_ramp1_2018: Para este desafío debes encajar los bloques y hacer clic en "▶ Ejecutar".
      coursea_maze_ramp1_2019: Para este desafío debes encajar los bloques y hacer clic en "▶ Ejecutar".
      coursef_explore_CYOA_Witch: "¡Puedes hacer lo que quieras en el laboratorio de juego! Aquí hay un ejemplo para escoger tu propia historia de aventura en el laboratorio de juego."
      coursef_explore_playlab2: "¡Puedes hacer lo que quieras en Laboratorio de juegos! Este es un ejemplo de una historia que puedes crear."
      coursef_explore_playlab_cat_game: "¡Puedes hacer lo que quieras en Laboratorio de juegos! Este es un ejemplo de un juego que puedes crear."
      coursef_maze_ramp3: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      coursef_maze_ramp3_2018: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      eventsIntro: Necesitas una mejor combinación de laboratorio de juegos/eventos
      express_maze_debugging9_2019: Usa los bloques de la caja de herramientas para crear tu programa. Haz que Scrat llegue hasta la bellota.
      flappy_1: Adjunta un bloque a "cuando se haga clic en el bloque", entonces presiona "Ejecutar". Haz clic o toca la pantalla para mover a Flappy hacia el objetivo.
      flappy_11: Crea tu propio juego Flappy, puedes cambiar todos los efectos visuales y las reglas, hasta la gravedad. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      flappy_11_2018: Crea tu propio juego Flappy, puedes cambiar todos los efectos visuales y las reglas, hasta la gravedad. Cuando finalices, haz clic en Terminar para que tus amigos prueben tu juego en sus teléfonos.
      flappy_1_2018: Adjunta un bloque a "cuando se haga clic en el bloque", entonces presiona "Ejecutar". Haz clic o toca la pantalla para mover a Flappy hacia el objetivo.
      flappy_2: Ahora hemos agregado el suelo. Adjunta un bloque al bloque "cuando golpee el suelo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy golpee el suelo.
      flappy_2_2018: Ahora hemos agregado el suelo. Adjunta un bloque al bloque "cuando golpee el suelo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy golpee el suelo.
      flappy_3: El bloque "cuando ejecute" te permite ejecutar el código cuando tu juego inicie. Intenta establecer la velocidad del nivel y el aleteo al objetivo.
      flappy_3_2018: El bloque "cuando ejecute" te permite ejecutar el código cuando tu juego inicie. Intenta establecer la velocidad del nivel y el aleteo al objetivo.
      flappy_4: Flappy volará entre los obstáculos a menos que escribas el código que lo hará estrellarse. Adjunta un bloque al bloque "cuando golpea un obstáculo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy se estrelle en el primer conjunto de tubos.
      flappy_4_2018: Flappy volará entre los obstáculos a menos que escribas el código que lo hará estrellarse. Adjunta un bloque al bloque "cuando golpea un obstáculo". Tu código necesita 'TERMINAR EL JUEGO' cuando Flappy se estrelle en el primer conjunto de tubos.
      flappy_5: Ahora agreguemos el marcador, y contaremos los puntos cuando Flappy pase los obstáculos. Agrega al bloque "cuando pase un obstáculo", y entonces anota un punto cuando Flappy vuele entre el primer conjunto de tubos.
      flappy_5_2018: Ahora agreguemos el marcador, y contaremos los puntos cuando Flappy pase los obstáculos. Agrega al bloque "cuando pase un obstáculo", y entonces anota un punto cuando Flappy vuele entre el primer conjunto de tubos.
      flappy_6: Ve si puedes anotar un punto haciendo que Flappy aletee más rápido o más lento.
      flappy_6_2018: Ve si puedes anotar un punto haciendo que Flappy aletee más rápido o más lento.
      flappy_7: A continuación, trata de cambiar el fondo adjuntando otro bloque al bloque "cuando ejecute".
      flappy_7_2018: A continuación, trata de cambiar el fondo adjuntando otro bloque al bloque "cuando ejecute".
      flappy_8: Puedes poner elementos visuales en cualquier momento, no sólo cuando comience el juego. Intenta establecer una escena AL AZAR cuando sucedan otros eventos, por ejemplo, al superar un obstáculo.
      flappy_8_2018: Puedes poner elementos visuales en cualquier momento, no sólo cuando comience el juego. Intenta establecer una escena AL AZAR cuando sucedan otros eventos, por ejemplo, al superar un obstáculo.
      flappy_9: Para mezclar las cosas, al chocar con un obstáculo, en vez de terminar el juego, intente ajustar el marcador de nuevo a 0.
      flappy_9_2018: Para mezclar las cosas, al chocar con un obstáculo, en vez de terminar el juego, intente ajustar el marcador de nuevo a 0.
      frozen circle function in circle: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      frozen circle function with parameter: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un círculo pequeño de tamaño 5 y uno más grande de tamaño 10?
      frozen circle function: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      frozen circle: Un círculo es una figura especial. ¿Puedes adivinar qué número debe reemplazar los signos de interrogación para dibujar un círculo?
      frozen cross rotate dense: "¡Ahora repitámoslo 90 veces! ¿Cuántas veces cabe 90 en 360? Pista: Es un número muy pequeño."
      frozen cross rotate: Ahora trata de repetirlo 10 veces. ¿Cuántos grados necesitas girar entre cada línea?
      frozen cross: Cubre un bloque de "Repetir" alrededor de estos comandos para crear un signo más. ¿Notaste que Elsa puede moverse hacia adelante y hacia atrás?
      frozen diamond mini snowflake: ¿Sabías que cada copo de nieve tiene una forma distinta? Crearemos un nuevo copo de nieve utilizando otro bloque de "Repetir" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo.
      frozen diamond snowflake: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      frozen diamond: Utiliza una repetición alrededor de estos bloques para crear un paralelogramo. Es como un rectángulo, pero tiene diferentes ángulos. Éste tiene 60 grados y 120 ángulos de grados en lugar de todos los 90 ángulos de grados.
      frozen freeplay: "¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal."
      frozen line: "¡Hola! Soy Elsa de Arendelle. Ayúdame a crear una línea."
      frozen perpendicular: Ahora veamos si podemos crear dos líneas que se encuentran a un ángulo de 90 grados una de la otra. Necesitarás usar tanto el bloque de "Giro" como el bloque de "Mover".
      frozen snowflake branch: Intenta utilizar el bloque "Crear una rama de copo de nieve" para dibujar 3 ramas, lo que empezará a parecerse a un copo de nieve.
      frozen snowflake full: "¡Ahora repitámoslo 8 veces para dibujar un hermoso copo de nieve!"
      frozen snowflower: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      frozen square iterative: Parece que estamos a la mitad de completar un cuadrado. Ahora pongamos 4 líneas juntas para crear un cuadrado.
      frozen square loop 3x: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      frozen square loop: ¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?
      frozen square snowflake: ¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?
      grade1_adventurer_loops1: "¡Cuatro montones de oro! Recoge todos."
      grade1_adventurer_loops2: "¿Cómo puede Laurel recoger los cinco montones de oro con un solo bloque `E ->`?"
      grade1_adventurer_loopsPre: "¡Ella es Laurel la Aventurera! ¿Puedes moverla para obtener tesoros?"
      grade1_artist_loops2: Ayuda al artista a dibujar una línea 7 veces para crear un muro en el jardín.
      grade1_artist_loops3: 'Ahora tenemos que preparar el suelo para plantar. Encuentra los errores en el código y ayuda al artista a preparar el terreno. '
      grade1_artist_loops5: Detrás de los arbustos, hay una hermosa viña llena de flores. ¿Puedes subir la viña y ver hasta dónde llega?
      grade1_artist_loops6: "**Desafío:** ¡Es un jardín escondido! Vamos a recorrerlo."
      grade1_artist_loops8: Tomemos el atajo del estanque. ¿Puedes ayudar al artista a permanecer en las piedras?
      grade1_artist_loopsFP: Usa lo que has aprendido para dibujar lo que crees que el artista vio cuando llegó a casa.
      grade1_maze_sequence1: "¡Cambie el código para traerme al cerdo!"
      grade1_maze_sequence2: "¡Cambie el código para traerme al cerdo!"
      grade1_maze_sequence3: Agrega 2 bloques para que el pájaro llegue hasta el cerdo.
      grade1_maze_sequence4: "¡Ahora intenta con este desafío desde el comienzo!"
      grade1_maze_sequence5: "¡Muéveme en una dirección, luego en otra para llevarme el cerdo!"
      grade1_maze_sequence6: "¡Averigua qué falta y entonces agrega bloques para llevarme al cerdo!"
      grade1_maze_sequence7: "¡Es tu turno! ¿Qué tienes que hacer para que el pájaro llegue hasta el cerdo?"
      grade1_maze_sequence8: "¡Depura este nivel agregando bloques para llevarme hasta el cerdo!"
      grade1_maze_sequence9: "¡Evita el TNT para llevarme al cerdo!"
      grade1_maze_sequenceA: 'Desafío: muéveme alrededor del TNT para llevar al pájaro hasta el cerdo.'
      grade1_maze_sequenceB: Arregla los errores para que el pájaro llegue hasta el cerdo.
      grade1_maze_sequenceC: "¡Depende de ti! Haz que el pájaro llegue hasta el cerdo."
      grade1_playlab_events1: Este juego se llama "Play Lab".  Ve si puedes descifrar que hace cada bloque.
      grade1_playlab_eventsFP: Usa tu imaginación. ¿Qué puedes hacer para que este juego sea más divertido?
      grade2_CaringForNewPet_0: Para este desafío, arrastra todos los bloques para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      grade2_CaringForNewPet_1: Arrastra un bloque 'avanzar' extra desde la caja de herramientas para finalizar tu código.
      grade2_CaringForNewPet_10: "¡Tráeme al cerdo!"
      grade2_CaringForNewPet_11: '"Mantén la calma y ayúdame a encontrar al cerdo malo".'
      grade2_CaringForNewPet_2courseC_maze_programming3: Hay un bloque sobrante que hará que el pájaro se estrelle. Arrástralo a la caja de herramientas para descartarlo.
      grade2_CaringForNewPet_4: '"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"'
      grade2_CaringForNewPet_5: "¡Tráeme al cerdo!"
      grade2_MakeDogTag_1: Arrastra bloques a la pantalla para que el artista dibuje sobre las líneas grises de la imagen (cada línea tiene una longitud de 100 pixeles).
      grade2_MakeDogTag_10: Dibuja algo divertido.
      grade2_MakeDogTag_3: Ayúdame a completar la casa para este gato.
      grade2_MakeDogTag_4: Dibuja un rectángulo alrededor del exterior para terminar esta etiqueta (los lados largos tienen 200 pixeles cada uno y los lados cortos, 100 pixeles)
      grade2_MakeDogTag_5: |-
        "¡Ahora una etiqueta para Belle!"

        Dibuja este diamante con lados de 200 pixeles.
      grade2_MakeDogTag_6: "¡Juego libre! Dibuja lo que quieras."
      grade2_MakeDogTag_7: "Una etiqueta más. Este es un triángulo para Pi. \n(Cada lado tiene 150 pixeles)"
      grade2_MakeDogTag_8: Ahora conectemos un montón de V juntas en un ciclo.
      grade2_MakeDogTag_9: Esta vez vamos a dibujarlo 24 veces. Añadir un giro a la izquierda de 30 grados a este código y ponerlo todo en un bloque de repetición.
      grade2_MakeDogTag_BFP: "\"Hola, soy un artista. Puedes escribir tu código para hacerme dibujar cualquier cosa\". \n\n¡Juega con los bloques en la caja de herramientas para ver que hacen!"
      grade2_PuppyLoops_1: "¿Puedes llevarme hasta el cerdo usando 5 bloques?"
      grade2_PuppyLoops_10: Mi molinillo de viento no está terminado. ¿Cuántas veces necesito repetir para terminarlo?
      grade2_PuppyLoops_2: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      grade2_PuppyLoops_4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade2_PuppyLoops_5: Tráeme al cerdo.
      grade2_PuppyLoops_7: "¡Llévame al girasol!"
      grade2_PuppyLoops_8: 'El código para los tres bigotes que ves es incorrecto. Sugerencia: cada bigote tiene 75 píxeles de largo. Repara este código para dibujar los bigotes.'
      grade2_PuppyLoops_9: Parece que la C en Código está dibujada al revés - ¿Puedes hacer que parezca una C?
      grade2_collector_10: "¡Casi terminas! ¡Recoge tantos tesoros como puedas para finalizar la etapa!"
      grade2_collector_10_2018: "¡Casi terminas! ¡Recoge tantos tesoros como puedas para finalizar la etapa!"
      grade2_collector_10_2019: "¡Casi terminas! ¡Recoge tantos tesoros como puedas para finalizar la etapa!"
      grade2_collector_5: Estos bloques están en el orden equivocado. ¿Puedes corregirlos?
      grade2_collector_6: Reorganiza los bloques para recoger todo el tesoro.
      grade2_collector_7: "¡Súper Desafío! Usa los bloques de la caja de herramientas para recolectar todo el tesoro."
      grade2_collector_A: Ayuda a Laurel a recoger todo el tesoro.
      grade2_collector_A_2018: Ayuda a Laurel a recoger todo el tesoro.
      grade2_collector_A_2019: Ayuda a Laurel a recoger todo el tesoro.
      grade2_maze_debuggingFP: '"Ahora, ¡ayúdame a acercarme sigilosamente al cerdo de la forma que quieras!"'
      grade2_playlab_project_1: |-
        Ahora, ¡escribe un programa que haga que Waddles
        se mueva usando las teclas arriba/abajo/izquierda/derecha para tocar a todos los blancos!
      grade2_playlab_project_3: |-
        ¿Puedes hacer que Waddles (actor 1) diga "¡Auch!" y haga un ruido de "golpe" si se encuentra con Chomp?

        Cuando termines, juaga el juago para que eso suceda.
      grade2_playlab_project_4: |-
        ¿Puedes agregar un bloque para ganar un punto
        cuando Waddles choque con Octavia (actor 3)?\\r
        ¡Juega y mueve a Waddles
        con las flechas hasta que anotes!
      grade2_playlab_project_5: |-
        Agrega bloques al evento "cuando se ejecuta"
        para cambiar el fondo y la velocidad de Waddles.\\r
        \\r
        Juega y
        mueve a Waddles con las flechas hasta que anotes.
      grade2_puppy_loops2: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      grade2_puppy_loops4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade3_ConditionalsElse_1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      grade3_ConditionalsElse_2: La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores.
      grade3_ConditionalsElse_3: Ahora la abeja sólo quiere hacer miel. Asegúrese de que sólo haga miel en el panal.
      grade3_ConditionalsElse_4: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, si no haz miel (porque es un panal de abejas).
      grade3_ConditionalsElse_5: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      grade3_ConditionalsElse_6: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí un bloque if-else se combina con otro bloque if-else para crear un bloque if,else-if, else. Completa la solución para recoger la cantidad desconocida de néctar.
      grade3_ConditionalsElse_7: Recuerda que las flores púrpura pueden tener 1, 2 o 3 néctares. Completa la función "revisar flor púrpura" y úsala para recoger todo el néctar de las flores.
      grade3_ConditionalsElse_8: Escribe una función dentro del bloque llamada "revisar que la flor hace miel." Tu función debe comprobar cuánto néctar tiene la flor púrpura, recogerla, avanzar y luego hacer miel.
      grade3_ConditionalsElse_9: 'Evaluación: Este código está errado. Completa la función "consigue néctar o produce miel", entonces llámalo para recolectar todo el néctar y la miel. Recuerda que las rosas púrpuras pueden tener 3, 2 o 1 néctares.'
      grade3_ConditionalsElse_TeacherIDo: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      grade3_Conditionals_1 BAD: Utiliza un bucle para recolectar todo el néctar.
      grade3_Conditionals_1: "¡Hola, soy una abeja! Ayúdame a recoger todo el néctar de las flores. Utiliza un bucle (loop)."
      grade3_Conditionals_10 BAD: "¡Reune todo el néctar de las filas de las flores! Utiliza un bucle anidado."
      grade3_Conditionals_10: 'Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas el condicional "Si néctar" en una flor roja? ¿Puedes completar esto con un bucle (loop)?'
      grade3_Conditionals_11 BAD: Evaluación - Utiliza un ciclo while para recolectar todo el néctar de esta flor.
      grade3_Conditionals_11: Colecta néctar y miel. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.
      grade3_Conditionals_12: Recoge néctar de las cuatro flores.
      grade3_Conditionals_13: evaluación Colecta todo el néctar. Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno.
      grade3_Conditionals_2: Ayúdame a recoger todo el néctar de las flores y a hacer miel. Usa un bucle (loop).
      grade3_Conditionals_3: "¡Flores de color púrpura pueden tener 1 o 0 néctar, pero no sabes cuál! Tenga cuidado de no recoger néctar de una flor morada si no tiene ninguno. Compruebe si el néctar es igual a 1 utilizando el bloque if."
      grade3_Conditionals_4: Verifica esta flor con un bloque de "if" para ver si hay cualquier néctar disponible.
      grade3_Conditionals_5: Colecta néctar de cada flor si tiene alguno.
      grade3_Conditionals_6: Este campo tiene flores rojas y púrpura. Flores rojas tienen una cantidad conocida de néctar, pero se desconoce el néctar de la flor de color púrpura. Colecta todo el néctar.
      grade3_Conditionals_7: Colecta todo el néctar de cada flor.
      grade3_Conditionals_8: Ayúdame a recolectar néctar, pero solo de las flores que tienen néctar.
      grade3_Conditionals_9: Utilizar un bucle para comprobar y recolectar el néctar de todas estas flores.
      grade3_Conditionals_TeacherIDo: Verifica esta flor con un bloque de "if" para ver si hay cualquier néctar disponible.
      grade3_Debugging_1: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_5: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel. Usted puede ahora usar ejecutar y paso.
      grade3_Debugging_6: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer toda la miel.
      grade3_Debugging_7: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_9: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Debugging_TeacherIDo: Estos bloques realmente me molestan. Corregir el (los) error(es) para recoger todo el néctar y hacer todo de la miel.
      grade3_Loops_10: Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      grade3_Loops_11: Utiliza un ciclo para seguir los pasos y recolectar el néctar.
      grade3_Loops_12: Utiliza un ciclo para recolectar néctar de cada flor y hacer miel en cada panal.
      grade3_Loops_2: "¿Podrías hacer la misma tarea más fácilmente con un ciclo?"
      grade3_Loops_3: "¿Podrías utilizar un ciclo para recolectar todo el néctar?"
      grade3_Loops_4: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      grade3_Loops_5: Pon estos bloques en un ciclo para recolectar néctar de cada flor.
      grade3_Loops_6: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces? ¡No olvides hacer la miel al final!"
      grade3_Loops_7: 'Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      grade3_Loops_8: Usa un ciclo para recolectar el néctar y hacer la miel.
      grade3_Loops_9: Recolecta el néctar de cada flor y haz miel en cada panal.
      grade3_Loops_TeacherIDo: 'Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      grade3_RunningFarm_10: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      grade3_RunningFarm_11a: Recoge todo el maíz y todas las lechugas, luego recoge la calabaza.
      grade3_RunningFarm_3: _"¡Maíz, lechuga Y calabazas! Ayúdame a recoger todo"._
      grade3_RunningFarm_4: Ayuda a la granjera a recoger todas las lechugas en cada racimo antes de moverte a la siguiente rama.
      grade3_RunningFarm_6: "¿Puedes descubrir cómo recoger la calabaza? ¡Asegúrate de recoger todo el maíz a lo largo del camino!"
      grade3_RunningFarm_7: "**Desafío:** Recoge todo el maíz y las lechugas, luego recoge la calabaza."
      grade3_bee_conditionals_new1a: |-
        Ayuda a la abeja a recoger todo el néctar.

        Solo puedes recoger el néctar de las flores, pero puedes revisar todos los espacios para ver si hay una flor.
      grade3_bee_conditionals_new2: Recoge todo el néctar con la menor cantidad de bloques posible
      grade3_bee_conditionals_new2a: Obtén todo el néctar con la menor cantidad de bloques posible.
      grade3_bee_conditionals_new2b: Recoge todo el néctar. Sólo puedes recoger el néctar de las flores, pero puedes revisar cualquier espacio para ver si hay una flor.
      grade3_bee_conditionals_new3b: Recoge todo el néctar y haz toda la miel.
      grade3_bee_conditionals_quantum1: Mira si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      grade3_bee_conditionals_quantum2: La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores.
      grade3_bee_conditionals_quantum3: Algunas de estas nubes pueden tener una panal debajo de ellas. ¡Asegúrate de revisar si hay un panal escondido debajo de cada nube!
      grade3_bee_conditionals_quantum4: Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en los panales.
      grade3_maze_Loop1: 'Evaluación: ¡Llévame al girasol usando solo 5 bloques! '
      grade3_maze_loops2: "¡Lleva al zombie hasta el girasol usando la menor cantidad de bloques posible!  "
      grade3_maze_loops2a: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      grade3_maze_loops3: Lleva al zombie hasta el girasol con la menor cantidad de bloques posible.
      grade3_maze_loops4: "¡Llévame al girasol!"
      grade3_maze_loops5: "¡Llévame al girasol!"
      grade3_maze_nestedLoops1: "¿Puedes llevarme hasta el cerdo usando 5 bloques?"
      grade3_maze_nestedLoops2: '¿Podrías reemplazar estos cinco bloques con solo dos? (Sugerencia: Crea un ciclo usando un bloque de "repeticiones".)'
      grade3_maze_nestedLoops3: Llévame al cerdo usando solo dos bloques.
      grade3_maze_nestedLoops4: Usa dos ciclos para hacer que el cerdo use menos bloques.
      grade3_playLab_buildGame_final2: Aquí está todo tu código para escoger una carta; ¡intenta agregar otras características divertidas!
      grade3_robotFarmer_ConditionalsIntro4: Ayuda a la granjera a eliminar toda la pila con el bucle `mientras`.
      grade3_robotFarmer_ConditionalsIntro_1: "_\"Hola, soy una granjera. ¡Necesito tu ayuda para aplanar el campo de mi granja para que quede lista para plantar!\"_  \n\\\\r\n\\\\r\nMuévete al montón de tierra y usa el bloque 'remover' para removerla."
      grade3_robotFarmer_ConditionalsIntro_10: Estoy trabajando hasta tarde, así que esta oscuro afuera y no puedo decir que tan grandes son las pilas. Ahora no tengo todas las opciones que solía tener mientras estaba en el bloque. Muéveme a lo largo del campo y si hay una pila remuevela
      grade3_robotFarmer_ConditionalsIntro_10a: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      grade3_robotFarmer_ConditionalsIntro_11: 'Todavía está oscuro afuera. Muéveme a lo largo del campo. Si hay una pila, quítala y si hay un agujero, rellénalo. Sugerencia: utiliza el menú desplegable de opciones del bloque "si".'
      grade3_robotFarmer_ConditionalsIntro_11a: 'Aplana todas estas pilas con la menor cantidad de bloques posible. '
      grade3_robotFarmer_ConditionalsIntro_2: Luego, muévete hacia el orificio y llénalo con 6 paladas de tierra, usando el bloque 'llenar'.
      grade3_robotFarmer_ConditionalsIntro_4: |-
        _"¡No sé cuánta tierra hay en este montón!"_\\r
        \\r
        Ayuda a la granjera a quitar el montón completo usando un loop 'mientras'.
      grade3_robotFarmer_ConditionalsIntro_5: 'Ayúdame a quitar toda esta tierra. '
      grade3_robotFarmer_ConditionalsIntro_6: Quita todas las pilas de tierra, utilizando la menor cantidad de bloques que sea posible. Las nuevas opciones en el menú desplegable del bloque "mientras" me dicen si estoy parado en una pila o un agujero.
      grade3_robotFarmer_ConditionalsIntro_7: |-
        ¡Mira todos esos hoyos!  Cada uno necesita una cantidad diferente de tierra.   \\r
        \\r
        Puedes usar el loop 'mientras' ¡para llenarlos todos fácilmente!
      grade3_robotFarmer_ConditionalsIntro_8: Llena el orificio al final de cada uno de estos caminos.
      grade3_robotFarmer_ConditionalsIntro_9: "**Desafío:** Llena todos estos hoyos usando la menor cantidad de bloques posible. "
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1: 'Ayúdame a llenar todos estos agujeros con 5 paladas de tierra. Sugerencia: puedes poner un bloque "repetir" dentro del bloque "mientras".'
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2: Estoy trabajando hasta tarde, así que esta oscuro afuera y no puedo decir que tan grandes son las pilas. Ahora no tengo todas las opciones que solía tener mientras estaba en el bloque. Muéveme a lo largo del campo y si hay una pila remuevela
      grade4_arist_nested_loop_circles1: Usar un bucle anidado para completar el diseño.
      grade4_arist_nested_loop_flags1: haz un bucle con el código dado para crear un molino de viento.
      grade4_arist_nested_loop_polygons1: 'con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuánto es 360 dividido por 10?)'
      grade4_arist_nested_loop_polygons2: 'Repite el bucle 6 veces. ¿Cuánto tienes que girar cada vez el bucle? (Pista: ¿Cuánto es 360 dividido por 6?)'
      grade4_arist_nested_loop_squares1: "¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles."
      grade4_arist_nested_loop_triangles2: 'Ahora anida este bucle dentro de otro bucle para dibujar 10 triángulos. Esto se llama un bucle anidado. Sugerencia: Todos los 10 triángulos completan una rotación de 360 grados.  '
      grade4_arist_nested_loop_triangles3: "¿Puedes dibujar un hexágono con un bucle del código del triángulo?"
      grade4_arist_nested_loop_triangles4: "¡Dibuja los dientes en la boca de cocodrilo!"
      grade4_arist_nested_loop_triangles5: Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado.
      grade4_arist_nested_loop_triangles6: "¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?"
      grade4_artist_functions1: "Usa cuadrados con lados de 100 pixeles para ayudar al zombi a dibujar gafas. \nEl puente entre las gafas es de 75 pixeles de largo."
      grade4_artist_functions2: ¡Las funciones permiten definir nuevos bloques! Hemos movido los bloques para dibujar un cuadrado en la función llamada "dibuja un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear los lentes? Los cuadrados están separados por 75 píxeles.
      grade4_artist_functions2a: Crea esta imagen con los bloques proporcionados.
      grade4_artist_functions3a: Crea esta imagen con los bloques proporcionados.
      grade4_artist_functions3b: Esta vez, usa líneas de 8 hexágonos con lados de 25 pixeles.
      grade4_artist_functionsChallenge0: "**Desafío:** Crea tantas funciones como creas que vas a necesitar para dibujar cuadrados de 50 pixeles."
      grade4_artist_functions_challenge: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta de cómo nuestras filas pares se desplazan hacia la derecha?
      grade4_artist_functions_challenge2: Utiliza las funciones sugeridas para dibujar cuatro filas de hexágonos. ¿Te das cuenta de cómo nuestras filas pares se desplazan hacia la derecha?
      grade4_artist_functions_stars0: Puedes agregar un bloque `repetir` para hacer este dibujo.
      grade4_artist_functions_stars1: Ahora que puedes dibujar una estrella, ¡intenta dibujar cuatro!
      grade4_artist_functions_stars2: Dibuja solamente esas tres estrellas para finalizar este desafío.
      grade4_artist_functions_windows0: Dibuja un cuadrado para crear esta ventana. Luego, gira 90 grados antes de dibujar otro, y así sucesivamente.
      grade4_artist_nestedLoops_challenge: "¡Haz clic para ver las sugerencias otra vez! Aquí esta el código para una interesante figura. ¿Qué pasa cuando lo repites muchas veces, torneado entre cada interacción? Nota que el giro en esta figura agrega más de 420 grados, lo cual significa que cuando el artista termino de dibujar, verá otra dirección diferente que cuando empezó. Esa nueva dirección es exactamente 60 grados a la derecha de cuando comenzó."
      grade4_artist_nestedLoops_challenge2: "¡Ahora, un desafío! Aquí hay un diseño que solamente usa bloques que ya te hemos mostrado. ¿Puedes averiguar cómo crearlo nuevamente sin información extra? Sugerencia: Tantea, usa ensayo y error. No se espera que esté perfecto la primera vez."
      grade4_artist_nested_loop_circles1: Usar un bucle anidado para completar el diseño.
      grade4_artist_nested_loop_flags1: haz un bucle con el código dado para crear un molino de viento.
      grade4_artist_nested_loop_polygons1: 'con el bucle repite este diseño 10 veces. ¿Cuánto tienes que girar el bucle cada vez? (Pista: ¿Cuánto es 360 dividido por 10?)'
      grade4_artist_nested_loop_squares1: "¿Puedes dibujar estas 10 plazas de esta acera, usando un bucle anidado? Cada cuadrado tiene 30 píxeles."
      grade4_artist_nested_loop_triangles1: |-
        Completa el código para dibujar estos triángulos. El
        primero está hecho para ti. Sugerencia: 3 triángulos en una rotación de 360 grados.\\r
        \\r
      grade4_artist_nested_loop_triangles5: Crea un sol anidando el código de arranque en otro bucle. Esto se llama un bucle anidado.
      grade4_artist_nested_loop_triangles6: "¿Puedes dibujar estos 36 triángulos utilizando un bucle anidado?"
      grade4_artist_parameters_squares1: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      grade4_artist_parameters_triangles2: ¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.
      grade4_artist_parameters_triangles2b: "¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño."
      grade4_artist_parameters_triangles3: "¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño."
      grade4_artist_parameters_triangles4: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      grade4_artist_parameters_trianglesx: "¿Puedes completar este dibujo? Sugerencia: cada triángulo es 25 píxeles más grande que el último. El primer triángulo es de 25 píxeles de tamaño."
      grade4_bee_conditionals_nested_loops: Recoge todo el néctar. Sólo puedes recoger el néctar de las flores, pero puedes revisar cualquier espacio para ver si hay una flor.
      grade4_bee_conditionals_new1: Recoge todo el néctar. Sólo puedes recoger el néctar de las flores, pero puedes revisar cualquier espacio para ver si hay una flor.
      grade4_bee_conditionals_new3b: "¡Ah, oh! La abeja no está segura de si debería recoger el néctar o hacer miel. ¿Puedes ayudarla?"
      grade4_bee_conditionals_quantum1: La abeja no puede decir si se trata de una flor o un panal de miel. Reúnen néctar de las flores, pero primero tienes que comprobar si es una flor o un panal de miel.
      grade4_bee_conditionals_quantum2: La abeja sólo quiere néctar ahora. Recuerda que no todos los objetos son flores, recoge néctar solamente de las flores.
      grade4_bee_conditionals_quantum4: El objeto desconocido es una flor o un panal de miel. Use el bloque "if/else" para recoger néctar si es una flor, si no haz miel (porque es un panal de abejas).
      grade4_bee_conditionals_quantum5: Puede haber una flor o un panal bajo esas nubes. Usa el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque hay un panal de abejas).
      grade4_bee_functions1: Colecta todo el néctar de cada flor.
      grade4_bee_functions10: Crea una función que recoja todo el néctar de cada flor.
      grade4_bee_functions2: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 2 néctar" para recolectar el néctar de cada flor.
      grade4_bee_functions3: Las funciones son bloques de código que realizan una tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      grade4_bee_functions4: La función "mover y obtener néctar" realizada por la abeja, recoge néctar, y entonces devuelve a la abeja al principio. Usa la función para recoger todo el néctar.
      grade4_bee_functions6: Ahora escribe la función para recoger el néctar de las flores.
      grade4_bee_functions7: Crea una función y llámala para recoger el néctar en cada flor y hacer miel en cada panal.
      grade4_bee_functions9: Crea una función que recoja todo el néctar de cada flor.
      grade4_bee_nestedLoops0: Utiliza un bucle para recolectar todo el néctar.
      grade4_bee_nestedLoops1: Recoge todo el néctar de cada flor.
      grade4_bee_nestedLoops2: "**Desafío:** Descifra cómo obtener todo el néctar usando sólo los bloques disponibles."
      grade4_bee_nestedLoops2a: Usa la menor cantidad posible de bloques para recoger todo el néctar.
      grade4_bee_nestedLoops3: Recolecta todo el néctar creando un bucle anidado.
      grade4_bee_nestedLoops4: 'Recolecta todo el néctar de cada flor y haz miel en cada panal. Utiliza un loop anidado. '
      grade4_frozen_freeplay: "¡Te has convertido oficialmente en un artista maestro! Crea un paraíso invernal."
      grade4_frozen_functions0: "¿Puedes adivinar con qué número reemplazarías a los signos de interrogación para dibujar un círculo?"
      grade4_frozen_functions1a: Utiliza el nuevo bloque "Crear un círculo" para crear 10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada círculo.
      grade4_frozen_functions2: Ahora crearemos 20 círculos superpuestos, girando 18 grados entre cada círculo.
      grade4_frozen_functions3: Aquí está un bloque "Crear círculo" que puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar un círculo pequeño de tamaño 5 y uno más grande de tamaño 10?
      grade4_frozen_functions4: Formas complejas de nieve pueden crearse usando figuras geométricas muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos de tamaño 10?
      grade4_frozen_nested_loop_diamonds2: ¿Sabías que cada copo de nieve tiene una forma distinta? Crearemos un nuevo copo de nieve utilizando otro bloque de "Repetir" para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados entre cada paralelogramo.
      grade4_frozen_nested_loop_diamonds3: Ahora crearemos un nuevo copo de nieve, utilizando el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha 36 grados entre cada uno.
      grade4_frozen_square: ¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?
      grade4_frozen_square_loop1: ¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir" para formar un cuadrado?
      grade4_frozen_square_loop2: Ahora crearemos tres cuadrados, girando al terminar cada cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      grade4_frozen_square_loop3: ¿Puedes dibujar un copo de nieve utilizando el bloque "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar 36 grados entre cada cuadrado?
      grade4_playLab_proj_example1a: Echa un vistazo a este proyecto. ¿Puedes ver cómo se hizo?
      grade4_playLab_proj_example2a: Echa un vistazo a este proyecto. ¿Puedes ver cómo se hizo?
      grade4_playlab_freeplay: "¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. "
      grade4_playlab_test: Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      grade4_playlab_test2: Aquí está la función denominada "salto" que permite que tu personaje principal salte hasta 100 píxeles. Use la función salto para recoger todas las banderas.
      grade4_prompt_test: Este es un nivel de laboratorio de juego de prueba.
      grade4_review_artist1: Hola, soy un artista. Puedes escribir código para hacerme dibujar cualquier cosa. Usa algunos bloques para hacerme dibujar sobre las líneas grises en la imagen. (Cada línea tiene 100 píxeles de largo)
      grade4_review_artist2: "¡Esta casa necesita un techo! Dibuja el triángulo. Pista: Los 3 lados tienen la misma longitud."
      grade4_review_artist3: El bloque Salta mueve el artista sin dibujar. Dibuja la línea punteada utilizando los bloques Salta y Dibuja.
      grade4_review_bee1: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      grade4_review_bee2: Recolecta el néctar de cada flor y haz miel en cada panal.
      grade4_review_bee3: Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      grade4_scaffolded_project6: "¡Has terminado! Ahora puedes jugar tu juego o compartirlo con tus amigos o compañeros!"
      grade5_artist_binary1: Binario es una forma de representar información mediante sólo dos opciones. Aquí vamos a usar las opciones "apagado" (representado por el número 0) y "encendido" (representado por el número 1). Le hemos provisto una red de "píxeles" que usted podrá revisar y hacer diseños encendiendo sólo algunos cuadrados. ¿Puede hacer que el artista pinte "01010101" en binario en la primera fila?
      grade5_artist_binary10: Haga clic aquí para ver sugerencias.
      grade5_artist_binary11: 'Juego Libre: Aquí tiene un lienzo de alta resolución para dibujar - ¡16 bits por 16 bits!'
      grade5_artist_binary2: Aquí hay una función que toma una cadena binaria de 0 y 1 e instruye al artista a que gire de izquierda a derecha, de arriba hacia abajo, llenando los cuadrados cuando ve 1 e ignorándolos cuando ve 0. Corre este código para ver cómo el artista usa el binario para dibujar el patrón.
      grade5_artist_binary3: "¿Cuántas de estas secuencias binarias podría enlazar 8 veces para dibujar esta imagen?"
      grade5_artist_binary4: "¿Puede dibujar este molde enlazando una secuencia binaria de tres dígitos?"
      grade5_artist_binary5: Cada secuencia binaria representa una fila de esta figura. ¿Puede reacomodarla de tal manera que dibuje una cara con una sonrisa en lugar de una cara de aspecto fruncido?
      grade5_artist_binary6: "¿Cuál de las secuencias binarias de 6 dígitos, repetidas 11 veces, dibujará esta imagen?"
      grade5_artist_binary7: "¿Cuál es la secuencia binaria más corta que puede repetir para dibujar esta imagen?"
      grade5_artist_binary8: Termine este dibujo.
      grade5_artist_binary9: Aquí hay un lienzo con mejor resolución para pintar - ¡16 píxeles por 16 píxeles! ¿Ves lo que pasa cuando empezamos a ser creativos con los bits?
      grade5_artist_for_loops1: 'Dibuje este triángulo que tiene un tamaño de 50 píxeles. Sugerencia: Use un bloque de repetición.'
      grade5_artist_for_loops10: "¿Puedes descubrir cómo usar todas las cosas que has aprendido para crear esta imagen? \n\n¿Necesita una pista? Presiona aquí."
      grade5_artist_for_loops1b: Experimenta con un bucle `desde` y juega con la variable `contador`.
      grade5_artist_for_loops3: 'Estos triángulos tienen lados que van de 20 pixeles a 200 pixeles, y cada triángulo es 20 pixeles más grande que el anterior. '
      grade5_artist_for_loops5: La línea más pequeña de este espiral cuadrado es 10, el más largo es 200, y cada línea es 10 píxeles mas larga que la anterior. ¿Puedes llenar los bloques faltantes para completar este sorprendente dibujo?
      grade5_artist_for_loops6: Si girara un poco más o menos de lo que normalmente haría para una forma, crearía un efecto más nítido. Intente girar 89 grados para crear esta espiral cuadrada torcida.
      grade5_artist_for_loops7: "¡Haz 3 pequeños cambios al código desde el último nivel para obtener esto!"
      grade5_artist_for_loops7a: Baja el ángulo a 72 grados para obtener un pentágono en espiral.
      grade5_artist_for_loops8: "¿Recuerdas cuando usamos una variable para controlar el número de lados de una forma? Este patrón empieza con un triángulo y agrega un cada lado a la vez hasta que dibuja un decágono (10 lados). Cada lado debe ser de 100 píxeles de largo. Sugerencia: 360 dividido por el número de lados de una forma, es el número de grados que necesitarás para girar."
      grade5_artist_for_loops9: ¡Vamos a poner todo junto! Usando tu conocimiento de "ciclos for" y del "contador", crea este dibujo donde cada forma tiene dos partes más que la anterior. Asegúrate de que cada lado sea 10 veces más largo que el número de lados del polígono. Muy poco del código se ha proporcionado para ti.
      grade5_artist_for_loopsfreeplay11: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      grade5_artist_for_loopsfreeplay12: 'Juego libre: intenta usar la variable `contador` con otros elementos del dibujo para crear imágenes mágicas como esta.'
      grade5_artist_functionparameters10: 'Inspiración de juego libre: ¡Ahora has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Visita <https://studio.code.org/c/106387604> para la solución.'
      grade5_artist_functionparameters11: 'Juego Libre: Aquí están las funciones que has escrito y algunas más para que juegues con ellas. ¡Dibuja algo impresionante!'
      grade5_artist_functionparameters7: Esta imagen es similar a la última. ¿Se puede utilizar un "ciclo for" con tu función para hacer este diseño?
      grade5_artist_functionparameters8: 'Vamos a editar esta función "dibujar una forma". Ya tiene un parámetro de "longitud". Ahora, vamos a editar la función para añadir también un parámetro "lados". Recuerda que el ángulo para girar una forma determinada es 360 dividido por la cantidad de lados que tiene. Sugerencia: las longitudes para cada forma son: el triángulo es de 100 píxeles, el hexágono es de 25 píxeles y el cuadrado es de 50 píxeles.'
      grade5_artist_functionparameters9: 'Desafío: edita `dibujar un borde en espiral` para usar los parámetros `longitud` y `lados`, y luego vuelve a crear estas formas.'
      grade5_artist_functionparameters9a: Finaliza la función `dibujar un borde en espiral` para que también pida una longitud mínima para el centro de la espiral.
      grade5_artist_functionparameters9b: "¿Puedes descubrir cómo hacer este dibujo con la función que acabas de crear?"
      grade5_artist_functionparameters_6: "¿Puedes completar este dibujo? Los lados de todas las formas son 100 píxeles de largo."
      grade5_artist_parameters_squares1: 'Haz clic en "Editar" para completar la definición de la función "dibujar un cuadrado" y agrega un parámetro. Debe tomar un parámetro de longitud, al igual que el triángulo. Esta vez, dibuja 3 cuadrados: de 25, 50 y 75 píxeles de largo, separados por 100 píxeles.'
      grade5_artist_parameters_squares2a: Edita la función para aceptar el parámetro llamado `longitud`.
      grade5_artist_parameters_triangles2a: ¿Notas algo diferente en estos bloques de función? Haz clic en "Ejecutar" para ver qué pasa.
      grade5_artist_parameters_triangles4: '¿Puedes dibujar cada uno de estos triángulos con esa nueva función? El primero es de 25 píxeles de largo, el segundo es de 50 y el tercero es de 75. Sugerencia: comienza haciendo clic en "Editar" en tu bloque de función.'
      grade5_artist_variables_freeplay10: 'Juego libre: Experimento con el número de lados de esta forma. ¿Puedes cambiar el algoritmo de modo que el tamaño total de la forma siga siendo el mismo, sin importa cuántos lados tenga? Consejo: Tendrás que usar tus bloques de matemáticas (360 dividido por "caras" en dos lugares esta vez) '
      grade5_artist_variables_freeplay14: 'Juego Gratis: revísalo, ahora tu algoritmo está anidado dentro de otro circuito. Experimenta cambiando los valores de tus dos variables para dibujar patrones asombrosos.'
      grade5_artist_variables_freeplay15: 'Inspiración para ejercicio libre: ¡Ya has aprendido todo lo que necesitas saber para hacer un patrón como éste! Si te inspira esta imagen, tratar de hacer algo similar. De lo contrario, crea algo por tu cuenta. ¿Quieres saber cómo se hizo nuestro patrón de inspiración? Echa un vistazo aquí: <https://levelbuilder-studio.code.org/c/8781/edit>'
      grade5_artist_variables_freeplay16: "¿Aún jugando? ¡Aquí hay un lienzo en blanco donde usted podrá crear lo que quiera!"
      grade5_artist_variables_hexagons1: Vamos a intentarlo otra vez. Ahora, vamos a hacer este diseño cool con un hexágono de 60 píxeles.
      grade5_artist_variables_letterT11: Aquí está el mismo algoritmo que ideamos con el último rompecabezas - ¿Qué debes establecer en la variable "sides" para dibujar este dibujo de cuadrados?
      grade5_artist_variables_octagons13: Cuando una forma tiene varios lados, cada lado necesita ser más corto si tú quieres el patrón completo para ajustar la pantalla. Vamos a recrear el algoritmo desde este increíble patrón, pero en lugar de poner manualmente la variable de "longitud", vamos a usar un bloque de matemáticas con la variable de "lados" dentro para asegurarse de que cada forma se ajusta correctamente. El perímetro de cada polígono es de 300 píxeles. ¿Necesitas algunos consejos? Haga clic aquí.
      grade5_artist_variables_pentagon8: Utiliza lo que aprendiste en el rompecabezas anterior para crear el hexágono usando la variable "lados". Vé cómo puedes cambiar solo una variable para dibujar un triángulo, cuadrado, pentágono u octágono?
      grade5_artist_variables_pentagon9: Modifica este algoritmo para que utilice la variable "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el número 5 con la variable "lados" y usa el bloque "establecer lados".
      grade5_artist_variables_pentagons1: ¿Me puedes ayudar a dibujar este patrón cool dejando caer el bloque de variable "longitud" en los lugares correctos?
      grade5_artist_variables_pentagons12: Vamos a poner la variable "sides" en 5. Si agrego mas lados a este algoritmo, ¡más grande es el patrón entero! Agreguemos una nueva variable llamada longitud "lengh" y úsala si tienes que avanzar "move forward". Establece la variable longitud "lengh" a 75 para esta figura.
      grade5_artist_variables_rectangle6: Ahora quiero hacer un rectángulo que es dos veces tan alto como ancho. Tenemos una variable llamada "ancho" que se encuentra a 100. ¿Puedes usar los bloques de matemáticas para completar el código?
      grade5_artist_variables_square7: Aquí hay un código que puede dibujar cualquier polígono regular. Hay una nueva variable llamada lados que se inicializa a 4. ¿Puedes usar la variable lados (junto con el bloque de matemáticas) para activar la cantidad correcta independientemente de cuántos lados hay en el polígono? ¡Haz clic aquí para regresar a la pista!
      grade5_artist_variables_triangles2: En lugar de avanzar por 100 "moving forward by 100", el bloque mover "move" ahora referencia la variable longitud "length". ¿Podrías establecer la longitud "length" a 150 para dibujar este nuevo triángulo?.
      grade5_artist_variables_triangles3: Arrastra un bloque de número hasta el bloque "establecer longitud" para dibujar un conjunto de triángulos de 50 píxeles.
      grade5_bee_for_loops1: Utiliza un bucle para recolectar el néctar de cada flor.
      grade5_bee_for_loops10: "¿Cuál debería ser tu incremento para recoger 15, luego 12, y luego 9, 6 y 3 néctares?"
      grade5_bee_for_loops11: "**Desafío:** Toma lo que has aprendido acerca de los bucles `desde` e intenta resolver este problema. "
      grade5_bee_for_loops2: Agrega el código necesario para asegurarte de que la abeja recolecta todo el néctar. ¡Mira cuánto código necesitas para este puzzle! (Aprenderemos una manera más simple en el siguiente puzzle).
      grade5_bee_for_loops4: Ayuda a la abeja a recoger todo el néctar.
      grade5_bee_for_loops6: También puedes utilizar un bucle para contar hacia atrás. Trata de recoger este néctar por la cuenta regresiva del 5 al 1 por 1.
      grade5_bee_for_loops7: Usa un incremento de 2 para intentar recoger estas flores.
      grade5_bee_for_loops8: Si tu bucle está contando, el incremento se agrega a la variable contador en cada ciclo. ¿Cuál debe ser el incremento para recoger 3, 6, 9 de néctar?
      grade5_bee_for_loops9: Usa la variable `contador` para navegar por este jardín con la menor cantidad de bloques posible.
      grade5_pixelation: Crea una imagen a tu elección en código binario. El lenguaje binario estará representado por '0' y '1' únicamente.
      grade5_playlab_freeplay: "¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. "
      grade5_playlab_variables1: ¡Ahora no tienes que escribir nada de código, sólo presiona "ejecutar" para jugar el juego! En este juego, tú eres el perro que está tratando de recoger más banderas que el Gato. Use la flecha abajo para controlar al Perro. Presiona "Finalizar" cuando terminaste de jugar.
      grade5_playlab_variables10: Llene el parámetro de entrada "actor" de tal manera que podamos llamar la función "patrulla" para cada uno de los actores. Recuerde, los actores corresponden a los números 1, 2 y 3.
      grade5_playlab_variables11: Agrega otro parámetro llamado "velocidad" a la función de "patrulla". Trata de usar un bloque "obtén velocidad" con el nuevo parámetro "velocidad" para ayudar a Pingüino a que obtenga ambas banderas antes de que los otros duendes obtengan una.
      grade5_playlab_variables12: "¡Vamos a divertirnos! Mira el código dado para ver si puedes averiguar qué es lo que hace cada bloque. Cuando termines, usa las flechas de tu teclado para controlar el Perro y colecta todas las banderas."
      grade5_playlab_variables13: Use un bloque "cuando el actor toque" para enviar al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca a alguno de los otros actores.
      grade5_playlab_variables14: "¡Es hora de jugar! Diviértete con todos los bloques en tu caja de herramientas. "
      grade5_playlab_variables2: ¡Esa carrera en ese último problema no fue justa! Cambie la variable de "velocidad\_perro" para asegurarse de que puede recoger más banderas que el Gato. ¡El primero en recoger 10 banderas gana!
      grade5_playlab_variables3: "¡Aquí tiene una nueva clase de juego! Use las flechas hacia la izquierda y hacia la derecha para moverse y las flechas hacia arriba y hacia abajo para saltar. Vea si puede recoger todas las banderas."
      grade5_playlab_variables4: 'Ahora estamos usando una variable denominada "altura" para controlar cuán alto puede saltar el perro. Actualice la variable "altura" de tal manera que el perro pueda saltar lo suficientemente alto para alcanzar todas las banderas. Pista: las banderas nuevas tienen 200 píxeles de altura.'
      grade5_playlab_variables6: Usa la flecha de la derecha para disparar corazones. En nuestro juego, ¿cómo deberíamos anotar puntos? Añada 1 a su variable "puntos" cada vez que el Perro golpea al Gato con un corazón. Use el evento "cuando el actor 2 toca cualquier cosa" para iniciar una actualización a tu puntuación. Puedes incrementar tu variable estableciendo "puntos = puntos + 1". Obtén tu puntaje mas de 10 (¡yendo uno a la vez!) para pasar de nivel.
      grade5_playlab_variables7: Bien, ahora asegurémonos que este juego no sea muy fácil - cada vez que el Perro (actor 1) es golpeado por una bola de fuego usted debe perder un punto. Empiece con 10 puntos de tal manera que no sea muy difícil. Deje que su calificación caiga de 10 a 0 para pasar de nivel.
      grade5_playlab_variables71: 'Aquí esta nuestro juego de una etapa anterior, pero la mayoría del código está oculto. Hay una nueva función "puntuación." Editar la función para que el parámetro "puntos" sea agregado a la variable "puntuacion_jugador". La variable "puntuación_jugador" debe aumentar cada vez que Perro etiquete Gato con corazones y disminuir cada vez que Gato etiquete Perro con corazones. Nota: cuando haya terminado, haga clic en "Ejecutar" para jugar. Cuando perro tenga 6 puntos, tú serás llevado al siguiente rompecabezas. '
      grade5_playlab_variables81: 'Añadimos una última función para ti. Utiliza una sentencia "Si" para que tu programa llame la función "livel_mas" solo cuando "puntuacion_jugador" sea mayor que un cierto número. Por ejemplo: "puntuacion\_jugador" > 6 Juega el juego, y hazlo pasar de nivel 4 para mover al siguiente problema. '
      grade5_playlab_variables9: Aquí hay una función denominada "patrulla". Edítela para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      grade5_playlab_variables_freeplay: "¡Tiempo Libre para jugar! Aquí están todas las variables con las que hemos jugado hasta ahora, también unas pocas más en caso de necesitarlas. Haz un juego o historia que utilice estas variables. Sugerencia: desplázate hacia abajo para ver todos los comandos en el área de trabajo."
      gradeK_sequence_4: Inténtalo tu mismo/a desde el comienzo.
      gradek_artist_loops1: Ayuda al artista a dibujar esta línea dos veces hacia adelante.
      gradek_artist_loops2: Nuestro artista está tratando de trazar una línea cinco veces, pero no puede hacerlo bien. ¿Puedes ayudar?
      gradek_artist_loops3: Ahora, utiliza un ciclo de repetición para dibujar esta línea cinco veces!
      gradek_artist_loops4: Dibuja una línea de siete pasos de largo. Esta se convertirá en nuestro horizonte.
      gradek_artist_loops5: Pongamos una colina bonita en el fondo.
      gradek_artist_loops6: Usa el loop 'repetir' para agregar olas al agua.
      gradek_artist_loops7: Necesitamos una escalera hasta el bote.
      gradek_artist_loops8: 'Desafío: Las escaleras hasta el muelle están rotas. Ayúdame a arreglarlas.'
      gradek_artist_loops9: Es hora de regresar a la tierra. ¡Ayúdame a poner piedras para no caer!
      gradek_artist_loopsA: Ayúdame a construir escalones para ver cómo zarpa el barco.
      gradek_artist_loopsFP: El artista vio algo gracioso a la distancia. Dibuja lo que crees que vio.
      gradek_artist_loopsPre: Este es un nuevo tipo de desafío llamado "Artista". Juega con el nivel y dibuja algo divertido.
      gradek_playlab_events1c: Jorge el Perro quiere decir "Hola". ¿Puedes ayudarlo?
      gradek_playlab_events2c: Ayuda a Jorge el Perro a moverse conectando el bloque 'mover a la izquierda' al bloque de evento 'Cuando a la izquierda' que ya está en el espacio de trabajo.
      gradek_playlab_events4c: Agrega eventos para que Jorge se mueva hacia arriba y hacia abajo si se presionan los botones `arriba` y `abajo`.
      gradek_playlab_events5c: "¡Hazlo aún más interesante! Cambia el fondo y reproduce un sonido aleatorio cuando se hace clic en Jorge."
      gradek_playlab_eventsFP: Agrega todo lo que quieras a este juego. ¿Puedes hacer que el dinosaurio desaparezca cuando Jorge se encuentra con él?
      gradek_playlab_eventsPre: Este es un nivel de Laboratorio de juegos. ¡Mueve los bloques al espacio de trabajo y mira lo que ocurre!
      harvester_Kahoot: Ahora ayuda a la granjera a recoger el maíz, la lechuga **y** la calabaza.
      harvey_pixelation: Crea una imagen a tu elección en código binario. El lenguaje binario estará representado por '0' y '1' únicamente.
      harvey_snowflake_artist1: "¡Prepara tu copo de nieve para la impresión en 3D!"
      harvey_snowflake_artist2: "¡Prepara tu copo de nieve para la impresión en 3D!"
      harvey_tictactoe: "¡Vamos a jugar un juego!! Dibuja tantas X como tú puedas! ¿Puedes obtener 3 en una fila?"
      iceAgeLoopsforVideo: "¿Puedes obtener la bellota con un solo bloque `mover hacia adelante`?"
      iceage_click_hello: "¿Puedes ayudar a Sid a llamar a sus amigos cuando hagas clic en él? "
      iceage_click_hello_2018: "¿Puedes ayudar a Sid a llamar a sus amigos cuando hagas clic en él? "
      iceage_free_play: "¡Llegó el momento de crear tu propio juego o historia! "
      iceage_free_play_2018: "¡Llegó el momento de crear tu propio juego o historia! "
      iceage_free_playcourseF_IceAge_11: "¡Llegó el momento de crear tu propio juego o historia! "
      iceage_hello1: Ayuda a Sid a decir "¡Hola!" arrastrando el bloque `decir` y conectándolo al final del evento`Cuando ejecuta`.
      iceage_hello1_2018: Ayuda a Sid a decir "¡Hola!" arrastrando el bloque `decir` y conectándolo al final del evento`Cuando ejecuta`.
      iceage_hello2: Usa el bloque `actor ___ dice` dos veces para que Manny y Sid se saluden.
      iceage_hello2_2018: Usa el bloque `actor ___ dice` dos veces para que Manny y Sid se saluden.
      iceage_move_events: "¡Escribe el código para ayudar a Scrat a llegar hasta las bellotas!"
      iceage_move_events_2018: "¡Escribe el código para ayudar a Scrat a llegar hasta las bellotas!"
      iceage_move_to_actor: Conecta un bloque al evento `cuando actor toca` para reproducir un sonido cuando Diego encuentra a Manny.
      iceage_move_to_actor_2018: Conecta un bloque al evento `cuando actor toca` para reproducir un sonido cuando Diego encuentra a Manny.
      iceage_move_to_flag: "¡Scrat está buscando su bellota! ¿Puedes ayudarlo a moverse los últimos 200 pixeles?"
      iceage_move_to_flag_2018: "¡Scrat está buscando su bellota! ¿Puedes ayudarlo a moverse los últimos 200 pixeles?"
      iceage_repeat: Muévete a la izquierda y a la derecha una y otra vez para ayudar a Granny a hacer algo de ejercicio.
      iceage_repeat_2018: Muévete a la izquierda y a la derecha una y otra vez para ayudar a Granny a hacer algo de ejercicio.
      iceage_sound_and_points: "¿Puedes terminar este programa de tal manera que **reproduzcas un sonido** y **anotes un punto** cuando Sid y Granny choquen? "
      iceage_sound_and_points_2018: "¿Puedes terminar este programa de tal manera que **reproduzcas un sonido** y **anotes un punto** cuando Sid y Granny choquen? "
      iceage_throw_hearts: Usa el comando `actor __ lanza` para que Sid (actor 1) lance corazones a Granny (actor 2) y configura el estado de ánimo de Granny en feliz cuando es tocada por ellos.
      iceage_throw_hearts_2018: Usa el comando `actor __ lanza` para que Sid (actor 1) lance corazones a Granny (actor 2) y configura el estado de ánimo de Granny en feliz cuando es tocada por ellos.
      iceage_warn_ice_age: Cambia la escena a un fondo con hielo y configura la velocidad de Sid (actor 1) en rápido.
      iceage_warn_ice_age_2018: Cambia la escena a un fondo con hielo y configura la velocidad de Sid (actor 1) en rápido.
      k-1 maze 1: "¿Me llevarías al Oeste para agarrar al cerdo? "
      k1stickerfreeplay: El artista vio algo gracioso a la distancia. Dibuja lo que crees que vio.
      level 'grade3_Loops_10: Utiliza un ciclo similar al del último problema, pero ahora utiliza un bloque turn.
      level 'grade3_Loops_11: Utiliza un ciclo para seguir los pasos y recolectar el néctar.
      level 'grade3_Loops_12: Utiliza un ciclo para recolectar néctar de cada flor y hacer miel en cada panal.
      level 'grade3_Loops_2: "¿Podrías hacer la misma tarea más fácilmente con un ciclo?"
      level 'grade3_Loops_3: "¿Podrías utilizar un ciclo para recolectar todo el néctar?"
      level 'grade3_Loops_4: Ahora usa el nuevo bloque repeat para recolectar todo el néctar y hacer toda la miel.
      level 'grade3_Loops_5: Pon estos bloques en un ciclo para recolectar néctar de cada flor.
      level 'grade3_Loops_6: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces? ¡No olvides hacer la miel al final!"
      level 'grade3_Loops_7: 'Cada flor contiene una unidad de néctar. Recolecta néctar de cada una de las flores. '
      level 'grade3_Loops_8: Usa un ciclo para recolectar el néctar y hacer la miel.
      level 'grade3_Loops_9: Recolecta el néctar de cada flor y haz miel en cada panal.
      level grade3_Loops_2: "¿Podrías hacer la misma tarea más fácilmente con un ciclo?"
      loops_forvideo_iceage_ab: "¡Usa los bucles para que Scrat llegue hasta la bellota!"
      loops_forvideo_iceage_cf: "¡Usa los bucles para que Scrat llegue hasta la bellota!"
      playEventsK1: Este juego se llama "Play Lab".  Ve si puedes descifrar que hace cada bloque.
      playEventsK3: "¡Jorge quiere que lo rasquen detrás de las orejas! ¿Puedes hacerlo para que Jorge esté feliz cuando hagas clic?"
      playLabDebugVideo1: Jorge el Perro quiere decir "Hola". ¿Puedes ayudarlo?
      ramp_artist_loops1: |-
        Avanza 60 píxeles para completar este
        puzzle.
      ramp_artist_loops1_2018: |-
        Avanza 60 píxeles para completar este
        puzzle.
      ramp_artist_loops1_2019: |-
        Avanza 60 píxeles para completar este
        puzzle.
      ramp_artist_loops2: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops2_2018: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops2_2019: Avanza cinco veces y crea esta línea de color.
      ramp_artist_loops3: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops3_2018: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops3_2019: Usa un bucle 'repetir' para dibujar cinco guiones de colores.
      ramp_artist_loops4: "¿Qué sucede cuando agregas giros a la derecha de 72 grados luego de todo lo demás dentro de tu loop?"
      ramp_artist_loops4_2018: "¿Qué sucede cuando agregas giros a la derecha de 72 grados luego de todo lo demás dentro de tu loop?"
      ramp_artist_loops6: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops6_2018: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops6_2019: Edita tu bucle para dibujar esta escalera.
      ramp_artist_loops7: "¡Busca un patrón y haz este código más corto usando loops!"
      ramp_artist_loops7_2018: "¡Busca un patrón y haz este código más corto usando loops!"
      ramp_artist_loops7_2019: "¡Busca un patrón y haz este código más corto usando loops!"
      ramp_artist_loops8: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_2018: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_2019: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops8_clone: Busca un patrón y acorta este código usando bucles.
      ramp_artist_loops9: Resuelve este puzzle dibujando un cuadrado.
      ramp_artist_loops9_2018: Resuelve este puzzle dibujando un cuadrado.
      ramp_artist_loops9_2019: Resuelve este puzzle dibujando un cuadrado.
      scrat 16 (copy 1): ¡Bellota! ¡Bellota! ¡Bellota! Utiliza un bloque "si" para llevarme hasta allí con el menor número de bloques.
      scrat 16: ¡Bellota! ¡Bellota! ¡Bellota! Utiliza un bloque "si" para llevarme hasta allí con el menor número de bloques.
      scrat 17 (copy 1): Practiquemos esto una vez más. No es muy diferente, ¡pero ten cuidado con <insert obstacle name for Scrat>!
      scrat 17: Ok, vamos a hacerlo de nuevo para practicar - éste no es muy diferente, ¡pero ten cuidado con la pared!
      scrat 18 (copy 1): El bloque "If-else" verifica una condición y después hace una cosa u otra. Para llevarme a la bellota intenta usar este nuevo bloque.
      scrat 18: El bloque "If-else" verifica una condición y después hace una cosa u otra. Para llevarme a la bellota intenta usar este nuevo bloque.
      scrat 19 (copy 1): Una práctica más del bloque "si-sino", ¿puedes hacerlo bien en tu primer intento?
      scrat 19: Una práctica más del bloque "si-sino", ¿puedes hacerlo bien en tu primer intento?
      scrat 20: "¿Puedes agregar sólo 3 bloques para ayudarme a resolver un laberinto más complejo? Si lo haces correctamente, puedo caminar cualquier camino curvo sin importar su longitud. ¡Date prisa! ¡El hielo se está derritiendo!"
      skratDebugVideo1: Ayuda a Scrat a llegar hasta la bellota.
      subgoal U3 L4 introducing subgoal labels: "Introducir a la tortuga \ny muevela"
      subgoal U3L2 Using Simple Commands: Dibuja un cuadrado de 1x1 arriba y a la izquierda de la posición inicial de la tortuga. Haga clic para ver las instrucciones completas.
      subgoalU3L2_TurtleSquare_right: Dibuja un cuadrado al frente y a la derecha de la ubicación de inicio. (Haz clic para ver las instrucciones completas)
      timeforcs_demo_sl_1: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      timeforcs_demo_sl_2: Cambia el comportamiento dentro del bloque `spring comienza` para hacer que el extraterrestre comience a dar vueltas.
      timeforcs_demo_sl_4: 'Crea un nuevo sprite que parezca un extraterrestre rosado, luego haz que haga un movimiento de danza diferente cuando se haga clic.  '
      timeforcs_demo_sl_5: 'Crea un tercer sprite que parezca un extraterrestre amarillo, y haz que todos tus extraterrestres se pongan en una línea. '
      timeforcs_demo_sl_6: Añade código para cambiar el color de cada extraterrestre cuando se le haga clic.
      timeforcs_demo_sl_7: Usa el bloque `detiene todo` para hacer que cada extraterrestre deje de moverse cuando se le haga clic.
      timeforcs_demo_sl_8: Añade un nuevo sprite que parezca una campana. Haz que todos los extraterrestres empiecen a hacer el mismo movimiento de baile cuando se haga clic en la campana.
      timeforcs_demo_sl_9: "¡Ahora crea tu propia discoteca extraterrestre!"
      timeforcs_demo_sl_predict: "¿Qué crees que ocurrirá al hacer clic en el extraterrestre?"
      u3-old-drawing-view: HACER esto
      valentine_artist_03: "¡Ahora intenta algo por tu cuenta!"
