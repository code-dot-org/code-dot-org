pt-BR:
  data:
    short_instructions:
      2-3 Artist 1 new: Oi, eu sou um artista. Você pode escrever códigos para me fazer desenhar quase qualquer coisa. Use alguns blocos para me fazer desenhar sobre as linhas cinzas na imagem. (Cada linha tem o comprimento de 100 pixels)
      2-3 Artist 11: "Faça uma borda na placa de pare criando um octógono\ncom os lados medindo 100 pixels. \\r\n\\r\n"
      2-3 Artist 12: |-
        Crie um círculo para terminar o globo ocular!\r
        \r
        Se
        o artista virar 1 grau com cada laço, quantas vezes você precisará repetir
        o código para desenhar um círculo? 180? 360? 500?
      2-3 Artist 2 new: "Esta casa tem uma parede inacabada. Cada lado tem\n100 pixels de comprimento, mas a parede inacabada tem apenas 50. Complete a parede. "
      2-3 Artist 2: "Esta casa tem uma parede inacabada. Cada lado tem\n100 pixels de comprimento, mas a parede inacabada tem apenas 50. Complete a parede. "
      2-3 Artist 3.4: "O bloco \"pule\" move o artista sem desenhar.\nDesenhe a linha tracejada usando os blocos \"pule para a frente\" e \"avance\".\nCada linha tem 50 pixels de comprimento."
      2-3 Artist 3: Esse chapéu tem 100 pixels de altura. Desenhe um chapéu que tenha 70 pixels a menos.
      2-3 Artist 3new: "O chapéu vermelho tem 100 pixels de altura. Termine o desenho\nde um chapéu preto que seja 70 pixels menor. \\r\n(Observação: a largura de cada chapéu é\nde 50 pixels)."
      2-3 Artist 4: Ajude-me a completar a casa para o gato.
      2-3 Artist 5: "Substitua esse código por um bloco \"repita vezes\"\npara desenhar a mesma casa usando apenas 3 blocos."
      2-3 Artist 6: 'Essa casa precisa de um telhado! Desenhe o triângulo. Dica: todos os 3 lados têm o mesmo comprimento.'
      2-3 Artist 7: "Termine de desenhar o último conjunto de janelas da escola\npara que todos na sala de aula possam ver a parte de fora. Os lados de cada janela quadrada\nmedem 25 pixels de comprimento. "
      2-3 Artist 8: "Complete os quartos para cada animal dividindo\no retângulo em 2 quadrados de mesmo tamanho. O retângulo tem 200 pixels de largura\ne 100 pixels de altura. Há várias maneiras diferentes de resolver este desafio, então,\ndivirta-se!"
      2-3 Artist 9 NEW: Termine esta pipa
      2-3 Artist 9 REPLACEMENT: Conclua o desenho destas escadas!
      2-3 Artist 9: Termine esta pipa
      2-3 Artist Assessment 1: "Avaliação: termine de desenhar o último dente.\nEle tem 25 pixels de largura e 25 pixels de altura."
      2-3 Artist Debugging 1: "Este chapéu precisa ter apenas 50 pixels de largura. Você\nconsegue arrumá-lo?"
      2-3 Artist Debugging 10: "O controlador de direção do controle do meu jogo\né muito estreito. \\r\n\\r\nVocê consegur aumentar a largura dele em 10 pixels?\\r\n\\r\nExecute\no código primeiro para ver o que está errado."
      2-3 Artist Debugging 11: |-
        Meu floco de neve está se desfazendo!\r
        \r
        Você
        consegue descobrir o que há de errado?
      2-3 Artist Debugging 12: Eu devo adicionar uma onda do mar nessa cena. Você pode me ajudar?
      2-3 Artist Debugging 2: "O código dos bigodes do gato está errado.\n\\r\n\\r\nCorrija o código para desenhar os bigodes, todos com o mesmo tamanho."
      2-3 Artist Debugging 3: "Meu barco tem um buraco! \\r\n\\r\nO que você\nprecisa corrigir para unir as extremidades?"
      2-3 Artist Debugging 4: "Qual é a imagem que estamos tentando\ndesenhar? Termine de conectar os pontos usando as linhas e ângulos apropriados."
      2-3 Artist Debugging 5: "O código para a perna e\npara o pé está errado. \\r\n\\r\nVocê consegue corrigi-lo?"
      2-3 Artist Debugging 6: |-
        Parece que estou sentado em uma cadeira
        sem uma perna!\r
        \r
        Edite o código para desenhar a última perna.
      2-3 Artist Debugging 7: |-
        Parece que o C no código está desenhado ao contrário!\r
        \r
        Você
        consegue fazê-lo parecer com um C de novo?
      2-3 Artist Debugging 8: |-
        Meu professor diz que eu devo terminar o que
        comecei!\r
        \r
        Ajude-me a terminar meu cata-vento. Você consegue descobrir o que há de errado?
      2-3 Artist Debugging 9: |-
        Algo está estranho!\r
        \r
        O código deste
        caule está errado. Você consegue descobrir como fazer o artista traçar o
        caule da maneira certa?
      2-3 Artist Debugging Assessment 1: "Avaliação: Por que este quadrado\nacaba ficando com 75 pixels a menos em cada lado?\\r\n\\r\nOnde está o erro\ndo código?"
      2-3 Artist Free Play: Atividade livre! Desenhe o que você quiser.
      2-3 Artist Functions 1 a: "\"Mim artista zumbi. Mim ama desenhar!\" \\r\n\\r\nAjude\no zumbi a desenhar os óculos quadrados. \\r\n\\r\nA haste entre as lentes é\n25 pixels menor que a largura dos quadrados, que é igual a 100 pixels."
      2-3 Artist Functions 1: "\"Mim artista zumbi. Mim ama desenhar!\" \\r\n\\r\nAjude\no zumbi a desenhar os óculos quadrados. \\r\n\\r\nA haste entre as lentes é\n25 pixels menor que a largura dos quadrados, que é igual a 100 pixels."
      2-3 Artist Functions 10: "Atividade livre: Aqui temos duas funções, uma\npara desenhar uma engrenagem grande e outra para desenhar uma engrenagem pequena. Use-as para desenhar o interior\nde uma máquina!"
      2-3 Artist Functions 11 a: "Renomeamos a função \"desenhe um quadrado\"\ncomo \"desenhe um hexágono\", mas ela ainda desenha apenas quadrados! Você consegue mudar a\nfunção \"desenhe um hexágono\" para desenhar um hexágono com lados de 50 pixels? \\r\n\\r\nDesenhe\na imagem usando a nova função!"
      2-3 Artist Functions 11.5 a: "Aqui está a mesma função\n\"Desenhe um hexágono\". \\r\n\\r\nO que acontece se você repetir o programa principal 6 vezes, virando\n60 graus a cada repetição?"
      2-3 Artist Functions 11.5: "Aqui está a mesma função\n\"Desenhe um hexágono\". \\r\n\\r\nO que acontece se você repetir o programa principal 6 vezes, virando\n60 graus a cada repetição?"
      2-3 Artist Functions 11: "Renomeamos a função \"desenhe um quadrado\"\ncomo \"desenhe um hexágono\", mas ela ainda desenha apenas quadrados! Você consegue mudar a\nfunção \"desenhe um hexágono\" para desenhar um hexágono com lados de 50 pixels? \\r\n\\r\nDesenhe\na imagem usando a nova função!"
      2-3 Artist Functions 12 Mike: "Funções são ótimas para desenhar\ncoisas complexas várias vezes. \\r\n\\r\nVocê consegue usar a função \"desenhe uma flor\"\npara preencher o resto do canteiro de plantas?\\r\nAs plantas estão todas separadas por uma distância de 100 pixels."
      2-3 Artist Functions 12 a: "Funções são ótimas para desenhar\ncoisas complexas várias vezes. \\r\n\\r\nVocê consegue usar a função \"desenhe uma flor\"\npara preencher o resto do canteiro de plantas?\\r\nAs plantas estão todas separadas por uma distância de 100 pixels."
      2-3 Artist Functions 12: "Funções são ótimas para desenhar\ncoisas complexas várias vezes. \\r\n\\r\nVocê consegue usar a função \"desenhe uma flor\"\npara preencher o resto do canteiro de plantas?\\r\nAs plantas estão todas separadas por uma distância de 100 pixels."
      2-3 Artist Functions 13: "Fornecemos quatro funções para você.\nUse-as da forma que quiser dentro de um ou mais laços para criar imagens que\nvocê pode compartilhar com seus amigos. Pressione \"Executar\" para ver um exemplo."
      2-3 Artist Functions 2 a: 'Use o pequeno bloco verde `desenhar um quadrado` para chamar esta nova função e criar os óculos. '
      2-3 Artist Functions 2: "As funções permitem que você defina novos blocos! \\r\n\\r\nMovemos\nos blocos necessários para desenhar um quadrado para dentro de uma função chamada \"desenhe\num quadrado\". Desta vez, use a função \"desenhe um quadrado\" para criar os óculos.\n\\r\n\\r\nOs quadrados estão separados por uma distância de 75 pixels."
      2-3 Artist Functions 3 a: "Edite a função \"desenhar um quadrado\" para desenhar quadros que são 115px em cada lado. \n\nOs quadrados estão a 45 pixels de distância."
      2-3 Artist Functions 3: "Edite a função para desenhar um quadrado com\nlados de 115 pixels, para desenhar os óculos maiores. \\r\n\\r\nAgora, os quadrados\nestão separados por 45 pixels."
      2-3 Artist Functions 4 a: Agora coloque a função dentro de um laço e adicione um turno extra para desenhar esses três quadrados.
      2-3 Artist Functions 4: "Agora coloque a função dentro de um laço\npara desenhar esses três quadrados."
      2-3 Artist Functions 7: "Use a função \"desenhe uma casa\" para desenhar\nduas casas usando dois parâmetros diferentes. (Dica: a primeira casa tem 100 pixels)."
      2-3 Artist Functions 9: "Atividade livre: Esta é uma função para flocos de neve.\nExperimente usá-la para criar uma cena de inverno! Essa é uma atividade livre, então\nnão há desafios para resolver. Divirta-se!"
      2-3 Artist Loops 1: "Você consegue fazer um hexágono com lados de\n100 pixels de comprimento para terminar a célula? Lembre-se, isso significa que você só vai\nprecisar virar 60 graus!"
      2-3 Artist Loops 10: "O que acontece com o design quando fazemos nossa\netapa final com metade do comprimento?"
      2-3 Artist Loops 11: "Agora, vamos colocar *outro* laço em torno de toda\na criação! Não se esqueça de adicionar um ângulo ao final do laço externo."
      2-3 Artist Loops 2: "Agora, use um bloco \"repita\" para transformar a célula em uma\nconcha."
      2-3 Artist Loops 4: "Quer ver o que acontece quando repetimos essa\nforma várias vezes usando um laço?"
      2-3 Artist Loops 5: "Agora, vamos fazer uma pequena alteração no laço\ne ver como nossas imagens ficam diferentes."
      2-3 Artist Loops 6: "Adicione mais um movimento e outra ação de virar dentro\ndo laço e veja como seu design muda."
      2-3 Artist Loops 7: "Podemos usar laços para criar todos os tipos de polígonos. Você \nconsegue criar um losango dentro desse hexágono?"
      2-3 Artist Loops 8: Vamos colocar ambos os elementos dentro de um laço.
      2-3 Artist Loops 9: |-
        Vamos repetir os mesmos elementos, mas 
        agora vamos adicionar alguma distância entre eles.\r
        Use o mesmo código usado 
        anteriormente, mas adicione um passo à frente no final do laço externo.
      2-3 Artist Loops New 1: "Vamos desenhar a cabeça do robô! Você pode\nfazer um quadrado com lados de 100 pixels?"
      2-3 Artist Loops New 10: "Agora vamos conectar um monte de \"V\"\nem um laço."
      2-3 Artist Loops New 11: "Reconstrua o código do último desafio,\nmas, dessa vez, adicione uma ação de virar à esquerda em 30 graus dentro do laço. Agora repita\na ação 24 vezes, em vez de 8."
      2-3 Artist Loops New 12: "Desenhe um diamante com lados de 100 pixels.\n"
      2-3 Artist Loops New 13: "Você vai conhecer alguns códigos\n(em cinza) para fazer um diamante. \\r\n\\r\nRepita o código cinza para criar um padrão\ndivertido!"
      2-3 Artist Loops New 14: "Brinque um pouco com o código do diamante\ne veja que outros padrões você consegue fazer. Tente mudar quantos graus você\nvira e o número de repetições."
      2-3 Artist Loops New 15: Agora desenhe o que você quiser!
      2-3 Artist Loops New 2: |-
        Aqui temos o mesmo desafio que acabamos de resolver,
        mas só podemos usar os blocos "avance" e "vire"
        desta vez.\r
        \r
        Você pode usar um bloco "repita" para resolver este desafio?
      2-3 Artist Loops New 9: "Desenhe um V simples (com ambos os lados com\n50 pixels) para completar a seta."
      2-3 Artist Match Hex Pic: 'Correspondência: ajude a terminar o hexágono.'
      2-3 Artist Match Rho Pic: 'Correspondência: termine o código que falta.'
      2-3 Artist Match Sq Pic: 'Correspondência: complete o código que falta'
      2-3 Artist Match Tri pic: 'Correspondência: preencha o código que falta.'
      2-3 Artist Nested Loops 1: "Coloque um bloco \"repita\" ao redor de toda\nesta pilha de código para desenhar o padrão."
      2-3 Artist Nested Loops 10: "Repita este código 12 vezes para completar\no padrão."
      2-3 Artist Nested Loops 11: "Repita este código 4 vezes para completar\no padrão, vire 90 graus após cada círculo."
      2-3 Artist Nested Loops 12: "Repita este código 12 vezes para completar\nas espirais."
      2-3 Artist Nested Loops 2: "Agora, repita o triângulo 6 vezes. \\r\n\\r\nDepois\nde cada triângulo, você precisa virar 60 graus antes de desenhar o próximo."
      2-3 Artist Nested Loops 3: "Você vai precisar repetir o triângulo 12\nvezes para desenhar este padrão. \\r\n\\r\nDivida o número de graus em um círculo\n(360) pelo número de formas que você está desenhando (12) para descobrir quanto virar\ndepois de cada forma."
      2-3 Artist Nested Loops 4: "Repita este diamante 12 vezes para desenhar\numa flor!\\r\n\\r\nObservação: vamos usar o mesmo ângulo para repetir 12 diamantes,\ncomo fizemos com os 12 triângulos.  \\r\nQuanto você precisa virar depois de cada forma?"
      2-3 Artist Nested Loops 5: "Preencha as janelas deste edifício com\num laço aninhado. \\r\n\\r\nAs janelas têm 20 pixels de comprimento e são separadas por 20 pixels."
      2-3 Artist Nested Loops 6: |-
        Esse dinossauro tem 8 espinhos ao longo
        de sua cauda.\r
        Cada espinho tem 30 pixels de comprimento. Repita o triângulo 8 vezes, mas
        lembre-se de saltar para a frente depois de cada um!
      2-3 Artist Nested Loops 7: "Repita esse triângulo 10 vezes para desenhar\no Sol. \\r\n\\r\nVocê vai precisar mover e virar depois de cada triângulo. \\r\n\\r\nVocê\npode descobrir quanto virar dividindo o número de graus em um círculo\npelo número de triângulos que o compõem."
      2-3 Artist Nested Loops 8: "Agora vamos adicionar um pouco de grama à imagem.\n\\r\n\\r\nCada tufo de grama é separado por 50 pixels."
      2-3 Artist Nested Loops 9: "Vamos terminar essa imagem adicionando\numa flor. \\r\n\\r\nRepita o diamante 12 vezes para desenhar a flor."
      2-3 Artist Nested Loops Free Play: "Atividade livre. Desenhe algo legal\ncom laços aninhados."
      2-3 Bee Conditionals 1: "Olá! Eu sou uma abelha. Ajude-me a coletar o néctar\nda flor."
      2-3 Bee Conditionals 10: "As flores roxas podem ter 1 ou 0 néctar.\nTenha cuidado para não coletar néctar de uma flor roxa se ela não\ntiver néctar.\\r\n"
      2-3 Bee Conditionals 11: "O que será que tem por aí!\\r\n\\r\nAjude-me\na voar pelo jardim e coletar o néctar apenas das flores que têm\nnéctar para oferecer. "
      2-3 Bee Conditionals 12: "Ajude-me a encontrar todo o néctar usando\no menor número possível de blocos!"
      2-3 Bee Conditionals 13: |-
        Há muita coisa acontecendo por aqui!\r
        \r
        Use
        o que você aprendeu para coletar todo o néctar e, então, produza o mel.
      2-3 Bee Conditionals 14: |-
        Vamos unir todas as informações!\r
        \r
        Use
        o que você aprendeu para me ajudar a coletar néctar apenas das flores que têm
        néctar para oferecer, usando o menor número possível de blocos. Não se esqueça de produzir o mel para terminar.
      2-3 Bee Conditionals 15: "Este padrão de degrau deve ser familiar.  \\r\n\\r\nVocê\nconsegue coletar néctar apenas das flores que têm néctar para oferecer, usando o menor número de\nblocos possível?"
      2-3 Bee Conditionals 2: "Sou uma abelha faminta! \\r\nAjude-me a coletar\ntodo o néctar das flores usando o menor número possível de blocos."
      2-3 Bee Conditionals 3: "Olhe só todo esse néctar!\\r\n\\r\nAjude-me\na coletar todo o néctar e produzir mel usando o menor número possível de blocos.  "
      2-3 Bee Conditionals 4: "Ajude-me a coletar todo o néctar das\nflores e a produzir todo o mel."
      2-3 Bee Conditionals 5: "Tenha cuidado para não coletar néctar das\nflores roxas que não o têm. \\r\nPrimeiro, veja se o néctar\né igual a 1 usando o bloco \"se néctar\"."
      2-3 Bee Conditionals 6: "Verifique essa flor com um bloco \"se\"\npara ver se há algum néctar disponível."
      2-3 Bee Conditionals 7: "Colete o néctar de cada flor, apenas se\nela tiver néctar disponível."
      2-3 Bee Conditionals 8: "Este campo tem flores vermelhas e roxas.\nAs flores vermelhas têm uma quantidade de néctar conhecida, mas o néctar das flores roxas é desconhecido.\nColete todo o néctar."
      2-3 Bee Conditionals 9: Colete todo o néctar de cada flor.
      2-3 Bee Conditionals Assessment 1: "Avaliação: Colete todo o\nnéctar. Tenha cuidado para não coletar néctar das flores roxas que\nnão o tiverem."
      2-3 Bee Debugging 1: "Esses blocos estão me incomodando. Corrija o(s)\nerro(s) para coletar todo o néctar."
      2-3 Bee Debugging 10: "Este desafio está me deixando lelé! \\r\nCorrija\no(s) erro(s) para coletar todo o néctar e produzir todo o mel."
      2-3 Bee Debugging 2: |-
        Você consegue encontrar o problema aqui?\r
        Corrija o(s)
        erro(s) para coletar todo o néctar.
      2-3 Bee Debugging 3: |-
        Nossa, que ferroada!\r
        \r
        Corrija o(s) erro(s)
        para coletar todo o néctar.
      2-3 Bee Debugging 4: "Esses blocos estão me incomodando. Corrija o(s)\nerro(s) para coletar todo o néctar e produzir todo o mel."
      2-3 Bee Debugging 5: "Essa flor parece deliciosa! \\r\n\\r\nCorrija o(s)\nerro(s) para coletar todo o néctar. Agora você pode usar os botões \"Executar\" e \"Passo\"."
      2-3 Bee Debugging 6: |-
        Que doce desafio!\r
        \r
        Corrija o(s) erro(s)
        para coletar todo o néctar.
      2-3 Bee Debugging 7: "Corrija o(s) erro(s) para coletar todo o néctar\ne produzir todo o mel."
      2-3 Bee Debugging 8: |-
        Quantas flores lindas!\r
        \r
        Corrija o(s)
        erro(s) para coletar todo o néctar.
      2-3 Bee Debugging 9: |-
        Uau, que ferroada!\r
        \r
        Você
        terá que corrigir algumas coisas neste programa para coletar todo o
        néctar e produzir todo o mel.
      2-3 Bee Debugging Assessment 1: |-
        Avaliação:  Agora é hora de
        mostrar o que você sabe!\r
        \r
        Corrija o(s) erro(s) para coletar todo o néctar e
        produzir todo o mel.
      2-3 Bee Functions 1: "Funções são blocos de código que realizam\numa tarefa. Use a função \"obtenha 2 néctares\" para coletar o néctar de cada\nflor."
      2-3 Bee Functions 10: "As flores roxas variam entre 1 ou\n0 néctar a cada vez que você executa o desafio.   \\r\n\\r\nCrie uma função que coleta\nnéctar apenas das flores que o têm."
      2-3 Bee Functions 2: "As funções são blocos de código que realizam\numa tarefa. \\r\n\\r\nUse a função \"obtenha 5\" para obter 5 néctares por vez."
      2-3 Bee Functions 3: Colete todo o néctar de cada flor.
      2-3 Bee Functions 4: "A função \"mova e obtenha néctar\" vira\na abelha, coleta néctar, e então retorna a abelha para onde ela começou. \\r\n\\r\nUse\na função para coletar todo o néctar."
      2-3 Bee Functions 5: "Agora há mais néctar nas flores.\nEdite a função dada para que ela colete 4 néctares e use-a para coletar\ntodo o néctar das flores."
      2-3 Bee Functions 6: "Agora, use a mesma função para coletar néctar\ndas três flores."
      2-3 Bee Functions 7: "Agora as flores estão mais longe. Edite a\nfunção dada e use-a para coletar todo o néctar das flores."
      2-3 Bee Functions 8: "Crie sua própria função que coleta 7 néctares,\navança e produz 7 unidades de mel. Use a função para coletar néctar em todas as\nflores e produzir mel em todas as colmeias."
      2-3 Bee Functions 9: "Crie sua própria função que vai por um\ncaminho, obtém néctar, produz mel, e então retorna a abelha para o início do\ncaminho."
      2-3 Bee Functions Assessment 1: "Avaliação: Use a função dada\npara coletar o néctar de cada flor."
      2-3 Bee Functions Assessment 2: "Avaliação: Crie uma função\npara virar, avançar e produzir 3 unidades de mel, então retorne a abelha para o local onde ela começou\ne vire-a de volta."
      2-3 Bee Loops 1: |-
        Essas flores parecem deliciosas!\r
        \r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      2-3 Bee Loops 10: "Você pode usar um laço enquanto dentro de outros dois\nlaços para coletar todo o néctar?"
      2-3 Bee Loops 11: "Use laços enquanto para coletar todo o néctar\ndas flores desse campo."
      2-3 Bee Loops 12: "Use laços enquanto para coletar todo o néctar\ndas flores desse campo."
      2-3 Bee Loops 13: "Avaliação: Colete todo o néctar usando\no menor número possível de blocos."
      2-3 Bee Loops 1A: "Olá, eu sou uma abelha. Você pode me ajudar a coletar\no néctar dessas flores? "
      2-3 Bee Loops 2: "Colete todo o néctar e produza todo o mel\nusando o menor número possível de blocos."
      2-3 Bee Loops 2A: Desta vez, use um laço para juntar todo o néctar.
      2-3 Bee Loops 3: "Colete o néctar de cada flor e produza mel\nem cada colmeia usando o menor número possível de blocos."
      2-3 Bee Loops 3A: Use um laço "repita" para coletar todo o néctar.
      2-3 Bee Loops 3B: "Agora, use o bloco \"repita\" para coletar todo o\nnéctar e produzir todo o mel."
      2-3 Bee Loops 4: |-
        Que abelha trabalhadora!\r
        \r
        Ajude a abelha a coletar todo o
        néctar e produzir todo o mel com o menor número de blocos possível.
      2-3 Bee Loops 4A: "Quantas vezes os laços ajudaram você neste desafio?  \\r\n\\r\nOs laços\nsão seus amigos! Use alguns deles para completar este desafio com o menor número\nde blocos possível."
      2-3 Bee Loops 5: "O formato deste caminho é diferente dos\ndemais. \\r\n\\r\nVocê consegue coletar todo o néctar usando o menor número possível de blocos?"
      2-3 Bee Loops 6: "Você consegue encontrar a maneira mais rápida para a abelha\ncoletar todo o néctar e produzir todo o mel?"
      2-3 Bee Loops 7: "Que lindo campo florido!  Ajude a\nabelha a visitar cada flor. Você consegue achar uma maneira de fazer isso com menos de 7 blocos?"
      2-3 Bee Loops 8: "Essas flores roxas têm uma quantidade diferente de\nnéctar a cada vez que você executa o desafio. \\r\n\\r\nUse o laço \"enquanto houver néctar\" para\ncoletar todo o néctar. \\r\n\\r\nEsse laço será executado enquanto a condição\nfor verdadeira, neste caso, enquanto \"néctar > 0\"."
      2-3 Bee Loops 9: "O laço enquanto pode realizar a mesma ação que\num comando se em um laço. Adicione um laço enquanto a esse código para realizar a mesma\ntarefa."
      2-3 Bee Loops Assessment 1: "Avaliação: Use um laço \"enquanto\" para\ncoletar todo o néctar dessas flores."
      2-3 Maze 1: "Você pode me ajudar a pegar o porco malvado? Junte alguns\nblocos \"avance\" abaixo do bloco \"quando executar\" e clique em \"Executar\". "
      2-3 Maze 10: Leve-me até a maldade verde! (Cuidado com a dinamite)
      2-3 Maze 11: "Estou com fome, leve-me até a flor! Quantas vezes\nvocê precisa repetir um bloco?"
      2-3 Maze 12 (copy 1): "Você pode substituir a resposta anterior por apenas dois\nblocos? (Dica: crie um laço usando um bloco \"repita vezes\")"
      2-3 Maze 12 (copy 2): "Você pode substituir a resposta anterior por apenas dois\nblocos? (Dica: crie um laço usando um bloco \"repita vezes\")"
      2-3 Maze 12 (old): "Leve-me até o porco, agora com o bloco repita\nvezes!"
      2-3 Maze 12 - One Move Block: "Pegue o porco! Mas, desta vez, você\nsó pode usar um bloco \"avance\". Você está vendo mais algum bloco que poderia\najudar?"
      2-3 Maze 12: "Você consegue pegar o porco criando um laço que usa\napenas um bloco \"avance\" dentro de um bloco \"repita\"?"
      2-3 Maze 13 (old): "Leve-me até o porco, agora com o bloco repita\naté!"
      2-3 Maze 13: "Leve-me até o porco! Você só pode usar um bloco\n\"avance\" desta vez"
      2-3 Maze 14 (old): Leve-me até o porco com o bloco repita até!
      2-3 Maze 14: "Leve-me até o girassol! (Onde está o bloco \"repita\nvezes\" quando eu preciso dele?)"
      2-3 Maze 15 (old): Leve-me até o porco com o bloco repita até!
      2-3 Maze 15: "Neste desafio, dois laços \"repita\" ajudarão você\na pegar o porco com o menor número possível de blocos!"
      2-3 Maze 16 (old): Leve-me até o porco com o bloco repita até!
      2-3 Maze 16 before: "Você consegue descobrir a maneira mais rápida de me\nlevar até o porco?"
      2-3 Maze 16: "Os laços funcionam inclusive com mais de um bloco dentro! Você\nconsegue repetir essa sequência para levar o zumbi até o girassol?"
      2-3 Maze 2: Esse porco está me irritando. Ajude-me a chegar até ele!
      2-3 Maze 3: "Trace o caminho e leve-me até o porco bobalhão. Desvie\ndo TNT, ou penas vão voar!"
      2-3 Maze 4: Leve-me até a maldade verde! (Cuidado com a dinamite)
      2-3 Maze 5: Leve-me até a maldade verde! (Cuidado com a dinamite)
      2-3 Maze 6: "Fique calmo e ajude-me a chegar até o porco malvado. Senão\neu vou ficar braco!"
      2-3 Maze 7: Leve-me até a maldade verde! (Cuidado com a dinamite)
      2-3 Maze 8: Leve-me até o porco!
      2-3 Maze 9: Leve-me até a maldade verde! (Cuidado com a dinamite)
      2-3 Maze Loops 1: Você pode me levar até o porco usando 5 blocos?
      2-3 Maze Loops 17: Use o que você aprendeu para me levar até o girassol!
      2-3 Maze Loops 18: "Leve-me até o girassol usando o menor número de blocos\npossível! \\r\n\\r\nUse um laço \"repita\" dentro de outro para diminuir\na quantidade de códigos que você precisa."
      2-3 Maze Loops 19: "Vamos subir o nível! \\r\nUse\nlaços para me levar até o girassol com o menor número de laços possível."
      2-3 Maze Loops 20: "Você pode resolver esse desafio usando o menor número\npossível de blocos?"
      2-3 Maze Loops 21: "Leve-me até o girassol usando o menor número possível\nde blocos!"
      2-3 Maze Loops Assessment 1: "Avaliação: Leve-me até o girassol\nusando apenas 5 blocos! "
      2-3 Maze sq1: Esse porco está me irritando. Ajude-me a encontrá-lo!
      2-3 Maze sq10: Leve-me até o porco! Que blocos foram repetidos?
      2-3 Maze sq10v2: Leve-me até o porco! Que blocos foram repetidos?
      2-3 Maze sq2: "Trace o caminho e leve-me até o porco bobalhão. Desvie\ndo TNT, ou penas vão voar!"
      2-3 Maze sq3: Leve-me até a maldade verde! (Cuidado com a dinamite)
      2-3 Maze sq4: "Fique calmo e ajude-me a chegar até o porco malvado. Senão\neu vou ficar braco!"
      2-3 Maze sq5: "Leve-me até o porco! Quantas vezes você precisa\nrepetir um bloco?"
      2-3 Maze sq6: "Você pode substituir a resposta anterior por apenas dois\nblocos? (Dica: crie um laço usando um bloco \"repita vezes\")"
      2-3 Maze sq7: Leve-me até o intruso verde usando apenas três blocos.
      2-3 Maze sq8: "Leve-me até o porco! (Onde está o bloco \"repita vezes\"\nquando eu preciso dele?)"
      2-3 Maze sq9: Crie laços para chegar até o porco usando menos blocos.
      2-3 maze sq11: Leve-me até o porco! Que blocos foram repetidos?
      2-3 maze sq12: "Você pode substituir a resposta anterior por um laço\nusando um bloco \"repita vezes\"?"
      2-3 maze sq13: "Querida pessoa. Mim zumbi. Deve... chegar... girassol.\nCrie um laço com o bloco \"repita até\"."
      2-3 maze sq14: Você consegue chegar até o girassol usando apenas quatro blocos?
      2-3 maze sq15: Você pode chegar até o girassol usando apenas blocos?
      2-3 maze sq16: "Ok, isso é parecido, mas um pouco diferente. Você pode\nfazer isso em apenas cinco blocos?"
      2-3: As flores roxas podem ter 1 ou 0 néctar. Tenha cuidado para não coletar néctar de uma flor roxa se ela não tiver néctar.
      2-3level1: Ajude o pássaro a pegar o porco safado movendo-o para frente
      20hr_farmer_stage9_1: Olá, eu sou uma fazendeira! Preciso de sua ajuda para aplanar o terreno da minha fazenda, para prepará-lo para o plantio. Leve-me até o monte de terra e use o bloco "remova" para removê-lo.
      20hr_farmer_stage9_10: Estou trabalhando até tarde, então está escuro, e eu não sei o tamanho desses montes de terra. Agora, eu não tenho todas as opções que eu costumava ter com o bloco "enquanto". Mova-me ao longo do campo e, se houver um monte de terra, remova-o
      20hr_farmer_stage9_11: 'Ainda está escuro lá fora. Mova-me ao longo do terreno. Se houver um monte de terra, remova-o, e se houver um buraco, preencha-o. Dica: use o menu de opções no bloco "se".'
      20hr_farmer_stage9_2: Em seguida, leve-me para perto do buraco e preencha-o com DUAS pás cheias de terra, usando o bloco "preencha".
      20hr_farmer_stage9_3: Leve-me até o monte de terra e me diga quantas pás devo remover, usando o menor número de blocos possível.
      20hr_farmer_stage9_4: 'Você pode me ajudar a remover todos os quatro montes de terra? Dica: se puder, use um bloco de repetição.'
      20hr_farmer_stage9_5: 'Ajude-me a encher todos esses buracos com 5 pás de terra. Dica: você pode usar um bloco "repita" dentro de um bloco "enquanto".'
      20hr_farmer_stage9_6: Remova todas as pilhas de terra usando o menor número de blocos possível. As novas opções de menu no bloco "enquanto" mostram se eu estou em uma pilha de terra ou em um buraco.
      20hr_farmer_stage9_7: Uau, eu encontrei um buraco muito fundo! Não sei quantas pás de terra vamos precisar. Você pode escrever um programa para preenchê-lo completamente?
      20hr_farmer_stage9_8: Ajude-me a preencher o buraco no final do terreno, usando o menor número de blocos possível.
      20hr_farmer_stage9_9: 'Faça com que eu remova todos esses montes de terra. Tente usar o menor número de blocos possível. Dica: tente usar um bloco "enquanto".'
      20hr_maze_stage2_1: Você pode me ajudar a pegar o porco malvado? Junte alguns blocos "avance" e clique em "Executar" para me ajudar a chegar lá.
      20hr_maze_stage2_10: Ok, use o novo bloco "repita até" - ele vai se repetir até que eu chegue naquele porco irritante.
      20hr_maze_stage2_11: Ok, pratique mais uma vez - você pode resolver isso usando apenas 4 blocos?
      20hr_maze_stage2_12: Pessoa querida. Mim zumbi. Mim com fome. Devo... chegar... no girassol... Você pode me ajudar a chegar lá com apenas 5 blocos?
      20hr_maze_stage2_13: Ok, é parecido, mas um pouco diferente. Você pode usar apenas 5 blocos?
      20hr_maze_stage2_14: 'Use o novo bloco "se" para me deixar decidir quando virar. Dica: você só precisa de mais um bloco, mas veja como o configuramos, então você mesmo poderá fazê-lo na próxima vez.'
      20hr_maze_stage2_15: Ok, esse desafio é como o último, mas você precisa se lembrar de como você usou o bloco "se" e o bloco "repita" juntos.
      20hr_maze_stage2_16: Mim querer girassol! Use um bloco "se" para que eu chegue lá com o menor número de blocos possível.
      20hr_maze_stage2_17: Ok, vamos praticar mais uma vez. Essa parte não é muito diferente, mas fique de olho nos comilões!
      20hr_maze_stage2_18: O bloco "se-senão" verifica uma condição e, em seguida, faz uma coisa OU outra. Para me levar ao girassol, tente usar esse novo bloco.
      20hr_maze_stage2_19: "Vamos praticar o uso do bloco \"se-senão\" mais uma vez. Você consegue\nacertar na primeira tentativa?"
      20hr_maze_stage2_2: Esse porco está me deixando nervoso. Me ajude a encontrá-lo!
      20hr_maze_stage2_20: Você consegue usar apenas 3 blocos para me ajudar a percorrer um labirinto mais complexo? Se fizer isso direito, eu posso percorrer qualquer caminho cheio de curvas, não importa o comprimento.
      20hr_maze_stage2_3: Desenhe o caminho e leve-me até aquele porco bobalhão. Não passe pelas dinamites, senão penas vão voar!
      20hr_maze_stage2_4: Leve-me até a maldade verde! (Cuidado com a dinamite)
      20hr_maze_stage2_5: Fique calmo e ajude-me a encontrar o porco mau. Senão eu vou ficar zangado!
      20hr_maze_stage2_6: Há uma maneira de chegar ao porco bobalhão usando apenas 2 blocos. Você consegue descobrir como?
      20hr_maze_stage2_7: Tente me levar até o intruso verde usando apenas três blocos.
      20hr_maze_stage2_8: Ajude-me a banir esse porquinho mau usando o menor número de blocos possível. Tente usar mais de um bloco "repita".
      20hr_maze_stage2_9: 'Quando um bloco estiver cinza, significa que você não pode excluí-lo. Resolva esse desafio usando o bloco "repita" que faz 3 repetições. Tente colocar esses 3 blocos dentro do bloco "repita" em cinza: avance, avance, vire.'
      4-5 Artist 1: "Ajude-me a terminar de desenhar minha caixa. (Cada linha\ntem 300 pixels de comprimento) "
      4-5 Artist 10: "Pressione \"Executar\" para testar o código. Em seguida, repita o código\no número suficiente de vezes para completar o desenho. As cores serão diferentes toda vez."
      4-5 Artist 11: "Complete as retas verdes. As retas têm 300 pixels\nde comprimento e são separadas por 15 pixels."
      4-5 Artist 2: "Repita esse código usando o bloco \"repita\" para completar\no quadrado."
      4-5 Artist 3.5: "Tente descobrir o que acontece se você executar esse\ncódigo (ou pressione \"Executar\" para testar o código). Em seguida, repita o código o número suficiente de vezes\npara completar o desenho!"
      4-5 Artist 3: "Esse canteiro de flores retangular tem um perímetro de 600.\nO lado comprido tem 200 de comprimento. Desenhe o retângulo usando o menor número possível\nde blocos."
      4-5 Artist 4: "Quantos graus há em um círculo? Repita os blocos\npara criar um círculo de cores."
      4-5 Artist 5: "O que podemos usar para substituir \"???\" para garantir que\no zumbi complete este desenho usando o laço dado?"
      4-5 Artist 6: "Esse triângulo equilátero tem ângulos de 60, 60\ne 60 graus. Cada lado tem 200 pixels. Complete o desenho."
      4-5 Artist 7: "Este triângulo retângulo tem ângulos de 30, 60 e 90\ngraus. O comprimento do lado inclinado (comprimento da hipotenusa) é de 200 pixels.\nComplete o desenho."
      4-5 Artist 8: "A linha do meio-campo em um campo de futebol é perpendicular\nàs linhas laterais.  \\r\nEste retângulo tem um perímetro de 800 pixels no total,\ne 240 pixels de comprimento. Qual é sua altura?  \\r\n\\r\nDesenhe as bordas e a\nlinha do meio-campo."
      4-5 Artist 9: "Desenhe a metade da direita desta imagem de forma que o desenho\nseja simétrico. Os triângulos são equiláteros e têm lados de 50 pixels\nde comprimento."
      4-5 Artist Assessment 1: "Avaliação: Use um laço para desenhar o triângulo\nequilátero. Cada lado tem 300 pixels."
      4-5 Artist For Loops 1: "Coloque os números de 1 a 10 nos\nblocos de largura e execute o código."
      4-5 Artist For Loops 11: "Complete o bloco \"para\" para que ele\nconte 0, 20, 40, 60, 80... 200."
      4-5 Artist For Loops 12: "O que acontece se você inverter os números que estão em \"de\"\ne \"até\"? Complete o bloco \"para\" de forma que ele conte 200, 180,\n160, 140, 120...0. "
      4-5 Artist For Loops 13: "Esse design foi iniciado sem um laço \"para\"\ne está usando muitos blocos! Use um bloco \"para\" e complete a espiral. Dica:\na última linha tem 250 pixels."
      4-5 Artist For Loops 14: "Alguém começou o código, mas então percebeu que\ndeve haver uma forma mais rápida! Use um bloco \"para\" para substituir os blocos e\ncomplete a espiral triangular. (Dica: a última linha tem 300 pixels)."
      4-5 Artist For Loops 15: "Alguém começou o código, mas então percebeu que\ndeve haver uma forma mais rápida! Use um bloco \"para\" para substituir os blocos e\ncomplete a espiral hexagonal. (Dica: a última linha tem 200 pixels)."
      4-5 Artist For Loops 2: "Este é um bloco \"para\". Em vez de digitar\n1, 2, 3... 10, o bloco \"para\" pode repetir os blocos dentro dele e contar os\nnúmeros para você. Coloque o número 10 na seção \"até\" do bloco\n\"para\"."
      4-5 Artist For Loops 3: "Como podemos contar de 1 até 50? Edite o\nbloco \"para\"."
      4-5 Artist For Loops 4: "Complete o bloco \"para\" para que ele\nconte de 1 até 10, de 1 em 1."
      4-5 Artist For Loops 6: "Desenhe quadrados com lados de 50, 60, 70,\n80 e 90 pixels. Você vai precisar usar a função \"desenhe um quadrado\" cinco\nvezes."
      4-5 Artist For Loops 7: "Desenhe os mesmos quadrados, mas use um bloco \"conte\ncom\" para alterar os tamanhos. Coloque o bloco \"contador\" na função \"desenhe\num quadrado\". Dica: ele está na categoria Variáveis."
      4-5 Artist For Loops 8: "Você pode completar o programa colocando\nos blocos dentro de um bloco \"para\" que conta de 10 até 200, de 10 em 10? Você pode\nencontrar o bloco \"para\" na categoria Laços."
      4-5 Artist For Loops 9: "Esses círculos são de tamanhos 5, 10, 15, 20,\n25, 30 e 35. Desenhe os círculos usando um bloco \"para\"."
      4-5 Artist Free Draw 1: "Desenho livre! Desenhe o que você estiver inspirado\na criar."
      4-5 Artist Functions 1: Use um laço repita para desenhar esse triângulo.
      4-5 Artist Functions 10a: "Coloque esse código na função \"desenhe um floco de neve\"\ne substitua o 50 pelo parâmetro \"tamanho\". A função já é\nchamada para criar um floco de neve que tem 100 pixels."
      4-5 Artist Functions 10b: "Use a função \"desenhe um floco de neve\"\npara criar flocos de tamanhos diferentes. Dica: o primeiro floco de neve tem 25 de comprimento\ne cada floco de neve tem duas vezes o tamanho do floco anterior."
      4-5 Artist Functions 11: "Essa função \"desenhe um hexágono\" usa\na função \"desenhe um triângulo\". Complete a função do hexágono. (Dica: um\nhexágono tem 6 lados, cada um com 100 pixels de comprimento)"
      4-5 Artist Functions 12: "Complete a função \"desenhe ondas\". Cada\nonda é feita de uma onda superior e uma onda inferior. Dica: desenhe 5 ondas\nazuis."
      4-5 Artist Functions 13 Free play: "Temos aqui algumas funções para\ndesenhar planetas, estrelas, foguetes e robôs. Use-as da forma que quiser para criar\nimagens que você pode compartilhar com seus amigos."
      4-5 Artist Functions 14 Free play: "Aqui, fornecemos\nvárias funções para você. Use-as da forma que quiser dentro de um ou mais laços\npara criar imagens que você pode compartilhar com seus amigos. Clique em \"Executar\" para ver\num exemplo."
      4-5 Artist Functions 15 Assessment: "Avaliação: use a função \"desenhe\num quadrado\" para criar os quadrados. Os quadrados têm 50, 100 e 150\npixels."
      4-5 Artist Functions 2a: "Agora coloque esses blocos em uma nova função\nchamada \"desenhe um triângulo pequeno\" e chame-a."
      4-5 Artist Functions 2b: "Agora crie uma função chamada \"desenhe um\ntriângulo pequeno\" usando os blocos fornecidos."
      4-5 Artist Functions 3: "Agora crie as funções \"desenhe um triângulo\nmédio\" e \"desenhe um triângulo grande\". A função \"desenhe um triângulo pequeno\"\nestá pronta para você. Os triângulos têm comprimentos de 50 (pequeno), 100 (médio)\ne 150 (grande). "
      4-5 Artist Functions 4: "Essa nova função \"desenhe um triângulo\"\ntem um parâmetro e pode fazer o trabalho das três funções de antes. Desenhe os\nmesmos triângulos usando essa nova função."
      4-5 Artist Functions 5: "Você pode transformar a função \"desenhe um triângulo\"\nem uma função \"desenhe um quadrado\" para alterar o desenho?"
      4-5 Artist Functions 6: "Use as funções \"desenhe um quadrado\" e \"desenhe um\ntriângulo\" para desenhar uma casa. (Dica: os lados do quadrado têm 200 pixels)"
      4-5 Artist Functions 6b: "Use as funções desenhe um quadrado e desenhe um triângulo\njunto com outros blocos para criar uma casa, adicionando-as à função \"desenhe uma casa\"\ne chamando-a."
      4-5 Artist Functions 7: "Use a função \"desenhe uma casa\" para desenhar\ncasas de 100 pixels e 50 pixels. As duas casas são separadas por\n50 pixels."
      4-5 Artist Functions 8: "A função \"desenhe uma flor\" tem um parâmetro\nque permite que você defina a altura do caule. Defina a altura como 200 e veja o que acontece."
      4-5 Artist Functions 9: "Desenhe essas 3 flores. A altura da primeira\né 100 e a próxima flor sempre tem 50 pixels de altura a mais que\na anterior. As flores também são separadas por 100 pixels."
      4-5 Artist Patterns 1: |-
        Desenhe esse quadrado usando um laço.\r
        \r
        Cada
        lado tem 20 pixels de comprimento.
      4-5 Artist Patterns 10: "Este código desenha duas fileiras de hexágonos -\nrepita todo o código 4 vezes para desenhar a colmeia inteira. \\r\n\\r\nVocê vai\nprecisar recuar 120 pixels no laço mais externo para garantir que o artista\nnão desenhe fora da tela.\\r\n"
      4-5 Artist Patterns 11: "Quantas vezes você precisa repetir isso\npara desenhar um semicírculo? "
      4-5 Artist Patterns 12: "Se você criar outro laço como este,\nmas virar para a esquerda ao invés da direita, o que acontece? \\r\n\\r\nVocê pode repetir tudo\nisso para desenhar essa onda?"
      4-5 Artist Patterns 13: "Agora vamos repetir tudo quatro\nvezes para criar a moldura dessa imagem. Preste atenção nos cantos - você não pode\nsimplesmente virar 90 graus! \\r\n\\r\nSe repetir uma ação de virar 3 graus 60 vezes faz um\nsemicírculo, qual desses blocos de código vai fazer um outro quarto\nde círculo para os cantos?"
      4-5 Artist Patterns 2: "Se você colocar seu laço do quadrado dentro de outro\nlaço, o chamamos de laço aninhado. O que você precisa adicionar como um laço externo\npara garantir que todos os 15 quadrados fiquem alinhados?"
      4-5 Artist Patterns 3: "Agora, vamos nos aprofundar mais um nível!\nAninhamos todo o bloco de código dentro de outro laço, mas você precisa posicionar o\nartista no lugar para desenhar a próxima reta. Qual desses blocos de código você\npode colocar no final do laço mais externo para desenhar toda a grade?"
      4-5 Artist Patterns 4: "Esse diamante tem lados de 50 pixels e ângulos\nde 120 e 60 graus. Use um laço para desenhá-lo."
      4-5 Artist Patterns 5.5: "Quantas vezes você precisa repetir esse\nbloco para desenhar toda a grade de diamantes?"
      4-5 Artist Patterns 5: "Repita este código para fazer uma fileira de 6 diamantes.\n\\r\n\\r\nPerceba que alteramos nosso código do diamante para repetir 3 vezes ao invés\nde 2 - por que você acha que fizemos isso?\\r\n"
      4-5 Artist Patterns 6: "Quantas vezes você precisa repetir esse\nbloco para desenhar toda a grade de diamantes?"
      4-5 Artist Patterns 7: "Vamos modificar o código do último desafio\npara fazer esse padrão mais complexo. Perceba como os diamantes se sobrepõem agora. Tente\nalterar o primeiro \"pule para trás\" de 100 para 50 (metade da distância) - agora, quão\nlonge o artista deve ir no segundo \"pule para trás\"?"
      4-5 Artist Patterns 8: "Use um laço para desenhar esse hexágono com\nlados de 40 pixels e ângulos de 60 graus."
      4-5 Artist Patterns 9.5: "Vamos repetir esse código para desenhar duas fileiras\nde hexágonos. Perceba como nossa segunda fileira está deslocada para a direita."
      4-5 Artist Patterns 9: "Agora, repita o código 3 vezes e desenhe a\na fileira inteira. \\r\n\\r\nCada hexágono tem 80 pixels de largura da extrema esquerda\nà extrema direita."
      4-5 Artist Patterns Free Play: "Atividade livre - experimente criar\nseu próprio padrão!"
      4-5 Bee Conditionals - FC Test: "Agora, a abelha só quer néctar.\nNem todos os objetos são flores, então olhe embaixo de TODAS AS NUVENS para ver se\nela está escondendo uma flor. Se estiver, então você pode coletar o néctar."
      4-5 Bee Conditionals 1 (copy 1): "A abelha não sabe se isso é\numa flor ou uma colmeia. Colete néctar apenas das flores, mas primeiro verifique\nse o objeto é uma flor ou uma colmeia."
      4-5 Bee Conditionals 1: "Esta nuvem está tapando minha visão! Veja\nse há uma flor atrás da nuvem, e só colete néctar se houver\numa flor. Cuidado, isso pode mudar!"
      4-5 Bee Conditionals 2 (copy 1): "Agora a abelha só quer néctar. Lembre-se, nem\ntodos os objetos são flores, então faça a verificação para coletar néctar apenas das flores."
      4-5 Bee Conditionals 2: "Mais nuvens! \\r\n\\r\nProcure atrás\nde todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r\n\\r\nLembre-se:\nNem todas as nuvens escondem alguma coisa!"
      4-5 Bee Conditionals 3: "Agora só quero produzir mel. Algumas\ndessas nuvens podem ter colmeias atrás delas. Não se esqueça de procurar em todas as nuvens!"
      4-5 Bee Conditionals 4 (copy 1): "O objeto desconhecido pode ser\numa flor ou uma colmeia. Use o bloco se/senão para coletar néctar se ele for\numa flor, senão para produzir mel (porque ele é, então, uma colmeia)."
      4-5 Bee Conditionals 4: "Às vezes esta nuvem esconde uma flor\ne outras vezes uma colmeia! Use o bloco \"se/senão\" para coletar néctar\nse for uma flor, senão para produzir mel (porque é uma colmeia)."
      4-5 Bee Conditionals 5: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\r
        \r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\r
        Caso contrário, produza mel (porque há uma colmeia).
      4-5 Bee Conditionals 6 (copy 1): "Essa flor roxa pode ter\n1, 2 ou 3 néctares. Aqui um bloco se-senão está combinado com outro bloco\nse-senão para criar um bloco se, senão-se, senão. Complete a solução para coletar\na quantidade desconhecida de néctar."
      4-5 Bee Conditionals 6: "Não tenho certeza de quanto néctar esta flor\ntem, mas sei que ela tem 1, 2 ou 3 unidades de néctar. \\r\n\\r\nCombine os blocos\ncondicionais (\"se\" e/ou \"se/senão\") para coletar apenas a quantidade de néctar que a flor tiver.\n\\r\n\\r\nLembre-se de que a quantidade de néctar pode mudar a cada vez que você executar o desafio!"
      4-5 Bee Conditionals 7: "Essas flores podem ter 3, 2 ou 1 néctar.\n\\r\n\\r\nComplete a função \"verifique a flor roxa\" e use-a para coletar\ntodo o néctar das flores."
      4-5 Bee Conditionals 8: "Escreva a função \"verifique flor e\nproduza mel\". \\r\n\\r\nSua função deve verificar se a flor roxa tem 3, 2\nou 1 néctar e coletar todo o néctar. \\r\nEntão, avance e produza mel."
      4-5 Bee Conditionals Assessment 1: "**Avaliação:** esta nuvem\nesconde uma flor com um néctar ou uma colmeia que precisa de um mel.  \\r\n\\r\nComplete\na função \"colete néctar ou produza mel\" e então, chame-a para coletar o néctar\nou o mel.  \\r\n"
      4-5 Bee Debugging 1: "Esses blocos estão me incomodando. \\r\n\\r\nVocê\npode consertá-los?"
      4-5 Bee Debugging 10: Encontre os erros e corrija-os.
      4-5 Bee Debugging 11: Isso conta corretamente?
      4-5 Bee Debugging 2: Ajude a abelha a coletar o néctar e fabricar o mel.
      4-5 Bee Debugging 3: Encontre os erros e corrija-os.
      4-5 Bee Debugging 4: Esses blocos não funcionam. Qual é o padrão?
      4-5 Bee Debugging 5: Algo não está certo aqui...
      4-5 Bee Debugging 6: "A flor roxa tem uma quantidade diferente\nde néctar a cada vez que você executa o desafio. \\r\n\\r\nCorrija os blocos para coletar todo\no néctar da flor em todas as vezes."
      4-5 Bee Debugging 7: Está faltando alguma coisa na função...
      4-5 Bee Debugging 8: "Essa função está certa, mas não é usada\ncorretamente."
      4-5 Bee Debugging 9: Por que a abelha não está produzindo mel suficiente?
      4-5 Bee Debugging Assessment 1: 'Avaliação: conserte o código.'
      4-5 Bee Nested Loops 1: Use um laço para coletar todo o néctar.
      4-5 Bee Nested Loops 2: "Colete todo o néctar de cada flor.\nUse um laço aninhado. "
      4-5 Bee Nested Loops 3: "Colete todo o néctar colocando o\ncódigo inicial dentro de outro laço."
      4-5 Bee Nested Loops 4: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\r\n\\r\nUse um laço aninhado. "
      4-5 Bee Nested Loops 5: "Colete todo o néctar criando\num laço aninhado."
      4-5 Bee Nested Loops 6: Colete todo o néctar.
      4-5 Bee Nested Loops 7: "Coloque esse laço dentro de outro laço para criar\num laço aninhado e coletar todo o néctar das flores."
      4-5 Bee Nested Loops 8: "Colete todo o néctar dessas flores\naninhando um laço enquanto. Substitua o bloco interno repita vezes por um bloco\nenquanto. "
      4-5 Bee Nested Loops 9: "Colete todo o néctar dessas flores\naninhando um laço enquanto dentro de um bloco repita."
      4-5 Bee Nested Loops Assessment 1: "**Avaliação:** colete todo o\nnéctar e produza todo o mel usando laços."
      4-5 Bee Nested Loops Rows: "Colete o néctar das fileiras de flores!\nUse um laço aninhado."
      4-5 Maze 1 (copy 1): "Querida pessoa. Mim zumbi. Precisa... chegar...\ngirassol."
      4-5 Maze 1: "Querida pessoa. Mim zumbi. Precisa... chegar...\ngirassol."
      4-5 Maze 10: Você consegue chegar até o girassol usando apenas quatro blocos?
      4-5 Maze 11: Você pode chegar até o girassol usando apenas seis blocos?
      4-5 Maze 12: "Ok, isso é um pouco diferente. Você pode fazer isso em\napenas seis blocos?"
      4-5 Maze 13: Leve-me até o porco!
      4-5 Maze 14: Leve-me até o porco! Use o bloco repita até.
      4-5 Maze 2 (copy 1): "Leve o zumbi até o girassol, mas desvie\nda carnívora!"
      4-5 Maze 2: "Leve o zumbi até o girassol, mas desvie\nda carnívora!"
      4-5 Maze 3 (copy 1): Precisa... chegar... girassol.
      4-5 Maze 3: Precisa... chegar... girassol.
      4-5 Maze 4 (copy 1): Experimente o bloco "repita" para usar menos blocos...
      4-5 Maze 4: Experimente o bloco "repita" para usar menos blocos...
      4-5 Maze 5 (copy 1): "Você pode resolver esse desafio usando o menor número\npossível de blocos?"
      4-5 Maze 5: "Você pode resolver esse desafio usando o menor número\npossível de blocos?"
      4-5 Maze 6 (copy 1): "Você pode resolver esse desafio usando o menor número\npossível de blocos?"
      4-5 Maze 6: "Você pode resolver esse desafio usando o menor número\npossível de blocos?"
      4-5 Maze 7: "Leve o zumbi até o girassol sem demora! Você consegue\nresolver o desafio com menos de 11 blocos?"
      4-5 Maze 8: "Leve o zumbi até o girassol usando o menor número possível\nde blocos.  \\r\n(Desvie das carnívoras!)"
      4-5 Maze 9: "Agora temos um novo bloco chamado \"repita até\". \\r\nIsso\nnos permitirá repetir comandos até o zumbi chegar no girassol. \\r\n\\r\nUse\no novo bloco \"repita até\" para resolver este desafio com o menor número possível de comandos."
      4-5 Maze Assessment 1: "Avaliação: chegue até o girassol usando\no menor número possível de blocos."
      4-5 Maze Conditionals 1: "Use o bloco \"repita até\" para levar o\nzumbi até o girassol."
      4-5 Maze Conditionals 10: "Você pode adicionar apenas 3 blocos para ajudar\no zumbi a resolver um labirinto mais complexo? \\r\n\\r\nSe fizer isso certo, ele poderá andar\nem qualquer caminho com curvas, não importa o tamanho!"
      4-5 Maze Conditionals 2: "Use o bloco \"repita até\" para levar o\nzumbi até o girassol."
      4-5 Maze Conditionals 3: "Use o bloco \"se\" para me ajudar a decidir\nquando virar. \\r\n"
      4-5 Maze Conditionals 4: "Ok, resolva este desafio como resolveu\no último, mas você precisa se lembrar de como usou os blocos \"se\" e \"repita até\"\njuntos."
      4-5 Maze Conditionals 5: "\"Mim querer girassol!\"  \\r\n\\r\nUse um\nbloco \"se\" para levar o zumbi até o girassol com o menor número de blocos\npossível."
      4-5 Maze Conditionals 6: |-
        "Mim comer girassol!"\r
        \r
        Use um bloco
        "se" para levar o zumbi até o girassol com o menor número de blocos possível.
      4-5 Maze Conditionals 7: "A solução deste desafio não é muito\ndiferente, mas fique de olho nas carnívoras!"
      4-5 Maze Conditionals 8: "O bloco \"se/senão\" verifica uma condição\ne, em seguida, faz uma coisa OU outra. \\r\n\\r\nUse este novo bloco para me levar até\no girassol."
      4-5 Maze Conditionals 9: |-
        Mais um desafio com o bloco
        "se/senão"\r
        \r
        Faça o caminho com seu dedo para ver se consegue descobrir a solução
        na sua primeira tentativa.
      4-5 Maze Conditionals Assessment 1: "**Avaliação:** use um bloco\n\"repita até\" e um bloco \"se/senão\" para me levar até o girassol com o menor número de blocos\npossível."
      4-5 Nested Loops 1: "Complete o código para desenhar esses triângulos. O\nprimeiro está pronto para você. Dica: 3 triângulos em uma rotação de 360 graus."
      4-5 Nested Loops 10: "Desenhe a última linha de estrelas nessa bandeira\nrepetindo os blocos fornecidos. As estrelas estão separadas por 50 pixels, mas lembre-se\nque elas têm 30 pixels de largura."
      4-5 Nested Loops 11: "Você pode desenhar esses 10 quadrados dessa\ncalçada usando um laço aninhado? Cada quadrado tem 30 pixels."
      4-5 Nested Loops 12: "Você pode desenhar esses 36 triângulos usando\num laço aninhado?"
      4-5 Nested Loops 2: "Agora, aninhe esse laço dentro de outro laço para\ndesenhar 10 triângulos. Isso se chama laço \"aninhado\".  "
      4-5 Nested Loops 3: |-
        Crie um sol aninhando o código inicial em
        outro laço.\r
        \r
        Para conseguir este desenho legal com um centro vazio, você terá que
        dar um pulo para a frente do tamanho do triângulo antes de virar.
      4-5 Nested Loops 5: Repita o código dado para criar um moinho de vento.
      4-5 Nested Loops 6: "Você pode desenhar um hexágono repetindo o\ncódigo do triângulo?"
      4-5 Nested Loops 7: "Repita esse desenho 10 vezes. \\r\n\\r\nQuanto\nvocê precisa virar a cada repetição?"
      4-5 Nested Loops 8: "Repita essa forma 6 vezes. \\r\n\\r\nQuanto\nvocê precisa virar a cada repetição? "
      4-5 Nested Loops 9: Desenhe o dente na boca do crocodilo!
      4-5 Nested Loops Assessment 1: "Avaliação: use um laço aninhado para\ncompletar o desenho."
      4-5 While Loops 1: "Mova-me para o buraco e preencha-o com duas pás cheias\nde terra, usando o bloco \"preencha\"."
      4-5 While Loops 2: "Mova-me para o monte de terra e remova-o com\n5 pás, usando o bloco \"remova 1\"."
      4-5 While Loops 3: "Use o menor número possível de blocos para completar\neste desafio!  \\r\n\\r\nMova-me para o monte e remova toda a terra, então mova-me para\no buraco e preencha-o completamente."
      4-5 While Loops 4: "Uau, que demais! \\r\n\\r\nEu não sei de quantas\npás cheias de terra esse buraco precisa.  \\r\nVocê pode escrever um programa que\nfique usando o bloco \"preencha\" até que o solo fique nivelado?  "
      4-5 While Loops 5: "Uau, agora há dois buracos profundos! Você\npode escrever um programa que os preencha até o que o solo fique nivelado?"
      4-5 While Loops 6: "Uau, agora há um grande monte de terra!\nVocê pode escrever um programa que remova a terra até que o solo fique nivelado?"
      4-5 While Loops 7: "Uau, agora há três grandes montes de terra!\nVocê pode escrever um programa que remova cada um deles até que o solo fique nivelado?"
      4-5 While Loops 8: " Há um buraco realmente fundo e um monte de terra\nrealmente grande. Quantas pás cheias de terra são necessárias para\ntornar o solo plano?"
      4-5 While Loops Assessment 1: "Há um monte de buracos e\nmontes. Ajude-me a preenchê-los e removê-los para tornar o solo plano."
      AB_Debug_PlayLab2: |-
        Por que este jogo não faz nada?

        Você consegue descobrir algum erro "escondido"? Alguns são mais fáceis que outros.
      AB_Debug_PlayLab3: Mova o cavaleiro para cada uma das bandeiras. Se algo der errado, procure por erros!
      AlgPD DR Free Play: Crie uma função baseada em um problema do seu próprio mundo.
      Alien Defender: 'Ideia de Projeto: Construa um jogo de defesa no Laboratório!'
      Alien Defender_2018: 'Ideia de Projeto: Construa um jogo de defesa no Laboratório!'
      AllTheThings Applab - Turtle move with button: "Arraste um botão para fora da tela e\ndefina seu texto como \"Vá em frente!\". Adicione um manipulador de eventos para o botão que\nfaz a tartaruga se mover para a frente. Execute o programa para ver se ele funciona. "
      'AllTheThings: Pixelation - Lesson 14 - Make the Letter A': 'Faça uma letra ''A'' 3x5. O widget está configurado com as dimensões incorretas. Sua primeira tarefa é definir o segundo byte do código binário de 8-bits para o número 5: 0000 0101. Então começe a inserir os dados do pixel.'
      'AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4': 'Vamos começar com a imagem 4x4 que Maddie criou no vídeo. Sua tarefa é preencher uma grade 4x4 com cores usando 12-bits por pixel. Aqui estão os requisitos: Linha 1 - preencha com sombras de vermelho. Linha 2 - sombras de verde. Linha 3 - sombras de azul. Linha 4 - sombras de cinza.'
      'AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color': Vamos começar com você com a imagem 4x2 que Maddie estava criando, más deixamos de fora os últimos dois quadrados. Termine a imagem descobrindo quais duas cores estão faltando e codifique-as.
      App Lab test: teste
      AppLab_test02: Resumo de uma frase da atividade. Clique para ver as instruções completas.
      Applab AllTheThings ResourcesTab AllResources: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      Applab AllTheThings ResourcesTab MapReference: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      Applab AllTheThings ResourcesTab ReferenceLinks: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      Applab allthethings onRecordEvent: Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      Applab test: Você pode enviar este nível. Apenas para testes!
      Artist - Nested Loops 1: "Complete o código para desenhar esses triângulos. O\nprimeiro está pronto para você. Dica: 3 triângulos em uma rotação de 360 graus."
      Artist - Nested Loops 10: "Desenhe a última linha de estrelas nessa bandeira\nrepetindo os blocos fornecidos. As estrelas estão separadas por 50 pixels, mas lembre-se\nque elas têm 30 pixels de largura."
      Artist - Nested Loops 11: "Você pode desenhar esses 10 quadrados dessa\ncalçada usando um laço aninhado? Cada quadrado tem 30 pixels."
      Artist - Nested Loops 12: "Você pode desenhar esses 36 triângulos usando\num laço aninhado?"
      Artist - Nested Loops 2: "Agora aninhe esse laço dentro de outro laço\npara desenhar 10 triângulos. Isso se chama laço aninhado. Dica: todos os 10 triângulos\ncompletam uma rotação de 360 graus.  "
      Artist - Nested Loops 3: "Crie um sol aninhando o código inicial\ndentro de outro laço. Chamamos isso de laço aninhado.\\r\n"
      Artist - Nested Loops 5: Repita o código dado para criar um moinho de vento.
      Artist - Nested Loops 6: "Você pode desenhar um hexágono repetindo o\ncódigo do triângulo?"
      Artist - Nested Loops 7: "Repita esse design 10 vezes. Quanto\nvocê precisa virar a cada repetição? (Dica: quanto é 360 dividido por 10?)"
      Artist - Nested Loops 8: "Repita esse design 6 vezes. Quanto\nvocê precisa virar a cada repetição? (Dica: quanto é 360 dividido por 6?)"
      Artist - Nested Loops 9: Desenhe o dente na boca do crocodilo!
      Artist - Nested Loops Assessment 1: "Use um laço aninhado para completar\no design."
      Artist Autorun Test: "Agora coloque a função dentro de um laço\npara desenhar esses três quadrados."
      Artist Inspiration: "Atividade livre - Inspiração: agora você\naprendeu tudo o que precisa saber para criar um padrão como esse! Se essa\nimagem inspira você, tente fazer algo similar. Caso contrário, crie algo\nvocê mesmo.\\r\n \\r\nQuer saber como nosso padrão de inspiração foi feito? "
      Auto Open Function Editor: "Você pode chamar funções de dentro\nde outras funções! Usando sua função \"forma\" como base, crie 3 formas\nde casa, cada uma 20 pixels maior que a anterior, começando com um comprimento de 50 pixels. Usar\num laço com contador pode ser útil. "
      Bee Recommended Blocks test: "As flores roxas podem ter 1 ou 0 néctar,\nmas você não sabe quanto ela tem! Tome cuidado para não coletar néctar de uma flor roxa\nque não tenha néctar algum. Verifique se o néctar é igual a 1 usando\no bloco se."
      Bergeron Robot Maze1: "Você pode me ajudar a pegar o porco malvado? Junte alguns\nblocos \"avance\" abaixo do bloco \"quando executar\" e clique em \"Executar\". "
      Big Game Animation 1 (copy 1): "Agora que você aprendeu a escrever funções lineares simples, vamos usá-las para adicionar um pouco de movimento ao nosso jogo.\nClique em Jogar para ver o que seu jogo pode fazer atualmente (o que não é muito!), atualize as variáveis que você quiser e então clique em concluir para prosseguir."
      Big Game Animation 1: "Agora que você aprendeu a escrever funções lineares\nsimples, vamos usá-las para adicionar um pouco de movimento ao nosso jogo.\nClique em \"Executar\" para ver o que seu jogo pode fazer (não muito!), atualizar as variáveis que\nvocê quiser e depois clique em Concluir para seguir em frente."
      Big Game Animation 2 (copy 1): "A função \"atualize-alvo\" recebe o atual valor de x do alvo e retorna um valor atualizado. Complete a função \"atualize-alvo\" para que ela some ao valor de x toda vez que ela\nfor chamada. Quanto mais você adicionar ao x, mais rápido o alvo será."
      Big Game Animation 2: "A função \"atualize-alvo\" recebe o\nvalor atual de x do alvo e retorna um valor atualizado. Complete a função \"atualize-alvo\"\npara que ela some ao valor de x toda vez que for chamada. Quanto mais você\nadicionar a x, mais rápido será o alvo."
      Big Game Animation 3: "A função \"atualize-inimigo\" deve funcionar\ncomo a função \"atualize-alvo\", exceto pelo fato de o inimigo deve se mover do lado direito\npara o lado esquerdo. Complete a função \"atualize-inimigo\" para fazer\no inimigo voar pela tela."
      Big Game Animation 4: "Nesse ponto do seu jogo, seu inimigo deve\npercorrer a tela da direita para a esquerda e seu alvo deve percorrer a tela\nda esquerda para a direita. Eles nunca voltam para a tela uma vez que tenham saído,\nmas cuidaremos disso depois. Analise seu jogo para ver se ele está\nfuncionando como você gostaria e então clique em \"Concluir\" para seguir em frente."
      Big Game Booleans 1: "Da última vez que você trabalhou em seu jogo fizemos\nnossos alvo e inimigo voarem pela tela, mas eles nunca\nvoltaram. Clique em \"Executar\" para ver como seu jogo está funcionando agora e depois clique\nem concluir. Vamos fazer os gráficos reaparecerem na tela depois que eles tiverem\nsaído."
      Big Game Booleans 2: "Vá até a seção \"Funções\" da caixa de ferramentas e complete a função esquerda-segura? para que ela retorne\nverdadeiro se a coordenada de x do inimigo for mais que -50. Se você for bem-sucedido,\nvocê deve ver o inimigo sair pelo lado esquerdo e retornar pelo lado direito."
      Big Game Booleans 3: "Agora que você completou esquerda-segura?, vamos preencher\na direita-segura? - ela deve receber a coordenada de x do alvo e retornar verdadeiro\nse essa coordenada for menor que 450. Uma vez que você tenha completado a direita-segura?,\nvocê deve ver o alvo sair pelo lado direito da tela e retornar pela\nesquerda."
      Big Game Booleans 4: "Complete a função na-tela? para que ela verifique se esquerda-segura? e direita-segura?\nsão verdadeiras."
      Big Game Booleans 5: "Nesse ponto do seu jogo, seu inimigo deve percorrer\na tela da direita para a esquerda, seu alvo deve percorrer a tela da esquerda para\na direita e eles devem retornar para o lado oposto, repetidamente. Veja\nse seu jogo está funcionando como você gostaria e então clique em\nConcluir para seguir em frente."
      Big Game Collision 1 (copy 1): "Da última vez que você trabalhou em seu jogo\nfizemos nossos alvo e inimigo voarem pela tela, mas eles nunca\nvoltaram. Clique em Executar para ver como seu jogo está funcionando agora e depois clique\nem concluir. Vamos fazer os gráficos reaparecerem na tela depois que eles tiverem\nsaído."
      Big Game Collision 1: "Até agora você programou um jogo\ncom um alvo e um inimigo que se movem, sendo que ambos retornam à tela quando\nsaem, e um jogador que responde à entrada do teclado. Clique em Executar para\nver como seu jogo está funcionando e então vamos para o que\nestá faltando - a detecção de colisão!"
      Big Game Collision 2: "Para mover o jogador para cima e para baixo, vamos precisar\nusar um bloco condicional para descobrir qual tecla está pressionada e responder\nde acordo. Os computadores leem teclas pressionadas como códigos numéricos - a seta para\ncima é 38 e a seta para baixo é 40. Você pode consultar outros códigos de teclas em seu material.\nEdite a função \"atualizar-jogador\" para que ela mova o jogador para cima quando \na seta para cima está pressionada, ou para baixo quando a seta para baixo está pressionada."
      Big Game Collision 3: "Use a fórmula da distância para que a função\nde distância retorne a distância entre as coordenadas centrais do jogador (px,\npy) e as coordenadas centrais de outro objeto (cx, cy)."
      Big Game Collision 4: "Complete a função colisão? para que ela retorne\nverdadeiro se a distância entre dois pontos for menor que 100 pixels."
      Big Game Complete: "Uma demonstração do projeto Grande Jogo da Álgebra em CC\ncompleto"
      Big Game Final: "Você conseguiu! Agora seu jogo deve estar\nfuncionando completamente. Aproveite seu novo jogo e faça alguns ajustes\nfinais. Quando você estiver feliz com o produto final, clique em Concluir e\nvocê terá a oportunidade de compartilhar um link para o seu jogo. Bom trabalho!"
      Big Game Player 1: "Estamos quase terminando o jogo!\nDa última vez que você trabalhou no seu jogo, você usou booleanos para fazer seu alvo e\nseu inimigo retornarem à tela quando saírem. Clique em Executar para ver como seu\njogo está agora e então vamos fazer seu jogador se mover para cima e para\nbaixo."
      Big Game Player 2: "Para mover o jogador para cima e para baixo, vamos precisar\nusar um bloco condicional para descobrir qual tecla está pressionada e responder de acordo.\nOs computadores leem teclas pressionadas como códigos numéricos - a seta para cima é 38\ne a seta para baixo é 40. Você pode consultar outros códigos de teclas em seu material. Edite\na função \"atualize-jogador\" para que ela mova o jogador para cima quando  a seta para\ncima estiver pressionada e para baixo quando a seta para baixo estiver pressionada."
      Big Game Testing: "Uma demonstração do projeto Grande Jogo da Álgebra em CC\ncompleto"
      Big Game Vars 1 (copy 1): "Vamos começar o seu Grande Jogo! Aqui você vai\nver um monte de trechos de código para reservar espaço que você eventualmente vai substituir\npelo seu próprio código, mas por enquanto vamos nos preocupar somente em definir as variáveis.\nClique em \"Executar\" para ver como é o jogo com os valores-padrão."
      Big Game Vars 1: "Vamos começar o seu Grande Jogo! Aqui você vai\nver um monte de trechos de código para reservar espaço que você eventualmente vai substituir\npelo seu próprio código, mas por enquanto vamos nos preocupar somente em definir as variáveis.\nClique em \"Executar\" para ver como é o jogo com os valores-padrão."
      Big Game Vars 2 (copy 1): "A primeira etapa para você colocar a sua marca\nnesse jogo é dar a ele um bom título. Clique em editar nas variáveis \"título\"\ne \"subtítulo\" e altere-as para algo novo."
      Big Game Vars 2: "A primeira etapa para você colocar a sua marca\nnesse jogo é dar a ele um bom título. Clique em editar nas variáveis \"título\" e \"subtítulo\" e\naltere-as para algo novo."
      Big Game Vars 3 (copy 1): "Agora, vamos definir o pano de fundo para seu\nnovo jogo. Edite a variável \"bg\" e selecione uma nova imagem de pano de fundo no\nmenu."
      Big Game Vars 3: "Agora, vamos definir o pano de fundo para seu novo jogo.\nEdite a variável \"bg\" e selecione uma nova imagem de pano de fundo no menu."
      Big Game Vars 4 (copy 1): "Incrível, agora você pode atualizar as variáveis\npara seu jogador, alvo e inimigo. Fique à vontade para brincar com as variáveis\npara deixar o seu jogo do jeito que você quiser. Clique em \"Concluir\"\nquando estiver pronto."
      Big Game Vars 4: "Incrível! Agora você pode atualizar as variáveis para\no jogador, o alvo e o inimigo. Fique à vontade para brincar com todas as variáveis\ne assim deixar seu jogo do jeito que você quer. Clique em \"Concluir\"\nquando você terminar."
      Brad Spooky House Copy: "Atividade livre: aqui estão as funções\nque você escreveu e mais algumas para você usar. Desenhe algo incrível!\nBrinque com a largura da caneta para ver como seus desenhos ficam diferentes!"
      Brad Spooky House: "Atividade livre: aqui estão as funções\nque você escreveu e mais algumas para você usar. Desenhe algo incrível!\nBrinque com a largura da caneta para ver como seus desenhos ficam diferentes!"
      Building a Foundation Assessment: "Construa uma pirâmide de três níveis.\nNão há outras instruções, então simplesmente brinque com as peças até\nconseguir!"
      Busy Bee 2: "Essa abelha tem muito trabalho a fazer! Você notou algum\npadrão que possa usar para simplificar seu código?"
      Busy Bee: "Essa abelha tem muito trabalho a fazer! Você notou algum\npadrão que possa usar para simplificar seu código?"
      C3-Farmer While Loops 1: "Mova-me para o buraco e preencha-o com\nduas pás de terra, usando o bloco \"preencha\"."
      C3-Farmer While Loops 2: "Mova-me para o monte de terra e remova-o\ncom 5 pás de terra, usando o bloco \"remova\"."
      C3-Farmer While Loops 3: "Mova-me para o monte e remova toda a\nterra, então mova-me para o buraco e preencha-o completamente. Dica: use o menor número de\nblocos possível."
      C3-Farmer While Loops 4: "Uau, eu encontrei um buraco realmente fundo! Eu não\nsei quantas pás de terra são necessárias. Você pode escrever um programa que preencha-o\naté que o solo fique nivelado. Dica: dessa vez, tente usar o laço enquanto."
      C3-Farmer While Loops 5: "Uau, agora há dois buracos profundos! Você\npode escrever um programa que os preencha até o que o solo fique nivelado?"
      C3-Farmer While Loops 6: "Uau, agora há um grande monte de terra!\nVocê pode escrever um programa que remova a terra até que o solo fique nivelado?"
      C3-Farmer While Loops 7: "Uau, agora há três grandes montes de terra!\nVocê pode escrever um programa que remova cada um deles até que o solo fique nivelado?"
      C3-Farmer While Loops 8: " Há um buraco realmente fundo e um monte de terra\nrealmente grande. Quantas pás de terra são necessárias para\ntornar o solo plano? Dica: use o laço enquanto para ambos."
      C3-Farmer While Loops Assessment 1: "Há um monte de buracos e\nmontes. Ajude-me a preenchê-los e removê-los para tornar o solo plano."
      CDEF_debugging_flappy2: Por que este jogo não funciona?
      CSD Hackathon Pt 1: "(Clique para ver todas as instruções)"
      CSD Hackathon Pt 2: "(Clique para ver todas as instruções)"
      CSD Hackathon Week 1: "(Clique para ver todas as instruções)"
      CSD Hackathon Week 2: "(Clique para ver todas as instruções)"
      CSD U3 Background Discuss: Aqui está um programa que é bem similar com o que você tem escrito, mas pode se comportar de maneira bem diferente. Você vai querer parar e discutir com a classe antes de continuar.
      CSD U3 Background Experiment: Aqui está um programa que é bem similar com o que você tem escrito, mas pode se comportar de maneira bem diferente. Você vai querer parar e discutir com a classe antes de continuar.
      CSD U3 Boolean Modify: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Boolean Modify_2018: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Boolean Modify_2019: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Boolean Predict: O que você acha que este código irá fazer quando for executado? Preveja o que cada comando console.log() irá imprimir, e então execute o programa para verificar suas previsões.
      CSD U3 Boolean Predict_2018: O que você acha que este código irá fazer quando for executado? Preveja o que cada comando console.log() irá imprimir, e então execute o programa para verificar suas previsões.
      CSD U3 Boolean Predict_2019: O que você acha que este código irá fazer quando for executado? Preveja o que cada comando console.log() irá imprimir, e então execute o programa para verificar suas previsões.
      CSD U3 Draw Loop Discuss: Aqui está um programa que é bem similar com o que você tem escrito, mas pode se comportar de maneira bem diferente. Você vai querer parar e discutir com a classe antes de continuar.
      CSD U3 Draw Loop Experiment: Tente usar algumas das outras funções de formatos que você aprendeu na repetição de desenho. O que acontece quando você utiliza randomNumber() para gerar algumas das entradas? Você vai querer parar e discutir com sua classe antes de continuar.
      CSD U3 Expressions calculator: Adicione os números de 1 a 10. Multiplique os números de 1 a 10. Verifique suas respostas com um vizinho.
      CSD U3 Frame Rate: Torne a animação do Gary do Gamelab mais devagar com frameRate()
      CSD U3 Keypress Boolean-2018: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Keypress Boolean: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Keypress Boolean_2018: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Keypress Boolean_2018_2019: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Keypress Watchers: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Keypress Watchers_2018: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 Keypress Watchers_2019: Modifique o código para que todos os comandos console.log imprimam 'true'
      CSD U3 L5 Freeplay: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 L5 Freeplay_2018: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 L5 Freeplay_2019: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Mouse Input Bee 2: Faça isso
      CSD U3 Mouse Input Bee 2_2018: Faça isso
      CSD U3 Mouse Input Bee 2_2019: Faça isso
      CSD U3 Random Animation: Use randomNumber() para animar a boca de Gary.
      CSD U3 Random Choice: Use um bloco randomNumber() para gerar 0 ou 1
      CSD U3 Random Color: Você poderia usar randomNumber() para escolher cores aleatórias também? Tente definir um ou mais dos canais no bloco rgb com um número aleatório. Qual deve ser o valor máximo?
      CSD U3 Random Intro: O que você acha que este código vai fazer quando for executado? Faça uma previsão, e então execute este código de 5 a 10 vezes, guardando a saída a cada vez. Compartilhe os seus resultados com seu vizinho.
      CSD U3 Random Min Max: Usando console.log() escreva um programa que retorna aleatoriamente um número no intervalo que você definiu.
      CSD U3 Random Width Height: Escolha um formato de bloco e use chamadas para randomNumber() no lugar de um ou mais parâmetros. Certifique-se que você rode algumas vezes para ver o efeito de aleatoriedade.
      CSD U3 Simple Drawing - Animation 2: Use randomNumber() na posição x e a largura da sua nuvem elíptica para introduzir um pouco de animação.
      CSD U3 Simple Drawing - Animation: Use randomNumber() na posição x e a largura da sua nuvem elíptica para introduzir um pouco de animação.
      CSD U3 Simple Drawing - Background: Coloque todo o seu código em uma repetição draw() e então defina o plano de fundo como azul com o bloco background().
      CSD U3 Simple Drawing - Personal Animation: FAÇA isso
      CSD U3 Sprites intro sprites: Faça isso
      CSD U3 Sprites intro sprites_2018 - Validation Test: Faça isso
      CSD U3 Sprites intro sprites_2018: Faça isso
      CSD U3 Sprites intro sprites_2019: Faça isso
      CSD U3 Variable Arithmetic pt2: 'Preveja: Quais dois números irão aparecer no console?'
      CSD U3 Variable Arithmetic: Modifique o valor "tamanho" inicial para fazer um quadrado maior.
      CSD U3 Variable Incrementation pt2: 'Preveja: Quais dois números irão aparecer no console?'
      CSD U3 Variable Incrementation: 'Preveja: Quais dois números irão aparecer no console?'
      CSD U3 Variables CHALLENGE gamelab gary: Use variáveis para animar o Game Lab Gary
      CSD U3 Variables Initialize: 'Preveja: O que vai ser mostrado no console?'
      CSD U3 Variables Intro: 'Crie sua própria variável '
      CSD U3 Variables Random: 'Preveja: O que vai ser mostrado no console?'
      CSD U3 Variables Reassign pt2: Crie e atribua uma nova variável em uma única linha.
      CSD U3 Variables Reassign: 'Preveja: O que vai ser mostrado no console?'
      CSD U3 Variables Square Random Loop: Teste suas previsões do ultimo nível.
      CSD U3 Variables Square Random: Modifique o valor "tamanho" inicial para fazer um quadrado maior.
      CSD U3 Variables Square: Modifique o valor "tamanho" inicial para fazer um quadrado maior.
      CSD U3 Variables TEMPLATE square: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables change circle size: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables change circle size_2018: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables change circle size_2019: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables create and assign: Crie e atribua o tamanho em uma única linha de código.
      CSD U3 Variables draw loop newVars: Estenda esse projeto para criar sua própria visualização de arte aleatória com variáveis.
      CSD U3 Variables draw loop rgb: Atribua as variáveis x1 e y1 valores aleatórios dentro da repetição de desenhar e use-os para controlar onde o quadrado é desenhado.
      CSD U3 Variables draw loop xy: Atribua as variáveis x1 e y1 valores aleatórios dentro da repetição de desenhar e use-os para controlar onde o quadrado é desenhado.
      CSD U3 Variables eyeBrows: Preveja o que acontecerá quando você mover a atribuição de eyeSize dentro da repetição de desenhar. Então tente você mesmo
      CSD U3 Variables make a big square: Altere o valor de tamanho várias vezes. Como muda seu desenho?
      CSD U3 Variables make a square: Altere o valor de tamanho várias vezes. Como muda seu desenho?
      CSD U3 Variables multiple assignments: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables naming rules v2-2018: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables naming rules v2: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables naming rules v2_2018: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables naming rules v2_2018_2019: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables naming rules: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables random assignment: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables random draw loop: Preveja o que acontecerá quando você mover a atribuição de eyeSize dentro da repetição de desenhar. Então tente você mesmo
      CSD U3 Variables random drawing exemplar: Confira este exemplo aleatório de desenho.
      CSD U3 Variables random with assignment: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables random with assignment_2018: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables random with assignment_2019: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      CSD U3 Variables use value rect: 'Preveja: O que vai ser mostrado no console?'
      CSD U3 Variables write: Use o bloco de escrita para exibir o valor de tamanho
      CSD U3 Variables2 expressions in commands: Use expressões dentro de um comando de desenho
      CSD U3 Variables2 expressions in variables: Atribua o valor de cada expressão a uma variável e console.log essa variável.
      CSD U3 Variables2 expressions: Use o console.log para exibir os resultados de cada expressão. Em seguida, crie seu próprio.
      CSD U4 - Events Template: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      CSD U5 black white images pixelation 2: Desenhar uma cara de sorriso (clique aqui para ver a imagem)
      CSD U5 black white images pixelation 2_2018: Desenhar uma cara de sorriso (clique aqui para ver a imagem)
      CSD U5 black white images pixelation 2_2019: Desenhar uma cara de sorriso (clique aqui para ver a imagem)
      CSD U5 black white images pixelation 3: Altere os controles deslizantes de largura e altura para encontrar a imagem (clique aqui para ver mais)
      CSD U5 black white images pixelation 3_2018: Altere os controles deslizantes de largura e altura para encontrar a imagem (clique aqui para ver mais)
      CSD U5 black white images pixelation 3_2019: Altere os controles deslizantes de largura e altura para encontrar a imagem (clique aqui para ver mais)
      CSD U5 black white images pixelation 4: Adicione sobrancelhas ao rosto sorridente (clique aqui para ver a imagem)
      CSD U5 black white images pixelation 4_2018: Adicione sobrancelhas ao rosto sorridente (clique aqui para ver a imagem)
      CSD U5 black white images pixelation 4_2019: Adicione sobrancelhas ao rosto sorridente (clique aqui para ver a imagem)
      CSD U5 black white images pixelation 5: Desenho algo que você gosta
      CSD U5 black white images pixelation 5_2018: Desenho algo que você gosta
      CSD U5 black white images pixelation 5_2019: Desenho algo que você gosta
      CSD U5 black white images pixelation: Complete a forma X digitando 0s e 1s
      CSD U5 black white images pixelation_2018: Complete a forma X digitando 0s e 1s
      CSD U5 black white images pixelation_2019: Complete a forma X digitando 0s e 1s
      CSD U6 params modify clouds: |-
        # Nuvens

        Este programa faz as nuvens se mover quando você soprar no sensor de som, mas não termina por aqui.

        # Faça isso
        * Crie uma nova função 'moverNuvem(nome)' que irá mover qualquer nuvem.
        * (Dica: você usará quase todo o mesmo código da função 'moverNuvem0')
        * Chame sua nova função 'moverNuvem(nome)' dentro do bloco do evento, uma vez para cada nome de nuvem.
        * (Dica: isso é semelhante a como a função 'repeticaoNuvem(nome)' é chamada muitas vezes.
      CSD U6 params modify clouds_2018: |-
        # Nuvens

        Este programa faz as nuvens se mover quando você soprar no sensor de som, mas não termina por aqui.

        # Faça isso
        * Crie uma nova função 'moverNuvem(nome)' que irá mover qualquer nuvem.
        * (Dica: você usará quase todo o mesmo código da função 'moverNuvem0')
        * Chame sua nova função 'moverNuvem(nome)' dentro do bloco do evento, uma vez para cada nome de nuvem.
        * (Dica: isso é semelhante a como a função 'repeticaoNuvem(nome)' é chamada muitas vezes.
      CSD U6 params modify clouds_2019: |-
        # Nuvens

        Este programa faz as nuvens se mover quando você soprar no sensor de som, mas não termina por aqui.

        # Faça isso
        * Crie uma nova função 'moverNuvem(nome)' que irá mover qualquer nuvem.
        * (Dica: você usará quase todo o mesmo código da função 'moverNuvem0')
        * Chame sua nova função 'moverNuvem(nome)' dentro do bloco do evento, uma vez para cada nome de nuvem.
        * (Dica: isso é semelhante a como a função 'repeticaoNuvem(nome)' é chamada muitas vezes.
      CSD U6 params modify planes: |-
        # Controlador Multiplo de Aviões

        Este programa move os três aviões usando a placa do acelerômetro e as caixas de seleção na tela.  Neste momento, apenas o avião vermelho funciona.

        # Faça isso
        * Crie uma nova função de 'moverAviao(nome)' que pode mover qualquer avião.
        * Chame a função 'moverAviao(nome)' dentro do bloco do evento, tal que ele só se move quando a sua caixa de seleção está marcada.

        _Desafio: Neste momento, os aviões se movem rápido demais. Você consegue descobrir como alterar o código para que eles se movam mais lentamente?_
      CSD U6 params modify planes_2018: |-
        # Controlador Multiplo de Aviões

        Este programa move os três aviões usando a placa do acelerômetro e as caixas de seleção na tela.  Neste momento, apenas o avião vermelho funciona.

        # Faça isso
        * Crie uma nova função de 'moverAviao(nome)' que pode mover qualquer avião.
        * Chame a função 'moverAviao(nome)' dentro do bloco do evento, tal que ele só se move quando a sua caixa de seleção está marcada.

        _Desafio: Neste momento, os aviões se movem rápido demais. Você consegue descobrir como alterar o código para que eles se movam mais lentamente?_
      CSD U6 params modify planes_2019: |-
        # Controlador Multiplo de Aviões

        Este programa move os três aviões usando a placa do acelerômetro e as caixas de seleção na tela.  Neste momento, apenas o avião vermelho funciona.

        # Faça isso
        * Crie uma nova função de 'moverAviao(nome)' que pode mover qualquer avião.
        * Chame a função 'moverAviao(nome)' dentro do bloco do evento, tal que ele só se move quando a sua caixa de seleção está marcada.

        _Desafio: Neste momento, os aviões se movem rápido demais. Você consegue descobrir como alterar o código para que eles se movam mais lentamente?_
      CSDU4 - AppLab - 1: "Desta vez vamos aprender\num pouco sobre como alterar a caneta da tartaruga. Leia a documentação para encontrar\nlarguraCaneta() e corCaneta(), e então desenhe o quadrado roxo como foi mostrado."
      CSDU4 - AppLab - 2: Escreva um programa que atue como uma calculadora simples. (clique aqui para ver todas as instruções)
      CSDU4 - AppLab - 3: Use o console para verificar o valor final de num. (Clique para ver as instruções completas)
      CSDU4 - AppLab - 4: " Use os Comandos de Análise para fazer uma lista de todos os valores que rolaram antes um 6. (Clique para ver as instruções completas)"
      CSDU4 - Design Mode - 1: "Arraste um botão para fora da tela e\ndefina seu texto como \"Vá em frente!\". Adicione um manipulador de eventos para o botão que\nfaz a tartaruga se mover para a frente. Execute o programa para ver se ele funciona. "
      CSDU4 - Design Mode - 10: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSDU4 - Design Mode - 11: Experimente tipos de eventos diferentes e selecione qual deles você acha melhor. (Clique aqui para ver todas as instruções)
      CSDU4 - Design Mode - 12: "Introdução de textLabels.  Primeiro, tente substituir\nseu botão por um textLabel.  O texto vai responder a eventos da mesma forma que o\nbotão?  Tente conectá-lo a um manipulador de eventos. Fornecemos um código\ninicial similar ao resultado do último nível, então você pode copiar o código do\núltimo nível aqui se você preferir. "
      CSDU4 - Design Mode - 16: Adicione um manipulador de eventos para o botão usando o link "Inserir e Visualizar" na aba de Eventos de Modo de Design (clique para ver as instruções completas).
      CSDU4 - Design Mode - 17: Atualize os nomes de ID e as mensagens de 'console.log' para associar com o botão correto. (Clique para ver as instruções completas.)
      CSDU4 - Design Mode - 18: Conserte o formato do jogo bullseye. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 2: Execute um programa com dois botões que possuem o mesmo id para ver a mensagem de aviso no console. Altere os ids para fazer o programa funcionar sem receber uma mensagem de aviso.
      CSDU4 - Design Mode - 24: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      CSDU4 - Design Mode - 25: Adicione um manipulador de eventos para o botão Submeter para que quando o botão é clicado, ele irá exibir o nome digitado da caixa de texto no console.  Use getText para obter o valor da caixa de texto. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 26: Salve a idade e o nome do usuário em variáveis (clique para ver as instruções completas)
      CSDU4 - Design Mode - 27: Mostre uma mensagem na 'textArea' (clique para ver as instruções completas)
      CSDU4 - Design Mode - 28: Escreva uma saudação para o usuário quando eles clicarem em 'entrar' no texto de entrada, usando o evento 'mudança'. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 29: Adicione um menu de opções para o palpite em vez de promptNum (clique para ver as instruções completas)
      CSDU4 - Design Mode - 30: Mostre imagens diferentes para o número aleatório gerado. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 31: Crie um manipulador de eventos para responder aos eventos de apertar tecla e exibir event.key no console. Aperte as teclas do teclado para ver o que acontece. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 32: Experimente os eventos de soltar tecla e pressionar tecla para ver como eles são diferentes de apertar tecla. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 33: Modifique o código para que o som só seja tocado quando a seta para cima for pressionada (Clique aqui para ver todas as instruções)
      CSDU4 - Design Mode - 4: "Esse programa tem um problema! Você pode descobrir\nqual? Execute o programa e veja se você pode descobrir a partir das mensagens de erro\nno console qual é o problema. Não há muito código para ver, então você deve ser capaz\nde descobrir o problema simplesmente lendo o código com atenção. Faça uma alteração\nque permita que o programa funcione como esperado."
      CSDU4 - Design Mode - 5: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 6: Analise o programa ordenando corretamente seus botões de comandos e manipuladores de eventos. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 7: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      CSDU4 - Design Mode - 8: Mova o botão para o meio da tela. (Clique aqui para ver todas as instruções)
      CSDU4 nameAgeTemplate: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      CSDU6 - Arrays - expressionsAsIndexes: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 - Arrays - indexPractice: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 - Arrays - length: Use list.length para determinar o comprimento de cada vetor. (Clique para ver as instruções completas)
      CSDU6 - Arrays - lengthMinus1: Use list.length - 1 para registrar o último item do vetor para o console. (Clique para ver as instruções completas)
      CSDU6 - for loop - color buttons with for: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 - for loop - color buttons: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 - for loop - why for: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 arrays rainbow: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 arrays random: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select icons: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select rainbow: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select rainbow_2018: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select rainbow_2019: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select random: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select random_2018: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select random_2019: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select variable: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select variable_2018: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays select variable_2019: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSDU6 arrays variable: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSP Data Unit - Counting Multiple Things: |-
        Se você pode contar uma coisa também consegue contar muitas coisas

        Encontre quantas pessoas gostam de alguma coisa que não seja cães e gatos

        Contar cães
        Contar gatos
        Contar total
        Faça as contas

        em branco/ em branco total

        Também pode ser usado para encontrar porcentagens desses

        x% são amantes de cão
      CSP Loops: Mude a condição "se" para uma repetição "enquanto" para que o programa execute até que role um 6. (Clique para ver as instruções completas)
      CSP U4 - JSON Object Intro - Bad Way: Acione ambos os eventos do teclado e do mouse e examine os objetos de evento exibidos no console. Por que um objeto seria a melhor maneira de armazenar esta informação? (Clique para ver as instruções completas)
      CSP U4 - JSON Object Intro - Good Way: 'Crie um objeto pelo menos 5 valores incluindo pelo menos um string e um número. (Clique para ver as instruções completas) '
      CSP U4 - Objects - createObject: 'Crie um objeto pelo menos 5 valores incluindo pelo menos um string e um número. (Clique para ver as instruções completas) '
      CSP student contact info: Por favor, insira seu endereço de email.
      CSPU5 Add Screens to Chaser Game: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add a 2nd Screen: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      CSPU5 Add a 2nd Screen_2018: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      CSPU5 Add a 2nd Screen_2019: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      CSPU5 Add full screen image to bg of chaser game: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add full screen image to bg of chaser game_2018: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add full screen image to bg of chaser game_2019: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add game over screen: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add game over screen_2018: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add game over screen_2019: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add onEvent from Design Mode: Adicione um manipulador de eventos para o botão usando o link "Inserir e Visualizar" na aba de Eventos de Modo de Design (clique para ver as instruções completas).
      CSPU5 Add onEvent from Design Mode_2018: Adicione um manipulador de eventos para o botão usando o link "Inserir e Visualizar" na aba de Eventos de Modo de Design (clique para ver as instruções completas).
      CSPU5 Add onEvent from Design Mode_2019: Adicione um manipulador de eventos para o botão usando o link "Inserir e Visualizar" na aba de Eventos de Modo de Design (clique para ver as instruções completas).
      CSPU5 Add welcome screen to chaser game: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add welcome screen to chaser game_2018: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Add welcome screen to chaser game_2019: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5 Adding Screens Template: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      CSPU5 Adding Screens Template_2018: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      CSPU5 Adding Screens Template_2019: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      CSPU5 Debugging Overlapping Objects and Screen Events: Recrie o "Jogo do Caçador" da última lição usando o Modo Design. (Clique para ver as instruções completas).
      CSPU5 Debugging Overlapping Objects and Screen Events_2018: Recrie o "Jogo do Caçador" da última lição usando o Modo Design. (Clique para ver as instruções completas).
      CSPU5 Debugging Overlapping Objects and Screen Events_2019: Recrie o "Jogo do Caçador" da última lição usando o Modo Design. (Clique para ver as instruções completas).
      CSPU5 First Time Console.log: Adicione 3 mensagens de console.log e os teste. (Clique para ver as instruções completas.)
      CSPU5 First Time Console.log_2018: Adicione 3 mensagens de console.log e os teste. (Clique para ver as instruções completas.)
      CSPU5 First Time Console.log_2019: Adicione 3 mensagens de console.log e os teste. (Clique para ver as instruções completas.)
      CSPU5 Layering and Deleting in Design Mode: Conserte o formato do jogo bullseye. (Clique para ver as instruções completas)
      CSPU5 Layering and Deleting in Design Mode_2018: Conserte o formato do jogo bullseye. (Clique para ver as instruções completas)
      CSPU5 Layering and Deleting in Design Mode_2019: Conserte o formato do jogo bullseye. (Clique para ver as instruções completas)
      CSPU5 Project - Multi Screen App: Crie seu app com várias telas (clique para ver as instruções completas).
      CSPU5 Use Console.log to update IDs: Atualize os nomes de ID e as mensagens de 'console.log' para associar com o botão correto. (Clique para ver as instruções completas.)
      CSPU5 Use setScreen for first time: Fazer uma app com 2 telas que pode alternar entre uma tela preta e uma tela branca com botões. (Clique para ver instruções detalhadas.)
      CSPU5 Use setScreen for first time_2018: Fazer uma app com 2 telas que pode alternar entre uma tela preta e uma tela branca com botões. (Clique para ver instruções detalhadas.)
      CSPU5 Use setScreen for first time_2019: Fazer uma app com 2 telas que pode alternar entre uma tela preta e uma tela branca com botões. (Clique para ver instruções detalhadas.)
      CSPU5_AddImageToChaserGame: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_AddImage_andMakeChaserGame: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_AddLabelToChaserGame: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_AddLabelToChaserGame_2018: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_AddLabelToChaserGame_2019: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_Debugging predict unexpected behavior - two onEvents to one ID: "Sua vez de tentar! Fornecemos a você um\ncódigo inicial com dois botões e dois manipuladores de evento na tela, mas deixamos\nos Ids padrões de \"id\". Você precisa alterar esses ids para conectar\no manipulador de eventos ao botão correto. (Curiosamente, o programa\nincorreto funciona, mas ele tem um comportamento bizarro. Vamos discutir mais\nsobre isso na próxima lição. Por enquanto, faça os botões funcionarem corretamente)."
      CSPU5_Debugging predict unexpected behavior - two onEvents to one_2018: "Sua vez de tentar! Fornecemos a você um\ncódigo inicial com dois botões e dois manipuladores de evento na tela, mas deixamos\nos Ids padrões de \"id\". Você precisa alterar esses ids para conectar\no manipulador de eventos ao botão correto. (Curiosamente, o programa\nincorreto funciona, mas ele tem um comportamento bizarro. Vamos discutir mais\nsobre isso na próxima lição. Por enquanto, faça os botões funcionarem corretamente)."
      CSPU5_Debugging predict unexpected behavior - two onEvents to one_2019: "Sua vez de tentar! Fornecemos a você um\ncódigo inicial com dois botões e dois manipuladores de evento na tela, mas deixamos\nos Ids padrões de \"id\". Você precisa alterar esses ids para conectar\no manipulador de eventos ao botão correto. (Curiosamente, o programa\nincorreto funciona, mas ele tem um comportamento bizarro. Vamos discutir mais\nsobre isso na próxima lição. Por enquanto, faça os botões funcionarem corretamente)."
      CSPU5_FinalizeChaserGame: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_Project - Multi Screen App: Crie seu app com várias telas (clique para ver as instruções completas).
      CSPU5_U3 - Arrays - Demo App: Uso o app "Minhas coisas favoritas". Como pode este app estar fazendo uso de um vetor? (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - Demo App_2018: Uso o app "Minhas coisas favoritas". Como pode este app estar fazendo uso de um vetor? (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - Demo App_2019: Uso o app "Minhas coisas favoritas". Como pode este app estar fazendo uso de um vetor? (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - appendItem: Crie um vetor de números ímpares 1-11 usando appendItem. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - appendItem_2018: Crie um vetor de números ímpares 1-11 usando appendItem. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - appendItem_2019: Crie um vetor de números ímpares 1-11 usando appendItem. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment: Use índices para alterar os valores nesse vetor de 1 para 0. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment2: Calcule a soma dos três valores armazenados em um vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment2_2018: Calcule a soma dos três valores armazenados em um vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment2_2019: Calcule a soma dos três valores armazenados em um vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment3: Aumente o valor em 1 de cada valor no vetor gerada aleatoriamente. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment3_2018: Aumente o valor em 1 de cada valor no vetor gerada aleatoriamente. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment3_2019: Aumente o valor em 1 de cada valor no vetor gerada aleatoriamente. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment_2018: Use índices para alterar os valores nesse vetor de 1 para 0. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - assignment_2019: Use índices para alterar os valores nesse vetor de 1 para 0. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - createFirstArray: Crie um vetor de números pares a partir de 0 até 10 e mostre o conteúdo da lista com console.log. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - createFirstArray_2018: Crie um vetor de números pares a partir de 0 até 10 e mostre o conteúdo da lista com console.log. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - createFirstArray_2019: Crie um vetor de números pares a partir de 0 até 10 e mostre o conteúdo da lista com console.log. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - expressionsAsIndexes: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - expressionsAsIndexes_2018: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - expressionsAsIndexes_2019: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - favThings Counting Variable: Crie uma variável global para o índice atual e use-a para mostrar o primeiro item no vetor. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - favThings Counting Variable_2018: Crie uma variável global para o índice atual e use-a para mostrar o primeiro item no vetor. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - favThings Counting Variable_2019: Crie uma variável global para o índice atual e use-a para mostrar o primeiro item no vetor. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - favThings Next: Escreva código que permite o usuário mover para frente através de sua lista clicando no botão "Próximo". (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings Next_2018: Escreva código que permite o usuário mover para frente através de sua lista clicando no botão "Próximo". (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings Next_2019: Escreva código que permite o usuário mover para frente através de sua lista clicando no botão "Próximo". (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings Prev: Escreva um código que permita o usuário mover para trás através de sua lista clicando no botão "Último". (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings Prev_2018: Escreva um código que permita o usuário mover para trás através de sua lista clicando no botão "Último". (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings Prev_2019: Escreva um código que permita o usuário mover para trás através de sua lista clicando no botão "Último". (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings addItem: Escreva um código que permita que um usuário adicione suas próprias coisas favoritas para a lista. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings addItem_2018: Escreva um código que permita que um usuário adicione suas próprias coisas favoritas para a lista. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings addItem_2019: Escreva um código que permita que um usuário adicione suas próprias coisas favoritas para a lista. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings bounds: Adicione declarações "se" no seus manipuladores de eventos para que impeça o índice global de sair dos limites. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings bounds_2018: Adicione declarações "se" no seus manipuladores de eventos para que impeça o índice global de sair dos limites. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings bounds_2019: Adicione declarações "se" no seus manipuladores de eventos para que impeça o índice global de sair dos limites. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings createArray: Crie um array de palavras descrevendo suas coisas favoritas. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings createArray_2018: Crie um array de palavras descrevendo suas coisas favoritas. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings createArray_2019: Crie um array de palavras descrevendo suas coisas favoritas. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings firstOutput: Use "setar texto" para exibir o primeiro item na matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings firstOutput_2018: Use "setar texto" para exibir o primeiro item na matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings firstOutput_2019: Use "setar texto" para exibir o primeiro item na matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings giveIDs: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings giveIDs_2018: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings giveIDs_2019: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings keepPlaying: Faça qualquer outra melhoria que você quiser! (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings keepPlaying_2018: Faça qualquer outra melhoria que você quiser! (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - favThings keepPlaying_2019: Faça qualquer outra melhoria que você quiser! (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - indexPractice: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - indexPractice_2018: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - indexPractice_2019: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Arrays - insertingItems: Insira itens em uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - insertingItems_2018: Insira itens em uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - insertingItems_2019: Insira itens em uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - insertionErrors: Execute cada comando que referencia os índices que estão fora dos limites e observe os resultados. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - insertionErrors_2018: Execute cada comando que referencia os índices que estão fora dos limites e observe os resultados. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - insertionErrors_2019: Execute cada comando que referencia os índices que estão fora dos limites e observe os resultados. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - introIndex: Exiba o primeiro e o último elemento na matriz. Exiba o número 5 da matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - introIndex_2018: Exiba o primeiro e o último elemento na matriz. Exiba o número 5 da matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - introIndex_2019: Exiba o primeiro e o último elemento na matriz. Exiba o número 5 da matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - length: Use list.length para determinar o comprimento de cada vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - lengthMinus1: Use list.length - 1 para registrar o último item do vetor para o console. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - lengthMinus1_2018: Use list.length - 1 para registrar o último item do vetor para o console. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - lengthMinus1_2019: Use list.length - 1 para registrar o último item do vetor para o console. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - length_2018: Use list.length para determinar o comprimento de cada vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - length_2019: Use list.length para determinar o comprimento de cada vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - remove: Remova itens de uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - remove_2018: Remova itens de uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - remove_2019: Remova itens de uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - stringsInArrays: Escreva uma frase, palavra por palavra, adicionando sequências de caracteres em uma matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - stringsInArrays_2018: Escreva uma frase, palavra por palavra, adicionando sequências de caracteres em uma matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Arrays - stringsInArrays_2019: Escreva uma frase, palavra por palavra, adicionando sequências de caracteres em uma matriz. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - 200dots: Adicione um loop ao seu programa que desenha 200 pontos na sua tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - 200dots_2018: Adicione um loop ao seu programa que desenha 200 pontos na sua tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - 200dots_2019: Adicione um loop ao seu programa que desenha 200 pontos na sua tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - One Dot sprayPaint: Escreva um código que redesenha sua imagem usando um ponto cujas posições x e y usam margens X e Y com um pequeno valor aleatório adicionado. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - One Dot sprayPaint_2018: Escreva um código que redesenha sua imagem usando um ponto cujas posições x e y usam margens X e Y com um pequeno valor aleatório adicionado. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - One Dot sprayPaint_2019: Escreva um código que redesenha sua imagem usando um ponto cujas posições x e y usam margens X e Y com um pequeno valor aleatório adicionado. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - appendToArray: Crie uma matriz para armazenar cada parâmetro de evento. Acrescente cada parâmetro de evento nesta matriz dentro de seu manipulador de eventos. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - appendToArray_2018: Crie uma matriz para armazenar cada parâmetro de evento. Acrescente cada parâmetro de evento nesta matriz dentro de seu manipulador de eventos. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - appendToArray_2019: Crie uma matriz para armazenar cada parâmetro de evento. Acrescente cada parâmetro de evento nesta matriz dentro de seu manipulador de eventos. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - changeToMouseMove: Altere seu programa para que pontos sejam desenhados no local do mouse de acordo que o usuário move o mouse sobre a tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - changeToMouseMove_2018: Altere seu programa para que pontos sejam desenhados no local do mouse de acordo que o usuário move o mouse sobre a tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - changeToMouseMove_2019: Altere seu programa para que pontos sejam desenhados no local do mouse de acordo que o usuário move o mouse sobre a tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - clickToAdd: Altere seu programa para que os pontos sejam adicionados à tela quando o usuário clicar nela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - clickToAdd_2018: Altere seu programa para que os pontos sejam adicionados à tela quando o usuário clicar nela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - clickToAdd_2019: Altere seu programa para que os pontos sejam adicionados à tela quando o usuário clicar nela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - delete: Crie um botão que exclui o desenho, limpando a tela e removendo todos os valores armazenados. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - delete_2018: Crie um botão que exclui o desenho, limpando a tela e removendo todos os valores armazenados. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - delete_2019: Crie um botão que exclui o desenho, limpando a tela e removendo todos os valores armazenados. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - draw at click point: Altere seu programa para que pontos sejam desenhados no local do clique do mouse. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - draw at click point_2018: Altere seu programa para que pontos sejam desenhados no local do clique do mouse. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - draw at click point_2019: Altere seu programa para que pontos sejam desenhados no local do clique do mouse. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - freePlay: Estenda a funcionalidade de um dos efeitos, ou crie um novo de sua preferência. (Clique para ver todas as instruções)
      CSPU5_U3 - Canvas - freePlay_2018: Estenda a funcionalidade de um dos efeitos, ou crie um novo de sua preferência. (Clique para ver todas as instruções)
      CSPU5_U3 - Canvas - freePlay_2019: Estenda a funcionalidade de um dos efeitos, ou crie um novo de sua preferência. (Clique para ver todas as instruções)
      CSPU5_U3 - Canvas - introCanvas: Adicione uma tela ao seu aplicativo e configure ela para ser a tela ativa. Em seguida, adicione um grande ponto em sua sua tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - introCanvas_2018: Adicione uma tela ao seu aplicativo e configure ela para ser a tela ativa. Em seguida, adicione um grande ponto em sua sua tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - introCanvas_2019: Adicione uma tela ao seu aplicativo e configure ela para ser a tela ativa. Em seguida, adicione um grande ponto em sua sua tela. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - movementFunction fix Orig: Modifique o manipulador de eventos do botão "Original" para que considere o movimento do mouse. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - movementFunction fix Orig_2018: Modifique o manipulador de eventos do botão "Original" para que considere o movimento do mouse. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - movementFunction fix Orig_2019: Modifique o manipulador de eventos do botão "Original" para que considere o movimento do mouse. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - movementFunction: Escreva uma função que usa o movimento do mouse como entrada e gere uma largura de linha como saída. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - movementFunction_2018: Escreva uma função que usa o movimento do mouse como entrada e gere uma largura de linha como saída. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - movementFunction_2019: Escreva uma função que usa o movimento do mouse como entrada e gere uma largura de linha como saída. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - redrawOriginal: Escreva uma função que processa seu vetor, redesenhando os pontos da forma que eles aparecem originalmente (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Canvas - redrawOriginal_2018: Escreva uma função que processa seu vetor, redesenhando os pontos da forma que eles aparecem originalmente (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Canvas - redrawOriginal_2019: Escreva uma função que processa seu vetor, redesenhando os pontos da forma que eles aparecem originalmente (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Canvas - redrawRandom: Defina um botão e manipulador de eventos para a função aleatória. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - redrawRandom2: Escreva uma função que processa sua matriz, redesenhando cada ponto com um tamanho aleatório. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - redrawRandom2_2018: Escreva uma função que processa sua matriz, redesenhando cada ponto com um tamanho aleatório. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - redrawRandom2_2019: Escreva uma função que processa sua matriz, redesenhando cada ponto com um tamanho aleatório. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - redrawRandom_2018: Defina um botão e manipulador de eventos para a função aleatória. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - redrawRandom_2019: Defina um botão e manipulador de eventos para a função aleatória. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - shiftKey: Adicione uma declaração "se" para seu manipulador de eventos para que pontos só sejam desenhados quando a tecla shift for pressionada. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - shiftKey_2018: Adicione uma declaração "se" para seu manipulador de eventos para que pontos só sejam desenhados quando a tecla shift for pressionada. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - shiftKey_2019: Adicione uma declaração "se" para seu manipulador de eventos para que pontos só sejam desenhados quando a tecla shift for pressionada. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - sketch: Escreva código que redesenha sua imagem usando um efeito de esboço. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - sketch_2018: Escreva código que redesenha sua imagem usando um efeito de esboço. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - sketch_2019: Escreva código que redesenha sua imagem usando um efeito de esboço. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - sprayPaint: Atualize o código de tinta spray para que ele redesenhe sua imagem usando múltiplos pontos aleatórios em vez de usar uma repetição aninhada. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - sprayPaint_2018: Atualize o código de tinta spray para que ele redesenhe sua imagem usando múltiplos pontos aleatórios em vez de usar uma repetição aninhada. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - sprayPaint_2019: Atualize o código de tinta spray para que ele redesenhe sua imagem usando múltiplos pontos aleatórios em vez de usar uma repetição aninhada. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - transparentDots: Mude as cores de seus pontos para que eles tenham um traço totalmente transparente e preenchimento parcialmente transparente. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - transparentDots_2018: Mude as cores de seus pontos para que eles tenham um traço totalmente transparente e preenchimento parcialmente transparente. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - transparentDots_2019: Mude as cores de seus pontos para que eles tenham um traço totalmente transparente e preenchimento parcialmente transparente. (Clique para ver as instruções completas)
      CSPU5_U3 - Canvas - usingOffsetXY: Adicione um comando de console.log dentro da função do manipulador de eventos. Use-o para exibir o parâmetro do evento. Clique na tela para ver o conteúdo do parâmetro de evento (clique para ver as instruções completas)
      CSPU5_U3 - Canvas - usingOffsetXY_2018: Adicione um comando de console.log dentro da função do manipulador de eventos. Use-o para exibir o parâmetro do evento. Clique na tela para ver o conteúdo do parâmetro de evento (clique para ver as instruções completas)
      CSPU5_U3 - Canvas - usingOffsetXY_2019: Adicione um comando de console.log dentro da função do manipulador de eventos. Use-o para exibir o parâmetro do evento. Clique na tela para ver o conteúdo do parâmetro de evento (clique para ver as instruções completas)
      CSPU5_U3 - Conditional Basics - 6: Adicione um "definirTexto" após a declaração "se" para a frase "Não. Tente de novo." (Clique para ver as instruções completas)
      CSPU5_U3 - Conditionals - Combine AND OR Simple: Escreva uma declaração "se" que usa "E" e "OU" para exibir "Durma!" se é fim de semana e o usuário é um adolescente. (Clique para ver as instruções completas.
      CSPU5_U3 - Conditionals - Combine AND OR Simple_2018: Escreva uma declaração "se" que usa "E" e "OU" para exibir "Durma!" se é fim de semana e o usuário é um adolescente. (Clique para ver as instruções completas.
      CSPU5_U3 - Conditionals - Combine AND OR Simple_2019: Escreva uma declaração "se" que usa "E" e "OU" para exibir "Durma!" se é fim de semana e o usuário é um adolescente. (Clique para ver as instruções completas.
      CSPU5_U3 - Conditionals - Combine AND OR and NOT: Escreva uma instrução "se" que usa "E" e "OU" para exibir "Hora de ir para a escola!" se não é fim de semana e o usuário é menor de 18 anos. (Clique para ver as instruções completas).
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_2018: Escreva uma instrução "se" que usa "E" e "OU" para exibir "Hora de ir para a escola!" se não é fim de semana e o usuário é menor de 18 anos. (Clique para ver as instruções completas).
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_2019: Escreva uma instrução "se" que usa "E" e "OU" para exibir "Hora de ir para a escola!" se não é fim de semana e o usuário é menor de 18 anos. (Clique para ver as instruções completas).
      CSPU5_U3 - Conditionals - Simple AND: Escreva uma instrução "se" que usa "E" para exibir "Você é um adolescente..." se o usuário insere uma idade entre 13 e 19. (Clique para ver as instruções completas)
      CSPU5_U3 - Conditionals - Simple AND_2018: Escreva uma instrução "se" que usa "E" para exibir "Você é um adolescente..." se o usuário insere uma idade entre 13 e 19. (Clique para ver as instruções completas)
      CSPU5_U3 - Conditionals - Simple AND_2019: Escreva uma instrução "se" que usa "E" para exibir "Você é um adolescente..." se o usuário insere uma idade entre 13 e 19. (Clique para ver as instruções completas)
      CSPU5_U3 - Conditionals - Simple OR: Escrever uma instrução "se" que usa "OU" para exibir "É o fim de semana!" se o usuário insere um dia de fim de semana no prompt. (Clique para ver as instruções completas)
      CSPU5_U3 - Conditionals - Simple OR_2018: Escrever uma instrução "se" que usa "OU" para exibir "É o fim de semana!" se o usuário insere um dia de fim de semana no prompt. (Clique para ver as instruções completas)
      CSPU5_U3 - Conditionals - Simple OR_2019: Escrever uma instrução "se" que usa "OU" para exibir "É o fim de semana!" se o usuário insere um dia de fim de semana no prompt. (Clique para ver as instruções completas)
      CSPU5_U3 - Design Mode - Console Log: Atualize os nomes de ID e as mensagens de 'console.log' para associar com o botão correto. (Clique para ver as instruções completas.)
      CSPU5_U3 - Design Mode - Layers and Delete: Conserte o formato do jogo bullseye. (Clique para ver as instruções completas)
      CSPU5_U3 - Design Mode - Multi Screens 2: Fazer uma app com 2 telas que pode alternar entre uma tela preta e uma tela branca com botões. (Clique para ver instruções detalhadas.)
      CSPU5_U3 - Design Mode - Multi Screens: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      CSPU5_U3 - Design Mode - WTF Console Log: Adicione 3 mensagens de console.log e os teste. (Clique para ver as instruções completas.)
      CSPU5_U3 - Design Mode -Recreate Beyond Buttons: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      CSPU5_U3 - Design Mode 1: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      CSPU5_U3 - Design Mode 1_2018: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      CSPU5_U3 - Design Mode 1_2019: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      CSPU5_U3 - Dice - Dropdown and Score: Adicione o palpite e pontuação para o jogo de dados (clique para ver as instruções completas)
      CSPU5_U3 - Dice - Dropdown with Strings: Adicione um menu suspenso para o nível de dificuldade que mostre o nível de dificuldade no console. (Clique para ver as instruções completas)
      CSPU5_U3 - Dice - If: Mostre imagens diferentes para o número aleatório gerado. (Clique para ver as instruções completas)
      CSPU5_U3 - Dice - Nested: Use declarações "se" para fazer o marcador diferente para níveis de jogos diferentes. (Clique para ver as instruções completas)
      CSPU5_U3 - High Low - Debug: Analise a ordem das condicionais para que avise o usuário quando o palpite está próximo. (Clique para ver as instruções completas)
      CSPU5_U3 - High Low - Debug_2018: Analise a ordem das condicionais para que avise o usuário quando o palpite está próximo. (Clique para ver as instruções completas)
      CSPU5_U3 - High Low - Debug_2019: Analise a ordem das condicionais para que avise o usuário quando o palpite está próximo. (Clique para ver as instruções completas)
      CSPU5_U3 - High Low - Dropdown: Adicione um menu de opções para o palpite em vez de promptNum (clique para ver as instruções completas)
      CSPU5_U3 - High Low - Else if: Adicione uma condição senão-se com o objetivo de dizer ao usuário se seus chutes são altos ou baixos em vez de apenas dizer que estão errados. (Clique para ver todas as instruções)
      CSPU5_U3 - High Low - Else if_2018: Adicione uma condição senão-se com o objetivo de dizer ao usuário se seus chutes são altos ou baixos em vez de apenas dizer que estão errados. (Clique para ver todas as instruções)
      CSPU5_U3 - High Low - Else if_2019: Adicione uma condição senão-se com o objetivo de dizer ao usuário se seus chutes são altos ou baixos em vez de apenas dizer que estão errados. (Clique para ver todas as instruções)
      CSPU5_U3 - High Low - Else: 'Adicione uma instrução "senão" para que o programa informe aos usuários quando eles estão certos e quando eles estão errados. (Clique para ver as instruções completas)  '
      CSPU5_U3 - High Low - If: Adicione código dentro da declaração "se" que indica o usuário adivinhou o número secreto. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Add Image URLs: Adicione URLs de imagem para seu vetor. Substitua a área de texto com uma imagem e "setText" com "setImageURL". Em seguida, teste seu aplicativo! (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Add Image URLs_2018: Adicione URLs de imagem para seu vetor. Substitua a área de texto com uma imagem e "setText" com "setImageURL". Em seguida, teste seu aplicativo! (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Add Image URLs_2019: Adicione URLs de imagem para seu vetor. Substitua a área de texto com uma imagem e "setText" com "setImageURL". Em seguida, teste seu aplicativo! (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Buttons and Keys: Faça com que o programa responda da mesma maneira tanto para clicar em imagens na tela quanto para apertar as teclas para cima e para baixo no teclado. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Buttons and Keys_2018: Faça com que o programa responda da mesma maneira tanto para clicar em imagens na tela quanto para apertar as teclas para cima e para baixo no teclado. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Buttons and Keys_2019: Faça com que o programa responda da mesma maneira tanto para clicar em imagens na tela quanto para apertar as teclas para cima e para baixo no teclado. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Demo App: Brinque com a barra de rolar imagem. Pressione as setas para a esquerda e para a direita para avançar pelas imagens.
      CSPU5_U3 - Keys - Demo App_2018: Brinque com a barra de rolar imagem. Pressione as setas para a esquerda e para a direita para avançar pelas imagens.
      CSPU5_U3 - Keys - Demo App_2019: Brinque com a barra de rolar imagem. Pressione as setas para a esquerda e para a direita para avançar pelas imagens.
      CSPU5_U3 - Keys - Final Image Scroller: Atualize o scroller de imagem para responder a botões e a digitar de teclas. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Functions: Escreva funções facaSetaParaCima e facaSetaParaBaixo e chame as funções ao invés de duplicar o código. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Functions_2018: Escreva funções facaSetaParaCima e facaSetaParaBaixo e chame as funções ao invés de duplicar o código. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Functions_2019: Escreva funções facaSetaParaCima e facaSetaParaBaixo e chame as funções ao invés de duplicar o código. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Key Up and Down: Experimente os eventos de soltar tecla e pressionar tecla para ver como eles são diferentes de apertar tecla. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Key Up and Down_2018: Experimente os eventos de soltar tecla e pressionar tecla para ver como eles são diferentes de apertar tecla. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Key Up and Down_2019: Experimente os eventos de soltar tecla e pressionar tecla para ver como eles são diferentes de apertar tecla. (Clique para ver as instruções completas)
      CSPU5_U3 - Keys - Multiple Keys: Toque um som diferente quando a seta para baixo for pressionada (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Keys - Multiple Keys_2018: Toque um som diferente quando a seta para baixo for pressionada (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Keys - Multiple Keys_2019: Toque um som diferente quando a seta para baixo for pressionada (Clique aqui para ver todas as instruções)
      CSPU5_U3 - Loops -  Complex Condition: Altere a expressão booleana para o laço while de forma que ele irá parar quando ambos dados forem maiores que ou iguais a 5. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops -  Complex Condition_2018: Altere a expressão booleana para o laço while de forma que ele irá parar quando ambos dados forem maiores que ou iguais a 5. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops -  Complex Condition_2019: Altere a expressão booleana para o laço while de forma que ele irá parar quando ambos dados forem maiores que ou iguais a 5. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 1: Altere a condição para o laço while para checar se a variável num é menor do que 90. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 10: Escreva um programa que simule a rolagem de 2 dados. Role os dados repetidamente até a soma dos dados ser 7 ou 11.
      CSPU5_U3 - Loops - 10_2018: Escreva um programa que simule a rolagem de 2 dados. Role os dados repetidamente até a soma dos dados ser 7 ou 11.
      CSPU5_U3 - Loops - 10_2019: Escreva um programa que simule a rolagem de 2 dados. Role os dados repetidamente até a soma dos dados ser 7 ou 11.
      CSPU5_U3 - Loops - 11: Conserte a condição para que continue rolando o dado enquanto o valor não for um 2 ou um 3 ao invés de rolar infinitamente. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 11_2018: Conserte a condição para que continue rolando o dado enquanto o valor não for um 2 ou um 3 ao invés de rolar infinitamente. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 11_2019: Conserte a condição para que continue rolando o dado enquanto o valor não for um 2 ou um 3 ao invés de rolar infinitamente. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 12: Altere o código para que imprima a string "Oi" 5 vezes. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 12_2018: Altere o código para que imprima a string "Oi" 5 vezes. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 12_2019: Altere o código para que imprima a string "Oi" 5 vezes. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 14: Altere a condição do laço para evitar o laço infinito e pare a contagem quando o contador passar de 30. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 14_2018: Altere a condição do laço para evitar o laço infinito e pare a contagem quando o contador passar de 30. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 14_2019: Altere a condição do laço para evitar o laço infinito e pare a contagem quando o contador passar de 30. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 15: Conte o número de vezes que a soma dos dados é 12. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 15_2018: Conte o número de vezes que a soma dos dados é 12. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 15_2019: Conte o número de vezes que a soma dos dados é 12. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 1_2018: Altere a condição para o laço while para checar se a variável num é menor do que 90. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 1_2019: Altere a condição para o laço while para checar se a variável num é menor do que 90. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 2: Tente criar um laço infinito usando !=, > e <. (Clique para ver todas as instruções)
      CSPU5_U3 - Loops - 2_2018: Tente criar um laço infinito usando !=, > e <. (Clique para ver todas as instruções)
      CSPU5_U3 - Loops - 2_2019: Tente criar um laço infinito usando !=, > e <. (Clique para ver todas as instruções)
      CSPU5_U3 - Loops - 3: Mude a condição "se" para uma repetição "enquanto" para que o programa execute até que role um 6. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 3_2018: Mude a condição "se" para uma repetição "enquanto" para que o programa execute até que role um 6. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 3_2019: Mude a condição "se" para uma repetição "enquanto" para que o programa execute até que role um 6. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 4: Use os Comandos de Análise para fazer uma lista de todos os valores que rolaram antes um 6. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 4_2018: Use os Comandos de Análise para fazer uma lista de todos os valores que rolaram antes um 6. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 4_2019: Use os Comandos de Análise para fazer uma lista de todos os valores que rolaram antes um 6. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - 5: Adicione código dentro do loop enquanto, que atualizará a variável num para que a condição acabe se tornando falsa. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 5_2018: Adicione código dentro do loop enquanto, que atualizará a variável num para que a condição acabe se tornando falsa. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 5_2019: Adicione código dentro do loop enquanto, que atualizará a variável num para que a condição acabe se tornando falsa. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 6: Corrija o problema para que o loop seja executado pelo menos uma vez. Altere o valor inicial de num para um valor fictício, como -1. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 6_2018: Corrija o problema para que o loop seja executado pelo menos uma vez. Altere o valor inicial de num para um valor fictício, como -1. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 6_2019: Corrija o problema para que o loop seja executado pelo menos uma vez. Altere o valor inicial de num para um valor fictício, como -1. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 7: Sem adicionar linhas de código, reordene o código para que ele imprima todos os valores de num. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 7_2018: Sem adicionar linhas de código, reordene o código para que ele imprima todos os valores de num. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 7_2019: Sem adicionar linhas de código, reordene o código para que ele imprima todos os valores de num. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 8: Depure qual número não está sendo impresso e inclua uma instrução de gravação para exibir esse valor. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 8_2018: Depure qual número não está sendo impresso e inclua uma instrução de gravação para exibir esse valor. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 8_2019: Depure qual número não está sendo impresso e inclua uma instrução de gravação para exibir esse valor. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - 9: " Modifique a condição para que ele continue rolando, desde que ambos sejam menores que 3. (Clique para ver as instruções completas)"
      CSPU5_U3 - Loops - 9_2018: " Modifique a condição para que ele continue rolando, desde que ambos sejam menores que 3. (Clique para ver as instruções completas)"
      CSPU5_U3 - Loops - 9_2019: " Modifique a condição para que ele continue rolando, desde que ambos sejam menores que 3. (Clique para ver as instruções completas)"
      CSPU5_U3 - Loops - Minus Minus: Altere o código para contar decrescentemente de 10 para 1. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Minus Minus_2018: Altere o código para contar decrescentemente de 10 para 1. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Minus Minus_2019: Altere o código para contar decrescentemente de 10 para 1. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Plus Plus: Altere o código para usar count++ em vez de count = count + 1. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Plus Plus_2018: Altere o código para usar count++ em vez de count = count + 1. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Plus Plus_2019: Altere o código para usar count++ em vez de count = count + 1. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Typing in Console: Use o console para verificar o valor final de num. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Typing in Console_2018: Use o console para verificar o valor final de num. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - Typing in Console_2019: Use o console para verificar o valor final de num. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops - minus = operator: Atualize o código para usar o operador -= para contar de 30 a 0 por 3 segundos. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - minus = operator_2018: Atualize o código para usar o operador -= para contar de 30 a 0 por 3 segundos. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - minus = operator_2019: Atualize o código para usar o operador -= para contar de 30 a 0 por 3 segundos. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - plus and minus = operator: Atualize o código para usar o operador +=. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - plus and minus = operator_2018: Atualize o código para usar o operador +=. (Clique para ver instruções completas)
      CSPU5_U3 - Loops - plus and minus = operator_2019: Atualize o código para usar o operador +=. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Add 5: Some 5 a todos os valores em um vetor (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Add 5_2018: Some 5 a todos os valores em um vetor (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Add 5_2019: Some 5 a todos os valores em um vetor (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Counting Times: Conte o número de vezes que o 5 aparece em um vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Counting Times_2018: Conte o número de vezes que o 5 aparece em um vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Counting Times_2019: Conte o número de vezes que o 5 aparece em um vetor. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Divid by 2: Divida cada valor no vetor por 2. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Divid by 2_2018: Divida cada valor no vetor por 2. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Divid by 2_2019: Divida cada valor no vetor por 2. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Find Min: Complete a função findMinVal para localizar e exibir o menor valor em um array (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Find Min_2018: Complete a função findMinVal para localizar e exibir o menor valor em um array (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Find Min_2019: Complete a função findMinVal para localizar e exibir o menor valor em um array (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - General Search Param: Adicione um segundo parâmetro à função de pesquisa para o valor a ser pesquisado. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - General Search Param_2018: Adicione um segundo parâmetro à função de pesquisa para o valor a ser pesquisado. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - General Search Param_2019: Adicione um segundo parâmetro à função de pesquisa para o valor a ser pesquisado. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Intro For Loop: Adicione um laço for com um console.log dentro e teste as 3 partes do laço for. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Intro For Loop_2018: Adicione um laço for com um console.log dentro e teste as 3 partes do laço for. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Intro For Loop_2019: Adicione um laço for com um console.log dentro e teste as 3 partes do laço for. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Linear Search: Visite todos os elementos da matriz e exiba "verdadeiro" se o valor for 5, e "falso" caso contrário. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Linear Search_2018: Visite todos os elementos da matriz e exiba "verdadeiro" se o valor for 5, e "falso" caso contrário. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Linear Search_2019: Visite todos os elementos da matriz e exiba "verdadeiro" se o valor for 5, e "falso" caso contrário. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Loop Array If: Use uma declaração Se para exibir apenas os valores na matriz que são maiores que 5. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Loop Array If_2018: Use uma declaração Se para exibir apenas os valores na matriz que são maiores que 5. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Loop Array If_2019: Use uma declaração Se para exibir apenas os valores na matriz que são maiores que 5. (Clique para ver as instruções completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list param_2018: Crie uma função que receba uma lista de parâmetros e imprima se a lista contiver um 5. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list param_2019: Crie uma função que receba uma lista de parâmetros e imprima se a lista contiver um 5. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list parameter: Crie uma função que receba uma lista de parâmetros e imprima se a lista contiver um 5. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function: Mova o código que pesquisa a lista por um 5 em uma função chamada "pesquisa". (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function_2018: Mova o código que pesquisa a lista por um 5 em uma função chamada "pesquisa". (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Make it a Function_2019: Mova o código que pesquisa a lista por um 5 em uma função chamada "pesquisa". (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Print Array: Use um laço for para imprimir todos os valores em um array. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Print Array_2018: Use um laço for para imprimir todos os valores em um array. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Print Array_2019: Use um laço for para imprimir todos os valores em um array. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Printing Single True: Processe o array e exiba um único "verdadeiro" se o array contiver um 5 ou um único "falso" caso não tenha. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Printing Single True_2018: Processe o array e exiba um único "verdadeiro" se o array contiver um 5 ou um único "falso" caso não tenha. (Clique para ver instruções completas)
      CSPU5_U3 - Loops And Arrays - Printing Single True_2019: Processe o array e exiba um único "verdadeiro" se o array contiver um 5 ou um único "falso" caso não tenha. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - constrainTurtle: Use restrições neste aplicativo simples para evitar que a tartaruga saia da tela. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - constrainTurtle_2018: Use restrições neste aplicativo simples para evitar que a tartaruga saia da tela. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - constrainTurtle_2019: Use restrições neste aplicativo simples para evitar que a tartaruga saia da tela. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - debuggingConstrain: Corrija o erro na restrição para que ele retorne o valor apropriado. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - debuggingConstrain_2018: Corrija o erro na restrição para que ele retorne o valor apropriado. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - debuggingConstrain_2019: Corrija o erro na restrição para que ele retorne o valor apropriado. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - debuggingMaxVal: Corrija o erro no maxVal para que ele reporte corretamente o valor máximo. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - debuggingMaxVal_2018: Corrija o erro no maxVal para que ele reporte corretamente o valor máximo. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - debuggingMaxVal_2019: Corrija o erro no maxVal para que ele reporte corretamente o valor máximo. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - useMinVal: Chame minVal dentro da instrução console.log para calcular o mínimo de dois valores. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - useMinVal_2018: Chame minVal dentro da instrução console.log para calcular o mínimo de dois valores. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - useMinVal_2019: Chame minVal dentro da instrução console.log para calcular o mínimo de dois valores. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - writeMaxVal: Escreva a função maxVal e use-a na instrução console.log para calcular o máximo de dois valores. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - writeMaxVal_2018: Escreva a função maxVal e use-a na instrução console.log para calcular o máximo de dois valores. (Clique para ver instruções completas)
      CSPU5_U3 - Return Values - writeMaxVal_2019: Escreva a função maxVal e use-a na instrução console.log para calcular o máximo de dois valores. (Clique para ver instruções completas)
      CSPU5_U3 - User Input - Save getText To Variable: Salve a idade e o nome do usuário em variáveis (clique para ver as instruções completas)
      CSPU5_U3 - User Input - Save getText To Variable_2018: Salve a idade e o nome do usuário em variáveis (clique para ver as instruções completas)
      CSPU5_U3 - User Input - Save getText To Variable_2019: Salve a idade e o nome do usuário em variáveis (clique para ver as instruções completas)
      CSPU5_U3 Digital Assistant Target: Experimente uma demonstração do Assistente Digital!
      CSPU5_U3-Design Mode-ID and Event Handler: Adicione um manipulador de eventos para o botão usando o link "Inserir e Visualizar" na aba de Eventos de Modo de Design (clique para ver as instruções completas).
      CSPU5_U3-Design Mode-Image: Recrie o "Jogo do Caçador" da última lição usando o Modo Design. (Clique para ver as instruções completas).
      CSPU5_U313 Two Buttons with Ids: "Sua vez de tentar! Fornecemos a você um\ncódigo inicial com dois botões e dois manipuladores de evento na tela, mas deixamos\nos Ids padrões de \"id\". Você precisa alterar esses ids para conectar\no manipulador de eventos ao botão correto. (Curiosamente, o programa\nincorreto funciona, mas ele tem um comportamento bizarro. Vamos discutir mais\nsobre isso na próxima lição. Por enquanto, faça os botões funcionarem corretamente)."
      CSPU5_U313 drag Two Buttons: Execute um programa com dois botões que possuem o mesmo id para ver a mensagem de aviso no console. Altere os ids para fazer o programa funcionar sem receber uma mensagem de aviso.
      CSPU5_U3L13 - Debug Id Problem: "Esse programa tem um problema! Você pode descobrir\nqual? Execute o programa e veja se você pode descobrir a partir das mensagens de erro\nno console qual é o problema. Não há muito código para ver, então você deve ser capaz\nde descobrir o problema simplesmente lendo o código com atenção. Faça uma alteração\nque permita que o programa funcione como esperado."
      CSPU5_U3L13 - Debugging 1: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Debugging 2: Analise o programa ordenando corretamente seus botões de comandos e manipuladores de eventos. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Debugging 3: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Debugging 3_2018: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Debugging 3_2019: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Debugging IDs case sensitive: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Debugging IDs case sensitive_2018: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Debugging IDs case sensitive_2019: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      CSPU5_U3L13 - Project: Crie seu app com várias telas (clique para ver as instruções completas).
      CSPU5_U3L13 - Turtle Driver Project: "Desafio: crie uma \"tartaruga motorista\"\ncom pelo menos três botões na tela para mover a tartaruga para a frente e\nvirá-la para a direita e para a esquerda. Se quiser, você pode copiar/colar de um nível anterior,\nmas você vai exercitar seus músculos de programação se criar\nesse pequeno programa desde o início. Se tiver tempo, adicione botões extras! Você\ntambém pode se divertir alterando os parâmetros nas funções da tartaruga, usando cores,\netc."
      CSPU5_U3L13 - Turtle move with button: "Arraste um botão para fora da tela e\ndefina seu texto como \"Vá em frente!\". Adicione um manipulador de eventos para o botão que\nfaz a tartaruga se mover para a frente. Execute o programa para ver se ele funciona. "
      CSPU5_U3L14 - User Input Division calculator: Escreva um programa que atue como uma calculadora simples. (clique aqui para ver todas as instruções)
      CSPU5_U3L14 - User Input Division calculator_2018: Escreva um programa que atue como uma calculadora simples. (clique aqui para ver todas as instruções)
      CSPU5_U3L14 - User Input Division calculator_2019: Escreva um programa que atue como uma calculadora simples. (clique aqui para ver todas as instruções)
      CSPU5_U3L16 - challenge say hi app: Escreva uma saudação para o usuário quando eles clicarem em 'entrar' no texto de entrada, usando o evento 'mudança'. (Clique para ver as instruções completas)
      CSPU5_U3L16 - intro getText: Adicione um manipulador de eventos para o botão Submeter para que quando o botão é clicado, ele irá exibir o nome digitado da caixa de texto no console.  Use getText para obter o valor da caixa de texto. (Clique para ver as instruções completas)
      CSPU5_U3L16 - intro getText_2018: Adicione um manipulador de eventos para o botão Submeter para que quando o botão é clicado, ele irá exibir o nome digitado da caixa de texto no console.  Use getText para obter o valor da caixa de texto. (Clique para ver as instruções completas)
      CSPU5_U3L16 - intro getText_2019: Adicione um manipulador de eventos para o botão Submeter para que quando o botão é clicado, ele irá exibir o nome digitado da caixa de texto no console.  Use getText para obter o valor da caixa de texto. (Clique para ver as instruções completas)
      CSPU5_U3L16 - newEventTypes: Experimente tipos de eventos diferentes e selecione qual deles você acha melhor. (Clique aqui para ver todas as instruções)
      CSPU5_U3L16 - outputWithTextArea: Mostre uma mensagem na 'textArea' (clique para ver as instruções completas)
      CSPU5_U3L16 - outputWithTextArea_2018: Mostre uma mensagem na 'textArea' (clique para ver as instruções completas)
      CSPU5_U3L16 - outputWithTextArea_2019: Mostre uma mensagem na 'textArea' (clique para ver as instruções completas)
      CSPU5_U3L16 - setPosition to fixed location: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_U3L16 - setPosition to move button: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_U3L16 - setPosition to move button_2018: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_U3L16 - setPosition to move button_2019: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_U3L16 - singleSetPosition: Mova o botão para o meio da tela. (Clique aqui para ver todas as instruções)
      CSPU5_U3L16 - text labels: "Introdução de textLabels.  Primeiro, tente substituir\nseu botão por um textLabel.  O texto vai responder a eventos da mesma forma que o\nbotão?  Tente conectá-lo a um manipulador de eventos. Fornecemos um código\ninicial similar ao resultado do último nível, então você pode copiar o código do\núltimo nível aqui se você preferir. "
      CSPU5_U3L16 - textInput getText write: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      CSPU5_U3L16 - textInput getText write_2018: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      CSPU5_U3L16 - textInput getText write_2019: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      CSPU5_U3L16 - toUpper: Faça o nome do usuário aparecer em maiúsculo (Clique para ver as instruções completas)
      CSPU5_U3L16 - toUpper_2018: Faça o nome do usuário aparecer em maiúsculo (Clique para ver as instruções completas)
      CSPU5_U3L16 - toUpper_2019: Faça o nome do usuário aparecer em maiúsculo (Clique para ver as instruções completas)
      CSPU5_U3L19 - fix the var name syntax error v2: "Demos a você um trecho de código\ncom um erro. Ele não reconhece a variável. Você consegue descobrir o motivo? Conserte\no erro e execute o programa. Observe também a mensagem de erro, já que ela\npode aparecer em algum momento da sua vida.\\r\n\\r\n"
      CSPU5_U3L19 - fix the var name syntax error v2_2018: "Demos a você um trecho de código\ncom um erro. Ele não reconhece a variável. Você consegue descobrir o motivo? Conserte\no erro e execute o programa. Observe também a mensagem de erro, já que ela\npode aparecer em algum momento da sua vida.\\r\n\\r\n"
      CSPU5_U3L19 - fix the var name syntax error v2_2019: "Demos a você um trecho de código\ncom um erro. Ele não reconhece a variável. Você consegue descobrir o motivo? Conserte\no erro e execute o programa. Observe também a mensagem de erro, já que ela\npode aparecer em algum momento da sua vida.\\r\n\\r\n"
      CSPU5_U3L19 - three basic ops of variables: "Faça o seguinte:\\r\nDemos a você\ntrês linhas de código mostradas na página anterior. Adicione três linhas de\ncódigo abaixo das mostradas aqui para criar sua própria variável, atribuir um\nvalor a ela e escrevê-la na tela.  OBSERVAÇÃO: altere o nome da variável de\nx para alguma outra coisa.\\r\n"
      CSPU5_U3L19 - three basic ops of variables_2018: "Faça o seguinte:\\r\nDemos a você\ntrês linhas de código mostradas na página anterior. Adicione três linhas de\ncódigo abaixo das mostradas aqui para criar sua própria variável, atribuir um\nvalor a ela e escrevê-la na tela.  OBSERVAÇÃO: altere o nome da variável de\nx para alguma outra coisa.\\r\n"
      CSPU5_U3L19 - three basic ops of variables_2019: "Faça o seguinte:\\r\nDemos a você\ntrês linhas de código mostradas na página anterior. Adicione três linhas de\ncódigo abaixo das mostradas aqui para criar sua própria variável, atribuir um\nvalor a ela e escrevê-la na tela.  OBSERVAÇÃO: altere o nome da variável de\nx para alguma outra coisa.\\r\n"
      CSPU5_U3L25 - drag out key event: Crie um manipulador de eventos para responder aos eventos de apertar tecla e exibir event.key no console. Aperte as teclas do teclado para ver o que acontece. (Clique para ver as instruções completas)
      CSPU5_U3L25 - drag out key event_2018: Crie um manipulador de eventos para responder aos eventos de apertar tecla e exibir event.key no console. Aperte as teclas do teclado para ver o que acontece. (Clique para ver as instruções completas)
      CSPU5_U3L25 - drag out key event_2019: Crie um manipulador de eventos para responder aos eventos de apertar tecla e exibir event.key no console. Aperte as teclas do teclado para ver o que acontece. (Clique para ver as instruções completas)
      CSPU5_U3L25 - play sound when up key: Modifique o código para que o som só seja tocado quando a seta para cima for pressionada (Clique aqui para ver todas as instruções)
      CSPU5_U3L25 - play sound when up key_2018: Modifique o código para que o som só seja tocado quando a seta para cima for pressionada (Clique aqui para ver todas as instruções)
      CSPU5_U3L25 - play sound when up key_2019: Modifique o código para que o som só seja tocado quando a seta para cima for pressionada (Clique aqui para ver todas as instruções)
      CSPU5_addDescriptiveIDsToTurtleDriver: "Esse programa tem um problema! Você pode descobrir\nqual? Execute o programa e veja se você pode descobrir a partir das mensagens de erro\nno console qual é o problema. Não há muito código para ver, então você deve ser capaz\nde descobrir o problema simplesmente lendo o código com atenção. Faça uma alteração\nque permita que o programa funcione como esperado."
      CSPU5_addDescriptiveIDsToTurtleDriver_2018: "Esse programa tem um problema! Você pode descobrir\nqual? Execute o programa e veja se você pode descobrir a partir das mensagens de erro\nno console qual é o problema. Não há muito código para ver, então você deve ser capaz\nde descobrir o problema simplesmente lendo o código com atenção. Faça uma alteração\nque permita que o programa funcione como esperado."
      CSPU5_addDescriptiveIDsToTurtleDriver_2019: "Esse programa tem um problema! Você pode descobrir\nqual? Execute o programa e veja se você pode descobrir a partir das mensagens de erro\nno console qual é o problema. Não há muito código para ver, então você deve ser capaz\nde descobrir o problema simplesmente lendo o código com atenção. Faça uma alteração\nque permita que o programa funcione como esperado."
      CSPU5_playWithEventTypes: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      CSPU5_playWithEventTypes_2018: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      CSPU5_playWithEventTypes_2019: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      CSPU5_setPosition to fixed location: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_setPosition to fixed location_2018: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_setPosition to fixed location_2019: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      CSPU5_turtleDriver_add2ndButton: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      CSPU5_turtleDriver_add2ndButton_2018: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      CSPU5_turtleDriver_add2ndButton_2019: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      Calc Circles of Eval .1: "Você vai escrever um tipo de código chamado\nBloco de cálculo, porque cada bloco de código retorna um único valor.\nAltere o ??? nesse código para que o bloco retorne 5."
      Calc Circles of Eval .2: "Esse bloco de cálculo é uma função\nde multiplicação que recebe dois números e retorna o produto desses números.\nEdite esse bloco para que ele multiplique 2 * 5"
      Calc Circles of Eval .3: "Esta é uma função de Adição que\nusa dois números e retorna sua soma. Use este bloco Adição para somar 3\n+ 6."
      Calc Circles of Eval .4: "Temos aqui um bloco de adição aninhado\ndentro de um bloco de multiplicação. Complete esse código para que ele multiplique 3 por (4\n+ 1)"
      Calc Circles of Eval 1 (copy 1): "Converta essa instrução para <alguma_forma>\nde cálculo."
      Calc Circles of Eval 1: "Todo operador matemático (+, -, *,\n/, e assim por diante) pode ser representado por um bloco de cálculo. Altere o\nbloco de cálculo para associá-lo à expressão."
      Calc Circles of Eval 2 (copy 1): "Converta essa instrução para <alguma_forma>\nde cálculo."
      Calc Circles of Eval 2: "Use um bloco de multiplicação para completar\nesse código."
      Calc Circles of Eval 3: "Complete os blocos de cálculo para corresponder\na essa instrução."
      Calc Circles of Eval 4: "Nesse código estão faltando alguns blocos de\ncálculo - lembre-se de colocar tudo na ordem correta."
      Calc Circles of Eval 5: "Complete os blocos de cálculo para corresponder\na essa instrução."
      Calc Circles of Eval 6: "Complete os blocos de cálculo para corresponder\na essa expressão."
      Calc Circles of Eval 7: "Complete os blocos de cálculo para corresponder\na essa instrução."
      Calc Circles of Eval 8: "Complete os blocos de cálculo para corresponder\na essa instrução."
      Calc Circles of Eval 9: "Complete os blocos de cálculo para corresponder\na essa instrução."
      Calc Circles of Eval Free Play: "Atividade livre: tente usar um bloco de cálculo\npara escrever algumas equações você mesmo. Como aninhar os blocos de\nformas diferentes interfere no cálculo?"
      Calc Define Funcs 1 (copy 1): "Agora, vamos ver mais algumas funções\nalgébricas. Temos aqui uma função traduzida a partir de uma função algébrica simples\nf(x) = x + 1. O que você poderia esperar como saída dessa função se fosse fornecida uma\nentrada de 15?"
      Calc Define Funcs 1: "Agora, vamos olhar para algumas funções algébricas\nmais tradicionais. Temos aqui uma função traduzida da função algébrica simples\nf(x) = x + 1. O que você esperaria como saída dessa função se fosse fornecida uma\nentrada de 15?"
      Calc Define Funcs 2: "Escreva uma função \"f\" que recebe um parâmetro\n\"x\" e retorna x - 10. Teste sua função usando f(15)."
      Calc Define Funcs 3: "Não precisamos chamar nossa função \"f\"\ntoda vez. Crie uma função chamada \"vezes-dez\" que deve receber um parâmetro\n\"x\" e retornar x * 10. Quando você criar a função, execute vezes-dez(50)."
      Calc Define Funcs 4: "Escreva uma função chamada \"metade\" que recebe\num número \"x\" e retorna metade desse número. Quando você escrever a função,\nuse-a para calcular metade(21)"
      Calc Design Recipe 1: "Vamos usar a receita de design para criar uma\nfunção chamada \"cubo\" - essa função deve ter um domínio de número, uma imagem\nde número e retornar o número dado elevado à terceira potência. Lembre-se de escrever\ndois casos de exemplo! Quando você terminar, use sua nova função para calcular 7\nelevado ao cubo."
      Calc Design Recipe 2: |-
        Sua escola está promovendo uma venda de cookies e
        você precisa controlar o custo de produção de cada cookie, o dinheiro pago e o
        lucro total. Os cookies custam R$0,25 cada para produzir, e são vendidos por R$1,50/cookie.\r
        Escreva
        a função `custo`, que recebe o número de cookies que você pretende vender
        e retorna o custo de produção desses cookies.
      Calc Design Recipe 3: |-
        Escreva a função `vendas` que recebe o
        número de cookies vendidos e retorna a quantidade de dinheiro que os clientes gastaram
        para comprar esses cookies (cada cookie é vendido por R$1,50).
      Calc Design Recipe 4: |-
        Usando as duas funções que acabamos de escrever, escreva
        a função `lucro`, que recebe o número de cookies que você vendeu e
        retorna o lucro total que você obteve com a venda dos cookies, levando em conta
        o custo para produzi-los.
      Calc Free Play: "Atividade livre: escreva funções e algoritmos com seu\npróprio design!"
      Calc Rocket 1 (copy 1): "No último desafio você escreveu um contrato\npara a função \"altura-foguete\" que diz que ela tem uma imagem numérica, um domínio\nnumérico, e deve retornar a altura do foguete viajando a 15 m/s\napós um dado número de segundos. Agora vamos escrever um caso de exemplo para a\naltura do foguete em 3 segundos.\\r\n\\r\n\\r\n\\r\n  \\r\n\\r\n"
      Calc Rocket 1: "No último desafio você escreveu um contrato para a\nfunção \"altura-foguete\" que tem um domínio numérico, uma imagem\nnumérica, e deve retornar a altura do foguete que viaja a 15 m/s após\num dado número de segundos. Agora, vamos escrever um caso de exemplo para a altura\ndo foguete em 3 segundos.\\r\n\\r\n\\r\n\\r\n\\r\n  \\r\n\\r\n"
      Calc Rocket 2: "Excelente, vamos fazer mais um exemplo antes de escrever\na função - qual deve ser a altura do foguete após 30 segundos?"
      Calc Vars 1.1: "Aqui, definimos a variável \"idade\" como 17 anos.\nVocê consegue escrever uma expressão que calcula \"idade\" em dias?"
      Calc Vars 1: "As variáveis nos permitem dar nome a valores para que possamos\nfacilmente nos referir a eles repetidamente ao longo dos nossos programas. Temos aqui uma\nvariável chamada \"idade\". Defina seu valor como sua idade e clique em Executar."
      Calc Vars 2 (copy 1): "Aqui, definimos a variável \"idade\" como\n17 - você pode escrever uma expressão que calcula \"idade\" em meses?"
      Calc Vars 2.1: "Aqui temos uma variável chamada \"idade-em-meses\"\n- use a variável \"idade\" para definir \"idade-em-meses\""
      Calc Vars 2: "Você pode escrever uma expressão que calcula \"idade\"\nem meses?"
      Calc Vars 3 (copy 1): "Você pode fazer uma adição a esse código para que ele calcule\nquantas horas há em \"idade\" anos?"
      Calc Vars 3: "Você pode fazer uma adição a esse código para que ele use a variável \"idade\"\npara calcular a idade em horas?"
      Calc Vars 4: "Também podemos definir variáveis usando outras variáveis.\nVamos supor que você tenha um irmão que é dois anos mais novo que você - você pode\ndefinir uma nova variável \"idade-irmão\" usando sua variável \"idade\"?"
      Code Studio Puzzle Challenge 1 - Artist: "Desenhe a reta. Ela tem 200\npixels de comprimento. "
      Code Studio Puzzle Challenge 1 Artist1: "Desenhe a reta. Ela tem 200\npixels de comprimento. "
      Code Studio Puzzle Challenge 10 - Bee (copy 1): "Mova a abelha até a flor\ne colete todo o néctar."
      Code Studio Puzzle Challenge 10 - Bee: "Mova a abelha até a flor\ne colete todo o néctar."
      Code Studio Puzzle Challenge 10b - Bee: "Mova a abelha até as flores\ne colete todo o néctar de cada uma."
      Code Studio Puzzle Challenge 11 - Artist: "Desenhe essa reta usando\na variável \"comprimento\". Cada segmento de reta tem 75 pixels de comprimento."
      Code Studio Puzzle Challenge 11b - Artist: "Desenhe um quadrado\nusando a variável comprimento fornecida."
      Code Studio Puzzle Challenge 12 - Artist: "O código fornecido desenha\num triângulo. Faça uma adição para que ele desenhe triângulos em um padrão de hexágono."
      Code Studio Puzzle Challenge 12a - Artist: "O código fornecido desenha\num triângulo. Faça uma adição para que ele desenhe triângulos em um padrão de hexágono."
      Code Studio Puzzle Challenge 13 - Artist: "Isso é como um\nlaço \"para\". Complete o código para desenhar seis retas que crescem de 50, 60, 70,\n80, 90, até 100 pixels de comprimento. "
      Code Studio Puzzle Challenge 14 - Artist: "Isso é como um\nlaço \"para\". Complete o laço para desenhar 4 quadrados que crescem de 80, 100,\n120, até 140 pixels. "
      Code Studio Puzzle Challenge 2 - Artist: "Agora, adicione uma ação de virar e outra\nreta. As retas têm 200 pixels de comprimento."
      Code Studio Puzzle Challenge 3 - Artist: "Desenhe o quadrado. Cada\nlado tem 100 pixels de comprimento."
      Code Studio Puzzle Challenge 4 - Artist: "Desenhe o octógono. Cada\nlado tem 100 pixels de comprimento."
      Code Studio Puzzle Challenge 5 - Bee (copy 1): "Mova a abelha até a flor\ne colete o néctar."
      Code Studio Puzzle Challenge 5 - Bee: "As flores contêm uma quantidade\nespecífica de néctar. Mova a abelha até a flor e colete o néctar com o bloco\nobtenha néctar."
      Code Studio Puzzle Challenge 6 - Bee: "As colmeias podem guardar uma quantidade\nespecífica de mel. Colete o néctar da flor e produza um pouco de mel."
      Code Studio Puzzle Challenge 7 - Bee: "Mova a abelha até a flor\ne colete o néctar."
      Code Studio Puzzle Challenge 8 - Bee: "A nuvem pode estar escondendo\numa flor ou uma colmeia. Apenas colete néctar das flores. Apenas faça mel nas colmeias."
      Code Studio Puzzle Challenge 9 - Bee: "A nuvem pode estar escondendo\numa flor ou uma colmeia. Apenas colete néctar das flores. Apenas faça mel nas colmeias."
      Code Studio Puzzle Challenge Artist Screencast (copy 1): "Desenhe\na reta. Cada segmento tem 100 pixels de comprimento. "
      Code Studio Puzzle Challenge Artist Screencast 2: "Complete o\ncódigo para desenhar a reta. Cada segmento tem 100 pixels de comprimento. "
      Code Studio Puzzle Challenge Artist Screencast: "Desenhe\na reta. Cada segmento tem 100 pixels de comprimento. "
      Code Studio Puzzle Challenge Bee Screencast: "Mova a abelha até as\nflores e pegue todo o néctar."
      Code Studio Puzzle Challenge Square - Artist: "Desenhe um quadrado\nusando a variável comprimento fornecida."
      Code Studio Puzzle Challenge Var - Artist: "Desenhe uma reta usando\numa variável \"comprimento\" definida como 180."
      Course 2 Bee Loops 1: "Olá, eu sou uma abelha. Você pode me ajudar a coletar\no néctar dessas flores? "
      Course 2 Bee Loops 13: "Avaliação: use o bloco repita para coletar\ntodo o néctar."
      Course 2 Bee Loops 2: "Você consegue realizar a mesma tarefa mais facilmente\ncom um laço?"
      Course 2 Bee Loops 3: "Agora, use o novo bloco repita para coletar\ntodo o néctar e produzir todo o mel."
      Course 2 Bee Loops 3_: "Você consegue usar um laço para coletar todo\no néctar?"
      Course 2 Bee Loops 4: "O que acontece se você repetir esta sequência 3\nvezes? Não se esqueça de fazer o mel no final!"
      Course 2 Maze Loops 1: Você pode me levar até o porco usando 5 blocos?
      Course 4 2: "Agora a abelha só quer néctar. Lembre-se, nem\ntodos os objetos são flores, então faça a verificação para coletar néctar apenas das flores."
      Course 4 Artist 1: "Ajude-me a desenhar uma caixa. (Cada linha tem\n200 pixels de comprimento) "
      Course 4 Artist 10: |-
        Clique aqui para ver as instruções completas novamente!\r
        \r
        Apresentamos
        aqui um código para uma forma interessante. O que acontece quando você o repete várias
        vezes, virando a cada repetição? Observe que as viradas nessa forma
        somam 420 graus, o que significa que quando seu artista terminar de desenhar,
        ele estará de frente para uma direção diferente do que quando você começou. Essa nova direção
        é exatamente 60 graus à direita de onde você iniciou.
      Course 4 Artist 11: "Agora um desafio! Fique à vontade para usar tentativa\ne erro. Não esperamos que você seja perfeito na primeira vez. Quer\nver mais dicas? Clique aqui!"
      Course 4 Artist 12: |-
        Quer ver o design de inspiração ou as
        dicas? Clique aqui!\r
        \r
        Caso contrário, crie um design você mesmo!
      Course 4 Artist 13: "Ainda jogando?  Temos aqui uma tela em branco\nna qual você pode projetar o que quiser!"
      Course 4 Artist 2: "Você consegue usar um laço para desenhar o quadrado em cinza? (Cada\nlado mede 300 pixels de comprimento)"
      Course 4 Artist 20: "Ainda jogando?  Temos aqui uma tela em branco na qual\nvocê pode criar o que quiser!"
      Course 4 Artist 3: "Tente descobrir o que acontece se você executar\nesse código (ou clique em \"Executar\" para ver). Em seguida, execute-o várias vezes para completar\no desenho."
      Course 4 Artist 4: "How many degrees are in a circle?  Fill in\nthe repeat block with that number to create a circle of colors."
      Course 4 Artist 5: "Desenhe a outra metade desse design para que ele\nfique simétrico. Os triângulos são equiláteros e têm 50 pixels de comprimento. Dica:\ntalvez você precise executar o código várias vezes para descobrir quais blocos\nprecisam ser adicionados."
      Course 4 Artist 6: "Complete o código para desenhar esses três triângulos\nequiláteros."
      Course 4 Artist 7: "Agora, aninhe esse laço dentro de outro laço para desenhar\n10 triângulos. Isso se chama laço aninhado. Dica: todos os 10 triângulos completam\numa rotação de 360 graus.  "
      Course 4 Artist 8: "Desenhe esse sol repetindo todo este bloco de código\nvárias vezes."
      Course 4 Artist 8a: "Lembra-se dessa forma? Agora vamos deixar\nvocê construí-la sem dar nenhum bloco inicial!"
      Course 4 Artist 9: "Repita esse desenho 10 vezes e certifique-se de\nvirar a cada forma desenhada. \\r\n"
      Course 4 Artist Binary 1: "Temos aqui uma função que recebe uma string\nbinária de 1's e 0's e instrui o artista a mover-se da esquerda para\na direita, de cima para baixo. O artista vai preencher os quadrados nos quais vir um 1 e ignorar\nos que tiverem um 0.\\r\n\\r\nExecute este código para ver como\no artista usa números binários para desenhar este padrão."
      Course 4 Artist Binary 1a: "Temos aqui uma função que recebe uma string\nbinária de 1's e 0's e instrui o artista a mover-se da esquerda para\na direita, de cima para baixo. O artista vai preencher os quadrados nos quais vir um 1 e ignorar\nos que tiverem um 0.\\r\n\\r\nExecute este código para ver como\no artista usa números binários para desenhar este padrão."
      Course 4 Artist Binary 2: "Qual dessas strings binárias você poderia\nrepetir 8 vezes para desenhar esta imagem?"
      Course 4 Artist Binary 3: "Você consegue desenhar este padrão repetindo\napenas três dígitos binários? (0 e 1)?"
      Course 4 Artist Binary 4: "Cada string binária representa uma linha dessa\nimagem. Você consegue reorganizá-las de forma que elas desenhem um rostinho feliz\nao invés de um rostinho triste?"
      Course 4 Artist Binary 5: "Que string binária de 6 dígitos, repetida\n11 vezes, vai desenhar essa imagem?"
      Course 4 Artist Binary 6: "Qual é a menor string binária que você\npode repetir para desenhar esta imagem?"
      Course 4 Artist Binary 7: Termine o desenho.
      Course 4 Artist Binary Free Play 2: "Atividade livre: aqui temos uma tela em branco\npara você desenhar. Divirta-se!"
      Course 4 Artist Binary Free Play 2a: |-
        Temos aqui uma tela de maior
        resolução para desenhar - 16 pixels por 16 pixels!\r
        \r
        Você viu o que acontece quando
        começamos ser criativos com os bits?
      Course 4 Artist Binary Free Play 2b: Clique aqui para ver algumas dicas.
      Course 4 Artist Binary Free Play: "Atividade livre: desenhe o que quiser\ncom números binários!"
      Course 4 Artist Binary pre1: "Binário é uma forma de representar informações\nusando apenas duas opções. Aqui, vamos usar as opções \"desligado\" (representada\npelo número 0) e \"ligado\" (representada pelo número 1).  \\r\n\\r\nFoi fornecida\numa grade de \"pixels\" pela qual você pode andar e criar\ndesigns virando em certos quadrados. Você consegue fazer o artista desenhar\n\"01010101\" em binário na primeira fileira?"
      Course 4 Artist Binary ryan: "Binário é uma forma de representar informações\nusando apenas duas opções. Aqui, vamos usar as opções \"desligado\" (representada\npelo número 0) e \"ligado\" (representada pelo número 1).  \\r\n\\r\nFoi fornecida\numa grade de \"pixels\" pela qual você pode andar e criar\ndesigns virando em certos quadrados. Você consegue fazer o artista desenhar\n\"01010101\" em binário na primeira fileira?"
      Course 4 Artist For  Functions 10: "Vamos acelerar um pouco,\nvocê consegue desenhar uma forma de estrela usando a função \"desenhe uma linha de quadrados\"?\nBoa sorte!"
      Course 4 Artist For  Functions 11: "Vamos acelerar um pouco,\nvocê consegue desenhar uma forma de estrela usando a função \"desenhe uma linha de quadrados\"?\nBoa sorte!"
      Course 4 Artist For Loops 1: "Use um bloco \"repita\" para desenhar este triângulo\nque tem 50 pixels de largura."
      Course 4 Artist For Loops 10: "Atividade livre! Divirta-se desenhando\no que quiser com os blocos que você aprendeu a usar"
      Course 4 Artist For Loops 11: "Você se lembra de quando usamos\numa variável para controlar o número de lados de uma forma em uma fase anterior? Faremos\na mesma coisa com a variável \"contador\" agora. Esse padrão começa\ncom um triângulo e adiciona um lado de cada vez até que seja desenhado um decágono (10 lados).\nCada lado deve ter 100 pixels de comprimento. "
      Course 4 Artist For Loops 11a: |-
        Vamos juntar tudo!  Usando
        seu conhecimento sobre laços "para" e sobre variável "contador", crie este desenho
        no qual cada forma tem dois lados a mais que a anterior. Garanta que cada lado
        seja 10 vezes maior que o número de lados do polígono.\r
        \r
        Apenas uma pequena parte
        do código foi fornecida para você.
      Course 4 Artist For Loops 12: "Isso foi muito legal, mas agora\neu gostaria de desenhar uma forma do lado da outra. Desta vez, cada lado tem\n20 pixels. Use um bloco pule para avançar 40 pixels após cada forma. "
      Course 4 Artist For Loops 13: "Hmm, essas formas estão ficando cada vez\nmaiores! Já não tínhamos resolvido esse problema com variáveis? Como\npodemos usar a variável contador para deixar os lados menores conforme a forma tem\nmais lados? Ao invés de avançar por uma quantidade definida, avance (100 /\ncontador) pixels."
      Course 4 Artist For Loops 14: "Se você virar um pouco mais ou\num pouco menos do que normalmente faria para uma forma, você conseguirá um efeito legal. Tente\nusar algum código do último nível, mas virando 89 graus para criar\nesta espiral quadrada retorcida."
      Course 4 Artist For Loops 15: "Atividade livre: tente fazer alguns desenhos\nusando laços para. Adicionamos algumas variáveis genéricas para você\nusar também."
      Course 4 Artist For Loops 2: "Eu coloquei o código para desenhar\num triângulo dentro de um laço para que conta de 50 até 100, de 10 em 10. NOTA: Não deixe de ver\no código antes de clicar em \"Executar\"."
      Course 4 Artist For Loops 3: "Use o desafio anterior como referência\npara fazer este desafio. O menor triângulo tem lados de 20 pixels,\no maior tem lados de 200 pixels, e cada triângulo é 20 pixels maior que o anterior.\n"
      Course 4 Artist For Loops 4: "Use um laço \"para\" para desenhar esses quadrados.\nEles começam com 15 pixels de comprimento, o maior tem 300 pixels de comprimento, e cada quadrado\né 15 pixels maior que o anterior. Foi fornecida a maior parte do código\nde que você vai precisar - está faltando um bloco, qual?"
      Course 4 Artist For Loops 5: "Você fez um bom trabalho no último desafio!\nVamos usar o bloco da variável \"contador\" mais uma vez para desenhar esta imagem. "
      Course 4 Artist For Loops 6: "Atividade livre: tente usar um laço \"para\"\npara desenhar um padrão crescente de formas com seu próprio design."
      Course 4 Artist For Loops 6a: "Faça três pequenas alterações no\ncódigo do último nível para conseguir isso!"
      Course 4 Artist For Loops 7: "O que acontece se você remover \"Repita 3\"\ndesse algoritmo, mantendo os blocos \"mova\" e \"vire\" no laço\npara? Neste triângulo espiralado, cada lado é 20 pixels mais comprido que o anterior."
      Course 4 Artist For Loops 8: |-
        Apenas uma pequena alteração no código
        da última imagem pode criar este desenho. Você consegue descobrir qual é
        essa alteração?\r
        \r
        Dica: algo precisa ser removido!
      Course 4 Artist For Loops 8a: "Apenas uma pequena alteração no código\nda última imagem pode criar esta imagem. Você consegue descobrir qual é essa\nalteração?"
      Course 4 Artist For Loops 9: "Você consegue fazer uma espiral? Avance\nde 1 a 75 pixels, aumentando 1 pixel de cada vez."
      Course 4 Artist For Loops Challenge: "Você consegue descobrir como\nusar todas as coisas que você aprendeu para criar esta imagem?\\r\n\\r\nPrecisa de uma\ndica? Clique aqui."
      Course 4 Artist For Loops Challenge_a: |-
        Você consegue descobrir como
        usar todas as coisas que você aprendeu para criar esta imagem?\r
        \r
        Precisa de uma
        dica? Clique aqui.
      Course 4 Artist For Loops inspire: |-
        Atividade livre - Inspiração: agora você
        aprendeu tudo o que precisa saber para criar um padrão como esse! Se essa
        imagem inspira você, tente fazer algo similar. Caso contrário, crie algo
        você mesmo.\r
        \r
        Precisa de uma dica? Clique aqui.
      Course 4 Artist Functions 1: "Você consegue desenhar um quadrado com 100\npixels de comprimento usando um laço?"
      Course 4 Artist Functions 10: "Qual bloco você precisa adicionar para\nque o triângulo fique em cima do quadrado?"
      Course 4 Artist Functions 11: "Veja esse código para desenhar um\ncubo - você consegue movê-lo para dentro de uma função chamada \"desenhe um cubo\"?"
      Course 4 Artist Functions 12.1: "Vamos criar uma função chamada\n\"desenhe um octógono 20\" que desenha um octógono no qual cada lado tem 20 pixels\nde comprimento."
      Course 4 Artist Functions 12: Repita a função quadrado para desenhar uma reta
      Course 4 Artist Functions 13.1: |-
        Agora, vamos criar uma função chamada
        "pule para a parte superior direita" que move o artista para a parte superior direito do octógono
        que você acabou de desenhar para terminarmos esse padrão.\r
        \r
        Dica: para ir para o
        canto superior direito, tente usar um padrão que faz apenas 3/8 do
        octógono.
      Course 4 Artist Functions 13: "Confira nossa nova função\n\"desenhe uma linha de quadrados\". Fique à vontade para olhar dentro do bloco da função\ne ver como a construímos. Clique em \"Executar\" quando estiver pronto para o\npróximo desafio."
      Course 4 Artist Functions 14.1: "Agora, vamos criar uma função chamada\n\"pule para a parte superior direita\" que move o artista para a parte superior direita do octógono\nque você acabou de desenhar, assim podemos terminar esse padrão."
      Course 4 Artist Functions 14: "Excelente! Vamos usar\nsua nova função \"desenhe uma linha de quadrados\" para desenhar uma forma de quadrado. Lembre-se,\ncada quadrado tem 40 pixels de comprimento."
      Course 4 Artist Functions 15: 'Vamos acelerar um pouco, você consegue desenhar uma forma de estrela usando a função "desenhe uma linha de quadrados"? Boa sorte! Dica: você terá de virar 144 graus'
      Course 4 Artist Functions 2: "Você consegue desenhar 3 quadrados com 20 pixels de distância\nentre cada um? Dica: cada quadrado tem 100 pixels de tamanho"
      Course 4 Artist Functions 3: "Usando o bloco de função \"desenhe um quadrado\",\nvocê consegue desenhar esta imagem? Dica: os quadrados estão a 120 pixels de distância um do outro.\\r\n"
      Course 4 Artist Functions 4: "Você está pronto para criar seu próprio\n\"bloco de função\"? Clique no bloco \"Funções\" na caixa de ferramentas, nomeie-o\ncomo \"desenhe um triângulo\", e então crie um triângulo como você fez anteriormente\ncom os blocos de ação e de laços. Então, clique em salvar e fechar no canto\nsuperior direito. Dica: crie um triângulo que tenha 100 pixels de comprimento.\nBoa sorte!"
      Course 4 Artist Functions 5 OLD: "Vamos tentar usar nossas duas funções\npara desenhar uma casa - o que precisa ser corrigido neste código para desenhar a casa corretamente?"
      Course 4 Artist Functions 5: "Usando o bloco de função \"desenhe um quadrado\",\nvocê consegue desenhar esta imagem? Dica: os quadrados estão a 120 pixels de distância um do outro.\\r\n"
      Course 4 Artist Functions 6: "Qual bloco você precisa adicionar para\nque o triângulo fique em cima do quadrado?"
      Course 4 Artist Functions 7: "Você consegue desenhar uma linha de quadrados usando\numa função Quadrado? Cada quadrado tem 40 pixels de comprimento."
      Course 4 Artist Functions 8: "Você está pegando o jeito de como\nusar os blocos de função? Vamos modificar esse quadrado para que ele tenha 200 pixels\nde tamanho. Dica: clique em \"editar\" para alterar o tamanho de \"desenhe um quadrado\"\nno editor da função. Lembre-se de clicar em \"Salvar e Fechar\" para sair do\neditor da função. "
      Course 4 Artist Functions 9: "A maior parte do código para\ncriar uma função foi dada a você. Contudo, parece que algo está faltando. Você consegue\ncompletar este bloco de função?"
      Course 4 Artist Functions Inspiration: "Clique aqui para ver as dicas\nnovamente."
      Course 4 Artist Functions challenge: "Clique aqui para ver as dicas\nnovamente."
      Course 4 Artist Functions inspire: "Clique aqui para ver a figura\nde inspiração novamente."
      Course 4 Artist Inspire: |-
        Quer ver o design de inspiração ou as
        dicas? Clique aqui!\r
        \r
        Caso contrário, crie um design você mesmo!
      Course 4 Artist Params 1: "Vamos editar uma função que desenha um\nquadrado com lados de 50 pixels"
      Course 4 Artist Params 10: "Você pode chamar funções de dentro\nde outras funções! Usando sua função \"forma\" como base, crie 3 formas\nde casa, cada uma 20 pixels maior que a anterior, começando com um comprimento de 50 pixels. Usar\num laço com contador pode ser útil. "
      Course 4 Artist Params 11: "Que tal uma função chamada \"cata-vento\"\nque recebe três parâmetros - \"lados,\" \"comprimento\" e \"repita\"? Você pode\ncalcular o quanto virar depois de cada forma usando os mesmos cálculos que você usou\npara descobrir as ações de virar para uma forma de \"lados\". Você consegue recriar esta imagem?\nDica: cada forma tem 100 pixels de comprimento."
      Course 4 Artist Params 12: "Use sua função \"cata-vento\" para desenhar\ncada uma dessas formas. O comprimento do lado de cada imagem é 50."
      Course 4 Artist Params 13: "Atividade livre: aqui estão as funções que você escreveu\ne mais algumas com as quais você pode brincar. Desenhe alguma coisa incrível!"
      Course 4 Artist Params 2: "Essa função triângulo seria muito mais útil\nse pudesse desenhar triângulos de tamanhos diferentes. Foi adicionado\num parâmetro para o comprimento da reta, mas ele ainda não faz coisa alguma. Você pode atualizar\na função para que ela use o parâmetro \"comprimento\" para desenhar cada lado?\nOs tamanhos dos triângulos são 150 pixels, 75 pixels e 25 pixels."
      Course 4 Artist Params 3: "Incrível! Você consegue desenhar cada um desses triângulos\ncom essa nova função? O primeiro tem 25 pixels de comprimento, o segundo\ntem 50 e o terceiro tem 75. "
      Course 4 Artist Params 4: "Você consegue adicionar uma nova função chamada quadrado?\nEla também deve receber um parâmetro comprimento, como a função triângulo. Dessa vez,\ndesenhe 3 quadrados, de 25, 50, e 75 pixels de comprimento, separados por 100 pixels."
      Course 4 Artist Params 5: "Use suas duas novas funções para desenhar\nesta imagem. Para facilitar, você pode usar um laço com um parâmetro \"contador\".\n"
      Course 4 Artist Params 6: "Vamos editar essa função \"desenhe uma forma\".\nEla já tem um parâmetro \"comprimento\". Agora, vamos editar a função para adicionar também\num parâmetro \"lados\". Lembre-se de que o ângulo para virar para uma determinada forma é\n360 dividido pelos lados que ela tem. Dica: o triângulo tem 100 pixels de comprimento, o hexágono tem 25 pixels e o quadrado tem 50 pixels. "
      Course 4 Artist Params 7: "Você consegue desenhar essas formas, preenchendo\no \"???\"? O quadrado e o triângulo têm 100 pixels, enquanto o hexágono\ntem 75 pixels. "
      Course 4 Artist Params 8: "Você consegue descobrir como desenhar esta\nforma? Dica: crie uma nova função com 6 lados chamada hexágono.\n"
      Course 4 Artist Params 9: "Você se lembra de quando usamos o laço contador,\nmas removemos um laço de dentro? Vamos nos divertir um pouco e usar a função \"desenhe uma\nforma\" com os parâmetros \"lados\" e \"comprimento\". Você pode recriar\nessas formas? O contador do quadrado deve ser 5/100/5, o do triângulo deve ser\n10/100/10 e o do hexágono deve ser 2/100/2."
      Course 4 Artist Var 9: "Aqui está o algoritmo para desenhar um triângulo.\nModifique-o para que ele use a variável \"lados\". Substitua o número 3\npela variável \"lados\". Dica: lembre-se de usar o bloco \"defina os lados para\"."
      Course 4 Artist Vars 1: "Vamos desenhar um triângulo equilátero. \\r\n\\r\nEle\ndeve ter exatamente 100 pixels de comprimento em cada lado."
      Course 4 Artist Vars 10: "Aqui temos um algoritmo que desenha um triângulo\na partir de triângulos menores. Você pode modificá-lo para que ele use a variável \"lados\"\npara desenhar cada triângulo? Olhe para o código e, toda vez que você\nvir o número 3, substitua-o pela variável \"lados\". Lembre-se de usar\no bloco \"defina os lados\"."
      Course 4 Artist Vars 11: "Este é um código mais complicando com os mesmos conceitos que usamos\nno último desafio - qual deve ser o valor atribuído à variável \"lados\"\npara desenhar essa imagem de quadrados?"
      Course 4 Artist Vars 12: "Vamos definir a variável \"lados\" como\n5. Quanto mais lados adicionarmos a esse algoritmo, maior será o\npadrão! Observe que existe uma nova variável chamada \"comprimento\". Agora podemos usá-la onde há\num bloco \"avance\". Para essa forma, defina a variável \"comprimento\" como 75."
      Course 4 Artist Vars 13: "Quando uma forma tem muitos lados, cada\nlado deve ser menor se você quiser que todo o padrão caiba na tela.\n\\r\nVamos recriar o algoritmo para este padrão incrível, mas, em vez de\ndefinir manualmente a variável \"comprimento\", vamos usar um bloco de matemática com\na variável \"lados\" dentro para nos certificar de que cada forma se encaixe corretamente. O\nperímetro de cada polígono é de 300 pixels.\\r\nPrecisa de dicas? Clique aqui."
      Course 4 Artist Vars 14: |-
        Atividade livre: Veja só! Agora seu algoritmo
        está aninhado dentro de mais um laço. Experimente alterar os valores das
        suas duas variáveis para desenhar padrões legais.\r
        \r
        Para conseguir mais efeito, experimente brincar com
        as cores! Use cores aleatórias dentro dos laços para ver como isso muda seu design.
      Course 4 Artist Vars 2: "Ao invés de usar \"avance por 150,\"\no bloco \"mova\" está referenciando agora uma variável chamada \"comprimento.\" Você consegue\ndefinir \"comprimento\" como150 para desenhar esse novo triângulo?"
      Course 4 Artist Vars 3: "Temos aqui um laço que desenha um quadrado, mas\nalgo está faltando. Você pode consertá-lo para que ele use a variável \"comprimento\"\npara descobrir qual deve ser o tamanho de cada lado? "
      Course 4 Artist Vars 4: "Agora eu quero fazer um retângulo que tenha\na altura duas vezes maior que a largura. Temos uma variável chamada \"largura\" que\ndeve ser definida como 100. Você pode usar os blocos matemáticos para completar o código?"
      Course 4 Artist Vars 5: "Use a variável \"lados\" para controlar\nquantas vezes esse laço é executado."
      Course 4 Artist Vars 6: |-
        Temos aqui um código que pode desenhar qualquer polígono
        regular. Há uma nova variável chamada lados que está definida como 4. Você consegue usar
        a variável lados (junto com o bloco matemático) para virar a quantidade certa independentemente
        de quantos lados o polígono tem?\r
        \r
        Clique aqui para voltar para
        a dica!
      Course 4 Artist Vars 7: |-
        Use o que você aprendeu no último desafio
        para criar esse hexágono usando a variável "lados".\r
        \r
        Percebe como você pode
        alterar apenas um valor para desenhar um triângulo, um quadrado, um pentágono ou um octógono?
      Course 4 Artist Vars 8: "Atividade livre: Brinque com o número\nde lados desta forma. Você consegue alterar o algoritmo para que o tamanho geral\nda forma permaneça o mesmo, independentemente do número de lados? Dica: Se\nvocê dividir seu comprimento inicial pelo número de lados, o comprimento de cada\nlado ficará menor à medida que o número de lados crescer."
      Course 4 Artist Vars 9: "Modifique esse algoritmo para que ele use a variável\n\"lados\" ao invés de um número fixo para desenhar um triângulo. Não deixe de usar\no bloco \"defina os lados para\"."
      Course 4 Bee 1: "A abelha não sabe o que há atrás da nuvem! \\r\n\\r\nUse o bloco \"se\" para verificar se há uma flor atrás da nuvem. \\r\n\\r\nColete\nnéctar uma vez, APENAS se for uma flor."
      Course 4 Bee 2: "Use o bloco \"se/senão\" para verificar cada objeto\ne ver se ele é uma flor ou uma colmeia. Se for uma flor, colete um néctar... caso contrário,\nproduza um mel!"
      Course 4 Bee 3: "O objeto desconhecido pode ser uma flor ou uma colmeia.\nDesta vez, use o bloco \"se/senão\" para coletar um néctar se for uma flor,\nsenão, produza mel (porque então ele seria uma colmeia)."
      Course 4 Bee 4: "Essa flor roxa pode ter 1, 2 ou 3\nnéctares. Aqui um bloco se/senão é combinado com outro bloco se/senão para criar\num bloco \"se/senão-se/senão\". Complete a solução para coletar a quantidade desconhecida\nde néctar."
      Course 4 Bee 5: "Essa flor roxa pode ter 1, 2 ou 3\nnéctares. Adicione um bloco se-senão para criar um bloco se, senão-se, senão. Complete\na solução para coletar a quantidade desconhecida de néctar."
      Course 4 Bee 6: "Essa flor roxa pode ter 1, 2 ou 3\nnéctares. Crie um bloco se, senão-se, senão para coletar a quantidade desconhecida de\nnéctar."
      Course 4 Bee 7: "Use tudo o que você aprendeu até agora para coletar\ntodo o néctar. A flor roxa pode ter 1, 2 ou 3 néctares."
      Course 4 Bee For Loops 1: "Use um laço para coletar o néctar de\ntodas as flores."
      Course 4 Bee For Loops 10: "Se seu laço está fazendo contagem regressiva, o\nincremento é subtraído da sua variável contador a cada repetição. Qual deve ser\nseu incremento para coletar 9, então 6, e então 3 néctares?"
      Course 4 Bee For Loops 11: "O que está errado nesse laço? Veja se\nvocê consegue arrumá-lo e fazer a abelha coletar todo o néctar."
      Course 4 Bee For Loops 2: "Temos aqui um novo tipo de laço, chamado de\nlaço \"para\". Esse laço para em particular vai contar de 1 até 5, de 1 em 1, e executar\no conteúdo do laço a cada contagem. Ajude a abelha a chegar até o néctar."
      Course 4 Bee For Loops 3: "Você pode resolver esse desafio usando um\nlaço \"para\" para contar de 1 até 3, de 1 em 1. Agora vamos coletar um pouco de néctar!"
      Course 4 Bee For Loops 4: "Colete todo o néctar dessas\nflores. Eu gostaria de saber se existe uma forma mais fácil de fazer isso..."
      Course 4 Bee For Loops 5: "Ah, o laço para deixa isso muito mais fácil!\nEstamos usando a variável \"contador\" do laço \"para\" para repetir o bloco \"obtenha néctar\"\no mesmo número de vezes que o laço se repete. Ufa! São muitas repetições.\nTodo o código que você precisa está aqui, dê uma olhada nele e então\nclique em Executar para ver como ele funciona. "
      Course 4 Bee For Loops 6: "Você também pode usar um laço \"para\" para fazer contagem\nregressiva. Tente coletar esse néctar fazendo uma contagem regressiva de 5 até 1, de 1 em 1."
      Course 4 Bee For Loops 7: "Use a variável \"contador\" do seu laço \"para\"\npara controlar a distância do movimento horizontal."
      Course 4 Bee For Loops 8: "Você pode usar a variável do laço para\ncontrolar o movimento e a coleta de néctar?"
      Course 4 Bee For Loops 9: "O último número em seu laço para é\nchamado de \"incremento\" e, a cada execução do laço, a variável contador\né alterada de acordo com o incremento. Tente coletar essas flores usando um incremento\nde 2."
      Course 4 Bee Loops 5 NEW: "Temos aqui três flores. Você consegue encontrar\no padrão das instruções que você precisa repetir 3 vezes para coletar o\nnéctar com o menor número de blocos?"
      Course 4 Bee Loops 5a NEW: "Agora, use laços para ajudar a abelha a coletar\ntodo o néctar em seu caminho até a colmeia com o menor número de blocos possível. Quando\nchegar lá, não se esqueça de produzir mel!"
      Course 4 Bee Params 1: "Escreva uma sequência para coletar todo o\nnéctar usando a função \"obtenha 3 néctares\", que vira, move-se para coletar o néctar e\nentão retorna à posição original."
      Course 4 Bee Params 2: "Modifique a função \"obtenha 2 néctares\" para\nque ela me faça virar para a direita ao invés da esquerda para chegar às flores."
      Course 4 Bee Params 3 (copy 1): "Agora há flores em ambos os\nlados! Talvez você possa usar um parâmetro para que a mesma função funcione para flores\ndos dois lados. Eu adicionei um parâmetro chamado \"direção\" à função.\nSe o parâmetro \"direção\" for igual a 0 eu devo virar à esquerda, se ele for 1 eu devo\nvirar à direita."
      Course 4 Bee Params 3: "Agora, há flores em ambos os lados! Adicionamos\nvariáveis chamadas \"esquerda\" e \"direita\" para você usar, e adicionamos um\nparâmetro chamado \"direção\" para \"obtenha 3 néctares\". Edite \"obtenha 3 néctares\"\npara que a abelha vire na direção correta quando as variáveis \"esquerda\" ou\n\"direita\" forem passadas para a função.  "
      Course 4 Bee Params 4 (copy 1): "Tente usar sua nova função para\ncoletar todas as flores. Lembre-se, 0 = esquerda e 1 = direita."
      Course 4 Bee Params 4 - Two WhenRun: "Tente usar sua nova função\npara coletar todas as flores. Lembre-se de usar as variáveis esquerda e direita."
      Course 4 Bee Params 4 backup: "Não seria legal se pudéssemos\ncoletar todo o néctar com uma única função? Tente adicionar um novo\nparâmetro à função chamado \"néctares\" para controlar a quantidade de néctar\na coletar. Você provavelmente vai querer renomear a função também!"
      Course 4 Bee Params 4: "Tente usar sua nova função para coletar\nnéctar de todas as flores. Lembre-se de usar as variáveis esquerda e direita."
      Course 4 Bee Params 5: "Vamos começar do princípio - você pode criar\numa nova função chamada \"obtenha 5 néctares\" com um parâmetro de direção?"
      Course 4 Bee Params 6 (copy 1): "Tente usar sua nova função para coletar\ntodo o néctar."
      Course 4 Bee Params 6: "Não seria legal se pudéssemos coletar\ntodo o néctar com uma única função? Tente adicionar um novo parâmetro\nà função chamado \"unidades de néctar\" para controlar a quantidade de néctar a coletar.\nVocê provavelmente vai querer renomear a função também!"
      Course 4 Bee Params 7 (copy 1): "Tente usar sua nova função para coletar\ntodo o néctar."
      Course 4 Bee Params 7: "Tente usar sua nova função para coletar\ntodo o néctar."
      Course 4 Bee Params 8 Clone 2: "Ah, agora também é preciso lidar com o\nmel! Como você poderia atualizar sua função para coletar néctar ou produzir mel?"
      Course 4 Bee Params 8 Clone: "Ah, agora também é preciso lidar com o\nmel! Como você poderia atualizar sua função para coletar néctar ou produzir mel?"
      Course 4 Bee Params 8 clone 3: "Ah, agora também é preciso lidar com o\nmel! Como você poderia atualizar sua função para coletar néctar ou produzir mel?"
      Course 4 Bee Params 8 new: "Ah, agora também é preciso lidar com o\nmel! Como você poderia atualizar sua função para coletar néctar ou produzir mel?"
      Course 4 Bee Params 8: "Desafio: Agora você também precisa lidar com\nmel! Reescreva sua função para receber tanto o número de unidades de mel quanto o\nnúmero de unidades de néctar. Como você usaria esses números para decidir o que\nfazer?"
      Course 4 Bee Params Ex: "Tente usar sua nova função para coletar\ntodo o néctar."
      Course 4 Binary 1: "Temos aqui uma função que recebe uma string binária\nde 1's e 0's e instrui a fazendeira a se mover da esquerda para a direita,\nde cima para baixo, passando pelos quadrados nos quais o número tem um zero. Execute o\ncódigo fornecido para ver como a fazendeira usa números binários para desenhar uma imagem."
      Course 4 Binary 2: "Qual string binária você poderia repetir 8 vezes para\ndesenhar essa imagem? Dica o número \"1\" preenche um buraco."
      Course 4 Binary 3: "Você pode desenhar esse padrão repetindo uma única\nstring binária?"
      Course 4 Binary 5 (copy 1): "Qual string binária, repetida 10 vezes, vai\ndesenhar essa imagem?"
      Course 4 Binary 5: "Qual string binária, repetida 10 vezes, vai\ndesenhar essa imagem?"
      Course 4 Binary 6 (copy 1): "Qual string binária, repetida 10 vezes, vai\ndesenhar essa imagem?"
      Course 4 Binary 6: "Qual string binária, repetida 10 vezes, vai\ndesenhar essa imagem?"
      Course 4 Binary 7: "Qual string binária, repetida 10 vezes, vai\ndesenhar essa imagem?"
      Course 4 Binary 8: "Você pode completar a maior parte dessa imagem\nrepetindo um número binário de 5 bits - então você vai precisar de mais um número de 4 bits\npara completar o canto inferior direito."
      Course 4 EC 1a: Sem regras. Sem pistas. Só o desafio!
      Course 4 EC 1b: Sem regras. Sem pistas. Só o desafio!
      Course 4 EC 2a: Sem regras. Sem pistas. Só o desafio!
      Course 4 EC 2b: Sem regras. Sem pistas. Só o desafio!
      Course 4 EC 2c: Sem regras. Sem pistas. Só o desafio!
      Course 4 EC 2d: Sem regras. Sem pistas. Só o desafio!
      Course 4 EC 3: "Use o que você aprendeu no nível anterior\npara desenhar uma imagem como esta. Nota: O código se torna mais simples se você incorporar\nparâmetros. "
      Course 4 EC 3a: 'Desafio Extremo: Sem regras. Sem pistas. Só o desafio!'
      Course 4 Maze 1: Leve o Angry Bird até o porco!
      Course 4 Maze 2: Desvie do TNT!
      Course 4 Maze 3: 'Programe o Angry Bird para chegar até o porco. '
      Course 4 Maze 4: "Experimente o bloco \"repita\" para usar menos blocos\nna resolução deste desafio..."
      Course 4 Maze 5: "Você pode resolver esse desafio usando o menor número\npossível de blocos?"
      Course 4 Maze 6: "Você pode resolver esse desafio usando o menor número\npossível de blocos?"
      Course 4 Play Lab For Loops 2: "Dessa vez, vamos tentar contar\nos números ímpares de 1 até 100."
      Course 4 Play Lab Params 1: "Aqui temos uma função chamada \"pule\"\nque faz seu personagem principal pular 100 pixels. Execute o programa e use\na função \"pule\" para coletar todas as bandeiras movendo o cachorro com as setas\ndo teclado."
      Course 4 Play Lab Params 10: "Adicionamos uma última função para\nvocê.\\r\n\\r\nUse uma instrução \"se\" para que seu jogo chame a função \"suba de nível\"\nsomente quando \"pontos_jogador\" for maior que um determinado número.\\r\n\\r\nPor\nexemplo: \"pontos_jogador\" > 6\\r\n\\r\nJogue e chegue até o nível 3\npara ir para o próximo desafio. "
      Course 4 Play Lab Params 2: "Agora temos bandeiras que estão altas\ndemais para nosso pulo atual! Vamos usar as setas \"para cima\" e \"para baixo\"\npara termos diversas alturas de pulos. \\r\n\\r\nPrecisamos adicionar um parâmetro\nà função \"pule\" chamado \"altura\". A seta para cima deve fazer o cão\npular 200 pixels, e a seta para baixo deve fazê-lo pular somente 100 pixels.\n"
      Course 4 Play Lab Params 3: "Adicionamos outro parâmetro à\nfunção pule para que possamos usá-la com outros personagens. Cada personagem é representado\npor um número, começando em um. Edite a função \"pule\" para que\nuse o parâmetro \"personagem\" para fazer o personagem certo pular. "
      Course 4 Play Lab Params 4: "Aqui temos uma função chamada \"patrulhe\".\n\\r\n\\r\nEdite-a para mover o gato 400 pixels para cima, e então 400 pixels para baixo."
      Course 4 Play Lab Params 5: "Edite a função chamada \"patrulhe\" para\nadicionar um parâmetro \"personagem\", assim podemos chamá-la para todos os personagens\nda tela. Lembre-se, os personagens correspondem aos números 1, 2 e 3."
      Course 4 Play Lab Params 6: "Adicione outro parâmetro chamado \"velocidade\"\nà função \"patrulhe\". Tente usar um bloco \"defina velocidade\" com o novo parâmetro \"velocidade\"\npara ajudar o Pinguim a pegar as duas bandeiras antes que os outros personagens peguem\numa."
      Course 4 Play Lab Params 7: "Vamos nos divertir! Analise o\ncódigo fornecido para ver se você consegue descobrir o que cada bloco faz.  \\r\nQuando\nterminar, use as setas do teclado para controlar o cão e coletar todas as bandeiras.\\r\nOBSERVAÇÃO:\nVocê não precisa fazer nenhuma alteração no programa"
      Course 4 Play Lab Params 8: "Use o bloco \"quando o personagem tocar\"\npara enviar o cão de volta para a parte superior esquerda SOMENTE se ele tocar em qualquer outro personagem."
      Course 4 Play Lab Params 9: "Temos aqui nosso jogo de uma fase anterior,\nmas a maior parte do código está oculta. Há uma nova função chamada \"marcar_pontos\".\\r\n\\r\nEdite\na função para que um novo parâmetro \"pontos\" seja adicionado à variável \"pontos_jogador\".\n\\r\n\\r\nA variável \"pontos_jogador\" deve aumentar toda vez que o cão atingir o gato\ncom uma torta e diminuir toda vez que o gato atingir o cão com um sanduíche.\\r\n\\r\nObservação:\nQuando terminar, clique em \"Executar\" para jogar. Quando o cão marcar 6 pontos, você\nvai para o próximo desafio. "
      Course 4 Play Lab Vars 1: "Desta vez você não precisa escrever código algum, apenas\nclique em \"Executar\" para jogar! Nesse jogo, você é o cão que está tentando\ncoletar mais bandeiras do que o gato. Use a seta para baixo para controlar o cão.\nPressione \"Terminar\" quando você terminar de jogar."
      Course 4 Play Lab Vars 2: "A corrida do último desafio não foi\nmuito justa! Altere a variável \"velocidade_cão\" para garantir que você possa coletar mais\nbandeiras do que o gato. O primeiro a coletar 10 bandeiras vence!"
      Course 4 Play Lab Vars 3: "Use as setas para a esquerda e para a direita para se mover,\ne a seta para cima para pular. Veja se você consegue coletar todas as bandeiras."
      Course 4 Play Lab Vars 4: "Agora estamos usando uma variável chamada \"altura\"\npara controlar a altura que o cão pode pular. Atualize a variável \"altura\" para que\no cão possa pular alto o suficiente para alcançar todas as bandeiras."
      Course 4 Play Lab Vars 5: "Vamos criar um jogo! Primeiro precisamos de\numa pontuação. Reconstrua o código que você viu no último nível para definir a pontuação\ncom valor 10. "
      Course 4 Play Lab Vars 6 (copy 1): "Legal, agora temos nossa variável\npontuação, mas como vamos torná-la útil? Que tal somar à variável\npontuação toda vez que você acertar o inimigo com uma bola de fogo? Use o evento\n\"quando o personagem 2 tocar em alguma coisa\" para disparar uma atualização para a pontuação\nquando sua bola de fogo atingir o gato. Você pode incrementar a pontuação fazendo pontuação\n= pontuação + 1. Faça sua pontuação chegar até 10 (um ponto por vez!) para passar de nível."
      Course 4 Play Lab Vars 6: |-
        Use a seta para a direita para atirar tortas.\r
        \r
        Em
        nosso jogo, como podemos marcar pontos? Adicione 1 à variável "pontos" toda
        vez que o cão atingir o gato com um pedaço de torta. Use o evento "quando o personagem 2 tocar em alguma coisa"
        para acionar uma atualização em sua pontuação. Você pode incrementar sua variável
        definindo "pontos = pontos + 1". Aumente sua pontuação até 10 (um ponto
        de cada vez!) para passar de nível.
      Course 4 Play Lab Vars 7: "Legal, agora vamos garantir que esse jogo\nnão seja muito fácil. Sempre que o cão (personagem 1) for atingido por um sanduíche\ndo gato (personagem 2), você deve perder um ponto. Comece com 10 pontos para que\no jogo não seja muito difícil. Faça sua pontuação cair de 10 para 0 para passar de nível."
      Course 4 Play Lab Vars 8 (copy 1): "Certo, uma última coisa para\nesse jogo - vamos configurá-lo para que o jogador possa ganhar (ou perder). Use um laço infinito\npara verificar o valor da pontuação - se a pontuação for maior que 20, faça\no inimigo desaparecer. Se a pontuação for menor que 0, faça o jogador desaparecer.\nClique em \"Terminar\" quando o jogo funcionar do jeito que você gostaria."
      Course 4 Play Lab Vars 8: "Vamos configurar o jogo para que o cão possa\nganhar (ou perder). Use um laço infinito para para verificar o valor da pontuação - se a pontuação\nfor maior que 20, faça o inimigo (o gato) desaparecer. Se a pontuação for\nmenor que 0, faça o jogador (o cão) desaparecer. Clique em \"Terminar\" quando o jogo\nfuncionar do jeito que você gostaria."
      Course 4 Play Lab Vars 9: "Hora da atividade livre! Temos aqui todas as\nvariáveis que usamos até agora essa etapa, bem como algumas a mais caso\nvocê queira usá-las. \\r\n\\r\nObserve que agora há muitos blocos em nossa\ncaixa de ferramentas e eles precisam ser organizados! Aqui, colocamos cada peça em\numa categoria apropriada. Reserve um tempo para explorar tudo o que está disponível.\nQuando terminar de explorar, crie um jogo ou uma história usando repetições, variáveis\ne eventos.  \\r\n\\r\nDica: deslize a tela para baixo para ver todos os comandos na área de trabalho."
      Course 4 Play Lab Vars: "Certo, uma última coisa para esse jogo\n- vamos configurá-lo para que o jogador possa ganhar (ou perder). Use um laço infinito para\nverificar o valor da pontuação - se a pontuação for maior que 20, faça o inimigo\ndesaparecer. Se a pontuação for menor que 0, faça o jogador desaparecer."
      Course 4 Play Labs For Loops 1: "Vamos fazer o cão falar todos\nos números de 1 a 100. Use um laço \"para\" e o bloco \"contador\" para que ele fale o\na variável \"contador\" toda vez que o laço for executado."
      Course 4 Play Labs For Loops 2: "Dessa vez, ajude Olívia, a gata,\na contar apenas os números ímpares de 1 até 101."
      Course 4 Play Labs For Loops 3: "Se contarmos números maiores,\npoderemos contar até números ainda maiores no mesmo intervalo de tempo. Tente fazer o pirata Perna de Pau\ncontar de 10 até 1.000, contando de 10 em 10."
      Course 4 Play Labs For Loops 4: "Alterar o incremento pode ser\nútil, mas ainda estamos contando linearmente (cada número está separado pela mesma\ndistância do anterior). E se eu quisesse contar exponencialmente? Sem alterar\nas configurações desse laço para, você pode contar 1, 4, 9 , 16, 25... (contador\nao quadrado)?"
      Course 4 Play Labs For Loops 4a: "Agora, vamos combinar as variáveis\nda Fase 7 com sua variável \"contador\" para fazer algo mágico acontecer.   \\r\n\\r\nNesse\ndesafio, o cão vai contar de 0 até 1000 usando \"incremento\".  Defina a variável \"incremento\"\ncomo 10 no começo do seu código para ver o que acontece."
      Course 4 Play Labs For Loops 5: "Na última etapa contamos o\nquadrado de cada número. Tente alterar \"contador ^ 2\" para \"contador ^ 3\" para\ncontar o cubo de cada número (1, 8, 27, 64, 125, 216, 343…)"
      Course 4 Play Labs For Loops 5a: |-
        Nesse desafio, o cão vai ser seu
        guardião do tempo.\r
        \r
        O cão vai contar de 0 até 30 usando "incremento".  A variável "incremento"
        vai começar com um valor de 1.\r
        \r
        Você consegue fazer com que a cada
        vez que você clicar no cão, o incremento aumente em 2?  Clique na seta para a frente
        para executar o laço para.\r
        \r
        Execute o laço algumas vezes, clicando no cão antes
        de cada vez.
      Course 4 Play Labs For Loops 6: "Você deve se lembrar de que um número primo\né qualquer número inteiro que é divisível apenas por ele mesmo e por 1. Use a função \"é_primo\"\npara falar apenas os números primos de 1 a 100."
      Course 4 Play Labs For Loops 6a: |-
        O cão vai continuar contando
        com nosso "laço para" usando "incremento", mas dessa vez vamos adicionar o mago
        à mistura. Você consegue alterar o código para que "incremento" aumente em duas unidades
        toda vez que o mago for clicado?\r
        \r
        Atenção! O mago se move rápido!
      Course 4 Play Labs For Loops 7: "Você poderia usar um laço \"para\" para me\najudar a falar a sequência 1, 4, 7, 10, 13, 16, 19, 22, 25?"
      Course 4 Play Labs For Loops 7a: "Agora estamos chegando em algum lugar! E\nse começarmos a contar quantas vezes conseguimos clicar no mago antes do cão chegar\naté 30?  \\r\n\\r\nTermine adicionando blocos ao mago para que toda vez que ele for\nclicado a variável \"clicado\" aumente por um. Você pode ignorar \"incremento\"\npor enquanto.\\r\n\\r\nO cão vai começar a contar quando você clicar em \"Executar\"."
      Course 4 Play Labs For Loops 8: "Agora, ajude os personagens a se moverem enquanto\ncontam  \\r\n\\r\nO cão deve se mover e contar adicionando 2 (contador + 2) a cada vez. O gato\nvai se mover e contar multiplicando por 2 (contador * 2)  a cada vez. O pinguim\nvai se mover e contar fazendo a potência de 2 (contador ^ 2) a cada vez.  Quem vai chegar\nprimeiro à bandeira?"
      Course 4 Play Labs For Loops 8a: |-
        Para terminar nosso jogo, precisamos
        trazer de volta a variável "incremento"!    Vamos relacioná-la ao nível do
        jogo.\r
        \r
        1) Guarde o número de vezes que o mago é clicado.\r
        2)
        Se o mago for clicado pelo menos 10 vezes antes do cão contar até 30, aumente
        "incremento" em 1 unidade e comece de novo.\r
        3) Se o mago não for clicado
        pelo menos 10 vezes, o jogo acaba.
      Course 4 Playlab For Loop Freeplay: "Atividade livre: use tudo que você\naprendeu até agora para fazer um jogo que inclua um laço \"para\"!"
      Course 4 Playlab For Loops 4b: "Agora, esses dois personagens vão\ncorrer! \\r \n\\r\nCada um deles dará um passo de \"contador\" de cada vez, mas seus\ncontadores terão valores diferentes por causa dos laços \"para\".  \\r\n\\r\nVocê\npode mudar o incremento em um dos laços para que a corrida termine empatada?"
      Course 4 Playlab For Loops 5b: "Ajuste o intervalo nestes laços \"para\"\npara que os dois personagens terminem exatamente no mesmo lugar."
      Course 4 Playlab For Loops 6b: "Edite este laço \"para\" para criar\num jogo que seja divertido!\\r\n\\r\nPressione \"Executar\" e clique na Madame\nUnicórnio 4 vezes para vencer. "
      Course 4 SCF 1: "Use as funções sugeridas para desenhar quatro\nlinhas de hexágonos. Você percebeu como nossas linhas numeradas são deslocadas para a direita?"
      Course 4 SCF 1a: "Você consegue descobrir como coletar todos esse\nnéctar com o menor número possível de blocos?"
      Course 4 SCF 1b: "Você consegue descobrir como coletar todos esse\nnéctar com o menor número possível de blocos?"
      Course 4 SCF 2: "Use o que você aprendeu no nível anterior\npara desenhar uma imagem como esta. Nota: O código se torna mais simples se você incorporar\nparâmetros. "
      Course 4 SCF 3 Fail 1: Você consegue descobrir como...
      Course 4 SCF 3 Fail 2: Você consegue descobrir como...
      Course 4 SCF 3: "Use o que você aprendeu no nível anterior\npara desenhar uma imagem como esta. Nota: O código se torna mais simples se você incorporar\nparâmetros. "
      Course 4 SCFL 1: "Resolva este desafio usando o menor número\npossível de blocos."
      Course 4 SCFL 1a: "Você consegue levar Skrat até a sua bolota usando\no mínimo possível de blocos?"
      Course 4 SCFL 1b: "Você consegue levar Skrat até a sua bolota usando\no mínimo possível de blocos?"
      Course 4 SCFL 2: "Resolva este desafio usando o menor número\npossível de blocos."
      Course 4 SCFL 3: Você consegue descobrir como recriar este desenho?
      Course 4 SCFL 4: Você consegue descobrir como recriar este desenho?
      Course 4 SCFL 5: Você consegue descobrir como recriar este desenho?
      Course 4 SCFL 6: "Você consegue descobrir como recriar esse desenho\ncom um único laço?"
      Course 4 SCFL 7: "O artista quer pegar umas ondas! Você consegue\ndescobrir como recriar este desenho?"
      Course 4 SCFP 1: "Crie uma função com parâmetros que permitem\nao artista saltar para trás e para frente por x pixels, e também para cima e para baixo\npor y pixels (usando números positivos e negativos)."
      Course 4 SCV 1: Clique aqui para ver as instruções novamente.
      Course 4 SCV 2: Clique aqui para ver as instruções novamente.
      Course 4 SCV 3: |-
        Agora um jogo de pega-pega! Pegue o gato para ganhar 2 pontos.
        Pegue o pinguim para ganhar 3 pontos. Conquiste 10 pontos para ganhar!\r
        Mas atenção,
        quando o gato e o pinguim se encontram, eles tiram seus pontos.\r
        \r
        Adicione os
        blocos necessários para fazer esse jogo funcionar como foi explicado. Como
        você vai fazer o cão se mover em todas as direções usando as setas do teclado? Como
        você vai adicionar pontos quando o cão pegar o gato ou o pinguim? Como você vai subtrair pontos
        quando o gato e o pinguim se tocarem?
      Course 4 SCV 4: "Resolva este desafio com o menor número de blocos\npossível."
      Course 4 SCV 5: "Resolva este desafio com o menor número de blocos\npossível."
      Course 4 SCV 6: Clique aqui para ver as instruções novamente.
      Course 4 SCVP 1: "Crie uma função com parâmetros que permitem\nao artista saltar para trás e para frente por x pixels, e também para cima e para baixo\npor y pixels (usando números positivos e negativos)."
      Course 4 Variables Assessment: "Você consegue criar essa imagem usando\numa variável para os lados? Cada linha deve ter 50 pixels de comprimento."
      Course E MC Conditionals1: Você encontrará os recursos mais valiosos no subterrâneo, mas pode ficar escuro lá dentro. Coloque pelo menos 2 tochas e minere pelo menos 2 carvões.
      Course1BeePuzzle12: Obtenha três néctares e então fabrique duas unidades de mel
      Course1MazeAssessment1: |-
        Isso é um teste!\r
        Mova-me por um caminho e então
        por outro para me levar até o porco
      Course1MazeAssessment2: |-
        Isso é um teste!\r
        Mova-me por um caminho e então
        por outro para me levar até o porco.
      CourseF_PlayLab_vars1: 'Para jogar este jogo, você não precisa escrever nenhum código, apenas clicar "Executar"! '
      CourseF_PlayLab_vars10: "Hora da atividade livre! Temos aqui todas as\nvariáveis que usamos até agora essa etapa, bem como algumas a mais caso\nvocê queira usá-las. \\r\n\\r\nObserve que agora há muitos blocos em nossa\ncaixa de ferramentas e eles precisam ser organizados! Aqui, colocamos cada peça em\numa categoria apropriada. Reserve um tempo para explorar tudo o que está disponível.\nQuando terminar de explorar, crie um jogo ou uma história usando repetições, variáveis\ne eventos.  \\r\n\\r\nDica: deslize a tela para baixo para ver todos os comandos na área de trabalho."
      CourseF_PlayLab_vars2: "A corrida do último desafio não foi\nmuito justa! Altere a variável \"velocidade_cão\" para garantir que você possa coletar mais\nbandeiras do que o gato. O primeiro a coletar 10 bandeiras vence!"
      CourseF_PlayLab_vars3: "Use as setas para a esquerda e para a direita para se mover,\ne a seta para cima para pular. Veja se você consegue coletar todas as bandeiras."
      CourseF_PlayLab_vars4: "Agora estamos usando uma variável chamada \"altura\"\npara controlar a altura que o cão pode pular. Atualize a variável \"altura\" para que\no cão possa pular alto o suficiente para alcançar todas as bandeiras."
      CourseF_PlayLab_vars5: "Vamos criar um jogo! Primeiro precisamos de\numa pontuação. Reconstrua o código que você viu no último nível para definir a pontuação\ncom valor 10. "
      CourseF_PlayLab_vars6: |-
        Use a seta para a direita para atirar tortas.\r
        \r
        Em
        nosso jogo, como podemos marcar pontos? Adicione 1 à variável "pontos" toda
        vez que o cão atingir o gato com um pedaço de torta. Use o evento "quando o personagem 2 tocar em alguma coisa"
        para acionar uma atualização em sua pontuação. Você pode incrementar sua variável
        definindo "pontos = pontos + 1". Aumente sua pontuação até 10 (um ponto
        de cada vez!) para passar de nível.
      CourseF_PlayLab_vars7: |-
        Use a seta para a direita para atirar tortas.\r
        \r
        Em
        nosso jogo, como podemos marcar pontos? Adicione 1 à variável "pontos" toda
        vez que o cão atingir o gato com um pedaço de torta. Use o evento "quando o personagem 2 tocar em alguma coisa"
        para acionar uma atualização em sua pontuação. Você pode incrementar sua variável
        definindo "pontos = pontos + 1". Aumente sua pontuação até 10 (um ponto
        de cada vez!) para passar de nível.
      CourseF_PlayLab_vars8: |-
        Use a seta para a direita para atirar tortas.\r
        \r
        Em
        nosso jogo, como podemos marcar pontos? Adicione 1 à variável "pontos" toda
        vez que o cão atingir o gato com um pedaço de torta. Use o evento "quando o personagem 2 tocar em alguma coisa"
        para acionar uma atualização em sua pontuação. Você pode incrementar sua variável
        definindo "pontos = pontos + 1". Aumente sua pontuação até 10 (um ponto
        de cada vez!) para passar de nível.
      CourseF_PlayLab_vars9: "Legal, agora vamos garantir que esse jogo\nnão seja muito fácil. Sempre que o cão (personagem 1) for atingido por um sanduíche\ndo gato (personagem 2), você deve perder um ponto. Comece com 10 pontos para que\no jogo não seja muito difícil. Faça sua pontuação cair de 10 para 0 para passar de nível."
      Crack Random Substitution: Instruções
      Crack Random Substitution_2018: Instruções
      Crack Random Substitution_2019: Instruções
      Crack a Caesar Cipher: Instruções
      Crack a Caesar Cipher_2018: Instruções
      Crack a Caesar Cipher_2019: Instruções
      D_Frozen_nested5: Brinque com os flocos de neve!
      D_Frozen_nested6: Desenhe um modelo de degrau de escada que tenha voltas entre 75 e 105 graus.
      D_Frozen_nested7: Agora, vire 180 graus e desenhe o modelo da escada novamente!
      D_Frozen_nested8: Gire essa forma cerca de 5 ou 6 vezes em um círculo.
      D_Frozen_nested9: |-
        Tente brincar com o que você criou. Desenhe o que quiser!
        - O que acontece se você usar dois ângulos diferentes no seu modelo de degrau de escada?
        - O que acontece se você fazer o seu modelo de diamante mais longo ou mais curto?
        - Que aparência tem dois flocos de neve desenhados um em cima do outro?
      Dance Party 1-validated: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Dance Party 1-validated_2019: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Dance Party 1-validated_simple: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Dance Party 6 - Validated: Use o bloco 'para tudo' para fazer cada alienígena parar de se mover quando ele for clicado.
      Dance Party 6: Use o bloco 'para tudo' para fazer cada alienígena parar de se mover quando ele for clicado.
      Dance Party 6_2019: Use o bloco 'para tudo' para fazer cada alienígena parar de se mover quando ele for clicado.
      Dance Party 6_simple: Use o bloco 'para tudo' para fazer cada alienígena parar de se mover quando ele for clicado.
      Dance Party Freeplay: Agora crie o seu próprio disco alienígena!
      Dance Party Freeplay_2019: Agora crie o seu próprio disco alienígena!
      Dance Party Freeplay_simple: Agora crie o seu próprio disco alienígena!
      Dance Party Predict: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Dance Party Predict_2019: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Dance Party Predict_simple: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Dance_Party_01: Arraste o bloco 'criar novo' para a área de trabalho, conectando-o dentro do bloco de 'configuração'.
      Dance_Party_01_low: Arraste o bloco 'criar novo' para a área de trabalho, conectando-o dentro do bloco de 'configuração'.
      Dance_Party_02: Faça o alce iniciar um novo movimento após quatro compassos!
      Dance_Party_03: Agora, faça o(a) dançarino(a) iniciar um novo movimento após seis compassos!
      Dance_Party_04: Adicione um efeito de plano de fundo ao seu programa.
      Dance_Party_05: Use outro bloco novo para fazer o(a) dançarino(a) mudar seus movimentos a cada dois compassos.
      Dance_Party_06: Crie um(a) dançarino(a) de apoio intitulado 'backup_dancer1' para dançar com o gato.
      Dance_Party_08: É possível deixar os dois dançarinos de apoio do mesmo tamanho?
      Dance_Party_09: Use o bloco de 'definir tonalidade” para alterar a cor de um(a) dançarino(a).
      Dance_Party_10: Faça o outro dançarino também responder à música usando o bloco 'começar a seguir '.
      Dance_Party_11.5_test: Use os blocos "todos os patos" para fazer os patos dançarem juntos.
      Dance_Party_11: O bloco 'com a seta para cima pressionada' permite executar o código quando a seta para cima for pressionada. Tente fazer o(a) dançarino(a) se movimentar rapidamente pressionando a seta para cima.
      Dance_Party_11_5: Use os blocos "todos os patos" para fazer os patos dançarem juntos.
      Dance_Party_11b: Faça o robô dançar drop uma vez pressionando a tecla de seta para a direita e fazer a dança do fio dental uma vez pressionando a seta para cima. Faça o movimento dança drop-dança do fio dental o mais rápido que puder!
      Dance_Party_12: Entre no ritmo! Crie sua própria dança para compartilhar com seus amigos.
      Eval Booleans 1: "Operadores booleanos (como >, <, =) nos permitem\ncomparar valores diferentes, retornando \"verdadeiro\" ou \"falso\". Clique em \"Executar\"\npara ver o que essa expressão retorna."
      Eval Booleans 2: "Você pode definir os valores para que essa expressão\nseja \"verdadeira\"?"
      Eval Booleans 3: "A função \"comprimento-string\" retorna o número\nde caracteres em uma string (incluindo espaços!) - faça esse código retornar\n\"verdadeiro\"."
      Eval Booleans 4: "Aqui temos um bloco de avaliação chamado E - ele retorna\nverdadeiro se ambos os parâmetros forem verdadeiros, caso contrário ele retorna falso. Edite\na variável x para que essa expressão retorne verdadeiro."
      Eval Booleans 5: "Esse bloco OU retorna verdadeiro se algum dos seus parâmetros\nfor verdadeiro. Caso contrário, se ambos os parâmetros forem falsos, ele vai retornar falso. Defina\na variável y com um valor que vai fazer com que a expressão retorne falso."
      Eval Booleans 6: "Aqui temos mais um bloco booleano chamado NÃO. Esse\nbloco transforma verdadeiro em falso, ou falso em verdadeiro. Se você envolver esse bloco\nde código em um bloco NÃO, ele deve retornar verdadeiro (porque estamos perguntando se as\nduas expressões NÃO produzem valores iguais)."
      Eval Booleans Free Play: "Atividade livre: experimente criar algo\nvocê mesmo usando booleanos."
      Eval Booleans: "Booleanos nos permitem comparar valores diferentes,\nretornando \"verdadeiro\" se eles forem iguais, ou \"falso\" se eles não forem. O que\nvocê acha que esse código vai retornar?"
      Eval Cond 1: "O bloco cond verifica as expressões booleanas na\ncoluna esquerda, e assim que ele encontra uma que retorna \"verdadeiro\", ele executa\no código correspondente na direita. Se nenhuma das expressões retornarem\n\"verdadeiro\", ele executa o bloco da parte inferior. Atualize a variável \"temperatura\" para\nque esse bloco retorne \"Está certo\"."
      Eval Cond 2 (copy 1): "Essa condição retorna uma forma diferente com base no\nvalor da variável \"lados\" - altere o valor de \"lados\" para que\na condição retorne um triângulo."
      Eval Cond 2: "Essa condição retorna uma forma diferente com base no\nvalor da variável \"lados\" - altere o valor de \"lados\" para que\na condição retorne um triângulo."
      Eval Cond 3 (copy 1): "Você pode escrever uma condição que verifica a variável\n\"idade\" e retorna \"idade suficiente para votar e dirigir\" se idade > 17, \"idade suficiente\npara votar\" se idade > 15 e \"idade insuficiente para dirigir ou votar\" se nenhuma das condições\nfor verdadeira? Dica: a primeira condição a retornar \"verdadeiro\" ganha - lembre-se de\ncolocar as condições na ordem certa."
      Eval Cond 3: "Você pode escrever uma condição que verifica a variável\n\"idade\" e retorna \"idade suficiente para votar e dirigir\" se idade > 17, \"idade suficiente\npara votar\" se idade > 15 e \"idade insuficiente para dirigir ou votar\" se nenhuma das condições\nfor verdadeira? Dica: a primeira condição a retornar \"verdadeiro\" ganha - lembre-se de\ncolocar as condições na ordem certa."
      Eval Cond 4: "Podemos usar a função \"string=?\" para criar condições\nque respondam à entrada de texto. Aqui temos uma função chamada \"forma verde\" que\nrecebe um parâmetro string para a forma. Complete as condições para que a\nforma correta seja desenhada quando a função for executada com \"círculo\", \"triângulo\",\n\"quadrado\" ou \"retângulo\"."
      Eval Cond 5: "Aqui temos uma função \"forma vermelha\" semelhante com um\nparâmetro adicional para o tamanho. Complete as condições para que a imagem correta\nseja desenhada para \"círculo\", triângulo\" e \"estrela\"."
      Eval Cond 6: |-
        Escreva uma função chamada crítica-culinária, que recebe
        o nome de um prato e produz uma string que diz o que você acha desse
        prato. Por exemplo, (crítica-culinária "pizza") deve retornar "deliciosa", mas
        (crítica-culinária "ovos estragados") deve retornar "horrível!". Escolha pelo menos dois
        pratos para avaliar, mas você pode escrever mais se quiser! Não se esqueça de
        adicionar uma cláusula "senão"!\r
        Um exemplo - e parte da definição - já foram
        feitos para você!
      Eval Cond 7: |
        Atividade livre: escreva uma função chamada forma-verde, que
        recebe o nome de uma forma e produz uma forma verde sólida. Sua função
        deve funcionar pelo menos com "círculo", "estrela" e "retângulo", mas você pode adicionar
        outras formas se quiser. Você pode escolher o tamanho de cada forma. Não se esqueça
        de adicionar uma cláusula “senão”!\r
        Um exemplo - e parte da definição - já
        estão prontos para você!\r

      Eval Cond 8: "Atividade livre: suponha que você queira ter um carro aos 21 anos, ou\nter seu próprio negócio aos 30 anos. Escreva uma função chamada objetivos-vida, que recebe\numa idade e produz uma string que descreve seus objetivos de vida nessa idade. Não\nse esqueça de adicionar uma cláusula \"senão\"!\\r\n"
      Eval Contracts 1: "Use a função \"estrela\" para produzir uma estrela vermelha\ncom um raio de 60 pixels"
      Eval Contracts 10A: "Certo, vamos completar esse desafio com um\nquadrado verde que tem 175 pixels de tamanho."
      Eval Contracts 11A: "Você consegue completar esse desafio e fazer aparecer \"Olá,\nmundo\" no cartaz?"
      Eval Contracts 2: "Confira a função \"rotacione\" - você pode\nusá-la para rotacionar esse quadrado verde de 90 pixels em 45 graus?"
      Eval Contracts 3: "Tente usar a função \"texto\" para escrever esse\ntexto azul com tamanho 40."
      Eval Contracts 4 A: "A função \"escala\" retorna uma imagem redimensionada\npara um tamanho menor ou maior que a imagem de entrada. Tente redimensionar\nesse círculo por um fator de 10 - como a imagem resultante é diferente do que seria se você\nsimplesmente fizesse um círculo desse tamanho em primeiro lugar?"
      Eval Contracts 4: "A função \"escala\" retorna uma imagem que\né maior ou menor que a imagem de entrada. Tente escalar esse círculo\npor um fator de 10. Como a imagem retornada é diferente da que você teria se você\ntivesse feito um círculo desse tamanho a princípio?"
      Eval Contracts 8A: "Você pode completar esse desafio? O triângulo grande\ntem 200 pixels de tamanho e é roxo?"
      Eval Contracts A: "Use a função \"estrela\" para produzir uma estrela\nvermelha sólida com raio de 60 pixels"
      Eval Contracts C: "Confira a função \"rotacione\" - você pode\nusá-la para rotacionar esse quadrado verde de 90 pixels em 45 graus?"
      Eval Contracts E: "Experimente usar a função \"texto\" para escrever\n\"Olá, mundo!\" na cor azul e com tamanho 40."
      Eval Contracts shrink: "Você pode completar essa imagem usando o bloco\nde função \"encolha\"? O raio é 20. "
      Eval Define Funcs 1: "Aqui temos uma nova função chamada \"triângulo-verde\"\nque recebe um único número para o tamanho e produz um triângulo verde. Use a\nnova função para criar um triângulo verde de 125 pixels"
      Eval Define Funcs 2: "Vamos olhar dentro da função \"triângulo-verde\"\npara ver como ela funciona. Você pode modificá-la para que a função \"triângulo-verde\"\nsempre desenhe triângulos verdes delineados?"
      Eval Define Funcs 3: "Temos aqui o começo de outra nova função\nchamada \"círculo-roxo\" com um domínio de um número (o raio) e um intervalo\nde imagem. Contudo, o corpo da função está errado, e ela sempre desenha um círculo\nde 50 pixels de raio ao invés de usar o parâmetro raio. Substitua o número atual\npelo bloco \"raio\" do domínio. "
      Eval Define Funcs 4: "Crie uma nova função chamada \"estrela-aqua\"\nque tem um domínio de um único número para o raio e retorna uma estrela aqua do\nraio dado. Execute sua nova função com um raio de 75."
      Eval Define Funcs 5: "Vamos usar a função \"estrela-aqua\" para\ncriar uma fileira com estrelas de tamanhos diferentes. Da esquerda para a direita, as estrelas\ndevem ter raios de 25, 50 e 75."
      Eval Define Funcs Test: "Temos aqui o começo de outra nova função\nchamada \"círculo-roxo\" com um domínio de um número (o raio) e um intervalo\nde imagem. Contudo, o corpo da função está errado, e ela sempre desenha um círculo\nde 50 pixels de raio ao invés de usar o parâmetro raio. Substitua o número atual\npelo bloco \"raio\" do domínio. "
      Eval Defining Vars Free Play 1: "Atividade livre: fornecemos uma função\nque preenche sua tela com minha-imagem. Altere minha-imagem para ver que padrão\nvocê pode fazer."
      Eval Design Recipe .1: "Temos aqui uma receita de design para uma função\nchamada \"quadrado-círculo\" com domínio de número e string e intervalo de imagem. Clique\nem Editar para escrever a definição da função (você vai ver dois exemplos fornecidos)."
      Eval Design Recipe 1 (copy 1): "Vamos escrever uma função\nque desenha um retângulo sólido de qualquer cor e que tenha a largura duas vezes maior que\nsua altura. Comece com um exemplo - desenhe um retângulo verde sólido que tem uma altura de\n100 pixels."
      Eval Design Recipe 1: "Certo, agora, dado o contrato ret-largo:\nstring de números -> imagem, escreva um exemplo - desenhe um retângulo verde sólido que\ntenha altura de 100 pixels."
      Eval Design Recipe 2 (copy 1): "Vamos fazer mais um exemplo antes de escrever\na definição da função - dessa vez, desenhe um retângulo vermelho sólido com uma altura\nde 75 pixels."
      Eval Design Recipe 2: "Vamos fazer mais um exemplo antes de escrever\na definição da função - dessa vez, desenhe um retângulo vermelho sólido com uma altura\nde 75 pixels."
      Eval Design Recipe 3: "A receita de design para \"ret-largo\" já\ntem um contrato e um exemplo. Você consegue escrever um segundo exemplo e então completar\na definição? A função \"ret-largo\" deve produzir um retângulo de uma determinada\ncor e que tenha a largura duas vezes maior que a altura."
      Eval Design Recipe 4: "Use a receita de design para criar uma função\n\"starburst\" que tem dois domínios. 1) um número de pontos e 2) um raio.\n\"starburst\" retorna uma estrela radial amarela com os pontos dados e um raio\ninterno que tem metade do tamanho do raio externo."
      Eval Design Recipe 5: "Usando a receita de design, escreva uma função\n\"bandeira-listrada\" que recebe duas cores e produz uma bandeira de 250 pixels\nde largura, 150 pixels de altura e com três listras horizontais de cores determinadas, na ordem cor2, cor1 e cor2."
      Eval Design Recipe 6: "Usando a receita de design, escreva uma função\n\"polígono-grande\" que deve retornar um polígono de lados e cor determinados que\ncobre a maior parte da janela, independentemente do número de lados. Para garantir\nque o polígono não fique muito grande conforme você aumenta o número de lados, o\ncomprimento do lado deve ser inversamente proporcional ao número de lados, com um\ncomprimento de (800/lados)."
      Eval Design Recipe Free Play: "Atividade livre: use a receita de design\npara criar algumas funções com seu próprio design"
      Eval Free Play: 'Atividade livre: faça arte com código!'
      Eval Strings Images .1: "Até agora, lidamos com um único\ntipo de dado, os números. Outro tipo de dados é a string, que é uma combinação\nde letras, números, ou outros caracteres envolvidos entre aspas. Execute a\nstring \"Olá, mundo!\" e veja o que acontece."
      Eval Strings Images .2: "A função \"acrescentar-string\" recebe duas\nstrings e retorna uma única string combinada. Adicione uma string \"universo\"\nao segundo argumento de \"acrescentar-string\"."
      Eval Strings Images 2: "Atividade livre: todos os blocos de cálculo estão identificados por cores\npara que você saiba que tipo de dados eles retornam e que tipo de dados eles precisam para seus\nparâmetros. O último parâmetro da função triângulo recebe uma string que\ncontrola sua cor - experimente algumas cores diferentes para ver o que acontece."
      Eval Strings Images 3: "Algumas funções podem receber somente um conjunto específico\nde strings, tais como o segundo argumento dessa função círculo, que\ncontrola seu estilo. Desenhe esse círculo laranja contornado usando o bloco de string\nespecial com um menu suspenso para garantir que você use apenas estilos válidos."
      Eval Strings Images 4: "Tente usar o bloco \"retângulo\" para desenhar\nesse retângulo vermelho sólido - ele tem 175 pixels de largura e 100 pixels de altura."
      Eval Strings Images 5: "Tente usar esse novo bloco de cálculo chamado\n\"sobreposição\" para desenhar um triângulo branco de 100 pixels em cima de um círculo\nvermelho de 200 pixels."
      Eval Strings Images 6: "Use a função sobreposição para colocar uma estrela\namarela com raio de 75 pixels em cima de um quadrado azul com 150 pixels de comprimento."
      Eval Strings Images 7: "O bloco \"deslocamento\" permite que você mova uma imagem\ncom relação a onde ela normalmente seria colocada. Use esse bloco para deslocar o\nquadrado por 100 pixels no eixo y."
      Eval Strings Images 8: "Temos aqui um tipo diferente de bloco de estrela\n- ele é chamado \"estrela-radial\" e permite que você desenhe estrelas com qualquer número\nde pontos! Use-o para criar uma estrela laranja sólida com um raio interno de 75\npixels e um raio externo de 175 pixels."
      Eval Strings Images Free Play: "Atividade livre: explore os blocos disponíveis\npara criar algo interessante. Lembre-se de compartilhar suas criações favoritas."
      Farmer for Authored Hint testing: "Uau, eu encontrei um buraco realmente fundo! Eu não\nsei quantas pás de terra são necessárias. Você pode escrever um programa que preencha-o\naté que o solo fique nivelado. Dica: dessa vez, tente usar o laço enquanto."
      Farmer for TTS testing: "Uau, eu encontrei um buraco realmente fundo! Eu não\nsei quantas pás de terra são necessárias. Você pode escrever um programa que preencha-o\naté que o solo fique nivelado. Dica: dessa vez, tente usar o laço enquanto."
      Finalize Your Chaser Game v.1: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      Finalize Your Chaser Game v.1_2018: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      Finalize Your Chaser Game v.1_2019: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      Fish Tank 3-validated Ram: Mude o comportamento do peixe de modo que ele consiga nadar ao redor do tanque.
      Fish Tank 3-validated: Mude o comportamento do peixe de modo que ele consiga nadar ao redor do tanque.
      Fish Tank 3-validated_2019: Mude o comportamento do peixe de modo que ele consiga nadar ao redor do tanque.
      Fish Tank 3-validated_simple: Mude o comportamento do peixe de modo que ele consiga nadar ao redor do tanque.
      Fish Tank 4-validated: Use o bloco `definir cor de fundo` para definir o plano de fundo azul.
      Fish Tank 4-validated_2019: Use o bloco `definir cor de fundo` para definir o plano de fundo azul.
      Fish Tank 4-validated_simple: Use o bloco `definir cor de fundo` para definir o plano de fundo azul.
      Fish Tank 5-validated_simple: O peixe quer um amigo.   Adicione um novo sprite.
      Fish Tank 6-validated: Adicione um comportamento o novo amigo do peixe.
      Fish Tank 6-validated_2019: Adicione um comportamento o novo amigo do peixe.
      Fish Tank 6-validated_simple: Adicione um comportamento o novo amigo do peixe.
      Food Fight!: "Adicionamos uma última função para\nvocê.\\r\n\\r\nUse uma instrução \"se\" para que seu jogo chame a função \"suba de nível\"\nsomente quando \"pontos_jogador\" for maior que um determinado número.\\r\n\\r\nPor\nexemplo: \"pontos_jogador\" > 6\\r\n\\r\nJogue e chegue até o nível 3\npara ir para o próximo desafio. "
      Frequency Analysis: Teste
      Function intro Ryan: Use a função 'construir ponte' duas vezes para criar um caminho até a tocha.
      Function intro Ryan_2019: Use a função 'construir ponte' duas vezes para criar um caminho até a tocha.
      GLJr_Behavior_2: Agora você tem alguns blocos novos! Tente usá-los e veja como eles funcionam. Em suas anotações, escreva quais você tentou e o que eles fazem.
      GLJr_Behavior_6: Vamos tentar mais alguns comportamentos - faça o cachorro correr para cima e o gato correr para a direita.
      GLJr_Forever_2: Agora você tem alguns blocos novos! Tente usá-los e veja como eles funcionam. Em suas anotações, escreva quais você tentou e o que eles fazem.
      'Game Lab Workshop: Random': Escolha um formato de bloco e use chamadas para randomNumber() no lugar de um ou mais parâmetros. Certifique-se que você rode algumas vezes para ver o efeito de aleatoriedade.
      HOC 2018 Level_1: Colete um barco no baú.
      HOC 2018 Level_10: Vá até a entrada do Monumento Oceânico.
      HOC 2018 Level_11: 'Construa um canal usando Prismarinho dentro do Monumento Oceânico.'
      HOC 2018 Level_12: 'Desenvolva seu próprio ambiente subaquático. Use sua imaginação!'
      HOC 2018 Level_2: 'Vá até o final do cais.'
      HOC 2018 Level_3: 'Atravesse o mar aberto para conseguir o bacalhau.'
      HOC 2018 Level_4: Use um loop para chegar até o golfinho.
      HOC 2018 Level_5: Explore o naufrágio para chegar até o baú.
      HOC 2018 Level_6: Navegue no gelo para chegar até o salmão.
      HOC 2018 Level_7a: Procure um baú nas ruínas subaquáticas.
      HOC 2018 Level_9b: 'Use os corais como pontos passagem para alcançar o tesouro.'
      Hannah DataVis Test: Altere a expressão booleana para o laço while de forma que ele irá parar quando ambos dados forem maiores que ou iguais a 5. (Clique para ver as instruções completas)
      HoCAB_labyrinth1: Use os blocos de seta para resolver este labirinto!
      Infinity_catch: "Você pode fazer Elsa (\"personagem 2\") alcançar\nAnna usando as setas do teclado?"
      Infinity_finale: Crie o que quiser e compartilhe!
      Infinity_move_collide: "Hiro é o \"personagem 1\". Mova-o em direção a\nBaymax e reproduza um som quando eles se tocarem."
      Infinity_move_directions: "Baymax é o \"personagem 2\". Adicione blocos \"mova\"\ne então mova Baymax usando as setas. Faça com que ele toque os outros dois personagens."
      Infinity_move_right: "Hiro é o \"personagem 1\". Use o bloco \"mova\"\npara mover Hiro para que ele toque Baymax."
      Infinity_repeat: "Use um bloco \"repita infinitamente\" para fazer Anna se mover\n400 pixels para cima e para baixo."
      Infinity_say: Faça Anna dizer "Oi." usando o bloco "diga".
      Infinity_shoot: "Baymax é o \"personagem 2\". Faça Baymax lançar um foguete\nem Hiro."
      Infinity_shoot_directions: "Hiro é o \"personagem 3\". Faça Hiro lançar\num projétil em cada um dos quatro personagens. Espere um segundo entre cada\nlançamento."
      Infinity_touch_faster: Toque ainda mais flocos de neve!
      Infinity_touch_four: "Mova Anna para cima, para a esquerda e para a direita para tocar\ncada um dos quatro flocos de neve."
      Infinity_touch_score: "Faça Anna marcar um ponto quando ela tocar\nem um floco de neve. Depois clique em \"Executar\" e faça ela tocar uma vez em cada floco de neve."
      Inspirational Artwork: "Atividade livre - Inspiração: agora você\naprendeu tudo o que precisa saber para criar um padrão como esse! Se essa\nimagem inspira você, tente fazer algo similar. Caso contrário, crie algo\nvocê mesmo.\\r\n \\r\nQuer saber como nosso padrão de inspiração foi feito? "
      InspirationalArtwork: Se esta imagem te inspira, tente fazer algo parecido. Senão, crie algo você mesmo.
      InspirationalArtwork_2018: Se esta imagem te inspira, tente fazer algo parecido. Senão, crie algo você mesmo.
      InspirationalArtwork_2019: Se esta imagem te inspira, tente fazer algo parecido. Senão, crie algo você mesmo.
      'Internet Simulator: Sending Binary Messages 1': "Envie uma mensagem configurando o estado do\nfio como A ou B."
      'Internet Simulator: Sending Binary Messages': "Envie uma mensagem configurando o estado do\nfio como A ou B."
      'Internet Simulator: Sending Binary Messages_2018': "Envie uma mensagem configurando o estado do\nfio como A ou B."
      'Internet Simulator: Sending Binary Messages_2019': "Envie uma mensagem configurando o estado do\nfio como A ou B."
      Just for Testing: Testar instruções
      K-1 Artist 1 Assessment 1: "Desenhe uma pequena reta para cima e uma\ngrande para a direita!"
      K-1 Artist Loops 1: Desenhe esta reta usando o movimento para o leste 4 vezes.
      K-1 Artist Loops 2: Agora, desenhe a mesma reta usando um laço.
      K-1 Artist Loops 3: Você pode repetir esses blocos para desenhar 6 retas?
      K-1 Artist Loops 4: "Um laço poderia nos ajudar a desenhar o topo desse\ncastelo?"
      K-1 Artist Loops 5: O que você pode repetir 4 vezes para desenhar essas escadas?
      K-1 Artist Loops 6: "São necessários dois laços: um para subir as\nescadas e outro para descer."
      K-1 Artist Loops 7: Laços podem ajudar você a terminar este padrão.
      K-1 Artist Loops 8: Esta escada tem degraus mais longos.
      K-1 Artist Loops 9: Qual é a maneira mais fácil de desenhar as escadas?
      K-1 Artist Loops Free Play: Atividade livre, desenhe algo divertido!
      K-1 Artist1 1: Desenhe o pé do homem com uma reta
      K-1 Artist1 10: "Desenhe e pule para fazer o caminho tracejado até o tesouro\nX"
      K-1 Artist1 2: Desenhe o bigode no gato com duas retas!
      K-1 Artist1 3: "Desenhe duas retas para o leste e duas retas para o norte para terminar\na casa!"
      K-1 Artist1 4: Desenhe retas para cima, sobre e para baixo para completar o castelo!
      K-1 Artist1 5.5: "Complete a terceira torre do castelo usando\nretas curtas"
      K-1 Artist1 5: Desenhe o caule desta flor com duas retas!
      K-1 Artist1 6: Termine a imagem usando um bloco pule!
      K-1 Artist1 7: "Use o bloco pule para se mover sem desenhar. Pule\ne desenhe uma reta."
      K-1 Artist1 8: Desenhe linhas tracejadas usando os blocos pule e desenhe
      K-1 Artist1 9: Desenhe e pule para fazer a reta tracejada
      K-1 Artist1 Assessment 1: Desenhe as retas pequenas e grandes!
      K-1 Artist1 Assessment 2: Desenhe as retas pequenas tracejadas!
      K-1 Artist2 1: Desenhe um quadrado abaixo do triângulo.
      K-1 Artist2 2: Pule e desenhe um quadrado próximo à casa.
      K-1 Artist2 3: Desenhe um quadrado sobre o outro quadrado
      K-1 Artist2 4: Desenhe um retângulo para completar a ponte.
      K-1 Artist2 5: Desenhe um retângulo para completar os suportes da ponte
      K-1 Artist2 6: Desenhe dois quadrados para criar um retângulo!
      K-1 Artist2 Assessment1: "Avaliação: desenhe um quadrado ao lado do\noutro quadrado."
      K-1 Artist2 Free Draw: Desenhe qualquer coisa!
      K-1 Artist2_7: Desenhe um retângulo para dar uma gaveta à cômoda!
      K-1 Bee 1: "Mova-me até a flor, colete o néctar e então mova-me\naté a colmeia e produza mel"
      K-1 Bee 10: Colete quatro néctares e então fabrique duas unidades de mel!
      K-1 Bee 11.5: Colete quatro néctares para fabricar quatro unidades de mel!
      K-1 Bee 11: Colete três néctares e então fabrique uma unidade de mel
      K-1 Bee 12: Colete três néctares e então fabrique duas unidades de mel!
      K-1 Bee 13: Colete três néctares e então fabrique uma unidade de mel!
      K-1 Bee 14: "Leve-me até o néctar e colete-o, leve-me até o mel\ne produza mel!"
      K-1 Bee 15: Colete dois néctares para fabricar duas unidades de mel!
      K-1 Bee 2: "Mova-me até a flor, colete o néctar e então mova-me\naté a colmeia e produza mel"
      K-1 Bee 3: "Mova-me até a flor, colete o néctar e então mova-me\naté a colmeia e produza mel"
      K-1 Bee 4: Colete dois néctares e então fabrique duas unidades de mel!
      K-1 Bee 5: Colete três néctares e então fabrique três unidades de mel!
      K-1 Bee 6: Colete dois néctares e então fabrique duas unidades de mel!
      K-1 Bee 7: Colete três néctares e então fabrique duas unidades de mel!
      K-1 Bee 8: Colete dois néctares e então fabrique duas unidades de mel!
      K-1 Bee 9: Colete dois néctares e então fabrique duas unidades de mel!
      K-1 Bee Assessment 1: Colete néctar para fabricar mel!
      K-1 Bee Assessment 2: Colete néctar para fabricar mel!
      K-1 Bee Loops 1: Colete o néctar para fabricar mel!
      K-1 Bee Loops 10: "Colete todo o néctar e faça todo o\nmel."
      K-1 Bee Loops 11: Colete todo o néctar e o mel!
      K-1 Bee Loops 12: Colete todo o néctar e todo o mel.
      K-1 Bee Loops 2: "Use um laço \"repita\" para mover e então coletar o néctar e\nproduzir mel!"
      K-1 Bee Loops 3: "Use três laços \"repita\" para coletar o néctar\ne\nfabricar o mel!"
      K-1 Bee Loops 4: "Use laços \"repita\" para obter néctar, produzir\nmel e\npara mover!"
      K-1 Bee Loops 5: Use laços "repita" para obter néctar e mel!
      K-1 Bee Loops 6: Use um laço "repita" para coletar néctar, fabricar mel, e para mover!
      K-1 Bee Loops 7: Colete o néctar e produza mel!
      K-1 Bee Loops 8: Colete o néctar e produza mel!
      K-1 Bee Loops 9: Colete todo o néctar e produza todo o mel.
      K-1 Bee Loops Assessment 1: "Obtenha néctar para produzir mel e use laços\npara mover!"
      K-1 Bee Loops Assessment 2: Colete néctar para fabricar mel usando laços!
      K-1 Bee Puzzle 12: Obtenha três néctares e então fabrique duas unidades de mel
      K-1 Building a Foundation Assessment: "Construa uma pirâmide de três níveis.\nNão há outras instruções, então simplesmente brinque com as peças até\nconseguir!"
      K-1 Maze 10: 'Desvie do TNT para me levar até o porco! '
      K-1 Maze 11: "Trace o caminho e leve-me até o porco bobalhão. Desvie\ndo TNT, ou penas vão voar! Dica: ele está ao sul de onde estou."
      K-1 Maze 2: Mova-me para o leste para chegar até o porco!
      K-1 Maze 3: Mova-me para o sul para chegar até o porco!
      K-1 Maze 4: Mova-me para o norte para chegar até o porco!
      K-1 Maze 5: Mova-me para o leste para chegar até o porco!
      K-1 Maze 6: Mova-me por um caminho, e então por outro para me levar até o porco!
      K-1 Maze 7: Mova-me por um caminho, e então por outro para me levar até o porco!
      K-1 Maze 8: Mova-me por um caminho, e então por outro para me levar até o porco!
      K-1 Maze 9: Mova-me por um caminho, e então por outro para me levar até o porco!
      K-1 Maze Assessment 1: 'Avaliação: leve-me até o porco!'
      K-1 Maze Assessment 12: Avaliação de nível
      K-1 Maze Assessment 13: Avaliação de nível
      K-1 Maze Assessment 2: 'Avaliação: leve-me até o porco!'
      K-1 Maze Loops 1: Leve-me até o porco!
      K-1 Maze Loops 10: "Leve-me até o porco! O laço \"repita\"\nvai tornar tudo muito mais fácil."
      K-1 Maze Loops 11: "Leve-me até o porco!\\r\nO laço \"repita\" vai\nfacilitar as coisas."
      K-1 Maze Loops 12: "Leve-me até o porco! O laço \"repita\" vai\nfacilitar as coisas."
      K-1 Maze Loops 2: Use o bloco "repita" para me levar até o porco!
      K-1 Maze Loops 3: Leve-me até o porco! Use laços "repita".
      K-1 Maze Loops 4: Leve-me até o porco!
      K-1 Maze Loops 5: Leve-me até o porco! Use laços "repita".
      K-1 Maze Loops 6: Leve-me até o porco! Use laços "repita".
      K-1 Maze Loops 7: Leve-me até o porco! Use laços "repita".
      K-1 Maze Loops 8: Use o laço "repita" para me levar até o porco.
      K-1 Maze Loops 9: Leve-me até o porco!
      K-1 Maze Loops Assessment 1: "Veja só o que nós aprendemos! Use um\nlaço \"repita\" para me levar até o porco!"
      K-1 Maze Loops Assessment 2: Use um laço "repita" para me levar até o porco!
      K-1 Maze Multi 14: Avaliação de nível
      K-1 Maze Multi 15: Avaliação de nível
      K-1 Maze Sequence Assessment 1: |-
        Vejamos o que você aprendeu!\r
        Mova-me
        por um caminho e então por outro para me levar até o porco.
      K-1 Maze Sequence Assessment 2: "Mova-me por um caminho e então\npor outro para me levar até o porco."
      K-1 Maze debug Assessment 1: "Avaliação -- depure esse nível\nreorganizando e adicionando blocos para me levar até o porco!"
      K-1 artist 1 level 10: Desenhe linhas tracejadas usando os blocos pule e desenhe
      K-1 artist 1 level 9: Faça o desenho usando três retas
      K-1 maze debug 1: Altere o código para me levar até o porco!
      K-1 maze debug 10: "Depure esse nível reorganizando e trocando blocos\npara me levar até o porco!"
      K-1 maze debug 11: |-
        Isso é um teste!\r
        Depure esse nível reorganizando
        e trocando blocos para me levar até o porco
      K-1 maze debug 2: "Descubra o que está faltando e então adicione blocos\npara me levar até o porco!"
      K-1 maze debug 3: "Descubra o que está faltando e então REMOVA\nblocos\npara me levar até o porco!"
      K-1 maze debug 4: "Passe por esses blocos e conserte-os! Eu acho\nque estou indo na direção errada."
      K-1 maze debug 5: "Depure esse nível reorganizando e trocando blocos\npara me levar até o porco!"
      K-1 maze debug 6: "Depure esse nível reorganizando e trocando blocos\npara me levar até o porco!"
      K-1 maze debug 7: "Depure esse nível reorganizando e trocando blocos\npara me levar até o porco!"
      K-1 maze debug 8: "Depure esse nível reorganizando e adicionando\nblocos\npara me levar até o porco!"
      K-1 maze debug 9: "Depure esse nível reorganizando e trocando blocos\npara me levar até o porco!"
      K2.0 sequence 1: Altere o código para me levar até o porco!
      K2.0 sequence 10: 'Desafio: Me mova em volta da TNT para chegar até o porco.'
      K2.0 sequence 12: 'Vamos pegar aquele porco! '
      K2.0 sequence 2: Altere o código para me levar até o porco!
      K2.0 sequence 3: Descubra o que está faltando e então REMOVA blocos para me levar até o porco!
      K2.0 sequence 4: Hora para um quebra-cabeça menor!  Mova um caminho e, em seguida, mova outro para me levar até o porco.
      K2.0 sequence 4a: Tente este quebra-cabeça de novo do início!
      K2.0 sequence 5: Mova-me por um caminho, e então por outro para me levar até o porco!
      K2.0 sequence 6: "Descubra o que está faltando e então adicione blocos\npara me levar até o porco!"
      K2.0 sequence 7: Resolva este nível e me leve até o porco!
      K2.0 sequence 8: Analise este nível adicionando blocos para me levar até o porco!
      K2.0 sequence 9: 'Desvie do TNT para me levar até o porco! '
      K2.0 sequence FP: Agora descubra como pegar o porco da maneira que puder!
      KIKI GLJ Test Response: 'Olhe cuidadosamente para o código abaixo. O que você acha que acontecerá com o avião quando você clicar "Executar"?  '
      KTest1: Você pode me mover para o Sul mais uma vez para chegar até o porco?
      KTest2: Desenhe o caminho e leve-me até aquele porco bobalhão. Não passe pelas dinamites, senão penas vão voar!
      Kiki_StarWars_Test_3: Texto
      Kiki_StarWars_Test_4: Texto
      Kiki_StarWars_Test_5: Texto
      Kiki_StarWars_Test_5_Example: Texto
      LaurelDebugging4Video1: Mova Laurel ao redor e pegue quanto ouro puder!
      Limited Quantity of Blocks Test: Leve-me até o porco usando apenas um bloco
      Luigi's Pizza 1: "Bem-vindo à pizzaria do Luigi! Para pedir uma pizza,\ndigite o nome de um sabor na função \"custo\" e vamos retornar o\npreço da pizza. Tente pedir uma pizza de pepperoni para começar."
      Luigi's Pizza 2 (copy 1): Agora há apenas quatro opções disponíveis na pizzaria do Luigi - vamos arrumar isso! Adicione alguns novos sabores ao bloco condicional na função "custo". Quando adicionar seus sabores, teste a função para ver se ela funciona.
      Luigi's Pizza 2: "Agora há apenas quatro opções disponíveis\nna pizzaria do Luigi - vamos arrumar isso! Adicione alguns novos sabores ao bloco condicional\nna função \"custo\". Quando adicionar seus sabores, teste\na função para ver se ela funciona."
      Luigi's Pizza 3 (copy 1): "Assim está melhor, todos adoram uma maior\nvariedade nos sabores de pizza! Mas você ainda não consegue agradar a todos, e\nalgumas pessoas estão vindo pedir sabores que Luigi não tem. Ao invés de\ndizer não a essas pessoas, você poderia atualizar a cláusula \"senão\" para que possamos\ncobrar a mais deles por sabores que normalmente não oferecemos?"
      Luigi's Pizza 3: "Assim está melhor, todos adoram uma maior variedade nos\nsabores de pizza! Mas você ainda não consegue agradar a todos, e algumas pessoas estão\nvindo pedir sabores que Luigi não tem. Ao invés de dizer não\na essas pessoas, você poderia atualizar a cláusula \"senão\" para que possamos cobrar a\nmais deles por sabores que normalmente não oferecemos? Vamos cobrar R$10.000\npor um sabor que não está disponível."
      Luigi's Pizza 4: "Atividade livre: o que você pode fazer para deixar a função de custo do Luigi\nainda melhor? Tente usar uma (ou mais) das seguintes opções:\\r\n- Mostrar uma\nimagem da pizza escolhida\\r\n- Permitir a combinação de vários sabores\\r\n-\nPermitir o pedido de várias pizzas\\r\n- Adicionar um cupom com código para um desconto de 50%"
      MC Agent Freeplay: "**Jogo Livre:**  É hora de explorar sozinho!"
      MC HOC 2016 Level 10: "É hora de criar seu próprio Minecraft! Invoque\ncriaturas e programe para que elas façam o que você quiser. Divirta-se!"
      MC HOC 2016 Level 2-2: "A galinha está congelada. Coloque blocos de \"mover\" e\n\"virar\" no espaço \"ao invocar\" para movê-la."
      MC HOC 2016 Level 3: "Ótimo, a galinha se moveu! Mas depois ela parou.\nNos jogos, elas ficam caminhando. Use um loop de \"fazer eterno\" para manter essas galinhas\nem movimento.\\r\n"
      MC HOC 2016 Level 4: "Agora as galinhas estão esquisitas, andando todas\niguais. Jogos usam movimentos aleatórios para fazer as coisas parecerem reais. Faça as galinhas \"virarem\naleatoriamente\"."
      MC HOC 2016 Level 5: "Essas vacas estão perdidas! Leve-as até a grama\ncom um bloco \"mover um passo adiante\" em um loop de \"fazer eterno\"."
      MC HOC 2016 Level 6: "Agora você faz os zumbis. Use o bloco \"invocar\"\npara fazer 3 zumbis ao cair da noite. Faça-os andar até você. Sobreviva\naté o amanhecer."
      MC HOC 2016 Level 8: "O caminho até sua ovelha está bloqueado por uma parede de\npedra. Por sorte, tem um Creeper aqui. Os Creepers explodem quando você encosta neles.\nFaça o Creeper explodir a parede para você alcançar suas ovelhas!"
      MC HOC 2016 New Drop: "No Minecraft, ovelhas derrubam lã. Coloque o\nbloco \"derrubar\" em \"ao usar\", depois caminhe até a ovelha e use-a para derrubar um item."
      MC HOC 2016 New Spawn: "Agora você pode colocar tudo o que quiser no\nmundo! Coloque um bloco \"invocar\" abaixo de \"ao executar\" para invocar algo quando o jogo iniciar."
      MC HOC 2016 New Walk: "Vamos explorar nosso mundo! Mova-se com as\nsetas, e pressione a barra de espaço ou toque no painel do jogo para usar os itens. Use a\nporta para entrar na casa."
      MC HOC 2016 SCORE LEVEL: "Alguns jogos têm placar. Brinque de pega-pega\ncom esses Golems de Ferro e use o bloco \"adicionar 1 ao placar\" para receber um ponto\nao tocá-los. Faça 5 pontos para vencer!"
      MC HOC 2016 Village Test: "Ah não! Os zumbis trancaram você do lado de dentro!\nPrograme o Golem de Ferro para acabar com eles!"
      MC_HOC_2017_01_Cole: Você precisa coletar todas as ferramentas nesta jornada. Movimente-se usando as **teclas de seta** e chegue até o baú no caminho para vencer
      MC_HOC_2017_01_RETRY: 'Leve o Agent para a placa de pressão, em seguida pressione "Executar" e use as teclas de seta para mover o jogador para fora da casa para coletar o baú. '
      MC_HOC_2017_01_RETRY_2019: 'Leve o Agent para a placa de pressão, em seguida pressione "Executar" e use as teclas de seta para mover o jogador para fora da casa para coletar o baú. '
      MC_HOC_2017_02: Leve o Agent para a placa de pressão.
      MC_HOC_2017_02_Cole: 'Mova o Agent para a placa de pressão para que o jogador {currentPlayerName} consiga pegar o mapa. '
      MC_HOC_2017_02_Cole_2019: 'Mova o Agent para a placa de pressão para que o jogador {currentPlayerName} consiga pegar o mapa. '
      MC_HOC_2017_02_Kiki: Leve o Agent até a placa de pressão e, em seguida, leve o jogador para o quadrado laranja.
      MC_HOC_2017_02_Will: Leve o Agent para a placa de pressão.
      MC_HOC_2017_03_Cole: 'Use o código do Agent para abrir o portão. '
      MC_HOC_2017_03_Cole_2019: 'Use o código do Agent para abrir o portão. '
      MC_HOC_2017_03_Kiki: Leve o Agent para a placa de pressão.
      MC_HOC_2017_04: Altere o ciclo do último enigma para ajudar o Agent a trilhar um caminho sobre a parte mais larga deste rio.
      MC_HOC_2017_04POINT5_Cole: Leve o Agent para a placa de pressão.
      MC_HOC_2017_04POINT5_RYAN: Leve o Agent para a placa de pressão.
      MC_HOC_2017_04POINT5_RYAN_2019: Leve o Agent para a placa de pressão.
      MC_HOC_2017_04_Cole: Leve o Agent para a placa de pressão.
      MC_HOC_2017_04_Cole_2019: Leve o Agent para a placa de pressão.
      MC_HOC_2017_04_Kiki: Leve o Agent para a placa de pressão.
      MC_HOC_2017_05: Use uma função para ajudar o Agent a chegar até a placa de pressão.
      MC_HOC_2017_05_Cole: Leve o jogador até a pá.
      MC_HOC_2017_05_Cole_2019: Leve o jogador até a pá.
      MC_HOC_2017_05_Josh: Leve o jogador até a pá.
      MC_HOC_2017_05_Kiki: Leve o jogador até o quadrado laranja.
      MC_HOC_2017_06_Cole: Corrija esse código para que o Agent consiga construir uma ponte para cruzar esse rio.
      MC_HOC_2017_06_Cole_2019: Corrija esse código para que o Agent consiga construir uma ponte para cruzar esse rio.
      MC_HOC_2017_06_Josh: Corrija esse código para ajudar o Agent a construir uma ponte para cruzar esse rio.
      MC_HOC_2017_06_Kiki: Corrija esse código para ajudar o Agent a construir uma ponte para cruzar esse rio.
      MC_HOC_2017_07_Cole: Destrua o gelo e leve o jogador {currentPlayerName} para o Carrinho de Minas.
      MC_HOC_2017_07_Cole_2019: Destrua o gelo e leve o jogador {currentPlayerName} para o Carrinho de Minas.
      MC_HOC_2017_07_Kiki: Use uma função para abrir o caminho até o quadrado laranja.
      MC_HOC_2017_07a_Kiki: Abra o caminho até o quadrado laranja.
      MC_HOC_2017_08_Cole: Altere a função fornecida para funcionar com este bioma.
      MC_HOC_2017_08_Kiki: Altere a função para funcionar com este enigma.
      MC_HOC_2017_08_RY: Use as funções para encontrar um caminho pela lava.
      MC_HOC_2017_08_Will: Use as funções para encontrar um caminho pela lava.
      MC_HOC_2017_09_Cole: Programe o Agent para abrir o caminho para o jogador.
      MC_HOC_2017_09_Kiki: Programe o Agent para abrir o caminho para o jogador e levá-lo até a placa de pressão.
      MC_HOC_2017_10_Cole: Crie uma função para ajudá-lo a terminar este carrinho de minas.
      MC_HOC_2017_10_Cole_old: Crie uma função para ajudá-lo a terminar este carrinho de minas.
      MC_HOC_2017_10_Kiki: Crie uma função para ajudá-lo a terminar este carrinho de minas.
      MC_HOC_2017_10_RETRY: Crie uma função para ajudá-lo a terminar este carrinho de minas.
      MC_HOC_2017_10_RETRY_2019: Crie uma função para ajudá-lo a terminar este carrinho de minas.
      MC_HOC_2017_10_RYAN: Crie uma função para ajudá-lo a terminar este carrinho de minas.
      MC_HOC_2017_10_RYAN2: Crie uma função para ajudá-lo a terminar este carrinho de minas.
      MC_HOC_2017_13_Cole: "**Jogo Livre:**  É hora de explorar sozinho!"
      MC_HOC_2017_4.5v2: Leve o Agent para a placa de pressão.
      MC_HOC_2017_Ali: Use as funções para encontrar um caminho pela lava.
      MC_HOC_2017_Ali_2019: Use as funções para encontrar um caminho pela lava.
      MC_HOC_2017_FP10x10: "**Jogo Livre:** Você consegue se superar e coletar todos os diamantes deste nível? "
      MC_HOC_2017_FP10x10_RE: "**Jogo Livre:** Você consegue se superar e coletar todos os diamantes deste nível? "
      MC_HOC_2017_FP20x20: "**Jogo Livre:**  É hora de explorar sozinho!"
      MC_HOC_2017_FP20x20_2019: "**Jogo Livre:**  É hora de explorar sozinho!"
      MC_HOC_2017_Ryan_03: Agora use os ciclos para ajudar o Agent a construir uma ponte sobre o rio colocando os blocos na água.
      MC_HOC_2017_Ryan_05: Destrua esses cactos para que o jogador consiga chegar à meta.
      MC_HOC_Kiki_02: Leve o Agent para a placa de pressão.
      MSM Big Game Empty: "Todas as variáveis e funções atualmente são\ncampos vazios. A progressão de cada desafio será concentrada na definição e em vários\ndeles e, portanto, na adição de funcionalidade."
      MSM Big Game Vars 1 (copy 1): "Na caixa de ferramentas de variáveis você vai ver diversas\nvariáveis que definem a aparência dos personagens do seu jogo e como eles se movem e\ninteragem"
      MSM Big Game Vars 1: "Na caixa de ferramentas de variáveis você vai ver diversas\nvariáveis que definem a aparência dos personagens do seu jogo e como eles se movem e\ninteragem"
      MSM Big Game Vars Backup: "Na caixa de ferramentas de variáveis você vai ver diversas\nvariáveis que definem a aparência dos personagens do seu jogo e como eles se movem e\ninteragem"
      MSM Defining Vars 1 (copy 1): "Escreva um programa que produz um triângulo\nverde sólido de 50 pixels."
      MSM Defining Vars 1: "Escreva um programa que produz um triângulo\nverde sólido de 50 pixels."
      MSM Defining Vars 2 (copy 1): Se quiséssemos fazer cinquenta triângulos verdes, seria horrível repetir esse bloco de código 50 vezes. Vamos criar uma variável chamada "minha-forma" e colocar o código para um triângulo verde sólido de 50 pixels dentro dela.
      MSM Defining Vars 2: "Se quiséssemos fazer 50 triângulos verdes,\nseria horrível repetir esse bloco de código 50 vezes. Vamos criar uma\nvariável chamada \"minha-forma\" e colocar o código para um triângulo verde sólido de 50 pixels\ndentro dela."
      MSM Defining Vars 3 (copy 1): Pegue sua variável "minha-forma" e use-a com este código fornecido para desenhar dois triângulos verdes idênticos.
      MSM Defining Vars 3: "Pegue sua variável \"minha-forma\" e use-a\ncom esse código fornecido para desenhar dois triângulos verdes idênticos que têm\n50 pixels."
      MSM Defining Vars 4: "Edite sua variável \"minha-forma\" para que ela\ndesenhe estrelas vermelhas sólidas de 75 pixels."
      MSM Play Lab Butterfly 1: "Ajude Sam a ficar na tela para que\nvocê sempre possa ver pelo menos uma pequena parte dele. Usando as setas do teclado, veja\nquão longe Sam pode ir para a esquerda enquanto permanece na tela. Você vai descobrir que\nSam fica na tela enquanto sua coordenada x for maior que -50. Então, complete\no código para fazer Sam permanecer na tela."
      MSM Play Lab Butterfly 2: "Agora, faça Sam ficar no lado direito\nda tela. Você precisa fazer experimentos para ver o quão longe ele pode ir e ainda\nficar parcialmente visível na tela."
      MSM Play Lab Butterfly 3: "Agora, combine seu trabalho para fazer Sam permanecer\nem ambos os lados da tela."
      MSM Play Lab Game 2: "Variáveis também podem ser usadas para controlar\na velocidade de jogadores em um jogo. Defina a velocidade do jogador e do inimigo e veja\ncomo os movimentos mudam. A velocidade pode ficar entre 2 e 12."
      Middle School Hackathon Pt 1: "(Clique para ver todas as instruções)"
      Middle School Hackathon Pt 2: "(Clique para ver todas as instruções)"
      Mike Pair Programming: Veja aqui as instruções
      Mike Test Bee Conditionals 1: "Esta nuvem está tapando minha visão! Veja\nse há uma flor atrás da nuvem, e só colete néctar se houver\numa flor. Cuidado, isso pode mudar!"
      MikeAssessment1: Agora faça isto certo!
      MikeStar: Desenhe isto.
      MikeStarHard: Desenhe isto.
      MikeStarNested: Desenhe isto.
      MikeTest1: Quem sabe o que você deve fazer?!?!
      MikeTest2: Desenhe alguma coisa!
      MikeTest3: Construa Algo
      NEW Course 4 Artist Functions 1: "Você consegue desenhar um quadrado com\n100 pixels de comprimento usando um laço?"
      NEW Course 4 Artist Functions 10.1: "Use as funções dos desafios\nanteriores para desenhar esse padrão."
      NEW Course 4 Artist Functions 10: "Clique em \"editar\" para preencher\nos blocos na definição da função para fazer um quadrado de 40 pixels."
      NEW Course 4 Artist Functions 11: "Agora, queremos criar uma nova\nfunção chamada \"desenhe uma fileira de quadrados\", que desenha seis quadrados em sequência. Você\nconsegue criar essa função usando a função \"desenhe um quadrado 20\" que já criamos\npara você?"
      NEW Course 4 Artist Functions 12: "Use a função \"desenhe uma fileira de quadrados\"\ndo último desafio para desenhar esse padrão."
      NEW Course 4 Artist Functions 13: "Você consegue desenhar uma forma de estrela usando\na função \"desenhe uma fileira de quadrados\"?  "
      NEW Course 4 Artist Functions 14: 'Atividade livre! '
      NEW Course 4 Artist Functions 2: "Você consegue desenhar 3 quadrados com 20 pixels de distância\nentre cada um? Dica: cada quadrado tem 100 pixels de tamanho"
      NEW Course 4 Artist Functions 3: "Temos aqui um novo tipo de bloco.\nEle é chamado de \"função\". Clique em \"editar\" e então preencha-o com o código\npara desenhar um quadrado com lados de 100 pixels. \\r\n\\r\nQuando terminar de editar\na função, clique em \"Fechar\" para retornar ao seu programa."
      NEW Course 4 Artist Functions 4: "Use a função \"desenhe um quadrado\"\npara desenhar esse padrão."
      NEW Course 4 Artist Functions 5: "Como o bloco \"desenhe um quadrado\"\nsabia que comandos executar? Clique em \"editar\" no bloco de função \"desenhe um quadrado\".\nOs blocos no editor da função são a definição que\ncompõe \"desenhe um quadrado\". Quando você terminar de analisar, clique em \"Salvar\ne Fechar\" e então em \"Executar\"."
      NEW Course 4 Artist Functions 6: "Usando o bloco de função \"desenhe um quadrado\",\nvocê pode desenhar esta imagem? Dica: cada quadrado está separado por 20 pixels.\\r\n"
      NEW Course 4 Artist Functions 7: "Você está pegando o jeito de como\nusar os blocos de função? Vamos modificar esse quadrado para que ele tenha 200 pixels\nde tamanho. Clique em \"editar\" para acessar o editor da função \"desenhe um quadrado\". Lembre-se\nde clicar em \"Fechar\" para sair do editor da função. "
      NEW Course 4 Artist Functions 8: "Criamos uma nova função\npara você chamada \"desenhe um triângulo\". Você consegue editar a definição da função\npara desenhar um triângulo com lados de 100 pixels?"
      NEW Course 4 Artist Functions 9: "Você consegue resolver isso adicionando\napenas um bloco?"
      NEW Course 4 Artist Functions inspire: "Clique aqui para ver a figura\nde inspiração novamente."
      NEW Course 4 Artist Params 1: "Vamos definir essa função para desenhar\num quadrado com lados de 50 pixels. Clique em \"editar\" para começar."
      NEW Course 4 Artist Params 10: "Crie um bloco de função \"desenhe\num hexágono\" com um parâmetro \"comprimento\". Esse hexágono tem lados de 100 pixels\nde comprimento. "
      NEW Course 4 Artist Params 11: "Você consegue descobrir como desenhar\nessa forma? Edite a função para usar o parâmetro \"lados\"."
      NEW Course 4 Artist Params 12: "Você consegue completar esse desenho?\nOs lados de todas as formas têm 100 pixels de comprimento."
      NEW Course 4 Artist Params 12a: "Esta imagem é semelhante à anterior.\nVocê consegue usar um laço \"para\" com sua função para criar deste desenho?"
      NEW Course 4 Artist Params 13: "Vamos editar a função \"desenhe um\npolígono\". Ela já tem um parâmetro \"lados\". Agora, vamos adicionar um parâmetro\n\"comprimento\". \\r \nO perímetro de cada forma tem 200 pixels de comprimento. Você se lembra\nda equação para fazer as formas ficarem do mesmo tamanho quando elas têm um número diferente\nde lados?"
      NEW Course 4 Artist Params 14: "Edite \"desenhe uma borda espiral\" para\nusar os parâmetros \"comprimento\" e \"lados\" e então recrie essas formas."
      NEW Course 4 Artist Params 15: "Atividade livre: aqui estão as funções\nque você escreveu e mais algumas para você usar. Desenhe algo incrível!\nBrinque com a largura da caneta para ver como seus desenhos ficam diferentes!"
      NEW Course 4 Artist Params 2: Crie uma função `desenhar um triângulo` desde o início, para fazer um triângulo com lados de 50 pixels.
      NEW Course 4 Artist Params 3: "Vamos usar a função para desenhar\n5 triângulos em sequência. Cada triângulo está separado por 30 pixels.\\r\n"
      NEW Course 4 Artist Params 4: "Você percebe algo diferente\nsobre esses blocos de função? Clique em \"Executar\" para ver o que acontece."
      NEW Course 4 Artist Params 5: "Preencha \"???\" no bloco\ndo parâmetro \"comprimento\". O pentágono tem lados de 100 pixels. "
      NEW Course 4 Artist Params 6: "Preencha o parâmetro \"comprimento\"\npara desenhar essa formas substituindo o \"???\" pelos números corretos. O\nquadrado e o triângulo têm lados de 100 pixels, enquanto o hexágono tem lados de\n75 pixels."
      NEW Course 4 Artist Params 7: "Você consegue completar este desenho? Os\nlados de cada triângulo têm 25 pixels a mais que o anterior. O primeiro triângulo\ntem lados de 25 pixels de comprimento."
      NEW Course 4 Artist Params 8: "O código da função deste triângulo\nestá corrompido. Você consegue editar a função para corrigi-lo e criar triângulos\nde 25, 50 e 75 pixels de comprimento?"
      NEW Course 4 Artist Params 9: "Clique em \"editar\" para preencher a definição\nda função \"desenhe um quadrado\" e adicionar um parâmetro. Ela deve receber um parâmetro\ncomprimento, como no triângulo. Dessa vez, desenhe 3 quadrados: 25, 50 e 75\npixels de comprimento e separados por 100 pixels cada."
      NEW Course 4 Artist Params inspire: "Atividade livre - Inspiração: agora você\naprendeu tudo o que precisa saber para criar um padrão como esse! Se essa\nimagem inspira você, tente fazer algo similar. Caso contrário, crie algo\nvocê mesmo.\\r\n \\r\nQuer saber como nosso padrão de inspiração foi feito? "
      NEW Course 4 Artist Vars 1.5: "Dê uma olhada no código. Você consegue\nver como o bloco \"defina o comprimento\" e o bloco \"comprimento\" funcionam juntos? Clique\nem \"Executar\" para vê-los em ação. "
      NEW Course 4 Artist Vars 12: "Agora, recrie o algoritmo do último\nnível para criar um pentágono de lados 150."
      NEW Course 4 Artist Vars 2.5: "Dê uma olhada no código. Você consegue\nver como o bloco \"defina o comprimento\" e o bloco \"comprimento\" funcionam juntos? Clique\nem \"Executar\" para vê-los em ação. "
      NEW Course 4 Artist Vars 2: "Arraste um bloco numérico para os blocos \"defina\no comprimento\" e \"repita_vezes\" para desenhar um conjunto de triângulos de 50 pixels.\n"
      NEW Course 4 Artist Vars 4 5: "Belo trabalho no último desafio,\nvamos tentar novamente. Desta vez, vamos fazer esse design bacana com hexágonos\nde 60 pixels."
      NEW Course 4 Artist Vars 4: "Vamos tentar de novo! \\r\n\\r\nVocê consegue\ndefinir a variável \"comprimento\" em 60 para fazer este design bacana com hexágonos?"
      NEW Course 4 Artist Vars 6: "Desenhe esse padrão de pentágonos com\nlados de 100 pixels definindo o valor correto para \"comprimento\" e colocando a variável\n\"comprimento\" em todos os lugares corretos. \\r\n\\r\nVocê percebeu que só precisa\ndefinir o valor de \"comprimento\" uma vez, e o código usa o valor correto em todos os lugares?"
      NEW Course 4 Bee For Loops 1: "Use um laço para coletar o néctar de\ntodas as flores."
      NEW Course 4 Bee For Loops 10: "Use a variável \"contador\" do seu laço \"para\"\npara controlar a distância do movimento horizontal."
      NEW Course 4 Bee For Loops 10a: "Pronto para um desafio? Use o que\nvocê aprendeu sobre laços e tente resolver esse problema. Lembre-se: você pode\nter que executar sua solução várias vezes antes de descobrir todas as\netapas."
      NEW Course 4 Bee For Loops 11: "Você pode usar a variável do laço para\ncontrolar o movimento e a coleta de néctar?"
      NEW Course 4 Bee For Loops 2: "Adicione o código necessário para garantir que\na abelha colete todo o néctar. Olhe quanto código você precisa para esse desafio!\n(Vamos aprender uma maneira mais simples no próximo desafio)."
      NEW Course 4 Bee For Loops 3: "Ah, o \"laço para\" torna isso muito mais\nfácil! Todo o código que você precisa está lá, dê uma olhada em como ele é feito\ne então clique em \"Executar\" para ver como ele funciona. "
      NEW Course 4 Bee For Loops 4 4: "Agora, precisamos mover para a frente \"contador\"\nvezes, e então obter o néctar \"contador\" vezes. Você consegue usar dois laços \"repita\"\npara resolver esse desafio?"
      NEW Course 4 Bee For Loops 4: "Substitua o ??? no \"laço para\"\npela maior quantidade de néctar que a abelha tem que coletar. "
      NEW Course 4 Bee For Loops 5 5: "Você está pegando o jeito de como usar\no \"laço para\"? Vamos ajudar a abelha a obter o resto do néctar."
      NEW Course 4 Bee For Loops 5: "Você também pode usar um laço \"para\" para fazer contagem\nregressiva. Tente coletar esse néctar fazendo uma contagem regressiva de 5 até 1, de 1 em 1."
      NEW Course 4 Bee For Loops 6: "O último número em seu laço para é\nchamado de \"incremento\". A cada execução do laço, a variável contador\né alterada de acordo com o incremento. Tente coletar essas flores usando\num incremento de 2."
      NEW Course 4 Bee For Loops 7: |-
        Agora, vamos combinar a variável "contador"
        com um bloco matemático! Como você pode usar a variável "contador" para navegar
        por esse jardim com o menor número de blocos possível? O que você precisa fazer para
        coletar 3, 6, 9, 12 ou 15 néctares dessa vez? O segredo está na variável
        "contador"!\r
        \r
        Lembre-se: se seu laço estiver contando de forma crescente, o incremento é adicionado
        à variável "contador" a cada repetição.
      NEW Course 4 Bee For Loops 8: "Você conseguiu! Qual deve ser seu\nincremento para coletar 3, 6, 9, 12, 15 néctares?"
      NEW Course 4 Bee For Loops 9: "Se seu laço está fazendo contagem regressiva, o\nincremento é subtraído da sua variável contador a cada repetição. Qual deve ser\nseu incremento para coletar 9, então 6, e então 3 néctares?"
      NEW Course 4 Bee For Loops 95: "Dê uma olhada em cada parte do\n\"laço para\" que você acabou de criar. Você consegue descobrir quais números\nvocê precisa dobrar para resolver esse desafio? Por que isso funciona?"
      NEW Course 4 Play Lab Params 11: "É hora da atividade livre! Divirta-se\ncom todos os blocos da sua caixa de ferramentas. "
      NEW Course 4 Play Lab Params 5 5: "Vamos tentar novamente, mas agora com\nmenos ajuda. O que você precisa editar desta vez para fazer com que os personagens patrulhem?"
      NEW Course 4 Play Lab Vars 4 5: "\"O que você acha que esse código vai\nfazer? Pressione \"Executar\" para ver o que acontece\"."
      NEW Course 4 Play Labs For Loops 7a: "Usando o que você aprendeu até\nagora, você consegue fazer o dinossauro dar um passo à frente toda vez que o pinguim contar?"
      NEW Course 4 Play Labs For Loops 8 Free Play: "É hora da atividade livre,\ndivirta-se com todos os blocos da sua caixa de ferramentas. "
      NEW Course 4 Play Labs For Loops 8a: "Desafio: como você\nusaria o \"laço para\" para fazer cada ator andar e dizer seu número de ator,\ne então sumir da tela? "
      NetSim Standalone Manual DNS: "Nessa versão do simulador você não pode\nver o endereço de outros alunos. Ao invés disso, um de vocês deve agir como um\nserviço de nome, para ajudar a compartilhar os endereços entre si."
      NetSim_AddressingMessages: "Nessa versão do simulador, você vai\nse conectar a um roteador ao invés de se conectar diretamente a outro aluno. Insira um\nendereço no campo \"para\" para enviar uma mensagem a outro aluno."
      NetSim_AutomaticDNS: "Nessa versão do simulador um serviço DNS\né fornecido para você. Envie uma mensagem no formulário GET [hostname] para o serviço\nDNS no endereço 15 para obter o endereço de um aluno."
      NetSim_ManualDNS: "Nessa versão do simulador você não pode\nver o endereço de outros alunos. Ao invés disso, um de vocês deve agir como um\nserviço de nome, para ajudar a compartilhar os endereços entre si."
      NetSim_SendAB: "Conecte-se a outro aluno. Cada um pode definir\no valor do fio entre si mesmo e \"A\" ou \"B\".  Veja se você consegue enviar\numa mensagem completa!"
      NetSim_SendAscii: "Nessa versão do simulador, vocês podem enviar\nnúmeros ou caracteres ASCII uns para os outros, um bit por vez."
      NetSim_SendBits: "Conecte-se a outro aluno. Agora você pode definir\nseu fio como \"0\" ou \"1\".  Envie uma mensagem ao seu parceiro!"
      NetSim_SendingABTest: "Esse é o teste de Sarah para fazer um nível\nnetsim"
      NetSim_Superuser: Você carregou o NetSim no modo superusuário.
      NetSim_Variant1: "NetSim: Variante 1 permite que os alunos elaborem\nmanualmente o tempo de envio de bits para trás e para a frente."
      NetSim_Variant2: "NetSim: Variante 2: Os alunos se conectam diretamente\nuns aos outros e enviam pacotes inteiros para trás e para a frente, explorando sistemas de\ncodificação de dados."
      NetSim_Variant3: "NetSim: Variante 3: Conecta grupos de 2 a 6 alunos\ncom um roteador e explora questões sobre roteamento e DNS"
      New Artist Project: "Desenhe algo incrível! Seu código é salvo\ncomo um projeto e você pode retornar a ele a qualquer momento."
      New Basketball Project: Crie seu próprio jogo de basquete. Você pode mudar todas as regras. Quando terminar, clique em Concluir para permitir que seus amigos possam testar seu jogo em seus smartphones.
      New Bounce Project: Crie seu próprio jogo de Pingue-pongue. Você pode mudar o visual e todas as regras. Quando terminar, clique em Concluir para que seus amigos possam jogar seu jogo em seus celulares.
      New Course 4 Artist Functions Level 4: "Use a função \"desenhe um quadrado\"\npara desenhar esse padrão."
      New Gumball Project: Crie o que quiser e compartilhe!
      New Ice Age Project: Crie o que quiser e compartilhe!
      New Infinity Project: Crie o que quiser e compartilhe!
      New Minecraft Hero Project: "**Jogo Livre:**  É hora de explorar sozinho!"
      New Sports Project: 'Crie seu próprio jogo! Aqui, você está no comando: você pode mudar todas as regras, misturar e combinar esportes, e criar o que quiser! Quando terminar, clique em Concluir para deixar seus amigos experimentarem seu jogo em seus smartphones.'
      Ninjacat Demo B (copy 1): "\\r\nVamos começar explorando um video game\nsimples e então descobrir como ele funciona. Você pode usar as setas do teclado\npara mover o ninja para a esquerda, para a direita e para pular - tente pegar o unicórnio e\ndesvie do dragão!\\r\n\\r\n\\r\n\\r\n  \\r\n\\r\n"
      Ninjacat Demo B: "Vamos começar explorando um jogo simples\ne então vamos descobrir como ele funciona. Você pode usar as setas do teclado para mover o\nninja para cima e para baixo - tente capturar o unicórnio e desviar do dragão! Quando você\nachar que já descobriu como o jogo funciona, clique em \"Concluir\""
      Ninjacat Demo No Animate: "Vamos começar explorando um jogo simples\ne então vamos descobrir como ele funciona. Você pode usar as setas do teclado para mover o\nninja para cima e para baixo - tente capturar o unicórnio e desviar do dragão! Quando você\nachar que já descobriu como o jogo funciona, clique em \"Concluir\""
      October15 ghost 1: Dê olhos ao fantasma, usando a função "desenhar um círculo".
      Overworld Avoid Monsters: Não é uma boa ideia topar com um Creeper. Passe com cuidado pelos Creepers e chegue na sua casa em segurança.
      Overworld Avoid Monsters_2018: Não é uma boa ideia topar com um Creeper. Passe com cuidado pelos Creepers e chegue na sua casa em segurança.
      Overworld Avoid Monsters_2019: Não é uma boa ideia topar com um Creeper. Passe com cuidado pelos Creepers e chegue na sua casa em segurança.
      Overworld Chop Tree - allthethings: Madeira é um recurso muito importante. Muitas coisas são feitas com ela. Ande até a árvore e use o comando "destruir bloco" para derrubá-la.
      Overworld Chop Tree: Madeira é um recurso muito importante. Muitas coisas são feitas com ela. Ande até a árvore e use o comando "destruir bloco" para derrubá-la.
      Overworld Chop Tree_2018: Madeira é um recurso muito importante. Muitas coisas são feitas com ela. Ande até a árvore e use o comando "destruir bloco" para derrubá-la.
      Overworld Chop Tree_2019: Madeira é um recurso muito importante. Muitas coisas são feitas com ela. Ande até a árvore e use o comando "destruir bloco" para derrubá-la.
      Overworld Chop Trees: Precisamos construir uma casa antes que o sol se ponha. Casas utilizam muita madeira. Corte todas as 3 árvores.
      Overworld Chop Trees_2018: Precisamos construir uma casa antes que o sol se ponha. Casas utilizam muita madeira. Corte todas as 3 árvores.
      Overworld Chop Trees_2019: Precisamos construir uma casa antes que o sol se ponha. Casas utilizam muita madeira. Corte todas as 3 árvores.
      Overworld Free Play 20x20: Parabéns! Você concluiu todas as nossas tarefas! Agora, minere, construa e crie algo único, usando tudo que você já aprendeu.
      Overworld Free Play 20x20_2018: Parabéns! Você concluiu todas as nossas tarefas! Agora, minere, construa e crie algo único, usando tudo que você já aprendeu.
      Overworld Free Play 20x20_2019: Parabéns! Você concluiu todas as nossas tarefas! Agora, minere, construa e crie algo único, usando tudo que você já aprendeu.
      Overworld House Frame Chosen: "Construa o resto da sua casa com\nqualquer material que quiser. O comando \"repita\" vai ser bem útil."
      Overworld House Frame Chosen_2018: "Construa o resto da sua casa com\nqualquer material que quiser. O comando \"repita\" vai ser bem útil."
      Overworld House Frame Chosen_2019: "Construa o resto da sua casa com\nqualquer material que quiser. O comando \"repita\" vai ser bem útil."
      Overworld Move to Sheep: Adicione um segundo comando "andar à frente" para chegar à ovelha.
      Overworld Move to Sheep_2018: Adicione um segundo comando "andar à frente" para chegar à ovelha.
      Overworld Move to Sheep_2019: Adicione um segundo comando "andar à frente" para chegar à ovelha.
      Overworld Place Wall: Toda casa começa com uma parede. Construa a primeira parte da sua casa colocando os comandos "colocar" e "andar à frente" dentro do loop de repetição.
      Overworld Place Wall_2018: Toda casa começa com uma parede. Construa a primeira parte da sua casa colocando os comandos "colocar" e "andar à frente" dentro do loop de repetição.
      Overworld Place Wall_2019: Toda casa começa com uma parede. Construa a primeira parte da sua casa colocando os comandos "colocar" e "andar à frente" dentro do loop de repetição.
      Overworld Plant Crops: É sempre bom pensar no futuro. Plante colheitas nos dois lados da água para você não passar fome depois.
      Overworld Plant Crops_2018: É sempre bom pensar no futuro. Plante colheitas nos dois lados da água para você não passar fome depois.
      Overworld Plant Crops_2019: É sempre bom pensar no futuro. Plante colheitas nos dois lados da água para você não passar fome depois.
      Overworld Powered Minecart: Ótimo trabalho! Você coletou vários recursos e construiu uma casinha modesta. Agora, construa o trilho desde a borda do mapa até a porta da sua casa.
      Overworld Powered Minecart_2018: Ótimo trabalho! Você coletou vários recursos e construiu uma casinha modesta. Agora, construa o trilho desde a borda do mapa até a porta da sua casa.
      Overworld Powered Minecart_2019: Ótimo trabalho! Você coletou vários recursos e construiu uma casinha modesta. Agora, construa o trilho desde a borda do mapa até a porta da sua casa.
      Overworld Shear Sheep: Hora de tosquiar ovelhas! Use o comando "tosquiar" para obter lã das duas ovelhas.
      Overworld Shear Sheep_2018: Hora de tosquiar ovelhas! Use o comando "tosquiar" para obter lã das duas ovelhas.
      Overworld Shear Sheep_2019: Hora de tosquiar ovelhas! Use o comando "tosquiar" para obter lã das duas ovelhas.
      PDK5 Conditionals 1: "As flores roxas podem ter 1 ou 0 néctar,\nmas você não sabe quanto ela tem! Tome cuidado para não coletar néctar de uma flor roxa\nque não tenha néctar algum. Verifique se o néctar é igual a 1 usando\no bloco se."
      PDK5 Conditionals 2: "Experimente esse desafio que usa condicionais e\nlaços em conjunto. Use o bloco \"se\" para decidir quando virar. Dica: você só\nprecisa de mais um bloco para completar este desafio. "
      PDK5 Events 1: "Até agora, todos os programas que escrevemos são executados\nem ordem, de cima para baixo. Nesse desafio, vamos usar \"Eventos\" para responder\na uma ação em demanda. Faça o polvo dizer \"Olá\" somente quando você\nclicar nele. "
      PDK5 Functions 1: "Olá. Mim artista zumbi. Mim amar desenhar! Ajude-me\na desenhar os óculos quadrados. Dica: a haste entre os óculos é 25 pixels\nmenor que o comprimento do quadrado."
      PDK5 Functions 2: "As funções permitem que você defina novos blocos! Movemos\nos blocos para desenhar um quadrado dentro de uma função chamada \"desenhe um quadrado\".\nVocê consegue usar a função \"desenhe um quadrado\" para criar os óculos? Os quadrados são separados\npor 75 pixels."
      PDK5 Loops 1: "Ao invés de usar 5 blocos \"avance\", use\no bloco \"repita\" com um bloco \"avance\" dentro dele. Em ciência da\ncomputação, isso é chamado de \"laço\". "
      PDK5 Loops 3: "Temos aqui outro desafio para praticar o uso de laços. O que acontece\nse você usar o bloco repita para executar o código fornecido na área de trabalho\n4 vezes?"
      PS - test - pixelation: Complete a forma X digitando 0s e 1s
      PS Log test - Define and use turnAround: "Escreva a função virar() e\nuse-a para fazer a tartaruga se mover como descrito."
      PS copy 2-3 Bee Conditionals 5: "Tenha cuidado para não coletar néctar das\nflores roxas que não o têm. \\r\nPrimeiro, veja se o néctar\né igual a 1 usando o bloco \"se néctar\"."
      PS predictive Applab level test: 'Veja aqui algumas instruções. '
      Pixelation - Lesson 14 - Make the Letter A: 'Faça uma letra ''A'' 3x5. O widget está configurado com as dimensões incorretas. Sua primeira tarefa é definir o segundo byte do código binário de 8-bits para o número 5: 0000 0101. Então começe a inserir os dados do pixel.'
      Pixelation - Lesson 14 - Make the Letter A_2018: 'Faça uma letra ''A'' 3x5. O widget está configurado com as dimensões incorretas. Sua primeira tarefa é definir o segundo byte do código binário de 8-bits para o número 5: 0000 0101. Então começe a inserir os dados do pixel.'
      Pixelation - Lesson 14 - Make the Letter A_2019: 'Faça uma letra ''A'' 3x5. O widget está configurado com as dimensões incorretas. Sua primeira tarefa é definir o segundo byte do código binário de 8-bits para o número 5: 0000 0101. Então começe a inserir os dados do pixel.'
      Pixelation - Lesson 14 - Make your own B and W Image: Agora, crie sua própria imagem! Começamos com uma tela de 10x10, mas você pode deixá-la do tamanho que você quiser. Feliz pixelização!
      Pixelation - Lesson 14 - Make your own B&W Image: Agora, crie sua própria imagem! Começamos com uma tela de 10x10, mas você pode deixá-la do tamanho que você quiser. Feliz pixelização!
      Pixelation - Lesson 15 - Color Shades 4x4: 'Vamos começar com a imagem 4x4 que Maddie criou no vídeo. Sua tarefa é preencher uma grade 4x4 com cores usando 12-bits por pixel. Aqui estão os requisitos: Linha 1 - preencha com sombras de vermelho. Linha 2 - sombras de verde. Linha 3 - sombras de azul. Linha 4 - sombras de cinza.'
      Pixelation - Lesson 15 - Color Shades 4x4_2018: 'Vamos começar com a imagem 4x4 que Maddie criou no vídeo. Sua tarefa é preencher uma grade 4x4 com cores usando 12-bits por pixel. Aqui estão os requisitos: Linha 1 - preencha com sombras de vermelho. Linha 2 - sombras de verde. Linha 3 - sombras de azul. Linha 4 - sombras de cinza.'
      Pixelation - Lesson 15 - Color Shades 4x4_2019: 'Vamos começar com a imagem 4x4 que Maddie criou no vídeo. Sua tarefa é preencher uma grade 4x4 com cores usando 12-bits por pixel. Aqui estão os requisitos: Linha 1 - preencha com sombras de vermelho. Linha 2 - sombras de verde. Linha 3 - sombras de azul. Linha 4 - sombras de cinza.'
      Pixelation - Lesson 15 - Complete 3-bit color: Vamos começar com você com a imagem 4x2 que Maddie estava criando, más deixamos de fora os últimos dois quadrados. Termine a imagem descobrindo quais duas cores estão faltando e codifique-as.
      Pixelation - Lesson 15 - Complete 3-bit color_2018: Vamos começar com você com a imagem 4x2 que Maddie estava criando, más deixamos de fora os últimos dois quadrados. Termine a imagem descobrindo quais duas cores estão faltando e codifique-as.
      Pixelation - Lesson 15 - Complete 3-bit color_2019: Vamos começar com você com a imagem 4x2 que Maddie estava criando, más deixamos de fora os últimos dois quadrados. Termine a imagem descobrindo quais duas cores estão faltando e codifique-as.
      Play Lab Rocket 1: "Um foguete é lançado, viajando a 15 metros\npor segundo... clique em \"Executar\" para ver como é esse problema em forma de animação."
      Play Lab Rocket 2: "Começamos a receita de design para a altura do foguete\nusando o contrato e os exemplos que você escreveu. Complete a definição da função\npara a altura do foguete e execute sua animação."
      Play Lab Rocket 2B: "Um foguete decola, viajando a 15 metros\npor segundo. Usando a receita de design, escreva uma função chamada altura-foguete\nque recebe o número de segundos passados desde a decolagem do foguete\ne retorna a altura do foguete passado esse tempo."
      Play Lab Rocket 3: "Excelente! Agora, você consegue atualizar essa função para\nque nosso foguete se mova mais rapidamente? Lembre-se de atualizar a instrução de finalidade,\nos exemplos e a definição da função para lançar um foguete a 40 metros por segundo."
      Play Lab Rocket 4 (copy 1): Foguetes de verdade partem lentamente e ganham velocidade com o passar do tempo - vamos fazer com que o nosso faça o mesmo! Escreva uma função exponencial que descreva um foguete que viaja a "segundos" metros por segundo ao quadrado.
      Play Lab Rocket 4: "Foguetes de verdade começam devagar e ganham velocidade\ncom o passar do tempo - então vamos adicionar uma aceleração simples ao nosso! Você pode\nescrever uma função que descreve um foguete que está a 10 metros em 1 segundo, 40 metros\nem 2 segundos, 90 metros em 3 segundos, 160 em 4 segundos e assim por diante?"
      Play Lab Rocket 5: "Muito melhor, mas vamos escrever mais uma função\ncom aceleração simples. Dessa vez o foguete deve estar a 15 metros em 1 segundo,\n45 metros em 2 segundos, 95 metros em 3 segundos e 165 metros em 4 segundos."
      Play Lab Rocket Free Play: "Atividade livre: faça uma experiência com sua função altura-foguete\npara fazer o foguete voar de formas diferentes. Clique em \"Concluir\" quando você\nterminar."
      Poorva copy U3L2 Using Simple Commands: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      Project - Final Image Scroller: Atualize o scroller de imagem para responder a botões e a digitar de teclas. (Clique para ver as instruções completas)
      Project - Final Image Scroller_2018: Atualize o scroller de imagem para responder a botões e a digitar de teclas. (Clique para ver as instruções completas)
      Project - Final Image Scroller_2019: Atualize o scroller de imagem para responder a botões e a digitar de teclas. (Clique para ver as instruções completas)
      Project - Finish your canvas app: Estenda a funcionalidade de um dos efeitos, ou crie um novo de sua preferência. (Clique para ver todas as instruções)
      Project - Your Own Multi Screen App: Crie seu app com várias telas (clique para ver as instruções completas).
      Project - Your Own Multi Screen App_2018: Crie seu app com várias telas (clique para ver as instruções completas).
      Project - Your Own Multi Screen App_2019: Crie seu app com várias telas (clique para ver as instruções completas).
      Quantum Bee: "As flores roxas podem ter 1 ou 0 néctar,\nmas você não sabe quanto ela tem! Tome cuidado para não coletar néctar de uma flor roxa\nque não tenha néctar algum. Verifique se o néctar é igual a 1 usando\no bloco se."
      Ram Spritelab Validation Test: Pressione a seta para cima
      Rocket Height Course A: Siga a receita de design para criar uma função foguete-altura.
      Ryan - 4-5 Bee Conditionals 2: "Agora, a abelha só quer néctar.\nNem todos os objetos são flores, então olhe embaixo de TODAS AS NUVENS para ver se\nela está escondendo uma flor. Se estiver, então você pode coletar o néctar."
      Ryan - Bee Conditionals: "Agora, a abelha só quer néctar.\nNem todos os objetos são flores, então olhe embaixo de TODAS AS NUVENS para ver se\nela está escondendo uma flor. Se estiver, então você pode coletar o néctar."
      Ryan Doily Step 2: Agora, você precisa ativar e repeti-lo 20 vezes! Quantos graus se obter 360 depois de 20 iterações?
      Ryan Doily Step 3: Agora, você precisa ativar e repeti-lo 20 vezes! Quantos graus se obter 360 depois de 20 iterações?
      Ryan Test Locked Blocks: "Aqui temos uma função chamada \"patrulhe\".\nEdite-a para mover o gato 400 pixels para cima, e então 400 pixels para baixo."
      Ryan_Demo: Faça o alce iniciar um novo movimento após quatro compassos!
      SG Add Subgoals practice: "Desenhe uma grade 3x3 acima e à direita da\ntartaruga. Tente fazer isso com o menor número de comandos possível. OBSERVAÇÃO:\nEsse problema é bastante desafiador. Você deve precisar passar um tempo resolvendo-o\ne ajustando-o.  Você também deve considerar usar lápis e papel para esboçar\nsuas ideias."
      SG U3L03 Define and use turnAround: "Escreva a função virar() e\nuse-a para fazer a tartaruga se mover como descrito."
      SG U3L03 Draw a T using turnAround: "Agora a função \"virar\" é \nfornecida no código. Use a função virar() para desenhar um T conforme\ndescrito."
      SG U3L03 Three Steps: "Desenhe 3 \"passos\", movendo para cima e para a direita. Observe\no padrão do movimento. Você deve definir uma função chamada desenharPasso()\nque desenha um dos passos e então chamá-la 3 vezes para obter o efeito desejado."
      SG U3L03 draw diamond: "Use qualquer função que você escreveu\nantes para fazer uma forma de \"diamante\" conforme mostrado na imagem.\\r\n\\r\nOBSERVAÇÃO:\nessa é mais uma pegadinha.  Os 4 lados do diamante são feitos desenhando\ntrês etapas com outro movimento feito entre as chamadas.  Dica: você deve criar\noutra função que desenha um lado do diamante. "
      SG U3L06 Challenge 2 purple square: "Desta vez vamos aprender\num pouco sobre como alterar a caneta da tartaruga. Leia a documentação para encontrar\nlarguraCaneta() e corCaneta(), e então desenhe o quadrado roxo como foi mostrado."
      SG U3L06 Challenge 3 fill pink: "Agora, vamos tentar preencher todo o fundo\nda tela. Para deixar as coisas um pouco mais fáceis para você, podemos lhe dizer\nque a cor que escolhemos é uma das 140 cores nomeadas. Se você não souber os\nnomes das cores, dê uma olhada na documentação de corCaneta()\nnovamente. Dica: você precisa usar ponto()."
      SG U3L06 Challenge 4 bullseye: "Vamos tentar mais uma vez.\nDesta vez as cores NÃO são chamadas pelo nome - você precisa usar o número hexadecimal\ncor para defini-la. Assim, para que você não fique tentando adivinhar aleatoriamente, vamos\nlhe dar uma dica -- cada uma das cores mostradas na imagem-alvo é uma das\ncinco listadas a seguir:  #00ABDC, #CC4400, #1188CC, #006699,\n#11CC00  Você deve acertar o palpite se aplicar o que sabe sobre\ncores RGB."
      SG U3L06 Challenge 5 overlapping circles: "Esta imagem é criada apenas\nusando ponto() e corCaneta(), mas como vamos fazer esses círculos ficarem\ntransparentes? Se você ainda não recebeu a dica: leia a documentação!"
      SG U3L06 Challenge 6 squiggles: "Em seguida, vamos adicionar algumas\ncurvas ao nosso desenho. Leia a documentação para os comandos de \"arco\" e\nentão desenhe os rabiscos como mostrado. Para facilitar as coisas, temos aqui uma dica: todos\nos parâmetros são múltiplos de 10 e as cores são da seguinte lista de\nnomes de cores: azulCeleste, azulClaro, azulTurquesa, Roxo e Magenta."
      SG U3L06 Challenge 7 smiley face: "Para fazer essa carinha feliz você vai\nprecisar olhar a documentação do comando mova() e então usá-lo com os\noutros que você aprendeu. Você pode fazer suposições razoáveis sobre as cores."
      SG U3L06 Challenge 8 make your own: "Use as ferramentas que você aprendeu\nhoje para criar um desenho próprio. Se você tiver tempo, desafie seus\namigos para ver se eles conseguem duplicar sua imagem. Vamos mostrar para você os\ndesenhos que nós mesmos fizemos. Você pode tentar duplicá-los, se quiser.\nCaso não queira, divirta-se criando o seu próprio desenho!"
      SG U3L07 - Free Play Loops and Random: "Atividade livre! Use o que você aprendeu\nsobre laços e aleatoriedade para criar sua própria pequena cena. Divirta-se."
      SG U3L07 - randomSquare: Desenhe a figura usando um laço. (Clique para ver todas as instruções)
      SG U3L07 More Subgoals: "Desta vez vamos aprender\num pouco sobre como alterar a caneta da tartaruga. Leia a documentação para encontrar\nlarguraCaneta() e corCaneta(), e então desenhe o quadrado roxo como foi mostrado."
      SG U3L2 Using Simple Commands part 1: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      SG U3L2 Using Simple Commands: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      SG U3L2_Add-subgoals: "Desenhe uma grade 3x3 acima e à direita da\ntartaruga. Tente fazer isso com o menor número de comandos possível. OBSERVAÇÃO:\nEsse problema é bastante desafiador. Você deve precisar passar um tempo resolvendo-o\ne ajustando-o.  Você também deve considerar usar lápis e papel para esboçar\nsuas ideias."
      SG U3L2_Turtle3by3Grid: "Desenhe uma grade 3x3 acima e à direita da\ntartaruga. Tente fazer isso com o menor número de comandos possível. OBSERVAÇÃO:\nEsse problema é bastante desafiador. Você deve precisar passar um tempo resolvendo-o\ne ajustando-o.  Você também deve considerar usar lápis e papel para esboçar\nsuas ideias."
      SG U3L2_TurtleSquare_right: "Desenhe um quadrado usando apenas avance\ne vireEsquerda, mas, desta vez, faça o quadrado aparecer ACIMA e À DIREITA\nda posição inicial."
      Sam the Butterfly 1 (copy 1): "Essa borboleta se chama Sam e\na área do jogo é o quintal de Sam. O quintal de Sam tem 400 pixels de largura por 400 de\naltura! Como você pode ver, Sam é livre para andar pelo quintal, e as coordenadas na parte\nsuperior da tela são atualizadas para que você saiba sua localização. Use as setas do teclado\npara mover Sam pelo quintal. Ajude Sam a coletar todas as bandeiras para seguir em frente."
      Sam the Butterfly 1: "Esse morcego se chama Sam e a área do jogo é o quintal\nde Sam. O quintal de Sam tem 400 pixels de largura por 400 de altura! Como você pode\nver, Sam é livre para andar pelo quintal e as coordenadas na parte superior da tela são\natualizadas para que você saiba sua localização. Use as setas do teclado para mover Sam\npelo quintal, anotando as coordenadas de Sam em diferentes localizações.\nClique em \"Concluir\" quando você estiver pronto para seguir em frente."
      Sam the Butterfly 2: "A mãe de Sam quer garantir que ela sempre possa\nver pelo menos uma parte dele, então vamos escrever algumas funções que ajudem a garantir\nque ele não vá muito longe no quintal. Aqui temos uma função chamada \"esquerda-segura?\"\n- ela deve receber um número para seu domínio que representa as coordenadas de x de Sam\ne retornar verdadeiro se ele estiver dentro do limite esquerdo do quintal (x > -25). Se\nsua função funcionar, Sam não deve poder sair do quintal pelo lado\nesquerdo."
      Sam the Butterfly 3: "No último desafio, impedimos Sam de sair\npela esquerda, agora vamos fazer o mesmo com a direta. Preencha a função \"direita-segura?\"\npara que Sam não passe de x = 425."
      Sam the Butterfly 4: "Hmm, podemos impedir que Sam saia pela\nesquerda, ou podemos impedi-lo de sair pela direita, mas como podemos impedi-lo\nde sair por ambas as direções? Tente usar o bloco \"E\" para programar a função\n\"na-tela?\" para verificar se Sam tem a esquerda-segura? E a direita-segura?"
      Sam the Butterfly 5: "Atividade livre: Incrível, agora Sam não pode sair do quintal\nnem pela esquerda, nem pela direita, mas e quanto às partes de cima e de baixo? Adicionamos\num parâmetro adicional \"y\" para a função \"na-tela?\". Você consegue atualizar\nseu programa para que Sam não possa sair nem por cima (y = 425) nem por baixo (y= -25)?\nTeste seu programa movendo Sam o mais longe que ele puder ir em todas as quatro direções.\nClique em Concluir quando Sam estiver completamente protegido."
      Sam the Butterfly 6: "Adicionamos um novo parâmetro \"y\" à\nfunção \"na-tela?\". Atualize a função para que ela verifique se \"esquerda-segura?\"\nE \"direita-segura?\" E \"superior-segura?\" são todas verdadeiras. Quando você consertar a\nfunção, tente sair do quintal pela direita, pela esquerda e por cima."
      Sam the Butterfly 7: "Agora temos apenas uma única direção com a qual nos preocupar!\nCrie uma função \"inferior-segura?\" e atualize a função \"na-tela?\" para\nque ela verifique as partes de cima, de baixo, esquerda e direita."
      Sam the Butterfly Complete: "Agora temos apenas uma única direção com a qual nos preocupar!\nCrie uma função \"inferior-segura?\" e atualize a função \"na-tela?\" para\nque ela verifique as partes de cima, de baixo, esquerda e direita."
      SpecialFrozenLevel: "Você se tornou oficialmente um artista mestre!\nCrie um país das maravilhas de gelo."
      Standalone_Artist_1: "Bem-vindo ao Artista! Primeiro, vamos tentar\nfazer um quadrado simples usando os blocos \"vire à direita\" e \"avance\".\nCada lado deve medir 100 pixels."
      Standalone_Artist_2: "Desenhe esse diamante com ângulos de 120 e 60\ngraus e lados de 150 pixels de comprimento."
      Standalone_Artist_3: "Você consegue desenhar este hexágono com lados de\n100 pixels e ângulos de 60 graus?"
      Standalone_Artist_4: "Agora você tem um novo bloco para brincar,\no laço. Ele vai repetir um conjunto de comandos. O que acontece se você repetir esses\ncomandos 6 vezes?"
      Standalone_Artist_5.5: "Observe como simplificamos o código do diamante,\ntransformando-o em um laço. Você pode repetir toda a sequência 12 vezes para desenhar\na flor. Dica: você terá que virar 30 graus depois do laço do seu diamante\npara não continuar desenhando o mesmo diamante todas as vezes."
      Standalone_Artist_5: "Quantas vezes você precisa repetir esse diamante\npara desenhar a flor?"
      Standalone_Artist_6: "Repita esse código do hexágono 6 vezes para criar\no design. Quantos graus você precisa virar a cada vez? Dica: divida\no número de graus em um círculo pelo número de vezes que você está repetindo."
      Standalone_Artist_7: "Uma função é mais uma ferramenta de programação para que\nvocê não tenha que repetir as mesmas ações. Essa função desenha uma flor, então\nvocê pode usá-la sempre que quiser desenhar uma flor. Use-a juntamente com o novo bloco\n\"pule\" para desenhar essas flores. Dica: as flores são separadas por 150 pixels"
      Standalone_Artist_8: "Temos aqui uma função chamada \"Desenhe uma forma\",\nque programamos para desenhar hexágonos. Execute o código para ver o que ele faz e,\nem seguida, tente usá-lo com a função para ver o que acontece. Você consegue fazer\ncom que ela desenhe um padrão de quadrados, triângulos ou octógonos?"
      Standalone_Artist_9: "Agora vá em frente e faça a imagem que\nquiser! Você tem até uma função vazia para usar para fazer o que\nquiser!"
      Standalone_Artist_v2: "Bem-vindo ao Artista! Primeiro, vamos tentar\nfazer um quadrado simples usando os blocos \"vire à direita\" e \"avance\".\nCada lado deve medir 100 pixels."
      Test embedded K1 Blockly in instructions: Use três blocos 'mover para oeste' e um bloco 'pegar o milho' para resolver este enigma.
      Testing Quantum Farmer: "Uau, que demais! \\r\n\\r\nEu não sei de quantas\npás cheias de terra esse buraco precisa.  \\r\nVocê pode escrever um programa que\nfique usando o bloco \"preencha\" até que o solo fique nivelado?  "
      The Vigenere Cipher Widget: Instruções
      The Vigenere Cipher Widget_2018: Instruções
      The Vigenere Cipher Widget_2019: Instruções
      The Vigenere Cipher: Instruções
      Total Artist Clone Me: "Atividade livre: aqui estão as funções\nque você escreveu e mais algumas para você usar. Desenhe algo incrível!\nBrinque com a largura da caneta para ver como seus desenhos ficam diferentes!"
      U1L4 NetSim SendAB: "Envie uma mensagem configurando o estado do\nfio como A ou B."
      U2 Vigenere: Teste
      U2 frequency caesar: Instruções
      U2 frequency random sub: Instruções
      U2 vigenere cipher: Instruções
      U2L10 NetSim Manual DNS: "Nessa versão do simulador você não pode\nver o endereço de outros alunos. Ao invés disso, um de vocês deve agir como um\nserviço de nome, para ajudar a compartilhar os endereços entre si."
      U2L14 frequency random: Teste
      U3 - Arrays - Demo App: Uso o app "Minhas coisas favoritas". Como pode este app estar fazendo uso de um vetor? (Clique para ver as instruções completas)
      U3 - Arrays - appendItem: Crie um vetor de números ímpares 1-11 usando appendItem. (Clique para ver as instruções completas)
      U3 - Arrays - assignment: Use índices para alterar os valores nesse vetor de 1 para 0. (Clique para ver as instruções completas)
      U3 - Arrays - assignment2: Calcule a soma dos três valores armazenados em um vetor. (Clique para ver as instruções completas)
      U3 - Arrays - assignment3: Aumente o valor em 1 de cada valor no vetor gerada aleatoriamente. (Clique para ver as instruções completas)
      U3 - Arrays - createFirstArray: Crie um vetor de números pares a partir de 0 até 10 e mostre o conteúdo da lista com console.log. (Clique aqui para ver todas as instruções)
      U3 - Arrays - expressionsAsIndexes: Escreva um programa que escolha e mostre uma cor aleatória do vetor. (Clique aqui para ver todas as instruções)
      U3 - Arrays - favThings Counting Variable: Crie uma variável global para o índice atual e use-a para mostrar o primeiro item no vetor. (Clique aqui para ver todas as instruções)
      U3 - Arrays - favThings Next: Escreva código que permite o usuário mover para frente através de sua lista clicando no botão "Próximo". (Clique para ver as instruções completas)
      U3 - Arrays - favThings Prev: Escreva um código que permita o usuário mover para trás através de sua lista clicando no botão "Último". (Clique para ver as instruções completas)
      U3 - Arrays - favThings addItem: Escreva um código que permita que um usuário adicione suas próprias coisas favoritas para a lista. (Clique para ver as instruções completas)
      U3 - Arrays - favThings bounds: Adicione declarações "se" no seus manipuladores de eventos para que impeça o índice global de sair dos limites. (Clique para ver as instruções completas)
      U3 - Arrays - favThings createArray: Crie um array de palavras descrevendo suas coisas favoritas. (Clique para ver as instruções completas)
      U3 - Arrays - favThings firstOutput: Use "setar texto" para exibir o primeiro item na matriz. (Clique para ver as instruções completas)
      U3 - Arrays - favThings giveIDs: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      U3 - Arrays - favThings keepPlaying: Faça qualquer outra melhoria que você quiser! (Clique para ver as instruções completas)
      U3 - Arrays - favThings template: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      U3 - Arrays - favThings template_2018: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      U3 - Arrays - favThings template_2019: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      U3 - Arrays - globalVariableIndex: Dê a seus elementos de interface do usuário, identificadores descritivos e significativos. (Clique para ver as instruções completas)
      U3 - Arrays - indexPractice: Mostre o conteúdo da lista na tela em ordem numérica. (Clique aqui para ver todas as instruções)
      U3 - Arrays - insertingItems: Insira itens em uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      U3 - Arrays - insertionErrors: Execute cada comando que referencia os índices que estão fora dos limites e observe os resultados. (Clique para ver as instruções completas)
      U3 - Arrays - introIndex: Exiba o primeiro e o último elemento na matriz. Exiba o número 5 da matriz. (Clique para ver as instruções completas)
      U3 - Arrays - length: Use list.length para determinar o comprimento de cada vetor. (Clique para ver as instruções completas)
      U3 - Arrays - lengthMinus1: Use list.length - 1 para registrar o último item do vetor para o console. (Clique para ver as instruções completas)
      U3 - Arrays - remove: Remova itens de uma matriz para formar uma frase completa. (Clique para ver as instruções completas)
      U3 - Arrays - stringsInArrays: Escreva uma frase, palavra por palavra, adicionando sequências de caracteres em uma matriz. (Clique para ver as instruções completas)
      U3 - Canvas - 200dots: Adicione um loop ao seu programa que desenha 200 pontos na sua tela. (Clique para ver as instruções completas)
      U3 - Canvas - One Dot sprayPaint: Escreva um código que redesenha sua imagem usando um ponto cujas posições x e y usam margens X e Y com um pequeno valor aleatório adicionado. (Clique para ver as instruções completas)
      U3 - Canvas - appendToArray: Crie uma matriz para armazenar cada parâmetro de evento. Acrescente cada parâmetro de evento nesta matriz dentro de seu manipulador de eventos. (Clique para ver as instruções completas)
      U3 - Canvas - changeToMouseMove: Altere seu programa para que pontos sejam desenhados no local do mouse de acordo que o usuário move o mouse sobre a tela. (Clique para ver as instruções completas)
      U3 - Canvas - clickToAdd: Altere seu programa para que os pontos sejam adicionados à tela quando o usuário clicar nela. (Clique para ver as instruções completas)
      U3 - Canvas - delete: Crie um botão que exclui o desenho, limpando a tela e removendo todos os valores armazenados. (Clique para ver as instruções completas)
      U3 - Canvas - draw at click point: Altere seu programa para que pontos sejam desenhados no local do clique do mouse. (Clique para ver as instruções completas)
      U3 - Canvas - freePlay: Estenda a funcionalidade de um dos efeitos, ou crie um novo de sua preferência. (Clique para ver todas as instruções)
      U3 - Canvas - introCanvas: Adicione uma tela ao seu aplicativo e configure ela para ser a tela ativa. Em seguida, adicione um grande ponto em sua sua tela. (Clique para ver as instruções completas)
      U3 - Canvas - movementFunction fix Orig: Modifique o manipulador de eventos do botão "Original" para que considere o movimento do mouse. (Clique para ver as instruções completas)
      U3 - Canvas - movementFunction: Escreva uma função que usa o movimento do mouse como entrada e gere uma largura de linha como saída. (Clique para ver as instruções completas)
      U3 - Canvas - redrawOriginal: Escreva uma função que processa seu vetor, redesenhando os pontos da forma que eles aparecem originalmente (Clique aqui para ver todas as instruções)
      U3 - Canvas - redrawRandom: Defina um botão e manipulador de eventos para a função aleatória. (Clique para ver as instruções completas)
      U3 - Canvas - redrawRandom2: Escreva uma função que processa sua matriz, redesenhando cada ponto com um tamanho aleatório. (Clique para ver as instruções completas)
      U3 - Canvas - shiftKey: Adicione uma declaração "se" para seu manipulador de eventos para que pontos só sejam desenhados quando a tecla shift for pressionada. (Clique para ver as instruções completas)
      U3 - Canvas - sketch: Escreva código que redesenha sua imagem usando um efeito de esboço. (Clique para ver as instruções completas)
      U3 - Canvas - sprayPaint: Atualize o código de tinta spray para que ele redesenhe sua imagem usando múltiplos pontos aleatórios em vez de usar uma repetição aninhada. (Clique para ver as instruções completas)
      U3 - Canvas - transparentDots: Mude as cores de seus pontos para que eles tenham um traço totalmente transparente e preenchimento parcialmente transparente. (Clique para ver as instruções completas)
      U3 - Canvas - usingOffsetXY: Adicione um comando de console.log dentro da função do manipulador de eventos. Use-o para exibir o parâmetro do evento. Clique na tela para ver o conteúdo do parâmetro de evento (clique para ver as instruções completas)
      U3 - Conditional Basics - 6: Adicione um "definirTexto" após a declaração "se" para a frase "Não. Tente de novo." (Clique para ver as instruções completas)
      U3 - Conditionals - Combine AND OR Simple: Escreva uma declaração "se" que usa "E" e "OU" para exibir "Durma!" se é fim de semana e o usuário é um adolescente. (Clique para ver as instruções completas.
      U3 - Conditionals - Combine AND OR and NOT: Escreva uma instrução "se" que usa "E" e "OU" para exibir "Hora de ir para a escola!" se não é fim de semana e o usuário é menor de 18 anos. (Clique para ver as instruções completas).
      U3 - Conditionals - Simple AND: Escreva uma instrução "se" que usa "E" para exibir "Você é um adolescente..." se o usuário insere uma idade entre 13 e 19. (Clique para ver as instruções completas)
      U3 - Conditionals - Simple OR: Escrever uma instrução "se" que usa "OU" para exibir "É o fim de semana!" se o usuário insere um dia de fim de semana no prompt. (Clique para ver as instruções completas)
      U3 - Design Mode - Console Log: Atualize os nomes de ID e as mensagens de 'console.log' para associar com o botão correto. (Clique para ver as instruções completas.)
      U3 - Design Mode - Layers and Delete: Conserte o formato do jogo bullseye. (Clique para ver as instruções completas)
      U3 - Design Mode - Multi Screens 2: Fazer uma app com 2 telas que pode alternar entre uma tela preta e uma tela branca com botões. (Clique para ver instruções detalhadas.)
      U3 - Design Mode - Multi Screens: Faça um app com 2 telas com uma tela preta e uma tela branca. (Clique para ver instruções detalhadas)
      U3 - Design Mode - WTF Console Log: Adicione 3 mensagens de console.log e os teste. (Clique para ver as instruções completas.)
      U3 - Design Mode -Recreate Beyond Buttons: Recrie o jogo a partir do "Jogo do Caçador" com uma tela de boas vindas e uma tela de fim de jogo. (Clique para ver as instruções completas).
      U3 - Design Mode 1: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      U3 - Dice - Dropdown and Score: Adicione o palpite e pontuação para o jogo de dados (clique para ver as instruções completas)
      U3 - Dice - Dropdown with Strings: Adicione um menu suspenso para o nível de dificuldade que mostre o nível de dificuldade no console. (Clique para ver as instruções completas)
      U3 - Dice - If: Mostre imagens diferentes para o número aleatório gerado. (Clique para ver as instruções completas)
      U3 - Dice - Nested: Use declarações "se" para fazer o marcador diferente para níveis de jogos diferentes. (Clique para ver as instruções completas)
      U3 - High Low - Debug: Analise a ordem das condicionais para que avise o usuário quando o palpite está próximo. (Clique para ver as instruções completas)
      U3 - High Low - Dropdown: Adicione um menu de opções para o palpite em vez de promptNum (clique para ver as instruções completas)
      U3 - High Low - Else if: Adicione uma condição senão-se com o objetivo de dizer ao usuário se seus chutes são altos ou baixos em vez de apenas dizer que estão errados. (Clique para ver todas as instruções)
      U3 - High Low - Else: 'Adicione uma instrução "senão" para que o programa informe aos usuários quando eles estão certos e quando eles estão errados. (Clique para ver as instruções completas)  '
      U3 - High Low - If: Adicione código dentro da declaração "se" que indica o usuário adivinhou o número secreto. (Clique para ver as instruções completas)
      U3 - Keys - Add Image URLs: Adicione URLs de imagem para seu vetor. Substitua a área de texto com uma imagem e "setText" com "setImageURL". Em seguida, teste seu aplicativo! (Clique para ver as instruções completas)
      U3 - Keys - Buttons and Keys: Faça com que o programa responda da mesma maneira tanto para clicar em imagens na tela quanto para apertar as teclas para cima e para baixo no teclado. (Clique para ver as instruções completas)
      U3 - Keys - Demo App: Brinque com a barra de rolar imagem. Pressione as setas para a esquerda e para a direita para avançar pelas imagens.
      U3 - Keys - Final Image Scroller: Atualize o scroller de imagem para responder a botões e a digitar de teclas. (Clique para ver as instruções completas)
      U3 - Keys - Functions: Escreva funções facaSetaParaCima e facaSetaParaBaixo e chame as funções ao invés de duplicar o código. (Clique para ver as instruções completas)
      U3 - Keys - Key Up and Down: Experimente os eventos de soltar tecla e pressionar tecla para ver como eles são diferentes de apertar tecla. (Clique para ver as instruções completas)
      U3 - Keys - Multiple Keys: Toque um som diferente quando a seta para baixo for pressionada (Clique aqui para ver todas as instruções)
      U3 - Loops -  Complex Condition: Altere a expressão booleana para o laço while de forma que ele irá parar quando ambos dados forem maiores que ou iguais a 5. (Clique para ver as instruções completas)
      U3 - Loops - 1: Altere a condição para o laço while para checar se a variável num é menor do que 90. (Clique para ver as instruções completas)
      U3 - Loops - 10: Escreva um programa que simule a rolagem de 2 dados. Role os dados repetidamente até a soma dos dados ser 7 ou 11.
      U3 - Loops - 11: Conserte a condição para que continue rolando o dado enquanto o valor não for um 2 ou um 3 ao invés de rolar infinitamente. (Clique para ver as instruções completas)
      U3 - Loops - 12: Altere o código para que imprima a string "Oi" 5 vezes. (Clique para ver as instruções completas)
      U3 - Loops - 14: Altere a condição do laço para evitar o laço infinito e pare a contagem quando o contador passar de 30. (Clique para ver as instruções completas)
      U3 - Loops - 15: Conte o número de vezes que a soma dos dados é 12. (Clique para ver as instruções completas)
      U3 - Loops - 2: Tente criar um laço infinito usando !=, > e <. (Clique para ver todas as instruções)
      U3 - Loops - 3: Mude a condição "se" para uma repetição "enquanto" para que o programa execute até que role um 6. (Clique para ver as instruções completas)
      U3 - Loops - 4: " Use os Comandos de Análise para fazer uma lista de todos os valores que rolaram antes um 6. (Clique para ver as instruções completas)"
      U3 - Loops - 5: Adicione código dentro do loop enquanto, que atualizará a variável num para que a condição acabe se tornando falsa. (Clique para ver instruções completas)
      U3 - Loops - 6: Corrija o problema para que o loop seja executado pelo menos uma vez. Altere o valor inicial de num para um valor fictício, como -1. (Clique para ver instruções completas)
      U3 - Loops - 7: Sem adicionar linhas de código, reordene o código para que ele imprima todos os valores de num. (Clique para ver instruções completas)
      U3 - Loops - 8: Depure qual número não está sendo impresso e inclua uma instrução de gravação para exibir esse valor. (Clique para ver instruções completas)
      U3 - Loops - 9: " Modifique a condição para que ele continue rolando, desde que ambos sejam menores que 3. (Clique para ver as instruções completas)"
      U3 - Loops - Minus Minus: Altere o código para contar decrescentemente de 10 para 1. (Clique para ver as instruções completas)
      U3 - Loops - Plus Plus: Altere o código para usar count++ em vez de count = count + 1. (Clique para ver as instruções completas)
      U3 - Loops - Typing in Console: Use o console para verificar o valor final de num. (Clique para ver as instruções completas)
      U3 - Loops - minus = operator: Atualize o código para usar o operador -= para contar de 30 a 0 por 3 segundos. (Clique para ver instruções completas)
      U3 - Loops - plus and minus = operator: Atualize o código para usar o operador +=. (Clique para ver instruções completas)
      U3 - Loops And Arrays - Add 5: Some 5 a todos os valores em um vetor (Clique para ver as instruções completas)
      U3 - Loops And Arrays - Counting Times: Conte o número de vezes que o 5 aparece em um vetor. (Clique para ver as instruções completas)
      U3 - Loops And Arrays - Divid by 2: Divida cada valor no vetor por 2. (Clique para ver as instruções completas)
      U3 - Loops And Arrays - Find Min: Complete a função findMinVal para localizar e exibir o menor valor em um array (Clique para ver instruções completas)
      U3 - Loops And Arrays - General Search Param: Adicione um segundo parâmetro à função de pesquisa para o valor a ser pesquisado. (Clique para ver instruções completas)
      U3 - Loops And Arrays - Intro For Loop: Adicione um laço for com um console.log dentro e teste as 3 partes do laço for. (Clique para ver instruções completas)
      U3 - Loops And Arrays - Linear Search: Visite todos os elementos da matriz e exiba "verdadeiro" se o valor for 5, e "falso" caso contrário. (Clique para ver instruções completas)
      U3 - Loops And Arrays - Loop Array If: Use uma declaração Se para exibir apenas os valores na matriz que são maiores que 5. (Clique para ver as instruções completas)
      U3 - Loops And Arrays - Make it a Function - add list parameter: Crie uma função que receba uma lista de parâmetros e imprima se a lista contiver um 5. (Clique para ver instruções completas)
      U3 - Loops And Arrays - Make it a Function: Mova o código que pesquisa a lista por um 5 em uma função chamada "pesquisa". (Clique para ver instruções completas)
      U3 - Loops And Arrays - Print Array: Use um laço for para imprimir todos os valores em um array. (Clique para ver instruções completas)
      U3 - Loops And Arrays - Printing Single True: Processe o array e exiba um único "verdadeiro" se o array contiver um 5 ou um único "falso" caso não tenha. (Clique para ver instruções completas)
      U3 - Loops And Arrays - Return Value: Use restrições neste aplicativo simples para evitar que a tartaruga saia da tela. (Clique para ver instruções completas)
      U3 - Return Values - constrainTurtle: Use restrições neste aplicativo simples para evitar que a tartaruga saia da tela. (Clique para ver instruções completas)
      U3 - Return Values - debuggingConstrain: Corrija o erro na restrição para que ele retorne o valor apropriado. (Clique para ver instruções completas)
      U3 - Return Values - debuggingMaxVal: Corrija o erro no maxVal para que ele reporte corretamente o valor máximo. (Clique para ver instruções completas)
      U3 - Return Values - debuggingReturns: Corrija o erro no maxVal para que ele reporte corretamente o valor máximo. (Clique para ver instruções completas)
      U3 - Return Values - useMinVal: Chame minVal dentro da instrução console.log para calcular o mínimo de dois valores. (Clique para ver instruções completas)
      U3 - Return Values - writeMaxVal: Escreva a função maxVal e use-a na instrução console.log para calcular o máximo de dois valores. (Clique para ver instruções completas)
      U3 - Simple Drawing - Comments: Faça isso
      U3 - Simple Drawing - Ellipse and No Fill: Faça isso
      U3 - Simple Drawing - Fill: Faça isso
      U3 - Simple Drawing - No Fill: Faça isso
      U3 - Simple Drawing - Order of Blocks: Faça isso
      U3 - Simple Drawing - Oval: Faça isso
      U3 - Simple Drawing - Personal Drawing: FAÇA isso
      U3 - Simple Drawing - Rectangle Width and Height: Faça isso
      U3 - Simple Drawing - Rectangle: Faça isso
      U3 - Simple Drawing - Road Ellipse: Faça isso
      U3 - Simple Drawing - Road Rects and Color: Faça isso
      U3 - Simple Drawing - Simple Shape Drawing: Faça isso
      U3 - Simple Drawing - Stroke and Stroke Weight: Faça isso
      U3 - Simple Drawing - X and Y values: Faça isso
      U3 - Simple Drawing - regular polygon: Faça isso
      U3 - Simple Drawing - text: Faça isso
      U3 - Sprites - Intro Sprites: Faça isso
      U3 - Sprites and Mod - Create  and Draw Sprite: Faça isso
      U3 - Sprites and Mod - Mouse Width and Height: Faça isso
      U3 - Sprites and Mod - Mouse X and Y: Faça isso
      U3 - Sprites and Mod - Rand Around Mouse: Faça isso
      U3 - Sprites and Mod - Rand Shape Color: Faça isso
      U3 - Sprites and Mod - Shape Color: Faça isso
      U3 - Sprites and Mod - Wrap Many Squares: Faça isso
      U3 - Sprites and Mod - X and Y Prop: Faça isso
      U3 - Sprites and Mod - two sprites: Faça isso
      U3 - User Input - Save getText To Variable: Salve a idade e o nome do usuário em variáveis (clique para ver as instruções completas)
      U3 - images - bee free play: Faça isso
      U3 Digital Assistant Target - Mehal: Experimente uma demonstração do Assistente Digital!
      U3 Digital Assistant Target: Experimente uma demonstração do Assistente Digital!
      U3 Variables consolelog: Use o bloco de escrita para exibir o valor de tamanho
      U3 Variables flower example: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      U3 Variables gray square: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      U3 Variables make a square: Altere o valor de tamanho várias vezes. Como muda seu desenho?
      U3 Variables randomize your square: Mude o valor de petalSize múltiplas vezes. Como isto muda o seu desenho?
      U3 Variables write: Use o bloco de escrita para exibir o valor de tamanho
      U3 mehal's clone: Experimente uma demonstração do Assistente Digital!
      U3-Design Mode-ID and Event Handler: Adicione um manipulador de eventos para o botão usando o link "Inserir e Visualizar" na aba de Eventos de Modo de Design (clique para ver as instruções completas).
      U3-Design Mode-Image: Recrie o "Jogo do Caçador" da última lição usando o Modo Design. (Clique para ver as instruções completas).
      U313 Two Buttons with Ids: "Sua vez de tentar! Fornecemos a você um\ncódigo inicial com dois botões e dois manipuladores de evento na tela, mas deixamos\nos Ids padrões de \"id\". Você precisa alterar esses ids para conectar\no manipulador de eventos ao botão correto. (Curiosamente, o programa\nincorreto funciona, mas ele tem um comportamento bizarro. Vamos discutir mais\nsobre isso na próxima lição. Por enquanto, faça os botões funcionarem corretamente)."
      U313 drag Two Buttons: Execute um programa com dois botões que possuem o mesmo id para ver a mensagem de aviso no console. Altere os ids para fazer o programa funcionar sem receber uma mensagem de aviso.
      U313 eventsDetails: Execute um programa com dois botões que possuem o mesmo id para ver a mensagem de aviso no console. Altere os ids para fazer o programa funcionar sem receber uma mensagem de aviso.
      U3L03 Creating Procedures 1: "Escreva a função virar() e\nuse-a para fazer a tartaruga se mover como descrito. Veja: U3L03-turnAndDown.gif"
      U3L03 Define and use turnAround: "Escreva a função virar() e\nuse-a para fazer a tartaruga se mover como descrito."
      U3L03 Define and use turnAround_2018: "Escreva a função virar() e\nuse-a para fazer a tartaruga se mover como descrito."
      U3L03 Define and use turnAround_2019: "Escreva a função virar() e\nuse-a para fazer a tartaruga se mover como descrito."
      U3L03 Draw a T using turnAround: "Agora a função \"virar\" é \nfornecida no código. Use a função virar() para desenhar um T conforme\ndescrito."
      U3L03 Draw a T using turnAround_2018: "Agora a função \"virar\" é \nfornecida no código. Use a função virar() para desenhar um T conforme\ndescrito."
      U3L03 Draw a T using turnAround_2019: "Agora a função \"virar\" é \nfornecida no código. Use a função virar() para desenhar um T conforme\ndescrito."
      U3L03 Three Steps: "Desenhe 3 \"passos\", movendo para cima e para a direita. Observe\no padrão do movimento. Você deve definir uma função chamada desenharPasso()\nque desenha um dos passos e então chamá-la 3 vezes para obter o efeito desejado."
      U3L03 Three Steps_2018: "Desenhe 3 \"passos\", movendo para cima e para a direita. Observe\no padrão do movimento. Você deve definir uma função chamada desenharPasso()\nque desenha um dos passos e então chamá-la 3 vezes para obter o efeito desejado."
      U3L03 Three Steps_2019: "Desenhe 3 \"passos\", movendo para cima e para a direita. Observe\no padrão do movimento. Você deve definir uma função chamada desenharPasso()\nque desenha um dos passos e então chamá-la 3 vezes para obter o efeito desejado."
      U3L03 choose your own drawing: "Agora escolha o seu!  Escolha um dos\ntrês desenhos mostrados aqui e tente criá-lo você mesmo, tomando decisões\ninteligentes sobre como dividir o problema em funções reutilizáveis.  Você vai revisar seu\ntrabalho com um colega usando os \"procedimentos para a rubrica de revisão em pares\".\nVerifique os procedimentos para ver os requisitos.  GIF: U3L3-ProceduresChooseOne.png"
      U3L03 draw diamond: "Use qualquer função que você escreveu\nantes para fazer uma forma de \"diamante\" conforme mostrado na imagem.\\r\n\\r\nOBSERVAÇÃO:\nessa é mais uma pegadinha.  Os 4 lados do diamante são feitos desenhando\ntrês etapas com outro movimento feito entre as chamadas.  Dica: você deve criar\noutra função que desenha um lado do diamante. "
      U3L03 draw diamond_2018: "Use qualquer função que você escreveu\nantes para fazer uma forma de \"diamante\" conforme mostrado na imagem.\\r\n\\r\nOBSERVAÇÃO:\nessa é mais uma pegadinha.  Os 4 lados do diamante são feitos desenhando\ntrês etapas com outro movimento feito entre as chamadas.  Dica: você deve criar\noutra função que desenha um lado do diamante. "
      U3L03 draw diamond_2019: "Use qualquer função que você escreveu\nantes para fazer uma forma de \"diamante\" conforme mostrado na imagem.\\r\n\\r\nOBSERVAÇÃO:\nessa é mais uma pegadinha.  Os 4 lados do diamante são feitos desenhando\ntrês etapas com outro movimento feito entre as chamadas.  Dica: você deve criar\noutra função que desenha um lado do diamante. "
      U3L04 choose your own drawing: "Agora escolha o seu!  Escolha um dos\ntrês desenhos mostrados aqui e tente criá-lo você mesmo, tomando decisões\ninteligentes sobre como dividir o problema em funções reutilizáveis.  Você vai revisar seu\ntrabalho com um colega usando os \"procedimentos para a rubrica de revisão em pares\".\nVerifique os procedimentos para ver os requisitos."
      U3L04 diamond solution: "Estude essa solução para o problema da função desenharDiamante\nObserve que todo programa começa chamando desenharDiamante() no\ncomeço.  Então, o programa segue uma cadeia de chamadas. Você pode acompanhar\no que está acontecendo no código para ver as funções reutilizadas.  Também é fácil\nde ler porque os nomes das funções descrevem o comportamento esperado."
      U3L05_3x3GridEfficiencyChallenge: "Vamos revisitar o problema da grade 3x3\nque você resolveu algumas lições atrás.  Desta vez o desafio é programar\na solução da forma \"mais eficiente possível\".  Agora que você sabe como escrever\nfunções, deve ser mais fácil dividir o problema e seu código deve ser\nmais fácil de ler e depurar. Veja a rubrica para mais detalhes sobre os requisitos\ne as expectativas."
      U3L05_draw3x3GridEfficiently: "Desenhe uma grade 3x3 acima e para a\ndireita da tartaruga. Tente fazer isso com o menor número de comandos possível.\nOBSERVAÇÃO: esse problema é bastante desafiador. Você deve precisar passar um tempo\nresolvendo-o e ajustando-o. Você também deve considerar usar lápis e papel para esboçar\nsuas ideias."
      U3L06 Challenge 2 purple square: "Desta vez vamos aprender\num pouco sobre como alterar a caneta da tartaruga. Leia a documentação para encontrar\nlarguraCaneta() e corCaneta(), e então desenhe o quadrado roxo como foi mostrado."
      U3L06 Challenge 2 purple square_2018: "Desta vez vamos aprender\num pouco sobre como alterar a caneta da tartaruga. Leia a documentação para encontrar\nlarguraCaneta() e corCaneta(), e então desenhe o quadrado roxo como foi mostrado."
      U3L06 Challenge 2 purple square_2019: "Desta vez vamos aprender\num pouco sobre como alterar a caneta da tartaruga. Leia a documentação para encontrar\nlarguraCaneta() e corCaneta(), e então desenhe o quadrado roxo como foi mostrado."
      U3L06 Challenge 3 fill pink: "Agora, vamos tentar preencher todo o fundo\nda tela. Para deixar as coisas um pouco mais fáceis para você, podemos lhe dizer\nque a cor que escolhemos é uma das 140 cores nomeadas. Se você não souber os\nnomes das cores, dê uma olhada na documentação de corCaneta()\nnovamente. Dica: você precisa usar ponto()."
      U3L06 Challenge 3 fill pink_2018: "Agora, vamos tentar preencher todo o fundo\nda tela. Para deixar as coisas um pouco mais fáceis para você, podemos lhe dizer\nque a cor que escolhemos é uma das 140 cores nomeadas. Se você não souber os\nnomes das cores, dê uma olhada na documentação de corCaneta()\nnovamente. Dica: você precisa usar ponto()."
      U3L06 Challenge 3 fill pink_2019: "Agora, vamos tentar preencher todo o fundo\nda tela. Para deixar as coisas um pouco mais fáceis para você, podemos lhe dizer\nque a cor que escolhemos é uma das 140 cores nomeadas. Se você não souber os\nnomes das cores, dê uma olhada na documentação de corCaneta()\nnovamente. Dica: você precisa usar ponto()."
      U3L06 Challenge 4 bullseye: "Vamos tentar mais uma vez.\nDesta vez as cores NÃO são chamadas pelo nome - você precisa usar o número hexadecimal\ncor para defini-la. Assim, para que você não fique tentando adivinhar aleatoriamente, vamos\nlhe dar uma dica -- cada uma das cores mostradas na imagem-alvo é uma das\ncinco listadas a seguir:  #00ABDC, #CC4400, #1188CC, #006699,\n#11CC00  Você deve acertar o palpite se aplicar o que sabe sobre\ncores RGB."
      U3L06 Challenge 4 bullseye_2018: "Vamos tentar mais uma vez.\nDesta vez as cores NÃO são chamadas pelo nome - você precisa usar o número hexadecimal\ncor para defini-la. Assim, para que você não fique tentando adivinhar aleatoriamente, vamos\nlhe dar uma dica -- cada uma das cores mostradas na imagem-alvo é uma das\ncinco listadas a seguir:  #00ABDC, #CC4400, #1188CC, #006699,\n#11CC00  Você deve acertar o palpite se aplicar o que sabe sobre\ncores RGB."
      U3L06 Challenge 4 bullseye_2019: "Vamos tentar mais uma vez.\nDesta vez as cores NÃO são chamadas pelo nome - você precisa usar o número hexadecimal\ncor para defini-la. Assim, para que você não fique tentando adivinhar aleatoriamente, vamos\nlhe dar uma dica -- cada uma das cores mostradas na imagem-alvo é uma das\ncinco listadas a seguir:  #00ABDC, #CC4400, #1188CC, #006699,\n#11CC00  Você deve acertar o palpite se aplicar o que sabe sobre\ncores RGB."
      U3L06 Challenge 5 overlapping circles: "Esta imagem é criada apenas\nusando ponto() e corCaneta(), mas como vamos fazer esses círculos ficarem\ntransparentes? Se você ainda não recebeu a dica: leia a documentação!"
      U3L06 Challenge 5 overlapping circles_2018: "Esta imagem é criada apenas\nusando ponto() e corCaneta(), mas como vamos fazer esses círculos ficarem\ntransparentes? Se você ainda não recebeu a dica: leia a documentação!"
      U3L06 Challenge 5 overlapping circles_2019: "Esta imagem é criada apenas\nusando ponto() e corCaneta(), mas como vamos fazer esses círculos ficarem\ntransparentes? Se você ainda não recebeu a dica: leia a documentação!"
      U3L06 Challenge 6 squiggles: "Em seguida, vamos adicionar algumas\ncurvas ao nosso desenho. Leia a documentação para os comandos de \"arco\" e\nentão desenhe os rabiscos como mostrado. Para facilitar as coisas, temos aqui uma dica: todos\nos parâmetros são múltiplos de 10 e as cores são da seguinte lista de\nnomes de cores: azulCeleste, azulClaro, azulTurquesa, Roxo e Magenta."
      U3L06 Challenge 6 squiggles_2018: "Em seguida, vamos adicionar algumas\ncurvas ao nosso desenho. Leia a documentação para os comandos de \"arco\" e\nentão desenhe os rabiscos como mostrado. Para facilitar as coisas, temos aqui uma dica: todos\nos parâmetros são múltiplos de 10 e as cores são da seguinte lista de\nnomes de cores: azulCeleste, azulClaro, azulTurquesa, Roxo e Magenta."
      U3L06 Challenge 6 squiggles_2019: "Em seguida, vamos adicionar algumas\ncurvas ao nosso desenho. Leia a documentação para os comandos de \"arco\" e\nentão desenhe os rabiscos como mostrado. Para facilitar as coisas, temos aqui uma dica: todos\nos parâmetros são múltiplos de 10 e as cores são da seguinte lista de\nnomes de cores: azulCeleste, azulClaro, azulTurquesa, Roxo e Magenta."
      U3L06 Challenge 7 smiley face: "Para fazer essa carinha feliz você vai\nprecisar olhar a documentação do comando mova() e então usá-lo com os\noutros que você aprendeu. Você pode fazer suposições razoáveis sobre as cores."
      U3L06 Challenge 7 smiley face_2018: "Para fazer essa carinha feliz você vai\nprecisar olhar a documentação do comando mova() e então usá-lo com os\noutros que você aprendeu. Você pode fazer suposições razoáveis sobre as cores."
      U3L06 Challenge 7 smiley face_2019: "Para fazer essa carinha feliz você vai\nprecisar olhar a documentação do comando mova() e então usá-lo com os\noutros que você aprendeu. Você pode fazer suposições razoáveis sobre as cores."
      U3L06 Challenge 8 make your own: "Use as ferramentas que você aprendeu\nhoje para criar um desenho próprio. Se você tiver tempo, desafie seus\namigos para ver se eles conseguem duplicar sua imagem. Vamos mostrar para você os\ndesenhos que nós mesmos fizemos. Você pode tentar duplicá-los, se quiser.\nCaso não queira, divirta-se criando o seu próprio desenho!"
      U3L06 Challenge 8 make your own_2018: "Use as ferramentas que você aprendeu\nhoje para criar um desenho próprio. Se você tiver tempo, desafie seus\namigos para ver se eles conseguem duplicar sua imagem. Vamos mostrar para você os\ndesenhos que nós mesmos fizemos. Você pode tentar duplicá-los, se quiser.\nCaso não queira, divirta-se criando o seu próprio desenho!"
      U3L06 Challenge 8 make your own_2019: "Use as ferramentas que você aprendeu\nhoje para criar um desenho próprio. Se você tiver tempo, desafie seus\namigos para ver se eles conseguem duplicar sua imagem. Vamos mostrar para você os\ndesenhos que nós mesmos fizemos. Você pode tentar duplicá-los, se quiser.\nCaso não queira, divirta-se criando o seu próprio desenho!"
      U3L07 - Free Play Loops and Random: "Atividade livre! Use o que você aprendeu\nsobre laços e aleatoriedade para criar sua própria pequena cena. Divirta-se."
      U3L07 - Free Play Loops and Random_2018: "Atividade livre! Use o que você aprendeu\nsobre laços e aleatoriedade para criar sua própria pequena cena. Divirta-se."
      U3L07 - Free Play Loops and Random_2019: "Atividade livre! Use o que você aprendeu\nsobre laços e aleatoriedade para criar sua própria pequena cena. Divirta-se."
      U3L07 - Starry Night Starter Code: "Você vai usar laços e números\naleatórios para gerar uma imagem do céu em uma noite estrelada parecida com uma\nmostrada aqui. Fornecemos um código inicial para gerar o chão e o céu\n(apenas dois pontos gigantes) e você vai adicionar código a esse projeto para fazer as\nestrelas, a grama e a lua.  Todos os efeitos são aplicações inteligentes dos pontos,\nlinhas e cores da tartaruga.  Para começar, siga a série de etapas sugerida na\nplanilha de acompanhamento. "
      U3L07 - randomSquare: Desenhe a figura usando um laço. (Clique para ver todas as instruções)
      U3L07 - randomSquare_2018: Desenhe a figura usando um laço. (Clique para ver todas as instruções)
      U3L07 - randomSquare_2019: Desenhe a figura usando um laço. (Clique para ver todas as instruções)
      U3L13 - Button with ID: "Arraste um botão para fora da tela e\ndefina seu texto como \"Vá em frente!\".  Execute o programa para ver se você consegue enxergar\no botão."
      U3L13 - Debug Id Problem: "Esse programa tem um problema! Você pode descobrir\nqual? Execute o programa e veja se você pode descobrir a partir das mensagens de erro\nno console qual é o problema. Não há muito código para ver, então você deve ser capaz\nde descobrir o problema simplesmente lendo o código com atenção. Faça uma alteração\nque permita que o programa funcione como esperado."
      U3L13 - Debug Id plus logic problem: |-
        O último problema foi um exemplo
        de erro de sintaxe. O laboratório de aplicativo não entendeu qual objeto ele deveria ouvir 
        para um evento "clique", então ele mostrou uma mensagem de erro no console para
        informá-lo. Outro tipo de erro é um erro lógico - o programa é válido,
        mas não faz o que você quer que ele faça.\r
        \r
        Esse programa tem dois erros.
        Um erro de sintaxe (complicado) e um erro lógico.  Encontre-os, conserte-os e faça
        o programa funcionar como esperado.
      U3L13 - Debugging 1: Analise o programa verificando que suas identidades estão sendo referenciadas corretamente. (Clique para ver as instruções completas)
      U3L13 - Debugging 2: Analise o programa ordenando corretamente seus botões de comandos e manipuladores de eventos. (Clique para ver as instruções completas)
      U3L13 - Debugging 3: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      U3L13 - Project: Crie seu app com várias telas (clique para ver as instruções completas).
      U3L13 - Turtle Driver Project: "Desafio: crie uma \"tartaruga motorista\"\ncom pelo menos três botões na tela para mover a tartaruga para a frente e\nvirá-la para a direita e para a esquerda. Se quiser, você pode copiar/colar de um nível anterior,\nmas você vai exercitar seus músculos de programação se criar\nesse pequeno programa desde o início. Se tiver tempo, adicione botões extras! Você\ntambém pode se divertir alterando os parâmetros nas funções da tartaruga, usando cores,\netc."
      U3L13 - Turtle move with button: "Arraste um botão para fora da tela e\ndefina seu texto como \"Vá em frente!\". Adicione um manipulador de eventos para o botão que\nfaz a tartaruga se mover para a frente. Execute o programa para ver se ele funciona. "
      U3L14 - Unfortunate Events Free Play: "Siga a planilha de \"Eventos\ninfelizes\" e insira seu código aqui para testá-lo. Carregamos previamente\no código que você precisa para começar."
      U3L14 - User Input Division calculator: Escreva um programa que atue como uma calculadora simples. (clique aqui para ver todas as instruções)
      U3L16 - challenge say hi app: Escreva uma saudação para o usuário quando eles clicarem em 'entrar' no texto de entrada, usando o evento 'mudança'. (Clique para ver as instruções completas)
      U3L16 - hideAndShow: "Introdução de textInput, getText e write.  Primeiro,\nexecute o código inicial várias vezes. Tente alterar o que é escrito na\ntela quando o botão for clicado. Então, use getText para escrever na tela\no que o usuário digitou na caixa de texto. GIF: U3L16 - useGetText.gif"
      U3L16 - image and text labels: "Introdução do comando setPosition!  Substitua\no moveTo no manipulador de eventos de clique do botão para usar setPosition para mover o\nbotão para uma posição aleatória quando ele for clicado."
      U3L16 - images and text labels: "Introdução de objetos diferentes de\nbotões! - textLabels e imagens.  Primeiro, tente substituir seu botão por um\ntextLabel.  O texto vai responder a eventos da mesma forma que o botão?  Tente conectá-lo\na um manipulador de eventos. Fornecemos um código inicial similar ao resultado do\núltimo nível, então você pode copiar o código do último nível aqui se\npreferir. "
      U3L16 - images: "Introdução de imagens. Tente substituir o textLabel\npor uma imagem. A imagem vai responder aos eventos como o botão respondia? Tente \nconectá-la a um manipulador de eventos. Fornecemos um código inicial similar\nao resultado do último nível, então você pode copiar o código do último nível\naqui se você preferir. "
      U3L16 - intro getText: Adicione um manipulador de eventos para o botão Submeter para que quando o botão é clicado, ele irá exibir o nome digitado da caixa de texto no console.  Use getText para obter o valor da caixa de texto. (Clique para ver as instruções completas)
      U3L16 - nameAgeTemplate: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      U3L16 - nameAgeTemplate_2018: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      U3L16 - nameAgeTemplate_2019: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      U3L16 - newEventTypes: Experimente tipos de eventos diferentes e selecione qual deles você acha melhor. (Clique aqui para ver todas as instruções)
      U3L16 - outputWithTextArea: Mostre uma mensagem na 'textArea' (clique para ver as instruções completas)
      U3L16 - setPosition to move button: "Introdução do comando setPosition!\nSubstitua o moveTo no manipulador de eventos de clique do botão para usar setPosition\npara mover o botão para uma posição aleatória quando ele for clicado."
      U3L16 - setPositionMoveButton: Use setPosition para moveButton
      U3L16 - setupMoveToRandom: "Vamos nos basear em alguns códigos\niniciais simples para esta lição. Sua primeira tarefa: use moveTo e randomNumber\npara fazer a tartaruga se mover para uma posição aleatória a cada clique do botão. Fornecemos\na você o código inicial para nossa configuração comum: um botão que move a tartaruga\nquando é clicado. Você deve modificar esse código.  "
      U3L16 - singleSetPosition: Mova o botão para o meio da tela. (Clique aqui para ver todas as instruções)
      U3L16 - text labels: "Introdução de textLabels.  Primeiro, tente substituir\nseu botão por um textLabel.  O texto vai responder a eventos da mesma forma que o\nbotão?  Tente conectá-lo a um manipulador de eventos. Fornecemos um código\ninicial similar ao resultado do último nível, então você pode copiar o código do\núltimo nível aqui se você preferir. "
      U3L16 - textInput getText write: "Introdução de textInput, getText\ne write.  Primeiro, execute o código inicial várias vezes. Tente alterar o que\né escrito na tela quando o botão for clicado. Então, use getText para escrever\nna tela o que o usuário digitou na caixa de texto."
      U3L16 - toUpper: Faça o nome do usuário aparecer em maiúsculo (Clique para ver as instruções completas)
      U3L19 - Clicker Game Freeplay Area: "Use esta área de laboratório do aplicativo para melhorar\nseu jogo no estilo clicker.  Você deve começar copiando/colando o código do seu jogo antigo\naqui. Estamos mostrando um conjunto mais completo de blocos na caixa de ferramentas -\nvocê pode não ter usado algumas coisas ainda. Fique à vontade para explorar e\ntestar o que você quiser. Tudo o que você precisa deve ser mostrado.\nDivirta-se!"
      U3L19 - do concatenate string with var: "Demos a você um trecho\nde código da tela anterior. Tente alterar o valor atribuído a foo\npara ver a string ser alterada. \\r\nFaça o seguinte: \\r\n1. Tente alterar o valor atribuído\na foo para ver a string ser alterada. \\r\n2. Modificando apenas as linhas de código\nque lhe foram dadas, tente fazer a saída ser: “O valor de foo é:\n9.  Quem achar diferente que prove.” \\r\n"
      U3L19 - fix the var name syntax error v2: "Demos a você um trecho de código\ncom um erro. Ele não reconhece a variável. Você consegue descobrir o motivo? Conserte\no erro e execute o programa. Observe também a mensagem de erro, já que ela\npode aparecer em algum momento da sua vida.\\r\n\\r\n"
      U3L19 - fix the var name syntax error: "Demos a você um trecho de código\ncom um erro. Ele não reconhece a variável. Você consegue descobrir o motivo? Conserte\no erro e execute o programa. Observe também a mensagem de erro, já que ela\npode aparecer em algum momento da sua vida.\\r\n\\r\n"
      U3L19 - three basic ops of variables: "Faça o seguinte:\\r\nDemos a você\ntrês linhas de código mostradas na página anterior. Adicione três linhas de\ncódigo abaixo das mostradas aqui para criar sua própria variável, atribuir um\nvalor a ela e escrevê-la na tela.  OBSERVAÇÃO: altere o nome da variável de\nx para alguma outra coisa.\\r\n"
      U3L19 - variable scoping problem debugging: "Here is the code from\nprevious page that has a subtle problem with it.  FIRST: run the app and try\nit to see the problem. NOTE: NaN stands for \"Not a Number\".   DO THIS: figure\nout what's happening, where, and fix the problem.  We'll explain the issue\non the next page. "
      U3L19 - write var and string with same name: "Agora, veja este\nexemplo. Adicionamos outra declaração de escrita. Antes de executar o código, veja\nse você consegue prever qual será a saída. É sério, anote sua previsão. DEPOIS,\nexecute o código, mexa nele, se quiser, e vá para a próxima página para\nver uma explicação."
      U3L2 Using Simple Commands (no tooltips): "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      U3L2 Using Simple Commands: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      U3L2 Using Simple Commands_2018: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      U3L2 Using Simple Commands_2019: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      U3L24 Nested Conditionals Bugs 3: Conserte os erros que ainda existem neste programa. Prove que o programa funciona corretamente.
      U3L25 - drag out key event: Crie um manipulador de eventos para responder aos eventos de apertar tecla e exibir event.key no console. Aperte as teclas do teclado para ver o que acontece. (Clique para ver as instruções completas)
      U3L25 - play sound when up key: Modifique o código para que o som só seja tocado quando a seta para cima for pressionada (Clique aqui para ver todas as instruções)
      U3L2_Turtle3by3Grid: "Desenhe uma grade 3x3 acima e à direita da\ntartaruga. Tente fazer isso com o menor número de comandos possível. OBSERVAÇÃO:\nEsse problema é bastante desafiador. Você deve precisar passar um tempo resolvendo-o\ne ajustando-o.  Você também deve considerar usar lápis e papel para esboçar\nsuas ideias."
      U3L2_Turtle3by3Grid_2018: "Desenhe uma grade 3x3 acima e à direita da\ntartaruga. Tente fazer isso com o menor número de comandos possível. OBSERVAÇÃO:\nEsse problema é bastante desafiador. Você deve precisar passar um tempo resolvendo-o\ne ajustando-o.  Você também deve considerar usar lápis e papel para esboçar\nsuas ideias."
      U3L2_Turtle3by3Grid_2019: "Desenhe uma grade 3x3 acima e à direita da\ntartaruga. Tente fazer isso com o menor número de comandos possível. OBSERVAÇÃO:\nEsse problema é bastante desafiador. Você deve precisar passar um tempo resolvendo-o\ne ajustando-o.  Você também deve considerar usar lápis e papel para esboçar\nsuas ideias."
      U3L2_TurtleSquare_right: "Desenhe um quadrado usando apenas avance\ne vireEsquerda, mas, desta vez, faça o quadrado aparecer ACIMA e À DIREITA\nda posição inicial."
      U3L2_TurtleSquare_right_2018: "Desenhe um quadrado usando apenas avance\ne vireEsquerda, mas, desta vez, faça o quadrado aparecer ACIMA e À DIREITA\nda posição inicial."
      U3L2_TurtleSquare_right_2019: "Desenhe um quadrado usando apenas avance\ne vireEsquerda, mas, desta vez, faça o quadrado aparecer ACIMA e À DIREITA\nda posição inicial."
      U4 - Objects - eventParameter: Acione ambos os eventos do teclado e do mouse e examine os objetos de evento exibidos no console. Por que um objeto seria a melhor maneira de armazenar esta informação? (Clique para ver as instruções completas)
      U4 - Objects - eventParameter_2018: Acione ambos os eventos do teclado e do mouse e examine os objetos de evento exibidos no console. Por que um objeto seria a melhor maneira de armazenar esta informação? (Clique para ver as instruções completas)
      U4 - Objects - eventParameter_2019: Acione ambos os eventos do teclado e do mouse e examine os objetos de evento exibidos no console. Por que um objeto seria a melhor maneira de armazenar esta informação? (Clique para ver as instruções completas)
      U4 - ReadRecords - Contacts App 2: Crie uma função chamada atualizaDadosLocais. (Clique para ver todas as instruções)
      U4 - ReadRecords - Contacts App 2_2018: Crie uma função chamada atualizaDadosLocais. (Clique para ver todas as instruções)
      U4 - ReadRecords - Contacts App 2_2019: Crie uma função chamada atualizaDadosLocais. (Clique para ver todas as instruções)
      U4 - ReadRecords - Contacts App 4: Crie um botão "Deletar". (Clique para ver todas as instruções)
      U4 - ReadRecords - Contacts App 4_2018: Crie um botão "Deletar". (Clique para ver todas as instruções)
      U4 - ReadRecords - Contacts App 4_2019: Crie um botão "Deletar". (Clique para ver todas as instruções)
      U4 Model App: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      U4 Model App_2018: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      U4 Model App_2019: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      U4 Model Design 1: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      U4 Model Design 1_2018: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      U4 Model Design 1_2019: Adicione um grande botão vermelho na sua tela usando o Modo de Design. (Clique para ver as instruções completas)
      U4 vigenere cipher 2: Instruções
      U4L02 - Objects - Template1: Modelo
      U4L02 - Objects - Template1_2018: Modelo
      U4L02 - Objects - Template1_2019: Modelo
      U4L02 - Objects - createObject: 'Crie um objeto pelo menos 5 valores incluindo pelo menos um string e um número. (Clique para ver as instruções completas) '
      U4L02 - Objects - eventParameter: Acione ambos os eventos do teclado e do mouse e examine os objetos de evento exibidos no console. Por que um objeto seria a melhor maneira de armazenar esta informação? (Clique para ver as instruções completas)
      U5 if-else-if movie example: Adicione uma condição senão-se com o objetivo de dizer ao usuário se seus chutes são altos ou baixos em vez de apenas dizer que estão errados. (Clique para ver todas as instruções)
      U5 if-else-if movie example_2018: Adicione uma condição senão-se com o objetivo de dizer ao usuário se seus chutes são altos ou baixos em vez de apenas dizer que estão errados. (Clique para ver todas as instruções)
      U5 if-else-if movie example_2019: Adicione uma condição senão-se com o objetivo de dizer ao usuário se seus chutes são altos ou baixos em vez de apenas dizer que estão errados. (Clique para ver todas as instruções)
      Underground Avoiding Lava: Há lava escondida sob alguns destes blocos, que você precisará cobrir antes de avançar. Um comando "se" será útil aqui. Adicione um comando "andar à frente" no local correto para minerar estes blocos.
      Underground Avoiding Lava_2018: Há lava escondida sob alguns destes blocos, que você precisará cobrir antes de avançar. Um comando "se" será útil aqui. Adicione um comando "andar à frente" no local correto para minerar estes blocos.
      Underground Avoiding Lava_2019: Há lava escondida sob alguns destes blocos, que você precisará cobrir antes de avançar. Um comando "se" será útil aqui. Adicione um comando "andar à frente" no local correto para minerar estes blocos.
      Underground If Statements: Agora, a situação complicou um pouco. Minere 3 redstone, mas não caia na lava. Use um comando "se" para colocar paralelepípedos sobre qualquer lava que você descobrir.
      Underground If Statements_2018: Agora, a situação complicou um pouco. Minere 3 redstone, mas não caia na lava. Use um comando "se" para colocar paralelepípedos sobre qualquer lava que você descobrir.
      Underground If Statements_2019: Agora, a situação complicou um pouco. Minere 3 redstone, mas não caia na lava. Use um comando "se" para colocar paralelepípedos sobre qualquer lava que você descobrir.
      Underground Iron: Não é uma boa ideia tentar andar sobre lava incandescente. Coloque os paralelepípedos para criar uma ponte, depois minere pelo menos dois dos blocos de ferro.
      Underground Iron_2018: Não é uma boa ideia tentar andar sobre lava incandescente. Coloque os paralelepípedos para criar uma ponte, depois minere pelo menos dois dos blocos de ferro.
      Underground Iron_2019: Não é uma boa ideia tentar andar sobre lava incandescente. Coloque os paralelepípedos para criar uma ponte, depois minere pelo menos dois dos blocos de ferro.
      Underground Mining Coal: Você encontrará os recursos mais valiosos no subterrâneo, mas pode ficar escuro lá dentro. Coloque pelo menos 2 tochas e minere pelo menos 2 carvões.
      Underground Mining Coal_2018: Você encontrará os recursos mais valiosos no subterrâneo, mas pode ficar escuro lá dentro. Coloque pelo menos 2 tochas e minere pelo menos 2 carvões.
      Underground Mining Coal_2019: Você encontrará os recursos mais valiosos no subterrâneo, mas pode ficar escuro lá dentro. Coloque pelo menos 2 tochas e minere pelo menos 2 carvões.
      Valentine_artist_01: Ajuda a artista completa o coração de lhama dele.
      Valentine_playlab_01: 'Programa Kiki (Ator 1) para mover ao esquerda e direto quando as botoes esquerda e direto sao pressionado. Quado Kiki esta clicado, ela precisa lancar coracoes na direcao das amigas dela. '
      Vigenere: Teste
      Virtual Pet 1 Predict: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Virtual Pet 1 Predict_2019: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Virtual Pet 1 Predict_simple: 'O que acha que vai acontecer quando você clicar no alienígena?  '
      Virtual Pet 4: Adicione um comportamento ao seu sabonete para torná-lo arrastável e, em seguida, arraste-o para limpar a girafa!
      Virtual Pet 4_2019: Adicione um comportamento ao seu sabonete para torná-lo arrastável e, em seguida, arraste-o para limpar a girafa!
      Virtual Pet 4_simple: Adicione um comportamento ao seu sabonete para torná-lo arrastável e, em seguida, arraste-o para limpar a girafa!
      'Widget: Black and White Pixelation': Agora, crie sua própria imagem! Começamos com uma tela de 10x10, mas você pode deixá-la do tamanho que você quiser. Feliz pixelização!
      'Widget: Black and White Pixelation_2018': Agora, crie sua própria imagem! Começamos com uma tela de 10x10, mas você pode deixá-la do tamanho que você quiser. Feliz pixelização!
      'Widget: Black and White Pixelation_2019': Agora, crie sua própria imagem! Começamos com uma tela de 10x10, mas você pode deixá-la do tamanho que você quiser. Feliz pixelização!
      XML Scratchpad: Use este nível de teste para pegar xml para testes de unidade
      aE6: 'Quantas vezes você precisa repetir isto para desenhar metade de um círculo? '
      aE7: "Se você criar outro laço como este,\nmas virar para a esquerda ao invés da direita, o que acontece? \\r\n\\r\nVocê pode repetir tudo\nisso para desenhar essa onda?"
      aE8: "Agora vamos repetir tudo quatro\nvezes para criar a moldura dessa imagem. Preste atenção nos cantos - você não pode\nsimplesmente virar 90 graus! \\r\n\\r\nSe repetir uma ação de virar 3 graus 60 vezes faz um\nsemicírculo, qual desses blocos de código vai fazer um outro quarto\nde círculo para os cantos?"
      aEfreeplay: Atividade Livre!
      allthethings data blocks test: Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      allthethings design mode elements: Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      allthethings level dataTables: Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height: Faça isso
      allthethings_ttscsp: Analise o programa corrigindo o erro lógico dentro do programa. (Clique para ver as instruções completas)
      artistFunctionsVideo1: Siga as instruções para fazer sua própria função.
      artistLoopsK1: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      artistLoopsK2: Agora, use o laço `repetir` para desenhar esta linha cinco vezes!
      artistLoopsK2gradek_artist_loops3: Agora, use o laço `repetir` para desenhar esta linha cinco vezes!
      beeDebugVideo1: Use um laço "repita" para coletar todo o néctar.
      behavior bash mary: Clone este nível e faça seus próprios blocos!
      behaviors 1: Faça uma predição!
      behaviors 4: Faça uma predição!
      behaviors clone me 2: Clone este nível e faça seus próprios blocos!
      behaviors clone me Ram: Clone este nível e faça seus próprios blocos!
      behaviors clone me joshl: Clone este nível e faça seus próprios blocos!
      behaviors clone me nk: Clone este nível e faça seus próprios blocos!
      behaviors clone me tanya: Clone este nível e faça seus próprios blocos!
      behaviors clone me: Clone este nível e faça seus próprios blocos!
      behaviors_caley: Clone este nível e faça seus próprios blocos!
      ben's first level: Clone este nível e faça seus próprios blocos!
      birdsDebugVideo1: "Trace o caminho e leve-me até o porco bobalhão. Desvie\ndo TNT, ou penas vão voar!"
      bounce_1: Conecte um bloco ao bloco "quando clicar na seta para a esquerda" e clique em "Executar". Mova a raquete usando a seta para a esquerda para alcançar o objetivo final.
      bounce_10: Agora há um alvo na parte de cima. Conecte os blocos "marque um ponto" e "marque um ponto para o oponente" aos blocos "quando a bola atingir o alvo" e "quando a bola não acertar a raquete" para fazer um jogo. Veja quantos pontos você consegue marcar antes que seu oponente marque duas vezes.
      bounce_10_2018: Agora há um alvo na parte de cima. Conecte os blocos "marque um ponto" e "marque um ponto para o oponente" aos blocos "quando a bola atingir o alvo" e "quando a bola não acertar a raquete" para fazer um jogo. Veja quantos pontos você consegue marcar antes que seu oponente marque duas vezes.
      bounce_10_basketball: Agora há um alvo na parte de cima! Conecte os blocos "marque um ponto" e "marque um ponto para o oponente" aos blocos "quando a bola chega ao alvo" e "quando a bola não acerta a mão" para fazer um jogo. Veja quantos pontos você consegue marcar antes que seu oponente marque duas vezes.
      bounce_10_sports: Agora há um alvo na parte de cima! Conecte os blocos "marque um ponto" e "marque um ponto para o oponente" aos blocos "quando a bola chega ao alvo" e "quando a bola não acerta a mão" para fazer um jogo. Veja quantos pontos você consegue marcar antes que seu oponente marque duas vezes!
      bounce_11: Agora você pode conectar blocos ao bloco "quando o jogo começa". Você tem que anexar o novo bloco "jogue uma nova bola" em mais de um lugar. Além disso, tente mudar o cenário ou a velocidade da raquete e da bola e veja quantos pontos você pode marcar antes de seu oponente marcar duas vezes.
      bounce_11_2018: Agora você pode conectar blocos ao bloco "quando o jogo começa". Você tem que anexar o novo bloco "jogue uma nova bola" em mais de um lugar. Além disso, tente mudar o cenário ou a velocidade da raquete e da bola e veja quantos pontos você pode marcar antes de seu oponente marcar duas vezes.
      bounce_11_basketball: Agora você pode conectar blocos ao bloco "quando o jogo começa". Você tem que conectar o novo bloco "jogue uma nova bola" em mais de um lugar. Além disso, tente mudar o cenário ou a velocidade da mão e da bola e veja quantos pontos você consegue marcar antes de seu oponente marcar duas vezes!
      bounce_11_sports: Agora você pode conectar blocos ao bloco "quando o jogo começa". Você tem que conectar o novo bloco "jogue uma nova bola" em mais de um lugar. Além disso, tente mudar o cenário ou a velocidade da mão e da bola e veja quantos pontos você consegue marcar antes de seu oponente marcar duas vezes!
      bounce_12: Crie seu próprio jogo de Pingue-pongue. Você pode mudar o visual e todas as regras. Quando terminar, clique em Concluir para que seus amigos possam jogar seu jogo em seus celulares.
      bounce_12_2018: Crie seu próprio jogo de Pingue-pongue. Você pode mudar o visual e todas as regras. Quando terminar, clique em Concluir para que seus amigos possam jogar seu jogo em seus celulares.
      bounce_12_basketball: Crie seu próprio jogo de basquete. Você pode mudar todas as regras. Quando terminar, clique em Concluir para permitir que seus amigos possam testar seu jogo em seus smartphones.
      bounce_12_sports: 'Crie seu próprio jogo! Aqui, você está no comando: você pode mudar todas as regras, misturar e combinar esportes, e criar o que quiser! Quando terminar, clique em Concluir para deixar seus amigos experimentarem seu jogo em seus smartphones.'
      bounce_1_2018: Conecte um bloco ao bloco "quando clicar na seta para a esquerda" e clique em "Executar". Mova a raquete usando a seta para a esquerda para alcançar o objetivo final.
      bounce_1_basketball: Conecte um bloco ao bloco "quando clicar na seta para a esquerda" e clique em "Executar". Mova a mão usando a seta para a esquerda para alcançar o objetivo final.
      bounce_1_sports: Vá até a bandeira! Anexe um bloco ao bloco "quando seta para esquerda" e clique em "Executar" para mover o jogador até a bandeira.
      bounce_2: Conecte um bloco aos blocos "quando clicar na seta para a direita" e "quando clicar na seta para a esquerda". Mova a raquete para alcançar ambos os objetivos finais.
      bounce_2_2018: Conecte um bloco aos blocos "quando clicar na seta para a direita" e "quando clicar na seta para a esquerda". Mova a raquete para alcançar ambos os objetivos finais.
      bounce_2_basketball: Conecte um bloco aos blocos "quando clicar na seta para a direita" e "quando clicar na seta para a esquerda". Mova a mão para alcançar ambos os objetivos finais.
      bounce_2_sports: Agora há duas bandeiras! Anexe um bloco aos blocos "quando seta para esquerda" e "quando seta para direita" para fazer com que seu jogador se mova nas duas direções.
      bounce_3: Agora, tente algo semelhante com o bloco "quando clicar na seta para cima". Mova a raquete o objetivo final no topo.
      bounce_3_2018: Agora, tente algo semelhante com o bloco "quando clicar na seta para cima". Mova a raquete o objetivo final no topo.
      bounce_4: Desta vez, você precisa adicionar quatro blocos. Mova a raquete para todos os quatro alvos finais para completar este desafio.
      bounce_4_2018: Desta vez, você precisa adicionar quatro blocos. Mova a raquete para todos os quatro alvos finais para completar este desafio.
      bounce_5: Vamos lançar uma bola em direção à raquete. Conecte um bloco ao bloco "quando a bola bater na raquete" para garantir que a bola atinja o alvo.
      bounce_5_2018: Vamos lançar uma bola em direção à raquete. Conecte um bloco ao bloco "quando a bola bater na raquete" para garantir que a bola atinja o alvo.
      bounce_5_basketball: Vamos lançar uma bola em direção à mão. Conecte um bloco ao bloco "quando a bola bater na mão" para garantir que a bola atinja a bandeira.
      bounce_5_sports: O disco de hóquei vai deslizar até o jogador! Anexe um bloco ao bloco "quando a bola atinge o jogador" para acertar a bandeira.
      bounce_6: Agora o alvo está no topo. Você precisa conectar blocos em ambos os blocos "quando a bola bater" para resolver este desafio.
      bounce_6_2018: Agora o alvo está no topo. Você precisa conectar blocos em ambos os blocos "quando a bola bater" para resolver este desafio.
      bounce_6_basketball: Agora a bandeira está no topo. Você precisa conectar blocos a ambos os blocos "quando a bola bater" para resolver este desafio.
      bounce_6_sports: Agora a bandeira está no topo. Você precisa conectar blocos a ambos os blocos "quando a bola bater" para resolver este desafio.
      bounce_7: Conecte os blocos a cada um dos blocos "quando". Faça a bola quicar até que ela atinja o alvo.
      bounce_7_2018: Conecte os blocos a cada um dos blocos "quando". Faça a bola quicar até que ela atinja o alvo.
      bounce_7_basketball: Conecte os blocos a cada um dos blocos "quando". Faça a bola quicar até que ela atinja a bandeira.
      bounce_7_sports: Conecte os blocos a cada um dos blocos "quando". Faça a bola quicar até que ela atinja a bandeira.
      brendan behaviors clone: Clone este nível e faça seus próprios blocos!
      clone me mary: Clone este nível e faça seus próprios blocos!
      collector example: Ponha estes blocos em ordem para coletar todo o ouro e resolver o desafio.
      collectorDebugVideo2: Ponha estes blocos em ordem para coletar todo o ouro e resolver o desafio.
      collectorSkinVideo1: Colete todas as quatro pilhas para passar esse nível.
      collectorSkinVideo2: Colete uma pilha de ouro para passar deste nível.
      conditionals_forvideo_playlab: Marque quantos pontos você conseguir!
      course1_artist_loops_challenge1: |-
        Você pode usar uma repetição para desenhar muitos traços em uma linha.

        Você pode desenhar uma casa? Fazer parecer do jeito que você gosta! Tente procurar por padrões que se repetem!
      course1_artist_loops_challenge3: '"Você pode me ajudar a fazer duas casas de pássaros?"'
      course1_artist_loops_challenge4: '"É hora de jogar os dados! Você consegue me ajudar a desenhar estes?"'
      course1_collector_loops_challenge1: '"Você pode me ajudar encontrar alguns bugs? Eu sei aonde eu quero ir, mas eu não sei quantos passos devo dar."'
      course1_collector_loops_challenge2: 'Desta vez você só pode usar um bloco de cada seta. Pegue todo o tesouro! '
      course1_collector_loops_challenge3: 'Desta vez você só pode usar um bloco de cada seta. Pegue todo o tesouro! '
      course1_collector_loops_challenge4: Vamos pegar o tesouro! Ajuda-me em cada linha, em seguida, voltar para iniciar a próxima linha. Você consegue achar um padrão?
      course1_maze_debugging_challenge1: Analise esse nível. Remova os blocos extras e adicione os blocos faltando. Leve o pássaro até o porco!
      course1_maze_debugging_challenge2: Analise este nível. Estes são os blocos corretos, mas eles estão colocados na ordem errada!
      course1_maze_seq_challenge1: '"Desenhe o caminho e me leve até aquele porco bobalhão. Não passe pelas dinamites, senão penas vão voar!"'
      course1_playlab_events_challenge1: '"Onde meus amigos estão se escondendo? Você pode escrever um código para mostrá-los?"'
      course1_playlab_events_challenge2: '"Vamos fazer uma festa! Dê aos meus amigos algo para fazer quando você clique ou toque neles."'
      course2_artist_nestedLoops_challenge1: Você consegue descobrir como fazer uma imagem como esta?
      course2_artist_nestedLoops_challenge2: Você consegue descobrir como fazer uma imagem como esta?
      course2_artist_prog_challenge1: Desenhe quartos para cada um dos animais. Existem muitos jeitos de solucionar esse quebra cabeças, então se divirta. O caminho mais curto para a solução é usando 6 blocos, mas use quantos você quiser!
      course2_bee_conditionals_challenge1: Colete todo o néctar ou faça todo o mel.
      course2_bee_conditionals_challenge2: Colete todo o néctar ou faça todo o mel.
      course2_collector_loops_challenge2: Pegar todos os tesouros!
      course2_collector_prog_challenge1: Preste atenção! Você consegue coletar todas as *10* peças do tesouro?
      course2_collector_prog_challenge2: Há 20 peças de tesouro para serem encontradas. Colete pelo menos metade para finalizar este desafio!
      course2_maze_loops_challenge1: 'Agora Scrat quer tentar usar as repetições para achar sua noz! '
      course2_maze_seq_challenge1: Desenhe o caminho e leve-me até aquele porco bobalhão. Não passe pelas dinamites, senão penas vão voar!
      course2_playlab_stage17_1: "Você pode fazer Jorge, o cachorro (personagem 1),\ndizer \"Olá\"?"
      course2_playlab_stage17_10: |-
        Adicione blocos ao evento "quando correr"
        para mudar o plano de fundo e a velocidade de Valfredo.\r
        \r
        Jogue e
        mova Valfredo com as setas até marcar pontos.
      course2_playlab_stage17_11: "Crie sua própria história. Quando terminar,\nclique em \"Concluir\" para que seus amigos testem sua história em seus celulares."
      course2_playlab_stage17_2: "Você pode fazer Jorge (personagem 1) dizer alguma coisa e,\ndepois, fazer a gata Olívia (personagem 2) dizer alguma coisa?"
      course2_playlab_stage17_3: "Você consegue escrever um programa para fazer Jorge\n(personagem 1) se mover em direção à gata Olívia?"
      course2_playlab_stage17_4: "Você consegue escrever um programa que faça \nJorge (personagem 1) se mover até Olívia, a gata, e fazer Olívia dizer \"Olá\" quando Jorge\na alcançar?"
      course2_playlab_stage17_5: "Você pode escrever um programa para fazer Otávia\ndizer \"Olá\" quando clicarem nela?"
      course2_playlab_stage17_6: "Agora escreva um programa que faça Valfredo\nse mover usando as teclas com as setas para cima / para baixo / à esquerda / à direita, para atingir todos os alvos!"
      course2_playlab_stage17_7: O bloco `repita para sempre` permite rodar códigos para várias vezes sempre. Você consegue colocar blocos para mover o dinossauro Chomp (ator 2) para cima ou para baixo para sempre?
      course2_playlab_stage17_8: "Você pode fazer Valfredo (personagem 1) dizer\n\"Ai!\" e reproduzir um som de \"batida\" se ele encontrar Chomp? \\r\n\\r\nQuando\nterminar, jogue para que isso aconteça."
      course2_playlab_stage17_9: "Você pode adicionar um bloco para marcar um ponto\nquando Valfredo se encontrar com Otávia (personagem 3)? \\r\nJogue e mova Valfredo\ncom as setas do teclado até marcar ponto!"
      course3_artist_concept_challenge1: Fique a vontade para usar tentativa e erro. Não esperamos que você seja perfeito na primeira vez. Quer ver mais dicas? Clique aqui!
      course3_artist_functions_challenge2: Tente esse código para ver como funciona, então faça um programa do seu jeito!
      course3_bee_functions_challenge1: Você está por conta própria nesse desafio. Isso pode ser mais difícil do que parece!
      course3_collector_debugging_challenge2: Você é um especialista em laços aninhados? Use o que você aprendeu até agora para coletar todo o tesouro!
      course3_farmer_condLoops_challenge1: Vire à direita nas abóboras. Colete tudo para completar o nível. Cada cultura oculta tem apenas um milho ou alface.
      course3_farmer_condLoops_challenge2: Colete tudo para completar o nível.
      course3_maze_debugging_challenge2: '* "Se eu virar muitas vezes, fico tonto! Me ajude a alcançar a noz com apenas quatro comandos ''virar''." *'
      course3_playLab_challenge1: "Algo deve acontecer quando tiver pontos suficientes, ou quando você ficar sem pontos. Adicione algum código para o 'ganhar jogo' e 'perder o jogo' funções para fazer o jogo funcionar do jeito que deveria. \nClique as dicas para ideias!"
      course3_playlab_stage16_1: Você consegue fazer esse cachorro dizer "Olá, mundo"?
      course3_playlab_stage16_2: "Você pode fazer o cachorro dizer alguma coisa e,\ndepois, fazer a gata dizer alguma coisa?"
      course3_playlab_stage16_3: "Você consegue escrever um programa para fazer este\ncachorro se mover até o gato?"
      course3_playlab_stage16_4: "Você consegue escrever um programa que faça\no cachorro se mover até o gato e que faça o gato dizer \"Olá\" quando o cachorro o\nalcançar?"
      course3_playlab_stage16_5: "Você pode adicionar um bloco para deixar o polvo\nfeliz?"
      course3_playlab_stage16_6: "Crie sua própria história. Quando terminar,\nclique em \"Concluir\" para que seus amigos testem sua história em seus celulares."
      course3_playlab_stage17_1: "Você pode escrever um programa para fazer\no polvo dizer \"Olá\" quando clicarem nele?"
      course3_playlab_stage17_2: "Você pode escrever um programa que faça Valfredo\nse mover usando as as setas para cima / para baixo / à esquerda / à direita do teclado, para atingir todos os alvos?"
      course3_playlab_stage17_3: "O bloco \"repita infinitamente\" permite\nque você execute o código de maneira contínua. Você consegue conectar blocos para mover este dinossauro\npara cima e para baixo repetidamente?"
      course3_playlab_stage17_4: "Você pode fazer Valfredo dizer \"Ai!\"\ne reproduzir um som de \"batida\" se ele encontrar o dinossauro, e então movê-lo com\nas setas to teclado para fazer isso acontecer?"
      course3_playlab_stage17_5: "Você pode adicionar um bloco para marcar um ponto\nquando Valfredo se encontrar com o polvo, e então movê-lo com as setas do teclado até\nmarcar pontos?"
      course3_playlab_stage17_6: "Você pode adicionar blocos para mudar o plano de fundo\ne a velocidade de Valfredo, e então movê-lo com as setas do teclado até marcar pontos?"
      course3_playlab_stage17_7: "Crie sua própria história. Quando terminar,\nclique em \"Concluir\" para que seus amigos testem sua história em seus celulares."
      course4_artist_functions_challenge2: Tente esse código para ver como funciona, então faça um programa do seu jeito!
      course4_artist_fwp_challenge1: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
      courseA_artist_loops1: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      courseA_artist_loops10: Me ajude a colocar pedras para que eu não caia!
      courseA_artist_loops10_2018: Me ajude a colocar pedras para que eu não caia!
      courseA_artist_loops10_2019: Me ajude a colocar pedras para que eu não caia!
      courseA_artist_loops1_2018: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      courseA_artist_loops1_2019: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      courseA_artist_loops2: Ajude o artista a desenhar esta linha duas vezes mais rápido.
      courseA_artist_loops2_2018: Ajude o artista a desenhar esta linha duas vezes mais rápido.
      courseA_artist_loops2_2019: Ajude o artista a desenhar esta linha duas vezes mais rápido.
      courseA_artist_loops3: Desenhe uma linha para frente cinco vezes.
      courseA_artist_loops3_2018: Desenhe uma linha para frente cinco vezes.
      courseA_artist_loops3_2019: Desenhe uma linha para frente cinco vezes.
      courseA_artist_loops4: Agora, use o laço `repetir` para desenhar esta linha cinco vezes!
      courseA_artist_loops4_2018: Agora, use o laço `repetir` para desenhar esta linha cinco vezes!
      courseA_artist_loops4_2019: Agora, use o laço `repetir` para desenhar esta linha cinco vezes!
      courseA_artist_loops9: 'Desafio: Conserte as escadas.'
      courseA_artist_loops9_2018: 'Desafio: Conserte as escadas.'
      courseA_artist_loops9_2019: 'Desafio: Conserte as escadas.'
      courseA_artist_loops_challenge1: Você pode desenhar uma casa? Faça com que ela seja do jeito que você gosta!
      courseA_artist_loops_challenge1_2018: Você pode desenhar uma casa? Faça com que ela seja do jeito que você gosta!
      courseA_artist_loops_challenge1_2019: Você pode desenhar uma casa? Faça com que ela seja do jeito que você gosta!
      courseA_artist_loops_challenge2: '"Você pode me ajudar a fazer duas casas de pássaros?"'
      courseA_artist_loops_challenge2a: '*"Me ajude a montar estas três tendas!"*'
      courseA_artist_loops_challenge2a_2018: '*"Me ajude a montar estas três tendas!"*'
      courseA_artist_loops_challenge2a_2019: '*"Me ajude a montar estas três tendas!"*'
      courseA_bee_seq1: Brinque com estes blocos para ajudar a abelha a pegar *um* néctar.
      courseA_bee_seq10: Tente sozinho! Pegue todo o néctar.
      courseA_bee_seq11: Pegue todo o néctar.
      courseA_bee_seq12: Brinque com estes blocos para ajudar a abelha a pegar *um* néctar.
      courseA_bee_seq13: Use três blocos 'mover para oeste' e um bloco 'pegar néctar'.
      courseA_bee_seq14: Use três blocos 'mover para norte' e um bloco 'pegar néctar'.
      courseA_bee_seq2: Ajude a abelha a pegar o néctar!
      courseA_bee_seq3: Encontrar o erro e o corrija!
      courseA_bee_seq4: Tente você mesmo!
      courseA_bee_seq5: Tente você mesmo!
      courseA_bee_seq6: Agora a abelha precisa pegar néctar de duas flores!
      courseA_bee_seq7: Adicione dois blocos para terminar este enigma!
      courseA_bee_seq8: Certifique-se de pegar néctar de cada flor!
      courseA_bee_seq9: Certifique-se de pegar néctar de cada flor!
      courseA_collector_loops1: Mova Laurel ao redor e pegue quanto tesouro puder!
      courseA_collector_loops10: Ajude Laurel a pegar todo o tesouro ao longo deste caminho.
      courseA_collector_loops10_2018: Ajude Laurel a pegar todo o tesouro ao longo deste caminho.
      courseA_collector_loops10_2019: Ajude Laurel a pegar todo o tesouro ao longo deste caminho.
      courseA_collector_loops11: Ajude Laurel a pegar todos os tesouros dessa caverna.
      courseA_collector_loops11_2018: Ajude Laurel a pegar todos os tesouros dessa caverna.
      courseA_collector_loops11_2019: Ajude Laurel a pegar todos os tesouros dessa caverna.
      courseA_collector_loops12: '*Eureka! Pegue quanto tesouro você puder!*'
      courseA_collector_loops12_2018: '*Eureka! Pegue quanto tesouro você puder!*'
      courseA_collector_loops12_2019: '*Eureka! Pegue quanto tesouro você puder!*'
      courseA_collector_loops1_2018: Mova Laurel ao redor e pegue quanto tesouro puder!
      courseA_collector_loops1_2019: Mova Laurel ao redor e pegue quanto tesouro puder!
      courseA_collector_loops2: Pegue todas as três pilhas para passar esse nível.
      courseA_collector_loops2_2018: Pegue todas as três pilhas para passar esse nível.
      courseA_collector_loops2_2019: Pegue todas as três pilhas para passar esse nível.
      courseA_collector_loops4: Corrija o caminho de Laurel para pegar todos estes tesouros.
      courseA_collector_loops4_2018: Corrija o caminho de Laurel para pegar todos estes tesouros.
      courseA_collector_loops4_2019: Corrija o caminho de Laurel para pegar todos estes tesouros.
      courseA_collector_loops5: Use o que você aprendeu para pegar todo o tesouro.
      courseA_collector_loops5_2018: Use o que você aprendeu para pegar todo o tesouro.
      courseA_collector_loops5_2019: Use o que você aprendeu para pegar todo o tesouro.
      courseA_collector_loops6: Adicione blocos a este código para pegar todo o tesouro.
      courseA_collector_loops6_2018: Adicione blocos a este código para pegar todo o tesouro.
      courseA_collector_loops6_2019: Adicione blocos a este código para pegar todo o tesouro.
      courseA_collector_loops7: O que você deve adicionar a este código para pegar todo o tesouro?
      courseA_collector_loops7_2018: O que você deve adicionar a este código para pegar todo o tesouro?
      courseA_collector_loops7_2019: O que você deve adicionar a este código para pegar todo o tesouro?
      courseA_collector_loops8: Escreva o código para pegar todo este tesouro.
      courseA_collector_loops8_2018: Escreva o código para pegar todo este tesouro.
      courseA_collector_loops8_2019: Escreva o código para pegar todo este tesouro.
      courseA_collector_loops9: "**Desafio:** O tesouro vai até o topo das escadas!  Escreva o código para ajudar a Laurel a pegar tudo."
      courseA_collector_loops9_2018: "**Desafio:** O tesouro vai até o topo das escadas!  Escreva o código para ajudar a Laurel a pegar tudo."
      courseA_collector_loops9_2019: "**Desafio:** O tesouro vai até o topo das escadas!  Escreva o código para ajudar a Laurel a pegar tudo."
      courseA_collector_loops_challenge1: '*"Você pode me ajudar a identificar alguns bugs?"*'
      courseA_collector_loops_challenge1_2018: '*"Você pode me ajudar a identificar alguns bugs?"*'
      courseA_collector_loops_challenge1_2019: '*"Você pode me ajudar a identificar alguns bugs?"*'
      courseA_collector_loops_challenge2: 'Pegar todos os tesouros! '
      courseA_collector_loops_challenge2kp: Colete pelo menos **3** peças do tesouro para passar este nível.
      courseA_collector_loops_challenge2kp_2018: Colete pelo menos **3** peças do tesouro para passar este nível.
      courseA_collector_loops_challenge2kp_2019: Colete pelo menos **3** peças do tesouro para passar este nível.
      courseA_collector_preLoops1: "Esta é Laurel, a Aventureira!\n\nPressione \"Run\" para vê-la andar até o tesouro e pegá-lo"
      courseA_collector_preLoops2: "Ótimo! Agora você pode adicionar o código você mesmo! \n\nEncaixe um bloco `pegar tesouro` na parte inferior do programa e clique em \"Executar \"."
      courseA_collector_preLoops3: Encaixe dois blocos `E -->` e um bloco `pegar tesouro` na parte inferior do programa, depois clique em "Executar".
      courseA_collector_preLoops4: Você consegue descobrir como resolver esse problema?
      courseA_collector_preLoops5: Pegar 1 desses 2 gemas para resolver este enigma.
      courseA_collector_preLoops6: Pegue ambas as peças do tesouro para resolver este enigma.
      courseA_collector_preLoops7: Pegue todas as três pilhas para passar esse nível.
      courseA_harvester_forVideo: Você consegue pegar todo o milho usando apenas ** um ** bloco de movimento?
      courseA_harvester_loops1: Ajude a colheitadeira a pegar todo o milho!
      courseA_harvester_loops10: Ajude a colheitadeira a pegar todas as cinco espigas de milho!
      courseA_harvester_loops10_2019: Ajude a colheitadeira a pegar todas as cinco espigas de milho!
      courseA_harvester_loops11: 'Tente mais um por sua conta! '
      courseA_harvester_loops11_2019: 'Tente mais um por sua conta! '
      courseA_harvester_loops1_2019: Ajude a colheitadeira a pegar todo o milho!
      courseA_harvester_loops2: Certifique-se de pegar todo o milho!
      courseA_harvester_loops2_2019: Certifique-se de pegar todo o milho!
      courseA_harvester_loops3: Você consegue pegar todo o milho usando apenas ** um ** bloco de movimento?
      courseA_harvester_loops3_2019: Você consegue pegar todo o milho usando apenas ** um ** bloco de movimento?
      courseA_harvester_loops4: Você pode ajudar a colheitadeira a encontrar o bug no seu código?
      courseA_harvester_loops4_2019: Você pode ajudar a colheitadeira a encontrar o bug no seu código?
      courseA_harvester_loops5: Tente você mesmo! Você consegue pegar o milho que está no final também?
      courseA_harvester_loops5_2019: Tente você mesmo! Você consegue pegar o milho que está no final também?
      courseA_harvester_loops5a: Olha todo este milho! Você consegue pegar tudo sozinho?
      courseA_harvester_loops5a_2019: Olha todo este milho! Você consegue pegar tudo sozinho?
      courseA_harvester_loops5b: Você consegue modificar seu código para fazer a colheitadeira pegar todo o milho?
      courseA_harvester_loops5b_2019: Você consegue modificar seu código para fazer a colheitadeira pegar todo o milho?
      courseA_harvester_loops6: Você precisará de **um** bloco `Mover para o Sul` e **um** bloco `Mover para o Oeste`.
      courseA_harvester_loops6_2019: Você precisará de **um** bloco `Mover para o Sul` e **um** bloco `Mover para o Oeste`.
      courseA_harvester_loops7: 'Tente você mesmo! '
      courseA_harvester_loops7_2019: 'Tente você mesmo! '
      courseA_harvester_loops8: Este é o mesmo enigma, mas agora você tem que repetir **três** vezes!
      courseA_harvester_loops9: Você consegue descobrir como pegar todo o milho?
      courseA_harvester_loops9_2019: Você consegue descobrir como pegar todo o milho?
      courseA_harvester_seq1: Brinque com estes blocos para ajudar a colheitadeira a pegar parte do milho.
      courseA_harvester_seq10: Certifique-se de pegar todo o milho!
      courseA_harvester_seq10_2019: Certifique-se de pegar todo o milho!
      courseA_harvester_seq11: Tente você mesmo! Pegue todo o milho.
      courseA_harvester_seq11_2019: Tente você mesmo! Pegue todo o milho.
      courseA_harvester_seq12: Pegue todo o milho.
      courseA_harvester_seq12_2019: Pegue todo o milho.
      courseA_harvester_seq13: Brinque com estes blocos para ajudar a colheitadeira a pegar o milho.
      courseA_harvester_seq13_2019: Brinque com estes blocos para ajudar a colheitadeira a pegar o milho.
      courseA_harvester_seq1_2019: Brinque com estes blocos para ajudar a colheitadeira a pegar parte do milho.
      courseA_harvester_seq2: Use três blocos 'mover para oeste' e um bloco 'pegar o milho' para resolver este enigma.
      courseA_harvester_seq2_2019: Use três blocos 'mover para oeste' e um bloco 'pegar o milho' para resolver este enigma.
      courseA_harvester_seq3: Use três blocos 'Mover Para o Norte' e um bloco 'Pegar o Milho'.
      courseA_harvester_seq3_2019: Use três blocos 'Mover Para o Norte' e um bloco 'Pegar o Milho'.
      courseA_harvester_seq4: Adicione um bloco para ajudar a colheitadeira a pegar todo o milho.
      courseA_harvester_seq4_2019: Adicione um bloco para ajudar a colheitadeira a pegar todo o milho.
      courseA_harvester_seq5: Encontrar o erro e o corrija!
      courseA_harvester_seq5_2019: Encontrar o erro e o corrija!
      courseA_harvester_seq6: Tente você mesmo!
      courseA_harvester_seq6_2019: Tente você mesmo!
      courseA_harvester_seq7: Tente você mesmo!
      courseA_harvester_seq7_2019: Tente você mesmo!
      courseA_harvester_seq8: Agora a colheitadeira precisa pegar o milho duas vezes!
      courseA_harvester_seq8_2019: Agora a colheitadeira precisa pegar o milho duas vezes!
      courseA_harvester_seq9: Adicione dois blocos para terminar este enigma!
      courseA_harvester_seq9_2019: Adicione dois blocos para terminar este enigma!
      courseA_maze_ramp2_2018: Encaixe todos os blocos juntos para finalizar seu código, em seguida clique em "Executar".
      courseA_maze_ramp2_2019: Encaixe todos os blocos juntos para finalizar seu código, em seguida clique em "Executar".
      courseA_maze_ramp2a_2018: Encaixe todos os blocos juntos para finalizar seu código, em seguida clique em "Executar".
      courseA_maze_ramp3a_2018: Adicione um bloco `Norte` ao final dos outros blocos para terminar este código, depois clique em "▶ Executar".
      courseA_maze_ramp3a_2019: Adicione um bloco `Norte` ao final dos outros blocos para terminar este código, depois clique em "▶ Executar".
      courseA_maze_ramp3b_2018: Adicione um bloco `Norte` ao final dos outros blocos para terminar este código, depois clique em "Executar".
      courseA_maze_ramp3b_2019: Adicione um bloco `Norte` ao final dos outros blocos para terminar este código, depois clique em "Executar".
      courseA_maze_ramp4_2018: Evite a(s) TNT(s) ou penas irão voar!
      courseA_maze_ramp4a_2018: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseA_maze_ramp4a_2019: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseA_maze_ramp5_2018: Desvie da TNT.
      courseA_maze_ramp5a_2018: Leve o pássaro até o porco!
      courseA_maze_ramp5a_2019: Leve o pássaro até o porco!
      courseA_maze_seq1: Leve o pássaro até o porco mau!
      courseA_maze_seq10: 'Desafio: Dê a volta na TNT para levar o pássaro até o porco! '
      courseA_maze_seq10_2018: 'Desafio: Evite a TNT para levar o pássaro até o porco! '
      courseA_maze_seq10_2019: 'Desafio: Evite a TNT para levar o pássaro até o porco! '
      courseA_maze_seq11: Mova-me por um caminho, e então por outro para levar o pássaro até o porco.
      courseA_maze_seq11_2018: Mova-me por um caminho, e então por outro para levar o pássaro até o porco.
      courseA_maze_seq11_2019: Mova-me por um caminho, e então por outro para levar o pássaro até o porco.
      courseA_maze_seq12: 'Pegue aquele porco! '
      courseA_maze_seq12_2018: 'Pegue aquele porco! '
      courseA_maze_seq12_2019: 'Pegue aquele porco! '
      courseA_maze_seq13: Pegue aquele porco da maneira que você conseguir!
      courseA_maze_seq13_2018: Pegue aquele porco da maneira que você conseguir!
      courseA_maze_seq13_2019: Pegue aquele porco da maneira que você conseguir!
      courseA_maze_seq1_2018: Leve o pássaro até o porco mau!
      courseA_maze_seq1_2019: Leve o pássaro até o porco mau!
      courseA_maze_seq2: Altere o código para me levar até o porco!
      courseA_maze_seq2_2018: Altere o código para me levar até o porco!
      courseA_maze_seq3: Corrija o código para levar o pássaro até o porco!
      courseA_maze_seq3_2018: Corrija o código para levar o pássaro até o porco!
      courseA_maze_seq4: REMOVA um bloco para levar o pássaro até o porco!
      courseA_maze_seq4_2018: REMOVA um bloco para levar o pássaro até o porco!
      courseA_maze_seq4a: Leve o pássaro até o porco usando o menor número de blocos possíveis.
      courseA_maze_seq5_2018: Dê uma chance a este.
      courseA_maze_seq5_2019: Dê uma chance a este.
      courseA_maze_seq5a_2018: O que você pode adicionar ao final deste código para levar o pássaro até o porco?
      courseA_maze_seq5a_2019: O que você pode adicionar ao final deste código para levar o pássaro até o porco?
      courseA_maze_seq6: Mova-me por um caminho, e então por outro para levar o pássaro até o porco!
      courseA_maze_seq6_2018: Mova-me por um caminho, e então por outro para levar o pássaro até o porco!
      courseA_maze_seq6_2019: Mova-me por um caminho, e então por outro para levar o pássaro até o porco!
      courseA_maze_seq7: Descubra o que está faltando e então adicione blocos para levar o pássaro até o porco!
      courseA_maze_seq7_2018: Descubra o que está faltando e então adicione blocos para levar o pássaro até o porco!
      courseA_maze_seq8: Resolva este nível e leve o pássaro até o porco!
      courseA_maze_seq8_2018: Resolva este nível e leve o pássaro até o porco!
      courseA_maze_seq8_2019: Resolva este nível e leve o pássaro até o porco!
      courseA_maze_seq9: Analise este nível adicionando blocos para levar o pássaro até o porco!
      courseA_maze_seq9_2018: Analise este nível adicionando blocos para levar o pássaro até o porco!
      courseA_maze_seq_challenge1: Alguma coisa está errada aqui. Ajude a corrigir o código para levar o pássaro até o porco!
      courseA_maze_seq_challenge1_2018: Alguma coisa está errada aqui. Ajude a corrigir o código para levar o pássaro até o porco!
      courseA_maze_seq_challenge1_2019: Alguma coisa está errada aqui. Ajude a corrigir o código para levar o pássaro até o porco!
      courseA_maze_seq_challenge2: Trace o caminho para levar o pássaro até o porco. Evite a TNT, ou penas vão voar!
      courseA_maze_seq_challenge2_2018: Trace o caminho para levar o pássaro até o porco. Evite a TNT, ou penas vão voar!
      courseA_maze_seq_challenge2_2019: Trace o caminho para levar o pássaro até o porco. Evite a TNT, ou penas vão voar!
      courseA_playLab_events3: Conecte o bloco `mover para a esquerda` ao bloco de evento`quando esquerda` que já está na área de trabalho.
      courseA_playLab_events3_2018: Conecte o bloco `mover para a esquerda` ao bloco de evento`quando esquerda` que já está na área de trabalho.
      courseA_playLab_events3_2019: Conecte o bloco `mover para a esquerda` ao bloco de evento`quando esquerda` que já está na área de trabalho.
      courseA_playLab_events4: Adicione blocos para mover para a direita quando o botão `direito` é clicado.
      courseA_playLab_events4_2018: Adicione outro bloco de evento para fazer Jorge mover para a direita quando o botão `direito` é clicado.
      courseA_playLab_events4_2019: Adicione outro bloco de evento para fazer Jorge mover para a direita quando o botão `direito` é clicado.
      courseA_playLab_events7_2018: "*Jogo Livre*: Adicione o que você quiser neste jogo."
      courseA_playLab_events7_2019: "*Jogo Livre*: Adicione o que você quiser neste jogo."
      courseA_playlab_events_challenge1: Você consegue escrever o código para mostrar o resto dos meus amigos? As dicas vão te ajudar a fazer isto passo a passo.
      courseA_playlab_events_challenge1_2018: Você consegue escrever o código para mostrar o resto dos meus amigos? As dicas vão te ajudar a fazer isto passo a passo.
      courseA_playlab_events_challenge1_2019: Você consegue escrever o código para mostrar o resto dos meus amigos? As dicas vão te ajudar a fazer isto passo a passo.
      courseA_playlab_events_challenge2: Dê a todo mundo algo para fazer quando você clicar neles.
      courseA_playlab_events_challenge2_2018: Dê a todo mundo algo para fazer quando você clicar neles.
      courseA_playlab_events_challenge2_2019: Dê a todo mundo algo para fazer quando você clicar neles.
      courseA_playlab_events_challengeClone: Onde meus amigos estão se escondendo? Você consegue escrever um código para mostrá-los?
      courseA_toMakeLoopsVideo_Collector: Loops te deixam executar o que está dentro deles diversas vezes!
      courseB_Scrat_ramp1_2018: Para este enigma, junte os blocos e pressione "▶ Executar"!
      courseB_Scrat_ramp1_2019: Para este enigma, junte os blocos e pressione "▶ Executar"!
      courseB_Scrat_ramp2_2018: Encaixe todos os blocos juntos para finalizar seu código, em seguida clique em "▶ Executar".
      courseB_Scrat_ramp2_2019: Encaixe todos os blocos juntos para finalizar seu código, em seguida clique em "▶ Executar".
      courseB_Scrat_ramp3a_2018: Adicione um bloco `Norte` ao final dos outros blocos para terminar este código, depois clique em "▶ Executar".
      courseB_Scrat_ramp3a_2019: Adicione um bloco `Norte` ao final dos outros blocos para terminar este código, depois clique em "▶ Executar".
      courseB_Scrat_ramp3b_2018: "Arraste o bloco extra de volta para a caixa de ferramentas para removê-lo.\n\n"
      courseB_Scrat_ramp3b_2019: "Arraste o bloco extra de volta para a caixa de ferramentas para removê-lo.\n\n"
      courseB_Scrat_ramp4a_2018: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseB_Scrat_ramp4a_2019: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseB_Scrat_ramp5a_2018: Leve o pássaro até o porco!
      courseB_Scrat_ramp5a_2019: Leve o pássaro até o porco!
      courseB_artist_loops1: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      courseB_artist_loops1_2018: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      courseB_artist_loops1_2019: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      courseB_artist_loops2: O Artista está tentando desenhar uma linha **6** vezes, mas não conseguiu fazer direito. Você pode ajudá-lo?
      courseB_artist_loops2_2018: O Artista está tentando desenhar uma linha **6** vezes, mas não conseguiu fazer direito. Você pode ajudá-lo?
      courseB_artist_loops2_2019: O Artista está tentando desenhar uma linha **6** vezes, mas não conseguiu fazer direito. Você pode ajudá-lo?
      courseB_artist_loops5: Hora de consertar as escadas! Repita este padrão **5** vezes para o artista conseguir atingir o topo dos arbustos.
      courseB_artist_loops5_2018: Hora de consertar as escadas! Repita este padrão **5** vezes para o artista conseguir atingir o topo dos arbustos.
      courseB_artist_loops5_2019: Hora de consertar as escadas! Repita este padrão **5** vezes para o artista conseguir atingir o topo dos arbustos.
      courseB_artist_loops6: Escale a videira e veja onde ela vai?
      courseB_artist_loops6_2018: Escale a videira e veja onde ela vai?
      courseB_artist_loops6_2019: Escale a videira e veja onde ela vai?
      courseB_artist_loops8: Hora de voltar para casa. Você pode consertar esta escada usando apenas um bloco para ajudar a artista a descer?
      courseB_artist_loops8_2018: Hora de voltar para casa. Você pode consertar esta escada usando apenas um bloco para ajudar a artista a descer?
      courseB_artist_loops8_2019: Hora de voltar para casa. Você pode consertar esta escada usando apenas um bloco para ajudar a artista a descer?
      courseB_artist_loops_challenge1: '"É hora de jogar os dados! Você consegue me ajudar a desenhar estes?"'
      courseB_artist_loops_challenge1_2018: '"É hora de jogar os dados! Você consegue me ajudar a desenhar estes?"'
      courseB_artist_loops_challenge1_2019: '"É hora de jogar os dados! Você consegue me ajudar a desenhar estes?"'
      courseB_collector_loops1: Esta é a Laurel a aventureira!  Você consegue movê-la por aí e pegar o tesouro?
      courseB_collector_loops10: Ajude Laurel a pegar todos os tesouros dessa caverna.
      courseB_collector_loops10_2018: Ajude Laurel a pegar todos os tesouros dessa caverna.
      courseB_collector_loops10_2019: Ajude Laurel a pegar todos os tesouros dessa caverna.
      courseB_collector_loops11: Eureka! Pegue quanto tesouro você puder!
      courseB_collector_loops11_2018: Eureka! Pegue quanto tesouro você puder!
      courseB_collector_loops11_2019: Eureka! Pegue quanto tesouro você puder!
      courseB_collector_loops1_2018: Pegue pelo menos uma peça do tesouro sem cometer erros para passar!
      courseB_collector_loops1_2019: Pegue pelo menos uma peça do tesouro sem cometer erros para passar!
      courseB_collector_loops2: Pegue todas as quatro pilhas para passar esse nível.
      courseB_collector_loops2_2018: Pegue todas as quatro pilhas para passar esse nível.
      courseB_collector_loops2_2019: Pegue todas as quatro pilhas para passar esse nível.
      courseB_collector_loops3: Como Laurel pode pegar todas as cinco pilhas de tesouro usando apenas um bloco `E -->`?
      courseB_collector_loops3_2018: Como Laurel pode pegar todas as cinco pilhas de tesouro usando apenas um bloco `E -->`?
      courseB_collector_loops3_2019: Como Laurel pode pegar todas as cinco pilhas de tesouro usando apenas um bloco `E -->`?
      courseB_collector_loops4: Corrija o caminho de Laurel para pegar todos estes tesouros!
      courseB_collector_loops4_2018: Corrija o caminho de Laurel para pegar todos estes tesouros!
      courseB_collector_loops4_2019: Corrija o caminho de Laurel para pegar todos estes tesouros!
      courseB_collector_loops5: 'Incremente o código do último desafio para pegar todo o tesouro. '
      courseB_collector_loops5_2018: 'Incremente o código do último desafio para pegar todo o tesouro. '
      courseB_collector_loops5_2019: 'Incremente o código do último desafio para pegar todo o tesouro. '
      courseB_collector_loops6: Descubra uma maneira de codificar para ajudar Laurel a pegar todo o tesouro!
      courseB_collector_loops6_2018: Descubra uma maneira de codificar para ajudar Laurel a pegar todo o tesouro!
      courseB_collector_loops6_2019: Descubra uma maneira de codificar para ajudar Laurel a pegar todo o tesouro!
      courseB_collector_loops7: Escreva o código para pegar todo este tesouro.
      courseB_collector_loops7_2018: Escreva o código para pegar todo este tesouro.
      courseB_collector_loops7_2019: Escreva o código para pegar todo este tesouro.
      courseB_collector_loops8: "**Desafio:** O tesouro vai até o final das escadas!  Escreva o código para ajudar a Laurel a pegar tudo."
      courseB_collector_loops8_2018: "**Desafio:** O tesouro vai até o final das escadas!  Escreva o código para ajudar a Laurel a pegar tudo."
      courseB_collector_loops8_2019: "**Desafio:** O tesouro vai até o final das escadas!  Escreva o código para ajudar a Laurel a pegar tudo."
      courseB_collector_loops9: '*"Me ajude a pegar o tesouro deste vale profundo."*'
      courseB_collector_loops9_2018: '*"Me ajude a pegar o tesouro deste vale profundo."*'
      courseB_collector_loops9_2019: '*"Me ajude a pegar o tesouro deste vale profundo."*'
      courseB_collector_loops_challenge1: 'Desta vez você tem blocos limitados. Pegue todos os tesouros! '
      courseB_collector_loops_challenge1_2018: 'Desta vez você tem blocos limitados. Pegue todos os tesouros! '
      courseB_collector_loops_challenge1_2019: 'Desta vez você tem blocos limitados. Pegue todos os tesouros! '
      courseB_collector_loops_challenge2: Vamos pegar o tesouro! Ajuda-me em cada linha, em seguida, voltar para iniciar a próxima linha. Você consegue achar um padrão?
      courseB_collector_loops_challenge2_2018: Vamos pegar o tesouro! Ajuda-me em cada linha, em seguida, voltar para iniciar a próxima linha. Você consegue achar um padrão?
      courseB_collector_loops_challenge2a: Ajude Laurel a pegar pelo menos **5** peças do tesouro para finalizar este enigma.
      courseB_collector_loops_challenge2a_2018: Ajude Laurel a pegar pelo menos **5** peças do tesouro para finalizar este enigma.
      courseB_collector_loops_challenge2a_2019: Ajude Laurel a pegar pelo menos **5** peças do tesouro para finalizar este enigma.
      courseB_collector_loops_challenge`: 'Desta vez você só pode usar um bloco de cada seta. Pegue todo o tesouro! '
      courseB_collector_prog2: Quatro pilhas de ouro! Colete todas elas.
      courseB_iceage_loops1: Ajude Scrat a atravessar o gelo e chegar na noz!
      courseB_iceage_loops10: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops10_2019: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops11: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops11_2019: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops11_forVideo: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops12: Pegue a noz da maneira que você conseguir!
      courseB_iceage_loops12_2019: Pegue a noz da maneira que você conseguir!
      courseB_iceage_loops1_2019: Ajude Scrat a atravessar o gelo e chegar na noz!
      courseB_iceage_loops2: Uso dois blocos de movimento diferentes para chegar até a noz!
      courseB_iceage_loops2_2019: Uso dois blocos de movimento diferentes para chegar até a noz!
      courseB_iceage_loops3: Você consegue pegar a noz com apenas um bloco `W`?
      courseB_iceage_loops3_2019: Você consegue pegar a noz com apenas um bloco `W`?
      courseB_iceage_loops4: Adicione mais um bloco para levar Scrat até a noz!
      courseB_iceage_loops4_2019: Adicione mais um bloco para levar Scrat até a noz!
      courseB_iceage_loops5: Você consegue adicionar mais um laço para chegar até a noz?
      courseB_iceage_loops6: Você consegue adicionar um laço para chegar até a noz?
      courseB_iceage_loops6_2019: Você consegue adicionar um laço para chegar até a noz?
      courseB_iceage_loops7: 'Scrat realmente quer aquela noz! '
      courseB_iceage_loops7_2019: 'Scrat realmente quer aquela noz! '
      courseB_iceage_loops8: 'Você consegue corrigir este código? '
      courseB_iceage_loops8_2019: 'Você consegue corrigir este código? '
      courseB_iceage_loops9: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseB_iceage_loops9_2019: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseB_maze_seq1: "Brinque com estes blocos para ver o que eles fazem o pássaro fazer! \n\nLeve o pássaro até o porco para completar este nível."
      courseB_maze_seq10: Corrija os erros para levar o pássaro até o porco.
      courseB_maze_seq10_2018: Corrija os erros para levar Scrat até a noz.
      courseB_maze_seq10_2019: Corrija os erros para levar Scrat até a noz.
      courseB_maze_seq11: É com você! Leve o pássaro até o porco.
      courseB_maze_seq11_2018: É com você!  Leve o Scrat até a noz.
      courseB_maze_seq11_2019: É com você!  Leve o Scrat até a noz.
      courseB_maze_seq12: Agora, pegue o porco da maneira que você conseguir!
      courseB_maze_seq12_2018: Agora, pegue a noz da maneira que você conseguir!
      courseB_maze_seq12_2019: Agora, pegue a noz da maneira que você conseguir!
      courseB_maze_seq1_2018: "Brinque com estes blocos para ver o que eles fazem Scrat fazer! \n\nLeve Scrat até a noz para completar este nível."
      courseB_maze_seq1_2019: "Brinque com estes blocos para ver o que eles fazem Scrat fazer! \n\nLeve Scrat até a noz para completar este nível."
      courseB_maze_seq2: '*Um erro! "Conserte o código para me levar até o porco!"*'
      courseB_maze_seq2_2018: Um erro! Conserte o código para levar Scrat até a noz!
      courseB_maze_seq3: '"Conserte o código para me levar até o porco!"'
      courseB_maze_seq4: Adicione 2 blocos para levar o pássaro até o porco.
      courseB_maze_seq4_2018: Use **2** blocos de movimento para levar Scrat até a noz.
      courseB_maze_seq4_2019: Use **2** blocos de movimento para levar Scrat até a noz.
      courseB_maze_seq5: Agora tente este quebra-cabeça do início!
      courseB_maze_seq5_2018: Este enigma é um pouco complicado!
      courseB_maze_seq5_2019: Este enigma é um pouco complicado!
      courseB_maze_seq6: Mova-me por um caminho, e então por outro para levar o pássaro até o porco!
      courseB_maze_seq6_2018: Mova-me por um caminho, e então por outro para levar Scrat até a noz!
      courseB_maze_seq6_2019: Mova-me por um caminho, e então por outro para levar Scrat até a noz!
      courseB_maze_seq7: Descubra o que está faltando e então adicione blocos para levar o pássaro até o porco!
      courseB_maze_seq7_2018: Descubra o que está faltando e então adicione blocos para levar Scrat até a noz!
      courseB_maze_seq7_2019: Descubra o que está faltando e então adicione blocos para levar Scrat até a noz!
      courseB_maze_seq8_2018: Sua vez! O que você precisa fazer para levar Scrat até a noz?
      courseB_maze_seq8_2019: Sua vez! O que você precisa fazer para levar Scrat até a noz?
      courseB_maze_seq9: 'Desafio: Dê a volta na TNT para levar o pássaro até o porco.'
      courseB_maze_seq9_2018: 'Desafio: Mova-se ao redor do gelo quebrado para levar Scrat até a noz.'
      courseB_maze_seq9_2019: 'Desafio: Mova-se ao redor do gelo quebrado para levar Scrat até a noz.'
      courseB_maze_seqCold: 'Desafio: Analise este nível adicionando blocos para levar o pássaro até o porco!'
      courseB_maze_seqOld: 'Dê a volta na TNT para levar o pássaro até o porco! '
      courseB_maze_seq_challenge1: Você consegue achar um caminho antes de ficar sem blocos?
      courseB_maze_seq_challenge1_2018: Você consegue achar um caminho antes de ficar sem blocos?
      courseB_maze_seq_challenge1_2019: Você consegue achar um caminho antes de ficar sem blocos?
      courseB_maze_seq_challenge2: Analise este nível. Estes são os blocos corretos, mas eles estão colocados na ordem errada!
      courseB_maze_seq_challenge2_2018: Analise este nível. Estes são os blocos corretos, mas eles estão colocados na ordem errada!
      courseB_maze_seq_challenge2_2019: Analise este nível. Estes são os blocos corretos, mas eles estão colocados na ordem errada!
      courseB_playLab_events1: Veja se você pode descobrir o que cada bloco faz.
      courseB_playLab_events1_2018: Veja se você pode descobrir o que cada bloco faz.
      courseB_playLab_events1_2019: Veja se você pode descobrir o que cada bloco faz.
      courseB_playlab_events2: Ajude Daisy o Dragão a dizer alguma coisa quando você clicar em "Executar".
      courseB_playlab_events2_2018: Ajude Daisy o Dragão a dizer alguma coisa quando você clicar em "Executar".
      courseB_playlab_events2_2019: Ajude Daisy o Dragão a dizer alguma coisa quando você clicar em "Executar".
      courseB_playlab_events3: Use um evento para fazer Daisy o Dragão mudar para um humor aleatório quando você clicar nela.
      courseB_playlab_events3_2018: Use um evento para fazer Daisy o Dragão mudar para um humor aleatório quando você clicar nela.
      courseB_playlab_events3_2019: Use um evento para fazer Daisy o Dragão mudar para um humor aleatório quando você clicar nela.
      courseB_playlab_events4: Hora do Cavaleiro! Adicione um evento para que o cavaleiro se mova em direção ao dragão quando a seta esquerda for clicada.
      courseB_playlab_events4_2018: Pegue o dragão para finalizar este nível!
      courseB_playlab_events4_2019: Pegue o dragão para finalizar este nível!
      courseB_playlab_events5: Agora adicione um evento para que o cavaleiro fuja do dragão quando você pressionar a seta para a direita.
      courseB_playlab_events5_2018: Adicione um evento para que o cavaleiro fuja do dragão quando você pressionar a seta para a direita.
      courseB_playlab_events5_2019: Adicione um evento para que o cavaleiro fuja do dragão quando você pressionar a seta para a direita.
      courseB_playlab_events6: |-
        Ajude o seu cavaleiro a pegar todas as bandeiras!

        Para fazer isso, você precisará adicionar eventos que ajudem o cavaleiro a mover-se para cima, para baixo, para esquerda e para a direita.
      courseB_playlab_events6_2018: |-
        Ajude o seu cavaleiro a pegar todas as bandeiras!

        Para fazer isso, você precisará adicionar eventos que ajudem o cavaleiro a mover-se para cima, para baixo, para esquerda e para a direita.
      courseB_playlab_events6_2019: |-
        Ajude o seu cavaleiro a pegar todas as bandeiras!

        Para fazer isso, você precisará adicionar eventos que ajudem o cavaleiro a mover-se para cima, para baixo, para esquerda e para a direita.
      courseB_playlab_events7: Torne deste jogo mais divertido, fazendo com que o cavaleiro desapareça quando ele correr até o dragão para pegar as bandeiras! Execute um som quando eles colidirem para parecer mais real.
      courseB_playlab_events7_2018: "1) Faça com que o cavaleiro desapareça quando ele corre até o dragão.\n2) Execute um som quando eles colidirem para que pareça mais real.  "
      courseB_playlab_events7_2019: "1) Faça com que o cavaleiro desapareça quando ele corre até o dragão.\n2) Execute um som quando eles colidirem para que pareça mais real.  "
      courseB_playlab_eventsFP_2018: "**Jogo Livre:** Use sua imaginação. O que você pode fazer para deixar este jogo mais divertido?"
      courseB_playlab_eventsFP_2019: "**Jogo Livre:** Use sua imaginação. O que você pode fazer para deixar este jogo mais divertido?"
      courseB_playlab_eventsToolbox: Termine executando um som e fazendo com que o cavaleiro desapareça quando ele correr para o dragão!
      courseB_playlab_events_challenge1: 'Faça os animais se moverem para baixo quando você pressionar ▼. '
      courseB_playlab_events_challenge1_2018: 'Faça os animais se moverem para baixo quando você pressionar ▼. '
      courseB_playlab_events_challenge1_2019: 'Faça os animais se moverem para baixo quando você pressionar ▼. '
      courseB_playlab_events_challenge2: Faça todos os animais desaparecerem quando você clicar neles.
      courseB_playlab_events_challenge2_2018: Faça todos os animais desaparecerem quando você clicar neles.
      courseB_playlab_events_challenge2_2019: Faça todos os animais desaparecerem quando você clicar neles.
      courseB_playlab_events_challenge2_embed: Aqui está seu jogo finalizado!
      courseB_playlab_events_challenge2_template: Vamos fazer os animais desaparecerem quando você clicar neles! Você também pode adicionar sons e marcar pontos para criar um divertido jogo de marcação de animais!
      courseB_playlab_events_challenge2_template_2018: Vamos fazer os animais desaparecerem quando você clicar neles! Você também pode adicionar sons e marcar pontos para criar um divertido jogo de marcação de animais!
      courseB_playlab_events_challenge2_template_2019: Vamos fazer os animais desaparecerem quando você clicar neles! Você também pode adicionar sons e marcar pontos para criar um divertido jogo de marcação de animais!
      courseB_scrat_forVideo: Pegue a noz!
      courseB_starWars_prog1: '"Pegue o pedaço de metal, BB-8!"'
      courseB_starWars_prog10: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog10_2018: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog10_2019: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog11: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog11_2018: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog11_2019: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog1_2018: '"Pegue o pedaço de metal, BB-8!"'
      courseB_starWars_prog1_2019: '"Pegue o pedaço de metal, BB-8!"'
      courseB_starWars_prog2: Pegue todo o metal.
      courseB_starWars_prog2_2018: Pegue todo o metal.
      courseB_starWars_prog2_2019: Pegue todo o metal.
      courseB_starWars_prog3: Pegue todos os pedaços de metal
      courseB_starWars_prog3_2018: Pegue todos os pedaços de metal
      courseB_starWars_prog3_2019: Pegue todos os pedaços de metal
      courseB_starWars_prog4: Pegue todos os pedaços de metal
      courseB_starWars_prog4_2018: Pegue todos os pedaços de metal
      courseB_starWars_prog4_2019: Pegue todos os pedaços de metal
      courseB_starWars_prog5: Pegue o pedaço de metal
      courseB_starWars_prog5_2018: Pegue o pedaço de metal
      courseB_starWars_prog5_2019: Pegue o pedaço de metal
      courseB_starWars_prog6: Pegue todos os pedaços de metal
      courseB_starWars_prog6_2018: Pegue todos os pedaços de metal
      courseB_starWars_prog6_2019: Pegue todos os pedaços de metal
      courseB_starWars_prog7: Vai pegar!
      courseB_starWars_prog7_2018: Vai pegar!
      courseB_starWars_prog7_2019: Vai pegar!
      courseB_starWars_prog8: "**Desafio:** Ajude BB-8 a recolher os pedaços de metais brilhantes"
      courseB_starWars_prog8_2018: "**Desafio:** Ajude BB-8 a recolher os pedaços de metais brilhantes"
      courseB_starWars_prog8_2019: "**Desafio:** Ajude BB-8 a recolher os pedaços de metais brilhantes"
      courseB_starWars_prog9: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog9_2018: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseB_starWars_prog9_2019: Ajude BB-8 a recolher os pedaços de metais brilhantes
      courseC_PlayLab_events1: Faça Jorge o Cachorro (ator 1) dizer "Olá."
      courseC_PlayLab_events1_2018: Faça Jorge o Cachorro (ator 1) dizer "Olá."
      courseC_PlayLab_events1_2019: Faça Jorge o Cachorro (ator 1) dizer "Olá."
      courseC_PlayLab_events2: "Você pode fazer o cachorro Jorge (personagem 1) dizer alguma coisa, e\ndepois, fazer a gata Olívia (personagem 2) dizer alguma coisa?"
      courseC_PlayLab_events2_2018: "Você pode fazer o cachorro Jorge (personagem 1) dizer alguma coisa, e\ndepois, fazer a gata Olívia (personagem 2) dizer alguma coisa?"
      courseC_PlayLab_events2_2019: "Você pode fazer o cachorro Jorge (personagem 1) dizer alguma coisa, e\ndepois, fazer a gata Olívia (personagem 2) dizer alguma coisa?"
      courseC_PlayLab_events3: "Você consegue escrever um programa para fazer Jorge\n(personagem 1) se mover em direção à gata Olívia?"
      courseC_PlayLab_events3_2018: "Você consegue escrever um programa para fazer Jorge\n(personagem 1) se mover em direção à gata Olívia?"
      courseC_PlayLab_events3_2019: "Você consegue escrever um programa para fazer Jorge\n(personagem 1) se mover em direção à gata Olívia?"
      courseC_PlayLab_events4: "Você consegue escrever um programa que faça \nJorge (personagem 1) se mover até Olívia, a gata, e fazer Olívia dizer \"Olá\" quando Jorge\na alcançar?"
      courseC_PlayLab_events4_2018: "Você consegue escrever um programa que faça \nJorge (personagem 1) se mover até Olívia, a gata, e fazer Olívia dizer \"Olá\" quando Jorge\na alcançar?"
      courseC_PlayLab_events4_2019: "Você consegue escrever um programa que faça \nJorge (personagem 1) se mover até Olívia, a gata, e fazer Olívia dizer \"Olá\" quando Jorge\na alcançar?"
      courseC_PlayLab_events5: Você pode escrever um programa para fazer Octavia o polvo, dizer "olá" quando clicarem nela?
      courseC_PlayLab_events5_2018: Você pode escrever um programa para fazer Octavia o polvo, dizer "olá" quando clicarem nela?
      courseC_PlayLab_events5_2019: Você pode escrever um programa para fazer Octavia o polvo, dizer "olá" quando clicarem nela?
      courseC_PlayLab_events6: Agora escreva um programa que faça Valfredo o Penguin se mover usando as teclas com as setas para cima / para baixo / à esquerda / à direita, para atingir todos os alvos!
      courseC_PlayLab_events6_2018: Agora escreva um programa que faça Valfredo o Penguin se mover usando as teclas com as setas para cima / para baixo / à esquerda / à direita, para atingir todos os alvos!
      courseC_PlayLab_events6_2019: Agora escreva um programa que faça Valfredo o Penguin se mover usando as teclas com as setas para cima / para baixo / à esquerda / à direita, para atingir todos os alvos!
      courseC_PlayLab_events7: O bloco `repetir para sempre` permite você executar um código várias vezes para sempre. Use este bloco para mover Chomp o dinossauro (personagem  2) 400 pixels para cima e para baixo, para sempre.
      courseC_PlayLab_events7_2018: O bloco `repetir para sempre` permite você executar um código várias vezes para sempre. Use este bloco para mover Chomp o dinossauro (personagem  2) 400 pixels para cima e para baixo, para sempre.
      courseC_PlayLab_events7_2019: O bloco `repetir para sempre` permite você executar um código várias vezes para sempre. Use este bloco para mover Chomp o dinossauro (personagem  2) 400 pixels para cima e para baixo, para sempre.
      courseC_PlayLab_eventsFP: Crie sua própria estória. Quando terminar, clique em "Concluir" para compartilhar com seus amigos. Veja ideias para estórias nas dicas.
      courseC_PlayLab_eventsFP_2018: Crie sua própria estória. Quando terminar, clique em "Concluir" para compartilhar com seus amigos. Veja ideias para estórias nas dicas.
      courseC_PlayLab_eventsFP_2019: Crie sua própria estória. Quando terminar, clique em "Concluir" para compartilhar com seus amigos. Veja ideias para estórias nas dicas.
      courseC_artist_loops3a: Agora adicione um morcego!
      courseC_artist_loops3a_2018: Agora adicione um morcego!
      courseC_artist_loops3a_2019: Agora adicione um morcego!
      courseC_artist_loops5a: Experimente novos adesivos!
      courseC_artist_loops5a_2018: Experimente novos adesivos!
      courseC_artist_loops5a_2019: Experimente novos adesivos!
      courseC_artist_loops5b: Tente adicionar linhas!
      courseC_artist_loops5b_2018: Tente adicionar linhas!
      courseC_artist_loops5b_2019: Tente adicionar linhas!
      courseC_artist_loops8a: Agora tente algo você mesmo!
      courseC_artist_loops8a_2018: Agora tente algo você mesmo!
      courseC_artist_loops8a_2019: Agora tente algo você mesmo!
      courseC_artist_prog1: Brinque com os blocos da caixa de ferramentas para saber o que eles fazem!
      courseC_artist_prog1_2018: Brinque com os blocos da caixa de ferramentas para saber o que eles fazem!
      courseC_artist_prog1_2019: Brinque com os blocos da caixa de ferramentas para saber o que eles fazem!
      courseC_artist_prog5: |-
        Essa casa precisa de um telhado! Desenhe o triângulo. Dica: todos os 3 lados têm o mesmo comprimento.
      courseC_artist_prog5_2018: |-
        Essa casa precisa de um telhado! Desenhe o triângulo. Dica: todos os 3 lados têm o mesmo comprimento.
      courseC_artist_prog5_2019: |-
        Essa casa precisa de um telhado! Desenhe o triângulo. Dica: todos os 3 lados têm o mesmo comprimento.
      courseC_artist_prog6: Desenhe este diamante com lados de 200 pixels.
      courseC_artist_prog6_2018: Desenhe este diamante com lados de 200 pixels.
      courseC_artist_prog6_2019: Desenhe este diamante com lados de 200 pixels.
      courseC_artist_prog_challenge1: 'Desenhe quartos para cada um dos animais. '
      courseC_artist_prog_challenge1_2018: 'Desenhe quartos para cada um dos animais. '
      courseC_artist_prog_challenge1_2019: 'Desenhe quartos para cada um dos animais. '
      courseC_artist_prog_challenge2a: '*"Ajuda-me a pintar as linhas amarelas nesta estrada!"*'
      courseC_artist_prog_challenge2a_2018: '*"Ajuda-me a pintar as linhas amarelas nesta estrada!"*'
      courseC_artist_prog_challenge2a_2019: '*"Ajuda-me a pintar as linhas amarelas nesta estrada!"*'
      courseC_collector_loops_challenge2: Pegue pelo menos **5** peças do tesouro!
      courseC_collector_loops_challenge2_2018: Pegue pelo menos **5** peças do tesouro!
      courseC_collector_loops_challenge2_2019: Pegue pelo menos **5** peças do tesouro!
      courseC_collector_prog1: Brinque com os blocos para ver se você pode ajudar Laurel a coletar algum tesouro.
      courseC_collector_prog1_2018: Brinque com os blocos para ver se você pode ajudar Laurel a coletar algum tesouro.
      courseC_collector_prog1_2019: Brinque com os blocos para ver se você pode ajudar Laurel a coletar algum tesouro.
      courseC_collector_prog2: Mova Laurel até o tesouro, então use `coletar` para pegar.
      courseC_collector_prog2_2018: Mova Laurel até o tesouro, então use `coletar` para pegar.
      courseC_collector_prog2_2019: Mova Laurel até o tesouro, então use `coletar` para pegar.
      courseC_collector_prog3: Ordene estes blocos para coletar o tesouro e resolver o desafio.
      courseC_collector_prog3_2018: Ordene estes blocos para coletar o tesouro e resolver o desafio.
      courseC_collector_prog3_2019: Ordene estes blocos para coletar o tesouro e resolver o desafio.
      courseC_collector_prog4: Ponha estes blocos em ordem para coletar todo o tesouro e resolver o desafio.
      courseC_collector_prog4_2018: Ponha estes blocos em ordem para coletar todo o tesouro e resolver o desafio.
      courseC_collector_prog4_2019: Ponha estes blocos em ordem para coletar todo o tesouro e resolver o desafio.
      courseC_collector_prog5: Estes blocos estão na ordem errada. Você pode consertá-los?
      courseC_collector_prog5_2018: Estes blocos estão na ordem errada. Você pode consertá-los?
      courseC_collector_prog5_2019: Estes blocos estão na ordem errada. Você pode consertá-los?
      courseC_collector_prog6: Reordene os blocos para coletar todo o tesouro.
      courseC_collector_prog6_2018: Reordene os blocos para coletar todo o tesouro.
      courseC_collector_prog6_2019: Reordene os blocos para coletar todo o tesouro.
      courseC_collector_prog7: Use blocos da caixa de ferramenta para coletar todo o tesouro.
      courseC_collector_prog7_2018: Use blocos da caixa de ferramenta para coletar todo o tesouro.
      courseC_collector_prog7_2019: Use blocos da caixa de ferramenta para coletar todo o tesouro.
      courseC_collector_prog9: '*"Vamos pegar todo o tesouro!"*'
      courseC_collector_prog9_2018: '*"Vamos pegar todo o tesouro!"*'
      courseC_collector_prog9_2019: '*"Vamos pegar todo o tesouro!"*'
      courseC_collector_progA: Ajude Laurel a coletar todo o tesouro.
      courseC_collector_progB: Colete quantas moedas você conseguir para terminar esta fase!
      courseC_collector_prog_challenge1: Preste atenção! Você consegue coletar todas as **10** peças do tesouro?
      courseC_collector_prog_challenge1_2018: Preste atenção! Você consegue coletar todas as **10** peças do tesouro?
      courseC_collector_prog_challenge1_2019: Preste atenção! Você consegue coletar todas as **10** peças do tesouro?
      courseC_collector_prog_challenge2: Colete pelo menos **10** peças do tesouro para finalizar este desafio!
      courseC_collector_prog_challenge2_2018: Colete pelo menos **10** peças do tesouro para finalizar este desafio!
      courseC_collector_prog_challenge2_2019: Colete pelo menos **10** peças do tesouro para finalizar este desafio!
      courseC_flappy_embed_events: Aquie está um exemplo de um jogo que você está prestes a criar! Jogue-o uma ou duas vezes para ter uma ideia do que você está prestes a fazer.
      courseC_flappy_events1: Anexe o bloco `quantidade normal de bater de asas` ao evento `quando clicar`, depois pressione "Executar".    Clique ou toque no espaço de jogo para mover o Flappy para o alvo.
      courseC_flappy_events10: 'Crie seu próprio jogo Flappy Bird! '
      courseC_flappy_events10_2018: 'Crie seu próprio jogo Flappy Bird! '
      courseC_flappy_events10_2019: 'Crie seu próprio jogo Flappy Bird! '
      courseC_flappy_events1_2018: Anexe o bloco `quantidade normal de bater de asas` ao evento `quando clicar`, depois pressione "Executar".    Clique ou toque no espaço de jogo para mover o Flappy para o alvo.
      courseC_flappy_events1_2019: Anexe o bloco `quantidade normal de bater de asas` ao evento `quando clicar`, depois pressione "Executar".    Clique ou toque no espaço de jogo para mover o Flappy para o alvo.
      courseC_flappy_events2: Tente adicionar um bloco que defina o nível da velocidade quando o botão "Executar" for pressionado. Jogue o jogo e bata as asas até o alvo para continuar.
      courseC_flappy_events2_2018: Tente adicionar um bloco que defina o nível da velocidade quando o botão "Executar" for pressionado. Jogue o jogo e bata as asas até o alvo para continuar.
      courseC_flappy_events2_2019: Tente adicionar um bloco que defina o nível da velocidade quando o botão "Executar" for pressionado. Jogue o jogo e bata as asas até o alvo para continuar.
      courseC_flappy_events5: Adicione um bloco ao evento `quando passar um obstáculo`, então pressione "Executar" para marcar um ponto ao fazer Flappy voar através do primeiro conjunto de tubos.
      courseC_flappy_events5_2018: Adicione um bloco ao evento `quando passar um obstáculo`, então pressione "Executar" para marcar um ponto ao fazer Flappy voar através do primeiro conjunto de tubos.
      courseC_flappy_events5_2019: Adicione um bloco ao evento `quando passar um obstáculo`, então pressione "Executar" para marcar um ponto ao fazer Flappy voar através do primeiro conjunto de tubos.
      courseC_flappy_events6: Veja se você ainda pode marcar um ponto depois de fazer o passarinho bater as asas cada vez que você clica.
      courseC_flappy_events6_2018: Veja se você ainda pode marcar um ponto depois de fazer o passarinho bater as asas cada vez que você clica.
      courseC_flappy_events6_2019: Veja se você ainda pode marcar um ponto depois de fazer o passarinho bater as asas cada vez que você clica.
      courseC_flappy_events8: Tente definir uma cena **aleatória** quando outros eventos acontecerem...por exemplo, ao passar um obstáculo.
      courseC_flappy_events8_2018: Tente definir uma cena **aleatória** quando outros eventos acontecerem...por exemplo, ao passar um obstáculo.
      courseC_flappy_events8_2019: Tente definir uma cena **aleatória** quando outros eventos acontecerem...por exemplo, ao passar um obstáculo.
      courseC_harvester_loops1: Use laços para pegar todas as abóboras.
      courseC_harvester_loops10: Colete todo os milhos e as abóboras.
      courseC_harvester_loops10_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops10_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops11: Colete todo os milhos e as abóboras.
      courseC_harvester_loops11_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops11_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops1_2018: Use laços para pegar todas as abóboras.
      courseC_harvester_loops1_2019: Use laços para pegar todas as abóboras.
      courseC_harvester_loops3: Colete todas as abóboras.
      courseC_harvester_loops3_2018: Colete todas as abóboras.
      courseC_harvester_loops3_2019: Colete todas as abóboras.
      courseC_harvester_loops4: Colete todo os milhos e as abóboras.
      courseC_harvester_loops4_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops4_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops5: Colete todo os milhos e as abóboras.
      courseC_harvester_loops5_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops5_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops6: Colete todo os milhos e as abóboras.
      courseC_harvester_loops6_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops6_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops7: Colete todo os milhos e as abóboras.
      courseC_harvester_loops7_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops7_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops8: "**Desafio:** coletar todo o milho e as abóboras."
      courseC_harvester_loops8_2018: "**Desafio:** coletar todo o milho e as abóboras."
      courseC_harvester_loops8_2019: "**Desafio:** coletar todo o milho e as abóboras."
      courseC_harvester_loops9: Colete todo os milhos e as abóboras.
      courseC_harvester_loops9_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops9_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops_forVid: Recolha todo o milho, a alface e todos as abóboras.
      courseC_maze_debugging1: Corrija o código para levar Scrat até a noz.
      courseC_maze_debugging10: "Depure esse nível reorganizando e trocando blocos\npara me levar até o porco!"
      courseC_maze_debugging1_2018: Corrija o código para levar Scrat até a noz.
      courseC_maze_debugging1_2019: Corrija o código para levar Scrat até a noz.
      courseC_maze_debugging3: Remova os blocos para levar Scrat até a noz!
      courseC_maze_debugging3_2018: Remova os blocos para levar Scrat até a noz!
      courseC_maze_debugging3_2019: Remova os blocos para levar Scrat até a noz!
      courseC_maze_debugging4: Alguém tem suas instruções misturadas! Você pode ajudar?
      courseC_maze_debugging4_2018: Alguém tem suas instruções misturadas! Você pode ajudar?
      courseC_maze_debugging4_2019: Alguém tem suas instruções misturadas! Você pode ajudar?
      courseC_maze_debugging5: Depure este nível reorganizando e alterando os blocos.
      courseC_maze_debugging5_2018: Depure este nível reorganizando e alterando os blocos.
      courseC_maze_debugging5_2019: Depure este nível reorganizando e alterando os blocos.
      courseC_maze_debugging6: Descubra o que está errado e leve Scrat até a bolota.
      courseC_maze_debugging6_2018: Descubra o que está errado e leve Scrat até a bolota.
      courseC_maze_debugging6_2019: Descubra o que está errado e leve Scrat até a bolota.
      courseC_maze_debugging7: "**Desafio:** Depure este nível reorganizando, adicionando e excluindo blocos."
      courseC_maze_debugging7_2018: "**Desafio:** Depure este nível reorganizando, adicionando e excluindo blocos."
      courseC_maze_debugging7_2019: "**Desafio:** Depure este nível reorganizando, adicionando e excluindo blocos."
      courseC_maze_debugging8: Depure este nível para levar Scrat até a bolota.
      courseC_maze_debugging9: Depure este nível para levar Scrat até a bolota.
      courseC_maze_debugging9_2018: Depure este nível para levar Scrat até a bolota.
      courseC_maze_debugging9_2019: Use os blocos na caixa de ferramentas para montar seu programa. Leve o pássaro até o porco.
      courseC_maze_debugging_challenge1: Ajude Scrat a decidir que lado ir para chegar até a noz.
      courseC_maze_debugging_challenge1_2018: Ajude Scrat a decidir que lado ir para chegar até a noz.
      courseC_maze_debugging_challenge1_2019: Ajude Scrat a decidir que lado ir para chegar até a noz.
      courseC_maze_debugging_challenge2: Ajude o Scrat a alcançar a bolota com apenas quatro comandos `virar`.
      courseC_maze_debugging_challenge2_2018: Ajude o Scrat a alcançar a bolota com apenas quatro comandos `virar`.
      courseC_maze_debugging_challenge2_2019: Ajude o Scrat a alcançar a bolota com apenas quatro comandos `virar`.
      courseC_maze_loops1: Você consegue levar o pássaro até o porco?
      courseC_maze_loops10: Você está indo bem! Continuem assim!
      courseC_maze_loops11: Você está quase lá! Desta vez, escolha o caminho que você preferir!
      courseC_maze_loops2: "Você consegue levar o pássaro até o porco criando um laço que usa\napenas um bloco \"mover para frente\" dentro de um bloco \"repita\"?"
      courseC_maze_loops3: Resolva esté desafio criando um laço!
      courseC_maze_loops6: Laços até funcionam com mais de um bloco dentro! Você pode repetir essa sequência?
      courseC_maze_loops7: Use o que você aprendeu em outros desafios!
      courseC_maze_loops8: 'Desafio: Combine ideias dos últimos desafios para completar este nível.'
      courseC_maze_loops9: Você está indo bem! Continuem assim!
      courseC_maze_loops_challenge1: 'Agora Scrat quer tentar usar as repetições para achar sua noz! '
      courseC_maze_loops_challenge1a: 'Agora Scrat quer tentar usar as repetições para achar sua noz! '
      courseC_maze_loops_challenge1a_2018: 'Agora Scrat quer tentar usar as repetições para achar sua noz! '
      courseC_maze_loops_challenge1a_2019: 'Agora Scrat quer tentar usar as repetições para achar sua noz! '
      courseC_maze_programming4: Evite a(s) TNT(s) ou penas irão voar!
      courseC_maze_programming4_2018: Evite a(s) TNT(s) ou penas irão voar!
      courseC_maze_programming4_2019: Evite a(s) TNT(s) ou penas irão voar!
      courseC_maze_programming5: Desvie da TNT.
      courseC_maze_programming5_2018: Desvie da TNT.
      courseC_maze_programming5_2019: Desvie da TNT.
      courseC_maze_programming6: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseC_maze_programming6_2018: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseC_maze_programming6_2019: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseC_maze_programming7: "**Desafio:** Este código tem um monte de bugs. Você precisará remover alguns blocos e acrescentar outros."
      courseC_maze_programming7_2018: "**Desafio:** Este código tem um monte de bugs. Você precisará remover alguns blocos e acrescentar outros."
      courseC_maze_programming7_2019: "**Desafio:** Este código tem um monte de bugs. Você precisará remover alguns blocos e acrescentar outros."
      courseC_maze_programming8: '*" Mantenha a calma e ajude-me a encontrar o porco mal."*'
      courseC_maze_programming8_2018: '*" Mantenha a calma e ajude-me a encontrar o porco mal."*'
      courseC_maze_programming8_2019: '*" Mantenha a calma e ajude-me a encontrar o porco mal."*'
      courseC_maze_programming8_predict1: '*" Mantenha a calma e ajude-me a encontrar o porco mal."*'
      courseC_maze_programming8_predict1_2018: '*" Mantenha a calma e ajude-me a encontrar o porco mal."*'
      courseC_maze_programming8_predict1_2019: '*" Mantenha a calma e ajude-me a encontrar o porco mal."*'
      courseC_maze_programming_challenge1: 'O porco está se escondendo, e o objetivo é encontrá-lo. '
      courseC_maze_programming_challenge1_2018: 'O porco está se escondendo, e o objetivo é encontrá-lo. '
      courseC_maze_programming_challenge1_2019: 'O porco está se escondendo, e o objetivo é encontrá-lo. '
      courseC_playLab_embedded: |-
        Aqui está um jogo para você jogar! Para ganhar, use as setas do teclado para fazer o pinguim correr para o polvo.

        Quando estiver pronto, você aprenderá a fazer este jogo!
      courseC_puppy_loops10: Você está indo bem! Continuem assim!
      courseC_puppy_loops11: Você está quase lá! Desta vez, escolha o caminho que você preferir!
      courseC_puppy_loops8: 'Desafio: Combine ideias dos últimos desafios para completar este nível.'
      courseC_puppy_loops8courseC_maze_loops8: 'Desafio: Combine ideias dos últimos desafios para completar este nível.'
      courseC_puppy_loops9: Você está indo bem! Continuem assim!
      courseC_starWars_loops1: O BB-8 vai pegar qualquer sucata de metal ao longo do caminho por onde ele se move. Use 5 do mesmo bloco para fazer o BB-8 pegar toda a sucata de metal na área de jogo.
      courseC_starWars_loops10: Você está indo bem! Continuem assim!
      courseC_starWars_loops10_2018: Você está indo bem! Continuem assim!
      courseC_starWars_loops10_2019: Você está indo bem! Continuem assim!
      courseC_starWars_loops10_predict2: Você está indo bem! Continuem assim!
      courseC_starWars_loops10_predict2_2018: Você está indo bem! Continuem assim!
      courseC_starWars_loops10_predict2_2019: Você está indo bem! Continuem assim!
      courseC_starWars_loops11: Você está quase lá! Desta vez, escolha o caminho que você preferir!
      courseC_starWars_loops11_2018: Você está quase lá! Desta vez, escolha o caminho que você preferir!
      courseC_starWars_loops11_2019: Você está quase lá! Desta vez, escolha o caminho que você preferir!
      courseC_starWars_loops1_2018: O BB-8 vai pegar qualquer sucata de metal ao longo do caminho por onde ele se move. Use 5 do mesmo bloco para fazer o BB-8 pegar toda a sucata de metal na área de jogo.
      courseC_starWars_loops1_2019: O BB-8 vai pegar qualquer sucata de metal ao longo do caminho por onde ele se move. Use 5 do mesmo bloco para fazer o BB-8 pegar toda a sucata de metal na área de jogo.
      courseC_starWars_loops1_predict1: O BB-8 vai pegar qualquer sucata de metal ao longo do caminho por onde ele se move. Use 5 do mesmo bloco para fazer o BB-8 pegar toda a sucata de metal na área de jogo.
      courseC_starWars_loops1_predict1_2018: O BB-8 vai pegar qualquer sucata de metal ao longo do caminho por onde ele se move. Use 5 do mesmo bloco para fazer o BB-8 pegar toda a sucata de metal na área de jogo.
      courseC_starWars_loops1_predict1_2019: O BB-8 vai pegar qualquer sucata de metal ao longo do caminho por onde ele se move. Use 5 do mesmo bloco para fazer o BB-8 pegar toda a sucata de metal na área de jogo.
      courseC_starWars_loops2: Para pegar todo os pedaços de metal, tente criar um laço que usa apenas um bloco dentro de um bloco `repita`.
      courseC_starWars_loops2_2018: Para pegar todo os pedaços de metal, tente criar um laço que usa apenas um bloco dentro de um bloco `repita`.
      courseC_starWars_loops2_2019: Para pegar todo os pedaços de metal, tente criar um laço que usa apenas um bloco dentro de um bloco `repita`.
      courseC_starWars_loops4: Neste quebra-cabeça, dois laços `repetir` irão ajudá-lo a levar o BB-8 a todas as sucatas de metal com o menor número de blocos!
      courseC_starWars_loops4_2018: Neste quebra-cabeça, dois laços `repetir` irão ajudá-lo a levar o BB-8 a todas as sucatas de metal com o menor número de blocos!
      courseC_starWars_loops4_2019: Neste quebra-cabeça, dois laços `repetir` irão ajudá-lo a levar o BB-8 a todas as sucatas de metal com o menor número de blocos!
      courseC_starWars_loops5: Faça o BB-8 pegar todos os pedaços de metal o mais rápido possível!
      courseC_starWars_loops5_2018: Faça o BB-8 pegar todos os pedaços de metal o mais rápido possível!
      courseC_starWars_loops5_2019: Faça o BB-8 pegar todos os pedaços de metal o mais rápido possível!
      courseC_starWars_loops6: Laços até funcionam com mais de um bloco dentro! Você pode repetir essa sequência?
      courseC_starWars_loops6_2018: Laços até funcionam com mais de um bloco dentro! Você pode repetir essa sequência?
      courseC_starWars_loops6_2019: Laços até funcionam com mais de um bloco dentro! Você pode repetir essa sequência?
      courseD_Frozen_nested5: Brinque com os flocos de neve!
      courseD_Frozen_nested6: Desenhe um modelo de degrau de escada que tenha voltas entre 75 e 105 graus.
      courseD_Frozen_nested7: Agora, vire 180 graus e desenhe o modelo da escada novamente!
      courseD_Frozen_nested8: Gire essa forma cerca de 5 ou 6 vezes em um círculo.
      courseD_Frozen_nested9: |-
        Tente brincar com o que você criou. Desenhe o que quiser!
        - O que acontece se você usar dois ângulos diferentes no seu modelo de degrau de escada?
        - O que acontece se você fazer o seu modelo de diamante mais longo ou mais curto?
        - Que aparência tem dois flocos de neve desenhados um em cima do outro?
      courseD_artist_5_2018: Brinque com os flocos de neve!
      courseD_artist_5_2018_2019: Brinque com os flocos de neve!
      courseD_artist_7_2018: Agora, vire 180 graus e desenhe o modelo da escada novamente!
      courseD_artist_8_2018: Gire essa forma cerca de 5 ou 6 vezes em um círculo.
      courseD_artist_9_2018: |-
        Tente brincar com o que você criou. Desenhe o que quiser!
        - O que acontece se você usar dois ângulos diferentes no seu modelo de degrau de escada?
        - O que acontece se você fazer o seu modelo de diamante mais longo ou mais curto?
        - Que aparência tem dois flocos de neve desenhados um em cima do outro?
      courseD_artist_binary1: "Binário é uma forma de representar informações\nusando apenas duas opções. Aqui, vamos usar as opções \"desligado\" (representada\npelo número 0) e \"ligado\" (representada pelo número 1).  \\r\n\\r\nFoi fornecida\numa grade de \"pixels\" pela qual você pode andar e criar\ndesigns virando em certos quadrados. Você consegue fazer o artista desenhar\n\"01010101\" em binário na primeira fileira?"
      courseD_artist_binary1_2018: "Binário é uma forma de representar informações\nusando apenas duas opções. Aqui, vamos usar as opções \"desligado\" (representada\npelo número 0) e \"ligado\" (representada pelo número 1).  \\r\n\\r\nFoi fornecida\numa grade de \"pixels\" pela qual você pode andar e criar\ndesigns virando em certos quadrados. Você consegue fazer o artista desenhar\n\"01010101\" em binário na primeira fileira?"
      courseD_artist_binary1_2019: "Binário é uma forma de representar informações\nusando apenas duas opções. Aqui, vamos usar as opções \"desligado\" (representada\npelo número 0) e \"ligado\" (representada pelo número 1).  \\r\n\\r\nFoi fornecida\numa grade de \"pixels\" pela qual você pode andar e criar\ndesigns virando em certos quadrados. Você consegue fazer o artista desenhar\n\"01010101\" em binário na primeira fileira?"
      courseD_artist_binary4: "Você consegue desenhar este padrão repetindo\napenas três dígitos binários? (0 e 1)?"
      courseD_artist_binary4_2018: "Você consegue desenhar este padrão repetindo\napenas três dígitos binários? (0 e 1)?"
      courseD_artist_binary4_2019: "Você consegue desenhar este padrão repetindo\napenas três dígitos binários? (0 e 1)?"
      courseD_artist_binary6: "Que string binária de 6 dígitos, repetida\n11 vezes, vai desenhar essa imagem?"
      courseD_artist_binary6_2018: "Que string binária de 6 dígitos, repetida\n11 vezes, vai desenhar essa imagem?"
      courseD_artist_binary6_2019: "Que string binária de 6 dígitos, repetida\n11 vezes, vai desenhar essa imagem?"
      courseD_artist_binary7: "Qual é a menor string binária que você\npode repetir para desenhar esta imagem?"
      courseD_artist_binary7_2018: "Qual é a menor string binária que você\npode repetir para desenhar esta imagem?"
      courseD_artist_binary7_2019: "Qual é a menor string binária que você\npode repetir para desenhar esta imagem?"
      courseD_artist_binary8: Termine o código para criar este desenho.
      courseD_artist_binary8_2018: Termine o código para criar este desenho.
      courseD_artist_binary8_2019: Termine o código para criar este desenho.
      courseD_artist_binary8_predict1: Termine o código para criar este desenho.
      courseD_artist_binary8_predict1_2018: Termine o código para criar este desenho.
      courseD_artist_binary8_predict1_2019: Termine o código para criar este desenho.
      courseD_artist_binaryFP: |-
        Temos aqui uma tela de maior resolução para desenhar - 16 pixels por 16 pixels!

        Veja o que acontece quando começamos ser criativos com os bits!
      courseD_artist_binaryFP8: "**Atividade livre**: desenhe o que você quiser com números binários! "
      courseD_artist_binaryFP_2018: |-
        Temos aqui uma tela de maior resolução para desenhar - 16 pixels por 16 pixels!

        Veja o que acontece quando começamos ser criativos com os bits!
      courseD_artist_binaryFP_2019: |-
        Temos aqui uma tela de maior resolução para desenhar - 16 pixels por 16 pixels!

        Veja o que acontece quando começamos ser criativos com os bits!
      courseD_artist_binary_challenge0: Tente usar laços aninhados para completar este desenho.
      courseD_artist_embed_frozen: Pressione Executar para ver o desenho de um floco de neve!
      courseD_artist_embed_frozen2: Pressione Executar para ver o desenho de um floco de neve.
      courseD_artist_functions4: Agora que você consegue desenhar uma estrela, tente desenhar quatro estrelas!
      courseD_artist_functions5: Desenhe apenas estas três estrelas para terminar este quebra-cabeça.
      courseD_artist_nestedLoopsPre1: Crie um triângulo para começar esta etapa.
      courseD_artist_nestedLoops_challenge1: Você consegue descobrir como fazer uma imagem como esta?
      courseD_artist_nestedLoops_challenge1_2018: Você consegue descobrir como fazer uma imagem como esta?
      courseD_artist_nestedLoops_challenge1_2019: Você consegue descobrir como fazer uma imagem como esta?
      courseD_artist_nestedLoops_challenge2: Conserte o código para fazer esta pintura!
      courseD_artist_nestedLoops_challenge2_2018: Conserte o código para fazer esta pintura!
      courseD_artist_nestedLoops_challenge2_2019: Conserte o código para fazer esta pintura!
      courseD_artist_project1a: Desenhe um modelo de degrau de escada que tenha voltas entre 75 e 105 graus.
      courseD_artist_project1a_2018: Desenhe um modelo de degrau de escada que tenha voltas entre 75 e 105 graus.
      courseD_artist_project1a_2019: Desenhe um modelo de degrau de escada que tenha voltas entre 75 e 105 graus.
      courseD_artist_project2a: Agora, vire 180 graus e desenhe o modelo da escada novamente!
      courseD_artist_project2a_2018: Agora, vire 180 graus e desenhe o modelo da escada novamente!
      courseD_artist_project2a_2019: Agora, vire 180 graus e desenhe o modelo da escada novamente!
      courseD_artist_project3a: Gire essa forma cerca de 5 ou 6 vezes em um círculo.
      courseD_artist_project3a_2018: Gire essa forma cerca de 5 ou 6 vezes em um círculo.
      courseD_artist_project3a_2019: Gire essa forma cerca de 5 ou 6 vezes em um círculo.
      courseD_artist_project4a: |-
        Tente brincar com o que você criou. Desenhe o que quiser!
        - O que acontece se você usar dois ângulos diferentes no seu modelo de degrau de escada?
        - O que acontece se você fazer o seu modelo de diamante mais longo ou mais curto?
        - Que aparência tem dois flocos de neve desenhados um em cima do outro?
      courseD_artist_project4a_2018: |-
        Tente brincar com o que você criou. Desenhe o que quiser!
        - O que acontece se você usar dois ângulos diferentes no seu modelo de degrau de escada?
        - O que acontece se você fazer o seu modelo de diamante mais longo ou mais curto?
        - Que aparência tem dois flocos de neve desenhados um em cima do outro?
      courseD_artist_project4a_2019: |-
        Tente brincar com o que você criou. Desenhe o que quiser!
        - O que acontece se você usar dois ângulos diferentes no seu modelo de degrau de escada?
        - O que acontece se você fazer o seu modelo de diamante mais longo ou mais curto?
        - Que aparência tem dois flocos de neve desenhados um em cima do outro?
      courseD_artist_project5: Brinque com os flocos de neve!
      courseD_artist_project5_2018: Brinque com os flocos de neve!
      courseD_artist_project5_2019: Brinque com os flocos de neve!
      courseD_artist_ramp12: Use o que você aprendeu para desenhar este triângulo dentro de um quadrado.
      courseD_autorun_binary4_2019: "Você consegue desenhar este padrão repetindo\napenas três dígitos binários? (0 e 1)?"
      courseD_autorun_binary6_2019: "Que string binária de 6 dígitos, repetida\n11 vezes, vai desenhar essa imagem?"
      courseD_autorun_binary7_2019: "Qual é a menor string binária que você\npode repetir para desenhar esta imagem?"
      courseD_autorun_binary8_2019: Termine o código para criar este desenho.
      courseD_autorun_binary8_predict1_2019: Termine o código para criar este desenho.
      courseD_bee_conditionals1: Verifique se há uma flor embaixo da nuvem. Se houver uma flor, pegue o néctar.
      courseD_bee_conditionals10: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals10_2018: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals10_2019: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals1_predict1: Verifique se há uma flor embaixo da nuvem. Se houver uma flor, pegue o néctar.
      courseD_bee_conditionals1_predict1_2018: Verifique se há uma flor embaixo da nuvem. Se houver uma flor, pegue o néctar.
      courseD_bee_conditionals1_predict1_2019: Verifique se há uma flor embaixo da nuvem. Se houver uma flor, pegue o néctar.
      courseD_bee_conditionals2: 'Verifique embaixo de cada nuvem para ver se ela está escondendo uma flor antes de pegar o néctar.  '
      courseD_bee_conditionals2_2018: 'Verifique embaixo de cada nuvem para ver se ela está escondendo uma flor antes de pegar o néctar.  '
      courseD_bee_conditionals2_2019: 'Verifique embaixo de cada nuvem para ver se ela está escondendo uma flor antes de pegar o néctar.  '
      courseD_bee_conditionals2_test: 'Verifique embaixo de cada nuvem para ver se ela está escondendo uma flor antes de pegar o néctar.  '
      courseD_bee_conditionals3: "Ajude a abelha a recolher todo o néctar. \n\nVocê só pode coletar néctar de flores, mas você pode verificar qualquer espaço para ver se há uma flor."
      courseD_bee_conditionals3_2018: "Ajude a abelha a recolher todo o néctar. \n\nVocê só pode coletar néctar de flores, mas você pode verificar qualquer espaço para ver se há uma flor."
      courseD_bee_conditionals3_2019: "Ajude a abelha a recolher todo o néctar. \n\nVocê só pode coletar néctar de flores, mas você pode verificar qualquer espaço para ver se há uma flor."
      courseD_bee_conditionals4: Pegue todo o néctar usando o menor número de blocos possível.
      courseD_bee_conditionals4_2018: Pegue todo o néctar usando o menor número de blocos possível.
      courseD_bee_conditionals4_2019: Pegue todo o néctar usando o menor número de blocos possível.
      courseD_bee_conditionals5: Colete todo o néctar usando o menor número de blocos possível
      courseD_bee_conditionals5_2018: Colete todo o néctar usando o menor número de blocos possível
      courseD_bee_conditionals5_2019: Colete todo o néctar usando o menor número de blocos possível
      courseD_bee_conditionals6: Algumas dessas nuvens podem ter favos de mel embaixo delas. Certifique-se de verificar se um favo de mel está se escondendo atrás de cada nuvem!
      courseD_bee_conditionals6_2018: Algumas dessas nuvens podem ter favos de mel embaixo delas. Certifique-se de verificar se um favo de mel está se escondendo atrás de cada nuvem!
      courseD_bee_conditionals6_2019: Algumas dessas nuvens podem ter favos de mel embaixo delas. Certifique-se de verificar se um favo de mel está se escondendo atrás de cada nuvem!
      courseD_bee_conditionals7: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseD_bee_conditionals7_2018: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseD_bee_conditionals7_2019: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseD_bee_conditionals7_predict2: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseD_bee_conditionals7_predict2_2018: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseD_bee_conditionals7_predict2_2019: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseD_bee_conditionals8: |-
        Colete néctar se houver uma flor.
        Caso contrário, faça mel (porque existe um favo de mel).
      courseD_bee_conditionals8_2018: |-
        Colete néctar se houver uma flor.
        Caso contrário, faça mel (porque existe um favo de mel).
      courseD_bee_conditionals8_2019: |-
        Colete néctar se houver uma flor.
        Caso contrário, faça mel (porque existe um favo de mel).
      courseD_bee_conditionals9: Colete todo o néctar ou faça todo o mel.
      courseD_bee_conditionals9_2018: Colete todo o néctar ou faça todo o mel.
      courseD_bee_conditionals9_2019: Colete todo o néctar ou faça todo o mel.
      courseD_bee_conditionals_challenge1: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals_challenge1_2018: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals_challenge1_2019: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals_challenge2: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals_challenge2_2018: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals_challenge2_2019: Colete todo o néctar e faça todo o mel.
      courseD_bee_conditionals_challenge3: Colete todo o néctar ou faça todo o mel.
      courseD_bee_debugging1: Corrija o(s) erro(s) para coletar todo o néctar.
      courseD_bee_debugging2: Corrija o(s) erro(s) para coletar todo o néctar.
      courseD_bee_debugging3: "Corrija o(s) erro(s) para coletar todo o néctar\ne produzir todo o mel."
      courseD_bee_debugging4: Corrija o(s) erro(s) para fazer todo o mel.
      courseD_bee_debugging5: 'Desafio: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.'
      courseD_bee_debugging6: 'Desafio: Corrigir os erros para coletar todo o néctar e fazer todo o mel.'
      courseD_bee_debugging9: Ajude a abelha a consertar o código para pegar todo o néctar.
      courseD_bee_nestedLoops1: Ajude a abelha a coletar todo o nectar.
      courseD_bee_nestedLoops1_2018: Ajude a abelha a coletar todo o nectar.
      courseD_bee_nestedLoops1_2019: Ajude a abelha a coletar todo o nectar.
      courseD_bee_nestedLoops1a: Ajude a abelha a coletar todo o nectar.
      courseD_bee_nestedLoops1a_2018: Ajude a abelha a coletar todo o nectar.
      courseD_bee_nestedLoops1a_2019: Ajude a abelha a coletar todo o nectar.
      courseD_bee_nestedLoops3: "Colete todo o néctar de cada flor.\nUse um laço aninhado. "
      courseD_bee_nestedLoops5: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\r\n\\r\nUse um laço aninhado. "
      courseD_bee_nestedLoops6_2018: "Vamos subir o nível! \\r\nUse\nlaços para me levar até o girassol com o menor número de laços possível."
      courseD_bee_nestedLoops7: 'Desafio: Descubra como pegar todo o nectar usando apenas os blocos disponíveis.'
      courseD_bee_nestedLoops7_2018: 'Desafio: Descubra como pegar todo o nectar usando apenas os blocos disponíveis.'
      courseD_bee_nestedLoops7_2019: 'Desafio: Descubra como pegar todo o nectar usando apenas os blocos disponíveis.'
      courseD_bee_nestedLoops8: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\r\n\\r\nUse um laço aninhado. "
      courseD_bee_nestedLoops8_2018: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\r\n\\r\nUse um laço aninhado. "
      courseD_bee_nestedLoops8_2019: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\r\n\\r\nUse um laço aninhado. "
      courseD_bounce_events1: Anexe um bloco no bloco "quando seta para a esquerda" e pressione "Executar" para mover o jogador para a bandeira.
      courseD_bounce_events10: Agora há um alvo na parte de cima. Conecte os blocos "marque um ponto" e "marque um ponto para o oponente" aos blocos "quando a bola atingir o alvo" e "quando a bola não acertar a raquete" para fazer um jogo. Veja quantos pontos você consegue marcar antes que seu oponente marque duas vezes.
      courseD_bounce_events10s: 'Anexe o bloco `marque ponto` ao evento `quando bola no gol` e o bloco `marque ponto para o oponente` ao evento `quando a bola não pegar na mão` para fazer um jogo. '
      courseD_bounce_events10s_2018: 'Anexe o bloco `marque ponto` ao evento `quando bola no gol` e o bloco `marque ponto para o oponente` ao evento `quando a bola não pegar na mão` para fazer um jogo. '
      courseD_bounce_events10s_2019: 'Anexe o bloco `marque ponto` ao evento `quando bola no gol` e o bloco `marque ponto para o oponente` ao evento `quando a bola não pegar na mão` para fazer um jogo. '
      courseD_bounce_events11: Agora você pode conectar blocos ao bloco "quando o jogo começa". Você tem que anexar o novo bloco "jogue uma nova bola" em mais de um lugar. Além disso, tente mudar o cenário ou a velocidade da raquete e da bola e veja quantos pontos você pode marcar antes de seu oponente marcar duas vezes.
      courseD_bounce_events11s: 'Anexe o bloco `lançar bola nova` em todos os lugares onde o jogo precisa de uma nova bola. '
      courseD_bounce_events11s_2018: 'Anexe o bloco `lançar bola nova` em todos os lugares onde o jogo precisa de uma nova bola. '
      courseD_bounce_events11s_2019: 'Anexe o bloco `lançar bola nova` em todos os lugares onde o jogo precisa de uma nova bola. '
      courseD_bounce_events12: Crie seu próprio jogo de Pingue-pongue. Você pode mudar o visual e todas as regras. Quando terminar, clique em Concluir para que seus amigos possam jogar seu jogo em seus celulares.
      courseD_bounce_events12s: Faça deste seu próprio jogo. Você pode alterar todos os recursos visuais e as regras. Quando terminar, clique em "Concluir" para permitir que amigos experimentem seu jogo em seus telefones.
      courseD_bounce_events12s_2018: Faça deste seu próprio jogo. Você pode alterar todos os recursos visuais e as regras. Quando terminar, clique em "Concluir" para permitir que amigos experimentem seu jogo em seus telefones.
      courseD_bounce_events12s_2019: Faça deste seu próprio jogo. Você pode alterar todos os recursos visuais e as regras. Quando terminar, clique em "Concluir" para permitir que amigos experimentem seu jogo em seus telefones.
      courseD_bounce_events1s: Anexe um bloco no bloco "quando seta para a esquerda" e pressione "Executar" para mover o jogador para a rede.
      courseD_bounce_events1s_2018: Anexe um bloco no bloco "quando seta para a esquerda" e pressione "Executar" para mover o jogador para a rede.
      courseD_bounce_events1s_2019: Anexe um bloco no bloco "quando seta para a esquerda" e pressione "Executar" para mover o jogador para a rede.
      courseD_bounce_events2: Conecte um bloco aos blocos "quando clicar na seta para a direita" e "quando clicar na seta para a esquerda". Mova a raquete para alcançar ambos os objetivos finais.
      courseD_bounce_events3: Agora, tente algo semelhante com o bloco "quando clicar na seta para cima". Mova a raquete o objetivo final no topo.
      courseD_bounce_events3s: Agora, tente algo semelhante com o bloco "quando clicar na seta para cima". Mova a raquete o objetivo final no topo.
      courseD_bounce_events4: Desta vez, você precisa adicionar quatro blocos. Mova a raquete para todos os quatro alvos finais para completar este desafio.
      courseD_bounce_events4s: Desta vez, você precisa adicionar quatro blocos. Mova a raquete para todos os quatro alvos finais para completar este desafio.
      courseD_bounce_events5: Vamos lançar uma bola em direção à raquete. Conecte um bloco ao bloco "quando a bola bater na raquete" para garantir que a bola atinja o alvo.
      courseD_bounce_events6: Agora o alvo está no topo. Você precisa conectar blocos em ambos os blocos "quando a bola bater" para resolver este desafio.
      courseD_bounce_events6s: Anexe código para fazer a bola saltar quando ela bate na parede para que você possa resolver este quebra-cabeça.
      courseD_bounce_events6s_2018: Anexe código para fazer a bola saltar quando ela bate na parede para que você possa resolver este quebra-cabeça.
      courseD_bounce_events6s_2019: Anexe código para fazer a bola saltar quando ela bate na parede para que você possa resolver este quebra-cabeça.
      courseD_bounce_events7: Conecte os blocos a cada um dos blocos "quando". Faça a bola quicar até que ela atinja o alvo.
      courseD_bounce_events7s: Anexe blocos de som para fazer a rede fazer barulho quando você acertar a cesta e faça o apito soar quando a bola não atinge sua mão. Quique a bola até ela alcançar o alvo final.
      courseD_bounce_events7s_2018: Anexe blocos de som para fazer a rede fazer barulho quando você acertar a cesta e faça o apito soar quando a bola não atinge sua mão. Quique a bola até ela alcançar o alvo final.
      courseD_bounce_events7s_2019: Anexe blocos de som para fazer a rede fazer barulho quando você acertar a cesta e faça o apito soar quando a bola não atinge sua mão. Quique a bola até ela alcançar o alvo final.
      courseD_collector_debugging1: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging1_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging1a: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging1a_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging1a_2019: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging2: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging2_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging2a: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging2a_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging2a_2019: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging3: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging3_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging3a: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging3a_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging3a_2019: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging4: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging4_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging4a: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging4a_2018: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging4a_2019: Corrija o(s) erro(s) para coletar todo o tesouro.
      courseD_collector_debugging5: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.
      courseD_collector_debugging5_2018: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.
      courseD_collector_debugging5a: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.
      courseD_collector_debugging5a_2018: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.
      courseD_collector_debugging5a_2019: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.
      courseD_collector_debugging6: 'Desafio: Use suas habilidades de depuração para corrigir os erros e coletar todo o tesouro.'
      courseD_collector_debugging6_2018: 'Desafio: Use suas habilidades de depuração para corrigir os erros e coletar todo o tesouro.'
      courseD_collector_debugging7: 'Desafio: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.'
      courseD_collector_debugging_challenge2: Você é um especialista de laços aninhados? Use o que você aprendeu até agora para coletar todo o tesouro!
      courseD_collector_debugging_challenge2_2018: Você é um especialista de laços aninhados? Use o que você aprendeu até agora para coletar todo o tesouro!
      courseD_collector_nested_loops_challenge2a: Ajude Laurel a coletar pelo menos duas pilhas de tesouro.
      courseD_collector_ramp10: Ajude Laurel a coletar todo o tesouro.
      courseD_collector_ramp8: Ajude Laurel a coletar todo o tesouro.
      courseD_collector_ramp9: Ajude Laurel a coletar todo o tesouro.
      courseD_collector_until_challenge1: Você é um especialista em laços aninhados? Use o que você aprendeu até agora para coletar todo o tesouro!
      courseD_debugging_1: Corrija o(s) erro(s) para coletar todo o néctar.
      courseD_debugging_2: Corrija o(s) erro(s) para coletar todo o néctar.
      courseD_debugging_3: "Corrija o(s) erro(s) para coletar todo o néctar\ne produzir todo o mel."
      courseD_debugging_4: Corrija o(s) erro(s) para fazer todo o mel.
      courseD_debugging_5: 'Desafio: Todos os comandos que você precisa já estão aqui...agora use suas habilidades de depuração para descobrir como resolver esse quebra-cabeça.'
      courseD_debugging_6: 'Desafio: Corrigir os erros para coletar todo o néctar e fazer todo o mel.'
      courseD_farmer_condLoops1: Use condicionais para garantir que você colha o milho somente quando ele estiver lá.
      courseD_farmer_condLoops1_2018: Use condicionais para garantir que você colha o milho somente quando ele estiver lá.
      courseD_farmer_condLoops1_2019: Use condicionais para garantir que você colha o milho somente quando ele estiver lá.
      courseD_farmer_condLoops2: Ajude a colheitadeira coletar o milho e o alface do campo.
      courseD_farmer_condLoops2_2018: Ajude a colheitadeira coletar o milho e o alface do campo.
      courseD_farmer_condLoops2_2019: Ajude a colheitadeira coletar o milho e o alface do campo.
      courseD_farmer_condLoops3: '*"Milho, alface E abóboras! Ajude-me a colher todos eles."*'
      courseD_farmer_condLoops3_2018: '*"Milho, alface E abóboras! Ajude-me a colher todos eles."*'
      courseD_farmer_condLoops3_2019: '*"Milho, alface E abóboras! Ajude-me a colher todos eles."*'
      courseD_farmer_condLoops4: Ajude o fazendeiro a colher toda a alface em cada pé antes de passar para o próximo grupo.
      courseD_farmer_condLoops4_2018: Ajude o fazendeiro a colher toda a alface em cada pé antes de passar para o próximo grupo.
      courseD_farmer_condLoops4_2019: Ajude o fazendeiro a colher toda a alface em cada pé antes de passar para o próximo grupo.
      courseD_farmer_condLoops4a: Ajude o fazendeiro a colher toda a alface em cada pé antes de passar para o próximo grupo.
      courseD_farmer_condLoops5: Recolha todo o milho e alface, depois pegue a abóbora no final.
      courseD_farmer_condLoops5_2018: Recolha todo o milho e alface, depois pegue a abóbora no final.
      courseD_farmer_condLoops5_2019: Recolha todo o milho e alface, depois pegue a abóbora no final.
      courseD_farmer_condLoops6: Você consegue descobrir como pegar a abóbora? Certifique-se de recolher todo o milho ao longo do caminho!
      courseD_farmer_condLoops6_2018: Você consegue descobrir como pegar a abóbora? Certifique-se de recolher todo o milho ao longo do caminho!
      courseD_farmer_condLoops6_2019: Você consegue descobrir como pegar a abóbora? Certifique-se de recolher todo o milho ao longo do caminho!
      courseD_farmer_condLoops7: 'Desafio: Recolha todo o milho e alface, depois pegue a abóbora.'
      courseD_farmer_condLoops7_2018: 'Desafio: Recolha todo o milho e alface, depois pegue a abóbora.'
      courseD_farmer_condLoops7_2019: 'Desafio: Recolha todo o milho e alface, depois pegue a abóbora.'
      courseD_farmer_condLoops_challenge1: Recolha tudo para completar o nível. Cada cultura escondida tem apenas um milho ou alface.
      courseD_farmer_condLoops_challenge1_2018: Recolha tudo para completar o nível. Cada cultura escondida tem apenas um milho ou alface.
      courseD_farmer_condLoops_challenge1_2019: Recolha tudo para completar o nível. Cada cultura escondida tem apenas um milho ou alface.
      courseD_farmer_condLoops_challenge2: Colete tudo para completar o nível.
      courseD_farmer_condLoops_challenge2_2018: Colete tudo para completar o nível.
      courseD_farmer_condLoops_challenge2_2019: Colete tudo para completar o nível.
      courseD_farmer_condLoops_challenge2_clone: Colete tudo para completar o nível.
      courseD_farmer_conditionals1: Mova-se para a pilha de sujeira e use o bloco `remover` para removê-la.
      courseD_farmer_conditionals10: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_conditionals2: Mova para o buraco e preencha-o com seis pás de terra, usando o bloco `preencher`.
      courseD_farmer_conditionals3: Use o menor número de blocos possível para resolver este enigma.
      courseD_farmer_conditionals4: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      courseD_farmer_conditionals5: 'Ajude-me a remover toda esta areia. '
      courseD_farmer_conditionals6: Use o laço `while` para preencher facilmente todos os buracos.
      courseD_farmer_conditionals7: Preencha o buraco no final de cada um desses caminhos.
      courseD_farmer_conditionals8: 'Desafio: Preencha todos estes buracos usando o menor número de blocos possível. '
      courseD_farmer_conditionals9: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while1: Mova-se para a pilha de sujeira e use o bloco `remover` para removê-la.
      courseD_farmer_while10: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while10_2018: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while10_2019: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while10_predict2: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while10_predict2_2018: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while10_predict2_2019: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while1_2018: Mova-se para a pilha de sujeira e use o bloco `remover` para removê-la.
      courseD_farmer_while1_2019: Mova-se para a pilha de sujeira e use o bloco `remover` para removê-la.
      courseD_farmer_while2: Mova para o buraco e preencha-o com seis pás de terra, usando o bloco `preencher`.
      courseD_farmer_while2_2018: Mova para o buraco e preencha-o com seis pás de terra, usando o bloco `preencher`.
      courseD_farmer_while2_2019: Mova para o buraco e preencha-o com seis pás de terra, usando o bloco `preencher`.
      courseD_farmer_while3: Use o menor número de blocos possível para resolver este enigma.
      courseD_farmer_while3_2018: Use o menor número de blocos possível para resolver este enigma.
      courseD_farmer_while3_2019: Use o menor número de blocos possível para resolver este enigma.
      courseD_farmer_while4: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      courseD_farmer_while4_2018: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      courseD_farmer_while4_2019: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      courseD_farmer_while4_predict1: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      courseD_farmer_while4_predict1_2018: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      courseD_farmer_while4_predict1_2019: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      courseD_farmer_while5: 'Ajude-me a remover toda esta areia. '
      courseD_farmer_while5_2018: 'Ajude-me a remover toda esta areia. '
      courseD_farmer_while5_2019: 'Ajude-me a remover toda esta areia. '
      courseD_farmer_while6: Use o laço `while` para preencher facilmente todos os buracos.
      courseD_farmer_while6_2018: Use o laço `while` para preencher facilmente todos os buracos.
      courseD_farmer_while6_2019: Use o laço `while` para preencher facilmente todos os buracos.
      courseD_farmer_while7: Preencha o buraco no final de cada um desses caminhos.
      courseD_farmer_while7_2018: Preencha o buraco no final de cada um desses caminhos.
      courseD_farmer_while7_2019: Preencha o buraco no final de cada um desses caminhos.
      courseD_farmer_while8: 'Desafio: Preencha todos estes buracos usando o menor número de blocos possível. '
      courseD_farmer_while8_2018: 'Desafio: Preencha todos estes buracos usando o menor número de blocos possível. '
      courseD_farmer_while8_2019: 'Desafio: Preencha todos estes buracos usando o menor número de blocos possível. '
      courseD_farmer_while9: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while9_2018: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_farmer_while9_2019: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      courseD_iceage_loops1: Ajude Scrat a atravessar o gelo e chegar na noz!
      courseD_iceage_loops10: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops10_2019: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops11: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops11_2019: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops12: Pegue a noz da maneira que você conseguir!
      courseD_iceage_loops12_2019: Pegue a noz da maneira que você conseguir!
      courseD_iceage_loops1_2019: Ajude Scrat a atravessar o gelo e chegar na noz!
      courseD_iceage_loops2: Use um bloco `virar à esquerda` para chegar à bolota!
      courseD_iceage_loops2_2019: Use um bloco `virar à esquerda` para chegar à bolota!
      courseD_iceage_loops3: Você consegue chegar à bolota com apenas um bloco `avançar`?
      courseD_iceage_loops3_2019: Você consegue chegar à bolota com apenas um bloco `avançar`?
      courseD_iceage_loops4: Adicione mais um bloco para levar Scrat até a noz!
      courseD_iceage_loops4_2019: Adicione mais um bloco para levar Scrat até a noz!
      courseD_iceage_loops6: Você consegue adicionar um laço para chegar até a noz?
      courseD_iceage_loops6_2019: Você consegue adicionar um laço para chegar até a noz?
      courseD_iceage_loops7: 'Scrat realmente quer aquela noz! '
      courseD_iceage_loops7_2019: 'Scrat realmente quer aquela noz! '
      courseD_iceage_loops8: 'Você consegue corrigir este código? '
      courseD_iceage_loops8_2019: 'Você consegue corrigir este código? '
      courseD_iceage_loops9: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseD_iceage_loops9_2019: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseD_maze_intro4_2019: Ajude Red a alcançar o porco.
      courseD_maze_nestedLoops3: Leve o zumbi até o girassol usando o menor número de blocos possível.
      courseD_maze_nestedLoops3_2018: Leve o zumbi até o girassol usando o menor número de blocos possível.
      courseD_maze_nestedLoops3_2019: Leve o zumbi até o girassol usando o menor número de blocos possível.
      courseD_maze_nestedLoops4: "Leve-me até o girassol usando o menor número de blocos\npossível! \\r\n\\r\nUse um laço \"repita\" dentro de outro para diminuir\na quantidade de códigos que você precisa."
      courseD_maze_nestedLoops4_2018: "Leve-me até o girassol usando o menor número de blocos\npossível! \\r\n\\r\nUse um laço \"repita\" dentro de outro para diminuir\na quantidade de códigos que você precisa."
      courseD_maze_nestedLoops4_2019: "Leve-me até o girassol usando o menor número de blocos\npossível! \\r\n\\r\nUse um laço \"repita\" dentro de outro para diminuir\na quantidade de códigos que você precisa."
      courseD_maze_nestedLoops5: "Leve o zumbi até o girassol usando o menor número\npossível de blocos!"
      courseD_maze_nestedLoops5_2018: "Leve o zumbi até o girassol usando o menor número\npossível de blocos!"
      courseD_maze_nestedLoops5_2019: "Leve o zumbi até o girassol usando o menor número\npossível de blocos!"
      courseD_maze_nestedLoops6: "Vamos subir o nível! \\r\nUse\nlaços para me levar até o girassol com o menor número de laços possível."
      courseD_maze_nestedLoops6_2018: "Vamos subir o nível! \\r\nUse\nlaços para me levar até o girassol com o menor número de laços possível."
      courseD_maze_nestedLoops6_2019: "Vamos subir o nível! \\r\nUse\nlaços para me levar até o girassol com o menor número de laços possível."
      courseD_maze_ramp4: Evite a(s) TNT(s) ou penas irão voar!
      courseD_maze_ramp4_2018: Evite a(s) TNT(s) ou penas irão voar!
      courseD_maze_ramp4_2019: Evite a(s) TNT(s) ou penas irão voar!
      courseD_maze_ramp5: Desvie da TNT.
      courseD_maze_ramp5_2018: Desvie da TNT.
      courseD_maze_ramp5_2019: Desvie da TNT.
      courseD_maze_ramp5d: Leve o pássaro até o porco.
      courseD_maze_ramp5d_2018: Leve o pássaro até o porco.
      courseD_maze_ramp5d_2019: Leve o pássaro até o porco.
      courseD_maze_ramp6: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseD_maze_ramp6a: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseD_maze_ramp7: Leve o pássaro até o porco!
      courseD_maze_until1: Leve o Angry Bird até o porco.
      courseD_maze_until10: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_predict2: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_predict2_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_predict2_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until1_2018: Leve o Angry Bird até o porco.
      courseD_maze_until1_2019: Leve o Angry Bird até o porco.
      courseD_maze_until3: Leve o pássaro até o porco.
      courseD_maze_until3_2018: Leve o pássaro até o porco.
      courseD_maze_until3_2019: Leve o pássaro até o porco.
      courseD_maze_until6: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until6_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until6_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until7: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until7_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until7_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until8: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until8_2018: Ajude o zumbi a chegar até o girassol.
      courseD_playLab_cond6cloneForTest: Testando
      courseD_scrat_ramp5: Evite o gelo com rachadura.
      courseD_scrat_ramp5_2018: Evite o gelo com rachadura.
      courseD_scrat_ramp7: Ajude Scrat a chegar até a noz!
      courseD_scrat_ramp7_2018: Ajude Scrat a chegar até a noz!
      courseE_artist_concept1: 'Recrie esta imagem. '
      courseE_artist_concept1_2018: 'Recrie esta imagem. '
      courseE_artist_concept1_2019: 'Recrie esta imagem. '
      courseE_artist_concept4: Recrie este desenho.
      courseE_artist_concept4_2018: Recrie este desenho.
      courseE_artist_concept4_2019: Recrie este desenho.
      courseE_artist_functions1: "\"Olá! Eu sou um artista zumbi. Eu amo desenhar!\"  \\r\n\\r\nAjude\no zumbi a desenhar óculos usando quadrados com lados de 100 pixels de comprimento.  \\r\n\\r\nA\nhaste entre as lentes tem 75 pixels de comprimento."
      courseE_artist_functions1_2018: "\"Olá! Eu sou um artista zumbi. Eu amo desenhar!\"  \\r\n\\r\nAjude\no zumbi a desenhar óculos usando quadrados com lados de 100 pixels de comprimento.  \\r\n\\r\nA\nhaste entre as lentes tem 75 pixels de comprimento."
      courseE_artist_functions3_2018: Construa uma função que irá criar esta estrela.
      courseE_artist_functions3_2019: Construa uma função que irá criar esta estrela.
      courseE_artist_functions4: Agora que você consegue desenhar uma estrela, tente desenhar quatro estrelas!
      courseE_artist_functions4_2018: Agora que você consegue desenhar uma estrela, tente desenhar quatro estrelas!
      courseE_artist_functions5: Desenhe apenas estas três estrelas para terminar este quebra-cabeça.
      courseE_artist_functions5_2018: Desenhe apenas estas três estrelas para terminar este quebra-cabeça.
      courseE_artist_functions5_2019: Desenhe apenas estas três estrelas para terminar este quebra-cabeça.
      courseE_artist_functions8a_2018: Crie uma função para um único quadrado.
      courseE_artist_functions8a_2019: Crie uma função para um único quadrado.
      courseE_artist_functions_challenge2: Tente esse código para ver como funciona, então faça um programa do seu jeito!
      courseE_artist_functions_challenge2_2018: Tente esse código para ver como funciona, então faça um programa do seu jeito!
      courseE_artist_functions_challenge2_2019: Tente esse código para ver como funciona, então faça um programa do seu jeito!
      courseE_artist_ramp12: Use o que você aprendeu para desenhar este triângulo dentro de um quadrado.
      courseE_bee_concept1: "Colete todo o néctar de cada flor.\nUse um laço aninhado. "
      courseE_bee_concept1_2018: "Colete todo o néctar de cada flor.\nUse um laço aninhado. "
      courseE_bee_concept1_2019: "Colete todo o néctar de cada flor.\nUse um laço aninhado. "
      courseE_bee_concept3: Colete todo o néctar usando o menor número possível de blocos.
      courseE_bee_concept3_2018: Colete todo o néctar usando o menor número possível de blocos.
      courseE_bee_concept3_2019: Colete todo o néctar usando o menor número possível de blocos.
      courseE_bee_concept5: Ajude a abelha a coletar todo o nectar das flores.
      courseE_bee_concept5_2018: Ajude a abelha a coletar todo o nectar das flores.
      courseE_bee_concept5_2019: Ajude a abelha a coletar todo o nectar das flores.
      courseE_bee_functions1: Colete todo o néctar de cada flor.
      courseE_bee_functions1_2018: Colete todo o néctar de cada flor.
      courseE_bee_functions3: "As funções são blocos de código que realizam\numa tarefa. \\r\n\\r\nUse a função \"obtenha 5\" para obter 5 néctares por vez."
      courseE_bee_functions3_2018: "As funções são blocos de código que realizam\numa tarefa. \\r\n\\r\nUse a função \"obtenha 5\" para obter 5 néctares por vez."
      courseE_bee_functions4: "A função \"mova e obtenha néctar\" vira\na abelha, coleta néctar, e então retorna a abelha para onde ela começou. \\r\n\\r\nUse\na função para coletar todo o néctar."
      courseE_bee_functions4_2018: "A função \"mova e obtenha néctar\" vira\na abelha, coleta néctar, e então retorna a abelha para onde ela começou. \\r\n\\r\nUse\na função para coletar todo o néctar."
      courseE_bee_functions_challenge1: Você está por conta própria nesse desafio. Isso pode ser mais difícil do que parece!
      courseE_bee_functions_challenge1_2018: Você está por conta própria nesse desafio. Isso pode ser mais difícil do que parece!
      courseE_collector_ramp10: Ajude Laurel a coletar todo o tesouro.
      courseE_collector_ramp8: Ajude Laurel a coletar todo o tesouro.
      courseE_collector_ramp9: Ajude Laurel a coletar todo o tesouro.
      courseE_farmer_concept2: Colete todas as abóboras.
      courseE_farmer_concept2_2018: Colete todas as abóboras.
      courseE_farmer_concept2_2019: Colete todas as abóboras.
      courseE_farmer_concept3: Preencha o buraco no final de cada um desses caminhos.
      courseE_farmer_concept3_2018: Preencha o buraco no final de cada um desses caminhos.
      courseE_farmer_concept3_2019: Preencha o buraco no final de cada um desses caminhos.
      courseE_farmer_concept4: "Agora, vamos nos aprofundar mais um nível!\nAninhamos todo o bloco de código dentro de outro laço, mas você precisa posicionar o\nartista no lugar para desenhar a próxima reta. Qual desses blocos de código você\npode colocar no final do laço mais externo para desenhar toda a grade?"
      courseE_farmer_elseif_test: Preencha o buraco no final de cada um desses caminhos.
      courseE_farmer_functions10b: Use sua nova função duas vezes para resolver este desafio.
      courseE_farmer_functions10b_2018: Use sua nova função duas vezes para resolver este desafio.
      courseE_farmer_functions13_2018: Solucione este desafio com 23 blocos ou menos.
      courseE_farmer_functions13_2019: Solucione este desafio com 23 blocos ou menos.
      courseE_farmer_functions2b: Ajude a colheitadeira a pegar os milhos e as abóboras.
      courseE_farmer_functions2b_2018: Ajude a colheitadeira a pegar os milhos e as abóboras.
      courseE_farmer_functions2b_2019: Ajude a colheitadeira a pegar os milhos e as abóboras.
      courseE_farmer_functions8: "**Desafio:** Resolva este quebra-cabeça com a menor quantidade possível de blocos."
      courseE_farmer_functions8b: "**Desafio:** Colete todas as abóboras usando o método do último quebra-cabeça. "
      courseE_farmer_functions8b_2018: "**Desafio:** Colete todas as abóboras usando o método do último quebra-cabeça. "
      courseE_farmer_functions9: Use condicionais para simplificar seu programa.
      courseE_farmer_ramp11a: Enquanto houver uma pilha, remova a areia.
      courseE_farmer_ramp11a_2018: Enquanto houver uma pilha, remova a areia.
      courseE_farmer_ramp11a_2019: Enquanto houver uma pilha, remova a areia.
      courseE_farmer_ramp11b: Enquanto houver uma pilha, remova a areia.
      courseE_farmer_ramp11b_2018: Enquanto houver uma pilha, remova a areia.
      courseE_farmer_ramp11b_2019: Enquanto houver uma pilha, remova a areia.
      courseE_maze_ramp4: Evite a(s) TNT(s) ou penas irão voar!
      courseE_maze_ramp4_2018: Evite a(s) TNT(s) ou penas irão voar!
      courseE_maze_ramp5: Desvie da TNT.
      courseE_maze_ramp5_2018: Desvie da TNT.
      courseE_maze_ramp6: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseE_maze_ramp6_2018: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseE_multi_maze_ramp5: Desvie da TNT.
      courseE_playLab_challenge1: "Algo deve acontecer quando tiver pontos suficientes, ou quando você ficar sem pontos. Adicione algum código para o 'ganhar jogo' e 'perder o jogo' funções para fazer o jogo funcionar do jeito que deveria. \nClique as dicas para ideias!"
      courseE_playLab_challenge1_2018: "Algo deve acontecer quando tiver pontos suficientes, ou quando você ficar sem pontos. Adicione algum código para o 'ganhar jogo' e 'perder o jogo' funções para fazer o jogo funcionar do jeito que deveria. \nClique as dicas para ideias!"
      courseF_artist_for7: "Faça três pequenas alterações no\ncódigo do último nível para conseguir isso!"
      courseF_artist_for7_2018: "Faça três pequenas alterações no\ncódigo do último nível para conseguir isso!"
      courseF_artist_for7_2019: "Faça três pequenas alterações no\ncódigo do último nível para conseguir isso!"
      courseF_artist_for_challenge1: Você consegue descobrir como recriar este desenho?
      courseF_artist_for_challenge1_2018: Você consegue descobrir como recriar este desenho?
      courseF_artist_for_challenge1_2019: Você consegue descobrir como recriar este desenho?
      courseF_artist_for_challenge2: "Você consegue descobrir como recriar esse desenho\ncom um único laço?"
      courseF_artist_for_challenge2_2018: "Você consegue descobrir como recriar esse desenho\ncom um único laço?"
      courseF_artist_for_challenge2_2019: "Você consegue descobrir como recriar esse desenho\ncom um único laço?"
      courseF_artist_fwp1: Edite a função 'desenhar um quadrado' para encontrar bugs.
      courseF_artist_fwp1_2018: Edite a função 'desenhar um quadrado' para encontrar bugs.
      courseF_artist_fwp_challenge1: Você consegue descobrir como este programa funciona?
      courseF_artist_fwp_challenge1_2018: Você consegue descobrir como este programa funciona?
      courseF_artist_variables1: Vamos desenhar um triângulo equilátero com exatamente 50 pixels de comprimento em cada lado.
      courseF_artist_variables7: 'Desenhar um triângulo com lados de 150 pixels. '
      courseF_artist_variables7_2018: 'Desenhar um triângulo com lados de 150 pixels. '
      courseF_artist_variables7_2019: 'Desenhar um triângulo com lados de 150 pixels. '
      courseF_bee_conditionals10: Colete todo o néctar e faça todo o mel.
      courseF_bee_conditionals10_2018: Colete todo o néctar e faça todo o mel.
      courseF_bee_conditionals1_predict1: Verifique se há uma flor embaixo da nuvem. Se houver uma flor, pegue o néctar.
      courseF_bee_conditionals1_predict1_2018: Verifique se há uma flor embaixo da nuvem. Se houver uma flor, pegue o néctar.
      courseF_bee_conditionals3: 'Ajude a abelha a colegar todo o nectar. '
      courseF_bee_conditionals3_2018: 'Ajude a abelha a colegar todo o nectar. '
      courseF_bee_conditionals4: Pegue todo o néctar usando o menor número de blocos possível.
      courseF_bee_conditionals4_2018: Pegue todo o néctar usando o menor número de blocos possível.
      courseF_bee_conditionals5: Colete todo o néctar usando o menor número de blocos possível
      courseF_bee_conditionals5_2018: Colete todo o néctar usando o menor número de blocos possível
      courseF_bee_conditionals7_predict2: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseF_bee_conditionals7_predict2_2018: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      courseF_bee_conditionals8: |-
        Colete néctar se houver uma flor.
        Caso contrário, faça mel (porque existe um favo de mel).
      courseF_bee_conditionals8_2018: |-
        Colete néctar se houver uma flor.
        Caso contrário, faça mel (porque existe um favo de mel).
      courseF_bee_for1: Colete o nectar de cada flor usando o menor número de blocos possíveis.
      courseF_bee_for1_2018: Colete o nectar de cada flor usando o menor número de blocos possíveis.
      courseF_bee_for1_2019: Colete o nectar de cada flor usando o menor número de blocos possíveis.
      courseF_bee_for2: Escrever o código para ajudar a abelha a coletar todo o néctar.
      courseF_bee_for2_2018: Escrever o código para ajudar a abelha a coletar todo o néctar.
      courseF_bee_for2_2019: Escrever o código para ajudar a abelha a coletar todo o néctar.
      courseF_bee_for4: Ajude a abelha a coletar todo o nectar.
      courseF_bee_for4_2018: Ajude a abelha a coletar todo o nectar.
      courseF_bee_for4_2019: Ajude a abelha a coletar todo o nectar.
      courseF_bee_for5: Usar a variável `contador` duas vezes para resolver este enigma.
      courseF_bee_for5_2018: Usar a variável `contador` duas vezes para resolver este enigma.
      courseF_bee_for5_2019: Usar a variável `contador` duas vezes para resolver este enigma.
      courseF_bee_for8: "Você conseguiu! Qual deve ser seu\nincremento para coletar 3, 6, 9, 12, 15 néctares?"
      courseF_bee_for8_2018: "Você conseguiu! Qual deve ser seu\nincremento para coletar 3, 6, 9, 12, 15 néctares?"
      courseF_bee_for8_2019: "Você conseguiu! Qual deve ser seu\nincremento para coletar 3, 6, 9, 12, 15 néctares?"
      courseF_bee_for_challenge2: "Resolva este desafio usando o menor número\npossível de blocos."
      courseF_bee_for_challenge2_2018: "Resolva este desafio usando o menor número\npossível de blocos."
      courseF_bee_for_challenge2_2019: "Resolva este desafio usando o menor número\npossível de blocos."
      courseF_bee_for_challenge3: "Resolva este desafio usando o menor número\npossível de blocos."
      courseF_bee_functions4: "A função \"mova e obtenha néctar\" vira\na abelha, coleta néctar, e então retorna a abelha para onde ela começou. \\r\n\\r\nUse\na função para coletar todo o néctar."
      courseF_bee_functions4_2018: "A função \"mova e obtenha néctar\" vira\na abelha, coleta néctar, e então retorna a abelha para onde ela começou. \\r\n\\r\nUse\na função para coletar todo o néctar."
      courseF_bee_fwp5: Use esta função para coletar todo o nectar.
      courseF_bee_fwp5_2018: Use esta função para coletar todo o nectar.
      courseF_bee_variables_4_2018: Altere o código para funcionar com este desafio.
      courseF_bee_variables_4_2019: Altere o código para funcionar com este desafio.
      courseF_bee_variables_5_2018: Crie seu próprio código para resolver este enigma
      courseF_bee_variables_5_2019: Crie seu próprio código para resolver este enigma
      courseF_bee_variables_7_2018: Este enigma é um pouco diferente. O que você precisa para resolvê-lo?
      courseF_bee_variables_7_2019: Este enigma é um pouco diferente. O que você precisa para resolvê-lo?
      courseF_bee_variables_8_2018: Quantos néctares a abelha irá coletar desta flor?
      courseF_bee_variables_8_2019: Quantos néctares a abelha irá coletar desta flor?
      courseF_maze_ramp4: Evite a(s) TNT(s) ou penas irão voar!
      courseF_maze_ramp4_2018: Evite a(s) TNT(s) ou penas irão voar!
      courseF_maze_ramp5: Desvie da TNT.
      courseF_maze_ramp5_2018: Desvie da TNT.
      courseF_maze_ramp6: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseF_maze_ramp6_2018: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      courseF_playlab_variables0: Esta é uma Perna de Pirata. Ele é muito difícil de entender nos dias de hoje!
      courseF_playlab_variables1: Esta é uma Perna de Pirata. Ele é muito difícil de entender nos dias de hoje!
      courseF_playlab_variables2: "Agora, decodifique a fala da Perna de Pirata mudando o valor das variáveis em apenas dois lugares! \\r\n"
      courseF_playlab_variables2a: "Agora, decodifique a fala da Perna de Pirata mudando o valor das variáveis em apenas dois lugares! \\r\n"
      courseF_playlab_variables8c: Use as variáveis para tornar o jogo mais pessoal.
      courseF_playlab_variables8c_2018: Use as variáveis para tornar o jogo mais pessoal.
      course_playlab_variables1: Esta é uma Perna de Pirata. Ele é muito difícil de entender nos dias de hoje!
      course_playlab_variables2: "Agora, decodifique a fala da Perna de Pirata mudando o valor das variáveis em apenas dois lugares! \\r\n"
      course_playlab_variables3: "Agora, decodifique a fala da Perna de Pirata mudando o valor das variáveis em apenas dois lugares! \\r\n"
      coursea_maze_ramp1_2018: Para este enigma, junte os blocos e clique em "▶ Executar"!
      coursea_maze_ramp1_2019: Para este enigma, junte os blocos e clique em "▶ Executar"!
      flappy_1: Conecte um bloco no bloco "quando clicar" e, em seguida, clique em "Executar". Clique ou toque na tela para mover o passarinho em direção ao alvo.
      flappy_11: Crie seu próprio jogo Flappy Bird. Você pode mudar o visual e todas as regras, até mesmo a gravidade. Quando terminar, clique em Concluir para que seus amigos joguem seu jogo em seus celulares.
      flappy_11_2018: Crie seu próprio jogo Flappy Bird. Você pode mudar o visual e todas as regras, até mesmo a gravidade. Quando terminar, clique em Concluir para que seus amigos joguem seu jogo em seus celulares.
      flappy_1_2018: Conecte um bloco no bloco "quando clicar" e, em seguida, clique em "Executar". Clique ou toque na tela para mover o passarinho em direção ao alvo.
      flappy_2: Agora que já temos uma base. Conecte um bloco ao bloco "quando bater no chão". Seu código precisa 'TERMINAR O JOGO' quando o passarinho bater.
      flappy_2_2018: Agora que já temos uma base. Conecte um bloco ao bloco "quando bater no chão". Seu código precisa 'TERMINAR O JOGO' quando o passarinho bater.
      flappy_3: O bloco "quando o jogo começa" permite que você execute o código quando o jogo começa. Defina a velocidade do nível e voe em direção ao alvo.
      flappy_3_2018: O bloco "quando o jogo começa" permite que você execute o código quando o jogo começa. Defina a velocidade do nível e voe em direção ao alvo.
      flappy_4: O passarinho vai atravessar os obstáculos, a menos que você programe para fazê-lo bater. Conecte um bloco ao bloco "quando atingir um obstáculo". Seu programa precisa 'TERMINAR O JOGO' quando o passarinho bater nos obstáculos.
      flappy_4_2018: O passarinho vai atravessar os obstáculos, a menos que você programe para fazê-lo bater. Conecte um bloco ao bloco "quando atingir um obstáculo". Seu programa precisa 'TERMINAR O JOGO' quando o passarinho bater nos obstáculos.
      flappy_5: Vamos adicionar um painel de pontuação e aumentar os pontos quando o passarinho passar pelos obstáculos. Faça isso no bloco "quando passar um obstáculo", e então marque um ponto quando o passarinho passar pelo primeiro conjunto de obstáculos.
      flappy_5_2018: Vamos adicionar um painel de pontuação e aumentar os pontos quando o passarinho passar pelos obstáculos. Faça isso no bloco "quando passar um obstáculo", e então marque um ponto quando o passarinho passar pelo primeiro conjunto de obstáculos.
      flappy_6: Veja se você ainda pode marcar um ponto depois de fazer o passarinho bater as asas mais ou menos.
      flappy_6_2018: Veja se você ainda pode marcar um ponto depois de fazer o passarinho bater as asas mais ou menos.
      flappy_7: Em seguida, tente mudar a cena conectando outro bloco ao bloco "quando o jogo começa".
      flappy_7_2018: Em seguida, tente mudar a cena conectando outro bloco ao bloco "quando o jogo começa".
      flappy_8: Você pode definir o visual a qualquer momento, não apenas quando o jogo começa. Tente criar um cenário ALEATÓRIO quando outros eventos acontecerem, por exemplo, ao passar um obstáculo.
      flappy_8_2018: Você pode definir o visual a qualquer momento, não apenas quando o jogo começa. Tente criar um cenário ALEATÓRIO quando outros eventos acontecerem, por exemplo, ao passar um obstáculo.
      flappy_9: Para misturar as coisas, ao invés de terminar o jogo quando bater em um obstáculo, tente fazer a pontuação voltar a 0.
      flappy_9_2018: Para misturar as coisas, ao invés de terminar o jogo quando bater em um obstáculo, tente fazer a pontuação voltar a 0.
      frozen circle function in circle: "Agora vamos criar 20 círculos\nsobrepostos, virando 18 graus entre cada círculo."
      frozen circle function with parameter: "Temos aqui um bloco \"crie um círculo\"\nque pode fazer círculos de tamanhos diferentes. Você pode usar isso para criar\num pequeno círculo de tamanho 5 e um círculo maior de tamanho 10?"
      frozen circle function: "Use o novo bloco \"crie um círculo\" para\ncriar 10 círculos sobrepostos. Não se esqueça de avançar entre os círculos."
      frozen circle: "Um círculo é uma forma especial. Você pode descobrir\nque número usar para substituir os pontos de interrogação para desenhar um círculo?"
      frozen cross rotate dense: "Vamos repetir isso 90 vezes! Quantas\nvezes 90 cabe em 360? Dica: é um número realmente pequeno."
      frozen cross rotate dense_b: Vamos repetir a linha **90** vezes!
      frozen cross rotate dense_test: Vamos repetir a linha **90** vezes!
      frozen cross rotate: "Agora, tente repetir isso 10 vezes. Quantos graus\nvocê precisa virar entre cada reta?"
      frozen cross rotate_b: Agora, tente repetir isso **10** vezes. **Quantos graus** você precisa virar entre cada reta?
      frozen cross rotate_test: Agora, tente repetir isso **10** vezes. **Quantos graus** você precisa virar entre cada reta?
      frozen cross: "Envolva um bloco \"Repita\" em torno desses comandos para criar\num sinal de adição. Você notou que Elsa pode se mover para a frente e para trás?"
      frozen diamond mini snowflake: "Você sabia que cada floco de neve\ntem uma forma diferente? Vamos criar um novo floco de neve usando o bloco \"Repita\"\npara repetir um paralelogramo 4 vezes, virando 90 graus à direita entre\ncada paralelogramo."
      frozen diamond snowflake: "Agora, vamos criar um novo floco de neve\nusando o bloco repita para repetir um paralelogramo 10 vezes, virando 36 graus\nà direita entre cada um."
      frozen diamond: "Use um bloco \"Repita\" em torno desses blocos para criar um paralelogramo.\nÉ como um retângulo mas tem ângulos diferentes. Este tem ângulos de 60 graus\ne 120 graus em vez de todos os ângulos terem 90 graus."
      frozen freeplay: "Você se tornou oficialmente um artista mestre!\nCrie um país das maravilhas de gelo."
      frozen line: "Oi! Eu sou Elsa de Arendelle. Ajude-me a criar uma\nreta."
      frozen perpendicular: "Agora, vamos ver se podemos criar duas retas\nque formam um ângulo de 90 graus entre si. Você vai precisar usar o bloco \"vire\"\ne também o bloco \"mova\"."
      frozen snowflake branch: "Tente usar o bloco \"crie um floco de neve do tipo ramificado”\npara criar três ramificações, o que começa a parecer um floco de neve."
      frozen snowflake full: "Agora, vamos repetir isso 8 vezes para fazer um\nbelo floco de neve!"
      frozen snowflake full_b: Agora, vamos repetir isso **8** vezes para criar um lindo floco de neve!
      frozen snowflake full_test: Agora, vamos repetir isso **8** vezes para criar um lindo floco de neve!
      frozen snowflower: "Padrões de neve complexos podem ser criados com\nformas muito simples. Você pode criar um padrão repetindo 5 círculos de tamanho\n5 e 5 círculos de tamanho 10?"
      frozen square iterative: "Parece que estamos na metade do caminho para fazer\num quadrado. Vamos juntar 4 retas para criar um quadrado."
      frozen square loop 3x: "Vamos criar três quadrados, virando depois\nde cada quadrado. Lembre-se de virar 120 graus antes de cada novo quadrado."
      frozen square loop: "Oi, eu sou Anna de Arendelle! Vamos fazer um quadrado\ncom o bloco \"repita\", que usa menos blocos. Quantas vezes (???) o bloco\n\"repita\" deve repetir os blocos dentro dele para fazer um quadrado?"
      frozen square snowflake: "Você consegue criar um floco de neve usando o bloco\n\"repita\" para criar um quadrado 10 vezes e o bloco \"vire\" para virar 36\ngraus entre cada quadrado?"
      grade1_adventurer_loops1: Quatro pilhas de ouro! Colete todas elas.
      grade1_artist_loops1: O Artista está tentando desenhar uma linha seis vezes, mas não consegue fazer direito. Você pode ajudá-lo?
      grade1_artist_loops4: Hora de consertar as escadas! Repita esse padrão cinco vezes para que o artista possa alcançar o topo dos arbustos.
      grade1_artist_loops7: As flores aqui embaixo são tão bonitas. Vamos olhar mais de perto.
      grade1_artist_loops7b: Hora de ir para casa. Você pode consertar esta escada para ajudar o artista a descer?
      grade1_artist_loops9: Eu ainda preciso de uma história pra este quebra-cabeça
      grade1_maze_sequence1: Altere o código para me levar até o porco!
      grade1_maze_sequence10: Me mova ao redor da TNT para chegar até o porco.
      grade1_maze_sequence2: Altere o código para me levar até o porco!
      grade1_maze_sequence3: Adicione 2 blocos para levar o pássaro até o porco.
      grade1_maze_sequence4: Agora tente este quebra-cabeça do início!
      grade1_maze_sequence5: Mova-me por um caminho, e então por outro para me levar até o porco!
      grade1_maze_sequence6: "Descubra o que está faltando e então adicione blocos\npara me levar até o porco!"
      grade1_maze_sequence8: Analise este nível adicionando blocos para me levar até o porco!
      grade1_maze_sequence9: 'Desvie do TNT para me levar até o porco! '
      grade1_maze_sequenceA: 'Desafio: Me mova em volta da TNT para chegar até o porco.'
      grade1_maze_sequenceB: Corrija os erros para levar o pássaro até o porco.
      grade1_maze_sequenceC: É com você! Leve o pássaro até o porco.
      grade1_maze_sequenceD: Agora vá em qualquer direção para pegar aquele porco!
      grade1_playlab_events1: Este jogo é chamado de "Brincando de Laboratório". Veja se você consegue descobrir o que cada bloco faz.
      grade1_playlab_events1a: Faça seu robô dizer "Olá!" quando o botão é clicado.
      grade1_playlab_events2: Este programa faz Robin voar. Você consegue fazê-la desaparecer quando você clicar nela?
      grade1_playlab_events2a: Edite o código para que quando o segundo pássaro é clicado, seu programa toque um som!
      grade1_playlab_events3: 'Este programa faz Robin voar. Você pode fazer com que o robô pule quando o botão para cima é pressionado?  '
      grade1_playlab_events3a: Quando o terceiro pássaro é clicado, o fundo de tela deveria mudar para uma cidade. Você pode adicionar código para fazer isso acontecer?
      grade1_playlab_events4: Adicione um bloco para fazer Robin desaparecer quando ela colidir com o robô.
      grade1_playlab_events4a: Adicione código para fazer alguma coisa acontecer quando o quarto pássaro é clicado. Seja criativo!
      grade1_playlab_events5: Adicione um bloco para o evento 'quando executar' que inicie o voo do dragão.
      grade1_playlab_events5a: Sobre o Projeto Meu Robô! Escreva código para que ao clicar em cada pássaro seja mostrado um novo fato sobre seu robô.
      grade1_playlab_events6: Adicione um bloco para o evento 'quando ator 1 clicado' que faça o dragão voltar para o meio da tela.
      grade1_playlab_events7: Adicione um bloco de modo que quando você pressiona o botão de seta para a esquerda, o cavaleiro surge em direção ao dragão.
      grade1_playlab_events8: Adicione um bloco de modo que quando o cavaleiro colide com o dragão, toque um som.
      grade1_playlab_events9 RYAN COPY: Agora, faça Robin esperar um segundo, então voltar depois que desaparecer.
      grade1_playlab_events9: Agora, adicione um bloco para contar cada vez que o cavaleiro atinge o dragão.
      grade1_sequence_pre: Brinque com estes blocos pra ver o que eles fazem o pássaro fazer!
      grade1_video_frustrationRainbow: Este vídeo descreve o arco-íris da frustração e introduz persistência.
      grade2_CaringForNewPet_10: Leve-me até o porco!
      grade2_CaringForNewPet_11: '"Mantenha a calma e ajude-me a encontrar aquele porco mau."'
      grade2_CaringForNewPet_2: |-
        "Aquele porco está bagunçando minhas penas."

        Há um bloco extra que fará o pássaro cair. Jogue-o fora arrastando o de volta para a caixa de ferramentas.
      grade2_CaringForNewPet_4: '"Mantenha a calma e me ajude a encontrar o porco malvado. Senão eu posso ficar zangado!"'
      grade2_CaringForNewPet_5: Leve-me até o porco!
      grade2_MakeDogTag_10: Agora desenhe o que você quiser!
      grade2_MakeDogTag_3: |-
        Ajude-me a completar a casa para o gato.
      grade2_MakeDogTag_4: |-
        Essa casa precisa de um telhado! Desenhe o triângulo. Dica: todos os 3 lados têm o mesmo comprimento.
      grade2_MakeDogTag_6: 'Atividade livre! Desenhe o que você quiser.'
      grade2_MakeDogTag_8: "Agora vamos conectar um monte de \"V\"\nem um laço."
      grade2_MakeDogTag_9: "Reconstrua o código do último desafio,\nmas, dessa vez, adicione uma ação de virar à esquerda em 30 graus dentro do laço. Agora repita\na ação 24 vezes, em vez de 8."
      grade2_PuppyLoops_1: Você pode me levar até o porco usando 5 blocos?
      grade2_PuppyLoops_10: |-
        Meu professor diz que eu devo terminar o que
        comecei!\r
        \r
        Ajude-me a terminar meu cata-vento. Você consegue descobrir o que há de errado?
      grade2_PuppyLoops_2: "Você consegue pegar o porco criando um laço que usa\napenas um bloco \"avance\" dentro de um bloco \"repita\"?"
      grade2_PuppyLoops_4: "Neste desafio, dois laços \"repita\" ajudarão você\na pegar o porco com o menor número possível de blocos!"
      grade2_PuppyLoops_5: "Você consegue descobrir a maneira mais rápida de me\nlevar até o porco?"
      grade2_PuppyLoops_7: Use o que você aprendeu para me levar até o girassol!
      grade2_PuppyLoops_8: "O código dos bigodes do gato está errado.\n\\r\n\\r\nCorrija o código para desenhar os bigodes, todos com o mesmo tamanho."
      grade2_PuppyLoops_9: |-
        Parece que o C no código está desenhado ao contrário!\r
        \r
        Você
        consegue fazê-lo parecer com um C de novo?
      grade2_collector_10: Você está quase acabando! Colete o máximo de peças do tesouro que você conseguir para terminar a fase!
      grade2_collector_10_2018: Você está quase acabando! Colete o máximo de peças do tesouro que você conseguir para terminar a fase!
      grade2_collector_10_2019: Você está quase acabando! Colete o máximo de peças do tesouro que você conseguir para terminar a fase!
      grade2_collector_2: Mova Laurel até o ouro, então use `coletar` para pegar.
      grade2_collector_3: Ponha estes blocos em ordem para coletar todo o ouro e resolver o desafio.
      grade2_collector_5: Estes blocos estão na ordem errada. Você pode consertá-los?
      grade2_collector_6: Reordene os blocos para coletar todo o tesouro.
      grade2_collector_9: '*"Vamos pegar todas as moedas!"*'
      grade2_collector_A: Ajude Laurel a coletar todo o tesouro.
      grade2_collector_A_2018: Ajude Laurel a coletar todo o tesouro.
      grade2_collector_A_2019: Ajude Laurel a coletar todo o tesouro.
      grade2_maze_debuggingPre: Brinque com estes blocos pra ver o que eles fazem o pássaro fazer!
      grade2_maze_intro10: Resolva este desafio.
      grade2_maze_intro9: Resolva este desafio.
      grade2_playlab_project_1: "Agora escreva um programa que faça Valfredo\nse mover usando as teclas com as setas para cima / para baixo / à esquerda / à direita, para atingir todos os alvos!"
      grade2_playlab_project_2: O bloco `repita para sempre` permite rodar códigos para várias vezes sempre. Você consegue colocar blocos para mover o dinossauro Chomp (ator 2) para cima ou para baixo para sempre?
      grade2_playlab_project_3: "Você pode fazer Valfredo (personagem 1) dizer\n\"Ai!\" e reproduzir um som de \"batida\" se ele encontrar Chomp? \\r\n\\r\nQuando\nterminar, jogue para que isso aconteça."
      grade2_playlab_project_4: "Você pode adicionar um bloco para marcar um ponto\nquando Valfredo se encontrar com Otávia (personagem 3)? \\r\nJogue e mova Valfredo\ncom as setas do teclado até marcar ponto!"
      grade2_playlab_project_5: |-
        Adicione blocos ao evento "quando correr"
        para mudar o plano de fundo e a velocidade de Valfredo.\r
        \r
        Jogue e
        mova Valfredo com as setas até marcar pontos.
      grade2_puppy_loops2: "Você consegue pegar o porco criando um laço que usa\napenas um bloco \"avance\" dentro de um bloco \"repita\"?"
      grade2_puppy_loops4: "Neste desafio, dois laços \"repita\" ajudarão você\na pegar o porco com o menor número possível de blocos!"
      grade3_AboutMyRobot_1: Faça seu robô dizer "Olá!" quando o botão é clicado.
      grade3_AboutMyRobot_2: Edite o código para que quando o segundo pássaro é clicado, seu programa toque um som!
      grade3_AboutMyRobot_3: Quando o terceiro pássaro é clicado, o fundo de tela deveria mudar para uma cidade. Você pode adicionar código para fazer isso acontecer?
      grade3_AboutMyRobot_4: Adicione código para fazer alguma coisa acontecer quando o quarto pássaro é clicado. Seja criativo!
      grade3_AboutMyRobot_5: Sobre o Projeto Meu Robô! Escreva código para que ao clicar em cada pássaro seja mostrado um novo fato sobre seu robô.
      grade3_ConditionalsElse_1: "Esta nuvem está tapando minha visão! Veja\nse há uma flor atrás da nuvem, e só colete néctar se houver\numa flor. Cuidado, isso pode mudar!"
      grade3_ConditionalsElse_2: "Mais nuvens! \\r\n\\r\nProcure atrás\nde todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r\n\\r\nLembre-se:\nNem todas as nuvens escondem alguma coisa!"
      grade3_ConditionalsElse_3: "Agora só quero produzir mel. Algumas\ndessas nuvens podem ter colmeias atrás delas. Não se esqueça de procurar em todas as nuvens!"
      grade3_ConditionalsElse_4: "Às vezes esta nuvem esconde uma flor\ne outras vezes uma colmeia! Use o bloco \"se/senão\" para coletar néctar\nse for uma flor, senão para produzir mel (porque é uma colmeia)."
      grade3_ConditionalsElse_5: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\r
        \r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\r
        Caso contrário, produza mel (porque há uma colmeia).
      grade3_ConditionalsElse_6: "Não tenho certeza de quanto néctar esta flor\ntem, mas sei que ela tem 1, 2 ou 3 unidades de néctar. \\r\n\\r\nCombine os blocos\ncondicionais (\"se\" e/ou \"se/senão\") para coletar apenas a quantidade de néctar que a flor tiver.\n\\r\n\\r\nLembre-se de que a quantidade de néctar pode mudar a cada vez que você executar o desafio!"
      grade3_ConditionalsElse_7: "Essas flores podem ter 3, 2 ou 1 néctar.\n\\r\n\\r\nComplete a função \"verifique a flor roxa\" e use-a para coletar\ntodo o néctar das flores."
      grade3_ConditionalsElse_8: "Escreva a função \"verifique flor e\nproduza mel\". \\r\n\\r\nSua função deve verificar se a flor roxa tem 3, 2\nou 1 néctar e coletar todo o néctar. \\r\nEntão, avance e produza mel."
      grade3_ConditionalsElse_9: "**Avaliação:** esta nuvem\nesconde uma flor com um néctar ou uma colmeia que precisa de um mel.  \\r\n\\r\nComplete\na função \"colete néctar ou produza mel\" e então, chame-a para coletar o néctar\nou o mel.  \\r\n"
      grade3_ConditionalsElse_TeacherIDo: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\r
        \r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\r
        Caso contrário, produza mel (porque há uma colmeia).
      grade3_Conditionals_1 BAD: Use um laço para coletar todo o néctar.
      grade3_Conditionals_1: "Sou uma abelha faminta! \\r\nAjude-me a coletar\ntodo o néctar das flores usando o menor número possível de blocos."
      grade3_Conditionals_10 BAD: "Colete o néctar das fileiras de flores!\nUse um laço aninhado."
      grade3_Conditionals_10: |-
        Há muita coisa acontecendo por aqui!\r
        \r
        Use
        o que você aprendeu para coletar todo o néctar e, então, produza o mel.
      grade3_Conditionals_11 BAD: "Avaliação: Use um laço \"enquanto\" para\ncoletar todo o néctar dessas flores."
      grade3_Conditionals_11: |-
        Vamos unir todas as informações!\r
        \r
        Use
        o que você aprendeu para me ajudar a coletar néctar apenas das flores que têm
        néctar para oferecer, usando o menor número possível de blocos. Não se esqueça de produzir o mel para terminar.
      grade3_Conditionals_12: "Este padrão de degrau deve ser familiar.  \\r\n\\r\nVocê\nconsegue coletar néctar apenas das flores que têm néctar para oferecer, usando o menor número de\nblocos possível?"
      grade3_Conditionals_13: "Avaliação: Colete todo o\nnéctar. Tenha cuidado para não coletar néctar das flores roxas que\nnão o tiverem."
      grade3_Conditionals_2: "Olhe só todo esse néctar!\\r\n\\r\nAjude-me\na coletar todo o néctar e produzir mel usando o menor número possível de blocos.  "
      grade3_Conditionals_3: "Tenha cuidado para não coletar néctar das\nflores roxas que não o têm. \\r\nPrimeiro, veja se o néctar\né igual a 1 usando o bloco \"se néctar\"."
      grade3_Conditionals_4: "Verifique essa flor com um bloco \"se\"\npara ver se há algum néctar disponível."
      grade3_Conditionals_5: "Colete o néctar de cada flor, apenas se\nela tiver néctar disponível."
      grade3_Conditionals_6: "Este campo tem flores vermelhas e roxas.\nAs flores vermelhas têm uma quantidade de néctar conhecida, mas o néctar das flores roxas é desconhecido.\nColete todo o néctar."
      grade3_Conditionals_7: Colete todo o néctar de cada flor.
      grade3_Conditionals_8: "O que será que tem por aí!\\r\n\\r\nAjude-me\na voar pelo jardim e coletar o néctar apenas das flores que têm\nnéctar para oferecer. "
      grade3_Conditionals_9: "Ajude-me a encontrar todo o néctar usando\no menor número possível de blocos!"
      grade3_Conditionals_TeacherIDo: "Verifique essa flor com um bloco \"se\"\npara ver se há algum néctar disponível."
      grade3_Debugging_1: "Esses blocos estão me incomodando. Corrija o(s)\nerro(s) para coletar todo o néctar."
      grade3_Debugging_5: "Essa flor parece deliciosa! \\r\n\\r\nCorrija o(s)\nerro(s) para coletar todo o néctar. Agora você pode usar os botões \"Executar\" e \"Passo\"."
      grade3_Debugging_6: |-
        Que doce desafio!\r
        \r
        Corrija o(s) erro(s)
        para coletar todo o néctar.
      grade3_Debugging_7: "Corrija o(s) erro(s) para coletar todo o néctar\ne produzir todo o mel."
      grade3_Debugging_9: |-
        Uau, que ferroada!\r
        \r
        Você
        terá que corrigir algumas coisas neste programa para coletar todo o
        néctar e produzir todo o mel.
      grade3_Debugging_TeacherIDo: "Esses blocos estão me incomodando. Corrija o(s)\nerro(s) para coletar todo o néctar e produzir todo o mel."
      grade3_Loops_10: |-
        Que abelha trabalhadora!\r
        \r
        Ajude a abelha a coletar todo o
        néctar e produzir todo o mel com o menor número de blocos possível.
      grade3_Loops_11: "O formato deste caminho é diferente dos\ndemais. \\r\n\\r\nVocê consegue coletar todo o néctar usando o menor número possível de blocos?"
      grade3_Loops_12: "Você consegue encontrar a maneira mais rápida para a abelha\ncoletar todo o néctar e produzir todo o mel?"
      grade3_Loops_2: Desta vez, use um laço para juntar todo o néctar.
      grade3_Loops_3: Use um laço "repita" para coletar todo o néctar.
      grade3_Loops_4: "Agora, use o bloco \"repita\" para coletar todo o\nnéctar e produzir todo o mel."
      grade3_Loops_5: "Que lindo campo florido!  Ajude a\nabelha a visitar cada flor. Você consegue achar uma maneira de fazer isso com menos de 7 blocos?"
      grade3_Loops_6: "Quantas vezes os laços ajudaram você neste desafio?  \\r\n\\r\nOs laços\nsão seus amigos! Use alguns deles para completar este desafio com o menor número\nde blocos possível."
      grade3_Loops_7: |-
        Essas flores parecem deliciosas!\r
        \r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      grade3_Loops_8: "Colete todo o néctar e produza todo o mel\nusando o menor número possível de blocos."
      grade3_Loops_9: "Colete o néctar de cada flor e produza mel\nem cada colmeia usando o menor número possível de blocos."
      grade3_Loops_TeacherIDo: |-
        Essas flores parecem deliciosas!\r
        \r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      grade3_RunningFarm_3: '*"Milho, alface E abóboras! Ajude-me a colher todos eles."*'
      grade3_RunningFarm_4: Ajude o fazendeiro a colher toda a alface em cada pé antes de passar para o próximo grupo.
      grade3_RunningFarm_6: Você consegue descobrir como pegar a abóbora? Certifique-se de recolher todo o milho ao longo do caminho!
      grade3_bee_conditionals_new1a: "Ajude a abelha a recolher todo o néctar. \n\nVocê só pode coletar néctar de flores, mas você pode verificar qualquer espaço para ver se há uma flor."
      grade3_bee_conditionals_new2: Colete todo o néctar usando o menor número de blocos possível
      grade3_bee_conditionals_new2a: Pegue todo o néctar usando o menor número de blocos possível.
      grade3_bee_conditionals_new3b: Colete todo o néctar e faça todo o mel.
      grade3_bee_conditionals_quantum1: Verifique se há uma flor embaixo da nuvem. Se houver uma flor, pegue o néctar.
      grade3_bee_conditionals_quantum2: "Mais nuvens! \\r\n\\r\nProcure atrás\nde todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r\n\\r\nLembre-se:\nNem todas as nuvens escondem alguma coisa!"
      grade3_bee_conditionals_quantum3: Algumas dessas nuvens podem ter favos de mel embaixo delas. Certifique-se de verificar se um favo de mel está se escondendo atrás de cada nuvem!
      grade3_bee_conditionals_quantum4: Use o bloco `se/senão` para coletar o nectar das flores e fazer mel na colmeia.
      grade3_maze_Loop1: "Avaliação: Leve-me até o girassol\nusando apenas 5 blocos! "
      grade3_maze_loops2: "Leve-me até o girassol usando o menor número de blocos\npossível! \\r\n\\r\nUse um laço \"repita\" dentro de outro para diminuir\na quantidade de códigos que você precisa."
      grade3_maze_loops2a: Leve o zumbi até o girassol usando o menor número de blocos possível.
      grade3_maze_loops3: "Vamos subir o nível! \\r\nUse\nlaços para me levar até o girassol com o menor número de laços possível."
      grade3_maze_loops4: "Leve-me até o girassol usando o menor número\npossível de blocos!"
      grade3_maze_loops5: "Leve-me até o girassol usando o menor número possível\nde blocos!"
      grade3_maze_nestedLoops1: Você pode me levar até o porco usando 5 blocos?
      grade3_maze_nestedLoops2: "Você consegue pegar o porco criando um laço que usa\napenas um bloco \"avance\" dentro de um bloco \"repita\"?"
      grade3_maze_nestedLoops3: "Leve-me até o porco! Você só pode usar um bloco\n\"avance\" desta vez"
      grade3_maze_nestedLoops4: "Neste desafio, dois laços \"repita\" ajudarão você\na pegar o porco com o menor número possível de blocos!"
      grade3_robotFarmer_ConditionalsIntro4: Ajude o fazendeiro a remover essa pilha inteira usando um laço `while`.
      grade3_robotFarmer_ConditionalsIntro_10: Estou trabalhando até tarde, então está escuro, e eu não sei o tamanho desses montes de terra. Agora, eu não tenho todas as opções que eu costumava ter com o bloco "enquanto". Mova-me ao longo do campo e, se houver um monte de terra, remova-o
      grade3_robotFarmer_ConditionalsIntro_10a: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      grade3_robotFarmer_ConditionalsIntro_11: 'Ainda está escuro lá fora. Mova-me ao longo do terreno. Se houver um monte de terra, remova-o, e se houver um buraco, preencha-o. Dica: use o menu de opções no bloco "se".'
      grade3_robotFarmer_ConditionalsIntro_11a: 'Achate todas essas pilhas usando o menor número de blocos possível. '
      grade3_robotFarmer_ConditionalsIntro_5: 'Ajude-me a remover toda esta areia. '
      grade3_robotFarmer_ConditionalsIntro_6: Remova todas as pilhas de terra usando o menor número de blocos possível. As novas opções de menu no bloco "enquanto" mostram se eu estou em uma pilha de terra ou em um buraco.
      grade3_robotFarmer_ConditionalsIntro_8: Preencha o buraco no final de cada um desses caminhos.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1: 'Ajude-me a encher todos esses buracos com 5 pás de terra. Dica: você pode usar um bloco "repita" dentro de um bloco "enquanto".'
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2: Estou trabalhando até tarde, então está escuro, e eu não sei o tamanho desses montes de terra. Agora, eu não tenho todas as opções que eu costumava ter com o bloco "enquanto". Mova-me ao longo do campo e, se houver um monte de terra, remova-o
      grade4_arist_nested_loop_circles1: "Avaliação: use um laço aninhado para\ncompletar o desenho."
      grade4_arist_nested_loop_flags1: Repita o código dado para criar um moinho de vento.
      grade4_arist_nested_loop_polygons1: "Repita esse desenho 10 vezes. \\r\n\\r\nQuanto\nvocê precisa virar a cada repetição?"
      grade4_arist_nested_loop_polygons2: "Repita essa forma 6 vezes. \\r\n\\r\nQuanto\nvocê precisa virar a cada repetição? "
      grade4_arist_nested_loop_squares1: "Você pode desenhar esses 10 quadrados dessa\ncalçada usando um laço aninhado? Cada quadrado tem 30 pixels."
      grade4_arist_nested_loop_triangles2: "Agora, aninhe esse laço dentro de outro laço para\ndesenhar 10 triângulos. Isso se chama laço \"aninhado\".  "
      grade4_arist_nested_loop_triangles3: "Você pode desenhar um hexágono repetindo o\ncódigo do triângulo?"
      grade4_arist_nested_loop_triangles4: Desenhe o dente na boca do crocodilo!
      grade4_arist_nested_loop_triangles5: |-
        Crie um sol aninhando o código inicial em
        outro laço.\r
        \r
        Para conseguir este desenho legal com um centro vazio, você terá que
        dar um pulo para a frente do tamanho do triângulo antes de virar.
      grade4_arist_nested_loop_triangles6: "Você pode desenhar esses 36 triângulos usando\num laço aninhado?"
      grade4_artist_functions1: "\"Olá! Eu sou um artista zumbi. Eu amo desenhar!\"  \\r\n\\r\nAjude\no zumbi a desenhar óculos usando quadrados com lados de 100 pixels de comprimento.  \\r\n\\r\nA\nhaste entre as lentes tem 75 pixels de comprimento."
      grade4_artist_functions2: "As funções permitem que você defina novos blocos! \\r\n\\r\nMovemos\nos blocos necessários para desenhar um quadrado para dentro de uma função chamada \"desenhe\num quadrado\". Desta vez, use a função \"desenhe um quadrado\" para criar os óculos.\n\\r\n\\r\nOs quadrados estão separados por uma distância de 75 pixels."
      grade4_artist_functions_challenge: "Use as funções sugeridas para desenhar quatro\nlinhas de hexágonos. Você percebeu como nossas linhas numeradas são deslocadas para a direita?"
      grade4_artist_functions_challenge2: "Use as funções sugeridas para desenhar quatro\nlinhas de hexágonos. Você percebeu como nossas linhas numeradas são deslocadas para a direita?"
      grade4_artist_functions_stars1: Agora que você consegue desenhar uma estrela, tente desenhar quatro estrelas!
      grade4_artist_functions_stars2: Desenhe apenas estas três estrelas para terminar este quebra-cabeça.
      grade4_artist_nestedLoops_challenge: |-
        Clique aqui para ver as instruções completas novamente!\r
        \r
        Apresentamos
        aqui um código para uma forma interessante. O que acontece quando você o repete várias
        vezes, virando a cada repetição? Observe que as viradas nessa forma
        somam 420 graus, o que significa que quando seu artista terminar de desenhar,
        ele estará de frente para uma direção diferente do que quando você começou. Essa nova direção
        é exatamente 60 graus à direita de onde você iniciou.
      grade4_artist_nestedLoops_challenge2: "Agora um desafio! Fique à vontade para usar tentativa\ne erro. Não esperamos que você seja perfeito na primeira vez. Quer\nver mais dicas? Clique aqui!"
      grade4_artist_nested_loop_circles1: "Avaliação: use um laço aninhado para\ncompletar o desenho."
      grade4_artist_nested_loop_flags1: Repita o código dado para criar um moinho de vento.
      grade4_artist_nested_loop_polygons1: "Repita esse desenho 10 vezes. \\r\n\\r\nQuanto\nvocê precisa virar a cada repetição?"
      grade4_artist_nested_loop_squares1: "Você pode desenhar esses 10 quadrados dessa\ncalçada usando um laço aninhado? Cada quadrado tem 30 pixels."
      grade4_artist_nested_loop_triangles1: "Complete o código para desenhar esses triângulos. O\nprimeiro está pronto para você. Dica: 3 triângulos em uma rotação de 360 graus."
      grade4_artist_nested_loop_triangles5: |-
        Crie um sol aninhando o código inicial em
        outro laço.\r
        \r
        Para conseguir este desenho legal com um centro vazio, você terá que
        dar um pulo para a frente do tamanho do triângulo antes de virar.
      grade4_artist_nested_loop_triangles6: "Você pode desenhar esses 36 triângulos usando\num laço aninhado?"
      grade4_artist_parameters_squares1: "Clique em \"editar\" para preencher a definição\nda função \"desenhe um quadrado\" e adicionar um parâmetro. Ela deve receber um parâmetro\ncomprimento, como no triângulo. Dessa vez, desenhe 3 quadrados: 25, 50 e 75\npixels de comprimento e separados por 100 pixels cada."
      grade4_artist_parameters_triangles2: "Você percebe algo diferente\nsobre esses blocos de função? Clique em \"Executar\" para ver o que acontece."
      grade4_artist_parameters_triangles2b: "Você consegue completar este desenho? Os\nlados de cada triângulo têm 25 pixels a mais que o anterior. O primeiro triângulo\ntem lados de 25 pixels de comprimento."
      grade4_artist_parameters_triangles3: "Você consegue completar este desenho? Os\nlados de cada triângulo têm 25 pixels a mais que o anterior. O primeiro triângulo\ntem lados de 25 pixels de comprimento."
      grade4_artist_parameters_triangles4: "O código da função deste triângulo\nestá corrompido. Você consegue editar a função para corrigi-lo e criar triângulos\nde 25, 50 e 75 pixels de comprimento?"
      grade4_artist_parameters_trianglesx: "Você consegue completar este desenho? Os\nlados de cada triângulo têm 25 pixels a mais que o anterior. O primeiro triângulo\ntem lados de 25 pixels de comprimento."
      grade4_bee_conditionals_quantum1: "Esta nuvem está tapando minha visão! Veja\nse há uma flor atrás da nuvem, e só colete néctar se houver\numa flor. Cuidado, isso pode mudar!"
      grade4_bee_conditionals_quantum2: "Mais nuvens! \\r\n\\r\nProcure atrás\nde todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r\n\\r\nLembre-se:\nNem todas as nuvens escondem alguma coisa!"
      grade4_bee_conditionals_quantum4: "Às vezes esta nuvem esconde uma flor\ne outras vezes uma colmeia! Use o bloco \"se/senão\" para coletar néctar\nse for uma flor, senão para produzir mel (porque é uma colmeia)."
      grade4_bee_conditionals_quantum5: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\r
        \r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\r
        Caso contrário, produza mel (porque há uma colmeia).
      grade4_bee_functions1: Colete todo o néctar de cada flor.
      grade4_bee_functions2: "Funções são blocos de código que realizam\numa tarefa. Use a função \"obtenha 2 néctares\" para coletar o néctar de cada\nflor."
      grade4_bee_functions3: "As funções são blocos de código que realizam\numa tarefa. \\r\n\\r\nUse a função \"obtenha 5\" para obter 5 néctares por vez."
      grade4_bee_functions4: "A função \"mova e obtenha néctar\" vira\na abelha, coleta néctar, e então retorna a abelha para onde ela começou. \\r\n\\r\nUse\na função para coletar todo o néctar."
      grade4_bee_nestedLoops0: Use um laço para coletar todo o néctar.
      grade4_bee_nestedLoops1: "Colete todo o néctar de cada flor.\nUse um laço aninhado. "
      grade4_bee_nestedLoops2a: Colete todo o néctar usando o menor número possível de blocos.
      grade4_bee_nestedLoops3: "Colete todo o néctar criando\num laço aninhado."
      grade4_bee_nestedLoops4: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\r\n\\r\nUse um laço aninhado. "
      grade4_frozen_freeplay: "Você se tornou oficialmente um artista mestre!\nCrie um país das maravilhas de gelo."
      grade4_frozen_functions0: Você consegue descobrir qual número precisa usar para substituir os pontos de interrogação e desenhar um círculo?
      grade4_frozen_functions1a: "Use o novo bloco \"crie um círculo\" para\ncriar 10 círculos sobrepostos. Não se esqueça de avançar entre os círculos."
      grade4_frozen_functions2: "Agora vamos criar 20 círculos\nsobrepostos, virando 18 graus entre cada círculo."
      grade4_frozen_functions3: "Temos aqui um bloco \"crie um círculo\"\nque pode fazer círculos de tamanhos diferentes. Você pode usar isso para criar\num pequeno círculo de tamanho 5 e um círculo maior de tamanho 10?"
      grade4_frozen_functions4: "Padrões de neve complexos podem ser criados com\nformas muito simples. Você pode criar um padrão repetindo 5 círculos de tamanho\n5 e 5 círculos de tamanho 10?"
      grade4_frozen_nested_loop_diamonds2: "Você sabia que cada floco de neve\ntem uma forma diferente? Vamos criar um novo floco de neve usando o bloco \"Repita\"\npara repetir um paralelogramo 4 vezes, virando 90 graus à direita entre\ncada paralelogramo."
      grade4_frozen_nested_loop_diamonds3: "Agora, vamos criar um novo floco de neve\nusando o bloco repita para repetir um paralelogramo 10 vezes, virando 36 graus\nà direita entre cada um."
      grade4_frozen_square: "Oi, eu sou Anna de Arendelle! Vamos fazer um quadrado\ncom o bloco \"repita\", que usa menos blocos. Quantas vezes (???) o bloco\n\"repita\" deve repetir os blocos dentro dele para fazer um quadrado?"
      grade4_frozen_square_loop1: "Oi, eu sou Anna de Arendelle! Vamos fazer um quadrado\ncom o bloco \"repita\", que usa menos blocos. Quantas vezes (???) o bloco\n\"repita\" deve repetir os blocos dentro dele para fazer um quadrado?"
      grade4_frozen_square_loop2: "Vamos criar três quadrados, virando depois\nde cada quadrado. Lembre-se de virar 120 graus antes de cada novo quadrado."
      grade4_frozen_square_loop3: "Você consegue criar um floco de neve usando o bloco\n\"repita\" para criar um quadrado 10 vezes e o bloco \"vire\" para virar 36\ngraus entre cada quadrado?"
      grade4_playLab_proj_example1: instruções
      grade4_playlab_freeplay: "É hora da atividade livre! Divirta-se\ncom todos os blocos da sua caixa de ferramentas. "
      grade4_playlab_test: |-
        Use a seta para a direita para atirar tortas.\r
        \r
        Em
        nosso jogo, como podemos marcar pontos? Adicione 1 à variável "pontos" toda
        vez que o cão atingir o gato com um pedaço de torta. Use o evento "quando o personagem 2 tocar em alguma coisa"
        para acionar uma atualização em sua pontuação. Você pode incrementar sua variável
        definindo "pontos = pontos + 1". Aumente sua pontuação até 10 (um ponto
        de cada vez!) para passar de nível.
      grade4_playlab_test2: "Aqui temos uma função chamada \"pule\"\nque faz seu personagem principal pular 100 pixels. Execute o programa e use\na função \"pule\" para coletar todas as bandeiras movendo o cachorro com as setas\ndo teclado."
      grade4_review_artist1: Oi, eu sou um artista. Você pode escrever códigos para me fazer desenhar quase qualquer coisa. Use alguns blocos para me fazer desenhar sobre as linhas cinzas na imagem. (Cada linha tem o comprimento de 100 pixels)
      grade4_review_artist2: 'Essa casa precisa de um telhado! Desenhe o triângulo. Dica: todos os 3 lados têm o mesmo comprimento.'
      grade4_review_artist3: "O bloco \"pule\" move o artista sem desenhar.\nDesenhe a linha tracejada usando os blocos \"pule para a frente\" e \"avance\".\nCada linha tem 50 pixels de comprimento."
      grade4_review_bee1: "Agora, use o bloco \"repita\" para coletar todo o\nnéctar e produzir todo o mel."
      grade4_review_bee2: "Colete o néctar de cada flor e produza mel\nem cada colmeia usando o menor número possível de blocos."
      grade4_review_bee3: |-
        Que abelha trabalhadora!\r
        \r
        Ajude a abelha a coletar todo o
        néctar e produzir todo o mel com o menor número de blocos possível.
      grade4_scaffolded_project1: É incrível o quanto você aprendeu! Vamos juntar tudo para fazer um jogo, passo a passo.
      grade5_artist_binary1: "Binário é uma forma de representar informações\nusando apenas duas opções. Aqui, vamos usar as opções \"desligado\" (representada\npelo número 0) e \"ligado\" (representada pelo número 1).  \\r\n\\r\nFoi fornecida\numa grade de \"pixels\" pela qual você pode andar e criar\ndesigns virando em certos quadrados. Você consegue fazer o artista desenhar\n\"01010101\" em binário na primeira fileira?"
      grade5_artist_binary10: Clique aqui para ver algumas dicas.
      grade5_artist_binary11: "Atividade livre: aqui temos uma tela em branco\npara você desenhar. Divirta-se!"
      grade5_artist_binary2: "Temos aqui uma função que recebe uma string\nbinária de 1's e 0's e instrui o artista a mover-se da esquerda para\na direita, de cima para baixo. O artista vai preencher os quadrados nos quais vir um 1 e ignorar\nos que tiverem um 0.\\r\n\\r\nExecute este código para ver como\no artista usa números binários para desenhar este padrão."
      grade5_artist_binary3: "Qual dessas strings binárias você poderia\nrepetir 8 vezes para desenhar esta imagem?"
      grade5_artist_binary4: "Você consegue desenhar este padrão repetindo\napenas três dígitos binários? (0 e 1)?"
      grade5_artist_binary5: "Cada string binária representa uma linha dessa\nimagem. Você consegue reorganizá-las de forma que elas desenhem um rostinho feliz\nao invés de um rostinho triste?"
      grade5_artist_binary6: "Que string binária de 6 dígitos, repetida\n11 vezes, vai desenhar essa imagem?"
      grade5_artist_binary7: "Qual é a menor string binária que você\npode repetir para desenhar esta imagem?"
      grade5_artist_binary8: Termine o desenho.
      grade5_artist_binary9: |-
        Temos aqui uma tela de maior
        resolução para desenhar - 16 pixels por 16 pixels!\r
        \r
        Você viu o que acontece quando
        começamos ser criativos com os bits?
      grade5_artist_for_loops1: "Use um bloco \"repita\" para desenhar este triângulo\nque tem 50 pixels de largura."
      grade5_artist_for_loops10: |-
        Você consegue descobrir como
        usar todas as coisas que você aprendeu para criar esta imagem?\r
        \r
        Precisa de uma
        dica? Clique aqui.
      grade5_artist_for_loops5: |-
        Apenas uma pequena alteração no código
        da última imagem pode criar este desenho. Você consegue descobrir qual é
        essa alteração?\r
        \r
        Dica: algo precisa ser removido!
      grade5_artist_for_loops6: "Se você virar um pouco mais ou\num pouco menos do que normalmente faria para uma forma, você conseguirá um efeito legal. Tente\nusar algum código do último nível, mas virando 89 graus para criar\nesta espiral quadrada retorcida."
      grade5_artist_for_loops7: "Faça três pequenas alterações no\ncódigo do último nível para conseguir isso!"
      grade5_artist_for_loops8: "Você se lembra de quando usamos\numa variável para controlar o número de lados de uma forma em uma fase anterior? Faremos\na mesma coisa com a variável \"contador\" agora. Esse padrão começa\ncom um triângulo e adiciona um lado de cada vez até que seja desenhado um decágono (10 lados).\nCada lado deve ter 100 pixels de comprimento. "
      grade5_artist_for_loops9: |-
        Vamos juntar tudo!  Usando
        seu conhecimento sobre laços "para" e sobre variável "contador", crie este desenho
        no qual cada forma tem dois lados a mais que a anterior. Garanta que cada lado
        seja 10 vezes maior que o número de lados do polígono.\r
        \r
        Apenas uma pequena parte
        do código foi fornecida para você.
      grade5_artist_for_loopsfreeplay11: |-
        Atividade livre - Inspiração: agora você
        aprendeu tudo o que precisa saber para criar um padrão como esse! Se essa
        imagem inspira você, tente fazer algo similar. Caso contrário, crie algo
        você mesmo.\r
        \r
        Precisa de uma dica? Clique aqui.
      grade5_artist_functionparameters10: "Atividade livre - Inspiração: agora você\naprendeu tudo o que precisa saber para criar um padrão como esse! Se essa\nimagem inspira você, tente fazer algo similar. Caso contrário, crie algo\nvocê mesmo.\\r\n \\r\nQuer saber como nosso padrão de inspiração foi feito? "
      grade5_artist_functionparameters11: "Atividade livre: aqui estão as funções\nque você escreveu e mais algumas para você usar. Desenhe algo incrível!\nBrinque com a largura da caneta para ver como seus desenhos ficam diferentes!"
      grade5_artist_functionparameters7: "Esta imagem é semelhante à anterior.\nVocê consegue usar um laço \"para\" com sua função para criar deste desenho?"
      grade5_artist_functionparameters8: "Vamos editar a função \"desenhe um\npolígono\". Ela já tem um parâmetro \"lados\". Agora, vamos adicionar um parâmetro\n\"comprimento\". \\r \nO perímetro de cada forma tem 200 pixels de comprimento. Você se lembra\nda equação para fazer as formas ficarem do mesmo tamanho quando elas têm um número diferente\nde lados?"
      grade5_artist_functionparameters_6: |-
        Você consegue completar esse desenho?
        Os lados de todas as formas têm 100 pixels de comprimento.
      grade5_artist_parameters_squares1: "Clique em \"editar\" para preencher a definição\nda função \"desenhe um quadrado\" e adicionar um parâmetro. Ela deve receber um parâmetro\ncomprimento, como no triângulo. Dessa vez, desenhe 3 quadrados: 25, 50 e 75\npixels de comprimento e separados por 100 pixels cada."
      grade5_artist_parameters_triangles2a: "Você percebe algo diferente\nsobre esses blocos de função? Clique em \"Executar\" para ver o que acontece."
      grade5_artist_parameters_triangles4: "O código da função deste triângulo\nestá corrompido. Você consegue editar a função para corrigi-lo e criar triângulos\nde 25, 50 e 75 pixels de comprimento?"
      grade5_artist_variables_freeplay10: "Atividade livre: Brinque com o número\nde lados desta forma. Você consegue alterar o algoritmo para que o tamanho geral\nda forma permaneça o mesmo, independentemente do número de lados? Dica: Se\nvocê dividir seu comprimento inicial pelo número de lados, o comprimento de cada\nlado ficará menor à medida que o número de lados crescer."
      grade5_artist_variables_freeplay14: |-
        Atividade livre: Veja só! Agora seu algoritmo
        está aninhado dentro de mais um laço. Experimente alterar os valores das
        suas duas variáveis para desenhar padrões legais.\r
        \r
        Para conseguir mais efeito, experimente brincar com
        as cores! Use cores aleatórias dentro dos laços para ver como isso muda seu design.
      grade5_artist_variables_freeplay15: |-
        Quer ver o design de inspiração ou as
        dicas? Clique aqui!\r
        \r
        Caso contrário, crie um design você mesmo!
      grade5_artist_variables_freeplay16: "Ainda jogando?  Temos aqui uma tela em branco na qual\nvocê pode criar o que quiser!"
      grade5_artist_variables_hexagons1: "Vamos tentar de novo! \\r\n\\r\nVocê consegue\ndefinir a variável \"comprimento\" em 60 para fazer este design bacana com hexágonos?"
      grade5_artist_variables_letterT11: "Este é um código mais complicando com os mesmos conceitos que usamos\nno último desafio - qual deve ser o valor atribuído à variável \"lados\"\npara desenhar essa imagem de quadrados?"
      grade5_artist_variables_octagons13: "Quando uma forma tem muitos lados, cada\nlado deve ser menor se você quiser que todo o padrão caiba na tela.\n\\r\nVamos recriar o algoritmo para este padrão incrível, mas, em vez de\ndefinir manualmente a variável \"comprimento\", vamos usar um bloco de matemática com\na variável \"lados\" dentro para nos certificar de que cada forma se encaixe corretamente. O\nperímetro de cada polígono é de 300 pixels.\\r\nPrecisa de dicas? Clique aqui."
      grade5_artist_variables_pentagon8: |-
        Use o que você aprendeu no último desafio
        para criar esse hexágono usando a variável "lados".\r
        \r
        Percebe como você pode
        alterar apenas um valor para desenhar um triângulo, um quadrado, um pentágono ou um octógono?
      grade5_artist_variables_pentagon9: "Agora, recrie o algoritmo do último\nnível para criar um pentágono de lados 150."
      grade5_artist_variables_pentagons1: "Desenhe esse padrão de pentágonos com\nlados de 100 pixels definindo o valor correto para \"comprimento\" e colocando a variável\n\"comprimento\" em todos os lugares corretos. \\r\n\\r\nVocê percebeu que só precisa\ndefinir o valor de \"comprimento\" uma vez, e o código usa o valor correto em todos os lugares?"
      grade5_artist_variables_pentagons12: "Vamos definir a variável \"lados\" como\n5. Quanto mais lados adicionarmos a esse algoritmo, maior será o\npadrão! Observe que existe uma nova variável chamada \"comprimento\". Agora podemos usá-la onde há\num bloco \"avance\". Para essa forma, defina a variável \"comprimento\" como 75."
      grade5_artist_variables_rectangle6: "Agora eu quero fazer um retângulo que tenha\na altura duas vezes maior que a largura. Temos uma variável chamada \"largura\" que\ndeve ser definida como 100. Você pode usar os blocos matemáticos para completar o código?"
      grade5_artist_variables_square7: |-
        Temos aqui um código que pode desenhar qualquer polígono
        regular. Há uma nova variável chamada lados que está definida como 4. Você consegue usar
        a variável lados (junto com o bloco matemático) para virar a quantidade certa independentemente
        de quantos lados o polígono tem?\r
        \r
        Clique aqui para voltar para
        a dica!
      grade5_artist_variables_triangles2: "Ao invés de usar \"avance por 150,\"\no bloco \"mova\" está referenciando agora uma variável chamada \"comprimento.\" Você consegue\ndefinir \"comprimento\" como150 para desenhar esse novo triângulo?"
      grade5_artist_variables_triangles3: "Arraste um bloco numérico para os blocos \"defina\no comprimento\" e \"repita_vezes\" para desenhar um conjunto de triângulos de 50 pixels.\n"
      grade5_bee_for_loops1: "Use um laço para coletar o néctar de\ntodas as flores."
      grade5_bee_for_loops2: "Adicione o código necessário para garantir que\na abelha colete todo o néctar. Olhe quanto código você precisa para esse desafio!\n(Vamos aprender uma maneira mais simples no próximo desafio)."
      grade5_bee_for_loops4: Ajude a abelha a coletar todo o nectar.
      grade5_bee_for_loops6: "Você também pode usar um laço \"para\" para fazer contagem\nregressiva. Tente coletar esse néctar fazendo uma contagem regressiva de 5 até 1, de 1 em 1."
      grade5_bee_for_loops8: "Você conseguiu! Qual deve ser seu\nincremento para coletar 3, 6, 9, 12, 15 néctares?"
      grade5_playlab_freeplay: "É hora da atividade livre! Divirta-se\ncom todos os blocos da sua caixa de ferramentas. "
      grade5_playlab_variables1: "Desta vez você não precisa escrever código algum, apenas\nclique em \"Executar\" para jogar! Nesse jogo, você é o cão que está tentando\ncoletar mais bandeiras do que o gato. Use a seta para baixo para controlar o cão.\nPressione \"Terminar\" quando você terminar de jogar."
      grade5_playlab_variables10: "Edite a função chamada \"patrulhe\" para\nadicionar um parâmetro \"personagem\", assim podemos chamá-la para todos os personagens\nda tela. Lembre-se, os personagens correspondem aos números 1, 2 e 3."
      grade5_playlab_variables11: "Adicione outro parâmetro chamado \"velocidade\"\nà função \"patrulhe\". Tente usar um bloco \"defina velocidade\" com o novo parâmetro \"velocidade\"\npara ajudar o Pinguim a pegar as duas bandeiras antes que os outros personagens peguem\numa."
      grade5_playlab_variables12: "Vamos nos divertir! Analise o\ncódigo fornecido para ver se você consegue descobrir o que cada bloco faz.  \\r\nQuando\nterminar, use as setas do teclado para controlar o cão e coletar todas as bandeiras.\\r\nOBSERVAÇÃO:\nVocê não precisa fazer nenhuma alteração no programa"
      grade5_playlab_variables13: "Use o bloco \"quando o personagem tocar\"\npara enviar o cão de volta para a parte superior esquerda SOMENTE se ele tocar em qualquer outro personagem."
      grade5_playlab_variables14: "É hora da atividade livre! Divirta-se\ncom todos os blocos da sua caixa de ferramentas. "
      grade5_playlab_variables2: "A corrida do último desafio não foi\nmuito justa! Altere a variável \"velocidade_cão\" para garantir que você possa coletar mais\nbandeiras do que o gato. O primeiro a coletar 10 bandeiras vence!"
      grade5_playlab_variables3: "Use as setas para a esquerda e para a direita para se mover,\ne a seta para cima para pular. Veja se você consegue coletar todas as bandeiras."
      grade5_playlab_variables4: "Agora estamos usando uma variável chamada \"altura\"\npara controlar a altura que o cão pode pular. Atualize a variável \"altura\" para que\no cão possa pular alto o suficiente para alcançar todas as bandeiras."
      grade5_playlab_variables6: |-
        Use a seta para a direita para atirar tortas.\r
        \r
        Em
        nosso jogo, como podemos marcar pontos? Adicione 1 à variável "pontos" toda
        vez que o cão atingir o gato com um pedaço de torta. Use o evento "quando o personagem 2 tocar em alguma coisa"
        para acionar uma atualização em sua pontuação. Você pode incrementar sua variável
        definindo "pontos = pontos + 1". Aumente sua pontuação até 10 (um ponto
        de cada vez!) para passar de nível.
      grade5_playlab_variables7: "Legal, agora vamos garantir que esse jogo\nnão seja muito fácil. Sempre que o cão (personagem 1) for atingido por um sanduíche\ndo gato (personagem 2), você deve perder um ponto. Comece com 10 pontos para que\no jogo não seja muito difícil. Faça sua pontuação cair de 10 para 0 para passar de nível."
      grade5_playlab_variables71: "Temos aqui nosso jogo de uma fase anterior,\nmas a maior parte do código está oculta. Há uma nova função chamada \"marcar_pontos\".\\r\n\\r\nEdite\na função para que um novo parâmetro \"pontos\" seja adicionado à variável \"pontos_jogador\".\n\\r\n\\r\nA variável \"pontos_jogador\" deve aumentar toda vez que o cão atingir o gato\ncom uma torta e diminuir toda vez que o gato atingir o cão com um sanduíche.\\r\n\\r\nObservação:\nQuando terminar, clique em \"Executar\" para jogar. Quando o cão marcar 6 pontos, você\nvai para o próximo desafio. "
      grade5_playlab_variables81: "Adicionamos uma última função para\nvocê.\\r\n\\r\nUse uma instrução \"se\" para que seu jogo chame a função \"suba de nível\"\nsomente quando \"pontos_jogador\" for maior que um determinado número.\\r\n\\r\nPor\nexemplo: \"pontos_jogador\" > 6\\r\n\\r\nJogue e chegue até o nível 3\npara ir para o próximo desafio. "
      grade5_playlab_variables9: "Aqui temos uma função chamada \"patrulhe\".\n\\r\n\\r\nEdite-a para mover o gato 400 pixels para cima, e então 400 pixels para baixo."
      grade5_playlab_variables_freeplay: "Hora da atividade livre! Temos aqui todas as\nvariáveis que usamos até agora essa etapa, bem como algumas a mais caso\nvocê queira usá-las. \\r\n\\r\nObserve que agora há muitos blocos em nossa\ncaixa de ferramentas e eles precisam ser organizados! Aqui, colocamos cada peça em\numa categoria apropriada. Reserve um tempo para explorar tudo o que está disponível.\nQuando terminar de explorar, crie um jogo ou uma história usando repetições, variáveis\ne eventos.  \\r\n\\r\nDica: deslize a tela para baixo para ver todos os comandos na área de trabalho."
      gradek_artist_loops1: Ajude o artista a desenhar esta linha duas vezes mais rápido.
      gradek_artist_loops3: Agora, use o laço `repetir` para desenhar esta linha cinco vezes!
      gradek_artist_loopsPre: Este é um novo tipo de quebra-cabeça chamado "Artista". Brinque com o nível e desenhe algo divertido.
      gradek_playlab_events1: Faça seu robô dizer "Olá!" quando o botão é clicado.
      gradek_playlab_events2: Edite o código para que quando o segundo pássaro é clicado, seu programa toque um som!
      gradek_playlab_events3: Quando o terceiro pássaro é clicado, o fundo de tela deveria mudar para uma cidade. Você pode adicionar código para fazer isso acontecer?
      gradek_playlab_events3a: Quando o terceiro pássaro é clicado, o fundo de tela deveria mudar para uma cidade. Você pode adicionar código para fazer isso acontecer?
      gradek_playlab_events4: Adicione código para fazer alguma coisa acontecer quando o quarto pássaro é clicado. Seja criativo!
      gradek_playlab_events5: Sobre o Projeto Meu Robô! Escreva código para que ao clicar em cada pássaro seja mostrado um novo fato sobre seu robô.
      gradek_playlab_events5a: Sobre o Projeto Meu Robô! Escreva código para que ao clicar em cada pássaro seja mostrado um novo fato sobre seu robô.
      group test: Faça um jogo
      iceAgeLoopsforVideo: Você consegue chegar à bolota com apenas um bloco `avançar`?
      k-1 maze 1: Você pode me mover para o oeste para chegar até o porco?
      level 'grade3_Loops_10: |-
        Que abelha trabalhadora!\r
        \r
        Ajude a abelha a coletar todo o
        néctar e produzir todo o mel com o menor número de blocos possível.
      level 'grade3_Loops_11: "O formato deste caminho é diferente dos\ndemais. \\r\n\\r\nVocê consegue coletar todo o néctar usando o menor número possível de blocos?"
      level 'grade3_Loops_12: "Você consegue encontrar a maneira mais rápida para a abelha\ncoletar todo o néctar e produzir todo o mel?"
      level 'grade3_Loops_2: Desta vez, use um laço para juntar todo o néctar.
      level 'grade3_Loops_3: Use um laço "repita" para coletar todo o néctar.
      level 'grade3_Loops_4: "Agora, use o bloco \"repita\" para coletar todo o\nnéctar e produzir todo o mel."
      level 'grade3_Loops_5: "Que lindo campo florido!  Ajude a\nabelha a visitar cada flor. Você consegue achar uma maneira de fazer isso com menos de 7 blocos?"
      level 'grade3_Loops_6: "Quantas vezes os laços ajudaram você neste desafio?  \\r\n\\r\nOs laços\nsão seus amigos! Use alguns deles para completar este desafio com o menor número\nde blocos possível."
      level 'grade3_Loops_7: |-
        Essas flores parecem deliciosas!\r
        \r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      level 'grade3_Loops_8: "Colete todo o néctar e produza todo o mel\nusando o menor número possível de blocos."
      level 'grade3_Loops_9: "Colete o néctar de cada flor e produza mel\nem cada colmeia usando o menor número possível de blocos."
      level grade3_Loops_2: Desta vez, use um laço para juntar todo o néctar.
      love_spring_1: Vamos celebrar a Primavera. Nós colocamos algumas sementes no chão para preparar para a estação das flores. Você consegue cobrir todas elas, para que os pássaros não as comam?
      marina_gameLab_play: Clone este nível e faça seus próprios blocos!
      mike3bit: Vamos começar com você com a imagem 4x2 que Maddie estava criando, más deixamos de fora alguns pixels. Termine a imagem descobrindo quais estão faltando e os codifique.
      playEventsK1: Este jogo é chamado de "Brincando de Laboratório". Veja se você consegue descobrir o que cada bloco faz.
      ramp_artist_loops9: Resolva este enigma desenhando um quadrado.
      ramp_artist_loops9_2018: Resolva este enigma desenhando um quadrado.
      ramp_artist_loops9_2019: Resolva este enigma desenhando um quadrado.
      scrat 16 (copy 1): "Bolota! Bolota! Bolota! Use um bloco \"se\" para me levar até lá\ncom o menor número de blocos."
      scrat 16: "Bolota! Bolota! Bolota! Use um bloco \"se\" para me levar até lá\ncom o menor número de blocos."
      scrat 17: "Ok, vamos fazer novamente para pegar a prática - este não é\nmuito diferente, mas cuidado com a parede!"
      scrat 18 (copy 1): "Os blocos \"se-senão\" verificam uma condição e, em seguida,\nfazem uma coisa OU outra. Para que eu chegue até a bolota, tente usar este novo bloco."
      scrat 18: "Os blocos \"se-senão\" verificam uma condição e, em seguida,\nfazem uma coisa OU outra. Para que eu chegue até a bolota, tente usar este novo bloco."
      scrat 19 (copy 1): "Vamos praticar o uso do bloco \"se-senão\" mais uma vez. Você consegue\nacertar na primeira tentativa?"
      scrat 19: "Vamos praticar o uso do bloco \"se-senão\" mais uma vez. Você consegue\nacertar na primeira tentativa?"
      scrat 20: "Você consegue adicionar somente 3 blocos para me ajudar a resolver um labirinto mais\ncomplexo? Se você fizer isso corretamente, eu posso percorrer qualquer caminho cheio de curvas,\nnão importa o comprimento. Depressa! O gelo está derretendo!"
      skratDebugVideo1: Leve Scrat até a noz.
      subgoal U3L2 Using Simple Commands: "Desenhe um quadrado usando apenas avance\ne vireEsquerda.  O quadrado deve ser desenhado acima e à esquerda da posição\ninicial da tartaruga."
      subgoalU3L2_TurtleSquare_right: "Desenhe um quadrado usando apenas avance\ne vireEsquerda, mas, desta vez, faça o quadrado aparecer ACIMA e À DIREITA\nda posição inicial."
      u3-old-drawing-view: FAÇA isso
      valentine_artist_03: Agora tente algo você mesmo!
      weird_playLab: Sobre o Projeto Meu Robô! Escreva código para que ao clicar em cada pássaro seja mostrado um novo fato sobre seu robô.
