pt-BR:
  data:
    game:
      name:
        Unplug1: Introdução à Ciência da Computação
        Maze: O Labirinto
        Multi: Material de múltipla escolha
        Unplug2: Pensamento computacional
        Unplug3: Programação em papel quadriculado
        Artist: O Artista
        Unplug4: Algoritmos
        Artist2: O Artista 2
        Unplug5: Funções
        Farmer: A Fazendeira
        Unplug6: Condições
        Artist3: O Artista 3
        Unplug7: Escrevendo uma Canção
        Farmer2: A Fazendeira 2
        Unplug8: Abstração
        Artist4: O Artista 4
        Unplug9: Programação por revezamento
        Farmer3: A Fazendeira 3
        Unplug10: A Internet
        Artist5: O Artista 5
        Unplug11: Resumo
        MazeEC: O Labirinto
        Bounce: Pingue-pongue
        Flappy: Flappy Bird
        Jigsaw: Quebra-cabeça
        MazeStep: Modo Labirinto
        Wordsearch: Caça Palavras
        Webapp: Laboratório de Aplicativo
        ArtistEC: O Artista
        TextMatch: Correspondência de texto
        StudioEC: Laboratório
        Applab: Laboratório de Aplicativo
        NetSim: Simulador de internet
        Custom: Artista
        CustomStudio: Laboratório
        Gamelab: Laboratório de Jogos
    trophy:
      name:
        Bronze: Bronze
        Silver: Prata
        Gold: Ouro
    concept:
      description:
        sequence: Sequência
        if: Bloco "se"
        if_else: Bloco "se" - "se não"
        loop_times: Bloco "Repetir Vezes"
        loop_until: Bloco "Repita até que"
        loop_while: Bloco "Enquanto"
        loop_for: Bloco "contador"
        function: funções
        parameters: Funções com parâmetros
    level:
      instructions:
        maze_2_2: 'Você pode me ajudar a pegar o porco malvado? Junte alguns blocos "avance" e clique em "Executar" para me ajudar a chegar lá. '
        maze_2_1: Esse porco está me deixando nervoso. Me ajude a encontrá-lo!
        maze_2_2_5: Desenhe o caminho e leve-me até aquele porco bobalhão. Não passe pelas dinamites, senão penas vão voar!
        maze_2_3: Leve-me até a maldade verde! (Cuidado com a dinamite)
        maze_2_4: Fique calmo e ajude-me a encontrar o porco mau. Senão eu vou ficar zangado!
        maze_2_5: Há uma maneira de chegar ao porco bobalhão usando apenas 2 blocos. Você consegue descobrir como?
        maze_2_6: Tente me levar até o intruso verde usando apenas três blocos.
        maze_2_7: Ajude-me a banir esse porquinho mau usando o menor número de blocos possível. Tente usar mais de um bloco "repita".
        maze_2_8: 'Quando um bloco estiver cinza, significa que você não pode excluí-lo. Resolva esse desafio usando o bloco "repita" que faz 3 repetições. Tente colocar esses 3 blocos dentro do bloco "repita" em cinza: avance, avance, vire.'
        maze_2_9: Ok, use o novo bloco "repita até" - ele vai se repetir até que eu chegue naquele porco irritante.
        maze_2_10: Ok, pratique mais uma vez - você pode resolver isso usando apenas 4 blocos?
        maze_2_11: Pessoa querida. Mim zumbi. Mim com fome. Devo... chegar... no girassol... Você pode me ajudar a chegar lá com apenas 5 blocos?
        maze_2_12: Ok, é parecido, mas um pouco diferente. Você pode usar apenas 5 blocos?
        maze_2_13: 'Use o novo bloco "se" para me deixar decidir quando virar. Dica: você só precisa de mais um bloco, mas veja como o configuramos, então você mesmo poderá fazê-lo na próxima vez.'
        maze_2_14: Ok, esse desafio é como o último, mas você precisa se lembrar de como você usou o bloco "se" e o bloco "repita" juntos.
        maze_2_15: Mim querer girassol! Use um bloco "se" para que eu chegue lá com o menor número de blocos possível.
        maze_2_16: Ok, vamos praticar mais uma vez. Essa parte não é muito diferente, mas fique de olho nos comilões!
        maze_2_17: O bloco "se-senão" verifica uma condição e, em seguida, faz uma coisa OU outra. Para me levar ao girassol, tente usar esse novo bloco.
        maze_2_18: "Vamos praticar o uso do bloco \"se-senão\" mais uma vez. Você consegue\nacertar na primeira tentativa?"
        maze_2_19: Você consegue usar apenas 3 blocos para me ajudar a percorrer um labirinto mais complexo? Se fizer isso direito, eu posso percorrer qualquer caminho cheio de curvas, não importa o comprimento.
        turtle_1_1: Olá, eu sou um artista! Você pode escrever códigos para me fazer desenhar quase tudo. Use alguns blocos para me fazer desenhar sobre as linhas cinza da figura.
        turtle_1_2: 'Agora, desenhe um quadrado. NOTA: escolha sua cor preferida no novo bloco "defina a cor".'
        turtle_1_3: Faça um quadrado usando apenas 3 blocos.
        turtle_1_4: 'Desenhe um triângulo cujos lados têm cores diferentes, usando a opção "cor aleatória" que escolhe uma cor diferente a cada vez que é executado. Dica: você terá que descobrir o quanto virar, selecionando um número no bloco vire.'
        turtle_1_5: Agora, para praticar, desenhe um envelope usando um triângulo e um quadrado.
        turtle_1_6: 'Você consegue descobrir como desenhar esse triângulo e esse quadrado? Dica: faça o triângulo primeiro e, em seguida, descubra o quanto virar antes de desenhar o quadrado.'
        turtle_1_7: Ok, vamos dificultar um pouco - veja se você consegue desenhar esses óculos verdes. Os quadrados têm 100 pixels de cada lado, e eles são separados por 50 pixels. Não se esqueça de desenhar com a cor verde!
        turtle_1_8: Ok, tente descobrir o que acontece se você executar esse código (ou clique em "Executar" para ver). Em seguida, execute-o várias vezes para completar o desenho. As cores serão diferentes toda vez que o código for executado.
        turtle_1_9: Você consegue descobrir qual número precisa usar para substituir os pontos de interrogação e desenhar um círculo?
        turtle_1_10: 'Você conseguiu! Agora, desenhe o que quiser. Algumas ideias divertidas: um boneco, um floco de neve ou uma espiral. Use também o novo bloco "defina largura". Divirta-se!'
        turtle_4_1: 'Você pode desenhar um triângulo (com bordas de 100 pixels) com apenas 3 blocos? Dica: use um bloco "repita".'
        turtle_4_2: Acrescente um bloco "vire à direita 90 graus" em algum lugar no meio do programa, na área de trabalho, para desenhar esses triângulos.
        turtle_4_3: Muito bem, este é código que você escreveu para desenhar um único triângulo. Você consegue adicionar um bloco "repita" e um "vire" para fazer uma linda flor?
        turtle_4_4: 'Este é o mesmo código do desafio anterior, mas virando apenas 36 graus depois de desenhar cada triângulo. Quantas vezes essa ação precisa se repetir? (Dica: depois de 360 graus, o desenho será um círculo completo)'
        turtle_4_5: 'Este é o mesmo código do desafio anterior, mas repetindo cada virada 36 vezes. Qual deve ser a inclinação de cada virada em graus? (Dica: após 360 graus, o desenho será um círculo completo)'
        turtle_4_6: Usando apenas 3 blocos, você pode desenhar um quadrado com arestas de 20 pixels?
        turtle_4_7: 'Este é o código do quadrado desenhado no último desafio. Você consegue repeti-lo para desenhar 10 quadrados adjacentes como uma escada? Dica: você só precisa de mais 2 blocos.'
        turtle_4_8: Esta é a solução do desafio anterior. Você consegue adicionar apenas mais 2 blocos para completar o desenho?
        turtle_4_9: Esta é a solução do desafio anterior. Quantos graus você deve virar para completar o desenho? (Você provavelmente vai precisar chutar o valor algumas vezes)
        turtle_4_10: Esta é a solução do desafio anterior. Quantas vezes você deve repetir para completar o desenho?
        turtle_4_11: Altere os números nos blocos "vire" e "repita" para criar padrões diferentes. Ou então, experimente mudar o resto do código para desenhar o que quiser.
        maze_karel_1_1: Olá, eu sou uma fazendeira! Preciso de sua ajuda para aplanar o terreno da minha fazenda, para prepará-lo para o plantio. Leve-me até o monte de terra e use o bloco "remova" para removê-lo.
        maze_karel_1_2: Em seguida, leve-me para perto do buraco e preencha-o com DUAS pás cheias de terra, usando o bloco "preencha".
        maze_karel_1_3: Leve-me até o monte de terra e me diga quantas pás devo remover, usando o menor número de blocos possível.
        maze_karel_1_4: 'Você pode me ajudar a remover todos os quatro montes de terra? Dica: se puder, use um bloco de repetição.'
        maze_karel_1_5: 'Ajude-me a encher todos esses buracos com 5 pás de terra. Dica: você pode usar um bloco "repita" dentro de um bloco "enquanto".'
        maze_karel_1_6: Remova todas as pilhas de terra usando o menor número de blocos possível. As novas opções de menu no bloco "enquanto" mostram se eu estou em uma pilha de terra ou em um buraco.
        maze_karel_1_7: Uau, eu encontrei um buraco muito fundo! Não sei quantas pás de terra vamos precisar. Você pode escrever um programa para preenchê-lo completamente?
        maze_karel_1_8: Ajude-me a preencher o buraco no final do terreno, usando o menor número de blocos possível.
        maze_karel_1_9: 'Faça com que eu remova todos esses montes de terra. Tente usar o menor número de blocos possível. Dica: tente usar um bloco "enquanto".'
        maze_karel_1_10: Estou trabalhando até tarde, então está escuro, e eu não sei o tamanho desses montes de terra. Agora, eu não tenho todas as opções que eu costumava ter com o bloco "enquanto". Mova-me pelo terreno e, se houver um monte de terra, remova-o.
        maze_karel_1_11: 'Ainda está escuro lá fora. Mova-me ao longo do terreno. Se houver um monte de terra, remova-o, e se houver um buraco, preencha-o. Dica: use o menu de opções no bloco "se".'
        turtle_2_1: 'Olá! Mim zumbi artista. Mim gostar de desenhar! Me ajude a desenhar um quadrado com uma cor especial. Importante: você tem todos os blocos de antes, mas agora eles estão divididos em categorias.'
        turtle_2_2: Bem-vindo ao uso de funções, as quais permitem que você defina novos blocos! Use o novo bloco "desenhe um quadrado", encontrado na categoria "Funções", para desenhar um pequeno quadrado verde de 50x50.
        turtle_2_3: Use o bloco "repita" (na categoria "Laços") para desenhar 3 quadrados de tamanho 100, separados por 120 graus. Use 3 cores aleatórias.
        turtle_2_4: 'Agora vamos ficar chiques. Altere o código para desenhar 36 quadrados, com 100 pixels de largura e separados por 10 graus. Dica: você pode usar a barra deslizante para me fazer ir mais rápido.'
        turtle_2_5: Desenhe quadrados com lados de 50, 60, 70, 80 e 90 pixels. Você vai precisar usar a função "desenhe um quadrado" cinco vezes.
        turtle_2_6: 'Ok, esse programa vai usar um contador para desenhar os mesmos quadrados da última vez. Você quer que o quadrado tenha o tamanho do contador, então use o bloco "contador". Dica: ele está na categoria Variáveis.'
        turtle_2_7: Aqui temos um programa para desenhar uma espiral, mas os blocos estão desativados para que eles não sejam executados. Faça um novo programa usando um bloco "conte com" (na categoria Laços) e um bloco "contador" (na categoria Variáveis) para desenhar a mesma espiral.
        turtle_2_7_5: Há uma nova função "desenhe um boneco de neve" (na categoria Funções). Desenhe dois bonecos de neve, de 250 e 100 de altura.
        turtle_2_8: Esse desafio é um pouco complicado. Use a função "desenhe um boneco de neve" e o novo bloco "pule para a frente" (na categoria Ações). Desenhe 3 bonecos de neve com cores diferentes, separados por 100 pixels.
        turtle_2_9: Use um laço "contar com" para desenhar uma família de bonecos de neve, com alturas de 100, 110, 90, 80 e 70. Os bonecos de neve devem estar separados por 60 pixels.
        turtle_2_10: Aqui, temos alguns códigos para que você experimente em diferentes espirais. O que acontece se você alterar a quantidade de voltas? Ou definir uma cor aleatória no laço? Desenhe o que você quiser.
        maze_karel_2_1: 'Use os blocos para me ajudar a remover todos os montes de terra e preencher todos os buracos no chão. Tente usar laços ao invés de usar muitos blocos. Dica: você pode colocar um laço dentro de outro laço.'
        maze_karel_2_2: Definimos nosso próprio bloco chamado "preencha 5", que agora está na categoria de Funções. Use-o para me ajudar a preencher esse buraco.
        maze_karel_2_3: Use o novo bloco de função "preencha 5" para que eu preencha todos os buracos. Você vai ter que arrastar o bloco "preencha 5" para fora da categoria Funções.
        maze_karel_2_4: Defina uma nova função que remova 7 pás. Em seguida, use-a para escrever um programa que me ajude a remover todos os montes de terra.
        maze_karel_2_5: Crie uma nova função que remove 6 pás de um monte de terra e use-a para me ajudar a nivelar todos os montes.
        maze_karel_2_6: Use duas novas funções, "preencha 8" e "remova 8", para me ajudar a nivelar o monte de terra e preencher o buraco.
        maze_karel_2_7: Há uma vaca no meu terreno! Escreva uma nova função que me ajude a desviar da vaca e remover o monte de terra. Coloque todos os seus blocos dentro da nova função.
        maze_karel_2_8: Use a nova função, "desvie da vaca e remova 1", para me ajudar a remover todos os montes de terra.
        maze_karel_2_9: Ok, temos aqui uma função que remove 4 montes diferentes de terra em uma coluna vertical. Coloque essa função dentro de um laço, para que você remova todos os montes de terra usando apenas alguns blocos novos.
        maze_karel_2_10: Mova-me pelo terreno e use essas duas funções para me ajudar a remover todos os montes de terra e preencher todos os buracos.
        turtle_3_1: Esse desafio mostra como as funções "desenhe um quadrado" e "desenhe um círculo" são definidas. Definir uma função não resulta na execução de seus blocos. Você tem que chamar o bloco "desenhe um quadrado" para, de fato, desenhar um quadrado.
        turtle_3_2: Usando a função "desenhe um quadrado" como exemplo, crie uma função "desenhe um triângulo" e utilize-a.
        turtle_3_3: 'Desenhe uma cerca triangular em torno dos gatos e uma cerca quadrada em torno da vaca. Dica: teste o programa conforme você avança.'
        turtle_3_4: Veja se você pode descobrir como usar "desenhe um quadrado" e "desenhe um triângulo" (e alguns outros blocos) para desenhar uma casa em torno do leão.
        turtle_3_5: 'Agora, crie uma nova função "desenhe uma casa" e use-a para abrigar dois gatos. Dica: crie uma nova função usando o bloco "faça alguma coisa" e nomeie o bloco como quiser.'
        turtle_3_6: 'Usando "desenhe um quadrado" como exemplo, adicione uma entrada denominada "comprimento" para "desenhe um triângulo". Em seguida, desenhe triângulos de tamanhos diferentes. (Dica: clique na estrela para adicionar uma entrada a uma função)'
        turtle_3_7: Coloque uma entrada "comprimento" em "desenhe uma casa" e construa uma casa grande para o elefante (com bordas de 150 pixels de comprimento)
        turtle_3_8: Modifique "desenhe uma casa" para que eu termine de desenhar uma nova casa no canto inferior direito. Use essa função modificada para desenhar três casas.
        turtle_3_9: Você pode recriar a função "desenhe uma casa" sem ajuda? Tente, e em seguida desenhe uma fileira de casas.
        turtle_3_10: Você aprendeu muito! Agora, use seu conhecimento para desenhar o que quiser. Tente desenhar uma estrela, ou uma espiral, ou um floco de neve.
        maze_karel_debug_seq_1: Bem-vindo à depuração! Meu código não está funcionando bem. Você pode achar o problema e corrigi-lo para que eu possa deixar meu terreno pronto para o plantio?
        maze_karel_debug_seq_2: O que há de errado com esse programa? Como corrigi-lo para que eu possa remover aquele monte de terra?
        maze_karel_debug_repeat: Faça a depuração desse programa para que meu terreno fique belo e plano.
        maze_karel_debug_while: Como alterar esse programa para me ajudar a preencher o buraco?
        maze_karel_debug_if: Socorro! Corrija o programa para que meu terreno fique completamente plano.
        maze_karel_debug_if_else: Depure esse programa para que eu possa preencher os buracos e remover todos os montes de terra.
        maze_karel_debug_function_1: O que você deve alterar nesse programa para me ajudar a remover todos os montes de terra?
        maze_karel_debug_function_2: Você pode depurar este programa para deixar meu terreno plano?
        maze_karel_debug_function_3: 'Edite esse programa para que eu remova todos os montes de terra do meu terreno. '
        turtle_5_1: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
        turtle_5_2: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
        turtle_5_3: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
        turtle_5_4: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
        turtle_5_5: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
        turtle_5_6: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
        maze_3_1: Eu preciso chegar àquele porco! Faça algumas chamadas de move(); para que eu possa recuperar meus ovos.
        maze_3_2: Escreva um programa para que eu possa chegar ao porco.
        maze_3_3: Como eu devo chegar até o porco? Lembre-se de que não posso passar pelas dinamites!
        maze_3_4: Argh! Escreva um programa que me faça chegar ao porco sem passar pela dinamite.
        Custom_builder: Arraste os blocos da caixa de ferramentas para a área de trabalho para desenhar o nível que você deseja criar. Quando estiver pronto, clique em "Executar".
        jigsaw_1: Clique no bloco
        jigsaw_2: Arraste o bloco para o alvo
        jigsaw_3: Organize os blocos para formar a imagem
        jigsaw_4: Organize os blocos para formar a imagem
        jigsaw_5: Organize os blocos para formar a imagem
        jigsaw_6: Organize os blocos para formar a imagem
        jigsaw_7: Organize os blocos para formar a imagem
        jigsaw_8: Organize os blocos para formar a imagem
        jigsaw_9: Organize os blocos para formar a imagem
        jigsaw_10: Organize os blocos para formar a imagem
        jigsaw_11: Organize os blocos para formar a imagem
        jigsaw_12: Organize os blocos para formar a imagem
        jigsaw_13: Resolva o desafio!
        mazestep_1: Descrição do labirinto aqui
        mazestep_2: Descrição do labirinto aqui
        mazestep_3: Descrição do labirinto aqui
        mazestep_4: Descrição do labirinto aqui
        mazestep_5: Descrição do labirinto aqui
        studio_c2_1: Você consegue fazer esse cachorro dizer "Olá, mundo"?
        studio_c2_2: Você pode fazer o cachorro dizer alguma coisa e, depois, fazer o gato dizer alguma coisa?
        studio_c2_3: "Você consegue escrever um programa para fazer este\ncachorro se mover até o gato?"
        studio_c2_4: "Você consegue escrever um programa que faça\no cachorro se mover até o gato e que faça o gato dizer \"Olá\" quando o cachorro o\nalcançar?"
        studio_c2_5: "Você pode escrever um programa para fazer\no polvo dizer \"Olá\" quando clicarem nele?"
        studio_c2_6: "Você pode escrever um programa que faça Valfredo\nse mover usando as as setas para cima / para baixo / à esquerda / à direita do teclado, para atingir todos os alvos?"
        studio_c2_7: "O bloco \"repita infinitamente\" permite\nque você execute o código de maneira contínua. Você consegue conectar blocos para mover este dinossauro\npara cima e para baixo repetidamente?"
        studio_c2_8: "Você pode fazer Valfredo dizer \"Ai!\"\ne reproduzir um som de \"batida\" se ele encontrar o dinossauro, e então movê-lo com\nas setas to teclado para fazer isso acontecer?"
        studio_c2_9: "Você pode adicionar um bloco para marcar um ponto\nquando Valfredo se encontrar com o polvo, e então movê-lo com as setas do teclado até\nmarcar pontos?"
        studio_c2_10: "Você pode adicionar blocos para mudar o plano de fundo\ne a velocidade de Valfredo, e então movê-lo com as setas do teclado até marcar pontos?"
        studio_c2_11: "Crie sua própria história. Quando terminar,\nclique em \"Concluir\" para que seus amigos testem sua história em seus celulares."
        studio_c3_story_1: Você consegue fazer esse cachorro dizer "Olá, mundo"?
        studio_c3_story_2: Você pode fazer o cachorro dizer alguma coisa e, depois, fazer o gato dizer alguma coisa?
        studio_c3_story_3: Você consegue desenvolver um programa para fazer este cachorro se mover em direção ao gato?
        studio_c3_story_4: Você consegue desenvolver um programa que faça com que o cachorro se mova em direção ao gato e que faça com que o gato diga "Olá" quando o cachorro o alcançar?
        studio_c3_story_5: Você pode adicionar um bloco para deixar o polvo feliz?
        studio_c3_story_6: Crie sua própria história. Quando tiver terminado, clique em Concluir para que seus amigos possam vê-la em seus celulares.
        studio_c3_game_1: Você pode escrever um programa para fazer o polvo dizer "olá" quando clicarem nele?
        studio_c3_game_2: Você pode desenvolver um programa que faça o pinguim se mover usando as teclas com as setas para cima / para baixo / à esquerda / à direita, para atingir todos os alvos?
        studio_c3_game_3: O bloco "repita infinitamente" possibilita a execução contínua do programa. Você pode anexar blocos para mover esse dinossauro para cima e para baixo repetidamente?
        studio_c3_game_4: Você pode fazer com que o pinguim diga "Ai!" e reproduza um som de "batida" se ele encontrar o dinossauro, e então movê-lo com as setas para fazer isso acontecer?
        studio_c3_game_5: Você pode adicionar um bloco que some um ponto quando o pinguim se encontra com o polvo, e então movê-lo até que você consiga o ponto?
        studio_c3_game_6: Você pode adicionar blocos para mudar o plano de fundo e a velocidade do pinguim, e então movê-lo com as setas até que você pontue?
        studio_c3_game_7: Crie seu próprio jogo. Quando terminar, clique em Concluir para deixar que seus amigos experimentem seu jogo em seus celulares.
        studio_playlab_1: O pinguim quer dizer "olá", você consegue ajudá-lo?
        studio_playlab_2: O menino da caverna (personagem 1) e a menina da caverna (personagem 2) querem dizer "olá" um para o outro. Você pode ajudá-los usando o bloco "diga" duas vezes?
        studio_playlab_3: Você pode ajudar a tenista a alcançar a bandeira?
        studio_playlab_4: Você pode ajudar o tenista (personagem 1) a alcançar a tenista (personagem 2) e emitir um som ao conseguir?
        studio_playlab_5: Você pode ajudar o robô espacial a dizer "saudações, terráqueos" quando clicarem nele? Não se esqueça de clicar nele depois de clicar em Executar
        studio_playlab_6: Você pode ajudar a bruxa a se movimentar usando as teclas de direção para cima/baixo/direita/esquerda, para alcançar todas as bolas de fogo mágicas?
        studio_playlab_7: O bloco "repita infinitamente" permite que você execute o código de forma contínua. Você consegue conectar blocos a ele para ajudar o mago a se mover para a direita e para esquerda repetidamente?
        studio_playlab_8: Você pode adicionar um bloco para marcar um ponto e um bloco para emitir um som quando o unicórnio corre em direção ao mago e, depois, movê-lo com as teclas de direção até marcar um ponto?
        studio_playlab_9: Defina o plano de fundo para esta invasão alienígena e ajude o robô espacial a alcançar o alienígena mais rapidamente, mudando sua velocidade. Depois, mova-o com as teclas de direção para alcançar o robô espacial e alertar a todos
        studio_playlab_10: Crie seu próprio jogo. Quando terminar, clique em Concluir para deixar que seus amigos experimentem seu jogo em seus celulares.
        studio_iceage_hello1: Sid quer reunir todos para uma nova aventura. Você pode ajudá-lo a dizer "olá" arrastando o bloco "diga" para nossa área de trabalho e digitando "olá" dentro dele?
        studio_iceage_hello2: Sid (personagem 1) encontrou Manny (personagem 2) e quer convidá-lo para uma aventura. Ajude-os a cumprimentarem-se usando o bloco "personagem diz" duas vezes.
        studio_iceage_move_to_flag: O Scrat está procurando sua bolota! Ajude-o a andar os últimos 200 pixels usando o bloco "mova".
        studio_iceage_move_to_actor: Diego (personagem 1) está procurando por Manny (personagem 2). Ajude Diego a andar 200 pixels para chegar até Manny usando o bloco "mova o personagem". Em seguida, conecte um bloco ao evento "quando o personagem tocar" para reproduzir um som quando eles se encontrarem.
        studio_iceage_repeat: O bloco "repita infinitamente" permite que você execute o código sem parar. Você pode anexar blocos a ele para ajudar a Vovó a fazer exercícios movendo-a para a esquerda e para a direita repetidamente?
        studio_iceage_click_hello: Você pode ajudar Sid a fazer uma chamada final para seus amigos quando for clicado? Não se esqueça de clicar nele depois de clicar em Executar.
        studio_iceage_move_events: O Scrat ainda está procurando por bolotas! Ajude-o a correr por aí anexando o bloco "mova" a cada um dos eventos e alterando a direção para funcionar para cada seta do teclado. Quando você terminar, clique em Executar e tente coletar todas as bolotas.
        studio_iceage_sound_and_points: Foi fornecida a maior parte do código que mantém a Vovó se movendo para a esquerda e para a direita, bem como o código para mover o Sid pela tela. Você consegue terminar o código e adicionar blocos ao evento "quando o personagem tocar" para que ambos reproduzam um som e marquem um ponto quando Sid e a Vovó colidirem? Pressione Executar para jogar o jogo.
        studio_iceage_warn_ice_age: Todos precisam se mover rapidamente porque uma era do gelo está chegando! Altere para o plano de fundo de gelo e defina a velocidade de Sid como rápida, então pressione Executar e mova-o até Diego para avisá-lo.
        studio_iceage_throw_hearts: Sid quer dizer para a Vovó o quanto ele a ama. Use o comando "personagem lança" para que Sid (personagem 1) lance corações para a Vovó (personagem 2)! Defina o humor da Vovó como feliz quando ela for atingida pelos corações.
        studio_iceage_free_play: Hora de criar seu próprio jogo ou história! Ao terminar, clique em Concluir para que seus amigos possam jogar seu jogo em seus telefones, tablets ou computadores!
        studio_gumball_hello1: Anais quer fazer novos amigos. Você pode ajudá-la a dizer "olá" arrastando o bloco "diga" em nossa área de trabalho e digitando a palavra "olá" dentro dele?
        studio_gumball_hello2: Darwin (personagem 1) e seu irmão Gumball (personagem 2) estão indo para a escola. Ajude-os a cumprimentarem-se usando o bloco "personagem diz" duas vezes.
        studio_gumball_move_to_flag: João Banana está prestes a ganhar uma corrida no campo! Ajude-o a andar os últimos 200 pixels usando o bloco "mova".
        studio_gumball_move_to_actor: Gumball (personagem 1) e Darwin (personagem 2) estão atrasados para a o dia no campo! Ajude Gumball a andar 200 pixels para baixo para chegar até Darwin usando o bloco "mova o personagem".  Em seguida, conecte um bloco ao evento "quando o personagem tocar" para reproduzir um som quando eles se encontrarem.
        studio_gumball_repeat: O bloco "repita infinitamente" permite que você execute o código de forma contínua. Você pode adicionar blocos a ele para ajudar Gumball no aquecimento para sua corrida, movendo-se para a esquerda e para a direita repetidamente?
        studio_gumball_click_hello: Você pode ajudar o Anton a anunciar o início da corrida dizendo "Em suas marcas, preparar, já!"? Para testar seu programa, não se esqueça de clicar no Anton depois de clicar em Executar!
        studio_gumball_move_events: Darwin está no concurso de capturar a bandeira! Ajude-o a correr anexando o bloco "mova" a cada um dos eventos. Quanto terminar, clique em Executar e tente pegar todas as bandeiras.
        studio_gumball_sound_and_points: Foi fornecida a maior parte do código que mantém Anton (personagem 2) se movendo para a esquerda e para a direita, bem como o código para mover o João Banana (personagem 1) pela tela. Você consegue terminar o código e adicionar blocos ao evento "quando o personagem tocar" para que ambos reproduzam um som e marquem um ponto quando João Banana e Anton colidirem? Pressione Executar para jogar o jogo.
        studio_gumball_warn_food_fight: Darwin acabou de escapar de uma guerra de comida! Altere o plano de fundo para "personagens" e configure a velocidade de Darwin como rápida, então pressione Executar e faça-o mover-se até Penny para avisá-la.
        studio_gumball_join_food_fight: Participe da guerra de comida! Use o comando "personagem joga item para a direita" para que o João Banana (personagem 1) jogue comida em Anton (personagem 2)! Configure o humor de Anton como bravo quando ele for atingido.
        studio_gumball_free_play: Crie seu próprio jogo ou história. Ao terminar, clique em Concluir para que seus amigos possam jogar seu jogo em seus telefones, tablets ou computadores!
        studio_full_sandbox: Crie seu próprio jogo. Quando terminar, clique em Concluir para deixar que seus amigos experimentem seu jogo em seus celulares.
        studio_k1_1: Você consegue fazer esse cachorro dizer "Olá, mundo"?
        studio_k1_2: "Você pode fazer o cachorro dizer alguma coisa e,\ndepois, fazer a gata dizer alguma coisa?"
        studio_k1_3: Você consegue desenvolver um programa para fazer este cachorro se mover em direção ao gato?
        studio_k1_4: Faça o cachorro se mover até o gato e o gato dizer "olá" a ele quando chegar.
        studio_k1_5: "Você pode adicionar um bloco para deixar o polvo\nfeliz?"
        studio_k1_6: Crie sua própria história! Movimente o gato e o cachorro, e faça com que eles conversem.
        maze_wordsearch_k_1: Faça eu me mover para formar a palavra EAST
        maze_wordsearch_k_2: Faça eu me mover para formar a palavra SOUTH
        maze_wordsearch_k_3: Faça eu me mover para formar a palavra WEST
        maze_wordsearch_k_4: Faça eu me mover para formar a palavra NORTH
        maze_wordsearch_k_6: Movimente-me para o leste e então para o sul, para formar a palavra JUMP
        maze_wordsearch_k_9: Movimente-me para um lado, e então para o outro, para formar a palavra CODE
        maze_wordsearch_k_13: Movimente-me para um lado, e então para o outro, para formar a palavra DEBUG
        maze_wordsearch_k_15: Movimente-me para um lado, e então para o outro, para formar a palavra ABOVE
        maze_wordsearch_k_16: Movimente-me para um lado, e então para o outro, para formar a palavra BELOW
        maze_wordsearch_k_20: Isso é um teste! Movimente-me para um lado, e então para o outro, para formar a palavra STORY
        applab_ec_simple: Crie seu aplicativo usando os blocos na caixa de ferramentas.
        turtle_ec_1_2: 'Agora, desenhe um quadrado. NOTA: use sua cor preferida selecionando-a no novo bloco "Cor da caneta".'
        turtle_ec_1_10: 'Muito bem! Agora, desenhe o que quiser. Veja algumas ideias divertidas para desenhar: um boneco, um floco de neve ou uma espiral. Use também o novo bloco "Largura da caneta". Divirta-se!'
        studio_ec_sandbox: Crie seu próprio jogo. Quando terminar, clique em Concluir para deixar que seus amigos experimentem seu jogo em seus celulares.
    video:
      name:
        maze_intro: Introdução ao Labirinto
        artist_intro: Introdução ao Artista
        farmer_intro: Introdução à Fazendeira
        flappy_intro: Introdução ao Flappy bird
        loop_times: Bloco repita
        loop_until: Bloco repita até
        if: Bloco se
        if_else: Bloco se/se não
        if_else_scrat: Bloco se/se não
        function: Funções
        loop_while: Bloco enquanto
        loop_for: Bloco contador
        parameters: Funções com Parâmetros
        hoc_wrapup: Conclusão da Hora do Código
        Unplug1: O que é CC?
        Unplug2: Pensamento Computacional
        Unplug3: Programação em Papel Quadriculado
        Unplug4: Algoritmos
        Unplug5: Funções
        Unplug6: Condições
        Unplug7: Composição
        Unplug8: Abstração
        Unplug9: Programação por revezamento
        Unplug10: Internet
        Unplug11: Resumo
        C1_happy_maps_unplugged: Mapas divertidos
        C1_moveitmoveit_unplugged: Criando caminhos
        C1_bigevent_unplugged: O grande evento
        C1_getting_loopy: Repetindo
        C1_pair_programming: Programação em duplas
        C1_maze_intro_sequencing: Introdução à sequência dos labirintos
        C1_maze_debugging: Depuração do labirinto
        C1_bee_level_intro: Introdução ao nível da abelha
        C1_artist_intro: Introdução ao Artista
        C1_spelling_bee_intro: Introdução ao soletrando
        C1_zuck_repeat_loop: Laços do labirinto
        C1_bee_loops: Laços da abelha
        C1_maze_loops: Laços do labirinto
        C1_playlab_storytelling: Laboratório - Crie uma história
        C1_planting_seed: Plantando uma semente
        C1_building_foundation: Criando uma base
        C1_going_places_safely: Navegando com segurança
        C2_maze_intro: Introdução ao Labirinto
        C2_artist_intro: Introdução ao Artista
        C2_zuck_repeat_loop: Laços do labirinto
        C2_artist_loops: Laços do Artista
        C2_artist_debugging: Depuração do Artista
        C2_bee_loops: Laços da abelha
        C2_bee_debugging: Depuração da abelha
        C2_bee_conditionals: Condicionais da abelha
        C2_playlab_createstory: Laboratório - Crie uma história
        C2_graph_paper: Programação em Papel Quadriculado
        C2_conditionals_with_cards: Condições
        C2_binary_bracelets: Pulseiras binárias
        C2_relay_programming: Programação por revezamento
        C2_paper_airplanes: Aviões de papel
        C2_digital_footprint: Seu rastro digital
        C2_digital_footprint_v2: Seu rastro digital
        C3_maze_level_4: Laços do labirinto
        C3_artist_intro: Introdução ao Artista
        C3_artist_functions: Funções do artista
        C3_bee_functions: Funções da abelha
        C3_bee_conditionals: Condicionais da abelha
        C3_maze_conditionals: Condicionais do labirinto
        C3_artist_nested_loops: Laços aninhados
        C3_farmer_while: Laços enquanto
        C3_bee_nested_loops: Laços aninhados
        C3_bee_debugging: Depuração da abelha
        C3_bounce: Pingue-pongue
        C3_playlab_create_game: Laboratório - Crie um jogo
        C3_computational_thinking: Pensamento Computacional
        C3_dice_race: Jogo de dados
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Caça-sóis funcionais
        C3_songwriting_with_parameters: Escrevendo uma canção com parâmetros
        C4_intro: Introdução
        C4_loops_zombie: laços
        C4_bee_conditional: Condicionais da abelha
        C4_variables_artist: Variáveis - Artista
        C4_variables_playlab: Variáveis - Laboratório
        C4_for_loops: Laços para
        C4_for_loops_bee: Laços para
        C4_for_loops_no_bee: Laços para
        C4_math_artist: Programação do Artista com matemática
        C4_function_edit: Editando funções
        C4_function_create: Criando funções
        C4_function_parameters: Funções com Parâmetros
        C4_conditionals: Condições
        C4_unplugged_algorithms: Algoritmos com tangrams
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Variáveis em envelopes
        C4_unplugged_forloops: Laços para
        C4_unplugged_parameters: Composição de música com parâmetros
        C4_unplugged_binary: Binário
        CSF_artist_angles: Ângulos em Artista
        CSF_collector_k1_blocks: 'Fundamentos do CS: O Coletor'
        CSF_collector_repeat_loops: Laços Repita em Coletor
        CSF_collector_text_blocks: 'Fundamentos do CS: O Coletor'
        CSF_create_functions: Criar Funções
        CSF_debugging_k1_blocks: Analisando
        CSF_debugging_text_blocks: Analisando
        CSF_EF_cs_matters: Questões de Ciência da Computação
        CSF_maze_intro_k1_blocks: Introdução para o Code Studio
        CSF_maze_intro_text_blocks: Introdução para o Code Studio
        CSF_my_robotic_friends: Meus amigos robóticos
        CSF_Power_of_Words: Poder das Palavras
        CSF_Super_Digital_Citizen: Cidadão Super Digital
        CSF_stevie_big_project: Stevie e o Grande Projeto
        CSF_unspotted_bugs: Erros Não Reportados
        CSF_zuck_loops_short: Repita as rotações
        frozen_intro: Introdução à Hora de Código
        frozen_loops: Introdução aos Laços
        frozen_functions: Introdução às Funções
        playlab_intro: Introdução ao Laboratório
        playlab_events: Eventos do Laboratório
        playlab_repeat_forever: 'Laboratório: repetir infinitamente'
        tutorial_puzzle_challenge: Desafio tutorial
        infinity_playlab_intro: Laboratório - Introdução
        infinity_playlab_events: Laboratório - Eventos
        infinity_playlab_repeat_forever: Laboratório - Repetir infinitamente
        csd_concept_how_computers_work: Introdução de como os computadores funcionam
        csd_concept_computer: 'Como computadores funcionam: O que faz um computador, ser um computador?'
        csd_concept_binary_data: 'Como os computadores funcionam: Binário & Dados'
        csd_concept_circuits_logic: 'Como computadores funcionam: Circuitos e Lógica'
        csd_concept_memory_cpu_input_output: 'Como computadores funcionam: CPU, entrada e saída'
        csd_concept_hardware_software: 'Como computadores funcionam: Hardware e Software'
        csd_concept_search: Como funciona as pesquisas
        csd_external_amazon_data: Como grandes dados são usados em sistemas de recomendação da Amazon para mudar as nossas vidas
        csd_external_netflix_data: Como a Netflix faz sugestões para programas de TV e filmes?
        csd_external_waze_data: Por que tantos usuários são obcecados com Waze?
        csd_gamelab_animation_tab: A Guia de Animação
        csd_gamelab_velocity: Velocidade
        csd_weblab_intro_1: Introdução para o Laboratório Web - Parte 1
        csd_weblab_intro_2: Introdução ao Web Lab - Parte 2
        csd_weblab_css_1: Introdução para CSS - Parte 1
        csd_weblab_css_2: Introdução para CSS - Parte 2
        csd_weblab_intro_3: Introdução ao Web Lab - Parte 3
        csp_applab_functions: Introdução às Funções
        csp_applab_functions_parameters: Funções com Parâmetros
        csp_applab_loops: laços
        csp_concept_rgb: Um pouco sobre pixels
        csp_pixelation_color_1: Widget de pixelização de cores - Parte 1
        csp_pixelation_color_2: Widget de pixelização de cores - Parte 2
        csp_pixelation_color_3: Widget de pixelização de cores - Parte 3
        csp_pixelation_bw: Widget de pixelização em preto e branco
        csp_U1L14_tipstricks: Unidade 1 - Lição 14 - Dicas e truques de professores
        csp_textcompression: Widget de compressão de texto
        csp_textcompression_new: Widget de compressão de texto
        alg_1_intro: Ciência da computação em álgebra - introdução
        alg_2_eval_block: Ciência da computação em álgebra - blocos de cálculo
        alg_3_pemdas: Ciência da computação em álgebra - ordem de operações
        alg_4_data_types: Ciência da computação em álgebra - tipos de dados
        alg_5_contracts: Ciência da computação em álgebra - contratos
        alg_6_variables: Ciência da computação em álgebra - variáveis
        alg_7_function: Ciência da computação em álgebra - funções
        alg_8_design_recipe: Ciência da computação em álgebra - receita de design
        alg_9_booleans: Ciência da computação em álgebra - booleanos
        alg_10_conditionals: Ciência da computação em álgebra - condicionais
        alg_11_coordinate_plane: Ciência da computação em álgebra - plano cartesiano
        alg_12_biggame_variables: Ciência da computação em álgebra - o grande jogo - variáveis
        alg_13_biggame_animation: Ciência da computação em álgebra - o grande jogo - animação
        alg_14_biggame_booleans: Ciência da computação em álgebra - o grande jogo - booleanos
        alg_15_biggame_update_player: Ciência da computação em álgebra - o grande jogo - atualizar jogador
        alg_16_biggame_collision_detection: Ciência da computação em álgebra - o grande jogo - detecção de colisão
        alg_17_sambat_compound_booleans: Ciência da computação em álgebra - booleanos compostos
        starwars_intro: 'Star Wars: Construindo uma galáxia com código - Introdução'
        starwars_typing: 'Star Wars: Construindo uma galáxia com código - JavaScript'
        starwars_events: 'Star Wars: Construindo uma galáxia com código - Eventos'
        starwars_congrats: 'Star Wars: Construindo uma galáxia com código - Parabéns'
        starwars_blocks_intro: 'Star Wars: Construindo uma galáxia com código - Introdução'
        starwars_blocks_events: 'Star Wars: Construindo uma galáxia com código - Eventos'
        starwars_blocks_congrats: 'Star Wars: Construindo uma galáxia com código - Parabéns'
        mc_intro: Minecraft - Introdução
        mc_repeat: Minecraft - Repetição
        mc_if_statements: Minecraft - Instruções se
        mc_congrats_share: Minecraft - Parabéns
        mc_congrats_no_share: Minecraft - Parabéns
        gumball_intro: Hora do Código com Gumball - Introdução
        gumball_events: Hora do Código com Gumball - Eventos
        gumball_repeat: Hora do Código com Gumball - Instruções de repetição
        iceage_intro: Hora do Código com A Era do Gelo - Introdução
        iceage_events: Hora do Código com A Era do Gelo - Eventos
        iceage_repeat: Hora do Código com A Era do Gelo - Instruções de repetição
        mc_2016_intro: Hora do Código Minecraft - Introdução
        mc_2016_loops: Hora do Código Minecraft - Laços
        mc_2016_events: Hora do Código Minecraft - Eventos
        mc_2016_spawn: Hora do Código Minecraft - Invocar
        mc_2016_congrats: Hora do Código Minecraft - Parabéns
        applab_hoc_welcome: Aplicativo Laboratório Hora do Código - Seja bem-vindo
        applab_hoc_setproperty: Aplicativo Laboratório Hora do Código - setProperty
        applab_hoc_onevent: Aplicativo Laboratório Hora do Código - onEvent
        applab_hoc_designmode: Aplicativo Laboratório Hora do Código - Modo Design
        applab_hoc_share: LabApp Hora do Código - Compartilhar
        mc_2017_agent_intro: Hora do Código Minecraft - O Agente
        mc_2017_repeat: Hora do Código Minecraft - Loops repetitivos
        mc_2017_functions: Hora do Código Minecraft - Funções
        mc_2017_congratulations: Hora do Código Minecraft - Parabéns
        mc_2017_puzzle_1: Hora do Código Minecraft - O Agente
        mc_2017_puzzle_3: Hora do Código Minecraft - Loops repetitivos
        mc_2017_puzzle_8: Hora do Código Minecraft - Funções
        mc_2017_puzzle_12: Hora do Código Minecraft - Jogo Livre
        hint_videos_d_11_3_first: 'Vídeo-dica: D.11.3 Primeiro'
        hint_videos_d_11_3_last: 'Vídeo-dica: D.11.3 Último'
        hint_videos_d_11_4_first: 'Vídeo-dica: D.11.4 Primeiro'
        hint_videos_d_11_4_last: 'Vídeo-dica: D.11.4 Último'
        hint_videos_d_11_5_first: 'Vídeo-dica: D.11.5 Primeiro'
        hint_videos_d_11_5_last: 'Vídeo-dica: D.11.5 Último'
        hint_videos_d_11_6_first: 'Vídeo-dica: D.11.6 Primeiro'
        hint_videos_d_11_6_last: 'Vídeo-dica: D.11.6 Último'
        hint_videos_d_11_7_first: 'Vídeo-dica: D.11.7 Primeiro'
        hint_videos_d_11_7_last: 'Vídeo-dica: D.11.7 Último'
        hint_videos_d_11_9_first: 'Vídeo-dica: D.11.9 Primeiro'
        hint_videos_d_11_9_last: 'Vídeo-dica: D.11.9 Último'
        hint_videos_d_11_11_first: 'Vídeo-dica: D.11.11 Primeiro'
        hint_videos_d_11_11_last: 'Vídeo-dica: D.11.11 Último'
        applab_intro_welcome: Laboratório de App - Como começar
        applab_intro_events: Laboratório de Aplicativo - Faça-o Interativo
        applab_intro_sounds: Laboratório de Aplicativo - Imagens e Sons
        applab_intro_designmode: Laboratório de Aplicativo - Modo de Design
        applab_intro_share: Laboratório de Aplicativo - Compartilhe seu Aplicativo
        csd_applab_arrays: Introdução a Arrays
        CSF_skinOverview_Harvester: A Colheitadeira
        CSF_bb8_skinOverview_C-F: BB-8
        CSF_bb8_skinOverview_K-1: BB-8
        CSF_harvester_skinOverview_K-1: A Colheitadeira
        CSF_scrat_loops_K1: Repetições na Era do gelo
        CSF_scrat_loops_CF: Repetições na Era do gelo
        CSF_if_allskins: O Bloco Se
        CSF_ifelse_allskins: Usando Blocos "Se/Senão"
        CSF_ifelseifelse_allskins: Usando Blocos "Se/SenãoSe/Senão"
        CSF_loops_AB: laços
        csd_gamelab_booleans: Expressões Booleanas
        csd_gamelab_conditional_statements: Instruções Condicionais
        csd_gamelab_if_else: Instrução Se/Senão
        CSF_SpriteLabIntro_CDEF: Este é o Laboratório de Sprite
        CSF_Spritelab_MakeSprite_CDEF: Como fazer um no Laboratório de Sprite
        CDEF_Video_SpritesInAction: Sprites em Ação
        CSF_SpriteLab_SpritesInAction_CDEF: Sprites em Ação
        CSF_StarWars_ProjectIntro: Introdução para o Projeto Star Wars
        mc_2018_intro: 'Minecraft: Introdução à Viagem Aquática'
        MC_2018_loops: 'Minecraft: Viagem Aquática Repetir Até'
        mc_2018_conditionals: 'Minecraft: Viagem Aquática Condicionais'
        mc_2018_closing: 'Minecraft: Viagem Aquática Parabéns'
        hoc_dance_warmup: Festa Dançante - Aquecimento
        hoc_dance_events: Festa de dança - Eventos
        hoc_dance_properties: Festa de dança - Propriedades
        hoc_dance_congrats: Festa Dançante - Festejar!
        c_and_c_great_to_create: É Ótimo Criar e Jogar Limpo
        c_and_c_digital_sharing: Compartilhamento Digital
    callout:
      text:
        drag_blocks: Arraste um bloco "avance" e o encaixe embaixo do outro bloco
        run: Selecione "Executar" para abrir seu programa
        watch_again: Clique aqui para assistir o vídeo novamente
        gray_block_explanation: Os blocos cinza não podem ser excluídos. Você consegue resolver o desafio assim mesmo?
        show_code_explanation: Clique aqui para ver o código do programa que você está criando
        instructions_repeat_explanation: As instruções de cada desafio são repetidas aqui.
        category_explanation: Você tem os mesmos blocos, mas agora eles estão organizados em categorias
        set_sprite_image: Anexe um bloco "defina personagem à imagem" ao bloco "quando a história começa" para definir um personagem para essa história
        studio_say_text: Digite, dentro das aspas, o que você quer que seu personagem diga
        jigsaw_click: Clique nesse bloco!
        move_elsa_forward: Arraste um bloco "Avance" e encaixe-o sob o bloco "Quando o jogo começa" para que Elsa avance
        turn_elsa: Use o bloco "Vire" para que Elsa vire. O número no menu suspenso determina o quanto Elsa vai virar
        replace_questions: Use o menu suspenso para substituir "???" por um número
        replace_questions_degree: Use o menu suspenso para substituir "???" pelo grau correto para virar
        repeat_blocks: Use o bloco "Repita" e conecte-o aos blocos na área de trabalho
        repeat_blocks_1: "(1) Use este bloco e coloque-o em torno dos blocos cinza na área de trabalho"
        repeat_blocks_2: (2) Traga o bloco "repita" aqui e coloque os blocos cinza dentro dele
        snowflake_dropdown: Use este menu suspenso para criar diferentes flocos de neve!
        degrees_per_side: Divida 360 pelo número de lados para obter o tamanho de cada ângulo em graus.
        set_sides: Use este bloco para definir "lados" com o número necessário para completar o desafio.
        set_length: Use este bloco para definir "comprimento" com o valor correto.
        which_equation: Qual equação torna cada lado mais curto nas formas com maior número de lados?
        get_nectar: Use o novo bloco "obtenha néctar".
        actions_category: A caixa de ferramentas tem um novo visual! Os blocos de "Ação" estão aqui agora.
        draw_square_hint: 'Dica: Use o laço do quadrado que você fez no último desafio.'
        edit_function: Clique aqui para editar sua função.
        create_function: Clique aqui para abrir o submenu "Funções", e então clique no botão "Criar uma função".
        house_hint: Tudo bem se a imagem ainda não se parece com uma casa. Vamos arrumar isso no próximo desafio.
        edit_draw_square: Use este botão para editar a função e adicionar o laço.
        edit_get_nectar: Use este botão para editar a função e alterar a direção para a qual a abelha vai virar para obter o néctar.
        logic_category: Abra o submenu "Lógica" para encontrar o bloco "se/senão".
        length_parameter: Você pode atualizar esta função para que ela use o parâmetro "comprimento"?
        frozen_diamond_repeat: Use o bloco "repita" para criar esta forma.
        frozen_circle_function_in_circle_turn: Não se esqueça de virar depois de criar cada círculo.
        frozen_circle_function_with_parameter_circle: Use o bloco "crie um círculo" e mude o tamanho.
        frozen_snowflake_branch: Use o bloco "crie uma parte do floco de neve"
        frozen_create_square: Conecte mais blocos aqui para criar um quadrado
        playlab_drag_say: Arraste o bloco "diga" aqui e digite "olá"
        playlab_use_twice: Use este bloco duas vezes e lembre-se de mudar o número do personagem
        playlab_move_girl: Use o bloco "mova à direita" para mover a tenista
        playlab_play_sound: Adicione o bloco "reproduza som" aqui
        playlab_arrow_keys: Lembre-se de usá-los para mover a bruxa depois de clicar em Executar
        playlab_add_move: Adicione blocos "mova" dentro deste bloco "repita"
        playlab_add_score: Adicione blocos de pontuação aqui
        playlab_add_blocks: Adicione seus blocos aqui
        set_variable: Arraste um bloco de número aqui para definir sua variável
        place_variable: Arraste sua variável para dentro deste bloco
        bee_for_loop: Arraste o maior número de néctar que você quer a abelha colete aqui
        place_counter_variable: Arraste sua variável contador para dentro deste bloco
        function_editor_draw_square: Esta é sua definição de função. Esses blocos são executados sempre que você usar o bloco "desenhe um quadrado"
        change_here: Faça sua alteração aqui
        write_draw_square_function: Arraste os blocos da caixa de ferramentas que desenham um quadrado aqui
        write_draw_triangle_function: Arraste os blocos da caixa de ferramentas que desenham um triângulo aqui
        edit_add_parameter: Clique em editar para adicionar um parâmetro em sua função
        add_and_drag_parameter: Escreva o nome do seu parâmetro aqui, clique em adicionar e, em seguida, arraste-o para sua definição de função
        fill_in_actor: Substitua ??? pelos números que correspondem a cada ator (1, 2 e 3)
        repeat: Coloque os blocos dentro do laço para repetir os comandos
        if_bee_nectar: Use o bloco "se" para decidir se a abelha deve coletar o néctar
        if_else_bee: Use o bloco "se-senão" para que a abelha colete o néctar de uma flor, e faça mel se não for uma flor
        repeat_full_circle: Insira o número de vezes que o zumbi deve se mover para fazer um círculo completo
        place_length_variable: Arraste a variável de comprimento aqui para substituir os pontos de interrogação
        arrows_move_actor: Use as setas para mover o personagem
        right_arrow_fireball: Use a seta para a direita para atirar bolas de fogo
        name_function: Escreva o nome da sua função aqui
        Infinity_move_right_runbutton: Adicione um bloco Mova aqui
        Infinity_move_directions_callout: Qual bloco fará Baymax se mover para cima quando a seta para cima estiver pressionada?
        Infinity_move_directions_callout_arrow: Use as setas para direcionar
        Infinity_move_collide_callout: Reproduza um som quando esse evento ocorrer.
        Infinity_repeat_callout: Coloque blocos Mova aqui dentro
        craft_run_button_callout: Selecione "Executar" para abrir seu programa
        craft_drag_block_callout: Arraste um bloco de "andar à frente" e encaixe-o embaixo do outro bloco
        craft_callout_preplaced: Já colocamos alguns blocos aqui para você começar
        craft_inside_repeat: Repita as ações colocando blocos aqui
        craft_callout_preplaced_house: Este código começará a construção da sua casa. Você consegue terminá-la?
        craft_what_is_iron: Minere este ferro!
        craft_callout_moveforward: Este código verifica se há lava. Você consegue adicionar um comando para avançar?
