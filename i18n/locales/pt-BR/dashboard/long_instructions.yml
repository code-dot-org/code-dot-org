---
pt-BR:
  data:
    long_instructions:
      "'pre-assessment survey q25A'": Se sim, qual(is) curso(s) de ciência da computação você teve antes do seu curso atual?
      2-3 Artist 1 new: Olá, eu sou um artista. Você pode escrever código para me fazer desenhar praticamente qualquer coisa. Use alguns blocos para me fazer desenhar sobre as linhas cinzas na figura. (Cada linha tem 100 pixels de comprimento)
      2-3 Artist 11: 'Dê a placa de pare uma borda criando um octógono com lados de 100 pixels. '
      2-3 Artist 12: "Crie um circulo para finalizar o globo ocular!\n\\\\r\n\\\\r\nSe o artista girar 1 grau em cada iteração, quantas vezes você precisa repetir o código para desenhar o círculo? "
      2-3 Artist 2 new: |-
        Esta casa tem uma parede pela metade.
        Cada lado é 100, mas a parede meio-incompleta é somente 50. Complete a parede.
      2-3 Artist 3.4: |-
        O bloco "pule" move o artista sem desenhar.
        Desenhe a linha tracejada usando os blocos "pule para a frente" e "avance".
        Cada linha tem 50 pixels de comprimento.
      2-3 Artist 3new: |-
        O chapéu vermelho tem 100 pixels de altura. Termine o desenho
        de um chapéu preto que seja 70 pixels menor. \\r
        (Observação: a largura de cada chapéu é
        de 50 pixels)
      2-3 Artist 4: Ajude-me a completar a casa para o gato.
      2-3 Artist 6: |-
        Esta casa precisa de um telhado! Desenhe um triângulo. \\r
        \\r
        Dica:
        todos os três lados tem o mesmo tamanho.\\r
        \\r
        <img src="https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif"
        width="300"/>
      2-3 Artist 7: "Termine de desenhar o último conjunto de janelas da escola, assim todos dentro da sala de aula podem ver o lado de fora.\\\\r\n\\\\r\nOs lados\nde cada quadrado da grade da janela possuem 25 pixels de comprimento. "
      2-3 Artist 8: |-
        Hora de construir um celeiro!\\r
        \\r
        Faça as baias
        de cada animal dividindo o celeiro em dois quadrados de mesmo tamanho. \\r
        \\r
        Dica:
        O retângulo possui 200 pixels de comprimento e 100 pixels de altura.\\r
        \\r
        Existem muitas
        maneiras diferentes de resolver este desafio.
      2-3 Artist 9 NEW: Termine esta pipa
      2-3 Artist 9 REPLACEMENT: Conclua o desenho destas escadas!
      2-3 Artist 9: Termine esta pipa
      2-3 Artist Assessment 1: |-
        **Avaliação:** Termine de desenhar
         o último dente. Ele tem 25 pixels de largura e 25 pixels de altura.
      2-3 Artist Debugging 1: "Este chapéu deve ter somente 50 pixels \nde largura. \\\\r\nVocê pode consertá-lo?\\\\r\n\\\\r\n<br/>\\\\r"
      2-3 Artist Debugging 10: |-
        O controlador de direção do controle do meu jogo
        é muito estreito. \\r
        \\r
        Você consegur aumentar a largura dele em 10 pixels?\\r
        \\r
        Execute
        o código primeiro para ver o que está errado.
      2-3 Artist Debugging 11: |-
        Meu floco de neve está se desfazendo!\\r
        \\r
        Você
        consegue descobrir o que há de errado?
      2-3 Artist Debugging 2: |-
        O código dos bigodes do gato está errado.
        \\r
        \\r
        Corrija o código para desenhar os bigodes, todos com o mesmo tamanho.
      2-3 Artist Debugging 3: |-
        Meu barco tem um buraco! \\r
        \\r
        O que você
        precisa corrigir para unir as extremidades?
      2-3 Artist Debugging 5: |-
        O código para a perna e
        para o pé está errado. \\r
        \\r
        Você consegue corrigi-lo?
      2-3 Artist Debugging 6: |-
        Parece que estou sentado em uma cadeira
        sem uma perna!\\r
        \\r
        Edite o código para desenhar a última perna.
      2-3 Artist Debugging 7: |-
        Parece que o C no código está desenhado ao contrário!\\r
        \\r
        Você
        consegue fazê-lo parecer com um C de novo?
      2-3 Artist Debugging 8: |-
        Meu professor diz que eu devo terminar o que
        comecei!\\r
        \\r
        Ajude-me a terminar meu cata-vento. Você consegue descobrir o que há de errado?
      2-3 Artist Debugging 9: |-
        Algo está estranho!\\r
        \\r
        O código deste
        caule está errado. Você consegue descobrir como fazer o artista traçar o
        caule da maneira certa?
      2-3 Artist Debugging Assessment 1: |-
        **Avaliação:** \\r
        Por que
        este quadrado acaba ficando com 75 pixels a menos em cada lado? \\r
        \\r
        Onde
        o código está errado?
      2-3 Artist Free Play: Atividade livre! Desenhe o que você quiser.
      2-3 Artist Functions 1 a: "\"Mim artista zumbi. Mim ama desenhar!\" \n\nAjude o zumbi a desenhar os óculos quadrados.  \n\nA haste entre as lentes é 25 pixels menor que a largura dos quadrados, que é igual a 100 pixels."
      2-3 Artist Functions 1: "\"Mim artista zumbi. Mim ama desenhar!\" \n\nAjude o zumbi a desenhar os óculos quadrados.  \n\nA haste entre as lentes é 25 pixels menor que a largura dos quadrados, que é igual a 100 pixels."
      2-3 Artist Functions 10: "**Atividade livre**: Aqui temos duas funções, uma para desenhar uma engrenagem grande e outra para desenhar uma engrenagem pequena. \n\nUse-as para desenhar o interior de uma máquina!"
      2-3 Artist Functions 11 a: "Nós renomeamos a função `desenhar um quadrado` para `desenhar um hexágono`, mas ela ainda desenha apenas quadrados! \n\nVocê pode modificar a função `desenhar um hexágono` para desenhar um hexágono com lados de 50 pixels?\n\nDesenhe a imagem usando a nova função!"
      2-3 Artist Functions 11.5 a: "Aqui está a mesma função `desenhe um hexágono`. \n\nO que acontece se você repetir o programa principal **6** vezes, virando **60** graus a cada repetição?"
      2-3 Artist Functions 11.5: |-
        Aqui está a mesma função
        "Desenhe um hexágono". \\r
        \\r
        O que acontece se você repetir o programa principal 6 vezes, virando
        60 graus a cada repetição?
      2-3 Artist Functions 11: "Nós renomeamos a função `desenhar um quadrado` para `desenhar um hexágono`, mas ela ainda desenha apenas quadrados! \n\nVocê pode modificar a função `desenhar um hexágono` para desenhar um hexágono com lados de 50 pixels?\n\nDesenhe a imagem usando a nova função!"
      2-3 Artist Functions 12 Mike: |-
        Funções são ótimas para desenhar
        coisas complexas várias vezes. \\r
        \\r
        Você consegue usar a função "desenhe uma flor"
        para preencher o resto do canteiro de plantas?\\r
        As plantas estão todas separadas por uma distância de 100 pixels.
      2-3 Artist Functions 12 a: |-
        Funções são ótimas para desenhar
        coisas complexas várias vezes. \\r
        \\r
        Você consegue usar a função "desenhe uma flor"
        para preencher o resto do canteiro de plantas?\\r
        As plantas estão todas separadas por uma distância de 100 pixels.
      2-3 Artist Functions 12: |-
        Funções são ótimas para desenhar
        coisas complexas várias vezes. \\r
        \\r
        Você consegue usar a função "desenhe uma flor"
        para preencher o resto do canteiro de plantas?\\r
        As plantas estão todas separadas por uma distância de 100 pixels.
      2-3 Artist Functions 2 a: "Funções deixam você definir novos blocos! \n\nNós movemos os blocos necessários para desenhar um quadrado para dentro de uma função chamada `desenhar um quadrado`. Desta vez, use o pequeno bloco verde `desenhar um quadrado` para chamar esta nova função e criar os óculos. \n\nOs quadrados neste desenho são separados por 75 pixels."
      2-3 Artist Functions 2: |-
        As funções permitem que você defina novos blocos! \\r
        \\r
        Movemos
        os blocos necessários para desenhar um quadrado para dentro de uma função chamada "desenhe
        um quadrado". Desta vez, use a função "desenhe um quadrado" para criar os óculos.
        \\r
        \\r
        Os quadrados estão separados por uma distância de 75 pixels.
      2-3 Artist Functions 3 a: "Edite a função \"desenhar um quadrado\" para desenhar quadros que são 115px em cada lado. \n\nOs quadrados estão a 45 pixels de distância."
      2-3 Artist Functions 3: |-
        Edite a função para desenhar um quadrado com
        lados de 115 pixels, para desenhar os óculos maiores. \\r
        \\r
        Agora, os quadrados
        estão separados por 45 pixels.
      2-3 Artist Functions 4 a: Agora coloque a função dentro de um laço e adicione um turno extra para desenhar esses três quadrados.
      2-3 Artist Functions 4: |-
        Agora coloque a função dentro de um laço
        para desenhar esses três quadrados.
      2-3 Artist Functions 9: |-
        Atividade livre: Esta é uma função de flocos de neve.
        Experimente usá-la para criar uma cena de inverno! Essa é uma atividade livre, então
        não há desafios para resolver. Divirta-se!
      2-3 Artist Loops 1: |-
        Você consegue fazer um hexágono com lados de
        100 pixels de comprimento para terminar a célula? Lembre-se, isso significa que você só vai
        precisar virar 60 graus!
      2-3 Artist Loops 2: |-
        Agora, use um bloco "repita" para transformar a célula em uma
        concha.
      2-3 Artist Loops New 1: |-
        Vamos desenhar a cabeça desse robô! Você pode fazer um quadrado com lados de 100 pixels?

        <br/>
      2-3 Artist Loops New 10: |-
        Agora vamos conectar um monte de "V"
        em um laço.
      2-3 Artist Loops New 11: |-
        Hora de fazer algo atrativo!

        Reconstrua o código do último desafio, mas dessa vez, adicione uma ação de virar à esquerda em 30 graus dentro do laço. Agora repita
        a ação 24 vezes, em vez de 8.
      2-3 Artist Loops New 12: Desenhe um diamante com lados de 100 pixels.
      2-3 Artist Loops New 13: |-
        Você vai conhecer alguns códigos
        (em cinza) para fazer um diamante. \\r
        \\r
        Repita o código cinza para criar um padrão
        divertido!
      2-3 Artist Loops New 14: "Brinque um pouco com o código do diamante e veja que outros padrões você consegue fazer. \n\nTente mudar quantos graus você vira e o número de repetições."
      2-3 Artist Loops New 15: Agora, desenhe qualquer coisa que tenha vontade
      2-3 Artist Loops New 2: |-
        Aqui temos o mesmo desafio que acabamos de resolver,
        mas só podemos usar os blocos "avance" e "vire"
        desta vez.\\r
        \\r
        Você pode usar um bloco "repita" para resolver este desafio?
      2-3 Artist Loops New 9: |-
        Desenhe um V simples (com ambos os lados com
        50 pixels) para completar a seta.
      2-3 Artist Nested Loops 1: |-
        Você usou laços para desenhar formas antes, mas agora nós vamos colocar laços dentro de outros laços!

        Ponha um bloco `repetir` ao redor de toda esta pilha de códigos para desenhar o padrão.

        <br/>
      2-3 Artist Nested Loops 10: |-
        Repita este código 12 vezes para completar
        o padrão.
      2-3 Artist Nested Loops 11: |-
        Repita este código 4 vezes para completar
        o padrão, vire 90 graus após cada círculo.
      2-3 Artist Nested Loops 12: |-
        Repita este código 12 vezes para completar
        as espirais.
      2-3 Artist Nested Loops 2: |-
        Agora, repita o triângulo 6 vezes. \\r
        \\r
        Depois
        de cada triângulo, você precisa virar 60 graus antes de desenhar o próximo.
      2-3 Artist Nested Loops 3: "Você vai precisar repetir o triângulo 12 vezes para desenhar este padrão. \n\nDivida o número de graus em um círculo (360) pelo número de formas que você está desenhando (12) para descobrir quanto virar depois de cada forma."
      2-3 Artist Nested Loops 4: |-
        Repita este diamante 12 vezes para desenhar
        uma flor!\\r
        \\r
        Observação: vamos usar o mesmo ângulo para repetir 12 diamantes,
        como fizemos com os 12 triângulos.  \\r
        Quanto você precisa virar depois de cada forma?
      2-3 Artist Nested Loops 5: |-
        Preencha as janelas deste edifício com
        um laço aninhado. \\r
        \\r
        As janelas têm 20 pixels de comprimento e são separadas por 20 pixels.
      2-3 Artist Nested Loops 6: "Esse dinossauro tem 8 espinhos ao longo de sua cauda.\n\nCada espinho tem 30 pixels de comprimento. \n\nRepita o triângulo 8 vezes, mas lembre-se de saltar para a frente depois de cada um!"
      2-3 Artist Nested Loops 7: |-
        Repita esse triângulo 10 vezes para desenhar
        o Sol. \\r
        \\r
        Você vai precisar mover e virar depois de cada triângulo. \\r
        \\r
        Você
        pode descobrir quanto virar dividindo o número de graus em um círculo
        pelo número de triângulos que o compõem.
      2-3 Artist Nested Loops 8: |-
        Agora vamos adicionar um pouco de grama à imagem.
        \\r
        \\r
        Cada tufo de grama é separado por 50 pixels.
      2-3 Artist Nested Loops 9: |-
        Vamos terminar essa imagem adicionando
        uma flor. \\r
        \\r
        Repita o diamante 12 vezes para desenhar a flor.
      2-3 Artist Nested Loops Free Play: |-
        Atividade livre. Desenhe algo legal
        com laços aninhados.
      2-3 Bee Conditionals 11: "O que será que tem por aí!\\\\r\n\\\\r\nAjude-me\na voar pelo jardim e coletar o néctar apenas das flores que têm\nnéctar para oferecer. "
      2-3 Bee Conditionals 13: |-
        Há muita coisa acontecendo por aqui!\\r
        \\r
        Use
        o que você aprendeu para coletar todo o néctar e, então, produza o mel.
      2-3 Bee Conditionals 14: "Vamos unir todas as informações!\n\nUse o que você aprendeu para me ajudar a coletar néctar apenas das flores que têm néctar para oferecer, usando o menor número possível de blocos. \n\nNão se esqueça de produzir o mel para terminar."
      2-3 Bee Conditionals 15: |-
        Este padrão de degrau deve ser familiar.  \\r
        \\r
        Você
        consegue coletar néctar apenas das flores que têm néctar para oferecer, usando o menor número de
        blocos possível?
      2-3 Bee Conditionals 2: |-
        Sou uma abelha faminta! \\r
        Ajude-me a coletar
        todo o néctar das flores usando o menor número possível de blocos.
      2-3 Bee Conditionals 3: "Olhe só todo esse néctar!\\\\r\n\\\\r\nAjude-me\na coletar todo o néctar e produzir mel usando o menor número possível de blocos.  "
      2-3 Bee Conditionals 5: |-
        Estas flores roxas mágicas mudam!

        Cada vez que você tentar o quebra-cabeça, as flores roxas podem ter 1 néctar ou nenhuma... mas você não saberá o número até que você execute o código!

        Tenha cuidado para não coletar néctar de uma flor roxa se ela não tiver nenhum.
        Você deve primeiro verificar se o néctar é igual a 1 usando o bloco `se nectar`.
      2-3 Bee Conditionals Assessment 1: "**Avaliação:** Colete todo o néctar. \nTenha cuidado para não coletar néctar das flores roxas que não o tiverem."
      2-3 Bee Debugging 1: |-
        Esses blocos estão me incomodando!

        Corrija o(s) erro(s) para coletar todo o néctar.
      2-3 Bee Debugging 10: "Este desafio está me deixando lelé! \n\nCorrija o(s) erro(s) para coletar todo o néctar e produzir todo o mel."
      2-3 Bee Debugging 2: |-
        Você consegue encontrar o problema aqui?\\r
        Corrija o(s)
        erro(s) para coletar todo o néctar.
      2-3 Bee Debugging 3: |-
        Nossa, que ferroada!\\r
        \\r
        Corrija o(s) erro(s)
        para coletar todo o néctar.
      2-3 Bee Debugging 5: "Essa flor parece deliciosa! \n\nCorrija o(s) erro(s) para coletar todo o néctar. Agora você pode usar os botões \"Executar\" e \"Passo\"."
      2-3 Bee Debugging 6: |-
        Que doce desafio!\\r
        \\r
        Corrija o(s) erro(s)
        para coletar todo o néctar.
      2-3 Bee Debugging 9: |-
        Uau, que ferroada!\\r
        \\r
        Você
        terá que corrigir algumas coisas neste programa para coletar todo o
        néctar e produzir todo o mel.
      2-3 Bee Debugging Assessment 1: "**Avaliação:**  Agora é hora de mostrar o que você sabe! \n\nCorrija o(s) erro(s) para coletar todo o néctar e produzir todo o mel."
      2-3 Bee Functions 1: "As funções são blocos de código que realizam uma tarefa. \n\nUse a função `colete 2 néctares` para coletar o néctar de cada flor."
      2-3 Bee Functions 10: |-
        As flores roxas variam entre 1 ou
        0 néctar a cada vez que você executa o desafio.   \\r
        \\r
        Crie uma função que coleta
        néctar apenas das flores que o têm.
      2-3 Bee Functions 2: |-
        As funções são blocos de código que realizam
        uma tarefa. \\r
        \\r
        Use a função "obtenha 5" para obter 5 néctares por vez.
      2-3 Bee Functions 4: |-
        A função "mova e obtenha néctar" vira
        a abelha, coleta néctar, e então retorna a abelha para onde ela começou. \\r
        \\r
        Use
        a função para coletar todo o néctar.
      2-3 Bee Functions Assessment 1: "**Avaliação:** Use a função dada para coletar o néctar de cada flor."
      2-3 Bee Functions Assessment 2: "**Avaliação:** Crie uma função para virar, avançar e produzir 3 unidades de mel, então retorne a abelha para o local onde ela começou e vire-a de volta."
      2-3 Bee Loops 1: |-
        Essas flores parecem deliciosas!\\r
        \\r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      2-3 Bee Loops 13: "**Avaliação:** Colete todo o néctar usando o menor número possível de blocos."
      2-3 Bee Loops 3A: Use um laço "repita" para coletar todo o néctar.
      2-3 Bee Loops 3B: |-
        Agora, use o bloco "repita" para coletar todo o
        néctar e produzir todo o mel.
      2-3 Bee Loops 4: |-
        Que abelha trabalhadora!

        Ajude a abelha a coletar todo o néctar e produzir todo o mel com o menor número de blocos possível.
      2-3 Bee Loops 4A: |-
        Quantas vezes os laços ajudaram você neste desafio?  \\r
        \\r
        Os laços
        são seus amigos! Use alguns deles para completar este desafio com o menor número
        de blocos possível.
      2-3 Bee Loops 5: |-
        O formato deste caminho é diferente dos demais.

        Você consegue coletar todo o néctar usando o menor número possível de blocos?
      2-3 Bee Loops 7: "Que lindo campo florido!  \n\nAjude a abelha a visitar cada flor. \n\nVocê consegue achar uma maneira de fazer isso com menos de 7 blocos?"
      2-3 Bee Loops 8: |-
        Essas flores roxas têm uma quantidade diferente de
        néctar a cada vez que você executa o desafio. \\r
        \\r
        Use o laço "enquanto houver néctar" para
        coletar todo o néctar. \\r
        \\r
        Esse laço será executado enquanto a condição
        for verdadeira, neste caso, enquanto "néctar > 0".
      2-3 Bee Loops Assessment 1: 'Avaliação: Use um laço `enquanto` para coletar todo o néctar dessas flores.'
      2-3 Maze 1: "Você pode me ajudar a pegar o porco malvado? \n\nJunte alguns blocos `mover para frente` abaixo do bloco `quando executar` e clique em \"Executar\". "
      2-3 Maze 12 - One Move Block: "Pegue o porco! Mas, desta vez, você só pode usar um bloco `mover para frente`. \n\nAh, olhe com cuidado - você está vendo mais algum bloco que poderia te ajudar?"
      2-3 Maze 12: |-
        De repente, aparece um bloco mágico!  Com o bloco de 'Repetir', você pode fazer loop código repetidamente.

        você consegue chegar ao porco, criando um loop que usa apenas um bloco 'Avançar' dentro 'Repetir'?
      2-3 Maze 13: Leve-me até o porco! Você só pode usar um bloco `mover para frente` desta vez
      2-3 Maze 15: |-
        Neste desafio, dois laços "repita" ajudarão você
        a pegar o porco com o menor número possível de blocos!
      2-3 Maze Loops 18: |-
        Leve-me até o girassol usando o menor número de blocos
        possível! \\r
        \\r
        Use um laço "repita" dentro de outro para diminuir
        a quantidade de códigos que você precisa.
      2-3 Maze Loops 19: "Vamos subir o nível! \n\nUse laços para me levar até o girassol com o menor número de laços possível."
      2-3 Maze Loops Assessment 1: "**Avaliação:** leve-me até o girassol usando apenas 5 blocos! "
      4-5 Artist 1: Ajude-me a terminar de desenhar minha caixa. (Cada linha tem 300 pixels de comprimento)
      4-5 Artist 10: |-
        Pressione "Executar" para testar o código. Em seguida, repita o código
        o número suficiente de vezes para completar o desenho. As cores serão diferentes toda vez.
      4-5 Artist 11: "Complete as retas verdes. \n\nAs retas têm 300 pixels de comprimento e são separadas por 15 pixels."
      4-5 Artist 2: |-
        Repita esse código usando o bloco "repita" para completar
        o quadrado.
      4-5 Artist 3.5: "Tente descobrir o que acontece se você executar esse código (ou pressione \"Executar\" para testar o código). \n\nEm seguida, repita o código o número suficiente de vezes para completar o desenho!"
      4-5 Artist 3: "Esse canteiro de flores retangular tem um perímetro de 600. \nO lado comprido tem 200 de comprimento. \n\nDesenhe o retângulo usando o menor número possível de blocos."
      4-5 Artist 4: "Quantos graus há em um círculo? \n\nRepita os blocos para criar um círculo de cores."
      4-5 Artist 5: |-
        O que podemos usar para substituir "???" para garantir que
        o zumbi complete este desenho usando o laço dado?
      4-5 Artist 6: |-
        Esse triângulo equilátero tem ângulos de 60, 60
        e 60 graus. Cada lado tem 200 pixels. Complete o desenho.
      4-5 Artist 7: "Este triângulo retângulo tem ângulos de 30, 60 e 90 graus. O comprimento do lado inclinado (comprimento da hipotenusa) é de 200 pixels. \n\nComplete o desenho."
      4-5 Artist 8: "A linha do meio-campo em um campo de futebol é _perpendicular_ às linhas laterais.  \nEste retângulo tem um perímetro de 800 pixels no total, e 240 pixels de comprimento. Qual é sua altura?  \n\nDesenhe as bordas e a linha do meio-campo."
      4-5 Artist 9: "Desenhe a metade da direita desta imagem de forma que o desenho seja simétrico. \nOs triângulos são equiláteros e têm lados de 50 pixels de comprimento."
      4-5 Artist Assessment 1: "**Avaliação**: Use um laço para desenhar o triângulo equilátero. Cada lado tem 300 pixels."
      4-5 Artist Free Draw 1: |-
        Desenho livre! Desenhe o que você estiver inspirado
        a criar.
      4-5 Artist Patterns 1: |-
        Desenhe esse quadrado usando um laço.\\r
        \\r
        Cada
        lado tem 20 pixels de comprimento.
      4-5 Artist Patterns 10: "O código desenha duas fileiras de hexágonos - repita todo o código 4 vezes para desenhar a colmeia inteira. \n\nVocê vai precisar recuar 120 pixels no laço mais externo para garantir que o artista não desenhe fora da tela."
      4-5 Artist Patterns 11: Quantas vezes você precisa repetir isso para desenhar um semicírculo?
      4-5 Artist Patterns 12: |-
        Se você criar outro laço como este,
        mas virar para a esquerda ao invés da direita, o que acontece? \\r
        \\r
        Você pode repetir tudo
        isso para desenhar essa onda?
      4-5 Artist Patterns 13: |-
        Agora vamos repetir tudo quatro
        vezes para criar a moldura dessa imagem. Preste atenção nos cantos - você não pode
        simplesmente virar 90 graus! \\r
        \\r
        Se repetir uma ação de virar 3 graus 60 vezes faz um
        semicírculo, qual desses blocos de código vai fazer um outro quarto
        de círculo para os cantos?
      4-5 Artist Patterns 2: "Se você colocar seu laço do quadrado dentro de outro laço, o chamamos de laço aninhado. \n\nO que você precisa adicionar como um laço externo para garantir que todos os 15 quadrados fiquem próximos um dos outros?"
      4-5 Artist Patterns 3: |-
        Agora, vamos nos aprofundar mais um nível!
        Aninhamos todo o bloco de código dentro de outro laço, mas você precisa posicionar o
        artista no lugar para desenhar a próxima reta. Qual desses blocos de código você
        pode colocar no final do laço mais externo para desenhar toda a grade?
      4-5 Artist Patterns 4: |-
        Este diamante tem lados de 50 pixels e ângulos de 120 e 60 graus.

         Use um laço para desenhá-lo.
      4-5 Artist Patterns 5: "Repita este código para fazer uma fileira de 6 diamantes. \n\nPerceba que alteramos nosso código do diamante para repetir 3 vezes ao invés\nde 2 - por que você acha que fizemos isso?"
      4-5 Artist Patterns 6: Quantas vezes você precisa repetir este bloco para desenhar a grade completa de diamantes?
      4-5 Artist Patterns 7: Vamos modificar o código do último desafio para fazer esse padrão mais complexo. Perceba como os diamantes se sobrepõem agora. Tente alterar o primeiro "pule para trás" de 100 para 50 (metade da distância) - agora, quão longe o artista deve ir no segundo "pule para trás"?
      4-5 Artist Patterns 8: |-
        Use um laço para desenhar esse hexágono com
        lados de 40 pixels e ângulos de 60 graus.
      4-5 Artist Patterns 9.5: "Vamos repetir este código para desenhar duas linhas de hexágonos. \n\nPerceba que nossa segunda linha está deslocada para a direita."
      4-5 Artist Patterns 9: |-
        Agora, repita o código 3 vezes e desenhe a
        a fileira inteira. \\r
        \\r
        Cada hexágono tem 80 pixels de largura da extrema esquerda
        à extrema direita.
      4-5 Artist Patterns Free Play: |-
        Atividade livre - experimente criar
        seu próprio padrão!
      4-5 Bee Conditionals 1: "Esta nuvem está tapando minha visão! \n\nVeja se há uma flor atrás da nuvem, e só colete néctar se houver uma flor. Cuidado, isso pode mudar!"
      4-5 Bee Conditionals 2: |-
        Mais nuvens! \\r
        \\r
        Procure atrás
        de todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r
        \\r
        Lembre-se:
        Nem todas as nuvens escondem alguma coisa!
      4-5 Bee Conditionals 4: "As vezes esta nuvem esconde uma flor, e outras vezes uma colmeia! \n\nUse o bloco `se/senão` para coletar néctar apenas se for uma flor. \nSenão para produzir mel (porque é uma colmeia)."
      4-5 Bee Conditionals 5: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\\r
        \\r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\\r
        Caso contrário, produza mel (porque há uma colmeia).
      4-5 Bee Conditionals 6: |-
        Não tenho certeza de quanto néctar esta flor
        tem, mas sei que ela tem 1, 2 ou 3 unidades de néctar. \\r
        \\r
        Combine os blocos
        condicionais ("se" e/ou "se/senão") para coletar apenas a quantidade de néctar que a flor tiver.
        \\r
        \\r
        Lembre-se de que a quantidade de néctar pode mudar a cada vez que você executar o desafio!
      4-5 Bee Conditionals 7: |-
        Essas flores podem ter 3, 2 ou 1 néctar.
        \\r
        \\r
        Complete a função "verifique a flor roxa" e use-a para coletar
        todo o néctar das flores.
      4-5 Bee Conditionals 8: |-
        Escreva a função "verifique flor e
        produza mel". \\r
        \\r
        Sua função deve verificar se a flor roxa tem 3, 2
        ou 1 néctar e coletar todo o néctar. \\r
        Então, avance e produza mel.
      4-5 Bee Conditionals Assessment 1: |-
        **Avaliação:** esta nuvem
        esconde uma flor com um néctar ou uma colmeia que precisa de um mel.  \\r
        \\r
        Complete
        a função "colete néctar ou produza mel" e então, chame-a para coletar o néctar
        ou o mel.  \\r
      4-5 Bee Debugging 1: |-
        Esses blocos estão me incomodando. \\r
        \\r
        Você
        pode consertá-los?
      4-5 Bee Debugging 6: |-
        A flor roxa tem uma quantidade diferente
        de néctar a cada vez que você executa o desafio. \\r
        \\r
        Corrija os blocos para coletar todo
        o néctar da flor em todas as vezes.
      4-5 Bee Debugging Assessment 1: "**Avaliação:** conserte o código."
      4-5 Bee Nested Loops 2: "Colete todo o néctar de cada flor.\nUse um loop aninhado. "
      4-5 Bee Nested Loops 4: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\\\r\n\\\\r\nUse um laço aninhado. "
      4-5 Bee Nested Loops Assessment 1: |-
        **Avaliação:** colete todo o
        néctar e produza todo o mel usando laços.
      4-5 Maze 7: "Leve o zumbi até o girassol sem demora! \n\nVocê consegue resolver o desafio com menos de 11 blocos?"
      4-5 Maze 9: |-
        Agora temos um novo bloco chamado "repita até". \\r
        Isso
        nos permitirá repetir comandos até o zumbi chegar no girassol. \\r
        \\r
        Use
        o novo bloco "repita até" para resolver este desafio com o menor número possível de comandos.
      4-5 Maze Assessment 1: "**Avaliação:** chegue até o girassol usando o menor número possível de blocos."
      4-5 Maze Conditionals 1: |-
        Use o bloco "repita até" para levar o
        zumbi até o girassol.
      4-5 Maze Conditionals 10: |-
        Você pode adicionar apenas 3 blocos para ajudar
        o zumbi a resolver um labirinto mais complexo? \\r
        \\r
        Se fizer isso certo, ele poderá andar
        em qualquer caminho com curvas, não importa o tamanho!
      4-5 Maze Conditionals 2: |-
        Use o bloco "repita até" para levar o
        zumbi até o girassol.
      4-5 Maze Conditionals 3: |-
        Use o bloco "se" para me ajudar a decidir
        quando virar. \\r
      4-5 Maze Conditionals 4: |-
        Ok, resolva este desafio como resolveu
        o último, mas você precisa se lembrar de como usou os blocos "se" e "repita até"
        juntos.
      4-5 Maze Conditionals 5: |-
        "Mim querer girassol!"  \\r
        \\r
        Use um
        bloco "se" para levar o zumbi até o girassol com o menor número de blocos
        possível.
      4-5 Maze Conditionals 6: |-
        "Mim comer girassol!"\\r
        \\r
        Use um bloco
        "se" para levar o zumbi até o girassol com o menor número de blocos possível.
      4-5 Maze Conditionals 7: |-
        A solução deste desafio não é muito
        diferente, mas fique de olho nas carnívoras!
      4-5 Maze Conditionals 8: |-
        O bloco "se/senão" verifica uma condição
        e, em seguida, faz uma coisa OU outra. \\r
        \\r
        Use este novo bloco para me levar até
        o girassol.
      4-5 Maze Conditionals 9: |-
        Mais um desafio com o bloco
        "se/senão"\\r
        \\r
        Faça o caminho com seu dedo para ver se consegue descobrir a solução
        na sua primeira tentativa.
      4-5 Maze Conditionals Assessment 1: |-
        **Avaliação:** use um bloco
        "repita até" e um bloco "se/senão" para me levar até o girassol com o menor número de blocos
        possível.
      4-5 Nested Loops 1: 'Complete o código para desenhar esses triângulos. O primeiro já está feito pra você. Dica: 3 triângulos em uma rotação de 360 graus.'
      4-5 Nested Loops 11: "Você pode desenhar esses 10 quadrados desta calçada usando um laço aninhado? \n\nCada quadrado tem 30 pixels."
      4-5 Nested Loops 12: |-
        Você pode desenhar esses 36 triângulos usando
        um laço aninhado?
      4-5 Nested Loops 2: "Agora, aninhe esse laço dentro de outro laço para desenhar 10 triângulos. \nIsso se chama laço \"aninhado\".  "
      4-5 Nested Loops 3: |-
        Crie um sol aninhando o código inicial em
        outro laço.\\r
        \\r
        Para conseguir este desenho legal com um centro vazio, você terá que
        dar um pulo para a frente do tamanho do triângulo antes de virar.
      4-5 Nested Loops 5: Repita o código dado para criar um moinho de vento.
      4-5 Nested Loops 6: |-
        Você pode desenhar um hexágono repetindo o
        código do triângulo?
      4-5 Nested Loops 7: |-
        Repita esse desenho 10 vezes. \\r
        \\r
        Quanto
        você precisa virar a cada repetição?
      4-5 Nested Loops 8: "Repita essa forma 6 vezes. \\\\r\n\\\\r\nQuanto\nvocê precisa virar a cada repetição? "
      4-5 Nested Loops 9: Desenhe o dente na boca do crocodilo!
      4-5 Nested Loops Assessment 1: |-
        **Avaliação**: use um laço aninhado para
        completar o desenho.
      4-5 While Loops 1: |-
        Mova-me para o buraco e preencha-o com duas pás cheias
        de terra, usando o bloco "preencha".
      4-5 While Loops 2: |-
        Mova-me para o monte de terra e remova-o com
        5 pás, usando o bloco "remova 1".
      4-5 While Loops 3: |-
        Use o menor número possível de blocos para completar
        este desafio!  \\r
        \\r
        Mova-me para o monte e remova toda a terra, então mova-me para
        o buraco e preencha-o completamente.
      4-5 While Loops 4: "Uau, que demais! \\\\r\n\\\\r\nEu não sei de quantas\npás cheias de terra esse buraco precisa.  \\\\r\nVocê pode escrever um programa que\nfique usando o bloco \"preencha\" até que o solo fique nivelado?  "
      AWS applab: |-
        # Faça isto agora

        -   passo um
        -   passo dois
      AWS link: "# Utilize esta ferramenta para coisas"
      AlgPD DR Free Play: Usando um problema de palavra de seu currículo existente ou de um outro local, complete a Receita de Projeto e uma função do programa. Usar um formulário de Receita de Projeto de sua pasta de trabalho ou baixar uma cópia [here]('https://code.org/curriculum/algebra/docs/worksheets/design_recipe.pdf').
      Alien Defender: 'Ideia de Projeto: Construa um jogo de defesa no Laboratório!'
      Alien Defender_2018: 'Ideia de Projeto: Construa um jogo de defesa no Laboratório!'
      AllTheThings Applab - Turtle move with button: "# Por favor faça o login para testar os níveis do applab (Por padrão, os níveis do applab só funcionam se autenticado. Normalmente, pedimos que faça o login, mas é apenas obrigatório para um script completo e seria chato fazer para o script todasascoisas\n\n# Sua Primeira Aplicação Interativa!\n\n<img src='https://images.code.org/3fad83213ae72073251c4d5abc1f048a-image-1444060521578.png' style='float: right; width: 250px'>Um novo grupo de comandos foi adicionado à caixa de ferramentas chamado **Controles de UI** (Controles da Interface de Usuário) que são comandos que permitem interagir com o(a), e responder ao(à), usuário(a) da sua aplicação. Por questão de simplicidade, começaremos com apenas dois comandos: \n\n-   `onEvent` que lhe permite executar a função em resposta à algum evento ocorrido (como o clique de um botão)\n-   `button` que coloca um botão na tela\n\n# Faça Isto\n\nVocê irá replicar a pequena aplicação, mostrada abaixo, que faz a tartaruga se mover com o clique de um botão. Você irá fazer três coisas:\n\n-   Adicionar um `button`\n-   Adicionar um bloco `onEvent`\n-   Adicionar `moveForward` dentro do bloco da função onEvent\n\nVeja aqui o que você deve fazer - pode assistir quantas vezes precisar para conseguir completar a atividade.\n<img src=\"https://images.code.org/1cdc8cfbcef2a43f84b11ebdf14aed0c-image-1444061731350.gif\" style=\"border: solid 1px black; width: 500px; margin: auto\">"
      AllTheThings Applab DesignModeDefault: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Faça o teste - Validador de senha\n\n**Idéia principal**: Você por usar `==` para comparar palavras e números.  \n\n-   Vamos usa uma declaração if em um manipulador de eventos para comparar o texto que o usuário inseriu em um elemento da tela.\n\n**Configuração:**\n\n-   Note a configuração em Modo de Design\n-   Há duas imagens: uma trava vermelha, e uma \"destrava\" verde.\n-   A \"destrava\" verde está _escondida_ no início.\n\n## Faça isto:\n\n**Adicione uma declaração if ao manipulador de evento para validar a senha e mostrar a \"destrava\" somente se este estiver correto** \n\n-   Você pode usar `==` para comparar o texto que você recebe da caixa de texto *entrada\\_senha* e uma palavra que você quer usar como senha. A expressão booleana que você deve usar parece com esta:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n-   Se você inseriu a senha correta então **mostre** a \"destrava\" verde e **esconda** a trava vermelha.\n    \\\\t\\* Nós fornecemos o código para esconder e mostrar as imagens. Você apenas precisa adicionar a declaração if.\n-   Senão, não faça nada. Eles podem tentar novamente."
      'AllTheThings: Pixelation - Lesson 14 - Make the Letter A': "<img align=\"right\" src=\"https://code.org/images/cspunit1/letterA.png\" width=\"150\" hspace=\"20\">\n            # Tarefa 1: Faça uma carta 'A' 3x5\n            Comece tentando recriar a carta \"A\" 3x5 retratada (na direita) usando a ferramenta de pixelização.\n          \n            A imagem é inicialmente configurada com as dimensões *incorretas*. Sua primeira tarefa é definir o segundo byte para a representação binária 8-bit de 5: 0000 0101. Então você pode começar inserir dados de pixel para criar o A.\n            "
      'AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4': "# Pixelização: Tarefa 3\n\n<img src = \"https://code.org/images/cspunit1/ColorTask3.png\" align=right width=200 hspace=20>\n**Instruções:**\nVocê começa com a imagem 4x4 da Maddie criada no video.\n\nSua tarefa é completar uma grade 4x4 com cores usando _12-bits por pixel_. O resultado deve se assemelhar (mas não exatamente) com a imagem mostrada abaixo.  \n\nEstes são os requisitos:\n\n-   Linha 1 - complete com tons de vermelho.\n-   Linha 2 - tons de verde. \n-   Linha 3 - tons de azul. \n-   Linha 4 - tons de cinza."
      'AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color': "# Pixelização de Cor: Tarefa 1\n\n**Instruções:**\n\n-   Você começa com a imagem 4x2 que Maddie estava criando, mas deixamos de fora os últimos dois quadrados. \n-   Termine a imagem descobrindo quais as duas cores que estão faltando e codifique elas."
      App Lab test: <a href="https://docs.google.com/document/d/1HgSfQeUI1zxo-3bL-9jhff0jI2um2A-3vwpvy3JAD38" target="_blank">Projeto Inovação</a>
      AppLab Intro 1 - Add Button: "# Começando - Adicionar um botão\n\nVocê vai precisar de um botão na sua tela principal para ir para sua nova tela. Você pode fazer um novo botão de duas maneiras. \n\n1.  Se você gosta do estilo do botão de \"Cães\" você pode fazer uma cópia do mesmo. Clique no botão e clique em \"Duplicar\". \\\\t! [a] \\(<https://images.code.org/171aa97d90014f66f999ecf929b672c0-image-1504289310310.08.10> AM.png)\n\n2.  Você também pode fazer um novo botão do zero arrastando-o da caixa de ferramentas de Projeto. \\\\t! [a] \\(<https://images.code.org/501c9ddd3e5b737df5b9cf053ae198a7-image-1504289359851.09.09> AM.png)\n\n3.  Clique e arraste para mover seu novo botão onde você quiser.\n\n4.  Uma vez que você tenha um novo botão atribua um nome claro para identificá-lo, \"botãoGato\". Você também pode alterar o seu texto para ler \"Gatos\"!. \\\\t! [a] \\(<https://images.code.org/87586b18b001fae0001d2243f6d09889-image-1504289448320.10.14> AM.png)\n\n5.  Há muitas outras maneiras que você pode alterar a aparência do seu botão. Experimente o menu completo de opções.\n\n6.  Assim que estiver pronto, execute seu aplicativo para certificar-se que o botão aparece. Clique em \"Finalizar\" para continuar a aprender como fazer o seu botão funcionar de verdade."
      AppLab Intro 1 - Add Event: |-
        # Começando - onEvent

        Você está de volta ao "Modo de Código". Você notará que já tem um pouco de código nesta aplicação. Esse bloco`onEvent()` roda algum código quando o `dogButton` é clicado. Você vai precisar um segundo bloco `onEvent()` para fazer seu botão funcionar. Há duas formas de fazer isso.

        1.  Pelo Modo de Código você pode arrastar o bloco

        \\t![](<https://images.code.org/c1ca564880152242c3bf92b2b9ad4fca-image-1504290427563.26.56 AM.png>)

        2.  Pelo Modo de Design seu botão tem uma aba "Eventos". Clique em 'Inserir e mostrar o código' para adicionar ao código.

        \\t![](<https://images.code.org/90d6c0cb723ee4317244f99dcfbd3a66-image-1504290568475.29.18 AM.png>)

        3.  Use a lista suspensa para ter certeza que você está fazendo o evento responder ao "catButton".

        \\t![](<https://images.code.org/ebef61f18259a2fb0d8addb90d9d8ba4-image-1504290674099.31.03 AM.png>)

        4.  O bloco `setScreen()` muda a tela. Arraste este bloco dentro do seu `onEvent()` e escolha `catScreen` da lista.

        \\t![](<https://images.code.org/00433d32665ec6f2aa6a0caac2626568-image-1504290788639.33.02 AM.png>)

        5.  Rode sua aplicação. Se tudo funcionar corretamente seu botão de gato agora aparece na sua tela gato quando você clica nele. Quando você estiver pronto, siga em frente para aprender como adicionar sons à sua aplicação!
      AppLab Intro 1 - Add Screen: "Primeiros passos - Adicionar uma tela de gatos\n\n1.  Você vai fazer uma tela de gatos. Este é o \"Modo Design\", onde você pode adicionar e editar telas. Para adicionar uma tela, clique na tela suspensa e selecione \"Nova tela\".\n\n\\\\t![expandable](<https://images.code.org/4e90c1d897ede63403a1351f5ec3bfae-image-1504288061907.47.33 AM.png>) \n\n2.  Então nomeie sua nova tela \"catScreen\".\n\n\\\\t![expandable](<https://images.code.org/966a2563aaf8a59a983fe6417d01dae9-image-1504288205242.49.33 AM.png>)\n\n3.  Finalmente, escolha a imagem de fundo de gatos da sua tela\n\n\\\\t![expandable](<https://images.code.org/ff8509146b8a249973498af63f41b08d-image-1504288758611.51.40 AM.png>)\n\nDepois de adicionar sua nova tela, clique em \"Concluir\" para aprender como adicionar botões para navegar até a tela."
      AppLab Intro 1 - Add Sound: |-
        # Primeiros Passos - Adicionar Som

        O App Lab também pode reproduzir sons. Você precisará usar o bloco `playSound ()` para fazer isso.

        1.  Arraste um bloco `playSound ()` para o seu `onEvent`. Isso fará com que o som seja reproduzido quando o usuário clicar no botão. Em seguida, clique em "Escolher..." no menu.

        \\t![](<https://images.code.org/9c84293859317f7ae46391a28c5a51e7-image-1504291688560.47.41 AM.png>)

        2.  Vá até a "Biblioteca de sons" e encontre os sons desejados. Existem vários!

        \\t![](<https://images.code.org/5393762b4f31fa4f09040ca8b09ca91c-image-1504291692587.47.52 AM.png>)

        3.  Execute seu aplicativo para verificar como seus sons funcionam.
      AppLab Intro 1 - Build Your Adventure: |-
        # Construa sua aventura

        Use este projeto em branco para construir seu projeto. Para começar, já existe uma tela inicial com alguns botões. Se você quiser, pode \*\* rapidamente fazer cópias de telas \*\* para construir o seu mundo. O que você vai criar?!

        Quando terminar, você poderá "Compartilhar" seu trabalho com um amigo por telefone ou com um link. Crie sua própria conta para continuar criando no App Lab!
      AppLab Intro 1 - Template: |-
        # Primeiros passos - Experimente este aplicativo

        Antes de criar seu próprio aplicativo - Escolha Sua Própria Aventura -, pratique usando o AppLab criando um aplicativo sobre uma visita a um pet shop. Para começar, clique em "Executar" e navegue até a tela "Cães". Uma vez que você fez isto, clique em "Finalizar" para seguir em frente.
      AppLab Intro 1 - Try App: |-
        # Primeiros passos - Experimente este aplicativo

        Antes de criar seu próprio aplicativo - Escolha Sua Própria Aventura -, pratique usando o AppLab criando um aplicativo sobre uma visita a um pet shop. Para começar, clique em "Executar" e navegue até a tela "Cães". Uma vez que você fez isto, clique em "Finalizar" para seguir em frente.
      AppLab Intro 2 - Edit place1 2: |-
        Pense em como você deseja que sua aventura continue nessa tela. Adicione então algum texto para contar sua história!

        1.  Use o seletor de tela para escolher a tela que acabou de criar ([Mostre-me onde] \(# triggercallout = selector))
        2.  Arraste uma nova "área de texto" para a sua tela para adicioná-la. ([Mostre-me onde] \(# triggercallout = textArea))
        3.  Arraste o canto inferior direito da sua área de texto para alterar seu tamanho.
        4.  Altere o texto para informar ao usuário o que acontece nessa tela. Então mude a cor de seu texto se você quiser!

        Clique em "Executar" e depois "Concluir" para seguir em frente.

        ![expandable](https://images.code.org/8ba0d4f0eccaf83163e86d10eec3a291-image-1505766539456.gif) Clique para ver um GIF destes passos
      AppLab Intro 2 - Edit place1: |-
        Na última tela, você deu ao seu personagem uma escolha entre ações ou lugares. Escolha um deles e comece a fazer uma tela para ele!

        1.  No seletor de tela, escolha "Nova tela..." ([Mostre-me onde](#triggercallout=selector))
        2.  Altere o "id" da tela para algo claro, por exemplo, o nome do novo local ([Mostre-me onde](<[Show me where](#triggercallout=idChange)>)
        3.  Você pode alternar entre as duas telas do seletor de tela. ([Mostre-me onde](#triggercallout=selector))
        4.  Você pode selecionar a "cor de fundo" da sua tela, se quiser.

        Clique em "Executar" e depois em "Concluir" para prosseguir e começar a adicionar à sua tela.
      AppLab Intro 2 - Edit startScreen: |-
        Bem-vindo ao App Lab! Agora você está no **Modo Design** onde você pode personalizar a aparência da sua aplicação. Comece sua aventura escolhendo um título engraçado!

        1.  Clique no título da sua aplicação. ([Mostre-me onde](#triggercallout=titleCallout))
        2.  Troque o "texto" escolhendo o nome que você preferir!Change the "text" to pick whatever name you like!([Mostre-me onde](#triggercallout=designMenu))
        3.  Role para baixo o menu para trocar a cor do seu título ([Mostre-me onde](#triggercallout=changeTextColor))

        Assim que você definir o visual do seu título aperte "Executar" uma vez para ter certeza que parece bom. Por fim, aperte "Finalizar" para continuar!

        ![expandable](https://images.code.org/47c8fc2986226beaa39e382bc0759797-image-1505765264098.com-gif-maker.gif) Clique aqui para ver todos os três passos em um GIF
      AppLab Intro 2 - Edit startScreen2: |-
        Bom trabalho! Hora de começar a preencher sua história.

        1.  Clique no texto da história nesta tela. ([Mostre-me onde](#triggercallout=storyText))
        2.  Preencha sua história ([Mostre-me onde](#triggercallout=editStoryText))
        3.  Explore as diferentes propriedades que você pode alterar no menu. Personalize a aparência desta tela! ([Mostre-me onde](#triggercallout=changeTextColor))

        Clique em "Executar" uma vez para fazer tudo parecer bem. Em seguida, clique em "Concluir" para seguir em frente!
      AppLab Intro 2 - Template: |-
        # Primeiros passos - Experimente este aplicativo

        Antes de criar seu próprio aplicativo - Escolha Sua Própria Aventura -, pratique usando o AppLab criando um aplicativo sobre uma visita a um pet shop. Para começar, clique em "Executar" e navegue até a tela "Cães". Uma vez que você fez isto, clique em "Finalizar" para seguir em frente.
      AppLab Intro 2 - Try App: "<img src=\"https://images.code.org/1f43ffc6a6da4c3a7644802cdbbff58b-image-1504737782528.jpg\" style=\"float:right;width:200px\">\n\n# Começando - Teste este aplicativo\n\nVocê vai criar a aplicação \"Escolha sua Própria Aventura\" extendendo este projeto. Para começar você já tem disponível as partes do projeto destacadas em azul. Aperte \"Executar\" e clique no que já está criado para você. \n\nUma vez que você entender como o projeto funciona aperte \"Finalizar\" para começar suas alterações."
      AppLab Intro 2 - Try Cat Commander: |-
        É assim que o código do Comandante do Gato se parece. Reserve um minuto para percorrer o código e veja se você consegue entender como funciona. Fale sobre isso com um parceiro. Quais padrões você vê?

        Assim que estiver pronto, siga em frente, clicando em "Executar" e depois "Concluir", para aprender a construir sua própria aventura.
      AppLab Intro 2 - add Button: |-
        Agora você tem duas telas, mas nenhuma ligação entre elas. Hora de adicionar botões!

        1.  Use o seletor da tela para voltar ao seu "telaInicio" ([Mostre-me onde](#triggercallout=selector))
        2.  Arraste um botão na tela ([Mostre-me onde](#triggercallout=dragButton))
        3.  Dê ao seu botão um "id" que descreva o que ele faz ([Mostre-me onde](#triggercallout=changeButtonID))
        4.  Troque o "texto" do seu botão para descrever onde ele vai levar o usuário.
        5.  Personalize as propriedades do seu botão como "cor de texto" ou "cor de fundo".

        Clique "Executar" e então "Finalizar" para continuar e começar escrever o código que fará seu botão funcionar

        ![expandable](https://images.code.org/43f2678e4748a1fa09556f75cad65e97-image-1505766882756.gif) Clique para ver um GIF com todos os passos
      AppLab Intro 2 - add images: |-
        Agora você sabe tudo que precisa para fazer uma simples aplicação "Escolha sua Própria Aventura", mas você pode adicionar muito mais! Se quiser adicionar imagens na sua tela é fácil!

        1.  Em outra aba no seu browser encontre online uma imagem que queira usar
        2.  Clique com o botão direito na imagem e salve sua URL (geralmente "Copiar endereço do link" ou "Copiar URL da imagem")
        3.  Volte para App Lab e mude para o Modo Design
        4.  Arraste um elemento de "imagem" na sua tela
        5.  Cole a URL que você copiou na propriedade da "imagem"

        "Execute" sua aplicação uma vez para testar. Então, aperte "Finalizar" para continuar e aprender como adicionar sons.

        ![expandable](https://images.code.org/5b977b1c127b3fcb1761aadcb74c79e8-image-1505772215256.gif) Clique para ver o GIF de todos os passos
      AppLab Intro 2 - add more buttons 2: |-
        Hora de adicionar um segundo botão e escrever o código para que ele funcione.

        1.  Arraste um segundo botão para o seu "startScreen" e dê um "id" claro de entender
        2.  Altere o texto e a cor do seu botão
        3.  No Modo de Código, arraste um segundo bloco `onEvent ()` e arraste um `setScreen ()` dentro dele
        4.  Defina os "id" s dos seus blocos `onEvent ()` e `setScreen ()` para o botão e telas que você adicionou

        Se tudo funcionou, você deve ter agora um segundo botão que muda a tela. "Execute" seu aplicativo e clique em "Concluir" se funcionar.

        ![expandable](https://images.code.org/33d1a6d2dcc81ed8ecd0966d2f0682ca-image-1505770427380.gif) Clique para ver um GIF de todas as etapas
      AppLab Intro 2 - add more buttons: |-
        Se esta vai ser uma aplicação de verdade para "Escolher sua Própria Aventura", você vai precisar adicionar mais opções! Comece adicionando uma tela para uma segunda escolha que o jogador pode fazer.

        1.  Use o seletor da tela para adicionar uma nova tela. Defina um "id" para ela.
        2.  Defina a "cor de fundo" da sua tela
        3.  Adicione uma "Área de Texto" na sua tela descrevendo o que acontece com ela.

        Clique "Executar" e então "Finalizar" para continuar. Você vai adicionar outro botão e escrever o código para fazê-lo funcionar.

        ![expandable](https://images.code.org/f1c83578a245d832c94c78aeba6ef317-image-1505768404048.gif) Clique para ver um GIF com todos os passos
      AppLab Intro 2 - add onEvent: |-
        <img src="https://images.code.org/89a0cddfc305cb44a3d888c5de864d2e-image-1505423852271.17.02 PM.png" style="float:right;height:120px">

        Este é o Modo de Código onde você escreve o código da sua aplicação. Você adicionará um código que se parece com a imagem.

        1.  Clique e arraste um bloco "onEvent" para seu espaço de trabalho ([Mostre-me onde](#triggercallout=onEvent))
        2.  Use a lista suspensa da esquerda para escolher o ID do botão
        3.  Clique e arraste um bloco "setScreen" dentro do bloco "onEvent" ([Mostre-me onde](#triggercallout=setScreen))
        4.  Use a lista suspensa para escolher o ID da sua nova tela

        Sua aplicação agora troca de tela! Teste ela apertando "Executar", depoin "Finalizar" para continuar.

        ![expandable](https://images.code.org/b9970c3478dfb15e7531034d26fbcc40-image-1505767231404.gif) Clique para ver um GIF com todos os passos
      AppLab Intro 2 - add sound: |-
        <img src="https://images.code.org/3c1d6506a6a3c350380b921e08588a2b-image-1505429594117.52.37 PM.png" style="float:right;height:100px">

        Você pode adicionar som na sua aplicação também! Adicione fora do `onEvent()` para tocar desde o começo da aventura (boa opção para música de fundo) ou dentro de um `onEvent()` para tocar apenas quando o botão é clicado (bom para sons de "Vitória" / "Derrota").

        1.  Arraste um bloco `playSound()` no seu programa
        2.  Clique na lista suspensa, e depoies "Escolher...", então "Biblioteca de Sons" para encontrar a biblioteca de sons do App Lab.
        3.  Tente a categoria "Fundo" para sons mais longos que vão tocar durante toda a aventura.
        4.  Aperte "Escolher" para selecionar o som que você gosta.
        5.  Você pode também arrastar para dentro de um bloco `onEvent` para tocar o som apenas quando um evento ocorrer. Sons mais curtos funcionam melhores aqui.

        Execute sua aplicação. Agora ela terá sons também!
      AppLab Intro 2 - finish and share: |-
        Parabéns ao terminar a sua hora de código! Você pode compartilhar seu trabalho com os amigos! Clique em "Compartilhar" para obter um link ou até mesmo mandar uma mensagem para eles.

        Você pode continuar trabalhando em seu projeto aqui. Sempre que seus amigos vão para o link que você compartilhou que vai ter a versão mais recente que você fez. Quão longe você vai construir sua aventura?
      AppLab Intro 3 - Change Screen Color: "Defina a `\"cor-de-fundo\"`para`\"vermelho\"`. Clique na imagem para ver como.\n![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif) "
      AppLab Intro 3 - Change Text 2: |-
        Dê ao `"rótulo1"` uma `"tamanho de fonte:` de 40 e defina sua `"cor de texto"` como `"azul"`. Não se esqueça de usar as aspas duplas `"` para cores. Clique na imagem para visualizar.

        ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>
      AppLab Intro 3 - Change Text: |-
        Aumente o `"tamanho da fonte"` do `"rótulo1"`. Clique na imagem para visualizar.

        ![expandable](https://images.code.org/6125888ad13353978132b19dfca8cc49-image-1505953367275.gif)
      AppLab Intro 3 - Change Two Buttons: |-
        Mude a `"cor de fundor"` do botão esquerdo para `"vermelho"` e do botão direito para `"azul"`. Passe o cursor sobre um botão com o mouse para visualizar seu `"id"`. Clique na imagem para visualizar.

        ![expandable](https://images.code.org/d6418be215384e89872a72c2bd6d4a8a-image-1505875864576.gif)
      AppLab Intro 3 - Full Text: |-
        Defina o `"texto"` deste rótulo como qualquer coisa que queira (por exemplo `"Oi, tudo bem?"`). Certifique-se de incluir as aspas duplas `"`. Clique na imagem para visualizar.

        ![expandable](https://images.code.org/4e8549acbca3449cb336fe0ed495f8f3-image-1505878779849.gif)
      AppLab Intro 3 - onEvent before: |-
        Defina a `"cor-de-fundo"` da tela para `"laranja"`. Então adicione código dentro do `noEvento()` para que o botão defina a `"cor-de-fundo"` da tela para `"rosa"`. Clique na imagem para ver como.

        ![expandable](https://images.code.org/6c338185d7fe959daed2465c4f91fb55-image-1505888600472.gif)
      AppLab Intro 3 - onEvent intro: |-
        Blocos colocados dentro do novo bloco `noEvento()` serão executados apenas quando você `"clique"` no `"botãoGrande"`. Adicione código para que o botão agora faça com que a `"cor-de-fundo"` da tela fique `"verde"`. Se lembre de usar aspas duplas `"` para cores. Clique na imagem para ver como.

        ![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)
      AppLab Intro 3 - onEvent mouseInOut: |-
        Seu programa pode usar múltiplos blocos `noEvento()`. O botão da esquerda já define ambas `"cor-de-fundo"` dos botões como `"roxo"`. Adicione código para fazer com que o botão da direita defina ambas `"cor-de-fundo"` dos botões como `"verde"`. Clique na imagem para ver como.

        ![expandable](https://images.code.org/5cd0c24b0f7f855daa2225a4b6a08087-image-1505932139152.gif)
      AppLab Intro 3 - onEvent mouseOut: |-
        O evento `"mousefora"` é disparado quando seu mouse se move para fora de um botão. Escreva um código que irá definir a `"cor-de-fundo"` da tela de volta para `"preto"` e definirá o `"texto"` do botão para `"Desligado!"` quando o mouse se mover para fora do botão. Lembre-se de usar aspas duplas `"`. Clique na imagem abaixo para ver como.

        ![expandable](https://images.code.org/a3403900844f631cc2579539c8d68ed1-image-1505937421979.gif)
      AppLab Intro 3 - onEvent mouseOver: |-
        `"clique"` é apenas um tipo de evento. Eventos `"mousesobre"` são executados quando seu mouse está sobre um botão, mesmo se você não clicar nele. Adicione código para definir a `"cor-de-fundo"` da tela para `"preto"` quando seu mouse está sobre o `"botãoDesligar"`. Clique na imagem para ver como.

        ![expandable](https://images.code.org/756e2c5ee19fd94963ca364fd46bcbd8-image-1505935772425.gif)
      AppLab Intro 3 - onEvent twoButtons: |-
        Seu programa pode usar múltiplos blocos `noEvento()`. O botão da esquerda já define ambas `"cor-de-fundo"` dos botões como `"roxo"`. Adicione código para fazer com que o botão da direita defina ambas `"cor-de-fundo"` dos botões como `"verde"`. Clique na imagem para ver como.

        ![expandable](https://images.code.org/5cd0c24b0f7f855daa2225a4b6a08087-image-1505932139152.gif)
      AppLab Intro 3 - playSound: |-
        O bloco `"reproduzirSom()"` reproduz sons. O `"botaoCavalo"` já reproduz o som de um cavalo. Adicione código para fazer com que o `"botaoPato"` reproduza o som de um pato. Clique na imagem para ver um exemplo.

        ![expandable](https://images.code.org/30e35a2c35ac309545d90af9330ba76d-image-1505939876315.gif)
      AppLab Intro 3 - share and keep going: |-
        Crie um aplicativo de Isso ou Aquilo. Escolha o que vai acontecer com a tela e o texto quando o usuário clicar em cada botão.

        Quando você terminar seu aplicativo, clique em "Compartilhar" no topo e envie para um amigo jogar! Clique na imagem para ver como compartilhar.

        ![expandable](https://images.code.org/c1d23a0288a42d48963053e0d9a1002e-image-1505943063546.gif)
      AppLab Intro 3 - stopSound: |-
        O bloco `pararSom()` para com todos os sons. O `"botaoPlay"` toca um som muito longo. Adicione código para fazer o `"botaoParar"` parar todos os sons. Clique na imagem para ver um exemplo.

        ![expandable](https://images.code.org/a5081cce1969c5a784b4440369706801-image-1505941723405.gif)
      AppLab Intro 3 - thisOrThat: |-
        Crie um aplicativo de Isso ou Aquilo. Escolha o que vai acontecer com a tela e o texto quando o usuário clicar em cada botão.

        Quando você terminar seu aplicativo, clique em "Compartilhar" no topo e envie para um amigo jogar! Clique na imagem para ver como compartilhar.

        ![expandable](https://images.code.org/c1d23a0288a42d48963053e0d9a1002e-image-1505943063546.gif)
      AppLab Intro 4 - Change Screen Color: "<div style=\"float:right\">\n\\t<img src=\"https://images.code.org/1c2a02a2caebbda2be4e537ab5087dcd-image-1506613875548.50.54 AM.png\" style=\"height:150px\"> \n</div>\n\n**Objetivo:** Faça a tela `\"vermelha\"`.\n\n**Como:** Arraste para o bloco e aperte \"Executar\".\n\n**Me Mostre:** ![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif)"
      AppLab Intro 4 - Change Text 2: "<div style=\"float:right\">\n<img src=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29 PM.png\" style=\"height:150px;\">\n</div>\n\n**Objetivo:** Tornar o texto maior e azul. \n\n**Como:**  Dê a `\"label1\"` um `\"font-size\"` de `80` e `\"text-color\"` de `\"azul\"`.\n\n**Me mostre:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 4 - Change Text: "<div style=\"float:right\">\n\\t<img src=\"https://images.code.org/7435f9effd46381a1d7d0c9078d6db78-image-1506554154216.15.23 PM.png\" style=\"height:150px\">\n</div>\n\n**Objetivo:** Tornar o texto maior. \n\n**Como:** Arraste o bloco e então escolha uma maior `\"tamanho-de-fonte\"` de `\"rótulo1\"`.\n\n**Me mostre:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 4 - Change Two Buttons: |-
        <div style="float:right">
        \t<img src="https://images.code.org/a35a27104ec33f192971be1cd8d28a6a-image-1506617895943.57.33 AM.png" style="height:150px">
        </div>

        **Objetivo:** Faça os botões `"vermelho"` e `"azul"`

        **Como:** Passe o mouse sobre os botões para ver seu `"id"`. Então defina a `"cor de fundo"` de cada bloco

        **Me mostre:** ![expandable](https://images.code.org/d6418be215384e89872a72c2bd6d4a8a-image-1505875864576.gif)
      AppLab Intro 4 - Full Text: |-
        <div style="float:right"><img src="https://images.code.org/9109abf972acc093fd591eb56619aee5-image-1506617570302.52.18 AM.png" style="height:150px">
        </div>

        **Objetivo:** Mude as palavras na tela

        **Como:** Defina o `"texto"` do rótulo para o que você quiser, como `"Minha aplicação é in-crível!`

        **Me mostre** ![expandable](https://images.code.org/4e8549acbca3449cb336fe0ed495f8f3-image-1505878779849.gif)</details>
      AppLab Intro 4 - Video designMode: "# Espiada do Modo de Design"
      AppLab Intro 4 - Video onEvent: "# Usando o onEvent"
      AppLab Intro 4 - Video share your work: "# Crie e compartilhe seu aplicativo!"
      AppLab Intro 4 - Video share: "# Crie e compartilhe seu aplicativo!"
      AppLab Intro 4 - onEvent before: |-
        <img src="https://images.code.org/d1d4126613db6bc3db331d47eecf0748-image-1506619589642.gif" style="float:right;height:150px">

        **Objetivo:** A tela começa como `"laranja"`. O botão deixa a tela `"rosa"`.

        **Como:** Antes do`onEvent()` definar a `"cor de fundo"` da tela para `"laranja"`. Dentro do `onEvent()` defina-o para `"pink"`.

        **Mostre-me:** ![expandable](https://images.code.org/6c338185d7fe959daed2465c4f91fb55-image-1505888600472.gif)
      AppLab Intro 4 - onEvent intro: |-
        <img src="https://images.code.org/d793e711e9e2ea74f68cebf228fcb360-image-1506618780451.gif" style="float:right;height:150px">

        **Objetivo:** A tela fica '"verde" ' quando você clica no botão

        **Como:** Adicione o código dentro do `"onEvent"` que define a `"cor de fundo"` da tela ' para `"verde"`.

        **Mostre-me:** ![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)
      AppLab Intro 4 - onEvent mouseOver: |-
        `"clique"` é apenas um tipo de evento. Eventos `"mousesobre"` são executados quando seu mouse está sobre um botão, mesmo se você não clicar nele. Adicione código para definir a `"cor-de-fundo"` da tela para `"preto"` quando seu mouse está sobre o `"botãoDesligar"`. Clique na imagem para ver como.

        ![expandable](https://images.code.org/756e2c5ee19fd94963ca364fd46bcbd8-image-1505935772425.gif)
      AppLab Intro 4 - onEvent twoButtons: |-
        <img src="https://images.code.org/624964d54e36fe248f91f08563a57c4b-image-1506620778039.gif" style="float:right;height:150px">

        **Objetivo:** O botão direito faz os dois botões ficarem `"verde"`

        **Como:** Adicionar um segundo`onEvent()` abaixo do primeiro. Definir o `"id"` para `"botãoDireito"`. Dentro dele adicione o código que altera os dois botões' `"cor de fundo"`

        **Mostre-me:** ![expandable](https://images.code.org/5cd0c24b0f7f855daa2225a4b6a08087-image-1505932139152.gif)
      AppLab Intro 4 - playSound: |-
        **Objetivo:** O botão direito executar um som de pato

        **Como:** O bloco `tocarSom()` executa sons. Adicione um `noEvento()` for the right button and use the `playSound()` block inside it.

        **Mostre Me:** ![expandable](https://images.code.org/30e35a2c35ac309545d90af9330ba76d-image-1505939876315.gif)
      AppLab Intro 4 - stopSound: |-
        **Objetivo:** O botão direito pausar todos os sons

        **Como:** Adicione um `noEvento()` para o botão direito e use o bloco `pararSom()` dentro dele.

        **Mostre Me:**![expandable](https://images.code.org/a5081cce1969c5a784b4440369706801-image-1505941723405.gif)
      AppLab Intro 4 - thisOrThat design: |-
        **Objetivo:** Experimente o modo de design para continuar fazendo mudanças em seu aplicativo Isso ou Aquilo. Existem também alguns novos blocos em nossa caixa de ferramentas! Você irá aprender mais sobre eles nas próximas aulas.

        **Como:** Clique em "Design" para editar rapidamente a aparência do seu aplicativo ou adicionar elementos de tela por conta própria. Experimente com alguns dos novos blocos na caixa de ferramentas.
      AppLab Intro 4 - thisOrThat template: |-
        **Objetivo:** Experimente o modo de design para continuar fazendo mudanças no seu aplicativo Isso ou Aquilo. Você irá aprender mais nas próximas aulas.

        **Como:** Clique em "Design" para rapidamente editar a aparência do seu aplicativo ou adicionar elementos de tela por conta própria.
      AppLab Intro 4 - thisOrThat: |-
        **Objetivo:** Faça um aplicativo "Isso ou Aquilo", então compartilhe com seus amigos

        **Como:** Você sabe como usar`"cor-de-fundo"`, `"tamanho-de-fonte"`, `"cor-do-texto"`, `"texto"`, `tocarSom()`, and `noEvento()`. Use eles para definir a aparência do seu aplicativo e fazer isso mudar quando seu usuário clicar nos botões. Clique em "Compartilhar" para enviar isso para um amigo.

        **Mostre Me:** ![expandable](https://images.code.org/c1d23a0288a42d48963053e0d9a1002e-image-1505943063546.gif)
      AppLab Intro 5 - Change Screen Color: "<div style=\"float:right\">\n\\t<img src=\"https://images.code.org/1c2a02a2caebbda2be4e537ab5087dcd-image-1506613875548.50.54 AM.png\" style=\"height:150px\"> \n</div>\n\n**Objetivo:** Faça a tela `\"vermelha\"`.\n\n**Como:** Arraste o bloco, altere a cor, então aperte \"Executar\".\n\n**Me Mostre:** ![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif)"
      AppLab Intro 5 - Change Text 2: "<div style=\"float:right\">\n<img src=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29 PM.png\" style=\"height:150px;\">\n</div>\n\n**Objetivo:** Tornar o texto maior e azul. \n\n**Como:**  Dê a `\"label1\"` um `\"font-size\"` de `80` e `\"text-color\"` de `\"azul\"`.\n\n**Me mostre:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 5 - Change Text: "<div style=\"float:right\">\n\\t<img src=\"https://images.code.org/7435f9effd46381a1d7d0c9078d6db78-image-1506554154216.15.23 PM.png\" style=\"height:150px\">\n</div>\n\n**Objetivo:** Tornar o texto maior. \n\n**Como:** Arraste o bloco e então escolha uma maior `\"tamanho-de-fonte\"` de `\"rótulo1\"`.\n\n**Me mostre:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 5 - Change Two Buttons: |-
        <div style="float:right">
        \t<img src="https://images.code.org/a35a27104ec33f192971be1cd8d28a6a-image-1506617895943.57.33 AM.png" style="height:150px">
        </div>

        **Objetivo:** Faça os botões `"vermelho"` e `"azul"`

        **Como:** Passe o mouse sobre os botões para ver seu `"id"`. Então defina a `"cor de fundo"` de cada bloco

        **Me mostre:** ![expandable](https://images.code.org/d6418be215384e89872a72c2bd6d4a8a-image-1505875864576.gif)
      AppLab Intro 5 - Full Text: |-
        <div style="float:right">
        <img src="https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19 AM.png" style="height:200px">
        </div>

        **Objetivo:** Mude as palavras na tela e as cores dos botões.

        **Como:** Defina o `"texto"` do rótulo para o que você quiser, como `"Bem-vindo ao meu aplicativo!"`. Então defina a `"cor-de-fundo"` dos botões.

        **Me mostre** ![expandable](https://images.code.org/709ff200e5b5f553b24d1d0a769db6ed-image-1507565545993.gif)
      AppLab Intro 5 - addButton: "**Objetivo:** Adicione uma seta para a direita na tela para trocar a próxima imagem. No próximo nível, você vai fazer isso funcionar.\n\n**Como:** Use o modo de Design para arrastar um elemento '\"imagem\" '. A biblioteca de ícones tem muitas setas diferentes para escolher. \n\n**Mostre-me:**![expandable](https://images.code.org/066245e52135c038502620a19f961667-image-1507570682956.gif)"
      AppLab Intro 5 - go further: "-   -   Objetivo: \\* \\* Este é um projeto do laboratório de aplicativos em branco. Construa o que quiser aqui! Você também tem mais alguns blocos que você pode experimentar se quiser. Não se esqueça de compartilhar o seu trabalho!"
      AppLab Intro 5 - onEvent intro: |-
        <img src="https://images.code.org/d793e711e9e2ea74f68cebf228fcb360-image-1506618780451.gif" style="float:right;height:150px">

        **Objetivo:** A tela fica '"verde" ' quando você clica no botão

        **Como:** Adicione o código dentro do `"onEvent"` que define a `"cor de fundo"` da tela ' para `"verde"`.

        **Mostre-me:** ![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)
      AppLab Intro 5 - onEvent twoButtons: |-
        <img src="https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif" style="float:right;height:200px">

        **Objetivo:** Completar o aplicativo da lanterna. O botão direito deve fazer a tela ficar `"preta"`e o texto `"branco"`

        **Como:** Adicione um segundo bloco `onEvent()` abaixo do primeiro. Em seguida, defina a `"cor de fundo"` da tela e `"cor do texto"` do rótulo.

        **Mostre-me:** ![expandable](https://images.code.org/64c83d66a723eae01d09e4aea38fbad1-image-1507567249833.gif)
      AppLab Intro 5 - playSound: |-
        <img src="https://images.code.org/cdc81e79687693db50383a41894d6679-image-1507566452258.26.22 AM.png" style="float:right;height:200px">

        **Objetivo:** Adicionar mais dois animais para a placa de som.

        **Como:** Você precisará de adicionar dois blocos `onEvent()` ao programa. Então adicione `playSound()` dentro dele.

        **Me Mostre:** ![expandable](https://images.code.org/b0f254d319f788f832553648db6fb13c-image-1507566138094.gif)
      AppLab Intro 5 - rate it app: |-
        <img src="https://images.code.org/74c675e72f33fa368057d7b783e50e31-image-1507568235560.gif" style="float:right;height:200px">

        **Objetivo:** Completar o perfil simples. Adicione o nome de usuário. Escolha a imagem principal. Quando você clicar no coração deve alterar para um ícone de coração cheio e ficar vermelho.

        **Como:** Você precisará utilizar a propriedade `"image"`.

        **Me Mostre:** ![expandable](https://images.code.org/217e10ec9ac91037b80b963fab299a60-image-1507568801064.gif)
      AppLab Intro 5 - setScreen: |-
        **Objetivo:** Escreva um código para permitir o usuário trocar para sua segunda tela.

        **Como:** Adicione um `noEvento()`para o botão que você acabou de criar. Use `definirTela()` para trocar entre as telas.

        **Mostre-me:** ![expandable](https://images.code.org/9ac5102ec678c1ecd0278446560ba617-image-1507571425597.gif)
      AppLab Intro 5 - share keep going: |-
        **Objetivo:** Compartilhar o aplicativo com alguém, ou apenas enviar para você mesmo! Depois continue costruindo!

        **Como:** Clique em "Compartilhar" para achar várias formas de compartilhar o seu aplicativo. Aqui estão algumas ideias para tentar

        -   Adicione um botão que the leve de volta da `"screen2"` para `"screen1"`
        -   Adicione mais telas com mais imagens
        -   Adicione mais tipos de botões de reações para os usuários clicarem
      AppLab Intro 5 - socialTemplate: "**Objetivo:** Adicionar um botão na tela para passar para a próxima imagem. Escolha um bom ícone, como uma seta para a direita. No próximo nível você o fará funcionar.\n\n**Como:** Utilize o Modo de Design para arastar um botão. A biblioteca de ícone possui vários tipos diferentes de setas para você escolher. Não se esqueça que você pode procurar por elas.\n\n**Me Mostre:** "
      AppLab Intro 6 - Change Screen Color: "<div style=\"float:right\">\n\\t<img src=\"https://images.code.org/1c2a02a2caebbda2be4e537ab5087dcd-image-1506613875548.50.54 AM.png\" style=\"height:150px\"> \n</div>\n\n**Objetivo:** Fazer a tela ficar `\"vermelha\"`. \n\n**Como:** Arraste o bloco, altere a cor, então aperte o botão \"Executar\"\n\n**Está travado? Clique aqui** ![expandable](https://images.code.org/8b1d99aa6bd6274e05b1844fab7e8b2a-image-1505870100643.gif)"
      AppLab Intro 6 - Change Text 2: |-
        <div style="float:right">
        <img src="https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29 PM.png" style="height:150px;">
        </div>

        **Objetivo:** Tornar o texto maior e azul

        **Como:** Dado o `"rótulo1"` um `"tamanho-da-fonte"` de `80` e `"cor-do-texto"` de `"azul"`.

        **Preso? Clique aqui:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>
      AppLab Intro 6 - Full Text: |-
        <div style="float:right">
        <img src="https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19 AM.png" style="height:200px">
        </div>

        **Objetivo:** Altere as palavras na telas e as cores dos botões.

        **Como:** Defina o `"texto"` do rótulo para qualquer coisa que quiser, como `"Bem-vindo ao meu aplicativo!"`. Então defina a `"cor-de-fundo"` dos botões.

        **Preso? Clique aqui:** ![expandable](https://images.code.org/709ff200e5b5f553b24d1d0a769db6ed-image-1507565545993.gif)
      AppLab Intro 6 - animalSoundBoard: |-
        **Meta:** Continue construindo o quadro Som Animal. Em seguida, certifique-se de "Compartilhar" o quadro.

        **Como:** Adicione novos botões para mais animais. Ou faça o som do quadro para um tópico completamente diferente!
      AppLab Intro 6 - blankApp: |-
        **Objetivo:** Este é um Aplicativo do Aplicativo laboratório totalmente em branco. Construir o que quiser do zero!?

        **Como:** Você está no controle aqui. Você decide o que quer fazer!
      AppLab Intro 6 - onEvent intro: |-
        <img src="https://images.code.org/d793e711e9e2ea74f68cebf228fcb360-image-1506618780451.gif" style="float:right;height:150px">

        **Objetivo:** A tela ficar `"verde"` quando você clica no botão

        **Como:** Adicionar o código dentro do `"onEvent"` that define a `"cor de fundo"` da tela para `"verde"`.

        **Preso? Click here:** ![expandable](https://images.code.org/bbb452fdee5c546894a4f2025024ace3-image-1505882181893.gif)
      AppLab Intro 6 - onEvent twoButtons: |-
        <img src="https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif" style="float:right;height:200px">

        **Objetivo:** Complete este aplicativo da lanterna. O botão direito deve fazer a tela ficar "preta"`e o texto`"branco"\`

        **Como:** Adicione um segundo bloco `onEvent()` abaixo do primeiro. Em seguida, defina a `"cor de fundo"` da tela e `"cor do texto"` do rótulo.

        **Emperrado? Mostre-me:** ![expandable](https://images.code.org/64c83d66a723eae01d09e4aea38fbad1-image-1507567249833.gif)
      AppLab Intro 6 - playSound Template: "<img src=\"https://images.code.org/2bb21cff40cc9823a4ae370895de2953-image-1508294971111.49.16 PM.png\" style=\"float:right;height:200px\">\n\n**Objetivo:** Adicionar um animal ao quadro de sons. Se você não quer achar uma imagem do seu animal, então mude a cor do ícone do microfone para uma que você goste.\n\n**Como:** Adicione um `noEvento()` e use `executarSom()` dentro disso. Ache um som de animal que você goste na biblioteca de sons. Para a imagem, você pode fazer o upload de uma imagem e mudar a propriedade `\"imagem\"` ou apenas mudar a `\"cor-icone\"`. \n\n**Travado? Click Aqui:** ![expandable](https://images.code.org/b0f254d319f788f832553648db6fb13c-image-1507566138094.gif)"
      AppLab Intro 6 - playSound: "<img src=\"https://images.code.org/2bb21cff40cc9823a4ae370895de2953-image-1508294971111.49.16 PM.png\" style=\"float:right;height:200px\">\n\n**Objetivo:** Adicionar um animal ao quadro de sons. Se você não quer achar uma imagem do seu animal, então mude a cor do ícone do microfone para uma que você goste.\n\n**Como:** Adicione um `noEvento()` e use `executarSom()` dentro disso. Ache um som de animal que você goste na biblioteca de sons. Para a imagem, você pode fazer o upload de uma imagem e mudar a propriedade `\"imagem\"` ou apenas mudar a `\"cor-icone\"`. \n\n**Travado? Click Aqui:** ![expandable](https://images.code.org/b0f254d319f788f832553648db6fb13c-image-1507566138094.gif)"
      AppLab Intro 6 - quizApp: |-
        **Objetivo:** Construir três perguntas neste aplicativo de Quiz. Você pode sempre fazer mais perguntas, duplicando telas. Então envie para um amigo!

        **Como:** Executar o aplicativo primeiro e tentar clicar em todos os botões para ver como funcionam. Depois a partir do modo de Design, você pode alterar o texto padrão para as perguntas e botões. No modo de codificação, crie um texto de resposta para quando o usuário clicar nos diferentes botões. Personalize as cores ou adicione imagens, se você quiser também!
      AppLab Intro 6 - thisOrThatAddButton Template: "**Objetivo:** Adicionar um segundo botão na tela que diz \"Certo!\"\n\n**Como:** No modo de Design, arraste um novo botão. Posicione e redimensione-o. Em seguida, defina seu '\"texto\" ', '\"cor de fundo\" ' e \"'`tamanho da fonte\"`\n\n**Mostre-me:** "
      AppLab Intro 6 - thisOrThatAddButton: |-
        <img src="https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00 PM.png" style="float:right;height:200px">

        **Objetivo:** Adicionar na tela um segundo botão que diz "Certo!"

        **Como:** No Modo Design, arraste um novo botão. Posicione-o e altere seu tamanho. Então, defina seu `"texto"`, `"cor de fundo"` e `"tamanho da fonte"`

        **Travou? Clique aqui:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)
      AppLab Intro 6 - thisOrThatAddScreen: |-
        <img src="https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59 PM.png" style="float:right;height:200px">

        **Objetivo:** Crie uma nova tela chamada `"telaDireita"`. Adicione uma curta descrição na tela.

        **Como:** Em Modo Design, adicione uma nova tela. Mude o `"id"` da tela para `"telaDireita"`. Então, arraste uma descrição para a tela com uma curta mensagem para o usuário. Você pode duplicar a `"telaEsquerda"` para fazer isso.

        **Travado? Clique Aqui:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)
      AppLab Intro 6 - thisOrThatPersonalize: |-
        <img src="https://images.code.org/762507aef26d512f820c42fb2e7fc6f1-image-1508386296370.11.19 PM.png" style="float:right;height:200px">

        **Objetivo:** Comece a construir seu próprio aplicativo "Escolha sua própria aventura". Não se esqueça de "Compartilhar" com alguém!

        **Como:** Escolha uma história básica que você quer contar, como quem é o seu personagem e a configuração. Em seguida, altere o texto e as imagens de seu aplicativo para combinar com a história. Você sempre pode adicionar mais telas conforme você continua a construir sua aventura.

        <details>

        <summary>

        <b>Preso? Clique aqui para ver algumas ideias</b>

        </summary>

        <li>Faça uma aventura sobre seu personagem fictício favorito</li>
        <li>Faça uma aventura sobre um famoso (ou uma pessoa não-tão-famosa) que você é um grande fã</li>
        <li>Faça uma aventura que tem um monte de reviravoltas inesperadas ou tenha uma difícil decisão moral</li>

        </details>
      AppLab Intro 6 - thisOrThatSetScreen: |-
        <img src="https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop (1).gif" style="float:right;height:200px">

        **Objetivo:** A tela muda para `"TelaDireita"` quando o usuário clica no botão "Direito!".

        **Como:** No modo de código, adicione um novo `onEvent()` para o seu programa ao seu botão "Direito!". Adicione um bloco `setScreen()` dentro disso que mudar as telas para `"AquelaTela"`.

        **Preso? Clique Aqui:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)
      AppLab Intro 7 - Change Screen Color: "<div style=\"float:right\">\n\\t<img src=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54 AM.png\" style=\"height:150px\"> \n</div>\n\n**Objetivo:** Fazer a tela ficar verde.\n\n**Como:** Arraste um bloco do `DefinirPropriedade()`. Use os menus suspensos para definir a tela `\"cor-de-fundo\"` para `\"verde\"`. Então pressione \"Correr\".\n\n**Preso? Clique Aqui:** ![expandable](https://images.code.org/3b5e70522b02867a1df1d5b5e481785e-image-1511279858395.gif)"
      AppLab Intro 7 - Change Text 2: |-
        <div style="float:right">
        <img src="https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29 PM.png" style="height:200px;">
        </div>

        **Objetivo:** Tornar o texto grande e azul.

        **Como:** Você precisará de duas linhas de código. Dê a `"label1"` um `"font-size"` de `80` e `"text-color"` de `"azul"`.

        **Ficou preso? Clique aqui:** ![expandable](https://images.code.org/2d5d46a03082af3b01847aad6602e2ea-image-1511280140482.gif)
      AppLab Intro 7 - Full Text: "<div style=\"float:right\">\n<img src=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19 AM.png\" style=\"height:200px\">\n</div>\n\n**Objetivo:** Tornar os botões `\"vermelho\"` and `\"azul\"`. Em seguida altere o texto no grande rótulo laranja.\n\n**Como:** \n\n-   Lembre-se que você pode passar o mouse sobre os elementos para ver o `\"id\"`.\n-   Defina o `\"background-color\"` dos botões para `\"vermelho\"` e `\"azul\"`.\n-   Defina a propriedade `\"text\"` do rótulo para o que você quiser, como `\"Bem vindo ao meu app!\"`.\n\n**Preso? Clique aqui:** ![expandable](https://images.code.org/4bf99e7352e7c17a5bf73ced80171f6a-image-1511280628092.gif)"
      AppLab Intro 7 - onEvent intro: |-
        <img src="https://images.code.org/3d8c8487ea669563d3401c0009cd9462-image-1511281194897.gif" style="float:right;height:200px">

        **Objetivo:** A tela irá iniciar com a cor azul. Adicione o código de modo que a tela fique verde quando você clica sob o o botão "Verdear" .

        **Como:** Insira o código dentro do `onEvent()` que define a `"cor-de-fundo"` to `"verde"`.

        **Está preso? Clique aqui:** ![expandable](https://images.code.org/5ddf6b129bc04b79839b3661ccef788b-image-1511281012076.gif)
      AppLab Intro 7 - onEvent twoButtons: |-
        <img src="https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif" style="float:right;height:200px">

        **Objetivo:** Ajude a terminar o aplicativo da lanterna. O botão "On" já deixa a tela branca. Execute o aplicativo e tente você mesmo. Então, escreve um código de modo que o botão "Off" faça a tela ficar preta novamente.

        **Como:** Adicione o código dentro do `onEvent()` vazio que define a `"cor-de-fundo"` da tela para `"Preto"` e `"cor-de-texto"`do rótulo para `"branco"`.

        **Está preso? Clique aqui:** ![expandable](https://images.code.org/020b1d9b465aaf35967a528a92961c13-image-1511281772276.gif)
      AppLab Intro 7 - playSound: "<img src=\"https://images.code.org/28176329f15dea1a863564b069e72aab-image-1511282702534.44.52 AM.png\" style=\"float:right;height:200px\">\n\n**Objetivo:** Esta placa de som está quase pronta! Rode para ver o como funciona. Depois adicione uma imagem, texto e um som no último botão.\n\n**Como:** \n\n-   Adicione um `onEvent()` no programa e adicione um \"id\" ao `\"button4\"`. Arraste o `playSound()` no `onEvent()` e escolha um som da biblioteca. \n-   Adicione um `setProperty()` (fora do seu `onEvent()`) para alterar a propriedade `\"image\"` do botão. Escolha uma imagem usando a terceira lista suspensa.\n-   Add one more `setProperty()` to change the button's `\"text\"`.\n\n**Stuck? Click here:** ![expandable](https://images.code.org/a3fdcb8954c5e8d585bef64df1ec5b1a-image-1511285408512.gif)"
      AppLab Intro 7 - thisOrThatAddButton: |-
        <img src="https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00 PM.png" style="float:right;height:200px">

        **Ojetivo:** Adicione um segundo botão na tela que diz "Correto!" com o `"id"` de `"corretoButton"`.

        **Como:** No Modo Design, arraste um novo botão. Posicione-o e altere seu temanho. Então, defina seu `"id"`, `"texto"`, `"cor de fundo"`, e `"tamanho da fonte"`.

        **Travou? Clique aqui:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)
      AppLab Intro 7 - thisOrThatAddScreen: |-
        <img src="https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59 PM.png" style="float:right;height:200px">

        **Objetivo:** Criar uma nova tela chamada `"rightScreen"`. Adicionar um rótulo que diz "Você foi para a direita!".

        **Como:** No Modo Design arraste um novo elemento de tela. Troque o `"id"` por `"rightScreen"`. Então arraste um rótulo para a tela e troque o texto para "Você foi para a direita!".

        **Travado? Clique aqui:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)
      AppLab Intro 7 - thisOrThatPersonalize: |-
        <a href="https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ" target="_blank"><img src="https://images.code.org/ba6c0db48cc1c3c28c135f1c2f67f361-image-1511244802597.10.18 PM.png" style="float:right;height:200px"></a>
        <a href="https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q" target="_blank"><img src="https://images.code.org/284b55697d786e0cd64350d0967c5dda-image-1511244806272.11.05 PM.png" style="float:right;height:200px"></a>
        <a href="https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg" target="_blank"><img src="https://images.code.org/445181ff8d84861919512ba9b8e09586-image-1511244809994.12.40 PM.png" style="float:right;height:200px"></a>

        **Objetivo:** Construa seu próprio aplicativo estendendo este projeto. Então, pode "Compartilhar" com alguém!

        **Como:** Decida qual tipo de aplicativo você está interessado em construir. Então o construa adicionando mais telas, botões, textos, sons e interações com o usuário ao seu aplicativo. Existem mais alguns blocos em sua caixa de ferramentas que você pode experimentar também. Quando você estiver pronto clique em "Compartilhar" para enviar para si mesmo ou a um amigo!

        <details>

        <summary>

        <b>Escolha Sua Própria Ideia de Aventuras</b>

        </summary>

        Experimente isto <a href="https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg" target="_blank">Exemplo Escolha Sua Própria Ideia de Aventuras</a> então você pode ver como um funciona. Aqui estão algumas ideias para te ajudar a vir com sua própria história.

        <li>Faça uma aventura sobre seu personagem preferido, real ou ficção.</li>
        <li>Faça uma aventura que conte a história do seu livro favorito, ou filme, ou sua própria criação.</li>
        <li>Faça uma aventura que tem um monte de situação que tenham várias reviravoltas ou que tenham escolhas morais difíceis.</li>
        <br>
        </details>

        <details><summary>

        <b>Ideias de Cartões Comemorativos</b>

        </summary>

        Experimente isto <a href="https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q" target="_blank">Exemplo de Aplicativo de Cartões Comemorativos</a> então você pode ver como um funciona. Aqui estão algumas ideias para te ajudar a vir com seu próprio cartão.

        <li>Pense em um aniversário, feriado ou outra data especial que está chegando. Faça um cartão para celebrar!</li>
        <li>Crie um cartão de agradecimento para alguém que você gosta.</li>
        <li>Crie um convite para um evento que está chegando.</li>
        <br>
        </details>

        <details><summary>

        <b>Ideias de Quiz de Personalidade</b>

        </summary>

        Experimente isto <a href="https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ" target="_blank">Exemplos de Aplicativos de Quiz de Personalidade</a> então você pode ver como um funciona. Aqui estão algumas ideias para te ajudar a vir com seu próprio quiz.

        <li>Faça um quiz que sugere algo que a pessoa pode gostar, por exemplo um prato de comida, um time, um livro ou um lugar.</li>
        <li>Faça um quiz que "prediz o futuro" baseado em nas respostas deles.</li>
        <li>Faça um quiz para ajudar as pessoas em decisões difíceis.</li>

        </details>
      AppLab Intro 7 - thisOrThatSetScreen: |-
        <img src="https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop (1).gif" style="float:right;height:200px">

        **Objetivo:** A tela altera para `"rightScreen"` quando o usuário clica em `"rightButton"`.

        **Como:** No Modo Código adicione um novo `onEvent()` ao seu programa para o seu botão "Direito!". Adicione um bloco `setScreen()` dentro dele que muda as telas para `"rightScreen"`.

        **Travado? Clique aqui:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)
      AppLab_test02: "# Este é o título\n\n-   Marcador 1 \n-   Faça isso\n-   Então isso\n\n![](https://images.code.org/982f9167cf54c24251922fbd0a7f60b3-image-1436470853351.png)"
      Applab AllTheThings ResourcesTab AllResources: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      Applab AllTheThings ResourcesTab MapReference: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      Applab AllTheThings ResourcesTab ReferenceLinks: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      Applab allthethings onRecordEvent: Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      Applab test: Você pode enviar este nível. Apenas para testes! Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      Artist Autorun Test: |-
        Agora coloque a função dentro de um laço
        para desenhar esses três quadrados.
      Artist Inspiration: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Atividade Livre - Inspiração**: Agora você aprendeu tudo o que precisa saber para criar um padrão como esse! \n\nSe essa imagem inspira você, tente fazer algo similar. Caso contrário, crie algo você mesmo. \n\nNota: Nós usamos o bloco `definir alpha` para fazer as \"pétalas\" desaparecerem para fora."
      Bergeron Robot Maze1: "Você pode me ajudar a pegar o porco malvado? \n\nJunte alguns blocos `mover para frente` abaixo do bloco `quando executar` e clique em \"Executar\". "
      Big Game Animation 1: |-
        Agora que você aprendeu a escrever funções lineares
        simples, vamos usá-las para adicionar um pouco de movimento ao nosso jogo.
        Clique em "Executar" para ver o que seu jogo pode fazer (não muito!), atualizar as variáveis que
        você quiser e depois clique em Concluir para seguir em frente.
      Big Game Animation 2: |-
        A função `atualização-alvo` pega o valor x atual do alvo e retorna um valor atualizado.

        Complete a `atualização-alvo` para que seja adicionado ao valor x toda vez que for chamado. Quanto mais você adicionar ao x, mais rápido o alvo irá.
      Big Game Animation 3: "A função \"atualizar-perigo\" deve funcionar como a função \"atualizar-alvo\", exceto pelo fato de que o inimigo deve se mover do lado direito para o lado esquerdo. \nComplete a função \"atualizar-inimigo\" para fazer o perigo voar pela tela."
      Big Game Animation 4: "Nesse ponto do seu jogo, seu inimigo deve percorrer a tela da direita para a esquerda e seu alvo deve percorrer a tela da esquerda para a direita.\nEles nunca voltam para a tela uma vez que tenham saído, mas cuidaremos disso depois. \n\nAnalise seu jogo para ver se ele está funcionando como você gostaria e então clique em \"Concluir\" para seguir em frente."
      Big Game Booleans 1: |-
        Da última vez que você trabalhou em seu jogo fizemos
        nossos alvo e inimigo voarem pela tela, mas eles nunca
        voltaram. Clique em "Executar" para ver como seu jogo está funcionando agora e depois clique
        em concluir. Vamos fazer os gráficos reaparecerem na tela depois que eles tiverem
        saído.
      Big Game Booleans 2: |-
        Agora que a sua função `onscreen?` está verificando `safe-left?` e \`safe-right?, precisamos corrigir essas funções.

        Quando os usamos para Sam o Bat, queríamos evitar que Sam saísse da tela, mas agora queremos que o Alvo e o Perigo realmente saiam da tela antes de voltar para o lado oposto.

        Vá para a seção "Funções" da caixa de ferramentas e complete a função "safe-left?" Para que ela retorne _verdadeiro_ se a coordenada x do sprite for maior que -50.

        Se tiver corrido bem, deverá ver o Perigo ir todo o caminho para o lado esquerdo antes de voltar para o lado direito.
      Big Game Booleans 3: "Agora que você tem `esquerda-segura?` funcionando, vamos consertar a `direita-segura?` - \n\nEla deve receber a coordenada de x do sprite e retornar verdadeiro se essa coordenada for menor que 450. \n\nUma vez que você tenha completado a `direita-segura?,` você deve ver o Alvo sair pelo lado direito da tela e retornar pela\nesquerda."
      Big Game Booleans 4: "Fornecemos algumas funções vazias para `esquerda-segura?` e `direita-segura?`. A primeira coisa que você precisa fazer é completar\na função `na-tela?` para que ela verifique `se esquerda-segura?` e `direita-segura?` são verdadeiras. \n\n_DICA_ - mesmo depois de adicionar `esquerda-segura?` e `direita-segura?` seus objetos não vão retornar à tela - porque você acha que isso acontece?"
      Big Game Booleans 5: |-
        Nesse ponto do seu jogo, seu inimigo deve percorrer
        a tela da direita para a esquerda, seu alvo deve percorrer a tela da esquerda para
        a direita e eles devem retornar para o lado oposto, repetidamente. Veja
        se seu jogo está funcionando como você gostaria e então clique em
        Concluir para seguir em frente.
      Big Game Collision 1: |-
        Até agora você programou um jogo
        com um alvo e um inimigo que se movem, sendo que ambos retornam à tela quando
        saem, e um jogador que responde à entrada do teclado. Clique em Executar para
        ver como seu jogo está funcionando e então vamos para o que
        está faltando - a detecção de colisão!
      Big Game Collision 3: "Vamos consertar essa função de `distância` para que nossa detecção de colisão funcione corretamente. \n\nUse a Fórmula da Distância para que a função de distância retorne a distância entre as coordenadas centrais do jogador (px, py) e as coordenadas centrais de outro objeto (cx, cy).\n\nFornecemos uma função de `altura-linha` para lhe ajudar."
      Big Game Collision 4: "A função `distância` retorna a distância entre dois sprites. \n\nComplete a função `colidir?` para que ela retorne _verdadeiro_ se a distância entre dois pontos for menor que 100 pixels. \n\nSe você completá-la corretamente, seus sprites vão colidir instantaneamente - por que você acha que isso acontece?"
      Big Game Final: "Você conseguiu!\n\nAgora seu jogo deve estar funcionando completamente. Aproveite seu novo jogo e faça alguns ajustes finais.\n\nQuando você estiver feliz com o produto final, clique em Concluir e você terá a oportunidade de compartilhar um link para o seu jogo. \n\nBom trabalho!"
      Big Game Player 1: |-
        Estamos quase terminando o jogo!

        Da última vez que você trabalhou no seu jogo, você usou booleanos para fazer seu alvo e seu inimigo retornarem à tela quando saírem. Clique em Executar para ver como seu jogo está agora e então vamos fazer seu jogador se mover para cima e para baixo.
      Big Game Player 2: "Para mover o jogador para cima e para baixo, vamos precisar usar um bloco condicional para descobrir qual tecla está pressionada e responder de acordo.\n\nOs computadores leem teclas pressionadas como códigos numéricos - a seta para cima é **38** e a seta para baixo é **40**. Você pode consultar outros códigos de teclas em seu material. \n\nEdite a função `atualizar-jogador` para que ela mova o jogador para cima quando a seta para cima (código 38) estiver pressionada e para baixo quando a seta para baixo (código 40) estiver pressionada."
      Big Game Vars 1: |-
        Vamos começar o seu Grande Jogo! Aqui você vai
        ver um monte de trechos de código para reservar espaço que você eventualmente vai substituir
        pelo seu próprio código, mas por enquanto vamos nos preocupar somente em definir as variáveis.
        Clique em "Executar" para ver como é o jogo com os valores-padrão.
      Big Game Vars 2: A primeira etapa para você colocar a sua marca nesse jogo é dar a ele um bom título. Clique em editar nas variáveis `título` e `subtítulo` e altere-as para algo novo.
      Big Game Vars 3: Agora, vamos definir o pano de fundo para seu novo jogo. Edite a variável `bg` e selecione uma nova imagem de pano de fundo no menu.
      Big Game Vars 4: |-
        Incrível! Agora você pode atualizar as variáveis para
        o jogador, o alvo e o inimigo. Fique à vontade para brincar com todas as variáveis
        e assim deixar seu jogo do jeito que você quer. Clique em "Concluir"
        quando você terminar.
      Boolean Expressions: |-
        ### Pontos para prestar atenção:

        1.  O que é uma _Expressão Booleana?_
        2.  Por que ela é chamada "Booleana"?
        3.  Esta é uma expressão legal? `10 > 25`?
      Brad Spooky House Copy: 'Atividade livre: aqui estão as funções que você escreveu e mais algumas para você usar. Brinque com a largura da caneta para ver como seus desenhos ficam diferentes!'
      Brad Spooky House: 'Atividade livre: aqui estão as funções que você escreveu e mais algumas para você usar. Brinque com a largura da caneta para ver como seus desenhos ficam diferentes!'
      Brand Book Example: |-
        # Livro Marca

        Confira o exemplo de um livro de marca
      CDU U6 Playground Sound Board: |-
        # Placa de Som 2.0

        Você agora pode tocar sons, notas e músicas! Com este novo conhecimento, você pode até mesmo transformar sua placa em uma placa de som.

        Na caixa de ferramentas você tem à sua disposição todos os blocos de campainha e LEDs. Veja todas as coisas legais que você pode fazer!

        # Faça Isto

        -   Use todos eventos da placa relacionados ao botão (pra cima, pra baixo), para tocar um único som ou música para cada evento.
        -   Há algum outro evento que você poderia usar para tocar ainda mais sons/músicas?
      CDU U6 Playground Sound Board_2018: |-
        # Placa de Som 2.0

        Você agora pode tocar sons, notas e músicas! Com este novo conhecimento, você pode até mesmo transformar sua placa em uma placa de som.

        Na caixa de ferramentas você tem à sua disposição todos os blocos de campainha e LEDs. Veja todas as coisas legais que você pode fazer!

        # Faça Isto

        -   Use todos eventos da placa relacionados ao botão (pra cima, pra baixo), para tocar um único som ou música para cada evento.
        -   Há algum outro evento que você poderia usar para tocar ainda mais sons/músicas?
      CDU U6 Playground Sound Board_2019: |-
        # Placa de Som 2.0

        Você agora pode tocar sons, notas e músicas! Com este novo conhecimento, você pode até mesmo transformar sua placa em uma placa de som.

        Na caixa de ferramentas você tem à sua disposição todos os blocos de campainha e LEDs. Veja todas as coisas legais que você pode fazer!

        # Faça Isto

        -   Use todos eventos da placa relacionados ao botão (pra cima, pra baixo), para tocar um único som ou música para cada evento.
        -   Há algum outro evento que você poderia usar para tocar ainda mais sons/músicas?
      CSD - Predict - Array Length List Printing: |-
        # Laço Para - Usando o tamanho da lista em um Laço Para

        Uma das formas mais comuns de usar laçso é com listas. Neste exemplo, a condição depende da lista.

        O que isso vai imprimir na tela?
      CSD - Predict List Accessing: |-
        # Prever

        O código abaixo tem 4 coisas que serão registradas na tela. O que você acha que vai imprimir na tela como resultado desse código?
      CSD - for loop - on off: |-
        # Laços Para com LEDs coloridos

        Laços Para pode tornar mais fácil fazer algo para todos os `colorLed`s.

        **Programa de Início:** Existem dois botões, um para ativar todos os `colorLeds` e um para desativá-los.

        Você pode preencher as funções para cada uma dessas tarefas usando um loop for para escrever seu algoritmo.
      CSD For Loops - Check For Understanding: |-
        # Entrada

        Na caixa abaixo, explique as 3 partes diferentes do laço para. Por que cada um é importante?
      CSD Hackathon Pt 1: |-
        # MS Hackathon: Desenho Chique

        Os blocos que lhe foram dados são aqueles que um estudante em CS Descobertas provavelmente teria disponível depois de uma semana usando o Laborário de Jogos. Sem sprites ainda, mas você **acaba de ser apresentado à algumas construções programáticas muito fortes como geração de números aleatórios, armazenamento de valores numa variável, e iteração.** Você também terá familiaridade com os comandos de desenho à esta altura.

        # Faça Isto

        -   Usando apenas as ferramentas disponíveis, **faça algo incrível!!**
        -   O projeto nesta altura provavelmente seria um **cartão animado** mas sinta-se a vontade para ir na direção que você quiser.
        -   **Evite variáveis aritméticas complexas** se puder. Você "ainda não as conhece" ainda.
        -   **Evite referenciar o iterador nas suas iterações**. À esta altura é só uma iteração repetitiva.
      CSD Hackathon Pt 2: |-
        # MS Hackathon: Sprites e Interatividade

        Você pode agora **criar sprites, adicionar imagens, manipular suas propriedades, e executar variáveis aritméticas simples para atualizar os seus valores (exemplo: `sprite.scale = sprite.scale + 1;`)**. Você também foi apresentado às declarações condicionais e sabe como usá-las para ter algum comportamento interativo com o mouse e teclado.

        # Faça Isto

        -   Usando somente as ferramentas que lhe foram disponibilizadas **faça algo incrível!**
        -   Provavelmente sua meta de projeto aqui deva ser um **jogo simples** ou **visualização interativa**.
        -   Você não sabe ainda sobre **grupos, iterações, colisões**, ou propriedades mais mágicas como **velocidade ou rapidez de rotação**.

        **Estes comandos não estão na paleta de bloco mas fique a vontade para usar**

        -   `mySprite.mouseActive = true;` fará seu sprite rastrear os eventos do mouse
        -   `mySprite.mouseIsOver` e `mySprite.mouseIsPressed` são booleanos que você pode usar para entender as interações mouse-sprite

        **Para adicionar sprites na imagem siga o padrão abaixo**

            var spriteImage, sprite;

            //Você vai precisar uma função de pré-carregamento para carregar a imagem.
            function preload(){\t\t\t
                spriteImage = loadImage("imageURL");
            }

            //Cria seu sprite e adiciona a imagem
            function setup(){
                sprite = createSprite(200,200,10,10);
                sprite.addImage("someName", spriteImage);
            }

            //Desenha seus sprites.
            function draw(){
            \tbackground(255,255,255);
            \tdrawSprites();
            }
      CSD Hackathon Week 1: |-
        # MS Hackathon: Desenho Chique

        Os blocos que lhe foram dados são aqueles que um estudante em CS Descobertas provavelmente teria disponível depois de uma semana usando o Laborário de Jogos. Sem sprites ainda, mas você **acaba de ser apresentado à algumas construções programáticas muito fortes como geração de números aleatórios, armazenamento de valores numa variável, e iteração.** Você também terá familiaridade com os comandos de desenho à esta altura.

        # Faça Isto

        -   Usando apenas as ferramentas disponíveis, **faça algo incrível!!**
        -   O projeto nesta altura provavelmente seria um **cartão animado** mas sinta-se a vontade para ir na direção que você quiser.
        -   **Evite variáveis aritméticas complexas** se puder. Você "ainda não as conhece" ainda.
        -   **Evite referenciar o iterador nas suas iterações**. À esta altura é só uma iteração repetitiva.
      CSD Hackathon Week 2: |-
        # MS Hackathon: Sprites e Interatividade

        Você pode agora **criar sprites, adicionar imagens, manipular suas propriedades, e executar variáveis aritméticas simples para atualizar os seus valores (exemplo: `sprite.scale = sprite.scale + 1;`)**. Você também foi apresentado às declarações condicionais e sabe como usá-las para ter algum comportamento interativo com o mouse e teclado.

        # Faça Isto

        -   Usando somente as ferramentas que lhe foram disponibilizadas **faça algo incrível!**
        -   Provavelmente sua meta de projeto aqui deva ser um **jogo simples** ou **visualização interativa**.
        -   Você não sabe ainda sobre **grupos, iterações, colisões**, ou propriedades mais mágicas como **velocidade ou rapidez de rotação**.

        **Estes comandos não estão na paleta de bloco mas fique a vontade para usar**

        -   `mySprite.mouseActive = true;` fará seu sprite rastrear os eventos do mouse
        -   `mySprite.mouseIsOver` e `mySprite.mouseIsPressed` são booleanos que você pode usar para entender as interações mouse-sprite

        **Para adicionar sprites na imagem siga o padrão abaixo**

            var spriteImage, sprite;

            //Você vai precisar uma função de pré-carregamento para carregar a imagem.
            function preload(){\t\t\t
                spriteImage = loadImage("imageURL");
            }

            //Cria seu sprite e adiciona a imagem
            function setup(){
                sprite = createSprite(200,200,10,10);
                sprite.addImage("someName", spriteImage);
            }

            //Desenha seus sprites.
            function draw(){
            \tbackground(255,255,255);
            \tdrawSprites();
            }
      CSD U1 - Image Filter Demo show Binary: |-
        # Oh Não

        Esta árvore deveria ser verde, mas está azul. Você pode usar os blocos de filtro para mudar todos os pixels azuis para verde?
      CSD U1 - Image Filter Demo: |-
        # Oh Não

        Esta árvore deveria ser verde, mas está azul. Você pode usar os blocos de filtro para mudar todos os pixels azuis para verde?
      CSD U1 - PixFilter 1x1 Filter: |-
        # Filtrando Imagens

        Se você alguma vez usou o Instagram, então você provavelmente já se deparou com um filtro de imagens. Filtros de imagem recebem cada pixel, o processa de alguma forma, e então retorna o pixel filtrado. Nesta ferramenta iremos iniciar filtrando um único pixel, antes de prosseguirmos a uma imagem completa.

        Você irá notar que existem três caixas de opção sob a figura. Um substituir vermelho, outro substituir verde, e outro substituir azul. Próximo a isto, há caixas de opção para as cores. Com quantos bits estamos trabalhando? Sim, estamos trabalhando com 3. Também aprendemos que os bits controlam as cores. O primeiro bit controla R (vermelho, ou "red"), o segundo bit controla G (verde, ou "green"), e o terceiro bit controla B (azul, ou "blue").

        # Faça Isto

        Experimente trocar as caixas de opção das cores próximas ao substituir. Com base em como os bits mudam, você consegue explicar como o substituir trabalha? Converse com seu parceiro e veja se você consegue descobrir.
      CSD U1 - PixFilter 1x1 intro: |-
        # Cores de 3 bits

        Cada pixel é um quadrado em uma tela que emite luz. Cada pixel pode ter um determinado número de bits atribuídos a ele e os bits por pixel determinam as cores que podem ser renderizadas.

        Nesta ferramenta, estamos usando 3 bits para definir um grande pixel preto. O primeiro bit afeta a tonalidade vermelha. O segundo bit afeta a tonalidade verde. O terceiro bit afeta a tonalidade azul.

        # Faça isso

        -   Clique no botão "Executar" para iniciar a ferramenta
        -   Clique nas lâmpadas para ligar ou desligar cada cor e ver o que acontece com o seu pixel
        -   Veja quantas cores diferentes você pode criar com apenas três bits
        -   Anote o número binário associado a cada cor que você criar
      CSD U1 - PixFilter Filter Intro: |-
        # Filtrando Pixels

        Se você já usou o Instagram, provavelmente encontrou um filtro de imagem. Os filtros de imagem leem cada pixel, processam de alguma forma e retornam o pixel filtrado. Nesta ferramenta, vamos começar filtrando apenas um único pixel antes de passar para uma imagem completa.

        # Faça isso

        -   Tente alterar as listas de cores na seção Filtro
        -   Clique na linha superior de lâmpadas na seção Diagrama para ver como o filtro irá converter a entrada (lâmpadas de cima) para a saída (lâmpadas de baixo)
        -   Veja como os números na seção Binário refletem as mudanças nas cores
        -   Com base em como os bits mudam, você consegue explicar o que a substituição está fazendo? Converse com seu parceiro e veja se você consegue descobrir.
        -   Preencha a tabela do Nível 2 no seu Guia de Atividades
      CSD U1 - PixFilter Filter Revisit: "# Combinando Filtros\n\nAgora que vc já praticou com a filtragem de um único canal de cor, é hora de ver o que acontece quando filtramos um número maior de cores. \n\n# Faça Isto\n\n-   Usando as caixas de opção na seção de filtros, crie um filtro que altera o valor de mais de um canal de cor\n-   Clique sobre a coluna superior de lâmpadas no Diagrama, para ver como o filtro irá converter a entrada (lâmpadas superiores), na saída (lâmpadas inferiores)\n-   Veja como os números na seção Binário refletem as mudanças nas cores\n-   Complete a tabela Nivel 4 no seu Guia de Atividades"
      CSD U1 - PixFilter FreePlay: |-
        # Jogo Livre

        Faça o que você quiser, faça algo incrível
      CSD U1 - PixFilter Full: "# Instruções Aqui"
      CSD U1 - PixFilter Mario: |-
        # Combinando Filtros

        Às vezes você precisará filtrar mais do que um pixel, para obter a alteração de cores que você deseja.

        # Faça Isto

        Note o Mário: ele está muito bem com seu chapeu vermelho e jardineira. O seu objetivo é ajustar o filtro, para que ele se pareça com Luigi, com um chapeu verde e jardineira.

        -   Primeiro, identifique quais os bits que devem ser alterados, para atingir o objetivo
        -   Assim que você tiver identificado os bits que necessitam de alteração, ajuste as caixas de opção de forma apropriada
        -   Após você conseguir que o filtro funcione, tente bolar outros filtros que alterem _somente_ o chapeu e a jardineira - quantas cores diferentes de roupas você consegue obter?

        _Quantas tentativas foram necessárias para você encontrar o filtro correto?_
      CSD U1 - PixFilter Mushroom: |-
        # Filtrando Imagens

        Agora que já vimos como um único pixel pode ser filtrado para trocar sua cor, vamos tentar aplicar um filtro a uma imagem, que é composta por múltiplos pixels. O filtro que você irá criar será aplicado a cada pixel na imagem - e você ainda terá as lâmpadas disponíveis, para testar como seu filtro irá trabalhar com as cores individuais.

        # Faça Isto

        Temos aqui uma imagem de um cogumelo vermelho - você tentará transformá-lo em um cogumelo amarelo.

        -   Primeiro, identifique qual bit deverá ser alterado, para que o vermelho se transforme em amarelo
        -   Assim que você identificar qual bit necessita ser alterado, utilize as caixas de opção do filtro para fazer com que todas as áreas vermelhas se tornem amarelas
        -   Quando o filtro estiver funcionando de modo que o vermelho se tornou amarelo, veja se você consegue obter filtros para dar ao cogumelo outras cores

        _Quantas tentativas você levou para encontrar o filtro correto?_
      CSD U1 - PixFilter UnFilter: |-
        # Removendo o Filtro

        Filtros baseados em bits podem ser usados também para _desfazer_ uma filtragem. Esta é uma imagem de um pássaro, que foi filtrada a partir de suas cores originais. Você consegue trazer a imagem de volta ao normal?

        # Faça Isto

         <img src="https://images.code.org/c15636bda16e8792c59ac955332e37a5-image-1471372091393.22.56.png" style="float:right; width: 200px"/>
        Isto é como nosso pássaro deveria ser. Use um filtro para trazê-lo de volta ao normal.

        -   Decida quais as cores (e portanto quais os bits) que você precisa mudar. Você pode precisar anotar suas ideias em uma folha de papel
        -   Assim que você souber quais bits devem ser alterados, ajuste as caixas de opção de forma apropriada para testar sua resposta
        -   Quando você tiver corrigido a imagem, anote tanto seu processo, quanto seu filtro final, na seção Nivel 6 do seu Guia de Atividades

        _Quantas tentativas você levou para encontrar o filtro correto?_
      CSD U1 - Single Pixel: |-
        # Cores de 3 bits

        Cada pixel é um quadrado em uma tela que emite luz. Cada pixel pode ter um determinado número de bits atribuídos a ele e os bits por pixel determinam as cores que podem ser renderizadas.

        Nesta ferramenta, estamos usando 3 bits para definir um grande pixel azul. O primeiro bit afeta a tonalidade vermelha. O segundo bit afeta a tonalidade verde. O terceiro bit afeta a tonalidade azul.

        # Faça isso

        -   Clique nas lâmpadas para ligar ou desligar cada cor e ver o que acontece com o seu pixel
        -   Veja quantas cores diferentes você pode criar com apenas três bits
      CSD U1 Feedback FR: Pense em um feedback que você recebeu, mas NÃO usou para melhorar seu applicativo. Por que você optou por não usar este feedback?
      CSD U1 Test Collaborate FR: Pense em um momento em que você e seu parceiro discordaram em algo. Como você resolveu este desacordo?
      CSD U1 Test Feedback FR: Pense em um feedback que você recebeu, mas NÃO usou para melhorar seu applicativo. Por que você optou por não usar este feedback?
      CSD U1 Test Iteration FR: Lembre-se de alguma forma em que sua ideia para o aplicativo mudou enquanto você trabalhava em seu projeto. Qual foi a mudança, e por que foi necessária?
      CSD U1 Test storage FR: Pense em um tipo de informação que seu aplicativo usou, mas NÃO armazenou para usar depois. Por que você decidiu não guardar esta informação?
      CSD U2  layout style body: |-
        <div style="float: right; height: 150px; width: 400px; overflow-y: scroll; margin-left: 20px;">
        <details>

        <summary>

        **O que é um conjunto de regras de CSS?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um seletor?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um bloco de declaração?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um par propriedade-valor?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Como eu crio um novo conjunto de regras?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>

        Blá blá resposta

        </details>
        </div>

        # O Elemento Corpo

        -   Encontre o conjunto de regras `body` no "style.css"
        -   Converse com um parceiro o que você acha que vai acontecer se você adicionar `text-align`, `color`, ou outras propriedades de texto ao conjunto de regras `body`.
        -   Tente algumas propriedades diferentes para validar seus visitantes.
      CSD U2  layout style textalign: |-
        <div style="float: right; height: 150px; width: 400px; overflow-y: scroll; margin-left: 20px;">
        <details>

        <summary>

        **O que é um conjunto de regras de CSS?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um seletor?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um bloco de declaração?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um par propriedade-valor?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Como eu crio um novo conjunto de regras?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>
        Blá blá resposta
        </details>
        <details>
        <summary>

        **Porque o aquivo "style.css" está numa linguagem diferente?**

        </summary>

        Blá blá resposta

        </details>
        </div>

        # Alinhamento de Texto

        -   Encontre a propriedade `text-align` no "style.css" no conjunto de regras `p`.
        -   Troque o valor de alinhamento de texto para `center` ou `right`.
        -   Adicione uma regra `text-align` no conjunto de regras`body`
      CSD U2 CSS explore CSS: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **Como eu navego entre arquivos?**

        </summary>

        Clique no nome do arquivo que você quer olhar no menu do lado esquerdo da tela.

        </details>
        </div>

        # Adicionando Estilo

        Este projeto de Laboratório Web está usando uma nova linguagem para adicionar estilo à página. Com um parceiro explore ambos arquivos `index.html` e `style.css`. Discutem as seguintes questões.

        -   O que muda nesta nova linguagem em relação à página?
        -   Como esta linguagem difere do HTML?
        -   Como os arquivos `index.html` e `style.css` estão conectados?
      CSD U2 CSS explore CSS_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **Como eu navego entre arquivos?**

        </summary>

        Clique no nome do arquivo que você quer olhar no menu do lado esquerdo da tela.

        </details>
        </div>

        # Adicionando Estilo

        Este projeto de Laboratório Web está usando uma nova linguagem para adicionar estilo à página. Com um parceiro explore ambos arquivos `index.html` e `style.css`. Discutem as seguintes questões.

        -   O que muda nesta nova linguagem em relação à página?
        -   Como esta linguagem difere do HTML?
        -   Como os arquivos `index.html` e `style.css` estão conectados?
      CSD U2 CSS explore CSS_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **Como eu navego entre arquivos?**

        </summary>

        Clique no nome do arquivo que você quer olhar no menu do lado esquerdo da tela.

        </details>
        </div>

        # Adicionando Estilo

        Este projeto de Laboratório Web está usando uma nova linguagem para adicionar estilo à página. Com um parceiro explore ambos arquivos `index.html` e `style.css`. Discutem as seguintes questões.

        -   O que muda nesta nova linguagem em relação à página?
        -   Como esta linguagem difere do HTML?
        -   Como os arquivos `index.html` e `style.css` estão conectados?
      CSD U2 Debugging 1: "# Depurando\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que é um bug?**\n\n</summary>\nBugs são erros cometidos no código que fazem com que ele não funcione como esperado.\n</details>\n<details>\n<summary>\n\n**O que é depurar?**\n\n</summary>\nDepurar é o processo de encontrar e corrigir bugs.  Depurar é um processo de solução de problema no qual você segue alguns passos de solução conforme você tenta depurar. \n</details>\n<details>\n<summary>\n\n**Quais são alguns exemplos de bugs?**\n\n</summary>\n\nBugs podem ser qualquer coisa que faça o código não funcionar como planejado. Alguns exemplos são erros de ortografia, inserir código no lugar errado, usar a marcação errada ou mesmo esquecer de encerrar a marcação.\n\n</details>\n</div>\n\nO código de computador é escrito por humanos, e todos os humanos comentem erros. Parte de ser um bom cientista computacional é ser capaz de encontrar seus error e corrigí-los. Na Ciência da Computação nós chamamos erros de **bugs**. O processo de encontrar e arrumar estes bugs é chamado **depuração**. Nos próximos níveis você trabalhará com suas habilidades de depuração.\n\n# Faça Isto\n\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56 AM.png\" style=\"float:right;border:black solid 5px;\">\n\n-   Veja o código da página web, e converse com seu parceiro sobre o que está causando os dois seguintes bugs:\n    \\\\t\\* O cabeçalho não é grande o suficiente.\n    \\\\t\\* O segundo item na lista não tem um número.\n-   Corrija todos os bugs no código de forma que o resultado final seja igual à imagem à direita."
      CSD U2 Debugging 1_2018: "# Depurando\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que é um bug?**\n\n</summary>\nBugs são erros cometidos no código que fazem com que ele não funcione como esperado.\n</details>\n<details>\n<summary>\n\n**O que é depurar?**\n\n</summary>\nDepurar é o processo de encontrar e corrigir bugs.  Depurar é um processo de solução de problema no qual você segue alguns passos de solução conforme você tenta depurar. \n</details>\n<details>\n<summary>\n\n**Quais são alguns exemplos de bugs?**\n\n</summary>\n\nBugs podem ser qualquer coisa que faça o código não funcionar como planejado. Alguns exemplos são erros de ortografia, inserir código no lugar errado, usar a marcação errada ou mesmo esquecer de encerrar a marcação.\n\n</details>\n</div>\n\nO código de computador é escrito por humanos, e todos os humanos comentem erros. Parte de ser um bom cientista computacional é ser capaz de encontrar seus error e corrigí-los. Na Ciência da Computação nós chamamos erros de **bugs**. O processo de encontrar e arrumar estes bugs é chamado **depuração**. Nos próximos níveis você trabalhará com suas habilidades de depuração.\n\n# Faça Isto\n\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56 AM.png\" style=\"float:right;border:black solid 5px;\">\n\n-   Veja o código da página web, e converse com seu parceiro sobre o que está causando os dois seguintes bugs:\n    \\\\t\\* O cabeçalho não é grande o suficiente.\n    \\\\t\\* O segundo item na lista não tem um número.\n-   Corrija todos os bugs no código de forma que o resultado final seja igual à imagem à direita."
      CSD U2 Debugging 1_2019: "# Depurando\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que é um bug?**\n\n</summary>\nBugs são erros cometidos no código que fazem com que ele não funcione como esperado.\n</details>\n<details>\n<summary>\n\n**O que é depurar?**\n\n</summary>\nDepurar é o processo de encontrar e corrigir bugs.  Depurar é um processo de solução de problema no qual você segue alguns passos de solução conforme você tenta depurar. \n</details>\n<details>\n<summary>\n\n**Quais são alguns exemplos de bugs?**\n\n</summary>\n\nBugs podem ser qualquer coisa que faça o código não funcionar como planejado. Alguns exemplos são erros de ortografia, inserir código no lugar errado, usar a marcação errada ou mesmo esquecer de encerrar a marcação.\n\n</details>\n</div>\n\nO código de computador é escrito por humanos, e todos os humanos comentem erros. Parte de ser um bom cientista computacional é ser capaz de encontrar seus error e corrigí-los. Na Ciência da Computação nós chamamos erros de **bugs**. O processo de encontrar e arrumar estes bugs é chamado **depuração**. Nos próximos níveis você trabalhará com suas habilidades de depuração.\n\n# Faça Isto\n\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56 AM.png\" style=\"float:right;border:black solid 5px;\">\n\n-   Veja o código da página web, e converse com seu parceiro sobre o que está causando os dois seguintes bugs:\n    \\\\t\\* O cabeçalho não é grande o suficiente.\n    \\\\t\\* O segundo item na lista não tem um número.\n-   Corrija todos os bugs no código de forma que o resultado final seja igual à imagem à direita."
      CSD U2 Debugging 2: "# Depuração\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n\\*\\* O que é um bug? \\*\\*\n\n</summary>\nBugs são erros no código que fazem com que ele não funcione como o planejado.\n</details>\n<details>\n<summary>\n\n\\*\\* O que é depuração? \\*\\*\n\n</summary>\nDepuração é o processo de encontrar e corrigir bugs. Depuração é um processo de resolução de problema, portanto, use seus passos para resolução de problema conforme você tentar depurar. \n</details>\n<details>\n<summary>\n\n\\*\\* Quais são alguns exemplos de erros? \\*\\*\n\n</summary>\n\nBugs podem ser qualquer coisa que faz com que o código não funcione conforme o planejado.  Alguns exemplos são digitar incorretamente, colocando o código no lugar errado, usando o marcador errado, ou esquecer de fechar um marcador.\n\n</details>\n</div>\n\nMais práticas de depuração!  Esta página é um pouco mais desafiadora para depurar do que a última.\n\n# Faça isto\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38 AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Discuta com seu parceiro o que você acha sobre os insetos que estão nesta página.\n-   Encontre e corrija todos os bugs, para que sua página corresponde à da direita."
      CSD U2 Debugging 2_2018: "# Depuração\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n\\*\\* O que é um bug? \\*\\*\n\n</summary>\nBugs são erros no código que fazem com que ele não funcione como o planejado.\n</details>\n<details>\n<summary>\n\n\\*\\* O que é depuração? \\*\\*\n\n</summary>\nDepuração é o processo de encontrar e corrigir bugs. Depuração é um processo de resolução de problema, portanto, use seus passos para resolução de problema conforme você tentar depurar. \n</details>\n<details>\n<summary>\n\n\\*\\* Quais são alguns exemplos de erros? \\*\\*\n\n</summary>\n\nBugs podem ser qualquer coisa que faz com que o código não funcione conforme o planejado.  Alguns exemplos são digitar incorretamente, colocando o código no lugar errado, usando o marcador errado, ou esquecer de fechar um marcador.\n\n</details>\n</div>\n\nMais práticas de depuração!  Esta página é um pouco mais desafiadora para depurar do que a última.\n\n# Faça isto\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38 AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Discuta com seu parceiro o que você acha sobre os insetos que estão nesta página.\n-   Encontre e corrija todos os bugs, para que sua página corresponde à da direita."
      CSD U2 Debugging 2_2019: "# Depuração\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n\\*\\* O que é um bug? \\*\\*\n\n</summary>\nBugs são erros no código que fazem com que ele não funcione como o planejado.\n</details>\n<details>\n<summary>\n\n\\*\\* O que é depuração? \\*\\*\n\n</summary>\nDepuração é o processo de encontrar e corrigir bugs. Depuração é um processo de resolução de problema, portanto, use seus passos para resolução de problema conforme você tentar depurar. \n</details>\n<details>\n<summary>\n\n\\*\\* Quais são alguns exemplos de erros? \\*\\*\n\n</summary>\n\nBugs podem ser qualquer coisa que faz com que o código não funcione conforme o planejado.  Alguns exemplos são digitar incorretamente, colocando o código no lugar errado, usando o marcador errado, ou esquecer de fechar um marcador.\n\n</details>\n</div>\n\nMais práticas de depuração!  Esta página é um pouco mais desafiadora para depurar do que a última.\n\n# Faça isto\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38 AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Discuta com seu parceiro o que você acha sobre os insetos que estão nesta página.\n-   Encontre e corrija todos os bugs, para que sua página corresponde à da direita."
      CSD U2 Debugging 3: "# Depuração\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n\\*\\* O que é um bug? \\*\\*\n\n</summary>\nBugs são erros no código que fazem com que ele não funcione como o planejado.\n</details>\n<details>\n<summary>\n\n\\*\\* O que é depuração? \\*\\*\n\n</summary>\nDepuração é o processo de encontrar e corrigir bugs. Depuração é um processo de resolução de problema, portanto, use seus passos para resolução de problema conforme você tentar depurar. \n</details>\n<details>\n<summary>\n\n\\*\\* Quais são alguns exemplos de erros? \\*\\*\n\n</summary>\nBugs podem ser qualquer coisa que faz com que o código não funcione conforme o planejado.  Alguns exemplos são digitar incorretamente, colocando o código no lugar errado, usando o marcador errado, ou esquecer de fechar um marcador.\n</details>\n<details>\n<summary>\n\n**Porque as vezes o inspetor para de funcionar?**\n\n</summary>\n\nAlgumas vezes existem tantos bugs no HTML que o inspetor não consegue ler o código apropriadamente e isso para de funcionar completamente, até mesmo para as partes do código que estão corretas. Uma vez que bugs foram corrigidos, o inspetor irá funcionar novamente.\n\n</details>\n</div>\n\nEssa página possui imagens nela. Imagens fazem o processo de encontrar bugs mais complicado. Você consegue depurar essa página?\n\n# Faça isso\n\n-   Discuta com seu parceiro o que está causando os bugs nessa página. \n-   Conserte os bugs para que sua página seja compatível com a página esperada mostrada abaixo.\n\n![](<https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24 AM.png>)"
      CSD U2 Debugging 3_2018: "# Depuração\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n\\*\\* O que é um bug? \\*\\*\n\n</summary>\nBugs são erros no código que fazem com que ele não funcione como o planejado.\n</details>\n<details>\n<summary>\n\n\\*\\* O que é depuração? \\*\\*\n\n</summary>\nDepuração é o processo de encontrar e corrigir bugs. Depuração é um processo de resolução de problema, portanto, use seus passos para resolução de problema conforme você tentar depurar. \n</details>\n<details>\n<summary>\n\n\\*\\* Quais são alguns exemplos de erros? \\*\\*\n\n</summary>\nBugs podem ser qualquer coisa que faz com que o código não funcione conforme o planejado.  Alguns exemplos são digitar incorretamente, colocando o código no lugar errado, usando o marcador errado, ou esquecer de fechar um marcador.\n</details>\n<details>\n<summary>\n\n**Porque as vezes o inspetor para de funcionar?**\n\n</summary>\n\nAlgumas vezes existem tantos bugs no HTML que o inspetor não consegue ler o código apropriadamente e isso para de funcionar completamente, até mesmo para as partes do código que estão corretas. Uma vez que bugs foram corrigidos, o inspetor irá funcionar novamente.\n\n</details>\n</div>\n\nEssa página possui imagens nela. Imagens fazem o processo de encontrar bugs mais complicado. Você consegue depurar essa página?\n\n# Faça isso\n\n-   Discuta com seu parceiro o que está causando os bugs nessa página. \n-   Conserte os bugs para que sua página seja compatível com a página esperada mostrada abaixo.\n\n![](<https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24 AM.png>)"
      CSD U2 Debugging 3_2019: "# Depuração\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n\\*\\* O que é um bug? \\*\\*\n\n</summary>\nBugs são erros no código que fazem com que ele não funcione como o planejado.\n</details>\n<details>\n<summary>\n\n\\*\\* O que é depuração? \\*\\*\n\n</summary>\nDepuração é o processo de encontrar e corrigir bugs. Depuração é um processo de resolução de problema, portanto, use seus passos para resolução de problema conforme você tentar depurar. \n</details>\n<details>\n<summary>\n\n\\*\\* Quais são alguns exemplos de erros? \\*\\*\n\n</summary>\nBugs podem ser qualquer coisa que faz com que o código não funcione conforme o planejado.  Alguns exemplos são digitar incorretamente, colocando o código no lugar errado, usando o marcador errado, ou esquecer de fechar um marcador.\n</details>\n<details>\n<summary>\n\n**Porque as vezes o inspetor para de funcionar?**\n\n</summary>\n\nAlgumas vezes existem tantos bugs no HTML que o inspetor não consegue ler o código apropriadamente e isso para de funcionar completamente, até mesmo para as partes do código que estão corretas. Uma vez que bugs foram corrigidos, o inspetor irá funcionar novamente.\n\n</details>\n</div>\n\nEssa página possui imagens nela. Imagens fazem o processo de encontrar bugs mais complicado. Você consegue depurar essa página?\n\n# Faça isso\n\n-   Discuta com seu parceiro o que está causando os bugs nessa página. \n-   Conserte os bugs para que sua página seja compatível com a página esperada mostrada abaixo.\n\n![](<https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24 AM.png>)"
      CSD U2 Debugging 4: |-
        # Formatação

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que é espaço em branco?**

        </summary>
        Um espaço em branco se refere a qualquer caractere que é exibido como um espaço em branco na tela, tal como um espaço, uma tabulação, ou uma nova linha. Um espaço em branco ajuda a separar partes distintas de um documento, para facilitar a leitura. Por exemplo, em código HTML novos elementos são normalmente inseridos em uma nova linha, mesmo que isto não faça diferença alguma na forma como a página é apresentada para visualização.
        </details>
        <details>
        <summary>

        **O que é indentação?**

        </summary>
        Indentação é o posicionamento do texto mais à direita, ou à esquerda, para separá-lo do texto ao redor. A indentação facilita o entendimento da estrutura do programa. Em HTML, elementos que estiverem contidos em outros elementos são tipicamente indentados. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está contido no elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary>

        **O que é formatação?**

        </summary>
        Formatação é a organização do texto, de forma que fique mais fácil de entender. HTML é normalmente formatada através da indentação. Isto significa que os elementos que estiverem contidos em outros elementos estarão mais à direita, no código. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está contido no elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary>

        **Por que o inspetor às vezes para de funcionar?**

        </summary>

        Às vezes existem tantos bugs no HTML, que o inspetor não consegue ler o código de forma apropriada, e ele para completamente de funcionar, mesmo nas partes em que o código está correto. Assim que os bugs são corrigidos, o inspetor volta a funcionar.

        </details>
        </div>

        A forma como você escreve seu código poderá facilitar ou dificultar a localização de bugs. Se você utiliza **espaços em branco** e **indentação**,  isso irá torná-lo mais fácil de ler, e mais fácil de corrigir.

        # Faça Isto

        -   Examine o código com seu parceiro, e discuta as formas como você poderia formatar o cõdigo para torná-lo mais fácil de ler.
        -   Faça com que o código fique mais fácil de ler, adicionando novas linhas e indentação.
        -   Corrija todos os bugs, para que sua página fique equivalente à página abaixo.

        ![](<https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13 AM.png>)
      CSD U2 Debugging 4_2018: |-
        # Formatação

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que é espaço em branco?**

        </summary>
        Um espaço em branco se refere a qualquer caractere que é exibido como um espaço em branco na tela, tal como um espaço, uma tabulação, ou uma nova linha. Um espaço em branco ajuda a separar partes distintas de um documento, para facilitar a leitura. Por exemplo, em código HTML novos elementos são normalmente inseridos em uma nova linha, mesmo que isto não faça diferença alguma na forma como a página é apresentada para visualização.
        </details>
        <details>
        <summary>

        **O que é indentação?**

        </summary>
        Indentação é o posicionamento do texto mais à direita, ou à esquerda, para separá-lo do texto ao redor. A indentação facilita o entendimento da estrutura do programa. Em HTML, elementos que estiverem contidos em outros elementos são tipicamente indentados. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está contido no elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary>

        **O que é formatação?**

        </summary>
        Formatação é a organização do texto, de forma que fique mais fácil de entender. HTML é normalmente formatada através da indentação. Isto significa que os elementos que estiverem contidos em outros elementos estarão mais à direita, no código. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está contido no elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary>

        **Por que o inspetor às vezes para de funcionar?**

        </summary>

        Às vezes existem tantos bugs no HTML, que o inspetor não consegue ler o código de forma apropriada, e ele para completamente de funcionar, mesmo nas partes em que o código está correto. Assim que os bugs são corrigidos, o inspetor volta a funcionar.

        </details>
        </div>

        A forma como você escreve seu código poderá facilitar ou dificultar a localização de bugs. Se você utiliza **espaços em branco** e **indentação**,  isso irá torná-lo mais fácil de ler, e mais fácil de corrigir.

        # Faça Isto

        -   Examine o código com seu parceiro, e discuta as formas como você poderia formatar o cõdigo para torná-lo mais fácil de ler.
        -   Faça com que o código fique mais fácil de ler, adicionando novas linhas e indentação.
        -   Corrija todos os bugs, para que sua página fique equivalente à página abaixo.

        ![](<https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13 AM.png>)
      CSD U2 Debugging 4_2019: |-
        # Formatação

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que é espaço em branco?**

        </summary>
        Um espaço em branco se refere a qualquer caractere que é exibido como um espaço em branco na tela, tal como um espaço, uma tabulação, ou uma nova linha. Um espaço em branco ajuda a separar partes distintas de um documento, para facilitar a leitura. Por exemplo, em código HTML novos elementos são normalmente inseridos em uma nova linha, mesmo que isto não faça diferença alguma na forma como a página é apresentada para visualização.
        </details>
        <details>
        <summary>

        **O que é indentação?**

        </summary>
        Indentação é o posicionamento do texto mais à direita, ou à esquerda, para separá-lo do texto ao redor. A indentação facilita o entendimento da estrutura do programa. Em HTML, elementos que estiverem contidos em outros elementos são tipicamente indentados. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está contido no elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary>

        **O que é formatação?**

        </summary>
        Formatação é a organização do texto, de forma que fique mais fácil de entender. HTML é normalmente formatada através da indentação. Isto significa que os elementos que estiverem contidos em outros elementos estarão mais à direita, no código. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está contido no elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary>

        **Por que o inspetor às vezes para de funcionar?**

        </summary>

        Às vezes existem tantos bugs no HTML, que o inspetor não consegue ler o código de forma apropriada, e ele para completamente de funcionar, mesmo nas partes em que o código está correto. Assim que os bugs são corrigidos, o inspetor volta a funcionar.

        </details>
        </div>

        A forma como você escreve seu código poderá facilitar ou dificultar a localização de bugs. Se você utiliza **espaços em branco** e **indentação**,  isso irá torná-lo mais fácil de ler, e mais fácil de corrigir.

        # Faça Isto

        -   Examine o código com seu parceiro, e discuta as formas como você poderia formatar o cõdigo para torná-lo mais fácil de ler.
        -   Faça com que o código fique mais fácil de ler, adicionando novas linhas e indentação.
        -   Corrija todos os bugs, para que sua página fique equivalente à página abaixo.

        ![](<https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13 AM.png>)
      CSD U2 Debugging comments: |-
        # Depuração

        Esta página contém imagens. Imagens tornam a depuração um pouco mais complicada. Você consegue depurar esta página?

        Durante a depuração você poderá perceber um novo conjunto de símbolos semelhantes a estes:

        <pre>
        &lt;!-- isto é um comentário --&gt;
        </pre>

        Isto é um **comentário**. Comentários são escritos por programadores, que criam páginas web para eles próprios, e para outras pessoas que poderão examinar o arquivo HTML. Comentários explicam as diferentes partes do código, e o que deverá ser criado. Comentários poderão ajudar na depuração.

        # Faça Isto

        -   Localize e corrija todos os bugs no HTML inicial
        -   Você saberá que todos os problemas foram encontrados quando sua pãgina estiver equivalente à <a href="https://thimbleprojects.org/danimcavoy/103295/" target="_blank"> Página Alvo</a>.
      CSD U2 HTML Add Content: |-
        # Adicionando conteúdo

        Comece a criar sua primeira página web! Tente criar uma página com um título e dois parágrafos.

        # Faça isto

        -   Escreva uma frase sobre seu animal favorito
        -   Em uma linha separada escreva outra frase sobre seu animal menos favorito.
        -   Acima de ambas as frases, tente adicionar um título que diz "Animais"
        -   Não se esqueça de clicar em <img src="https://images.code.org/6a35d13b10ed2029a9323c9cb555e39e-image-1477681291001.01.12 PM.png" style="width:100px">
        -   **O que você notou sobre a estrutura do seu conteúdo?**
      CSD U2 HTML Adding Paragraphs Template: |-
        # Adicione Texto ao Body

        Ao iniciar qualquer projeto Web Lab, ele automaticamente irá acrescentar os elementos `<!DOCTYPE>`, `<html>`, `<head>`, e `<body>` ao seu projeto. Quando você adiciona conteúdo aos seus projetos, você irá fazê-lo entre os elementos `<body>` e `</body>`, já que será parte do corpo da sua página.

        # Faça Isto

        -   Escreva três frases distintas, sobre qualquer tópico que você goste, entre os elementos `<body>` e `</body>` da sua página
        -   Clique "Atualizar e Salvar" se você não perceber qualquer mudança na área de visualização
        -   Compare seu trabalho com o do seu vizinho. Tenha certeza que você está inserindo código na mesma posição.
      CSD U2 HTML Adding Paragraphs Template_2018: |-
        # Adicione Texto ao Body

        Ao iniciar qualquer projeto Web Lab, ele automaticamente irá acrescentar os elementos `<!DOCTYPE>`, `<html>`, `<head>`, e `<body>` ao seu projeto. Quando você adiciona conteúdo aos seus projetos, você irá fazê-lo entre os elementos `<body>` e `</body>`, já que será parte do corpo da sua página.

        # Faça Isto

        -   Escreva três frases distintas, sobre qualquer tópico que você goste, entre os elementos `<body>` e `</body>` da sua página
        -   Clique "Atualizar e Salvar" se você não perceber qualquer mudança na área de visualização
        -   Compare seu trabalho com o do seu vizinho. Tenha certeza que você está inserindo código na mesma posição.
      CSD U2 HTML Adding Paragraphs Template_2019: |-
        # Adicione Texto ao Body

        Ao iniciar qualquer projeto Web Lab, ele automaticamente irá acrescentar os elementos `<!DOCTYPE>`, `<html>`, `<head>`, e `<body>` ao seu projeto. Quando você adiciona conteúdo aos seus projetos, você irá fazê-lo entre os elementos `<body>` e `</body>`, já que será parte do corpo da sua página.

        # Faça Isto

        -   Escreva três frases distintas, sobre qualquer tópico que você goste, entre os elementos `<body>` e `</body>` da sua página
        -   Clique "Atualizar e Salvar" se você não perceber qualquer mudança na área de visualização
        -   Compare seu trabalho com o do seu vizinho. Tenha certeza que você está inserindo código na mesma posição.
      CSD U2 HTML Adding Paragraphs pt 2: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        **O que é um elemento de parágrafo?**
        </summary>
        Parágrafos são definidos por tags de abertura(`<p>`) e fechamento(`</p>`). Parágrafos em HTML podem ter qualquer comprimento de texto, desde uma palavra até várias frases. Parágrafos agrupam conjuntos de frases e inserem algum espaçamento entre este agrupamento de texto e o agrupamento subsequente.
        </details>
        <details>
        <summary>
        **Como são criados múltiplos parágrafos?**
        </summary>

        Veja um exemplo que mostra vários tags de parágrafo em sequência. Este código poderia ser inserido na seção body da sua página web.

        <pre>
        `<p>Isto é um parágrafo. Ele contém duas frases.</p>`
        `<p>Isto é um outro parágrafo.</p>`
        </pre>

        </details>
        </div>

        # Use Tags de Parágrafo

        O tag `<p>` ou "tag de parágrafo" é colocado ao redor do texto, para indicar que o texto faz parte do parágrafo. A inserção de texto em um tag de parágrafo permite ao computador saber que ele deverá ser exibido de forma diferente, mesmo que seja somente aumentando um pouco a distância de outras frases.

        # Faça Isto

        -   Posicione o texto que você escreveu dentro de pelo menos dois parágrafos. Para isto, envolva o texto com as tags `<p>` e `</p>`
        -   Compare os resultados com um vizinho. O que mudou na forma como o texto é exibido?
      CSD U2 HTML Adding Paragraphs pt 2_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que é um elemento de parágrafo?**

        </summary>

        Parágrafos são definidos por tags de abertura(`<p>`) e fechamento(`</p>`). Parágrafos em HTML podem ter qualquer comprimento de texto, desde uma palavra até várias frases. Parágrafos agrupam conjuntos de frases e inserem algum espaçamento entre este agrupamento de texto e o agrupamento subsequente.

        </details>
        <details>
        <summary>

        **Como são criados múltiplos parágrafos?**

        </summary>

        Veja um exemplo que mostra vários tags de parágrafo em sequência. Este código poderia ser inserido na seção body da sua página web.

            `<p>Isto é um parágrafo. Ele contém duas frases.</p>`
            `<p>Isto é um outro parágrafo.</p>`

        </details>
        </div>

        # Use Tags de Parágrafo

        Os tags `<p>` `</p>` ou "tags de parágrafo" de início e fim são colocados ao redor do texto, para indicar que ele é parte do parágrafo. A inserção de texto entre tags de início e fim de parágrafo permite ao computador saber que ele deverá ser exibido de forma diferente, mesmo que seja somente aumentando um pouco a distância de outras frases.

        # Faça Isto

        -   Posicione o texto que você escreveu dentro de pelo menos dois parágrafos, envolvendo o texto com as tags `<p>` e `</p>`
        -   Compare os resultados com um vizinho. O que mudou na forma como seu texto é exibido?
      CSD U2 HTML Adding Paragraphs pt 2_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que é um elemento de parágrafo?**

        </summary>

        Parágrafos são definidos por tags de abertura(`<p>`) e fechamento(`</p>`). Parágrafos em HTML podem ter qualquer comprimento de texto, desde uma palavra até várias frases. Parágrafos agrupam conjuntos de frases e inserem algum espaçamento entre este agrupamento de texto e o agrupamento subsequente.

        </details>
        <details>
        <summary>

        **Como são criados múltiplos parágrafos?**

        </summary>

        Veja um exemplo que mostra vários tags de parágrafo em sequência. Este código poderia ser inserido na seção body da sua página web.

            `<p>Isto é um parágrafo. Ele contém duas frases.</p>`
            `<p>Isto é um outro parágrafo.</p>`

        </details>
        </div>

        # Use Tags de Parágrafo

        Os tags `<p>` `</p>` ou "tags de parágrafo" de início e fim são colocados ao redor do texto, para indicar que ele é parte do parágrafo. A inserção de texto entre tags de início e fim de parágrafo permite ao computador saber que ele deverá ser exibido de forma diferente, mesmo que seja somente aumentando um pouco a distância de outras frases.

        # Faça Isto

        -   Posicione o texto que você escreveu dentro de pelo menos dois parágrafos, envolvendo o texto com as tags `<p>` e `</p>`
        -   Compare os resultados com um vizinho. O que mudou na forma como seu texto é exibido?
      CSD U2 HTML Adding Paragraphs: |-
        # Adicione Texto ao Corpo

        Ao iniciar qualquer projeto Web Lab, ele automaticamente irá acrescentar os elementos `<!DOCTYPE>`, `<html>`, `<head>`, e `<body>` ao seu projeto. Quando você adiciona conteúdo aos seus projetos, você irá fazê-lo entre os elementos `<body>` e `</body>`, já que será parte do corpo da sua página.

        # Faça Isto

        -   Escreva três frases distintas, sobre qualquer tópico que você goste, entre os elementos `<body>` e `</body>` da sua página
        -   Clique "Atualizar e Salvar" se você não perceber qualquer mudança na área de visualização
        -   Compare seu trabalho com o do seu vizinho. Tenha certeza que você está inserindo código na mesma posição.
      CSD U2 HTML Adding Paragraphs_2018: |-
        # Adicione Texto ao Corpo

        Ao iniciar qualquer projeto Web Lab, ele automaticamente irá acrescentar os elementos `<!DOCTYPE>`, `<html>`, `<head>`, e `<body>` ao seu projeto. Quando você adiciona conteúdo aos seus projetos, você irá fazê-lo entre os elementos `<body>` e `</body>`, já que será parte do corpo da sua página.

        # Faça Isto

        -   Escreva três frases distintas, sobre qualquer tópico que você goste, entre os elementos `<body>` e `</body>` da sua página
        -   Clique "Atualizar e Salvar" se você não perceber qualquer mudança na área de visualização
        -   Compare seu trabalho com o do seu vizinho. Tenha certeza que você está inserindo código na mesma posição.
      CSD U2 HTML Adding Paragraphs_2019: |-
        # Adicione Texto ao Corpo

        Ao iniciar qualquer projeto Web Lab, ele automaticamente irá acrescentar os elementos `<!DOCTYPE>`, `<html>`, `<head>`, e `<body>` ao seu projeto. Quando você adiciona conteúdo aos seus projetos, você irá fazê-lo entre os elementos `<body>` e `</body>`, já que será parte do corpo da sua página.

        # Faça Isto

        -   Escreva três frases distintas, sobre qualquer tópico que você goste, entre os elementos `<body>` e `</body>` da sua página
        -   Clique "Atualizar e Salvar" se você não perceber qualquer mudança na área de visualização
        -   Compare seu trabalho com o do seu vizinho. Tenha certeza que você está inserindo código na mesma posição.
      CSD U2 HTML Debug Paragraphs: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que é um elemento parágrafo?</strong>
        </summary>
        Parágrafos são marcados com as tags de abertura ( `<p>` ) e fechamento( `</p>` ). Parágrafos em HTML pode ser qualquer largura de texto de uma palavra até um monte de sentenças. Os parágrafos agrupam conuntos de sentenças e colocam algum espaço entre aquele grupo de texto e o próximo grupo de texto.
        </details>
        <details>
        <summary>
        <strong>Por quê HTML parece funcionar mesmo quando está quebrado?</strong>
        </summary>
        HTML é lido pelo web browser para gerar as páginas web. Como as pessoas frequentemente cometem pequenos erros quando estão escrevendo suas páginas web, os browsers são programados para tentar adivinhar o que você queria fazer. Algumas vezes diferentes browsers são até mesmo programados para fazer diferentes previsões! O único jeito de ter certeza que seu código se parece como deveria é ter certeza de sempre usar as tags corretamente.
        </details>
        <details>
        <summary>
        <strong>Why does the code sometimes turn pink?</strong>
        </summary>

        O Web Lab é programado para detectar automaticamente alguns erros no HTML. Quando ele percebe um erro, aquele código fica rosa. O erro pode estar em rosa, ou pode ser antes do código rosa. Você vai precisar depurar cuidadosamente para encontrar seu erro.

        </details>
        </div>

        # Depurar: Corrija as Tags Quebradas

        Esta simples página web tem alguns problemas que estão prevenindo o conteúdo de ser exibido corretamente. Identifique e corrija os problemas.
        Esta prática também é chamada de "depurando" seu código.

        # Faça Isto

        -   Corrija o código quebrado para que a página web seja exibida corretamente
        -   Compare os problemas que você corrigiu com o vizinho
      CSD U2 HTML Debug Paragraphs_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n<strong>O que é um elemento de parágrafo?</strong>\n\n</summary>\n\nParágrafos são definidos por tags de abertura( `<p>` ) e fechamento( `</p>` ). Parágrafos em HTML podem ter qualquer tamanho de texto, desde uma única palavra, até várias sentenças. Parágrafos agrupam conjuntos de frases, e inserem algum espaço entre este grupo e o próximo grupo. \n\n</details>\n<details>\n<summary>\n\n<strong>Por que o HTML parece funcionar, mesmo quando existem erros?</strong>\n\n</summary>\n\nO HTML é interpretado pelo browser para que as páginas sejam geradas. Tendo em vista que pessoas normalmente cometem pequenos erros ao redigir suas páginas web, os browsers são programados para imaginar, da melhor maneira possível, o que você queria fazer. Às vezes, browsers diferentes são até programados para imaginar coisas diferentes! A única forma de garantir que seu código seja apresentado na maneira como você pretende é ter certeza que os tags foram usados corretamente\n\n</details>\n<details>\n<summary>\n\n<strong>Por que o código às vezes se torna cor de rosa?</strong>\n\n</summary>\n\nO Web Lab é programado para automaticamente detectar alguns erros de HTML. Quando um erro é encontrado, o código é mostrado na cor rosa. O erro pode estar em rosa, ou pode estar em algum lugar antes do código em rosa. Você vai ter que depurar com cuidado, para localizar o erro.\n\n</details>\n</div>\n\n# Depuração: Corrija as Tags com Problemas\n\nEsta página web simples tem alguns problemas que a estão impedindo de ser exibida corretamente. Identifique e corrija os problemas. Este procedimento é também chamado de \"depurar\" o código.\n\n# Faça Isto\n\n-   Corrija os problemas com o código, para que a página web seja exibida corretamente\n-   Compare os erros que você corrigiu com um colega"
      CSD U2 HTML Debug Paragraphs_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n<strong>O que é um elemento de parágrafo?</strong>\n\n</summary>\n\nParágrafos são definidos por tags de abertura( `<p>` ) e fechamento( `</p>` ). Parágrafos em HTML podem ter qualquer tamanho de texto, desde uma única palavra, até várias sentenças. Parágrafos agrupam conjuntos de frases, e inserem algum espaço entre este grupo e o próximo grupo. \n\n</details>\n<details>\n<summary>\n\n<strong>Por que o HTML parece funcionar, mesmo quando existem erros?</strong>\n\n</summary>\n\nO HTML é interpretado pelo browser para que as páginas sejam geradas. Tendo em vista que pessoas normalmente cometem pequenos erros ao redigir suas páginas web, os browsers são programados para imaginar, da melhor maneira possível, o que você queria fazer. Às vezes, browsers diferentes são até programados para imaginar coisas diferentes! A única forma de garantir que seu código seja apresentado na maneira como você pretende é ter certeza que os tags foram usados corretamente\n\n</details>\n<details>\n<summary>\n\n<strong>Por que o código às vezes se torna cor de rosa?</strong>\n\n</summary>\n\nO Web Lab é programado para automaticamente detectar alguns erros de HTML. Quando um erro é encontrado, o código é mostrado na cor rosa. O erro pode estar em rosa, ou pode estar em algum lugar antes do código em rosa. Você vai ter que depurar com cuidado, para localizar o erro.\n\n</details>\n</div>\n\n# Depuração: Corrija as Tags com Problemas\n\nEsta página web simples tem alguns problemas que a estão impedindo de ser exibida corretamente. Identifique e corrija os problemas. Este procedimento é também chamado de \"depurar\" o código.\n\n# Faça Isto\n\n-   Corrija os problemas com o código, para que a página web seja exibida corretamente\n-   Compare os erros que você corrigiu com um colega"
      CSD U2 Header Demo: |-
        # Cabeçalhos

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que são cabeçalhos?**

        </summary>
        Cabeçalhos são os títulos das seções que formam uma página web. Cabeçalhos são mostrados em tamanho diferente, e acrescentam estrutura à página para que sua leitura fique mais fácil.
        </details>
        <details>
        <summary>

        **Como eu crio cabeçalhos com tamanhos diferentes?**

        </summary>
        Cabeçalhos podem ter até 6 tamanhos diferentes. Até agora, você usou principalmente o maior deles &lt;h1&gt;. O algarismo 1 no tag HTML indica que este é o cabeçalho com tamanho maior. O menor é  &lt;h6&gt;. Você pode também experimentar os tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt; e  &lt;h5&gt;, que ficam menores à medida que o número aumenta.
        </h1>
        </details>
        <details>
        <summary>

        **O que é HTML?**

        </summary>
        HTML é o acrônimo de Hypertext Markup Language. O HTML é utilizado para dar estrutura ao conteúdo de uma página web. O HTML usa tags para especificar onde determinadas estruturas começam e acabam. Estes tags são grupos de caracteres não encontrados na língua portuguesa, para que o conteúdo e estrutura possam ser diferenciados.
        </details>
        <details>
        <summary>

        **O que é um elemento HTML?**

        </summary>
        Um elemento HTML é um pedaço de um website que é assinalado por uma tag inicial, e é às vezes fechado por uma tag final. O elemento também inclui o conteúdo no interior das tags. Por exemplo:
        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">
        </details>
        <details>
        <summary>

        **O que é uma tag HTML?**

        </summary>

        Uma tag HTML é um grupo de caracteres, que dizem ao computador onde um elemento HTML é iniciado ou encerrado, e qual tipo de elemento ele é.

        </details>
        </div>

        Até agora, você organizou seu conteúdo em parágrafos. Uma outra forma que o HTML permite a você organizar seu código é utilizando **cabeçalhos**. Um cabeçalho é um pequeno texto que é colocado acima de uma seção de texto, como um título.

        Faça Isto:

        -   Localize os cabeçalhos na página web abaixo, e use a ferramenta de inspeção para ver o código os compõe.
        -   Assegure-se que você e seu colega estejam de acordo sobre o que as tags fazem.
        -   Altere o código para que "Desenho" e "2 anos" sejam equivalentes aos outros cabeçalhos do restante da página.
      CSD U2 Header Sizes: "# Tamanho dos Cabeçalhos\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que são cabeçalhos?**\n\n</summary>\nCabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.\n</details>\n<details>\n<summary>\n\n**Como eu faço um cabeçalho de tamanho diferenciado?**\n\n</summary>\nCabeçalhos podem ter 6 tamanhos diferentes. O mais comum é o &lt;h1&gt; O número 1 na tag HTML informa que este é o maior cabeçalho. O menor cabeçalho é &lt;h6&gt;. VOcê também pode tentar as tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt; que diminuem conforme aumenta o número.\n</details>\n<details>\n<summary>\n\n**O que é HTML?**\n\n</summary>\nHTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.\n</details>\n<details>\n<summary>\n\n**O que é um elemento HTML?**\n\n</summary>\nUm elemento HTML é uma peça do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n</details>\n<details>\n<summary>\n\n**O que é uma tag HTML?**\n\n</summary>\n\nUma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.\n\n</details>\n</div>\n\nOs cabeçalhos podem vir em diferentes tamanhos. Nesta página, há seis tamanhos diferentes de cabeçalho, mas eles estão misturados. Você e seu parceiro podem descobrir como arrumá-los?\n\nFaça Isto:\n\n-   Use a ferramenta de inspeção para descobrir o que define os diferentes tamanhos de cabeçalho.\n-   Assegurem-se que vocês estão de acordo no que as diferentes tags de cabeçalho fazem.\n-   Troque as tags de forma que os cabeçalhos estão em ordem do maior para o menor, e o texto mostre o tamanho correto, como visto na imagem abaixo. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px\" style=\"float:left\">"
      CSD U2 Header Test: |-
        # Cabeçalhos e Parágrafos

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que é um elemento de parágrafo?**

        </summary>
        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Parágrafos em HTML podem ter qualquer tamanho de texto desde uma palavra até várias sentenças. Todo o seu texto na página web deve estar dentro de um elemento HTML (cabeçalhos ou parágrafos). Parágrafos agrupam juntos conjuntos de sentenças e colocam algum espaço entre aquele grupo de texto e o próximo grupo de texto.
        </details>
        <details>
        <summary>

        **Como eu crio múltiplos parágrafos?**

        </summary>
        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Para criar mais de um parágrafo você vai precisar de vários conjuntos de tags `<p>` início e fim. Por exemplo
        <pre>
        \t&lt;p&gt;
            \tEste é um parágrafo.
            &lt;/p&gt;
        \t&lt;p&gt;
            \tEste é outro parágrafo.
            &lt;/p&gt;
        </pre>
        </details>
        <details>
        <summary>

        **O que são cabeçalhos?**

        </summary>
        Cabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.
        </details>
        <details>
        <summary>

        **Como eu faço um cabeçalho de tamanho diferenciado?**

        </summary>
        Cabeçalhos podem ter 6 tamanhos diferentes. O mais comum é o &lt;h1&gt; O número 1 na tag HTML informa que este é o maior cabeçalho. O menor cabeçalho é &lt;h6&gt;. Você também pode tentar as tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt; que diminuem conforme aumenta o número.
        </h1>
        </details>
        <details>
        <summary>

        **O que é HTML?**

        </summary>
        HTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.
        </details>
        <details>
        <summary>

        **O que é um elemento HTML?**

        </summary>
        Um elemento HTML é uma peça do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:
        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">
        </details>
        <details>
        <summary>

        **O que é uma tag HTML?**

        </summary>

        Uma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.

        </details>
        </div>

        O autor desta página adicionou um monte de conteúdo, mas não pensou sobre a estrutura. Todo o texto está misturado.

        Faça Isto:

        -   Veja o conteúdo com seu parceiro e decida qual seria a melhor estrutura.
        -   Use suas tags de cabeçalho e parágrafo para codificar a estrutura na página.
      CSD U2 Headers: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>

        **O que são cabeçalhos?**

        </summary>
        Cabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.
        </details>
        <details>
        <summary>

        **Como eu crio um cabeçalho?**

        </summary>
        Você pode fazer algo se tornar um elemento de cabeçalho ao cercá-lo com tags de cabeçalho. Por exemplo:
        <pre> &lt;h1&gt; Texto de Cabeçalho &lt;/h1&gt; </pre> <br> <br>

        Note que há uma tag inicial (\<h1>) e uma tag fim (\</h1>). A tag fim é a mesma que a início exceto que esta tem `/` depois do sinal de maior. O texto que você quer mostrar como cabeçalho vai entre as tags.

        </details>
        <details>
        <summary>

        **O que é HTML?**

        </summary>
        HTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.
        </details>
        <details>
        <summary>

        **O que é um elemento HTML?**

        </summary>
        Um elemento HTML é uma peça do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:
        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">
        </details>
        <details>
        <summary>

        **O que é uma tag HTML?**

        </summary>
        Uma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.
        </details>
        <details>
        <summary>

        **Por que você precisa tags início e fim?**

        </summary>

        Você precisa das tags início e fim para muitos elements HTML porque elas marcam onde a estrutura começar e termina. Você não precisa que todo o texto na sua página web seja um título.

        </details>
        </div>

        # Cabeçalhos

        Você deve ter notado no último nível que tudo que você digita no editor é colocado junto. Para diferenciar entre estas diferentes partes nós usamos elementos HTML para marcar as variadas partes de uma página web. Na sua investigação com o inspetor você se deparou com algo que criou cabeçalhos?

        # Faça Isto

        -   Faça seu cabeçalho "Animais" se destacar usando o elemento cabeçalho `<h1>`.
      CSD U2 Heading Demo: |-
        # Cabeçalhos

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que são cabeçalhos?</strong></summary>

        Cabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.

        </details>
        <details>
        <summary><strong>Como eu faço um cabeçalho de tamanho diferenciado?</strong></summary>

        Cabeçalhos podem ter 6 tamanhos diferentes. O mais comum é o \<h1> O número 1 na tag HTML informa que este é o maior cabeçalho. O menor cabeçalho é \<h6>. VOcê também pode tentar as tags \<h2>, \<h3>, \<h4>, e \<h5> que diminuem conforme aumenta o número.

        </h1>
        </details>
        <details>
        <summary><strong>O que é HTML?</strong></summary>

        HTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.

        </details>
        <details>
        <summary><strong>O que é um elemento HTML?</strong></summary>

        Um elemento HTML é um pedaço do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:
        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">

        </details>
        <details>
        <summary><strong>O que é uma tag HTML?</strong></summary>

        Uma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.

        </details>
        </div>

        Até agora você organizou seu conteúdo em parágrafos. Outra forma que o HTML permite de organizar seu código é pelo uso de **cabeçalhos**. Um cabeçalho é um pedaço pequeno de texto que vai no topo de uma seção de conteúdo, como um título.

        Faça Isto:

        -   Encontre os cabeçalhos da página web abaixo e use a Ferramenta de Inspeção para ver o código que cria eles.
        -   Assegure que você e seu parceiro concordem sobre o que a tag faz.
        -   Troque o código de forma que "Desenho" e "2 anos" se assemelhem aos cabeçalhos do resto da página.
      CSD U2 Heading Demo_2018: "# Títulos de seção\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que são títulos de seção?**\n\n</summary>\nTítulos de seção são títulos de tamanhos diversos que pertencem a seções dispostas em uma página web. Títulos de seção proveem estrutura à página, subdividindo-a para que sua leitura fique mais fácil para um usuário. \n</details>\n<details>\n<summary>\n\n**Como eu crio títulos de seção com tamanhos diferentes?**\n\n</summary>\nTítulos de seção podem ter 6 tamanhos distintos. Até agora você utilizou principalmente o maior deles:  &lt;h1&gt;. O número '1' no tag HTML indica que este é o maior que existe. Já o menor é o &lt;h6&gt;. Você também pode experimentar os tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt;, que se tornam menores à medida que o número fica maior.\n</h1>\n</details>\n<details>\n<summary>\n\n**O que é HTML?**\n\n</summary>\nHTML é o acrônimo para HyperText Markup Language, em inglês. HTML é usado para acrescentar estrutura ao conteúdo de uma página web. HTML faz uso de tags para indicar onde determinadas estruturas começam e terminam. Estes tags são conjuntos de caracteres que não são encontrados na língua portuguesa, para que o conteúdo e a estrutura possam ser diferenciados.\n</details>\n<details>\n<summary>\n\n**O que é um elemento HTML?**\n\n</summary>\nUm elemento HTML é uma parte do website que marcada por um tag de início, e às vezes é fechada com um tag de finalização. Um elemento também inclui o conteúdo entre os tags. Por exemplo:\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n</details>\n<details>\n<summary>\n\n**O que é uma tag HTML?**\n\n</summary>\n\nUma tag HTML é o conjunto específico de caracteres que indicam ao computador onde o início ou fim do elemento HTML está localizado, e qual seu tipo.\n\n</details>\n</div>\n\nAté aqui, você organizou seu conteúdo em parágrafos. Uma outra maneira que o HTML permite a você organizar seu código é utilizando **títulos de seção**. Um título de seção é um pequeno texto que aparece acima de uma seção de conteúdo, como um título. \n\nFaça Isto:\n\n-   Localize os títulos de seção contidos na página web abaixo, e use a Ferramenta de Inspeção para ver seu código.\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre o que as tags fazem.\n-   Altere o código para que \"Desenho\" e \"2 anos\" coincidam com os títulos de seção do restante da página."
      CSD U2 Heading Demo_2019: "# Títulos de seção\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que são títulos de seção?**\n\n</summary>\nTítulos de seção são títulos de tamanhos diversos que pertencem a seções dispostas em uma página web. Títulos de seção proveem estrutura à página, subdividindo-a para que sua leitura fique mais fácil para um usuário. \n</details>\n<details>\n<summary>\n\n**Como eu crio títulos de seção com tamanhos diferentes?**\n\n</summary>\nTítulos de seção podem ter 6 tamanhos distintos. Até agora você utilizou principalmente o maior deles:  &lt;h1&gt;. O número '1' no tag HTML indica que este é o maior que existe. Já o menor é o &lt;h6&gt;. Você também pode experimentar os tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt;, que se tornam menores à medida que o número fica maior.\n</h1>\n</details>\n<details>\n<summary>\n\n**O que é HTML?**\n\n</summary>\nHTML é o acrônimo para HyperText Markup Language, em inglês. HTML é usado para acrescentar estrutura ao conteúdo de uma página web. HTML faz uso de tags para indicar onde determinadas estruturas começam e terminam. Estes tags são conjuntos de caracteres que não são encontrados na língua portuguesa, para que o conteúdo e a estrutura possam ser diferenciados.\n</details>\n<details>\n<summary>\n\n**O que é um elemento HTML?**\n\n</summary>\nUm elemento HTML é uma parte do website que marcada por um tag de início, e às vezes é fechada com um tag de finalização. Um elemento também inclui o conteúdo entre os tags. Por exemplo:\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n</details>\n<details>\n<summary>\n\n**O que é uma tag HTML?**\n\n</summary>\n\nUma tag HTML é o conjunto específico de caracteres que indicam ao computador onde o início ou fim do elemento HTML está localizado, e qual seu tipo.\n\n</details>\n</div>\n\nAté aqui, você organizou seu conteúdo em parágrafos. Uma outra maneira que o HTML permite a você organizar seu código é utilizando **títulos de seção**. Um título de seção é um pequeno texto que aparece acima de uma seção de conteúdo, como um título. \n\nFaça Isto:\n\n-   Localize os títulos de seção contidos na página web abaixo, e use a Ferramenta de Inspeção para ver seu código.\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre o que as tags fazem.\n-   Altere o código para que \"Desenho\" e \"2 anos\" coincidam com os títulos de seção do restante da página."
      CSD U2 Heading Sizes: "# Tamanhos de Títulos de Seção\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>O que são títulos de seção?</strong>\n\n</summary>\nTítulos de seção são títulos, de diferentes tamanhos, de seções que aparecem ao longo de páginas web. Títulos de seção acrescentam estrutura à página, subdividindo-a para que sua leitura se torne mais fácil.\n</details>\n<details>\n<summary><strong>Como eu crio títulos de seção com tamanhos diferentes?</strong>\n\n</summary>\nTítulos de seção vêm em 6 tamanhos distintos. O tamanho mais comum é &lt;h1&gt;. O número '1' no tag HTML indica que este é o título de seção com maior tamanho. O menor título de seção é &lt;h6&gt;. Você pode também experimentar os tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt;, que se tornam menores à medida que o número se torna maior. \n</details>\n<details>\n<summary><strong>O que é HTML?</strong>\n\n</summary>\nHTML é o acrônimo em inglês para HyperText Markup Language. HTML é usado para acrescentar estrutura ao conteúdo de uma página web. HTML utiliza tags para indicar quando determinadas estruturas iniciam e terminam. Estas tags são conjuntos de caracteres não encontrados na língua portuguesa, para que conteúdo e estrutura possam ser diferenciados.\n</details>\n<details>\n<summary><strong>O que é um elemento HTML?</strong>\n\n</summary>\nUm elemento HTML é uma parte de um website que é marcada por uma tag de início, e às vezes fechada por uma tag de término. O elemento também inclui o conteúdo entre as tags. Por exemplo:\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n</details>\n<details>\n<summary><strong>O que é um tag HTML?</strong>\n\n</summary>\n\nUm tag HTML é um conjunto específico de caracteres que indica ao computador onde o início e o término de um elemento HTML está localizado, e qual o tipo de elemento ele é.\n\n</details>\n</div>\n\nTítulos de seção podem vir em tamanhos distintos. Nesta página, temos seis títulos de seção com tamanhos diferentes, mas eles estão misturados. Você e seu parceiro saberiam como fazer para corrigi-los?\n\nFaça Isto:\n\n-   Use a Ferramenta de Inspeção para descobrir o que faz com que os tamanhos dos fiquem diferentes\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre o que cada tag de título de seção faz\n-   Altere os tags para que os títulos de seção fiquem ordenados do maior para o menor, e que o texto mostre o tamanho correto, como na figura abaixo:\n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px\" style=\"float:left\">"
      CSD U2 Heading Sizes_2018: "# Tamanhos de Títulos de Seção\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que são títulos de seção?**\n\n</summary>\nTítulos de seção são títulos, de diferentes tamanhos, que seções que aparecem ao longo de uma página web. Títulos de seção acrescentam estrutura à sua página web, subdividindo-a para que sua leitura se torne mais fácil.\n</details>\n<details>\n<summary>\n\n**Como eu crio títulos de seção de tamanhos diferentes?**\n\n</summary>\nTítulos de seção vêm em 6 tamanhos distintos. O título de seção mais comum é &lt;h1&gt;. O número '1' no tag HTML indica que este é o maior título. Já o menor título de seção é &lt;h6&gt;. Você pode também experimentar os tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt;, que se tornam menores à medida que o número fica maior. \n</details>\n<details>\n<summary>\n\n**O que é HTML?**\n\n</summary>\nHTML é o acrônimo em inglês de HyperText Markup Language. HTML é usada para acrescentar estrutura ao conteúdo de uma página web. HTML utiliza tags para definir o início e término de determinadas estruturas. Estas tags são conjuntos de caracteres não encontradas na língua portuguesa, para que o conteúdo e a estrutura possam ser diferenciadas.\n</details>\n<details>\n<summary>\n\n**O que é um elemento HTML?**\n\n</summary>\nUm elemento HTML é uma parte de um website que é marcada por uma tag de início, e às vezes fechada por uma tag de término. O elemento também inclui o conteúdo entre as tags. Por exemplo:\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n</details>\n<details>\n<summary>\n\n**O que é uma tag HTML?**\n\n</summary>\n\nUma tag HTML é um conjunto específico de caracteres que indica ao computador onde se inicia e termina um elemento HTML, e qual tipo ele é.\n\n</details>\n</div>\n\nTítulos de seção vêm em tamanhos distintos. Nesta página, há seis títulos de seção com tamanhos diferentes, mas estão misturados. Você e seu parceiro conseguem descobrir como consertá-los?\n\nFaça Isto:\n\n-   Use a Ferramenta de Inspeção para descobrir o que faz com que os títulos apresentem tamanhos diferentes\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre como funcionam os diferentes tags de títulos de seção.\n-   Altere os tags, para que os títulos de seção fiquem em ordem, do maior para o menor, e os textos indiquem o tamanho correto, como na figura abaixo.\n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px\" style=\"float:left\">"
      CSD U2 Heading Sizes_2019: "# Tamanhos de Títulos de Seção\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**O que são títulos de seção?**\n\n</summary>\nTítulos de seção são títulos, de diferentes tamanhos, que seções que aparecem ao longo de uma página web. Títulos de seção acrescentam estrutura à sua página web, subdividindo-a para que sua leitura se torne mais fácil.\n</details>\n<details>\n<summary>\n\n**Como eu crio títulos de seção de tamanhos diferentes?**\n\n</summary>\nTítulos de seção vêm em 6 tamanhos distintos. O título de seção mais comum é &lt;h1&gt;. O número '1' no tag HTML indica que este é o maior título. Já o menor título de seção é &lt;h6&gt;. Você pode também experimentar os tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt;, que se tornam menores à medida que o número fica maior. \n</details>\n<details>\n<summary>\n\n**O que é HTML?**\n\n</summary>\nHTML é o acrônimo em inglês de HyperText Markup Language. HTML é usada para acrescentar estrutura ao conteúdo de uma página web. HTML utiliza tags para definir o início e término de determinadas estruturas. Estas tags são conjuntos de caracteres não encontradas na língua portuguesa, para que o conteúdo e a estrutura possam ser diferenciadas.\n</details>\n<details>\n<summary>\n\n**O que é um elemento HTML?**\n\n</summary>\nUm elemento HTML é uma parte de um website que é marcada por uma tag de início, e às vezes fechada por uma tag de término. O elemento também inclui o conteúdo entre as tags. Por exemplo:\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n</details>\n<details>\n<summary>\n\n**O que é uma tag HTML?**\n\n</summary>\n\nUma tag HTML é um conjunto específico de caracteres que indica ao computador onde se inicia e termina um elemento HTML, e qual tipo ele é.\n\n</details>\n</div>\n\nTítulos de seção vêm em tamanhos distintos. Nesta página, há seis títulos de seção com tamanhos diferentes, mas estão misturados. Você e seu parceiro conseguem descobrir como consertá-los?\n\nFaça Isto:\n\n-   Use a Ferramenta de Inspeção para descobrir o que faz com que os títulos apresentem tamanhos diferentes\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre como funcionam os diferentes tags de títulos de seção.\n-   Altere os tags, para que os títulos de seção fiquem em ordem, do maior para o menor, e os textos indiquem o tamanho correto, como na figura abaixo.\n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px\" style=\"float:left\">"
      CSD U2 Heading Test: |-
        # Cabeçalhos e Parágrafos

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que é um elemento de parágrafo?</strong>
        </summary>

        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Parágrafos em HTML podem ter qualquer tamanho de texto desde uma palavra até várias sentenças. Todo o seu texto na página web deve estar dentro de um elemento HTML (cabeçalhos ou parágrafos). Parágrafos agrupam juntos conjuntos de sentenças e colocam algum espaço entre aquele grupo de texto e o próximo grupo de texto.

        </details>
        <details>
        <summary><strong>Como eu crio múltiplos parágrafos?</strong>
        </summary>

        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Para criar mais de um parágrafo você vai precisar de vários conjuntos de tags `<p>` início e fim. Por exemplo

        <pre>
        &lt;p&gt;
          Este é um parágrafo.
        &lt;/p&gt;
        &lt;p&gt;
          Este é outro parágrafo.
        &lt;/p&gt;
        </pre>

        </details>
        <details>
        <summary><strong>O que são cabeçalhos?</strong>
        </summary>

        Cabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.

        </details>
        <details>
        <summary><strong>Como eu faço um cabeçalho de tamanho diferenciado?</strong>
        </summary>

        Cabeçalhos podem ter 6 tamanhos diferentes. O mais comum é o \<h1> O número 1 na tag HTML informa que este é o maior cabeçalho. O menor cabeçalho é \<h6>. Você também pode tentar as tags \<h2>, \<h3>, \<h4>, e \<h5> que diminuem conforme aumenta o número.

        </details>
        <details>
        <summary><strong>O que é HTML?</strong>
        </summary>

        HTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.

        </details>
        <details>
        <summary><strong>O que é um elemento HTML?</strong>
        </summary>

        Um elemento HTML é uma peça do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:

        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">

        </details>
        <details>
        <summary><strong>O que é uma tag HTML?</strong>
        </summary>

        Uma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.

        </details>
        </div>

        O autor desta página adicionou vários conteúdos, mas não pensou na sua estrutura. Todo o texto está amontoado.

        Faça Isto:

        -   Dê uma olhada no conteúdo com seu parceiro e decidam o que vocês acham que seria a melhor estrutura.
        -   Utilize suas tags cabeçalho e parágrafo para codificar a estrutura da página.
      CSD U2 Heading Test_2018: |-
        # Cabeçalhos e Parágrafos

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que é um elemento de parágrafo?</strong></summary>

        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Parágrafos em HTML podem ter qualquer tamanho de texto desde uma palavra até várias sentenças. Todo o seu texto na página web deve estar dentro de um elemento HTML (cabeçalhos ou parágrafos). Parágrafos agrupam juntos conjuntos de sentenças e colocam algum espaço entre aquele grupo de texto e o próximo grupo de texto.

        </details>
        <details>
        <summary>
        <strong>Como eu crio múltiplos parágrafos?</strong>

        </summary>

        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Para criar mais de um parágrafo você vai precisar de vários conjuntos de tags `<p>` início e fim. Por exemplo

        <pre>
            &lt;p&gt;
                Este é um parágrafo.
            &lt;/p&gt;
            &lt;p&gt;
                Este é outro parágrafo.
            &lt;/p&gt;
        </pre>

        </details>
        <details>
        <summary>
        <strong>O que são cabeçalhos?</strong>
        </summary>
        Cabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.
        </details>
        <details>
        <summary>
        <strong>Como eu faço um cabeçalho de tamanho diferenciado?</strong>
        </summary>
        Cabeçalhos podem ter 6 tamanhos diferentes. O mais comum é o &lt;h1&gt; O número 1 na tag HTML informa que este é o maior cabeçalho. O menor cabeçalho é &lt;h6&gt;. Você também pode tentar as tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt; que diminuem conforme aumenta o número.
        </details>
        <details>
        <summary>
        <strong>O que é HTML?</strong>
        </summary>
        HTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.
        </details>
        <details>
        <summary>
        <strong>O que é um elemento HTML?</strong>
        </summary>
        Um elemento HTML é uma peça do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:
        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">
        </details>
        <details>
        <summary>
        <strong>O que é uma tag HTML?</strong>
        </summary>

        Uma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.

        </details>
        </div>

        O autor desta página adicionou vários conteúdos, mas não pensou na sua estrutura. Todo o texto está amontoado.

        Faça Isto:

        -   Dê uma olhada no conteúdo com seu parceiro e decidam o que vocês acham que seria a melhor estrutura.
        -   Utilize suas tags cabeçalho e parágrafo para codificar a estrutura da página.
      CSD U2 Heading Test_2019: |-
        # Cabeçalhos e Parágrafos

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que é um elemento de parágrafo?</strong></summary>

        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Parágrafos em HTML podem ter qualquer tamanho de texto desde uma palavra até várias sentenças. Todo o seu texto na página web deve estar dentro de um elemento HTML (cabeçalhos ou parágrafos). Parágrafos agrupam juntos conjuntos de sentenças e colocam algum espaço entre aquele grupo de texto e o próximo grupo de texto.

        </details>
        <details>
        <summary>
        <strong>Como eu crio múltiplos parágrafos?</strong>

        </summary>

        Parágrafos são marcados por tags de início (`<p>`) e fim (`</p>`) também. Para criar mais de um parágrafo você vai precisar de vários conjuntos de tags `<p>` início e fim. Por exemplo

        <pre>
            &lt;p&gt;
                Este é um parágrafo.
            &lt;/p&gt;
            &lt;p&gt;
                Este é outro parágrafo.
            &lt;/p&gt;
        </pre>

        </details>
        <details>
        <summary>
        <strong>O que são cabeçalhos?</strong>
        </summary>
        Cabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.
        </details>
        <details>
        <summary>
        <strong>Como eu faço um cabeçalho de tamanho diferenciado?</strong>
        </summary>
        Cabeçalhos podem ter 6 tamanhos diferentes. O mais comum é o &lt;h1&gt; O número 1 na tag HTML informa que este é o maior cabeçalho. O menor cabeçalho é &lt;h6&gt;. Você também pode tentar as tags &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, e &lt;h5&gt; que diminuem conforme aumenta o número.
        </details>
        <details>
        <summary>
        <strong>O que é HTML?</strong>
        </summary>
        HTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.
        </details>
        <details>
        <summary>
        <strong>O que é um elemento HTML?</strong>
        </summary>
        Um elemento HTML é uma peça do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:
        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">
        </details>
        <details>
        <summary>
        <strong>O que é uma tag HTML?</strong>
        </summary>

        Uma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.

        </details>
        </div>

        O autor desta página adicionou vários conteúdos, mas não pensou na sua estrutura. Todo o texto está amontoado.

        Faça Isto:

        -   Dê uma olhada no conteúdo com seu parceiro e decidam o que vocês acham que seria a melhor estrutura.
        -   Utilize suas tags cabeçalho e parágrafo para codificar a estrutura da página.
      CSD U2 Image Tag 1: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como eu adiciono imagens?</strong></summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão. <br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary><strong>Por que uma tag de imagem não tem uma tag fim?</strong></summary>\n\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n\n</details>\n<details>\n<summary><strong>O que é um atributo?</strong></summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Imagens\n\nUma página web Cachorro x Gato foi iniciada para você. A imagem do cachorro  já foi adicionada nela. Use uma tag de imagem para adicionar a imagem `cat.jpeg` à página abaixo para o cabeçalho do gato."
      CSD U2 Image Tag 1_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão.\n<br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary>\n<strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Imagens\n\nUma página web Cachorro x Gato foi iniciada para você. A imagem do cachorro  já foi adicionada nela. Use uma tag de imagem para adicionar a imagem `cat.jpeg` à página abaixo para o cabeçalho do gato."
      CSD U2 Image Tag 1_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão.\n<br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary>\n<strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Imagens\n\nUma página web Cachorro x Gato foi iniciada para você. A imagem do cachorro  já foi adicionada nela. Use uma tag de imagem para adicionar a imagem `cat.jpeg` à página abaixo para o cabeçalho do gato."
      CSD U2 Image Tag 2: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como eu adiciono imagens?</strong></summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão.<br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary><strong>Por que uma tag de imagem não tem uma tag fim?</strong></summary>\n\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n\n</details>\n<details>\n<summary><strong>O que é um atributo?</strong></summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Carregando imagems\n\nVocê pode carregar imagens que você encontrou em algum outro lugar usando o botão **Adicionar Imagem**. Encontre uma imagem de um tipo diferente de animal que você goste e baixe para o seu computador (usando o botão direito e \"Salvar Como\").\n\nAssim que você tiver as imagens, clique em ![](<https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49 PM.png>) e carregue a imagem do seu computador para o projeto, assim você poderá usá-la em sua página.\n\n# Faça Isto\n\n-   Carregue pelo menos uma imagem na sua página web\n-   Use a tag `<img>` para exibir a imagem no seu website.\n-   Certifique-se de adicionar um atributo `alt`."
      CSD U2 Image Tag 2_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão.<br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary>\n<strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Carregando imagems\n\nVocê pode carregar imagens que você encontrou em algum outro lugar usando o botão **Adicionar Imagem**. Encontre uma imagem de um tipo diferente de animal que você goste e baixe para o seu computador (usando o botão direito e \"Salvar Como\").\n\nAssim que você tiver as imagens, clique em ![](<https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49 PM.png>) e carregue a imagem do seu computador para o projeto, assim você poderá usá-la em sua página.\n\n# Faça Isto\n\n-   Carregue pelo menos uma imagem na sua página web\n-   Use a tag `<img>` para exibir a imagem no seu website.\n-   Certifique-se de adicionar um atributo `alt`."
      CSD U2 Image Tag 2_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão.<br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary>\n<strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Carregando imagems\n\nVocê pode carregar imagens que você encontrou em algum outro lugar usando o botão **Adicionar Imagem**. Encontre uma imagem de um tipo diferente de animal que você goste e baixe para o seu computador (usando o botão direito e \"Salvar Como\").\n\nAssim que você tiver as imagens, clique em ![](<https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49 PM.png>) e carregue a imagem do seu computador para o projeto, assim você poderá usá-la em sua página.\n\n# Faça Isto\n\n-   Carregue pelo menos uma imagem na sua página web\n-   Use a tag `<img>` para exibir a imagem no seu website.\n-   Certifique-se de adicionar um atributo `alt`."
      CSD U2 Image Tag Attribution: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como eu adiciono imagens?</strong></summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão. <br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary><strong>Por que uma tag de imagem não tem uma tag fim?</strong></summary>\n\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n\n</details>\n<details>\n<summary><strong>O que é um atributo?</strong></summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Dando crédito\n\nQuando estiver usando uma imagem com licença Creative Commons, você precisa dar crédito ao criador original (também chamado called _attribution_). Existem vários jeitos de prover esta atribuição, mas a forma mais fácil é adicionar um texto abaixo da imagem que identifica o criador e o website de onde ela veio.\n\n# Faça Isto\n\nNesta página nós já adicionamos uma imagem atribuída de um sapo. Use a ferramenta de pesquisa de Creative Commons para encontrar outra imagem de um anfíbio. Adicione a imagem encontrada à esta página, junto com a atribuição devida, incluindo:\n\n-   O nome do criado (se disponível)\n-   O website onde foi encontrada (por exemplo, commons.wikimedia.org)\n-   A licença à qual ela foi publicada (por exemplo, CC-BY)"
      CSD U2 Image Tag Attribution_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão. <br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary>\n<strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Dando crédito\n\nQuando estiver usando uma imagem com licença Creative Commons, você precisa dar crédito ao criador original (também chamado called _attribution_). Existem vários jeitos de prover esta atribuição, mas a forma mais fácil é adicionar um texto abaixo da imagem que identifica o criador e o website de onde ela veio.\n\n# Faça Isto\n\nNesta página nós já adicionamos uma imagem atribuída de um sapo. Use a ferramenta de pesquisa de Creative Commons para encontrar outra imagem de um anfíbio. Adicione a imagem encontrada à esta página, junto com a atribuição devida, incluindo:\n\n-   O nome do criado (se disponível)\n-   O website onde foi encontrada (por exemplo, commons.wikimedia.org)\n-   A licença à qual ela foi publicada (por exemplo, CC-BY)"
      CSD U2 Image Tag Attribution_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão. <br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary>\n<strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Dando crédito\n\nQuando estiver usando uma imagem com licença Creative Commons, você precisa dar crédito ao criador original (também chamado called _attribution_). Existem vários jeitos de prover esta atribuição, mas a forma mais fácil é adicionar um texto abaixo da imagem que identifica o criador e o website de onde ela veio.\n\n# Faça Isto\n\nNesta página nós já adicionamos uma imagem atribuída de um sapo. Use a ferramenta de pesquisa de Creative Commons para encontrar outra imagem de um anfíbio. Adicione a imagem encontrada à esta página, junto com a atribuição devida, incluindo:\n\n-   O nome do criado (se disponível)\n-   O website onde foi encontrada (por exemplo, commons.wikimedia.org)\n-   A licença à qual ela foi publicada (por exemplo, CC-BY)"
      CSD U2 Image Tag Debug: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão. <br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary><strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\n\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n\n</details>\n<details>\n<summary><strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Os Detalhes Importam\n\nO atributo `src` precisa apontar para o nome _exato_ do arquivo da imagem que você quer usar. Isto significar que você precisa prestar atenção à grafia, letras maiúsculas e minúsculas, e a extensão de arquivo. Cada uma das três imagens nesta página está quebrada por causa de um atributo `src` incorreto. Usando o menu de arquivo como referência, corrija cada uma das tags de imagem.\n\n_Nota: Mesmo que as imagens não sejam carregadas propriamente, seu website ainda mostra textos descriptivos do que deveria estar lá porque usamos os atributos `alt`. Legal!_"
      CSD U2 Image Tag Debug_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão. <br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary><strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Os Detalhes Importam\n\nO atributo `src` precisa apontar para o nome _exato_ do arquivo da imagem que você quer usar. Isto significar que você precisa prestar atenção à grafia, letras maiúsculas e minúsculas, e a extensão de arquivo. Cada uma das três imagens nesta página está quebrada por causa de um atributo `src` incorreto. Usando o menu de arquivo como referência, corrija cada uma das tags de imagem.\n\n_Nota: Mesmo que as imagens não sejam carregadas propriamente, seu website ainda mostra textos descriptivos do que deveria estar lá porque usamos os atributos `alt`. Legal!_"
      CSD U2 Image Tag Debug_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como eu adiciono imagens?</strong>\n</summary>\n\nA tag `<img>` permite mostrar imagens na sua página web. <br><br>\n\nExemplo:\n\n<pre>&lt;img src=\"dog.png\" alt=\"dog jumping\"/&gt;</pre><br><br>\n\nA fim de informar o browser qual arquivo usar, uma informação extra, chamada de um **atributo**, é adicionada à tag \\<img>. O atributo `src` identifica a fonte e se referece o nome da imagem. Arquivos de imagem incluem extensões que dizem ao computador que tipo de imagem é aquela. Extensões comuns são .jpg, .jpeg, .png. <br><br>\n\nAlém de ter o atributo src, os elementos de imagem tabém tem um atributo `alt` que descreve a imagem. Ele é importante no caso da imagem não carregar corretamente ou para pessoas que tem algum problema de visão. <br><br>\n\nUma tag `<img>` é um exemplo de um **tag auto finalizada** porque ela abre e fecha em apenas uma tag. Para marcar isto colocamos o `/` que geralmente iria na tag fim.\n\n</details>\n<details>\n<summary>\n<strong>Por que uma tag de imagem não tem uma tag fim?</strong>\n</summary>\nUma tag de imagem não precisa de uma tag fim porque não há um conteúdo de texto para ser colocado entre as tags. O conteúdo mostrado na tela é especificado pelos atributos da tag.\n</details>\n<details>\n<summary><strong>O que é um atributo?</strong>\n</summary>\n\nAtributos são informações extras incluídas em uma tag. Os atributos tem nomes e valores. O nome diz que tipo de informação é fornecida e então o valor indica a informação específica para aquela tag. \n\nPor exemplo as tags \\<img> tem dois atributos, src e alt. src especifica o nome do arquivo da image e alt diz ao browser em um formato de leitura o que a imagem é.\n\n</details>\n</div>\n\n# Os Detalhes Importam\n\nO atributo `src` precisa apontar para o nome _exato_ do arquivo da imagem que você quer usar. Isto significar que você precisa prestar atenção à grafia, letras maiúsculas e minúsculas, e a extensão de arquivo. Cada uma das três imagens nesta página está quebrada por causa de um atributo `src` incorreto. Usando o menu de arquivo como referência, corrija cada uma das tags de imagem.\n\n_Nota: Mesmo que as imagens não sejam carregadas propriamente, seu website ainda mostra textos descriptivos do que deveria estar lá porque usamos os atributos `alt`. Legal!_"
      CSD U2 Info Page Content: |-
        # Adicionando seu conteúdo

        Agora você deve ter encontrado um punhado de sites que você pode usar para ajudar a defender sua causa. Se não, continue pesquisando! Caso contrário, é hora de começar a estruturar o conteúdo da sua página.

        Para todo o conteúdo que você encontra externamente, é necessário fornecer atribuição ao criador original. Por enquanto, basta incluir o URL do site em que você o encontrou entre parênteses. Por exemplo

        -   Segundo a ASPCA, apenas 10% dos animais que entram nos abrigos foram esterilizados ou castrados (<http://www.aspca.org/animal-homelessness>).
        -   Abrigos de sacrificação realiza a eutanásia de 2,7 milhões de animais por ano (<http://www.aspca.org/animal-homelessness>).

        # Faça isso

        As especificidades do layout da sua página dependerão dos seus tópicos e objetivos, mas em geral você deve criar a seguinte estrutura

        -   Um cabeçalho de primeiro nível com um título atraente para sua página
        -   Um cabeçalho de segundo nível para cada argumento separado para apoiar sua causa
        -   Parágrafos de conteúdo em cada cabeçalho de segundo nível
        -   As URLs de qualquer site em que você encontrou informações
        -   Não se preocupe com estilo agora você está apenas começando o conteúdo
      CSD U2 Info Page Create: |-
        # Página Informativa

        Vamos começar configurando a página que você usará para criar sua página informativa.

        # Faça isso

        -   Adicione um novo arquivo HTML ao seu projeto para sua página informativa.
        -   Adicione um título e uma descrição
      CSD U2 Info Page Final Touches: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        <h2>
        Lista de Verificação
        </h2>

        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Certifique-se que sua imagem possui a licença de uso necessária</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Faça o upload da imagem no Web Lab</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Crie uma tag de imagem com um atributo de descrição alt</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Se a imagem não for sua, acrescente a atribuição na parte inferior<br/>

        </div>

        # Inserindo Imagens no Seu Site

        Você já criou algumas páginas com ótimo conteúdo no seu website, agora você pode adicionar algumas imagens!

        # Faça Isto

        Utilizando ou suas próprias imagens, ou aquelas encontradas através de uma Busca Commons, acrescente algumas imagens às páginas que você já criou. Seja criativo! Use a lista de verificação à direita para acompanhar os passos que devem ser seguidos ao inserir imagens.
      CSD U2 Info Page Final Touches_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        <h2>
        Lista de Verificação
        </h2>

        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Certifique-se que sua imagem possui a licença de uso necessária</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Faça o upload da imagem no Web Lab</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Crie uma tag de imagem com um atributo de descrição alt</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Se a imagem não for sua, acrescente a atribuição na parte inferior<br/>

        </div>

        # Inserindo Imagens no Seu Site

        Você já criou algumas páginas com ótimo conteúdo no seu website, agora você pode adicionar algumas imagens!

        # Faça Isto

        Utilizando ou suas próprias imagens, ou aquelas encontradas através de uma Busca Commons, acrescente algumas imagens às páginas que você já criou. Seja criativo! Use a lista de verificação à direita para acompanhar os passos que devem ser seguidos ao inserir imagens.
      CSD U2 Info Page Final Touches_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        <h2>
        Lista de Verificação
        </h2>

        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Certifique-se que sua imagem possui a licença de uso necessária</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Faça o upload da imagem no Web Lab</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Crie uma tag de imagem com um atributo de descrição alt</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Se a imagem não for sua, acrescente a atribuição na parte inferior<br/>

        </div>

        # Inserindo Imagens no Seu Site

        Você já criou algumas páginas com ótimo conteúdo no seu website, agora você pode adicionar algumas imagens!

        # Faça Isto

        Utilizando ou suas próprias imagens, ou aquelas encontradas através de uma Busca Commons, acrescente algumas imagens às páginas que você já criou. Seja criativo! Use a lista de verificação à direita para acompanhar os passos que devem ser seguidos ao inserir imagens.
      CSD U2 Info Page Images: |-
        # Inserindo Suas Imagens

        Com imagens e informações dos atributos em mãos, chegou a hora de incrementar sua nova página.

        # Faça Isto

        Faça upload de suas imagens para o Web Lab e, usando tags `<img>`, adicione-as onde vc desejar. Para cada imagem:

        -   Inclua um atributo descritivo `alt`
        -   Adiciona a atribuição embaixo da imagem, incluindo
            \\t\* Nome ou apelido do autor (se disponível)
            -   Título da imagem (se disponível)
            -   Url do site original
            -   O tipo de licença sob a qual a imagem foi publicada, ou através de texto (ex: CC-BY), ou utilizando um distintivo do [site da Creative Commons](https://creativecommons.org/about/downloads/).

        Por exemplo

        ![Cão Triste]
        (<https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Longhaired_Dachshund_portrait.jpg/629px-Longhaired_Dachshund_portrait.jpg>)

        Dachshund de Pelo Comprido imagem por Flickr usuário Soggydan (ht<span>tps://</span>commons.wikimedia.org/wiki/File:Longhaired_Dachshund_portrait.jpg) - CC-BY
      CSD U2 Inspector Warm Up: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary><strong>Como eu utilizo a Ferramenta de Inspeção?</strong>\n\n</summary>\n\nA Ferramenta de Inspeção é uma ótima forma de aprender mais sobre o código, no Web Lab. Para ativar a Ferramenta de Inspeção, clique <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png\" style=\"width:100px\">. Você vai perceber que a Ferramenta de Inspeção foi ativada porque o botão irá se tornar branco, e mostrar \"Inspetor: Ligado\". Quando a Ferramenta de Inspeção estiver ativada, você poderá passar o cursor do mouse sobre qualquer coisa na área de visualização, e o Web Lab irá indicar o código responsável pela exibição daquela parte. \n\n</details>\n</div>\n\n# Explore o HTML\n\nEsta é uma página web escrita em HTML, a linguagem da web. Você irá aprender mais sobre como ela funciona, mas antes vamos explorá-la através da Ferramenta de Inspeção.\n\n# Faça Isto\n\n-   Clique sobre a Dica \"Como eu utilizo a Ferramenta de Inspeção?\" à direita para aprender a usar a Ferramenta de Inspeção.\n-   Siga as instruções para explorar a página web, e discuta com um colega como ela funciona."
      CSD U2 Inspector Warm Up_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>
        <strong><span>Como eu utilizo a Ferramenta de Inspeção?</span></strong>
        </summary>

        A Ferramenta de Inspeção é uma ótima forma de aprender mais sobre código no Web Lab. Para ativar a Ferramenta de Inspeção, clique <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Você vai perceber que a Ferramenta de Inspeção foi ativada porque o botão se tornará branco, e dirá "Inspetor: Ligado". Após ativar a Ferramenta de Inspeção, você poderá passar o cursor do mouse sobre qualquer coisa que estiver na área de visualização, e o Web Lab irá indicar qual o código responsável pela exibição daquela parte da página.

        </details>
        </div>

        # Explore o HTML

        Esta é uma página escrita em HTML, a linguagem da web. Você irá aprender mais sobre seu funcionamento, mas vamos antes explorá-la com a Ferramenta de Inspeção.

        # Faça Isto

        -   Clique sobre a Dica "Como eu utilizo a Ferramenta de Inspeção?" à direita, para aprender como utilizar a Ferramenta de Inspeção.
        -   Siga as instruções para explorar a página web, e discuta com um coleta sobre seu funcionamento.
      CSD U2 Inspector Warm Up_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>
        <strong><span>Como eu utilizo a Ferramenta de Inspeção?</span></strong>
        </summary>

        A Ferramenta de Inspeção é uma ótima forma de aprender mais sobre código no Web Lab. Para ativar a Ferramenta de Inspeção, clique <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Você vai perceber que a Ferramenta de Inspeção foi ativada porque o botão se tornará branco, e dirá "Inspetor: Ligado". Após ativar a Ferramenta de Inspeção, você poderá passar o cursor do mouse sobre qualquer coisa que estiver na área de visualização, e o Web Lab irá indicar qual o código responsável pela exibição daquela parte da página.

        </details>
        </div>

        # Explore o HTML

        Esta é uma página escrita em HTML, a linguagem da web. Você irá aprender mais sobre seu funcionamento, mas vamos antes explorá-la com a Ferramenta de Inspeção.

        # Faça Isto

        -   Clique sobre a Dica "Como eu utilizo a Ferramenta de Inspeção?" à direita, para aprender como utilizar a Ferramenta de Inspeção.
        -   Siga as instruções para explorar a página web, e discuta com um coleta sobre seu funcionamento.
      CSD U2 Pair Programming Video_2019: |-
        ## Perguntas para considerar

        -   Por que você acha que programadores profissionais usam programação em pares?
        -   Como você acha que a programação em pares vai ajudá-lo a programar melhor?
      CSD U2 Project Start: |-
        # Inicie seu projeto

        Agora que você tem um plano para o seu site pessoal, você pode iniciar a codificá-lo aqui.  Não se preocupe se você não pode fazer tudo o que você quer hoje.  Você terá muitas chances de melhorar seu trabalho conforme você aprende mais sobre desenvolvimento de sites.

        # Faça isto

        -   Use HTML para criar a página que você desenhou.  Certifique-se de que a página inclui
        -   Pelo menos \*\* dois capítulos de diferentes tamanhos \*\*
        -   Pelo menos \*\* um parágrafo \*\*
            **\* Assemelha \*** a sua página, comparando ao seu desenho e mostrando ao seu parceiro
      CSD U2 Project Start_2018: |-
        # Inicie seu projeto

        Agora que você tem um plano para o seu site pessoal, você pode iniciar a codificá-lo aqui.  Não se preocupe se você não pode fazer tudo o que você quer hoje.  Você terá muitas chances de melhorar seu trabalho conforme você aprende mais sobre desenvolvimento de sites.

        # Faça isto

        -   Use HTML para criar a página que você desenhou.  Certifique-se de que a página inclui
        -   Pelo menos \*\* dois capítulos de diferentes tamanhos \*\*
        -   Pelo menos \*\* um parágrafo \*\*
            **\* Assemelha \*** a sua página, comparando ao seu desenho e mostrando ao seu parceiro
      CSD U2 Project Start_2019: |-
        # Inicie seu projeto

        Agora que você tem um plano para o seu site pessoal, você pode iniciar a codificá-lo aqui.  Não se preocupe se você não pode fazer tudo o que você quer hoje.  Você terá muitas chances de melhorar seu trabalho conforme você aprende mais sobre desenvolvimento de sites.

        # Faça isto

        -   Use HTML para criar a página que você desenhou.  Certifique-se de que a página inclui
        -   Pelo menos \*\* dois capítulos de diferentes tamanhos \*\*
        -   Pelo menos \*\* um parágrafo \*\*
            **\* Assemelha \*** a sua página, comparando ao seu desenho e mostrando ao seu parceiro
      CSD U2 RGB intro: |-
        # Cores RGB

        Todas as cores, caso tenham nomes ou não, podem ser descritas pelos níveis de luz vermelha, verde e azul que as compõem. Isto é chamado um valor RGB (abreviação de Red/Vermelho - Green/Verde - Blue/Azul). Você pode usar a ferramenta à sua esquerda para experimentar valores RGB diferentes, e verificar as cores que surgem.

        -   **Clique "Iniciar" para ativar a ferramenta à esquerda,** e use os deslizadores para ajustar os níveis de iluminação vermelha, verde e azul.
        -   Para cada uma das cores abaixo, ajuste-a para seu valor RGB.

        A) vermelho: 216, verde: 191, azul: 216 - rgb(216,191,216)

        B) vermelho: 255, verde: 239, azul: 213 - rgb(255,239,213)

        C) vermelho: 250, verde: 128, azul: 114 - rgb(250,128,114)

        D) vermelho: 70, verde: 130, azul: 180 - rgb(70, 130, 180)

        E) vermelho: 107, verde: 142, azul: 35 - rgb(107,142,35)

        <div style="font-size: 16px">
        <br />
        <details>

        <summary><strong>Por que vermelho e verde produzem amarelo?</strong></summary>

        Quando você mistura tintas, vermelho e verde produzem marrom, mas a mistura de cores RGB utilizam luz ao invés de tinta, então as cores se misturam de forma diferente. RGB utiliza _mistura de cores aditiva_. Em uma mistura de cores aditiva, vermelho e verde geram amarelo, vermelho e azul geram magenta, e azul e verde produzem ciano. Quando se misturam as três cores primárias juntas (vermelho, verde e azul), obtém-se branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Cores Aditivas</a>

        </details>
        <details>
        <summary><strong>Quantas cores eu posso fazer com misturas de cores RGB?</strong></summary>

        <p>
        Você pode produzir mais do que dezesseis milhões de cores com a mistura de cores RGB.
        </p>

        </details>
        </div>
      CSD U2 RGB intro_2018: |-
        # Cores RGB

        Todas as cores, caso tenham nomes ou não, podem ser descritas pelos níveis de luz vermelha, verde e azul que as compõem. Isto é chamado um valor RGB (abreviação de Red/Vermelho - Green/Verde - Blue/Azul). Você pode usar a ferramenta à sua esquerda para experimentar valores RGB diferentes, e verificar as cores que surgem.

        -   **Clique "Iniciar" para ativar a ferramenta à esquerda,** e use os deslizadores para ajustar os níveis de iluminação vermelha, verde e azul.
        -   Para cada uma das cores abaixo, ajuste-a para seu valor RGB.

        A) vermelho: 216, verde: 191, azul: 216 - rgb(216,191,216)

        B) vermelho: 255, verde: 239, azul: 213 - rgb(255,239,213)

        C) vermelho: 250, verde: 128, azul: 114 - rgb(250,128,114)

        D) vermelho: 70, verde: 130, azul: 180 - rgb(70, 130, 180)

        E) vermelho: 107, verde: 142, azul: 35 - rgb(107,142,35)

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>Por que vermelho e verde produzem amarelo?</strong>
        </summary>

        <p>

        Quando você mistura tintas, vermelho e verde produzem marrom, mas a mistura de cores RGB utilizam luz ao invés de tinta, então as cores se misturam de forma diferente. RGB utiliza _mistura de cores aditiva_. Em uma mistura de cores aditiva, vermelho e verde geram amarelo, vermelho e azul geram magenta, e azul e verde produzem ciano. Quando se misturam as três cores primárias juntas (vermelho, verde e azul), obtém-se branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Cores Aditivas</a>

        </p></details>
        <details>
        <summary>
        <strong>Quantas cores eu posso fazer com misturas de cores RGB?</strong>
        </summary>

        <p>
        Você pode produzir mais do que dezesseis milhões de cores com a mistura de cores RGB.
        </p>

        </details>
        </div>
      CSD U2 RGB intro_2019: |-
        # Cores RGB

        Todas as cores, caso tenham nomes ou não, podem ser descritas pelos níveis de luz vermelha, verde e azul que as compõem. Isto é chamado um valor RGB (abreviação de Red/Vermelho - Green/Verde - Blue/Azul). Você pode usar a ferramenta à sua esquerda para experimentar valores RGB diferentes, e verificar as cores que surgem.

        -   **Clique "Iniciar" para ativar a ferramenta à esquerda,** e use os deslizadores para ajustar os níveis de iluminação vermelha, verde e azul.
        -   Para cada uma das cores abaixo, ajuste-a para seu valor RGB.

        A) vermelho: 216, verde: 191, azul: 216 - rgb(216,191,216)

        B) vermelho: 255, verde: 239, azul: 213 - rgb(255,239,213)

        C) vermelho: 250, verde: 128, azul: 114 - rgb(250,128,114)

        D) vermelho: 70, verde: 130, azul: 180 - rgb(70, 130, 180)

        E) vermelho: 107, verde: 142, azul: 35 - rgb(107,142,35)

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>Por que vermelho e verde produzem amarelo?</strong>
        </summary>

        <p>

        Quando você mistura tintas, vermelho e verde produzem marrom, mas a mistura de cores RGB utilizam luz ao invés de tinta, então as cores se misturam de forma diferente. RGB utiliza _mistura de cores aditiva_. Em uma mistura de cores aditiva, vermelho e verde geram amarelo, vermelho e azul geram magenta, e azul e verde produzem ciano. Quando se misturam as três cores primárias juntas (vermelho, verde e azul), obtém-se branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Cores Aditivas</a>

        </p></details>
        <details>
        <summary>
        <strong>Quantas cores eu posso fazer com misturas de cores RGB?</strong>
        </summary>

        <p>
        Você pode produzir mais do que dezesseis milhões de cores com a mistura de cores RGB.
        </p>

        </details>
        </div>
      CSD U2 RGB others: |-
        # Cores de Verão e de Outono

        Escolha valores RGB para cores de verão e de outono.

        -   Clique "Iniciar" para ativar a ferramenta.
        -   Ajuste os níveis até você encontrar uma cor de verão que você goste, depois escreva os valores obtidos no seu guia de atividades.
        -   Faça o mesmo para uma cor de outono. Você irá precisar dos valores RGB para a próxima atividade.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary><strong>Onde eu posso encontrar uma relação completa de tipos de cores?</strong></summary>
        Você pode encontrar muitas opções de cores em <a href="http://www.w3schools.com/colors/colors_picker.asp">W3Schools - HTML Color Picker</a></details>
        <details>
        <summary><strong>Por que vermelho e verde fazem amarelo?</strong></summary>

        Quando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Additive Color</a>.

        </details>
        <details>
        <summary><strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong></summary>

        <p>Você pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.</p>

        </details>
        </div>
      CSD U2 RGB others_2018: |-
        # Cores de Verão e de Outono

        Escolha valores RGB para cores de verão e de outono.

        -   Clique "Iniciar" para ativar a ferramenta.
        -   Ajuste os níveis até você encontrar uma cor de verão que você goste, depois escreva os valores obtidos no seu guia de atividades.
        -   Faça o mesmo para uma cor de outono. Você irá precisar dos valores RGB para a próxima atividade.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>Onde eu posso encontrar uma relação completa de tipos de cores?</strong>
        </summary>

        Você pode encontrar muitas opções de cores em <a href="http://www.w3schools.com/colors/colors_picker.asp">W3Schools - HTML Color Picker</a>

        </details>
        <details>
        <summary>
        <strong>Por que vermelho e verde fazem amarelo?</strong>
        </summary>

        Quando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Additive Color</a>.

        </details>
        <details>
        <summary>
        <strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong>
        </summary>

        Você pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.

        </details>
        </div>
      CSD U2 RGB others_2019: |-
        # Cores de Verão e de Outono

        Escolha valores RGB para cores de verão e de outono.

        -   Clique "Iniciar" para ativar a ferramenta.
        -   Ajuste os níveis até você encontrar uma cor de verão que você goste, depois escreva os valores obtidos no seu guia de atividades.
        -   Faça o mesmo para uma cor de outono. Você irá precisar dos valores RGB para a próxima atividade.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>Onde eu posso encontrar uma relação completa de tipos de cores?</strong>
        </summary>

        Você pode encontrar muitas opções de cores em <a href="http://www.w3schools.com/colors/colors_picker.asp">W3Schools - HTML Color Picker</a>

        </details>
        <details>
        <summary>
        <strong>Por que vermelho e verde fazem amarelo?</strong>
        </summary>

        Quando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Additive Color</a>.

        </details>
        <details>
        <summary>
        <strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong>
        </summary>

        Você pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.

        </details>
        </div>
      CSD U2 RGB summer: |-
        # Cor de Verão

        Encontre os valores RGB para uma cor amarela típica de verão.

        -   Clique "Iniciar" para ativar a ferramenta.
        -   Ajuste os níveis até corresponder ao tom de amarelo de verão na parte inferior da ferramenta.
        -   Escreva os valores RGB no seu guia de atividades. Você irá precisar deles para a próxima ativdade.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary><strong>Por que vermelho e verde fazem amarelo?</strong></summary>

        Quando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Additive Color</a>.

        </details>
        <details>
        <summary><strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong></summary>

        <p>Você pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.</p>

        </details>
        </div>
      CSD U2 RGB summer_2018: |-
        # Cor de Verão

        Encontre os valores RGB para uma cor amarela típica de verão.

        -   Clique "Iniciar" para ativar a ferramenta.
        -   Ajuste os níveis até corresponder ao tom de amarelo de verão na parte inferior da ferramenta.
        -   Escreva os valores RGB no seu guia de atividades. Você irá precisar deles para a próxima ativdade.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>Por que vermelho e verde fazem amarelo?</strong>
        </summary>

        Quando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Additive Color</a>.

        </details>
        <details>
        <summary>
        <strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong>
        </summary>

        Você pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.

        </details>
        </div>
      CSD U2 RGB summer_2019: |-
        # Cor de Verão

        Encontre os valores RGB para uma cor amarela típica de verão.

        -   Clique "Iniciar" para ativar a ferramenta.
        -   Ajuste os níveis até corresponder ao tom de amarelo de verão na parte inferior da ferramenta.
        -   Escreva os valores RGB no seu guia de atividades. Você irá precisar deles para a próxima ativdade.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>Por que vermelho e verde fazem amarelo?</strong>
        </summary>

        Quando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href="https://en.wikipedia.org/wiki/Additive_color">Wikipedia - Additive Color</a>.

        </details>
        <details>
        <summary>
        <strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong>
        </summary>

        Você pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.

        </details>
        </div>
      CSD U2 RGB winter: "# Cor de Inverno\n\nNos próximos níveis, você irá encontrar cores das estações do ano para um website. Aqui, você precisará escolher os valores RGB para uma cor azulada de inverno. \n\n-   Clique \"Iniciar\" para ativar a ferramenta.\n-   Ajuste os níveis até que a cor na parte inferior da ferramenta corresponda ao azul de inverno.\n-   Escreva os valores RGB no seu guia de atividades. Você irá precisar deles na próxima atividade.\n\n<div style=\"font-size: 16px\">\n<br />\n<details>\n\n<summary><strong>Como eu torno uma cor mais clara?</strong></summary>\n<p>Para clarear uma cor, você precisa adicionar mais luminosidade (aumentar o nível do deslizador). Se você já atingiu a quantidade máxima de luz azul, você terá que acrescentar mais luminosidades vermelha e verde para tornar eu azul mais claro.</p></details>\n<details>\n<summary><strong>Por que vermelho e verde fazem amarelo?</strong></summary>\n\nQuando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia - Additive Color</a>.\n\n</details>\n<details>\n<summary><strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong></summary>\n\n<p>Você pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.</p>\n\n</details>\n</div>"
      CSD U2 RGB winter_2018: "# Cor de Inverno\n\nNos próximos níveis, você irá encontrar cores das estações do ano para um website. Aqui, você precisará escolher os valores RGB para uma cor azulada de inverno. \n\n-   Clique \"Iniciar\" para ativar a ferramenta.\n-   Ajuste os níveis até que a cor na parte inferior da ferramenta corresponda ao azul de inverno.\n-   Escreva os valores RGB no seu guia de atividades. Você irá precisar deles na próxima atividade.\n\n<div style=\"font-size: 16px\">\n<br />\n<details>\n\n<summary>\n<strong>Como eu torno uma cor mais clara?</strong>\n</summary>\n\nPara clarear uma cor, você precisa adicionar mais luminosidade (aumentar o nível do deslizador). Se você já atingiu a quantidade máxima de luz azul, você terá que acrescentar mais luminosidades vermelha e verde para tornar eu azul mais claro.\n\n</details>\n<details>\n<summary>\n<strong>Por que vermelho e verde fazem amarelo?</strong>\n</summary>\n\nQuando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia - Additive Color</a>.\n\n</details>\n<details>\n<summary>\n<strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong>\n</summary>\n\nVocê pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.\n\n</details>\n</div>"
      CSD U2 RGB winter_2019: "# Cor de Inverno\n\nNos próximos níveis, você irá encontrar cores das estações do ano para um website. Aqui, você precisará escolher os valores RGB para uma cor azulada de inverno. \n\n-   Clique \"Iniciar\" para ativar a ferramenta.\n-   Ajuste os níveis até que a cor na parte inferior da ferramenta corresponda ao azul de inverno.\n-   Escreva os valores RGB no seu guia de atividades. Você irá precisar deles na próxima atividade.\n\n<div style=\"font-size: 16px\">\n<br />\n<details>\n\n<summary>\n<strong>Como eu torno uma cor mais clara?</strong>\n</summary>\n\nPara clarear uma cor, você precisa adicionar mais luminosidade (aumentar o nível do deslizador). Se você já atingiu a quantidade máxima de luz azul, você terá que acrescentar mais luminosidades vermelha e verde para tornar eu azul mais claro.\n\n</details>\n<details>\n<summary>\n<strong>Por que vermelho e verde fazem amarelo?</strong>\n</summary>\n\nQuando você mistura tintas, vermelho e verde fazem marrom, mas a mistura de cores RGB utiliza luminosidade ao invés de tinta, então as cores se misturam de forma diferente. RGB usa uma _mistura de cores aditiva_. Em uma mistura aditiva, vermelho e verde fazem amarelo, vermelho e azul geram magenta, e azul com verde geram ciano. Quanto você mistura as três cores primárias juntas (vermelho, verde e azul), elas fazem branco. Você pode ler mais em <a href=\"https://en.wikipedia.org/wiki/Additive_color\">Wikipedia - Additive Color</a>.\n\n</details>\n<details>\n<summary>\n<strong>Quantas cores eu posso criar com a mistura de cores RGB?</strong>\n</summary>\n\nVocê pode criar mais de dezesseis milhões de cores com a mistura de cores RGB.\n\n</details>\n</div>"
      CSD U2 Test Bug FR: Pense em um bug difícil que você precisava corrigir em seu programa. Qual foi o seu processo para encontrar e corrigir o bug?
      CSD U2 Test Bug: Pense em um bug difícil que você precisava corrigir em seu programa. Qual foi o seu processo para encontrar e corrigir o bug?
      CSD U2 Test Copyright FR: Escolha um pedaço de material protegido por direitos autorais que você usou no seu site. Por que você acha que o criador escolheu a licença que usou?
      CSD U2 Test DigCit FR: Escolha um trecho de código que sua classe pode saber, mas você não quer compartilhar no seu site. Por que é aceitável que este trecho seja conhecido por seus colegas e pelo professor, mas não publicado para todos?
      CSD U2 add content: |-
        # Adicione HTML

        Agora, você deve adicionar o HTML nas suas páginas.

        # Faça isso

        -   Para cada uma das novas páginas que você criou, adicione HTML para fazer a página que você desenhou no seu guia de projeto.
        -   Você pode também adicionar mais HTML em suas páginas que você já criou.
      CSD U2 add content_2018: |-
        # Adicione HTML

        Agora, você deve adicionar o HTML nas suas páginas.

        # Faça isso

        -   Para cada uma das novas páginas que você criou, adicione HTML para fazer a página que você desenhou no seu guia de projeto.
        -   Você pode também adicionar mais HTML em suas páginas que você já criou.
      CSD U2 add content_2019: |-
        # Adicione HTML

        Agora, você deve adicionar o HTML nas suas páginas.

        # Faça isso

        -   Para cada uma das novas páginas que você criou, adicione HTML para fazer a página que você desenhou no seu guia de projeto.
        -   Você pode também adicionar mais HTML em suas páginas que você já criou.
      CSD U2 add file - OLD: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **O que é uma folha de estilos?**

        </summary>
        Uma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados que são vinculados à página HTML.
        </details>
        <details>
        <summary>

        **O que é CSS?**

        </summary>
        CSS é uma linguagem que controla a forma como o conteúdo aparece em uma página web. Utiliza conjuntos de regras para alterar a aparência da página. Cada regra possui um seletor, que define quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e um valor para esta propriedade.

        Segue um exemplo de um conjunto de regras, que torna o texto de uma tag `h2` azul e cursiva:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        Neste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores para estas propriedades.

        </details>
        <details>
        <summary>

        **Como eu crio uma nova folha de estilos?**

        </summary>
        Para criar uma nova folha de estilos, clique sobre o botão "Novo CSS" sobre a área de código.
        </details>
        <details>
        <summary>

        **Que nome eu dou para a minha folha de estilos?**

        </summary>
        Você pode dar qualquer nome para sua folha de estilos, mas é melhor escolher um nome relevante, como "estilo.css" ou "sobremeusestilos.css", para que fique claro do que se trata. Seu arquivo deve sempre terminar com a extensão ".css".
        </details>
        <details>
        <summary>

        **Como eu renomeio um arquivo?**

        </summary>
        Para renomear um arquivo, você pode clicar com o botão direito (ou com a tecla Ctrl pressionada) sobre o nome, e escolher a opção "Renomear". Isto vai permitir a você digitar o novo nome. Clicar em um nome de arquivo quando ele já estiver selecionado também permite a alteração do nome.
        </details>
        <details>
        <summary>

        **Como eu insiro uma folha de estilos em uma página web?**

        </summary>

        Para inserir uma folha de estilos a uma página web, abra o código da página. Dentro da tag head, acrescente o seguinte código `<link rel="stylesheet" href="style.css">`. Em seguida, troque "style.css" para o nome da sua folha de estilos.

        </details>
        </div>

        # Inserindo uma Folha de Estilos

        Esta é sua página "Sobre mim" que você usou antes. No próximo nível, você terá a oportunidade de acrescentar alguns estilos diferentes a ela, mas antes, você vai precisar criar uma folha de estilos, renomeá-la, e vinculá-la à sua página HTML.

        1.  Crie uma nova folha de estilos para o seu projeto.
        2.  Renomeie o arquivo da folha de estilos
        3.  Insira a folha de estilos à sua página HTML.

        <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png" style=" max-width:500px">
      CSD U2 add file: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que é uma folha de estilos?</strong></summary>
        Uma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados que são vinculados à página HTML.
        </details>
        <details>
        <summary><strong>O que é CSS?</strong></summary>

        CSS é uma linguagem que controla a forma como o conteúdo aparece em uma página web. Utiliza conjuntos de regras para alterar a aparência da página. Cada regra possui um seletor, que define quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e um valor para esta propriedade.

        Segue um exemplo de um conjunto de regras, que torna o texto de uma tag `h2` azul e cursiva:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        Neste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores para estas propriedades.

        </details>
        <details>
        <summary><strong>Como eu crio uma nova folha de estilos?</strong></summary>
        Para criar uma nova folha de estilos, clique sobre o botão "Novo CSS" sobre a área de código.
        </details>
        <details>
        <summary><strong>Que nome eu dou para a minha folha de estilos?</strong></summary>

        Você pode dar qualquer nome para sua folha de estilos, mas é melhor escolher um nome relevante, como "estilo.css" ou "sobremeusestilos.css", para que fique claro do que se trata. Seu arquivo deve sempre terminar com a extensão ".css".

        </details>
        <details>
        <summary><strong>Como eu renomeio um arquivo?</strong></summary>

        Para renomear um arquivo, você pode clicar com o botão direito (ou com a tecla Ctrl pressionada) sobre o nome, e escolher a opção "Renomear". Isto vai permitir a você digitar o novo nome. Clicar em um nome de arquivo quando ele já estiver selecionado também permite a alteração do nome.

        </details>
        <details>
        <summary><strong>Como eu insiro uma folha de estilos em uma página web?</strong></summary>

        Para inserir uma folha de estilos a uma página web, abra o código da página. Dentro da tag head, acrescente o seguinte código `<link rel="stylesheet" href="style.css">`. Em seguida, troque "style.css" para o nome da sua folha de estilos.

        </details>
        </div>

        # Inserindo uma Folha de Estilos

        Este é o projeto que você usou antes. No próximo nível, você terá a oportunidade de acrescentar alguns estilos diferentes a ele, mas antes, você vai precisar criar uma folha de estilos, renomeá-la, e vinculá-la à sua página HTML.

        1.  Crie uma nova folha de estilos para o seu projeto.
        2.  Renomeie o arquivo da folha de estilos
        3.  Insira a folha de estilos à sua página HTML.

        <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png" style=" max-width:500px">
      CSD U2 add file_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados que são vinculados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo aparece em uma página web. Utiliza conjuntos de regras para alterar a aparência da página. Cada regra possui um seletor, que define quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e um valor para esta propriedade.

        Segue um exemplo de um conjunto de regras, que torna o texto de uma tag `h2` azul e cursiva:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        Neste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores para estas propriedades.

        </details>
        <details>
        <summary>
        <strong>Como eu crio uma nova folha de estilos?</strong>
        </summary>
        Para criar uma nova folha de estilos, clique sobre o botão "Novo CSS" sobre a área de código.
        </details>
        <details>
        <summary>
        <strong>Que nome eu dou para a minha folha de estilos?</strong>
        </summary>
        Você pode dar qualquer nome para sua folha de estilos, mas é melhor escolher um nome relevante, como "estilo.css" ou "sobremeusestilos.css", para que fique claro do que se trata. Seu arquivo deve sempre terminar com a extensão ".css".
        </details>
        <details>
        <summary>
        <strong>Como eu renomeio um arquivo?</strong>
        </summary>
        Para renomear um arquivo, você pode clicar com o botão direito (ou com a tecla Ctrl pressionada) sobre o nome, e escolher a opção "Renomear". Isto vai permitir a você digitar o novo nome. Clicar em um nome de arquivo quando ele já estiver selecionado também permite a alteração do nome.
        </details>
        <details>
        <summary>
        <strong>Como eu insiro uma folha de estilos em uma página web?</strong>
        </summary>

        Para inserir uma folha de estilos a uma página web, abra o código da página. Dentro da tag head, acrescente o seguinte código `<link rel="stylesheet" href="style.css">`. Em seguida, troque "style.css" para o nome da sua folha de estilos.

        </details>
        </div>

        # Inserindo uma Folha de Estilos

        Este é o projeto que você usou antes. No próximo nível, você terá a oportunidade de acrescentar alguns estilos diferentes a ele, mas antes, você vai precisar criar uma folha de estilos, renomeá-la, e vinculá-la à sua página HTML.

        1.  Crie uma nova folha de estilos para o seu projeto.
        2.  Renomeie o arquivo da folha de estilos
        3.  Insira a folha de estilos à sua página HTML.

        <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png" style=" max-width:500px">
      CSD U2 add file_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados que são vinculados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo aparece em uma página web. Utiliza conjuntos de regras para alterar a aparência da página. Cada regra possui um seletor, que define quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e um valor para esta propriedade.

        Segue um exemplo de um conjunto de regras, que torna o texto de uma tag `h2` azul e cursiva:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        Neste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores para estas propriedades.

        </details>
        <details>
        <summary>
        <strong>Como eu crio uma nova folha de estilos?</strong>
        </summary>
        Para criar uma nova folha de estilos, clique sobre o botão "Novo CSS" sobre a área de código.
        </details>
        <details>
        <summary>
        <strong>Que nome eu dou para a minha folha de estilos?</strong>
        </summary>
        Você pode dar qualquer nome para sua folha de estilos, mas é melhor escolher um nome relevante, como "estilo.css" ou "sobremeusestilos.css", para que fique claro do que se trata. Seu arquivo deve sempre terminar com a extensão ".css".
        </details>
        <details>
        <summary>
        <strong>Como eu renomeio um arquivo?</strong>
        </summary>
        Para renomear um arquivo, você pode clicar com o botão direito (ou com a tecla Ctrl pressionada) sobre o nome, e escolher a opção "Renomear". Isto vai permitir a você digitar o novo nome. Clicar em um nome de arquivo quando ele já estiver selecionado também permite a alteração do nome.
        </details>
        <details>
        <summary>
        <strong>Como eu insiro uma folha de estilos em uma página web?</strong>
        </summary>

        Para inserir uma folha de estilos a uma página web, abra o código da página. Dentro da tag head, acrescente o seguinte código `<link rel="stylesheet" href="style.css">`. Em seguida, troque "style.css" para o nome da sua folha de estilos.

        </details>
        </div>

        # Inserindo uma Folha de Estilos

        Este é o projeto que você usou antes. No próximo nível, você terá a oportunidade de acrescentar alguns estilos diferentes a ele, mas antes, você vai precisar criar uma folha de estilos, renomeá-la, e vinculá-la à sua página HTML.

        1.  Crie uma nova folha de estilos para o seu projeto.
        2.  Renomeie o arquivo da folha de estilos
        3.  Insira a folha de estilos à sua página HTML.

        <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png" style=" max-width:500px">
      CSD U2 add links: |-
        # Link Inicial ausente

        Copiando seus hiperlinks para todas as suas páginas permitiu que você chegasse à maioria das páginas em seu site de qualquer outra página. Um hiperlink está faltando - o único para levá-lo à sua página inicial (index.html).

        **Adicione um hiperlink à sua página inicial a partir de todas as páginas, até mesmo da sua página inicial.** Adicionando isto à sua página inicial manterá seu cabeçalho de navegação consistente em todas as páginas.
      CSD U2 add style_2019: |-
        # Experimente!

        Agora que você viu algumas maneiras para adicionar estilos, é hora de você experimentar. Aqui está uma página web que você nunca viu antes, mas ela precisa de algum estilo!

        # Faça Isto

        -   Adicione uma cor de fundo à página web.
        -   Agregue algum espaço a mais ao redor das imagens.
        -   Faça com que o texto seja exibido em uma cor diferente.
        -   Acrescente quaisquer estilos adicionais que você queira.
      CSD U2 challenge: |-
        # Desafio

        Verifique com seu professor antes de iniciar este desafio.

        Esta página só está parcialmente terminada, e tem alguns bugs. Felizmente, há comentários que devem ajudá-lo a terminar a página como o autor espera.

        # Faça isto

        -   Olhe para o código com o seu parceiro e discuta o que a página deve parecer.
        -   Trabalhe juntos para terminar a página, prestando atenção à formatação.
        -   Compare com outro par para ver se suas páginas são as mesmas.
      CSD U2 challenge_2018: |-
        # Desafio

        Verifique com seu professor antes de iniciar este desafio.

        Esta página só está parcialmente terminada, e tem alguns bugs. Felizmente, há comentários que devem ajudá-lo a terminar a página como o autor espera.

        # Faça isto

        -   Olhe para o código com seu parceiro e discuta como a página deve parecer.
        -   Trabalhe juntos para terminar a página, prestando atenção à formatação.
        -   Comparar com outro par para ver se suas páginas são as mesmas.
      CSD U2 challenge_2019: |-
        # Desafio

        Verifique com seu professor antes de iniciar este desafio.

        Esta página só está parcialmente terminada, e tem alguns bugs. Felizmente, há comentários que devem ajudá-lo a terminar a página como o autor espera.

        # Faça isto

        -   Olhe para o código com seu parceiro e discuta como a página deve parecer.
        -   Trabalhe juntos para terminar a página, prestando atenção à formatação.
        -   Comparar com outro par para ver se suas páginas são as mesmas.
      CSD U2 classes modify: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n\n</summary>\nPara que o código funcione, você precisa criar uma classe winter, e acrescentar elementos a esta classe.\n\nA classe é criada na folha de estilos através do código a seguir.\n\n<pre>.winter { \ncolor: rgb(195,230,255); \n}</pre>\n\nEste código cria uma classe denominada \"winter\", e faz com que tudo o que estiver na classe seja exibido em tom azulado de inverno, que tem os valores RGB de (195,230,255).\n\nO código que adiciona um elemento `h5` à classe winter é `<h5 class=\"winter\">`. A cláusula `class=\"winter\"` contida no interior da tag de abertura adiciona tudo que estiver dentro da tag à classe.\n\n</details>\n<details>\n<summary>\n<strong>Quais regras podem ser incluídas no conjunto de regras de uma classe?</strong>\n\n</summary>\n\nO conjunto de regras de uma classe pode ter as mesmas regras que qualquer outro tipo de seletor. Se uma regra não se aplicar ao conteúdo de uma classe (por exemplo, usando `font-size` em um elemento sem texto), então o computador irá ignorar esta regra, mas ainda assim continuar a usar as outras regras que funcionam.\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor é iniciado por um ponto?</strong>\n\n</summary>\nEm CSS, um ponto colocado à frente do seletor indica que o seletor é o nome de uma classe. Se não houver ponto, significa que o seletor é o nome de um tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n\n</summary>\nUm desenvolvedor web usa classes quando alguns elementos devem ser exibidos de forma diferente de outros, mesmo quando estiverem em tags iguais. Classes também podem ser usadas para dar o mesmo estilo a elementos que estão em tags diferentes.\n</details>\n<details>\n<summary>\n<strong>Eu obtive valores RGB diferentes, mas meus valores estão corretos também.</strong>\n\n</summary>\n\nConsiderando que RGB gera milhões de cores diferentes, algumas são tão parecidas que as pessoas não conseguem distingui-las. Isto significa que há vários valores RGB que são próximos o suficiente para que funcionem como nossa cor de inverno.\n\n</details>\n</div>\n\n# Adicionando Regras\n\nSuas palavras de inverno devem todas ter a mesma cor e tipografia.\n\n-   Localize o conjunto de regras CSS na folha de estilos que fornece o estilo às palavras de inverno.\n-   Acrescente uma regra que altera a tipografia das palavras de inverno. Pode ser qualquer fonte, mas deverá ser diferente daquelas usadas para as outras três estações.\n-   Adicione quaisquer outras regras que você gostaria para suas palavras de inverno."
      CSD U2 classes modify_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\nPara que o código funcione, você precisa criar uma classe winter, e acrescentar elementos a esta classe.\n\nA classe é criada na folha de estilos através do código a seguir.\n\n<pre>.winter { \ncolor: rgb(195,230,255); \n}</pre>\n\nEste código cria uma classe denominada \"winter\", e faz com que tudo o que estiver na classe seja exibido em tom azulado de inverno, que tem os valores RGB de (195,230,255).\n\nO código que adiciona um elemento `h5` à classe winter é `<h5 class=\"winter\">`. A cláusula `class=\"winter\"` contida no interior da tag de abertura adiciona tudo que estiver dentro da tag à classe.\n\n</details>\n<details>\n\n<summary>\n<strong>Quais regras podem ser incluídas no conjunto de regras de uma classe?</strong>\n</summary>\n\nO conjunto de regras de uma classe pode ter as mesmas regras que qualquer outro tipo de seletor. Se uma regra não se aplicar ao conteúdo de uma classe (por exemplo, usando `font-size` em um elemento sem texto), então o computador irá ignorar esta regra, mas ainda assim continuar a usar as outras regras que funcionam.\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor é iniciado por um ponto?</strong>\n</summary>\nEm CSS, um ponto colocado à frente do seletor indica que o seletor é o nome de uma classe. Se não houver ponto, significa que o seletor é o nome de um tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n</summary>\nUm desenvolvedor web usa classes quando alguns elementos devem ser exibidos de forma diferente de outros, mesmo quando estiverem em tags iguais. Classes também podem ser usadas para dar o mesmo estilo a elementos que estão em tags diferentes.\n</details>\n<details>\n<summary>\n<strong>Eu obtive valores RGB diferentes, mas meus valores estão corretos também.</strong>\n</summary>\n\nConsiderando que RGB gera milhões de cores diferentes, algumas são tão parecidas que as pessoas não conseguem distingui-las. Isto significa que há vários valores RGB que são próximos o suficiente para que funcionem como nossa cor de inverno.\n\n</details>\n</div>\n\n# Adicionando Regras\n\nSuas palavras de inverno devem todas ter a mesma cor e tipografia.\n\n-   Localize o conjunto de regras CSS na folha de estilos que fornece o estilo às palavras de inverno.\n-   Acrescente uma regra que altera a tipografia das palavras de inverno. Pode ser qualquer fonte, mas deverá ser diferente daquelas usadas para as outras três estações.\n-   Adicione quaisquer outras regras que você gostaria para suas palavras de inverno."
      CSD U2 classes modify_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\nPara que o código funcione, você precisa criar uma classe winter, e acrescentar elementos a esta classe.\n\nA classe é criada na folha de estilos através do código a seguir.\n\n<pre>.winter { \ncolor: rgb(195,230,255); \n}</pre>\n\nEste código cria uma classe denominada \"winter\", e faz com que tudo o que estiver na classe seja exibido em tom azulado de inverno, que tem os valores RGB de (195,230,255).\n\nO código que adiciona um elemento `h5` à classe winter é `<h5 class=\"winter\">`. A cláusula `class=\"winter\"` contida no interior da tag de abertura adiciona tudo que estiver dentro da tag à classe.\n\n</details>\n<details>\n\n<summary>\n<strong>Quais regras podem ser incluídas no conjunto de regras de uma classe?</strong>\n</summary>\n\nO conjunto de regras de uma classe pode ter as mesmas regras que qualquer outro tipo de seletor. Se uma regra não se aplicar ao conteúdo de uma classe (por exemplo, usando `font-size` em um elemento sem texto), então o computador irá ignorar esta regra, mas ainda assim continuar a usar as outras regras que funcionam.\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor é iniciado por um ponto?</strong>\n</summary>\nEm CSS, um ponto colocado à frente do seletor indica que o seletor é o nome de uma classe. Se não houver ponto, significa que o seletor é o nome de um tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n</summary>\nUm desenvolvedor web usa classes quando alguns elementos devem ser exibidos de forma diferente de outros, mesmo quando estiverem em tags iguais. Classes também podem ser usadas para dar o mesmo estilo a elementos que estão em tags diferentes.\n</details>\n<details>\n<summary>\n<strong>Eu obtive valores RGB diferentes, mas meus valores estão corretos também.</strong>\n</summary>\n\nConsiderando que RGB gera milhões de cores diferentes, algumas são tão parecidas que as pessoas não conseguem distingui-las. Isto significa que há vários valores RGB que são próximos o suficiente para que funcionem como nossa cor de inverno.\n\n</details>\n</div>\n\n# Adicionando Regras\n\nSuas palavras de inverno devem todas ter a mesma cor e tipografia.\n\n-   Localize o conjunto de regras CSS na folha de estilos que fornece o estilo às palavras de inverno.\n-   Acrescente uma regra que altera a tipografia das palavras de inverno. Pode ser qualquer fonte, mas deverá ser diferente daquelas usadas para as outras três estações.\n-   Adicione quaisquer outras regras que você gostaria para suas palavras de inverno."
      CSD U2 classes sample: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\nPara que o código funcione, você precisa criar uma classe winter, e acrescentar elementos a esta classe.\n\nA classe é criada na folha de estilos através do código a seguir.\n\n<pre>.winter { \ncolor: rgb(195,230,255); \n}</pre>\n\nEste código cria uma classe denominada \"winter\", e faz com que tudo o que estiver na classe seja exibido em tom azulado de inverno, que tem os valores RGB de (195,230,255).\n\nO código que adiciona um elemento `h5` à classe winter é `<h5 class=\"winter\">`. A cláusula `class=\"winter\"` contida no interior da tag de abertura adiciona tudo que estiver dentro da tag à classe.\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor é iniciado por um ponto?</strong>\n\n</summary>\nEm CSS, um ponto colocado à frente do seletor indica que o seletor é o nome de uma classe. Se não houver ponto, significa que o seletor é o nome de um tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n\n</summary>\nUm desenvolvedor web usa classes quando alguns elementos devem ser exibidos de forma diferente de outros, mesmo quando estiverem em tags iguais. Classes também podem ser usadas para dar o mesmo estilo a elementos que estão em tags diferentes.\n</details>\n<details>\n<summary>\n<strong>Eu obtive valores RGB diferentes, mas meus valores estão corretos também.</strong>\n\n</summary>\n\nConsiderando que RGB gera milhões de cores diferentes, algumas são tão parecidas que as pessoas não conseguem distingui-las. Isto significa que há vários valores RGB que são próximos o suficiente para que funcionem como nossa cor de inverno.\n\n</details>\n</div>\n\n# Classes\n\nNesta página, o desenvolvedor web usou classes para colorir algumas palavras com nosso azul de inverno.\n\n-   Observe as palavras de inverno no código HTML. Por que \"nevado\" é a única palavra de inverno sem a cor azulada?\n-   Acrescente ao HTML o código que irá colorir \"nevado\" com a mesma coloração azul.\n-   Examine a folha de estilos para encontrar a regra que torna as palavras da classe winter azuis, e veja se os seus valores RGB estão próximos àqueles contidos na folha de estilo.\n-   Discuta com seu parceiro como o código funciona."
      CSD U2 classes sample_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\nPara que o código funcione, você precisa criar uma classe winter, e acrescentar elementos a esta classe.\n\nA classe é criada na folha de estilos através do código a seguir.\n\n<pre>.winter { \ncolor: rgb(195,230,255); \n}</pre>\n\nEste código cria uma classe denominada \"winter\", e faz com que tudo o que estiver na classe seja exibido em tom azulado de inverno, que tem os valores RGB de (195,230,255).\n\nO código que adiciona um elemento `h5` à classe winter é `<h5 class=\"winter\">`. A cláusula `class=\"winter\"` contida no interior da tag de abertura adiciona tudo que estiver dentro da tag à classe.\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor é iniciado por um ponto?</strong>\n</summary>\nEm CSS, um ponto colocado à frente do seletor indica que o seletor é o nome de uma classe. Se não houver ponto, significa que o seletor é o nome de um tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n</summary>\nUm desenvolvedor web usa classes quando alguns elementos devem ser exibidos de forma diferente de outros, mesmo quando estiverem em tags iguais. Classes também podem ser usadas para dar o mesmo estilo a elementos que estão em tags diferentes.\n</details>\n<details>\n<summary>\n<strong>Eu obtive valores RGB diferentes, mas meus valores estão corretos também.</strong>\n</summary>\n\nConsiderando que RGB gera milhões de cores diferentes, algumas são tão parecidas que as pessoas não conseguem distingui-las. Isto significa que há vários valores RGB que são próximos o suficiente para que funcionem como nossa cor de inverno.\n\n</details>\n</div>\n\n# Classes\n\nNesta página, o desenvolvedor web usou classes para colorir algumas palavras com nosso azul de inverno.\n\n-   Observe as palavras de inverno no código HTML. Por que \"nevado\" é a única palavra de inverno sem a cor azulada?\n-   Acrescente ao HTML o código que irá colorir \"nevado\" com a mesma coloração azul.\n-   Examine a folha de estilos para encontrar a regra que torna as palavras da classe winter azuis, e veja se os seus valores RGB estão próximos àqueles contidos na folha de estilo.\n-   Discuta com seu parceiro como o código funciona."
      CSD U2 classes sample_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\nPara que o código funcione, você precisa criar uma classe winter, e acrescentar elementos a esta classe.\n\nA classe é criada na folha de estilos através do código a seguir.\n\n<pre>.winter { \ncolor: rgb(195,230,255); \n}</pre>\n\nEste código cria uma classe denominada \"winter\", e faz com que tudo o que estiver na classe seja exibido em tom azulado de inverno, que tem os valores RGB de (195,230,255).\n\nO código que adiciona um elemento `h5` à classe winter é `<h5 class=\"winter\">`. A cláusula `class=\"winter\"` contida no interior da tag de abertura adiciona tudo que estiver dentro da tag à classe.\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor é iniciado por um ponto?</strong>\n</summary>\nEm CSS, um ponto colocado à frente do seletor indica que o seletor é o nome de uma classe. Se não houver ponto, significa que o seletor é o nome de um tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n</summary>\nUm desenvolvedor web usa classes quando alguns elementos devem ser exibidos de forma diferente de outros, mesmo quando estiverem em tags iguais. Classes também podem ser usadas para dar o mesmo estilo a elementos que estão em tags diferentes.\n</details>\n<details>\n<summary>\n<strong>Eu obtive valores RGB diferentes, mas meus valores estão corretos também.</strong>\n</summary>\n\nConsiderando que RGB gera milhões de cores diferentes, algumas são tão parecidas que as pessoas não conseguem distingui-las. Isto significa que há vários valores RGB que são próximos o suficiente para que funcionem como nossa cor de inverno.\n\n</details>\n</div>\n\n# Classes\n\nNesta página, o desenvolvedor web usou classes para colorir algumas palavras com nosso azul de inverno.\n\n-   Observe as palavras de inverno no código HTML. Por que \"nevado\" é a única palavra de inverno sem a cor azulada?\n-   Acrescente ao HTML o código que irá colorir \"nevado\" com a mesma coloração azul.\n-   Examine a folha de estilos para encontrar a regra que torna as palavras da classe winter azuis, e veja se os seus valores RGB estão próximos àqueles contidos na folha de estilo.\n-   Discuta com seu parceiro como o código funciona."
      CSD U2 classes spring: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>

        </summary>
        Para que o código funcione, você precisa criar uma classe primavera e adicionar elementos à classe.

        A classe primavera já foi criada na folha de estilos mas ainda não tem nenhuma regra.

        <pre>.spring {
        color: rgb(195,230,255);
        }</pre>

        Veja as regras na classe `inverno` para ter uma idéia de como criar regras para a classe verão.

        Você também precisará adicionar elementos à classe primavera dentro do seu arquivo HTML.

        O código no arquivo HTML que adiciona um elemento `h5` à classe inverno `<h5 class="inverno">`. Use esse padrão para adicionar elementos à classe primavera da mesma forma.

        </details>
        <details>
        <summary>
        <strong>Quais regras podem ser adicionadas ao conjunto de regras da classe?</strong>

        </summary>

        Um conjunto de regras de classe possui as mesmas regras do que qualquer outro tipo de seletor. Se uma regra não se aplica ao conteúdo da classe (por exemplo, usar `font-size` em um elemento que não seja texto), o computador vai ignorar esta regra mas ainda utilizará as regras que funcionam.

        </details>
        <details>
        <summary>
        <strong>Por que um seletor possui um ponto antes do nome?</strong>

        </summary>
        No CSS, um ponto em frente ao nome do seletor significa que este seletor é o nome de uma classe. Se não houver o ponto, significa que este seletor é o nome de uma tag HTML.
        </details>
        <details>
        <summary>
        <strong>Por que um desenvolvedor web usa classes?</strong>

        </summary>
        Um desenvolvedor web usa classes quando alguns elementos precisam ser estilizados de forma diferente, mesmo se eles possuem a mesma tag. Classes também podem ser usadas para aplicar o mesmo estilo a diferentes elementos que possam ter a mesma tag.

        </details>
        </div>

        # Classe Primavera

        Agora que sua classe inverno está pronta, você pode criar novas classes para outras estações.

        -   Encontre um conjunto de regras CSS vazio na folha de estilos que possui as regras e estilos para as as palavras.
        -   Adicione duas regas, uma para dar a cor ao texto primavera, mostrado anteriormente nessa aula e outra para dar ao texto uma nova fonte, tamanho da fonte ou. decoração
        -   Adicione a classe primavera aos elementos de mesmo nome na página HTML.
      CSD U2 classes spring_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como funciona o código?</strong>
        </summary>
        Para que o código funcione, você precisa criar uma classe primavera e adicionar elementos à classe.

        A classe primavera já foi criada na folha de estilos, mas não tem nenhuma regra.

        <pre>.spring {
        color: rgb(195,230,255);
        }</pre>

        Veja as regras da classe `inverno` para ter ideias de como fazer as regras para a classe verão.

        Você também precisará adicionar alguns elementos para sua classe primavera dentro do arquivo HTML.

        O código no arquivo HTML que adicionar um elemento `h5` na classe inverno é `<h5 class="winter">`.  Use este padrão para adicionar elementos na classe primavera, também.

        </details>
        <details>
        <summary>
        <strong>Quais regras podem ser adicionadas ao conjunto de regras da classe?</strong>
        </summary>

        Um conjuto de regras de classe pode ter as mesmas regras de outros tipos de seletores. Se uma regra não se aplica ao conteúdo da classe (por exemplo, usar `font-size` em um elemento sem texto), então o computador ignorará aquela regra, mas ainda utilizará as aplicáveis.

        </details>
        <details>
        <summary>
        <strong>Por que o seletor tem um ponto à sua frente?</strong>
        </summary>
        Em CSS, um ponto na frente do seletor significa que o seletor é pelo nome da classe. Se não tiver ponto, significa que o seletor é pelo nome da tag HTML.
        </details>
        <details>
        <summary>
        <strong>Por que um desenvolvedor web usaria classes?</strong>
        </summary>

        Um desenvolvedor web usa classes quando alguns elementos devem ser estilizados de forma diferente dos outros, mesmo que eles utilizem a mesma tag. Classes também podem ser usadas para atribuir o mesmo estilo à elementos com tags diferentes.

        </details>
        </div>

        # Class Primavera

        Agora que sua classe inverno está pronta, você pode começar as outras estações.

        -   Encontre o conjunto de regras CSS vazio na folha de estilos que atribui as palavras da primavera seus estilos.
        -   Adicione duas regras, uma para atribuir ao texto a cor da primavera de sua lição anterior, e outra para dar ao texto uma fonte, tamanho de fonte, ou decoração diferente.
        -   Adicione a classe primavera para os elementos de primavera na página HTML.
      CSD U2 classes spring_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como funciona o código?</strong>
        </summary>
        Para que o código funcione, você precisa criar uma classe primavera e adicionar elementos à classe.

        A classe primavera já foi criada na folha de estilos, mas não tem nenhuma regra.

        <pre>.spring {
        color: rgb(195,230,255);
        }</pre>

        Veja as regras da classe `inverno` para ter ideias de como fazer as regras para a classe verão.

        Você também precisará adicionar alguns elementos para sua classe primavera dentro do arquivo HTML.

        O código no arquivo HTML que adicionar um elemento `h5` na classe inverno é `<h5 class="winter">`.  Use este padrão para adicionar elementos na classe primavera, também.

        </details>
        <details>
        <summary>
        <strong>Quais regras podem ser adicionadas ao conjunto de regras da classe?</strong>
        </summary>

        Um conjuto de regras de classe pode ter as mesmas regras de outros tipos de seletores. Se uma regra não se aplica ao conteúdo da classe (por exemplo, usar `font-size` em um elemento sem texto), então o computador ignorará aquela regra, mas ainda utilizará as aplicáveis.

        </details>
        <details>
        <summary>
        <strong>Por que o seletor tem um ponto à sua frente?</strong>
        </summary>
        Em CSS, um ponto na frente do seletor significa que o seletor é pelo nome da classe. Se não tiver ponto, significa que o seletor é pelo nome da tag HTML.
        </details>
        <details>
        <summary>
        <strong>Por que um desenvolvedor web usaria classes?</strong>
        </summary>

        Um desenvolvedor web usa classes quando alguns elementos devem ser estilizados de forma diferente dos outros, mesmo que eles utilizem a mesma tag. Classes também podem ser usadas para atribuir o mesmo estilo à elementos com tags diferentes.

        </details>
        </div>

        # Class Primavera

        Agora que sua classe inverno está pronta, você pode começar as outras estações.

        -   Encontre o conjunto de regras CSS vazio na folha de estilos que atribui as palavras da primavera seus estilos.
        -   Adicione duas regras, uma para atribuir ao texto a cor da primavera de sua lição anterior, e outra para dar ao texto uma fonte, tamanho de fonte, ou decoração diferente.
        -   Adicione a classe primavera para os elementos de primavera na página HTML.
      CSD U2 classes summer: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como funciona o código?</strong>

        </summary>
        Para que o código na classe inverno funcione, você precisa criar uma classe inverno e adicionar elementos à classe.

        A classe já foi criada na folha de estilos, com o seguinte código.

        <pre>.winter {
        color: rgb(195,230,255);
        }</pre>

        Este código cria uma classe chamada `winter` e faz tudo na class ficar azul inverno, que tem os valores RGB (195,230,255).

        O código que adiciona um elemento `h5` na classe inverno é `<h5 class="winter">`.  Um atributo `class=winter` dentro da tag início adiciona tudo dentro da tag à classe.

        </details>
        <details>
        <summary>
        <strong>Como criar um novo conjunto de regras?</strong>

        </summary>
        Você pode criar um novo conjunto de regras seguindo os padrões que as classes `winter` e `spring` usaram na folha de estilos.
        <pre>.winter {
        color: rgb(195,230,255);
        }</pre>

        O nome do seletor e os valores das cores serão diferentes, mas o seguinte padrão será sempre o mesmo.

        <pre>.classname {
        property1: value1;
        property2: value2;
        }</pre>

        </details>
        <details>
        <summary>
        <strong>Por que o seletor tem um ponto à sua frente?</strong>

        </summary>
        Em CSS, um ponto na frente do seletor significa que o seletor é pelo nome da classe. Se não tiver ponto, significa que o seletor é pelo nome da tag HTML.
        </details>
        <details>
        <summary>
        <strong>Por que um desenvolvedor web usaria classes?</strong>

        </summary>

        Um desenvolvedor web usa classes quando alguns elementos devem ser estilizados de forma diferente dos outros, mesmo que eles utilizem a mesma tag. Classes também podem ser usadas para atribuir o mesmo estilo à elementos com tags diferentes.

        </details>
        </div>

        # Classes Verão e Outono

        -   Dentro da folha de estilos, crie um novo conjunto de regras para a classe "verão".
        -   Adicione uma regra para colocar o texto da classe verão na cor RGB de verão.
        -   Adicione a classe verão para os elementos verão na página HTML.
        -   Faça o mesmo para a classe outono.
      CSD U2 classes summer_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como funciona o código?</strong>\n</summary>\nPara que o código funcione, você precisa criar uma classe inverno e adicionar elementos à classe.\n\nA classe já foi criada na folha de estilos, com o seguinte código.\n\n<pre>.winter {\ncolor: rgb(195,230,255);\n}</pre>\n\nEste código cria uma classe chamada `winter` e faz tudo na class ficar azul inverno, que tem os valores RGB (195,230,255).\n\nO código que adiciona um elemento `h5` na classe inverno é `<h5 class=\"winter\">`.  Um atributo `class=winter` dentro da tag início adiciona tudo dentro da tag à classe.\n\n</details>\n<details>\n<summary>\n<strong>Como criar um novo conjunto de regras?</strong>\n</summary>\n\nVocê pode criar um novo conjunto de regras seguindo os padrões que as classes `winter` e `spring` usaram na folha de estilos.\n\n<pre>.winter {\ncolor: rgb(195,230,255);\n}</pre>\n\nO nome do seletor e os valores das cores serão diferentes, mas o seguinte padrão será sempre o mesmo.\n\n<pre>.classname {\nproperty1: value1;\nproperty2: value2;\n}</pre>\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor tem um ponto à sua frente?</strong>\n</summary>\nEm CSS, um ponto na frente do seletor significa que o seletor é pelo nome da classe. Se não tiver ponto, significa que o seletor é pelo nome da tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n</summary>\n\nUm desenvolvedor web usa classes quando alguns elementos devem ser estilizados de forma diferente dos outros, mesmo que eles utilizem a mesma tag. Classes também podem ser usadas para atribuir o mesmo estilo à elementos com tags diferentes.\n\n</details>\n</div>\n\n# Classes Verão e Outono\n\n-   Dentro da folha de estilos, crie um novo conjunto de regras para a classe \"verão\".\n-   Adicione uma regra para colocar o texto da classe verão na cor RGB de verão.\n-   Adicione a classe verão para os elementos verão na página HTML.\n-   Faça o mesmo para a classe outono.\t"
      CSD U2 classes summer_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como funciona o código?</strong>\n</summary>\nPara que o código funcione, você precisa criar uma classe inverno e adicionar elementos à classe.\n\nA classe já foi criada na folha de estilos, com o seguinte código.\n\n<pre>.winter {\ncolor: rgb(195,230,255);\n}</pre>\n\nEste código cria uma classe chamada `winter` e faz tudo na class ficar azul inverno, que tem os valores RGB (195,230,255).\n\nO código que adiciona um elemento `h5` na classe inverno é `<h5 class=\"winter\">`.  Um atributo `class=winter` dentro da tag início adiciona tudo dentro da tag à classe.\n\n</details>\n<details>\n<summary>\n<strong>Como criar um novo conjunto de regras?</strong>\n</summary>\n\nVocê pode criar um novo conjunto de regras seguindo os padrões que as classes `winter` e `spring` usaram na folha de estilos.\n\n<pre>.winter {\ncolor: rgb(195,230,255);\n}</pre>\n\nO nome do seletor e os valores das cores serão diferentes, mas o seguinte padrão será sempre o mesmo.\n\n<pre>.classname {\nproperty1: value1;\nproperty2: value2;\n}</pre>\n\n</details>\n<details>\n<summary>\n<strong>Por que o seletor tem um ponto à sua frente?</strong>\n</summary>\nEm CSS, um ponto na frente do seletor significa que o seletor é pelo nome da classe. Se não tiver ponto, significa que o seletor é pelo nome da tag HTML.\n</details>\n<details>\n<summary>\n<strong>Por que um desenvolvedor web usaria classes?</strong>\n</summary>\n\nUm desenvolvedor web usa classes quando alguns elementos devem ser estilizados de forma diferente dos outros, mesmo que eles utilizem a mesma tag. Classes também podem ser usadas para atribuir o mesmo estilo à elementos com tags diferentes.\n\n</details>\n</div>\n\n# Classes Verão e Outono\n\n-   Dentro da folha de estilos, crie um novo conjunto de regras para a classe \"verão\".\n-   Adicione uma regra para colocar o texto da classe verão na cor RGB de verão.\n-   Adicione a classe verão para os elementos verão na página HTML.\n-   Faça o mesmo para a classe outono.\t"
      CSD U2 commenting: |-
        # Comentários

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que é um espaço em branco?</strong></summary>

        Espaço em branco se refere aos caracteres que aparecem como um espaço vazio na tela, tais quais um espaço, uma tabulação, ou uma nova linha. Espaço em branco ajuda a separar diferentes partes do documento tornando este fácil de ler. Por exemplo, no código HTML novos elementos são geralmente colocados em uma nova linha, mesmo que isto não faça diferença na forma como a página será mostrada.

        </details>
        <details>
        <summary>
        <strong>O que é identação?</strong>
        </summary>
        Identação é o posicionamento do texto mais para a direita, ou esquerda, para separar ele do texto que o envolve. A identação ajuda na convenção da estrutura do programa. Em HTML, elementos que estão dentro de outros elementos são geralmente identados. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está dentro do elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary>
        <strong>O que é formatação?</strong>
        </summary>

        Formatação é o arranjo do texto de forma que o torne fácil de entender. o HTML é geralmente formatado usando-se identação. Isto significa que os elementos que estão dentro de outros elementos são posicionados mais para a direita no código. Veja um exemplo:

        <pre>
        &lt;body&gt;
        &lt;p&gtEste parágrafo está dentro do elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>

        </details>
        </div>

        Você pode adicionar **comentários** ao seu código para explicar as diferentes partes do código e o que ele deveria criar. Comentários podem ajudar com a depuraração, e também para que outras pessoas entendam seu código.

        <pre>
        &lt;!-- este é um comentário --&gt;
        </pre>

        # Faça Isto

        -   Veja o código do seu parceiro e encontre os comentários.
        -   Use comentários para ajudar a corrigir bugs no HTML.
      CSD U2 commenting_2018: |-
        # Comments

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que é um espaço em branco?</strong></summary>
        Espaço em branco se refere aos caracteres que aparecem como um espaço vazio na tela, tais quais um espaço, uma tabulação, ou uma nova linha. Espaço em branco ajuda a separar diferentes partes do documento tornando este fácil de ler. Por exemplo, no código HTML novos elementos são geralmente colocados em uma nova linha, mesmo que isto não faça diferença na forma como a página será mostrada.
        </details>
        <details>
        <summary><strong>O que é identação?</strong></summary>
        Identação é o posicionamento do texto mais para a direita, ou esquerda, para separar ele do texto que o envolve. A identação ajuda na convenção da estrutura do programa. Em HTML, elementos que estão dentro de outros elementos são geralmente identados. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está dentro do elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary><strong>O que é formatação?</strong></summary>

        Formatação é o arranjo do texto de forma que o torne fácil de entender. o HTML é geralmente formatado usando-se identação. Isto significa que os elementos que estão dentro de outros elementos são posicionados mais para a direita no código. Veja um exemplo:

        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está dentro do elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>

        </details>
        </div>

        Você pode adicionar **comentários** ao seu código para explicar as diferentes partes do código e o que ele deveria criar. Comentários podem ajudar com a depuraração, e também para que outras pessoas entendam seu código.

        <pre>
        &lt;!-- este é um comentário --&gt;
        </pre>

        # Faça Isto

        -   Veja o código do seu parceiro e encontre os comentários.
        -   Use comentários para ajudar a corrigir bugs no HTML.
      CSD U2 commenting_2019: |-
        # Comments

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que é um espaço em branco?</strong></summary>
        Espaço em branco se refere aos caracteres que aparecem como um espaço vazio na tela, tais quais um espaço, uma tabulação, ou uma nova linha. Espaço em branco ajuda a separar diferentes partes do documento tornando este fácil de ler. Por exemplo, no código HTML novos elementos são geralmente colocados em uma nova linha, mesmo que isto não faça diferença na forma como a página será mostrada.
        </details>
        <details>
        <summary><strong>O que é identação?</strong></summary>
        Identação é o posicionamento do texto mais para a direita, ou esquerda, para separar ele do texto que o envolve. A identação ajuda na convenção da estrutura do programa. Em HTML, elementos que estão dentro de outros elementos são geralmente identados. Aqui está um exemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está dentro do elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary><strong>O que é formatação?</strong></summary>

        Formatação é o arranjo do texto de forma que o torne fácil de entender. o HTML é geralmente formatado usando-se identação. Isto significa que os elementos que estão dentro de outros elementos são posicionados mais para a direita no código. Veja um exemplo:

        <pre>
        &lt;body&gt;
        &lt;p&gt;Este parágrafo está dentro do elemento "body".&lt;/p&gt;
        &lt;/body&gt;
        </pre>

        </details>
        </div>

        Você pode adicionar **comentários** ao seu código para explicar as diferentes partes do código e o que ele deveria criar. Comentários podem ajudar com a depuraração, e também para que outras pessoas entendam seu código.

        <pre>
        &lt;!-- este é um comentário --&gt;
        </pre>

        # Faça Isto

        -   Veja o código do seu parceiro e encontre os comentários.
        -   Use comentários para ajudar a corrigir bugs no HTML.
      CSD U2 create page: |-
        Crie e Nomeie sua Nova Página

        Antes de você começar a escrever o código, você deve estar certo que você tem todas as páginas que precisa em seu projeto.

        # Faça Isso

        -   Crie uma nova página HTML a renomeie. (Look at <a href="/s/csd2/stage/6/puzzle/8" target="_new">Lição 6 Nível 8</a> caso você tenha se esquecido como fazer isso.)
        -   Repita este processo para quaisquer outras páginas que você queira adicionar.
      CSD U2 create page_2018: |-
        # Crie e Nomeie Sua Nova Página

        Antes de começar a codificar, você deve ter certeza que tem todas as páginas necessárias no seu projeto.

        # Faça Isto

        -   Crie uma nova página HTML e renomeie ela. (Veja <a href="../../../stage/6/puzzle/8" target="_new">Lição 6 Nível 8</a> se você esqueceu como.)
        -   Repita este processo para quaisquer outras páginas que você deseja adicionar.
      CSD U2 create page_2019: |-
        # Crie e Nomeie Sua Nova Página

        Antes de começar a codificar, você deve ter certeza que tem todas as páginas necessárias no seu projeto.

        # Faça Isto

        -   Crie uma nova página HTML e renomeie ela. (Veja <a href="../../../stage/6/puzzle/8" target="_new">Lição 6 Nível 8</a> se você esqueceu como.)
        -   Repita este processo para quaisquer outras páginas que você deseja adicionar.
      CSD U2 debug comments: |-
        # Depuração

        Esta página contém imagens. Imagens tornam a depuração um pouco mais complicada. Você consegue depurar esta página?

        Durante a depuração você poderá perceber um novo conjunto de símbolos semelhantes a estes:

        <pre>
        &lt;!-- isto é um comentário --&gt;
        </pre>

        Isto é um **comentário**. Comentários são escritos por programadores, que criam páginas web para eles próprios, e para outras pessoas que poderão examinar o arquivo HTML. Comentários explicam as diferentes partes do código, e o que deverá ser criado. Comentários poderão ajudar na depuração.

        # Faça Isto

        -   Localize e corrija todos os bugs no HTML inicial
        -   Você saberá que todos os problemas foram encontrados quando sua pãgina estiver equivalente à <a href="https://thimbleprojects.org/danimcavoy/103295/" target="_blank"> Página Alvo</a>.
      CSD U2 header footer: |-
        # Barra de Navegação e Rodapé

        Cada uma das suas páginas precisa de uma barra de navegação e um rodapé.

        # Faça isso

        -   Para cada página, certifique-se de que tem uma barra de navegação que se liga a outras páginas no seu site. Para uma revisão da barra de navegação, vá para <a href="/s/csd2/stage/9/puzzle/4" target="_new">Lições no nível 9</a>.
        -   Para cada página, certifique-se de que tem um rodapé no final que explica as informações de direitos autorais da sua página. (Vá para <a href="https://creativecommons.org/choose/" target="_new">Creative Commons</a> para ajudar na criação deste HTML.)
      CSD U2 header footer_2018: |-
        # Navegação barra e rodapé

        cada uma das suas páginas precisa de uma barra de navegação e um rodapé.

        # Faça isso

        -   Para cada página, certifique-se que tem uma barra de navegação que ligue outras páginas do seu site.  Para uma revisão da barra de navegação, vá para <a href="4" target="_new">Lição 9 Nível 4</a>.
        -   para cada página, certifique-se de que tem um rodapé na parte inferior que explica as informações de direitos autorais para sua página. (Vá para <a href="https://creativecommons.org/choose/" target="_new">Creative Commons</a> para ter ajuda na criação deste HTML.)
      CSD U2 header footer_2019: |-
        # Navegação barra e rodapé

        cada uma das suas páginas precisa de uma barra de navegação e um rodapé.

        # Faça isso

        -   Para cada página, certifique-se que tem uma barra de navegação que ligue outras páginas do seu site.  Para uma revisão da barra de navegação, vá para <a href="4" target="_new">Lição 9 Nível 4</a>.
        -   para cada página, certifique-se de que tem um rodapé na parte inferior que explica as informações de direitos autorais para sua página. (Vá para <a href="https://creativecommons.org/choose/" target="_new">Creative Commons</a> para ter ajuda na criação deste HTML.)
      CSD U2 image tag: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>

        **Como faço para adicionar imagens?**

        </summary>
        a tag '<img>' permite visualizar imagens em sua página web.  exemplo de <br><br>

        :

        <pre>&lt;img src="dog.png" alt="dog jumping"/&gt;</pre><br><br>

        Para dizer ao browser qual arquivo usar, informações extras, um **atributo** é adicionado na tag \<img> dentro dos colchetes. O atributo 'src' significa **s**ou**rc**e (fonte) e define o nome da imagem. Nomes de arquivos de imagem incluem extensões que dizem ao computador qual o tipo de imagem está sendo usada. Extensões comuns são. jpg,. jpeg,. png. <br><br>

        Além do atributo src, elementos de imagem também tem o atributo 'alt' que descreva a imagem. Isto é importante, no caso a imagem não carregar ou para pessoas que têm problemas com de visão. <br><br>

        A tag '<img>' é um exemplo de um **elemento void** porque ele inicia e fecha em uma tag. Para fazer isso colocamos o '/' que normalmente vai no fim da tag de imagem.

        </details>
        <details>
        <summary>

        **O que é uma tag void?**

        </summary>
        'A tag <img>' é um exemplo de um **elementos void** porque ele inicia e fecha em uma tag . Para fazer isso colocamos o '/' que normalmente vai no fim da tag de imagem. Tags void não precisa de uma tag de fechamento porque não há nenhum conteúdo de texto que pode ser colocado dentro delas. O conteúdo que aparece na tela é definido através dos atributos desse tipo de tags.
        </details>
        <details>
        <summary>

        **Por uma tag de imagem não tem fechamento?**

        </summary>
        Uma tag de imagem é uma tag void e tags void não precisa de fechamento porque não há nenhum conteúdo de texto que deve ser colocado nessas tags. O conteúdo que aparece na tela é definido através dos atributos das tags.
        </details>
        <details>
        <summary>

        **O que é um atributo?**

        </summary>

        Atributos são informações extras incluídas em uma tag. Atributos têm nomes e valores. O nome diz que tipo de informação está sendo fornecido e em seguida, o valor para o atributo em questão.

        Por exemplo, tags \<img> tem dois atributos, src e alt. src especifica o nome do arquivo de imagem e alt informa ao navegador em texto legível o que é a imagem.

        </details>
        </div>

        # imagens

        Começamos uma página web Cachorro vs Gato para você. A imagem do cão já foi adicionada em baixo a página da web. Use uma tag de imagem para adicionar a imagem de cat.jpeg na página embaixo do cabeçalho do gato.
      CSD U2 images intro: |-
        # Imagens

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>

        **Como faço para adicionar imagens?**

        </summary>
        A tag '<img>' te permite visualizar imagens na sua página web. <br><br>

        Exemplo:

        <pre>&lt;img src="dog.png" alt="dog jumping"/&gt;</pre><br><br>

        Para dizer ao browser qual arquivo para usar, adicionamos informações extras em algo chamado de **atributo**, é adicionado na tag \<img> dentro dos colchetes. O atributo 'src' significa **s**ou**rc**e e identifica o nome da imagem. Nomes de arquivos de imagem incluem extensões que dizer ao computador qual o tipo de imagem está sendo usada. Extensões comuns são. jpg,. jpeg,. png. <br><br>

        Além do atributo src, elementos de imagem também tem o atributo 'alt' que descreva a imagem. Isto é importante, no caso a imagem não carregar ou para pessoas que têm problemas com a visão. <br><br>

        A tag '<img>' é um exemplo de um **elemento void** porque ele inicia e fecha em uma tag. Para fechar colocamos o '/' que normalmente vai perto do fechamento da tag imagem.

        </details>
        <details>
        <summary>

        **O que é uma tag void?**

        </summary>
        A tag '<img>' é um exemplo de um **elemento void** porque ela inicia e fecha em uma tag . Para marcar este colocamos o '/' que normalmente vai perto do fechamento da tag imagem. Tags void não precisam de uma marca de fechamento porque não há nenhum conteúdo de texto que pode ser colocado dentro O conteúdo que aparece na tela é especificado através de atributos de tags.
        </details>
        <details>
        <summary>

        **Por uma tag de imagem não tem uma tag de fechamento?**

        </summary>
        Uma tag de imagem é uma tag void e tag void não precisam de uma tag de fechamento porque não há nenhum conteúdo de texto dentro delas. O conteúdo que aparece na tela é definido através de atributos de tags.
        </details>
        <details>
        <summary>

        **O que é um atributo?**

        </summary>

        Atributos são informações extras incluídas em um tag. Atributos têm nomes e valores. O nome diz que tipo de informação está sendo fornecido e em seguida, o valor daquele atributo.

        Por exemplo, etiquetas de \<img> tem dois atributos, src e alt. src especifica o nome do arquivo de imagem e alt informa ao navegador em texto legível o que é a imagem.

        </details>
        </div>

        A página da receita ficaria muito melhor com uma foto do scotcheroos , então nós adicionamos uma nessa página.  Mas talvez ficasse melhor em outro lugar da página.

        # Faça isso

        -   Olha para a lista de arquivos no lado esquerdo do seu espaço de trabalho e encontre o arquivo chamado "scotcheroos.jpeg"
        -   Use a ferramenta do inspecionar para encontrar o código que fez com que a imagem aparecesse na página.
        -   Certifique-se de que você e seu parceiro concordam em como funciona a tag de imagem.
        -   Tente mover as imagens para o topo da página.
      CSD U2 layout style bgcolor: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como o código funciona?</strong></summary>\n\nAqui está o código que está deixando o fundo da página azul\n\n<pre>body {\nbackground-color: lightblue;\n}</pre>\n\n-   'body' é o _selector_.  Especifica quais os elementos que terá que seguir as regras dentro das chaves, neste caso, o elemento de corpo é a página inteira.\n-   'background-color: lightblue;' é o que faz a página inteira ficar azul claro.\n-   'background-color' é o _property_.  Explica qual é a regra, neste caso a cor de fundo.\n-   'lightblue' é o _value_.  Explica como deve ser aplicada a regra, neste caso, fazendo com que a luz de fundo seja azul.\n    </details>\n    <details>\n    <summary><strong>Quais as cores que posso usar no CSS?</strong></summary>\n\nCSS inclui nomes mais comuns de cor (red, blue, green, etc.) e muitos outros incomuns.  Você pode ver uma lista completa dos nomes de cor CSS em <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - Nomes de Cores HTML</a>.  Você ainda pode usar as cores que não estão incluídas na lista, mas você vai precisar usar seus valores RGB.  Você pode ler mais sobre como usar as cores no CSS em <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - Valores de Cor CSS</a>\n\n</details>\n<details>\n<summary><strong>O que a propriedade 'background-color' faz?</strong></summary>\n\nA propriedade 'background-color' determina a cor de fundo de um elemento.  Você pode ler mais sobre a propriedade em <a href=\"http://www.w3schools.com/cssref/pr_background-color.asp\">W3Schools - CSS \npropriedade background-color</a>\n\n</details>\n<details>\n<summary><strong>E se um elemento dentro da página tem uma cor de fundo diferente da o corpo?</strong></summary>\n\nVocê pode ver a resposta a esta pergunta, adicionando uma regra de 'background-color' para a tag 'p'.  Os parágrafos terão a cor de fundo na regra para a tag 'p', e o resto da página vai seguir a regra para a tag 'body'.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\n\numa folha de estilos é um documento que controla como uma página da web será exibida.  Folhas de estilo externas são arquivos separados que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é uma linguagem que controla a maneira como o conteúdo em um site da web aparece.  Ele usa conjuntos de regras para alterar a aparência de uma página.  Cada conjunto de regras tem um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e um valor para essa propriedade.\n\nAqui está um exemplo de um conjunto de regras que torna o texto em uma tag 'h2' azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive;\n</pre>\n\nNeste exemplo, 'h2' é o seletor de 'color' e 'font-family' são propriedades e 'blue' e 'cursive' são os valores para essas propriedades.\n\n</details>\n</div>\n\n# Background Color\n\n-   Encontre o código na folha de estilo que está fazendo o plano de fundo ficar todo azul claro.\n-   Altera o código para mudar a página para uma cor diferente.\n-   Tente mudar apenas a cor de fundo dos parágrafos."
      CSD U2 layout style bgcolor_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>

        Esse é o código que faz o fundo da página ficar azul:

        <pre>
        body {
          background-color: lightblue;
        }
        </pre>

        -   'body' é o _selector_.  Especifica quais os elementos teram que seguir as regras dentro das chaves, neste caso, o elemento de corpo é a página inteira.
        -   ' background-color: lightblue;' é o que faz a página inteira ficar azul claro.
            -   'background-color' é o _property_.  Ele explica qual é a regra, neste caso a cor de fundo.
            -   'lightblue' é o _value_.  Explica como deve ser aplicada a regra, neste caso, fazendo com que a luz de fundo fique azul.

        </details>
        <details>
        <summary>
        <strong>Quais as cores que podemos usar no CSS?</strong>
        </summary>

        CSS inclui nomes mais comuns de cor (red, blue, green, etc.) e muitos outros incomuns.  Você pode ver uma lista completa dos nomes de cor CSS em <a href="http://www.w3schools.com/colors/colors_names.asp" target="_new">W3Schools - Nomes de Cores HTML</a>.  Você ainda pode usar as cores que não estão incluídas nessa lista, mas você vai precisar usar seus valores RGB.  Você pode ler mais sobre como usar as cores através de RGB no CSS em <a href="http://www.w3schools.com/cssref/css_colors_legal.asp" target="_new">W3Schools - Valores de Cor CSS RGB</a>

        </details>
        <details>
        <summary>
        <strong>O que a propriedade background-color faz?</strong>
        </summary>

        A propriedade 'background-color' determina a cor de fundo de um elemento.  Você pode ler mais sobre a propriedade em <a href="http://www.w3schools.com/cssref/pr_background-color.asp" target="_new">W3Schools - CSS propriedade background-color</a>

        </details>
        <details>
        <summary>
        <strong>E se um elemento dentro do página tem uma cor de fundo diferente do corpo?</strong>
        </summary>

        Você pode ver a resposta a esta pergunta, adicionando uma regra de 'background-color' para a tag 'p'.  Os parágrafos terão a cor de fundo na tag 'p', e o resto da página vai seguir a regra para a tag 'corpo'.

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla como uma página da web será exibida.  Folhas de estilo externas são arquivos separados que estão vinculados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a maneira como o conteúdo em um website aparece.  Ele usa conjuntos de regras para alterar a aparência de uma página.  Cada conjunto de regras tem um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e um valor para essa propriedade.

        Aqui está um exemplo de um conjunto de regras que torna o texto em uma tag 'h2' azul e cursivo:

        <pre>
        h2 {
          color: blue;
          font-family: cursive;
        }
        </pre>

        Neste exemplo, 'h2' é o seletor, 'color' e 'font-family' são propriedades e 'blue' e 'cursive' são os valores para essas propriedades.

        </details>
        </div>

        # Background Color

        -   Encontre o código na folha de estilo que está fazendo o plano de fundo da luz página inteira azul.
        -   Altere o código para tornar a página uma cor diferente.
        -   Tente mudar a cor de fundo apenas dos parágrafos.
      CSD U2 layout style bgcolor_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>

        Esse é o código que faz o fundo da página ficar azul:

        <pre>
        body {
          background-color: lightblue;
        }
        </pre>

        -   'body' é o _selector_.  Especifica quais os elementos teram que seguir as regras dentro das chaves, neste caso, o elemento de corpo é a página inteira.
        -   ' background-color: lightblue;' é o que faz a página inteira ficar azul claro.
            -   'background-color' é o _property_.  Ele explica qual é a regra, neste caso a cor de fundo.
            -   'lightblue' é o _value_.  Explica como deve ser aplicada a regra, neste caso, fazendo com que a luz de fundo fique azul.

        </details>
        <details>
        <summary>
        <strong>Quais as cores que podemos usar no CSS?</strong>
        </summary>

        CSS inclui nomes mais comuns de cor (red, blue, green, etc.) e muitos outros incomuns.  Você pode ver uma lista completa dos nomes de cor CSS em <a href="http://www.w3schools.com/colors/colors_names.asp" target="_new">W3Schools - Nomes de Cores HTML</a>.  Você ainda pode usar as cores que não estão incluídas nessa lista, mas você vai precisar usar seus valores RGB.  Você pode ler mais sobre como usar as cores através de RGB no CSS em <a href="http://www.w3schools.com/cssref/css_colors_legal.asp" target="_new">W3Schools - Valores de Cor CSS RGB</a>

        </details>
        <details>
        <summary>
        <strong>O que a propriedade background-color faz?</strong>
        </summary>

        A propriedade 'background-color' determina a cor de fundo de um elemento.  Você pode ler mais sobre a propriedade em <a href="http://www.w3schools.com/cssref/pr_background-color.asp" target="_new">W3Schools - CSS propriedade background-color</a>

        </details>
        <details>
        <summary>
        <strong>E se um elemento dentro do página tem uma cor de fundo diferente do corpo?</strong>
        </summary>

        Você pode ver a resposta a esta pergunta, adicionando uma regra de 'background-color' para a tag 'p'.  Os parágrafos terão a cor de fundo na tag 'p', e o resto da página vai seguir a regra para a tag 'corpo'.

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla como uma página da web será exibida.  Folhas de estilo externas são arquivos separados que estão vinculados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a maneira como o conteúdo em um website aparece.  Ele usa conjuntos de regras para alterar a aparência de uma página.  Cada conjunto de regras tem um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e um valor para essa propriedade.

        Aqui está um exemplo de um conjunto de regras que torna o texto em uma tag 'h2' azul e cursivo:

        <pre>
        h2 {
          color: blue;
          font-family: cursive;
        }
        </pre>

        Neste exemplo, 'h2' é o seletor, 'color' e 'font-family' são propriedades e 'blue' e 'cursive' são os valores para essas propriedades.

        </details>
        </div>

        # Background Color

        -   Encontre o código na folha de estilo que está fazendo o plano de fundo da luz página inteira azul.
        -   Altere o código para tornar a página uma cor diferente.
        -   Tente mudar a cor de fundo apenas dos parágrafos.
      CSD U2 layout style body: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary><strong>O que o seletor `body` faz?</strong></summary>

        Como o conteúdo da página web está completamente inserido dentro da tag `body`, o seletor body provê as regras de estivo para tudo o que estiver na página.

        </details>
        <details>
        <summary><strong>O que a propriedade `color` faz?</strong></summary>

        A propriedade `color` define a cor do texto. Se não houver texto, então ela não fará nada. Leia mais em <a href="http://www.w3schools.com/cssref/pr_text_color.asp">W3Schools - CSS color Property</a>

        </details>
        <details>
        <summary><strong>O que faz a propriedade `text-align`?</strong></summary>

        A propriedade `text-align` alinha o texto à esquerda, à direita, ou ao centro. Você pode ler mais em <a href="http://www.w3schools.com/cssref/pr_text_text-align.asp">W3Schools - CSS text-align Property</a>

        </details>
        <details>
        <summary><strong>O que faz a propriedade `text-decoration`?</strong></summary>

        A propriedade `text-decoration` coloca uma linha sobre, abaixo, ou ao meio de um trecho de texto. Você pode ler sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_text_text-decoration.asp">W3Schools - CSS text-decoration Property</a>

        </details>
        <details>
        <summary><strong>O que faz a propriedade `font-family`?</strong></summary>

        A propriedade `font-family` altera a fonte tipográfica do texto. Ela fornece uma descrição geral do tipo de fonte que deve ser usado, mas cada browser poderá exibir a fonte de um modo um pouco diferente. Leia mais em <a href="http://www.w3schools.com/cssref/pr_font_font-family.asp">W3Schools - CSS font-family Property</a>

        </details>
        <details>
        <summary><strong>O que faz a propriedade `font-size`?</strong></summary>

        A propriedade `font-size` altera o tamanho do texto. Você pode usar termos genéricos, como `small` (pequeno), `medium` (médio), e `large` (grande), ou você pode especificar o tamanho exato em pixels, como em `20px`. Leia mais em <a href="http://www.w3schools.com/cssref/pr_font_font-size.asp">W3Schools - CSS font-size Property</a>

        </details>
        <details>
        <summary><strong>O que é uma folha de estilos?</strong></summary>

        Uma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados que são vinculados à página HTML.

        </details>
        <details>
        <summary><strong>O que é CSS?</strong></summary>

        CSS é uma linguagem que controla a forma como o conteúdo é exibido em uma página web. Ele utiliza conjuntos de regras para alterar a aparência da página. Cada conjunto de regras possui um seletor, que especifica quais os elementos na página que serão afetados, e as regras, que explicam como os elementos devem ser exibidos. Cada regra consiste em uma propriedade e um valor para a propriedade.

        Aqui está um exemplo de um conjunto de regras que torna um tag `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        Neste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores destas propriedades.

        </details>
        </div>

        # O Elemento Body

        -   Localize na folha de estilos o conjunto de regras para o elemento `body`.
        -   Discuta com um parceiro o que você acha que irá acontecer se você adicionar `text-align`, `color`, ou outras propriedades de texto ao conjunto de regras do `body`.
        -   Experimente com algumas propriedades para verificar suas suposições.
      CSD U2 layout style body_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que o seletor `body` faz?</strong>
        </summary>

        Como o conteúdo da página web está completamente inserido dentro da tag `body`, o seletor body provê as regras de estivo para tudo o que estiver na página.

        </details>
        <details>
        <summary>
        <strong>O que a propriedade `color` faz?</strong>
        </summary>

        A propriedade `color` define a cor do texto. Se não houver texto, então ela não fará nada. Leia mais em <a href="http://www.w3schools.com/cssref/pr_text_color.asp">W3Schools - CSS color Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `text-align`?</strong>
        </summary>

        A propriedade `text-align` alinha o texto à esquerda, à direita, ou ao centro. Você pode ler mais em <a href="http://www.w3schools.com/cssref/pr_text_text-align.asp">W3Schools - CSS text-align Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `text-decoration`?</strong>
        </summary>

        A propriedade `text-decoration` coloca uma linha sobre, abaixo, ou ao meio de um trecho de texto. Você pode ler sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_text_text-decoration.asp">W3Schools - CSS text-decoration Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `font-family`?</strong>
        </summary>

        A propriedade `font-family` altera a fonte tipográfica do texto. Ela fornece uma descrição geral do tipo de fonte que deve ser usado, mas cada browser poderá exibir a fonte de um modo um pouco diferente. Leia mais em <a href="http://www.w3schools.com/cssref/pr_font_font-family.asp">W3Schools - CSS font-family Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `font-size`?</strong>
        </summary>

        A propriedade `font-size` altera o tamanho do texto. Você pode usar termos genéricos, como `small` (pequeno), `medium` (médio), e `large` (grande), ou você pode especificar o tamanho exato em pixels, como em `20px`. Leia mais em <a href="http://www.w3schools.com/cssref/pr_font_font-size.asp">W3Schools - CSS font-size Property</a>

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados que são vinculados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo é exibido em uma página web. Ele utiliza conjuntos de regras para alterar a aparência da página. Cada conjunto de regras possui um seletor, que especifica quais os elementos na página que serão afetados, e as regras, que explicam como os elementos devem ser exibidos. Cada regra consiste em uma propriedade e um valor para a propriedade.

        Aqui está um exemplo de um conjunto de regras que torna um tag `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        Neste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores destas propriedades.

        </details>
        </div>

        # O Elemento Body

        -   Localize na folha de estilos o conjunto de regras para o elemento `body`.
        -   Discuta com um parceiro o que você acha que irá acontecer se você adicionar `text-align`, `color`, ou outras propriedades de texto ao conjunto de regras do `body`.
        -   Experimente com algumas propriedades para verificar suas suposições.
      CSD U2 layout style body_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que o seletor `body` faz?</strong>
        </summary>

        Como o conteúdo da página web está completamente inserido dentro da tag `body`, o seletor body provê as regras de estivo para tudo o que estiver na página.

        </details>
        <details>
        <summary>
        <strong>O que a propriedade `color` faz?</strong>
        </summary>

        A propriedade `color` define a cor do texto. Se não houver texto, então ela não fará nada. Leia mais em <a href="http://www.w3schools.com/cssref/pr_text_color.asp">W3Schools - CSS color Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `text-align`?</strong>
        </summary>

        A propriedade `text-align` alinha o texto à esquerda, à direita, ou ao centro. Você pode ler mais em <a href="http://www.w3schools.com/cssref/pr_text_text-align.asp">W3Schools - CSS text-align Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `text-decoration`?</strong>
        </summary>

        A propriedade `text-decoration` coloca uma linha sobre, abaixo, ou ao meio de um trecho de texto. Você pode ler sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_text_text-decoration.asp">W3Schools - CSS text-decoration Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `font-family`?</strong>
        </summary>

        A propriedade `font-family` altera a fonte tipográfica do texto. Ela fornece uma descrição geral do tipo de fonte que deve ser usado, mas cada browser poderá exibir a fonte de um modo um pouco diferente. Leia mais em <a href="http://www.w3schools.com/cssref/pr_font_font-family.asp">W3Schools - CSS font-family Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `font-size`?</strong>
        </summary>

        A propriedade `font-size` altera o tamanho do texto. Você pode usar termos genéricos, como `small` (pequeno), `medium` (médio), e `large` (grande), ou você pode especificar o tamanho exato em pixels, como em `20px`. Leia mais em <a href="http://www.w3schools.com/cssref/pr_font_font-size.asp">W3Schools - CSS font-size Property</a>

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados que são vinculados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo é exibido em uma página web. Ele utiliza conjuntos de regras para alterar a aparência da página. Cada conjunto de regras possui um seletor, que especifica quais os elementos na página que serão afetados, e as regras, que explicam como os elementos devem ser exibidos. Cada regra consiste em uma propriedade e um valor para a propriedade.

        Aqui está um exemplo de um conjunto de regras que torna um tag `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        Neste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores destas propriedades.

        </details>
        </div>

        # O Elemento Body

        -   Localize na folha de estilos o conjunto de regras para o elemento `body`.
        -   Discuta com um parceiro o que você acha que irá acontecer se você adicionar `text-align`, `color`, ou outras propriedades de texto ao conjunto de regras do `body`.
        -   Experimente com algumas propriedades para verificar suas suposições.
      CSD U2 layout style border: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Quais cores posso usar em CSS?</strong></summary>

        CSS inclui nomes mais comuns de cor (red, blue, green, etc.) e muitos outros incomuns. Você pode ver uma lista completa dos nomes de cor CSS em <a href="http://www.w3schools.com/colors/colors_names.asp">W3Schools - Nomes de cores HTML</a>. Você ainda pode usar as cores que não estão incluídas na lista de nomeados, mas você vai precisar usar seus valores RGB. Você pode ler mais sobre como usar as cores no CSS em <a href="http://www.w3schools.com/cssref/css_colors_legal.asp">W3Schools - Valores de Cores CSS</a>

        </details>
        <details>
        <summary><strong>Como o código funciona?</strong></summary>

        Aqui está o código que está fazendo as bordas da imagem:

        <pre>img {
        border-color: saddlebrown;
        border-width: 4px;
        border-style: solid;
        border-radius: 10px;
        }</pre>

        -   'img' é o _selector_.  Especifica quais os elementos que terá que seguir as regras dentro das chaves, neste caso, as imagens.
        -   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` são as regras que fazem a borda.
            </details>
            <details>
            <summary><strong>O que a propriedade <code>border-style</code> faz?</strong></summary>

        A propriedade 'border-style' determina que tipo de borda (solid, dotted, etc.) o elemento tem. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS propriedade border-style</a>

        </details>
        <details>
        <summary><strong>O que a propriedade <code>border-radius</code> faz?</strong></summary>

        A propriedade 'border-radius' determina o raio das curvas nos cantos do elemento.  Um raio maior faz uma curva maior, mais suave, e um menor raio faz uma curva menor, mais nítida.  Um raio de zero faz com que um canto regular. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 propriedade border-radius</a>

        </details>
        <details>
        <summary><strong>O que a propridade <code>float</code> faz?</strong></summary>

        A propriedade 'float' faz com que um elemento "flutue", que significa que os elementos que vêm depois de tudo fluir em torno dele.  Se o valor de 'float' é 'esquerdo', o elemento flutuará para a esquerda e os elementos depois apareceram à sua direita.  Se o valor de 'float' é 'right', o elemento irá flutuar para a direita e os elementos depois apareceram à sua esquerda.  Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS propriedade float</a>

        </details>
        </div>

        # Bordas

        -   Localize as regras na folha de estilo a parte que define a cor da borda da imagem e a largura.
        -   Mude a cor e a largura das suas bordas.
        -   Experimente alguns estilos de borda diferente.
        -   Escolha entre `dotted`, `dashed`, `solid`, and `double`
        -   Coloque uma borda em outro tipo de elemento de página, como dentre os títulos ou parágrafos.
      CSD U2 layout style border_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Quais cores posso usar em CSS?</strong></summary>

        CSS inclui nomes mais comuns de cor (red, blue, green, etc.) e muitos outros incomuns. Você pode ver uma lista completa dos nomes de cor CSS em <a href="http://www.w3schools.com/colors/colors_names.asp">W3Schools - Nomes de cores HTML</a>. Você ainda pode usar as cores que não estão incluídas na lista de nomeados, mas você vai precisar usar seus valores RGB. Você pode ler mais sobre como usar as cores no CSS em <a href="http://www.w3schools.com/cssref/css_colors_legal.asp">W3Schools - Valores de Cores CSS</a>

        </details>
        <details>
        <summary><strong>Como o código funciona?</strong></summary>

        Aqui está o código que está fazendo as bordas da imagem:

        <pre>img {
        border-color: saddlebrown;
        border-width: 4px;
        border-style: solid;
        border-radius: 10px;
        }</pre>

        -   'img' é o _selector_.  Especifica quais os elementos que terá que seguir as regras dentro das chaves, neste caso, as imagens.
        -   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` são as regras que fazem a borda.
            </details>
            <details>
            <summary><strong>O que a propriedade <code>border-style</code> faz?</strong></summary>

        A propriedade 'border-style' determina que tipo de borda (solid, dotted, etc.) o elemento tem. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS propriedade border-style</a>

        </details>
        <details>
        <summary><strong>O que a propriedade <code>border-radius</code> faz?</strong></summary>

        A propriedade 'border-radius' determina o raio das curvas nos cantos do elemento.  Um raio maior faz uma curva maior, mais suave, e um menor raio faz uma curva menor, mais nítida.  Um raio de zero faz com que um canto regular. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 propriedade border-radius</a>

        </details>
        <details>
        <summary><strong>O que a propriedade <code>float</code> faz?</strong></summary>

        A propriedade 'float' faz com que um elemento "flutue", que significa que os elementos que vêm depois de tudo fluir em torno dele.  Se o valor de 'float' é 'esquerdo', o elemento flutuará para a esquerda e os elementos depois apareceram à sua direita.  Se o valor de 'float' é 'right', o elemento irá flutuar para a direita e os elementos depois apareceram à sua esquerda.  Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS propriedade float</a>

        </details>
        </div>

        # Bordas

        -   Localize as regras na folha de estilo a parte que define a cor da borda da imagem e a largura.
        -   Mude a cor e a largura das suas bordas.
        -   Experimente alguns estilos de borda diferente.
        -   Escolha entre `dotted`, `dashed`, `solid`, and `double`
        -   Coloque uma borda em outro tipo de elemento de página, como dentre os títulos ou parágrafos.
      CSD U2 layout style border_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Quais cores posso usar em CSS?</strong></summary>

        CSS inclui nomes mais comuns de cor (red, blue, green, etc.) e muitos outros incomuns. Você pode ver uma lista completa dos nomes de cor CSS em <a href="http://www.w3schools.com/colors/colors_names.asp">W3Schools - Nomes de cores HTML</a>. Você ainda pode usar as cores que não estão incluídas na lista de nomeados, mas você vai precisar usar seus valores RGB. Você pode ler mais sobre como usar as cores no CSS em <a href="http://www.w3schools.com/cssref/css_colors_legal.asp">W3Schools - Valores de Cores CSS</a>

        </details>
        <details>
        <summary><strong>Como o código funciona?</strong></summary>

        Aqui está o código que está fazendo as bordas da imagem:

        <pre>img {
        border-color: saddlebrown;
        border-width: 4px;
        border-style: solid;
        border-radius: 10px;
        }</pre>

        -   'img' é o _selector_.  Especifica quais os elementos que terá que seguir as regras dentro das chaves, neste caso, as imagens.
        -   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` são as regras que fazem a borda.
            </details>
            <details>
            <summary><strong>O que a propriedade <code>border-style</code> faz?</strong></summary>

        A propriedade 'border-style' determina que tipo de borda (solid, dotted, etc.) o elemento tem. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS propriedade border-style</a>

        </details>
        <details>
        <summary><strong>O que a propriedade <code>border-radius</code> faz?</strong></summary>

        A propriedade 'border-radius' determina o raio das curvas nos cantos do elemento.  Um raio maior faz uma curva maior, mais suave, e um menor raio faz uma curva menor, mais nítida.  Um raio de zero faz com que um canto regular. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 propriedade border-radius</a>

        </details>
        <details>
        <summary><strong>O que a propriedade <code>float</code> faz?</strong></summary>

        A propriedade 'float' faz com que um elemento "flutue", que significa que os elementos que vêm depois de tudo fluir em torno dele.  Se o valor de 'float' é 'esquerdo', o elemento flutuará para a esquerda e os elementos depois apareceram à sua direita.  Se o valor de 'float' é 'right', o elemento irá flutuar para a direita e os elementos depois apareceram à sua esquerda.  Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS propriedade float</a>

        </details>
        </div>

        # Bordas

        -   Localize as regras na folha de estilo a parte que define a cor da borda da imagem e a largura.
        -   Mude a cor e a largura das suas bordas.
        -   Experimente alguns estilos de borda diferente.
        -   Escolha entre `dotted`, `dashed`, `solid`, and `double`
        -   Coloque uma borda em outro tipo de elemento de página, como dentre os títulos ou parágrafos.
      CSD U2 layout style borderradius: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Como o código funciona?</strong></summary>

        Aqui está o código que está fazendo as bordas da imagem:

        <pre>img {
        border-color: saddlebrown;
        border-width: 4px;
        border-style: solid;
        border-radius: 10px;
        }</pre>

        -   'img' é o _selector_.  Especifica quais os elementos que terá que seguir as regras dentro das chaves, neste caso, as imagens.
        -   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` são as regras que fazem a borda.
            </details>
            <details>
            <summary><strong>O que a propriedade <code>border-style</code> faz?</strong>
            </summary>

        A propriedade 'border-style' determina que tipo de borda (solid, dotted, etc.) o elemento tem. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS propriedade border-style</a>

        </details>
        <details>
        <summary><strong>O que a propriedade <code>border-radius</code> faz?</strong>

        </summary>

        A propriedade 'border-radius' determina o raio das curvas nos cantos do elemento.  Um raio maior faz uma curva maior, mais suave, e um menor raio faz uma curva menor, mais nítida.  Um raio de zero faz com que um canto regular. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 propriedade border-radius</a>

        </details>
        <details>
        <summary><strong>O que a propriedade <code>float</code> faz?</strong>
        </summary>

        A propriedade 'float' faz com que um elemento "flutue", que significa que os elementos que vêm depois de tudo fluir em torno dele.  Se o valor de 'float' é 'esquerdo', o elemento flutuará para a esquerda e os elementos depois apareceram à sua direita.  Se o valor de 'float' é 'right', o elemento irá flutuar para a direita e os elementos depois apareceram à sua esquerda.  Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS propriedade float</a>

        </details>
        </div>

        # Border Radius

        -   Veja para a propriedade 'border-radius' dentro do seu conjunto de regras dentro de `img`
        -   Discuta com o seu parceiro o que você acha que a propriedade faz.
        -   Experimente valores diferentes para o border-radius e decida qual deles você mais gosta.
      CSD U2 layout style borderradius_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>
        Esse o código que está fazendo as bordas da imagem:

        <pre>img {
        border-color: saddlebrown;
        border-width: 4px;
        border-style: solid;
        border-radius: 10px;
        }</pre>

        -   'img' é o _selector_.  Especifica quais os elementos que terá que seguir as regras dentro das chaves, neste caso, as imagens.
        -   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` são as regras que fazem a borda.
            </details>
            <details>
            <summary>
            <strong>O que a propriedade <code>border-style</code> faz?</strong>
            </summary>
            A propriedade 'border-style' determina que tipo de borda (solid, dotted, etc.) o elemento tem. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS propriedade border-style</a>
            </details>
            <details>
            <summary>
            <summary><strong>O que a propriedade <code>border-radius</code> faz?</strong>

        </summary>

        A propriedade 'border-radius' determina o raio das curvas nos cantos do elemento.  Um raio maior faz uma curva maior, mais suave, e um menor raio faz uma curva menor, mais nítida.  Um raio de zero faz com que um canto regular. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 propriedade border-radius</a>

        </details>
        <details>
        <summary>
        <summary><strong>O que a propriedade <code>float</code> faz?</strong>
        </summary>

        A propriedade 'float' faz com que um elemento "flutue", que significa que os elementos que vêm depois de tudo fluir em torno dele.  Se o valor de 'float' é 'esquerdo', o elemento flutuará para a esquerda e os elementos depois apareceram à sua direita.  Se o valor de 'float' é 'right', o elemento irá flutuar para a direita e os elementos depois apareceram à sua esquerda.  Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS propriedade float</a>

        </details>
        </div>

        # Border Radius

        -   Veja para a propriedade 'border-radius' dentro do seu conjunto de regras dentro de `img`
        -   Discuta com o seu parceiro o que você acha que a propriedade faz.
        -   Experimente valores diferentes para o border-radius e decida qual deles você mais gosta.
      CSD U2 layout style borderradius_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>
        Esse o código que está fazendo as bordas da imagem:

        <pre>img {
        border-color: saddlebrown;
        border-width: 4px;
        border-style: solid;
        border-radius: 10px;
        }</pre>

        -   'img' é o _selector_.  Especifica quais os elementos que terá que seguir as regras dentro das chaves, neste caso, as imagens.
        -   `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;`, and `border-radius: 10px;` são as regras que fazem a borda.
            </details>
            <details>
            <summary>
            <strong>O que a propriedade <code>border-style</code> faz?</strong>
            </summary>
            A propriedade 'border-style' determina que tipo de borda (solid, dotted, etc.) o elemento tem. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS propriedade border-style</a>
            </details>
            <details>
            <summary>
            <summary><strong>O que a propriedade <code>border-radius</code> faz?</strong>

        </summary>

        A propriedade 'border-radius' determina o raio das curvas nos cantos do elemento.  Um raio maior faz uma curva maior, mais suave, e um menor raio faz uma curva menor, mais nítida.  Um raio de zero faz com que um canto regular. Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 propriedade border-radius</a>

        </details>
        <details>
        <summary>
        <summary><strong>O que a propriedade <code>float</code> faz?</strong>
        </summary>

        A propriedade 'float' faz com que um elemento "flutue", que significa que os elementos que vêm depois de tudo fluir em torno dele.  Se o valor de 'float' é 'esquerdo', o elemento flutuará para a esquerda e os elementos depois apareceram à sua direita.  Se o valor de 'float' é 'right', o elemento irá flutuar para a direita e os elementos depois apareceram à sua esquerda.  Você pode ler mais sobre essa propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS propriedade float</a>

        </details>
        </div>

        # Border Radius

        -   Veja para a propriedade 'border-radius' dentro do seu conjunto de regras dentro de `img`
        -   Discuta com o seu parceiro o que você acha que a propriedade faz.
        -   Experimente valores diferentes para o border-radius e decida qual deles você mais gosta.
      CSD U2 layout style float: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        <details>

        <summary><strong>Como o código funciona?</strong></summary>

        Aqui está o código que está fazendo a imagem flutuar ao lado esquerdo da página:

        <pre>img {
        float: left;
        }</pre>

        -   `img` é o _seletor_. Ele define quais elementos terão que seguir as regras que estão dentro das chaves, neste caso, as imagens.
        -   `float: left;` é a regra que faz a imagem flutuar à esquerda.
            </details>
            <details>
            <summary><strong>O que faz a propriedade <code>float</code>?</strong></summary>

        A propriedade `float` faz um elemento flutuar, o que significa que todos os elementos que vem depois irão fluir ao redor dele. Se o valor de `float` for `left` (esquerda), o elemento irá flutuar à esquerda, e os próximos elementos serão mostrados à sua direita. Se o valor de `float` for `right` (direita), o elemento irá flutuar à direita, e os elementos que vem depois serão mostrados à sua esquerda. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS float Property</a>

        </details>
        </div>

        # Float

        -   Repare na propriedade `float` dentro do seu conjunto de regras `img`
        -   Discuta com seu parceiro o que você acha que esta propriedade faz.
        -   Troque o valor de `left` para `right`.
      CSD U2 layout style float_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>
        Aqui está o código que está fazendo a imagem flutuar ao lado esquerdo da página:

        <pre>img {
        float: left;
        }</pre>

        -   `img` é o _seletor_. Ele define quais elementos terão que seguir as regras que estão dentro das chaves, neste caso, as imagens.
        -   `float: left;` é a regra que faz a imagem flutuar à esquerda.
            </details>
            <details>
            <summary>
            <strong>O que faz a propriedade <code>float</code>?

        </strong>
        </summary>

        A propriedade `float` faz um elemento flutuar, o que significa que todos os elementos que vem depois irão fluir ao redor dele. Se o valor de `float` for `left` (esquerda), o elemento irá flutuar à esquerda, e os próximos elementos serão mostrados à sua direita. Se o valor de `float` for `right` (direita), o elemento irá flutuar à direita, e os elementos que vem depois serão mostrados à sua esquerda. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS float Property</a>

        </details>
        </div>

        # Float

        -   Repare na propriedade `float` dentro do seu conjunto de regras `img`
        -   Discuta com seu parceiro o que você acha que esta propriedade faz.
        -   Troque o valor de `left` para `right`.
      CSD U2 layout style float_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>
        Aqui está o código que está fazendo a imagem flutuar ao lado esquerdo da página:

        <pre>img {
        float: left;
        }</pre>

        -   `img` é o _seletor_. Ele define quais elementos terão que seguir as regras que estão dentro das chaves, neste caso, as imagens.
        -   `float: left;` é a regra que faz a imagem flutuar à esquerda.
            </details>
            <details>
            <summary>
            <strong>O que faz a propriedade <code>float</code>?

        </strong>
        </summary>

        A propriedade `float` faz um elemento flutuar, o que significa que todos os elementos que vem depois irão fluir ao redor dele. Se o valor de `float` for `left` (esquerda), o elemento irá flutuar à esquerda, e os próximos elementos serão mostrados à sua direita. Se o valor de `float` for `right` (direita), o elemento irá flutuar à direita, e os elementos que vem depois serão mostrados à sua esquerda. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS float Property</a>

        </details>
        </div>

        # Float

        -   Repare na propriedade `float` dentro do seu conjunto de regras `img`
        -   Discuta com seu parceiro o que você acha que esta propriedade faz.
        -   Troque o valor de `left` para `right`.
      CSD U2 layout style freeplay - OLD: |-
        # Web Site Pessoal

        Experimente algumas destas novas propriedades CSS no seu web site pessoal.

        -   Acrescente estilos de sua escolha ao seu site pessoal. Tenha certeza que ao menos 3 novas propriedades CSS são usadas.

        # Lista de Verificação

        -   Ao menos 3 das seguintes propriedades CSS são usadas:

        -   `background-color`

        -   `height`

        -   `width`

        -   `border-style`

        -   `border-radius`

        -   `border-width`

        -   `float`

        -   `margin`

        Se você usou ao menos 3 propriedades da lista, você pode explorar algumas propriedades CSS adicionais para acrescentá-las à sua página Sobre Mim.
      CSD U2 layout style freeplay: |-
        # Web Site Pessoal

        Tente algumas destas novas propriedades CSS em seu web site pessoal

        -   Inclua estilos de sua escolha ao seu web site. Tenha certeza de utilizar pelo menos três novas propriedades CSS.

        # List de checagem

        -   Ao menos três das seguintes propriedades CSS são usadas:

        -   `cor-de-fundo`

        -   `altura`

        -   `largura`

        -   `estilo-da-borda`

        -   `raio-da-bordar`

        -   `largura-da-borda`

        -   `flutuação`

        -   `margem`

        Entretanto, nós o encorajamos que você use mais que três!  Explore propriedades CSS adicionais e inclua elas em sua página.
      CSD U2 layout style freeplay_2018: |-
        # Web Site Pessoal

        Tente algumas destas novas propriedades CSS em seu web site pessoal

        -   Inclua estilos de sua escolha ao seu web site. Tenha certeza de utilizar pelo menos três novas propriedades CSS.

        # List de checagem

        -   Ao menos três das seguintes propriedades CSS são usadas:

        -   `cor-de-fundo`

        -   `altura`

        -   `largura`

        -   `estilo-da-borda`

        -   `raio-da-bordar`

        -   `largura-da-borda`

        -   `flutuação`

        -   `margem`

        Entretanto, nós o encorajamos que você use mais que três!  Explore propriedades CSS adicionais e inclua elas em sua página.
      CSD U2 layout style freeplay_2019: |-
        # Web Site Pessoal

        Tente algumas destas novas propriedades CSS em seu web site pessoal

        -   Inclua estilos de sua escolha ao seu web site. Tenha certeza de utilizar pelo menos três novas propriedades CSS.

        # List de checagem

        -   Ao menos três das seguintes propriedades CSS são usadas:

        -   `cor-de-fundo`

        -   `altura`

        -   `largura`

        -   `estilo-da-borda`

        -   `raio-da-bordar`

        -   `largura-da-borda`

        -   `flutuação`

        -   `margem`

        Entretanto, nós o encorajamos que você use mais que três!  Explore propriedades CSS adicionais e inclua elas em sua página.
      CSD U2 layout style margin: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Como o código funciona?</strong></summary>

        Aqui está o código que está inserindo espaço adicional ao redor das imagens:

        <pre>img {
        \tmargin: 10px;
        }</pre>

        -   `img` é o _seletor_. Ele especifica quais elementos deverão seguir as regras no interior das chaves, neste caso, as imagens.
        -   `margin: 10px;` é a regra que insere 10 pixels de espaçamento ao redor da imagem.
            </details>
            <details>
            <summary><strong>O que faz a propriedade `margin`?</strong></summary>

        A propriedade `margin` determina quanto haverá de espaçamento ao redor da imagem. Na maioria das vezes, você irá definir o espaço em pixels. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_margin.asp">W3Schools - CSS margin Property</a>

        </details>
        <details>
        <summary><strong>O que significa `px` /  O que é um pixel?</strong></summary>

        Pixel, que é abreviado como `px`, é como os elementos são mensurados em CSS. É o tamanho de um único ponto de luz na tela.

        </details>
        </div>

        # Margin

        Margens definem a quantidade de espaçamento que deve estar ao redor de um elemento.

        -   Localize a propriedade `margin` no conjunto de regras `img`.
        -   Altere a margem para que seja maior, e discuta o efeito com um parceiro.
        -   Escolha um outro tipo de elemento e dê uma margem a ele, também.
      CSD U2 layout style margin_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>
        Aqui está o código que está inserindo espaço adicional ao redor das imagens:

        <pre>img {
        \tmargin: 10px;
        }</pre>

        -   `img` é o _seletor_. Ele especifica quais elementos deverão seguir as regras no interior das chaves, neste caso, as imagens.

        -   `margin: 10px;` é a regra que insere 10 pixels de espaçamento ao redor da imagem.
            </details>
            <details>
            <summary>
            <strong>O que faz a propriedade `margin`?</strong>
            </summary>

        A propriedade `margin` determina quanto haverá de espaçamento ao redor da imagem. Na maioria das vezes, você irá definir o espaço em pixels. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_margin.asp">W3Schools - CSS margin Property</a>

        </details>
        <details>
        <summary>
        <strong>O que significa `px` /  O que é um pixel?</strong>
        </summary>

        Pixel, que é abreviado como `px`, é como os elementos são mensurados em CSS. É o tamanho de um único ponto de luz na tela.

        </details>
        </div>

        # Margin

        Margens definem a quantidade de espaçamento que deve estar ao redor de um elemento.

        -   Localize a propriedade `margin` no conjunto de regras `img`.
        -   Altere a margem para que seja maior, e discuta o efeito com um parceiro.
        -   Escolha um outro tipo de elemento e dê uma margem a ele, também.
      CSD U2 layout style margin_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>
        Aqui está o código que está inserindo espaço adicional ao redor das imagens:

        <pre>img {
        \tmargin: 10px;
        }</pre>

        -   `img` é o _seletor_. Ele especifica quais elementos deverão seguir as regras no interior das chaves, neste caso, as imagens.

        -   `margin: 10px;` é a regra que insere 10 pixels de espaçamento ao redor da imagem.
            </details>
            <details>
            <summary>
            <strong>O que faz a propriedade `margin`?</strong>
            </summary>

        A propriedade `margin` determina quanto haverá de espaçamento ao redor da imagem. Na maioria das vezes, você irá definir o espaço em pixels. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_margin.asp">W3Schools - CSS margin Property</a>

        </details>
        <details>
        <summary>
        <strong>O que significa `px` /  O que é um pixel?</strong>
        </summary>

        Pixel, que é abreviado como `px`, é como os elementos são mensurados em CSS. É o tamanho de um único ponto de luz na tela.

        </details>
        </div>

        # Margin

        Margens definem a quantidade de espaçamento que deve estar ao redor de um elemento.

        -   Localize a propriedade `margin` no conjunto de regras `img`.
        -   Altere a margem para que seja maior, e discuta o efeito com um parceiro.
        -   Escolha um outro tipo de elemento e dê uma margem a ele, também.
      CSD U2 layout style sample: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que faz o seletor `body`?</strong></summary>

        Já que o conteúdo da página web está inteiramente contido na tag `body`, o seletor `body` fornece as regras de estilo para toda a página.

        </details>
        <details>
        <summary><strong>O que faz a propriedade `border-style`?</strong></summary>

        A propriedade `border-style` determina o tipo de borda (sólida, pontuada, tracejada, etc) que o elemento possui. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS border-style Property</a>

        </details>
        <details>
        <summary><strong>O que faz a propriedade `border-radius`?</strong></summary>

        A propriedade `border-radius` define o raio das curvaturas dos cantos dos elementos. Um raio maior gera uma curva maior e mais suave, enquanto que um raio menor gera uma curva menor e mais aguda. Um raio com valor zero gera um canto comum. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 border-radius Property</a>

        </details>
        <details>
        <summary><strong>O que faz a propriedade `float`?</strong></summary>

        A propriedade `float` faz com que um elemento "flutue", o que significa que os elementos que vêm depois fluem à sua volta. Se o valor de `float` for `left` (esquerda), o elemento irá flutuar à esquerda, e os elementos subsequentes serão exibidos à sua direita. Se o valor de `float` for `right` (direita), então o elemento irá flutuar à direita, e os elementos subsequentes serâo mostrados à sua esquerda. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS float Property</a>

        </details>
        </div>

        # Layout e Estilo

        -   Examine a página abaixo à procura de novos estilos.
        -   Abra a folha de estilos.
        -   Com seu parceiro, discuta que partes do código CSS você acha que estão fazendo a página parecer diferente.
        -   O que faz a página inteira ser mostrada em azul?
        -   Como as imagens estão posicionadas à esquerda de todos os outros elementos?
        -   O que fez os cantos das imagens serem arredondados?

        Nos próximos níveis, você irá alterar e acrescentar novos estilos a esta página.
      CSD U2 layout style sample_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que faz o seletor `body`?</strong>
        </summary>

        Já que o conteúdo da página web está inteiramente contido na tag `body`, o seletor `body` fornece as regras de estilo para toda a página.

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `border-style`?</strong>
        </summary>

        A propriedade `border-style` determina o tipo de borda (sólida, pontuada, tracejada, etc) que o elemento possui. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS border-style Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `border-radius`?</strong>
        </summary>

        A propriedade `border-radius` define o raio das curvaturas dos cantos dos elementos. Um raio maior gera uma curva maior e mais suave, enquanto que um raio menor gera uma curva menor e mais aguda. Um raio com valor zero gera um canto comum. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 border-radius Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `float`?</strong>
        </summary>

        A propriedade `float` faz com que um elemento "flutue", o que significa que os elementos que vêm depois fluem à sua volta. Se o valor de `float` for `left` (esquerda), o elemento irá flutuar à esquerda, e os elementos subsequentes serão exibidos à sua direita. Se o valor de `float` for `right` (direita), então o elemento irá flutuar à direita, e os elementos subsequentes serâo mostrados à sua esquerda. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS float Property</a>

        </details>
        </div>

        # Layout e Estilo

        -   Examine a página abaixo à procura de novos estilos.
        -   Abra a folha de estilos.
        -   Com seu parceiro, discuta que partes do código CSS você acha que estão fazendo a página parecer diferente.
        -   O que faz a página inteira ser mostrada em azul?
        -   Como as imagens estão posicionadas à esquerda de todos os outros elementos?
        -   O que fez os cantos das imagens serem arredondados?

        Nos próximos níveis, você irá alterar e acrescentar novos estilos a esta página.
      CSD U2 layout style sample_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que faz o seletor `body`?</strong>
        </summary>

        Já que o conteúdo da página web está inteiramente contido na tag `body`, o seletor `body` fornece as regras de estilo para toda a página.

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `border-style`?</strong>
        </summary>

        A propriedade `border-style` determina o tipo de borda (sólida, pontuada, tracejada, etc) que o elemento possui. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_border-style.asp">W3Schools - CSS border-style Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `border-radius`?</strong>
        </summary>

        A propriedade `border-radius` define o raio das curvaturas dos cantos dos elementos. Um raio maior gera uma curva maior e mais suave, enquanto que um raio menor gera uma curva menor e mais aguda. Um raio com valor zero gera um canto comum. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/css3_pr_border-radius.asp">W3Schools - CSS3 border-radius Property</a>

        </details>
        <details>
        <summary>
        <strong>O que faz a propriedade `float`?</strong>
        </summary>

        A propriedade `float` faz com que um elemento "flutue", o que significa que os elementos que vêm depois fluem à sua volta. Se o valor de `float` for `left` (esquerda), o elemento irá flutuar à esquerda, e os elementos subsequentes serão exibidos à sua direita. Se o valor de `float` for `right` (direita), então o elemento irá flutuar à direita, e os elementos subsequentes serâo mostrados à sua esquerda. Você pode ler mais sobre esta propriedade em <a href="http://www.w3schools.com/cssref/pr_class_float.asp">W3Schools - CSS float Property</a>

        </details>
        </div>

        # Layout e Estilo

        -   Examine a página abaixo à procura de novos estilos.
        -   Abra a folha de estilos.
        -   Com seu parceiro, discuta que partes do código CSS você acha que estão fazendo a página parecer diferente.
        -   O que faz a página inteira ser mostrada em azul?
        -   Como as imagens estão posicionadas à esquerda de todos os outros elementos?
        -   O que fez os cantos das imagens serem arredondados?

        Nos próximos níveis, você irá alterar e acrescentar novos estilos a esta página.
      CSD U2 layout style width: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como o código funciona?</strong></summary>\nAqui está o código que faz a imagem ter seu tamanho atual:\n\n<pre>img {\n\\twidth: 250px;\n}</pre>\n\n-   `img` é o _seletor_. Ele especifica quais os elementos que deverão seguir as regras no interior das chaves, neste caso, as imagens.\n-   `width: 250px` é a regra que faz com que a imagem tenha uma largura de 250 pixels. Ela também modifica a altura, para que a imagem não fique esticada.\n    </details>\n    <details>\n    <summary><strong>O que faz a propriedade `width`?</strong></summary>\n\nA propriedade `width` determina a largura do elemento. Na maioria das vezes, você irá definir a largura em pixels, o que faz com que o elemento ocupe uma quantidade exata de espaço na tela. Ao definir a largura, a altura também será alterada para que a imagem não seja distorcida, a não ser que você defina também a altura (propriedade `height`). Você pode ler mais sobre esta propriedade em <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\">W3Schools - CSS width Property</a>\n\n</details>\n<details>\n<summary><strong>O que faz a propriedade `height`?</strong></summary>\n\nA propriedade `height` define a altura do elemento. Na maioria das vezes, você irá definir a altura em pixels, o que faz com que o elemento ocupe uma quantidade exata de espaço na tela. Ao definir a altura, a largura também será alterada para que a imagem não seja esticada, a não ser que você defina também a largura (propriedade `width`). Você pode ler mais sobre esta propriedade em <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\">W3Schools - CSS height Property</a>\n\n</details>\n<details>\n<summary><strong>O que significa `px` / O que é um pixel?</strong></summary>\n\nUm pixel, que é abreviado por `px`, é a forma como elementos são mensurados em CSS. É o tamanho de um ponto único de luz na tela.\n\n</details>\n<details>\n<summary><strong>Por que quando se usam regras `width` e `height` ao mesmo tempo distorcem a imagem algumas vezes? </strong>\n</summary>\n\nQuando se muda a largura de uma imagem, a altura deve também ser alterada na mesma proporção, caso contrário a imagem será distorcida. Por exemplo, se você duplicar a largura de uma imagem, você terá também que duplicar sua altura, ou a imagem será esticada horizontalmente. Quando você somente define a largura ou a altura, o computador irá automaticamente alterar a outra propriedade, para que a imagem pareça a mesma. \n\n</details>\n</div>\n\n# Largura e Altura\n\n-   Na folha de estilos, localize a propriedade que controla a largura das imagens.\n-   Altere a largura das imagens para que fiquem maiores ou menores.\n-   Crie uma nova regra com uma propriedade `height` para controlar a altura das imagens.\n-   Use a propriedade `width` no conjunto de regras `p` para alterar a largura dos seus parágrafos."
      CSD U2 layout style width_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que faz a imagem ter seu tamanho atual:\n\nimg {\n\\\\twidth: 250px;\n}\n\n-   `img` é o _seletor_. Ele especifica quais os elementos que deverão seguir as regras no interior das chaves, neste caso, as imagens.\n-   `width: 250px` é a regra que faz com que a imagem tenha uma largura de 250 pixels. Ela também modifica a altura, para que a imagem não fique esticada.\n\n</details>\n<details>\n<summary>\n<strong>O que faz a propriedade <code>width</code>?</strong>\n</summary>\n\nA propriedade `width` determina a largura do elemento. Na maioria das vezes, você irá definir a largura em pixels, o que faz com que o elemento ocupe uma quantidade exata de espaço na tela. Ao definir a largura, a altura também será alterada para que a imagem não seja distorcida, a não ser que você defina também a altura (propriedade `height`). Você pode ler mais sobre esta propriedade em <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\">W3Schools - CSS width Property</a>\n\n</details>\n<details>\n<summary>\n<strong>O que faz a propriedade <code>height</code>?</strong>\n</summary>\n\nA propriedade `height` define a altura do elemento. Na maioria das vezes, você irá definir a altura em pixels, o que faz com que o elemento ocupe uma quantidade exata de espaço na tela. Ao definir a altura, a largura também será alterada para que a imagem não seja esticada, a não ser que você defina também a largura (propriedade `width`). Você pode ler mais sobre esta propriedade em <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\">W3Schools - CSS height Property</a>\n\n</details>\n<details>\n<summary>\n<strong>O que significa <code>px</code> / O que é um pixel?</strong>\n</summary>\n\nUm pixel, que é abreviado por `px`, é a forma como elementos são mensurados em CSS. É o tamanho de um ponto único de luz na tela.\n\n</details>\n<details>\n<summary>\n<strong>Por que quando se usam regras de largura e altura ao mesmo tempo distorcem a imagem algumas vezes? </strong>\n</summary>\n\nQuando se muda a largura de uma imagem, a altura deve também ser alterada na mesma proporção, caso contrário a imagem será distorcida. Por exemplo, se você duplicar a largura de uma imagem, você terá também que duplicar sua altura, ou a imagem será esticada horizontalmente. Quando você somente define a largura ou a altura, o computador irá automaticamente alterar a outra propriedade, para que a imagem pareça a mesma. \n\n</details>\n</div>\n\n# Largura e Altura\n\n-   Na folha de estilos, localize a propriedade que controla a largura das imagens.\n-   Altere a largura das imagens para que fiquem maiores ou menores.\n-   Crie uma nova regra com uma propriedade `height` para controlar a altura das imagens.\n-   Use a propriedade `width` no conjunto de regras `p` para alterar a largura dos seus parágrafos."
      CSD U2 layout style width_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que faz a imagem ter seu tamanho atual:\n\nimg {\n\\\\twidth: 250px;\n}\n\n-   `img` é o _seletor_. Ele especifica quais os elementos que deverão seguir as regras no interior das chaves, neste caso, as imagens.\n-   `width: 250px` é a regra que faz com que a imagem tenha uma largura de 250 pixels. Ela também modifica a altura, para que a imagem não fique esticada.\n\n</details>\n<details>\n<summary>\n<strong>O que faz a propriedade <code>width</code>?</strong>\n</summary>\n\nA propriedade `width` determina a largura do elemento. Na maioria das vezes, você irá definir a largura em pixels, o que faz com que o elemento ocupe uma quantidade exata de espaço na tela. Ao definir a largura, a altura também será alterada para que a imagem não seja distorcida, a não ser que você defina também a altura (propriedade `height`). Você pode ler mais sobre esta propriedade em <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\">W3Schools - CSS width Property</a>\n\n</details>\n<details>\n<summary>\n<strong>O que faz a propriedade <code>height</code>?</strong>\n</summary>\n\nA propriedade `height` define a altura do elemento. Na maioria das vezes, você irá definir a altura em pixels, o que faz com que o elemento ocupe uma quantidade exata de espaço na tela. Ao definir a altura, a largura também será alterada para que a imagem não seja esticada, a não ser que você defina também a largura (propriedade `width`). Você pode ler mais sobre esta propriedade em <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\">W3Schools - CSS height Property</a>\n\n</details>\n<details>\n<summary>\n<strong>O que significa <code>px</code> / O que é um pixel?</strong>\n</summary>\n\nUm pixel, que é abreviado por `px`, é a forma como elementos são mensurados em CSS. É o tamanho de um ponto único de luz na tela.\n\n</details>\n<details>\n<summary>\n<strong>Por que quando se usam regras de largura e altura ao mesmo tempo distorcem a imagem algumas vezes? </strong>\n</summary>\n\nQuando se muda a largura de uma imagem, a altura deve também ser alterada na mesma proporção, caso contrário a imagem será distorcida. Por exemplo, se você duplicar a largura de uma imagem, você terá também que duplicar sua altura, ou a imagem será esticada horizontalmente. Quando você somente define a largura ou a altura, o computador irá automaticamente alterar a outra propriedade, para que a imagem pareça a mesma. \n\n</details>\n</div>\n\n# Largura e Altura\n\n-   Na folha de estilos, localize a propriedade que controla a largura das imagens.\n-   Altere a largura das imagens para que fiquem maiores ou menores.\n-   Crie uma nova regra com uma propriedade `height` para controlar a altura das imagens.\n-   Use a propriedade `width` no conjunto de regras `p` para alterar a largura dos seus parágrafos."
      CSD U2 link demo: |-
        # Criando um site de várias páginas

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>O que são hyperlinks?</strong>
        </summary>

        Os hiperlinks podem se conectar a páginas da web locais ou a páginas da web externas. Para adicionar navegação ao seu site, você precisará adicionar hiperlinks que conectem suas páginas da web individuais. Você pode \*\*adicionar hiperlinks à sua página da web usando o elemento `<a>` \*\*. O texto que você deseja exibir como o hiperlink fica entre as tags de hiperlink de abertura e fechamento. O elemento `<a>` tem um atributo `href`, que é o local para o qual se vincula a página que você quer alcançar. A localização de uma página local é apenas o caminho do arquivo para essa página. <br> <br>

        Por exemplo, para criar um link para a página de casas exclusivas, você adicionaria o seguinte código dentro do seu elemento `<body>`. <br> <br>

        <pre>
        &lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;
        </pre>

        </details>
        <details>
        <summary><strong>Como eu adiciono um hyperlink?</strong>
        </summary>

        Você pode \*\*adicionar hiperlinks à sua página da web usando o elemento `<a>` \*\*. O texto que você deseja exibir como o hiperlink fica entre as tags de hiperlink de abertura e fechamento. O elemento `<a>` tem um atributo `href`, que é o local para o qual se vincula a página a qual se quer alcançar. A localização de uma página local é apenas o caminho do arquivo para essa página. <br> <br>

        Por exemplo, para criar um link para a página de casas exclusivas, você adicionaria o seguinte código dentro do seu elemento `<body>`. <br> <br>

        <pre>
        &lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;
        </pre>

        </details>
        </div>

        Um site deve incluir mais de uma página da Web e elas devem se conectar umas às outras. Aqui está um exemplo de um projeto com várias páginas conectadas por hiperlinks (as palavras sublinhadas em azul que levam você a outra página quando você clica nelas).

        # Faça isso

        -   Use a ferramenta de inspeção para ver o código que cria os hyperlinks no topo de index.html.
        -   Discuta com seu parceiro como você acha que o código funciona.
        -   Clique em recipe.html na lista de arquivos no lado esquerdo. Adicione um hiperlink ao topo desta página que o levará de volta a index.html.
      CSD U2 link demo_2018: |-
        # Criando um site de várias páginas

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        **O que são hiperlinks?**
        </ summary>

        Os hiperlinks podem se conectar a páginas da web locais ou a páginas da web externas. Para adicionar navegação ao seu site, você precisará adicionar hiperlinks que conectem suas páginas da web individuais. Você pode **adicionar hiperlinks à sua página da web usando o elemento `<a>`**. O texto que você deseja exibir como o hiperlink fica entre as tags de hiperlink de abertura e fechamento. O elemento `<a>` tem um atributo `href`, que é o local para o qual se vincula. A localização de uma página local é apenas o caminho do arquivo para essa página. <br> <br>

        Por exemplo, para criar um link para a página de casas exclusivas, você adicionaria o seguinte código dentro do seu elemento `<body>`. <br> <br>

        <pre>
        &lt;a href="houses.html"&gt; Unique Houses &lt;/a&gt;
        </pre>

        </details>

        <details>
        <summary>
        <strong>How do I add a hyperlink?</strong>
        </summary>

        Você pode <strong>adicionar links para sua página usando o elemento `<a>` </strong>.. O texto que você deseja exibir como o hiperlink fica entre as tags de hiperlink de abertura e fechamento. O elemento `<a>` tem um atributo `href`, que é o local para o qual se vincula. A localização de uma página local é apenas o caminho do arquivo para essa página. <br> <br>

        Por exemplo, para criar um link para a página de casas exclusivas, você adicionaria o seguinte código dentro do seu elemento `<body>`. <br> <br>

        <pre>
        & lt; a href = "casas.html" & gt; Casas exclusivas & lt; / a & gt;
        </ pre>

        </ details>
        </ div>

        Um site deve incluir mais de uma página da Web e elas devem se conectar umas às outras. Aqui está um exemplo de um projeto com várias páginas conectadas por hiperlinks (as palavras sublinhadas em azul que levam você a outra página quando você clica nelas).

        # Faça isso
        * Use a ferramenta de inspeção para ver o código que cria os hyperlinks no topo do index.html.
        * Discuta com seu parceiro como você acha que o código funciona.
        * Clique em recipe.html na lista de arquivos no lado esquerdo. Adicione um hiperlink ao topo desta página que o levará de volta a index.html.
      CSD U2 link demo_2019: |-
        # Criando um site de várias páginas

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        **O que são hiperlinks?**
        </ summary>

        Os hiperlinks podem se conectar a páginas da web locais ou a páginas da web externas. Para adicionar navegação ao seu site, você precisará adicionar hiperlinks que conectem suas páginas da web individuais. Você pode **adicionar hiperlinks à sua página da web usando o elemento `<a>`**. O texto que você deseja exibir como o hiperlink fica entre as tags de hiperlink de abertura e fechamento. O elemento `<a>` tem um atributo `href`, que é o local para o qual se vincula. A localização de uma página local é apenas o caminho do arquivo para essa página. <br> <br>

        Por exemplo, para criar um link para a página de casas exclusivas, você adicionaria o seguinte código dentro do seu elemento `<body>`. <br> <br>

        <pre>
        &lt;a href="houses.html"&gt; Unique Houses &lt;/a&gt;
        </pre>

        </details>

        <details>
        <summary>
        <strong>How do I add a hyperlink?</strong>
        </summary>

        Você pode <strong>adicionar links para sua página usando o elemento `<a>` </strong>.. O texto que você deseja exibir como o hiperlink fica entre as tags de hiperlink de abertura e fechamento. O elemento `<a>` tem um atributo `href`, que é o local para o qual se vincula. A localização de uma página local é apenas o caminho do arquivo para essa página. <br> <br>

        Por exemplo, para criar um link para a página de casas exclusivas, você adicionaria o seguinte código dentro do seu elemento `<body>`. <br> <br>

        <pre>
        & lt; a href = "casas.html" & gt; Casas exclusivas & lt; / a & gt;
        </ pre>

        </ details>
        </ div>

        Um site deve incluir mais de uma página da Web e elas devem se conectar umas às outras. Aqui está um exemplo de um projeto com várias páginas conectadas por hiperlinks (as palavras sublinhadas em azul que levam você a outra página quando você clica nelas).

        # Faça isso
        * Use a ferramenta de inspeção para ver o código que cria os hyperlinks no topo do index.html.
        * Discuta com seu parceiro como você acha que o código funciona.
        * Clique em recipe.html na lista de arquivos no lado esquerdo. Adicione um hiperlink ao topo desta página que o levará de volta a index.html.
      CSD U2 link pages: |-
        # Crie uma Nova Página para o seu Website.

        Aqui está o seu projeto de antes. Você irá adicionar uma outra página. Sua nova página poderá ser uma lista de prioridades, uma receita, ou qualquer coisa que você goste.

        # Faça Isto

        -   Adicione um novo arquivo HTML clicando em  ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38 PM.png>). Um novo arquivo irá surgir na lista de arquivos ao lado esquerdo da área de trabalho.
        -   Renomeie este arquivo, ou clicando-o com o botão direito e selecionando "Rename", ou clicando sobre ele quando ele já estiver selecionado. **Certifique-se que o nome é único, descritivo e termina com ".html"**.
        -   Use HTML para completar sua nova página. Ela deverá incluir:
        -   uma lista
        -   um cabeçalho
      CSD U2 lists intro: "# Listas\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Quais são os dois tipos de listas?</strong>\n</summary>\nHá dois tipos de listas em HTML, listas ordenadas e não ordenadas.\n</details>\n\n<details>\n<summary><strong>O que é uma lista não ordenada?</strong>\n</summary>\n\nUma lista não ordenada é somente um conjunto de itens com marcadores.\n\nUma lista não ordenada possui os tags `<ul> </ul>`. Isto é uma abreviação para <strong>U</strong>nordered <strong>L</strong>ist. Cada item da lista é indicado por um elemento de item de lista `<li> </li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O item de lista é um elemento filho, o que significa que ele é colocado no interior de seu elemento pai, que é a lista não ordenada.\n\n</details>\n\n<details>\n<summary><strong>Como eu crio uma lista não ordenada?</strong>\n</summary>\n\nCriar uma lista não ordenada requer dois passos: criar a lista, e adicionar os itens da lista. Para criar a lista não ordenada, digite as tags `<ul> </ul>`. Em seguida, adicione seus itens de lista **dentro** dos tags da lista não ordenada. Para criar cada item, utilize os tags de itens de lista `<li> </li>` e digite os items da lista entre os tags.\n\nA indentação dos tags `<li> </li>` pode ajudar, para deixar claro que estão contidos no interior das tags `<ul> </ul>`.\n\n</details>\n\n<details>\n<summary><strong>O que é uma lista ordenada?</strong>\n</summary>\n\nUma lista ordenada é um conjunto de itens com marcação que são numerados.\n\nUm elemento de lista ordenada possui os tags `<ol> </ol>`. Isto é uma abreviação para <strong>O</strong>rdered <strong>L</strong>ist. Cada item da lista é marcado por um elemento de item de lista `<li> </li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O elemento de item de lista é um elemento filho, o que significa que deve ser colocado no interior de seu elemento pai, que é a lista ordenada.\n\n</details>\n\n<details>\n<summary><strong>Como eu crio uma lista ordenada?</strong>\n</summary>\n\nA criação de uma lista ordenada requer dois passos: criar a lista, e adicionar os elementos da lista. Para criar a lista ordenada, digite os tags `<ol> </ol>`. Em seguida, adicione seus items de lista **dentro** dos tags da lista ordenada. Para criar cada item da lista, utilize os tags `<li> </li>` e digite o item da lista entre os tags. \n\nA indentação dos tags `<li> </li>` pode ajudar, para deixar claro que estão contidos no interior das tags `<ol> </ol>`.\n\n</details>\n</div>\n\nVocê também pode usar HTML para criar tipos diferentes de listas na sua página web. Esta receita inclui dois tipos diferentes de listas, uma ordenada (com números) e outra não ordenada (com marcadores).\n\n# Faça Isto\n\n-   Use a ferramenta de inspeção para observar o código que cria os dois diferentes tipos de lista\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre o que fazem as diferentes tags.\n-   Ajuste o código para que o segundo item de cada lista seja exibido corretamente"
      CSD U2 lists intro_2018: "# Listas\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Quais são os dois tipos de listas?</strong>\n</summary>\nHá dois tipos de listas em HTML, listas ordenadas e não ordenadas.\n</details>\n\n<details>\n<summary>\n<strong>O que é uma lista não ordenada?</strong>\n</summary>\n\nUma lista não ordenada é somente um conjunto de itens com marcadores.\n\nUma lista não ordenada possui os tags `<ul></ul>`. Isto é uma abreviação para <strong>U</strong>nordered <strong>L</strong>ist. Cada item da lista é indicado por um elemento de item de lista `<li></li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O item de lista é um elemento filho, o que significa que ele é colocado no interior de seu elemento pai, que é a lista não ordenada.\n\n</details>\n\n<details>\n<summary>\n<strong>Como eu crio uma lista não ordenada?</strong>\n</summary>\n\nCriar uma lista não ordenada requer dois passos: criar a lista, e adicionar os itens da lista. Para criar a lista não ordenada, digite as tags `<ul> </ul>`. Em seguida, adicione seus itens de lista **dentro** dos tags da lista não ordenada. Para criar cada item, utilize os tags de itens de lista `<li> </li>` e digite o item da lista entre os tags.\n<br /><br />\nA indentação dos tags `<li> </li>` pode ajudar, para deixar claro que estão contidos no interior das tags `<ul> </ul>`.\n\n</details>\n\n<details>\n<summary>\n<strong>O que é uma lista ordenada?</strong>\n</summary>\n\nUma lista ordenada é um conjunto de itens com marcação que são numerados.\n\nUm elemento de lista ordenada possui os tags `<ol> </ol>`. Isto é uma abreviação para <strong>O</strong>rdered <strong>L</strong>ist. Cada item da lista é marcado por um elemento de item de lista `<li> </li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O elemento de item de lista é um elemento filho, o que significa que deve ser colocado no interior de seu elemento pai, que é a lista ordenada.\n\n</details>\n<details>\n<summary>\n<strong>Como eu crio uma lista ordenada?</strong>\n</summary>\n\nA criação de uma lista ordenada requer dois passos: criar a lista, e adicionar os elementos da lista. Para criar a lista ordenada, digite os tags `<ol> </ol>`. Em seguida, adicione seus items de lista **dentro** dos tags da lista ordenada. Para criar cada item da lista, utilize os tags `<li> </li>` e digite o item da lista entre os tags. \n<br /><br />\nA indentação dos tags `<li> </li>` pode ajudar, para deixar claro que estão contidos no interior das tags `<ol> </ol>`.\n\n</details>\n</div>\n\nVocê também pode usar HTML para criar tipos diferentes de listas na sua página web. Esta receita inclui dois tipos diferentes de listas, uma ordenada (com números) e outra não ordenada (com marcadores).\n\n# Faça Isto\n\n-   Use a ferramenta de inspeção para observar o código que cria os dois diferentes tipos de lista\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre o que fazem as diferentes tags.\n-   Ajuste o código para que o segundo item de cada lista seja exibido corretamente"
      CSD U2 lists intro_2019: "# Listas\n\n<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Quais são os dois tipos de listas?</strong>\n</summary>\nHá dois tipos de listas em HTML, listas ordenadas e não ordenadas.\n</details>\n\n<details>\n<summary>\n<strong>O que é uma lista não ordenada?</strong>\n</summary>\n\nUma lista não ordenada é somente um conjunto de itens com marcadores.\n\nUma lista não ordenada possui os tags `<ul></ul>`. Isto é uma abreviação para <strong>U</strong>nordered <strong>L</strong>ist. Cada item da lista é indicado por um elemento de item de lista `<li></li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O item de lista é um elemento filho, o que significa que ele é colocado no interior de seu elemento pai, que é a lista não ordenada.\n\n</details>\n\n<details>\n<summary>\n<strong>Como eu crio uma lista não ordenada?</strong>\n</summary>\n\nCriar uma lista não ordenada requer dois passos: criar a lista, e adicionar os itens da lista. Para criar a lista não ordenada, digite as tags `<ul> </ul>`. Em seguida, adicione seus itens de lista **dentro** dos tags da lista não ordenada. Para criar cada item, utilize os tags de itens de lista `<li> </li>` e digite o item da lista entre os tags.\n<br /><br />\nA indentação dos tags `<li> </li>` pode ajudar, para deixar claro que estão contidos no interior das tags `<ul> </ul>`.\n\n</details>\n\n<details>\n<summary>\n<strong>O que é uma lista ordenada?</strong>\n</summary>\n\nUma lista ordenada é um conjunto de itens com marcação que são numerados.\n\nUm elemento de lista ordenada possui os tags `<ol> </ol>`. Isto é uma abreviação para <strong>O</strong>rdered <strong>L</strong>ist. Cada item da lista é marcado por um elemento de item de lista `<li> </li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O elemento de item de lista é um elemento filho, o que significa que deve ser colocado no interior de seu elemento pai, que é a lista ordenada.\n\n</details>\n<details>\n<summary>\n<strong>Como eu crio uma lista ordenada?</strong>\n</summary>\n\nA criação de uma lista ordenada requer dois passos: criar a lista, e adicionar os elementos da lista. Para criar a lista ordenada, digite os tags `<ol> </ol>`. Em seguida, adicione seus items de lista **dentro** dos tags da lista ordenada. Para criar cada item da lista, utilize os tags `<li> </li>` e digite o item da lista entre os tags. \n<br /><br />\nA indentação dos tags `<li> </li>` pode ajudar, para deixar claro que estão contidos no interior das tags `<ol> </ol>`.\n\n</details>\n</div>\n\nVocê também pode usar HTML para criar tipos diferentes de listas na sua página web. Esta receita inclui dois tipos diferentes de listas, uma ordenada (com números) e outra não ordenada (com marcadores).\n\n# Faça Isto\n\n-   Use a ferramenta de inspeção para observar o código que cria os dois diferentes tipos de lista\n-   Tenha certeza que você e seu parceiro estejam de acordo sobre o que fazem as diferentes tags.\n-   Ajuste o código para que o segundo item de cada lista seja exibido corretamente"
      CSD U2 navigation: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que são hyperlinks?</strong>
        </summary>

        Hyperlinks conectam-se a outras páginas locais ou a páginas externas. Para adicionar navegação ao seu website você vai precisar adicionar hyperlinks que se conectam a suas páginas web individuais. Você pode **adicionar hyperlinks à sua página web usando o elemento `<a>`**. O texto que você quiser mostrar como hyperlink deve ser inserido entre os links de abertura e fechamento do hyperlink. O elemento `<a>` possui um atributo `href` que é a localidade onde se quer conectar. A localidade de uma página local é simplesmente o caminho para o arquivo da página. <br> <br>

        Por exemplo, para conectar à página de casas exclusivas você adicionaria o seguinte código dentro do elemento \`<body>. <br><br>

        <pre>
        &lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;
        </pre>

        </details>
        <details>
        <summary>
        <strong>Como eu adiciono um hyperlink?</strong>
        </summary>

        Você pode **adicionar hyperlinks à sua página web usando o elemento `<a>`**. O texto que você quiser mostrar como hyperlink vai entre os tags de abertura e fechamento do hyperlink. O elemento `<a>` possui um atributo `href` que a localidade à qual você quer conectar. A localidade de uma página local é simplesmente o caminho para o arquivo da página. <br><br>

        Por exemplo para conectar à página de casas exclusivas você poderia adicionar o seguinte código dentro do elemento `<body>`. <br><br>

        <pre>
        &lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;
        </pre>

        </details>
        </div>

        # Crie uma Barra de Navegação

        Aqui está seu projeto de antes. Você irá conectar as duas páginas através da criação de uma **barra de navegação** no topo da página. Sites web tipicamente têm a mesma barra de navegação em todas as suas páginas para que você possa navegar à vontade entre as páginas do site. Você pode ver um exemplo de uma barra de navegação <a href="https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/" target="_new">nesta página</a>

        # Faça Isto

        -   Na sua página inicial (index.html), adicione dois hyperlinks no topo da página, um para sua página de listas, e outro para sua página inicial.
        -   Ainda que possa parecer estranho ligar uma página a ela mesma, fica menos confuso se a barra de navegação for exatamente a mesma em todas as páginas.
        -   Copie o código da barra de navegação, e depois adicione no topo de sua página de listas.
        -   Teste seus links na área de visualização, clicando sobre eles.
      CSD U2 navigation_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>O que são hyperlinks?</strong>
        </summary>

        Hyperlinks conectam-se a outras páginas locais ou a páginas externas. Para adicionar navegação ao seu website você vai precisar adicionar hyperlinks que se conectam a suas páginas web individuais. Você pode **adicionar hyperlinks à sua página web usando o elemento `<a>`**. O texto que você quiser mostrar como hyperlink deve ser inserido entre os links de abertura e fechamento do hyperlink. O elemento `<a>` possui um atributo `href` que é a localidade onde se quer conectar. A localidade de uma página local é simplesmente o caminho para o arquivo da página.
        <br/><br/>
        Por exemplo, para conectar à página de casas exclusivas você adicionaria o seguinte código dentro do elemento `<body>`

        <pre>
        &lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;
        </pre>

        </details>
        <details>
        <summary>
        <strong>Como eu adiciono um hyperlink?</strong>
        </summary>

        Você pode **adicionar hyperlinks à sua página web usando o elemento `<a>`**. O texto que você quiser mostrar como hyperlink vai entre os tags de abertura e fechamento do hyperlink. O elemento `<a>` possui um atributo `href` que a localidade à qual você quer conectar. A localidade de uma página local é simplesmente o caminho para o arquivo da página.
        <br/><br/>
        Por exemplo para conectar à página de casas exclusivas você poderia adicionar o seguinte código dentro do elemento `<body>`

        <pre>
        &lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;
        </pre>

        </details>
        </div>

        # Crie uma Barra de Navegação

        Aqui está seu projeto de antes. Você irá conectar as duas páginas através da criação de uma **barra de navegação** no topo da página. Sites web tipicamente têm a mesma barra de navegação em todas as suas páginas para que você possa navegar à vontade entre as páginas do site. Você pode ver um exemplo de uma barra de navegação <a href="https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/" target="_new">nesta página</a>

        # Faça Isto

        -   Na sua página inicial (index.html), adicione dois hyperlinks no topo da página, um para sua página de listas, e outro para sua página inicial.
        -   Ainda que possa parecer estranho ligar uma página a ela mesma, fica menos confuso se a barra de navegação for exatamente a mesma em todas as páginas.
        -   Copie o código da barra de navegação, e depois adicione no topo de sua página de listas.
        -   Teste seus links na área de visualização, clicando sobre eles.
      CSD U2 navigation_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>O que são hyperlinks?</strong>\n</summary>\n\nHyperlinks conectam-se a outras páginas locais ou a páginas externas. Para adicionar navegação ao seu website você vai precisar adicionar hyperlinks que se conectam a suas páginas web individuais. Você pode **adicionar hyperlinks à sua página web usando o elemento `&lt;a&gt;`**. O texto que você quiser mostrar como hyperlink deve ser inserido entre os links de abertura e fechamento do hyperlink. O elemento `&lt;a&gt;` possui um atributo `href` que é a localidade onde se quer conectar. A localidade de uma página local é simplesmente o caminho para o arquivo da página.\n<br/><br/>\nPor exemplo, para conectar à página de casas exclusivas você adicionaria o seguinte código dentro do elemento `<body>`.\n\n<pre>\n&lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;\n</pre>\n\n</details>\n<details>\n<summary>\n<strong>Como eu adiciono um hyperlink?</strong>\n</summary>\n\nVocê pode **adicionar hyperlinks à sua página web usando o elemento `&lt;a&gt;`**. O texto que você quiser mostrar como hyperlink vai entre os tags de abertura e fechamento do hyperlink. O elemento `&lt;a&gt;` possui um atributo `href` que a localidade à qual você quer conectar. A localidade de uma página local é simplesmente o caminho para o arquivo da página. \n<br/><br/>\nPor exemplo para conectar à página de casas exclusivas você poderia adicionar o seguinte código dentro do elemento `<body>`.\n\n<pre>\n&lt;a href=”houses.html”&gt; Casas Exclusivas &lt;/a&gt;\n</pre>\n\n</details>\n</div>\n\n# Crie uma Barra de Navegação\n\nAqui está seu projeto de antes. Você irá conectar as duas páginas através da criação de uma **barra de navegação** no topo da página. Sites web tipicamente têm a mesma barra de navegação em todas as suas páginas para que você possa navegar à vontade entre as páginas do site. Você pode ver um exemplo de uma barra de navegação <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\" target=\"_new\">nesta página</a>\n\n# Faça Isto\n\n-   Na sua página inicial (index.html), adicione dois hyperlinks no topo da página, um para sua página de listas, e outro para sua página inicial.\n-   Ainda que possa parecer estranho ligar uma página a ela mesma, fica menos confuso se a barra de navegação for exatamente a mesma em todas as páginas.\n-   Copie o código da barra de navegação, e depois adicione no topo de sua página de listas.\n-   Teste seus links na área de visualização, clicando sobre eles."
      CSD U2 new page: |-
        # Crie uma nova página para o seu site.

        Aqui está o seu projeto de antes. Você estará adicionando outra página. Sua nova página pode ser uma lista dos 10 melhores, uma receita ou qualquer coisa que você goste.

        # Faça isso

        -   Adicione um novo arquivo HTML clicando em ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38 PM.png>). O novo arquivo aparecerá na lista de arquivos no lado esquerdo do espaço de trabalho.
        -   Renomeie o arquivo, clicando com o botão direito e escolhendo "Renomear", ou clicando nele quando já estiver destacado. \*\* Verifique se o nome é exclusivo, descritivo e termina em ".html" \*\*.
        -   Use HTML para preencher sua nova página. Deve incluir:
        -   uma lista
        -   um cabeçalho
      CSD U2 new page_2018: |-
        # Crie uma nova página para o seu site.

        Aqui está o seu projeto de antes. Você estará adicionando outra página. Sua nova página pode ser uma lista dos 10 melhores, uma receita ou qualquer coisa que você goste.

        # Faça isso

        -   Adicione um novo arquivo HTML clicando em ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38 PM.png>). O novo arquivo aparecerá na lista de arquivos no lado esquerdo do espaço de trabalho.
        -   Renomeie o arquivo, clicando com o botão direito e escolhendo "Renomear", ou clicando nele quando já estiver destacado. \*\* Verifique se o nome é exclusivo, descritivo e termina em ".html" \*\*.
        -   Use HTML para preencher sua nova página. Deve incluir:
        -   uma lista
        -   um cabeçalho
      CSD U2 new page_2019: |-
        # Crie uma nova página para o seu site.

        Aqui está o seu projeto de antes. Você estará adicionando outra página. Sua nova página pode ser uma lista dos 10 melhores, uma receita ou qualquer coisa que você goste.

        # Faça isso

        -   Adicione um novo arquivo HTML clicando em ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38 PM.png>). O novo arquivo aparecerá na lista de arquivos no lado esquerdo do espaço de trabalho.
        -   Renomeie o arquivo, clicando com o botão direito e escolhendo "Renomear", ou clicando nele quando já estiver destacado. \*\* Verifique se o nome é exclusivo, descritivo e termina em ".html" \*\*.
        -   Use HTML para preencher sua nova página. Deve incluir:
        -   uma lista
        -   um cabeçalho
      CSD U2 ordered list: |-
        # Listas Ordenadas

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Quais são os dois tipos de listas?</strong>
        </summary>
        Há dois tipos de listas em HTML, listas ordenadas e não ordenadas.
        </details>
        <details>
        <summary><strong>O que é uma lista ordenada?</strong>
        </summary>

        Uma lista ordenada é um conjunto de itens com marcadores que são numerados.

        Um elemento de lista ordenada possui o tag `<ol>`. Isto é uma abreviação para <strong>O</strong>rdered <strong>L</strong>ist. Cada item na lista é indicado por um elemento de item de lista `<li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O elemento de item de lista é um elemento filho, o que significa que estará dentro de seu elemento pai, a lista ordenada (`<ol>`).

        </details>

        <details>
        <summary><strong>Como eu crio uma lista ordenada?</strong>
        </summary>

        A criação de uma lista ordenada tem dois passos: criar a lista, e acrescentar os itens da lista. Para criar uma lista ordenada, digite os tags da lista ordenada `<ol></ol>`. Em seguida, adicione os items **dentro** dos tags da lista ordenada. Para criar cada item de lista, utilize s tags de item de lista `<li></li>` e digite o item no interior dos tags.

        A indentação dos tags `<li>` pode ajudar para deixar claro que eles estão contidos dentro do tag `<ol>`.

        </details>

        <details>
        <summary><strong>Mostre-me o código que funciona</strong>
        </summary>

        <table border="1">
        <tr>
        <td>Exemplo</td>
        <td>Resultado</td>
        </tr>
        <tr>
        <td><pre> &lt;ol&gt; <br>   &lt;li&gt;Passo 1 &lt;/li&gt; <br>   &lt;li&gt;Passo 2 &lt;/li&gt; <br>   &lt;li&gt;Passo 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>
        <td><img src="https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png" style="width:200px"></td>
        </tr>
        </table>

        </details>
        </div>

        Esta página deveria incluir uma lista ordenada, mas as tags da lista estão faltando.

        # Faça Isto

        -   Use as tags `<ol>` e `<li>` para estruturar este conteúdo em uma lista ordenada semelhante à lista mostrada abaixo.

        _Dica: Seu código NÃO DEVERÁ CONTER NÚMEROS._

        ![](<https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03 PM.png>)
      CSD U2 ordered list_2018: |-
        # Listas Ordenadas

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Quais são os dois tipos de listas?</strong>
        </summary>
        Há dois tipos de listas em HTML, listas ordenadas e não ordenadas.
        </details>
        <details>
        <summary>
        <strong>O que é uma lista ordenada?</strong>
        </summary>

        Uma lista ordenada é um conjunto de itens com marcadores que são numerados.
        <br /><br />
        Um elemento de lista ordenada possui o tag `<ol>`. Isto é uma abreviação para <strong>O</strong>rdered <strong>L</strong>ist. Cada item na lista é indicado por um elemento de item de lista `<li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O elemento de item de lista é um elemento filho, o que significa que estará dentro de seu elemento pai, a lista ordenada (`<ol>`).

        </details>

        <details>
        <summary>
        <strong>Como eu crio uma lista ordenada?</strong>
        </summary>

        A criação de uma lista ordenada tem dois passos: criar a lista, e acrescentar os itens da lista. Para criar uma lista ordenada, digite os tags da lista ordenada `<ol></ol>`. Em seguida, adicione os items **dentro** dos tags da lista ordenada. Para criar cada item de lista, utilize s tags de item de lista `<li></li>` e digite o item no interior dos tags.
        <br /><br />
        A indentação dos tags `<li>` pode ajudar para deixar claro que eles estão contidos dentro do tag `<ol>`.

        </details>

        <details>
        <summary>
        <strong>Mostre-me o código que funciona</strong>
        </summary>

        <table border="1">
        <tr>
        <td>Exemplo</td>
        <td>Resultado</td>
        </tr>
        <tr>
        <td><pre> &lt;ol&gt; <br>   &lt;li&gt;Passo 1 &lt;/li&gt; <br>   &lt;li&gt;Passo 2 &lt;/li&gt; <br>   &lt;li&gt;Passo 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>
        <td><img src="https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png" style="width:200px"></td>
        </tr>
        </table>

        </details>
        </div>

        Esta página deveria incluir uma lista ordenada, mas as tags da lista estão faltando.

        # Faça Isto

        -   Use as tags `<ol>` e `<li>` para estruturar este conteúdo em uma lista ordenada semelhante à lista mostrada abaixo.

        _Dica: Seu código NÃO DEVERÁ CONTER NÚMEROS._

        ![](<https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03 PM.png>)
      CSD U2 ordered list_2019: |-
        # Listas Ordenadas

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>Quais são os dois tipos de listas?</strong>
        </summary>
        Há dois tipos de listas em HTML, listas ordenadas e não ordenadas.
        </details>
        <details>
        <summary>
        <strong>O que é uma lista ordenada?</strong>
        </summary>

        Uma lista ordenada é um conjunto de itens com marcadores que são numerados.
        <br /><br />
        Um elemento de lista ordenada possui o tag `<ol>`. Isto é uma abreviação para <strong>O</strong>rdered <strong>L</strong>ist. Cada item na lista é indicado por um elemento de item de lista `<li>`. Isto é uma abreviação para <strong>L</strong>ist <strong>I</strong>tem. O elemento de item de lista é um elemento filho, o que significa que estará dentro de seu elemento pai, a lista ordenada (`<ol>`).

        </details>

        <details>
        <summary>
        <strong>Como eu crio uma lista ordenada?</strong>
        </summary>

        A criação de uma lista ordenada tem dois passos: criar a lista, e acrescentar os itens da lista. Para criar uma lista ordenada, digite os tags da lista ordenada `<ol></ol>`. Em seguida, adicione os items **dentro** dos tags da lista ordenada. Para criar cada item de lista, utilize s tags de item de lista `<li></li>` e digite o item no interior dos tags.
        <br /><br />
        A indentação dos tags `<li>` pode ajudar para deixar claro que eles estão contidos dentro do tag `<ol>`.

        </details>

        <details>
        <summary>
        <strong>Mostre-me o código que funciona</strong>
        </summary>

        <table border="1">
        <tr>
        <td>Exemplo</td>
        <td>Resultado</td>
        </tr>
        <tr>
        <td><pre> &lt;ol&gt; <br>   &lt;li&gt;Passo 1 &lt;/li&gt; <br>   &lt;li&gt;Passo 2 &lt;/li&gt; <br>   &lt;li&gt;Passo 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>
        <td><img src="https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png" style="width:200px"></td>
        </tr>
        </table>

        </details>
        </div>

        Esta página deveria incluir uma lista ordenada, mas as tags da lista estão faltando.

        # Faça Isto

        -   Use as tags `<ol>` e `<li>` para estruturar este conteúdo em uma lista ordenada semelhante à lista mostrada abaixo.

        _Dica: Seu código NÃO DEVERÁ CONTER NÚMEROS._

        ![](<https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03 PM.png>)
      CSD U2 project review: |-
        # Revise seu projeto

        Você está quase pronto para publicar o seu projeto, mas você deve verificar mais uma vez que você preencheu todos os requisitos para este projeto.

        # Faça isso

        -   Verifique se você está confortável em compartilhar todas as informações do seu site.
        -   Verifique se todas as suas imagens estão corretamente atribuídas e se você tem o direito de colocá-las em seu site.
        -   Verifique se o seu projeto inclui tudo incluído na avaliação do projeto.
        -   Use comentários e espaço em branco para tornar seu site legível.
        -   Peça ao seu parceiro para ajudá-lo a encontrar possíveis problemas com seu site.
      CSD U2 project review_2018: |-
        # Revise seu projeto

        Você está quase pronto para publicar o seu projeto, mas você deve verificar mais uma vez que você preencheu todos os requisitos para este projeto.

        # Faça isso

        -   Verifique se você está confortável em compartilhar todas as informações do seu site.
        -   Verifique se todas as suas imagens estão corretamente atribuídas e se você tem o direito de colocá-las em seu site.
        -   Verifique se o seu projeto inclui tudo incluído na avaliação do projeto.
        -   Use comentários e espaço em branco para tornar seu site legível.
        -   Peça ao seu parceiro para ajudá-lo a encontrar possíveis problemas com seu site.
      CSD U2 project review_2019: |-
        # Revise seu projeto

        Você está quase pronto para publicar o seu projeto, mas você deve verificar mais uma vez que você preencheu todos os requisitos para este projeto.

        # Faça isso

        -   Verifique se você está confortável em compartilhar todas as informações do seu site.
        -   Verifique se todas as suas imagens estão corretamente atribuídas e se você tem o direito de colocá-las em seu site.
        -   Verifique se o seu projeto inclui tudo incluído na avaliação do projeto.
        -   Use comentários e espaço em branco para tornar seu site legível.
        -   Peça ao seu parceiro para ajudá-lo a encontrar possíveis problemas com seu site.
      CSD U2 project share: |-
        # Compartilhe seu projeto

        É hora de compartilhar seu projeto com o mundo!

        # Faça isso

        -   Clique no botão ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) no topo da página.
        -   Copie a URL dada a você, e mande por email para as pessoas que você quer que veja sua página.
      CSD U2 project share_2018: |-
        # Compartilhe seu projeto

        É hora de compartilhar seu projeto com o mundo!

        # Faça isso

        -   Clique no botão ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) no topo da página.
        -   Copie a URL dada a você, e mande por email para as pessoas que você quer que veja sua página.
      CSD U2 project share_2019: |-
        # Compartilhe seu projeto

        É hora de compartilhar seu projeto com o mundo!

        # Faça isso

        -   Clique no botão ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) no topo da página.
        -   Copie a URL dada a você, e mande por email para as pessoas que você quer que veja sua página.
      CSD U2 publish video: |-
        ## Perguntas a Considerar

        -   Quais você acha que são suas responsabilidades como editor de um site web?
        -   Por que você poderia querer ver o código ou reaproveitar código de alguma outra pessoa?
      CSD U2 style background: |-
        <div style="float: right; height: 150px; width: 400px; overflow-y: scroll; margin-left: 20px;">
        <details>

        <summary>

        **O que é um conjunto de regras de CSS?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um seletor?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um bloco de declaração?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **O que é um par de propriedade-valor?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Como eu crio um novo conjunto de regras?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo "style.css" está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo "style.css" está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo "style.css" está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo "style.css" está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo "style.css" está em uma linguagem diferente?**

        </summary>

        blá blá resposta

        </details>
        </div>

        # Alinhamento de Texto

        -   Localize a propriedade "text-align" na tag de parágrafo.
        -   Altere o alinhamento do parágrafo.
        -   Escolha entre "left" (esquerda), "right" (direita), e "center" (centro)
      CSD U2 text style bgcolor: |-
        <div style="float: right; height: 150px; width: 400px; overflow-y: scroll; margin-left: 20px;">
        <details>

        <summary>

        **Que cores eu posso escolher?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Como o código funciona?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>
        blá blá resposta
        </details>
        <details>
        <summary>

        **Por que o arquivo 'style.css' está em uma linguagem diferente?**

        </summary>

        blá blá resposta

        </details>
        </div>

        # Cor de Fundo

        -   Localize o código em 'style.css' que torna a cor de fundo azul claro para a página toda.
        -   Altere o código para que a página fique de uma cor diferente.
        -   Tente alterar a cor de fundo somente para os parágrafos.
      CSD U2 text style decoration: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como o código funciona?</strong></summary>\nAqui está o código que faz os elementos `h1` serem sublinhados:\n\n<pre>h1 {\ntext-decoration: underline; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `text-decoration: underline;` é a regra que faz o texto no interior da tag `h1` ficar sublinhado.\n-   `text-decoration` é a _propriedade_. Ela indica do que se trata a regra, neste caso onde a linha deve ser colocada.\n-   `underline` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso está sublinhando o texto.\n    </details>\n    <details>\n    <summary><strong>Quais são os valores possíveis para decoração de texto?</strong></summary>\n    Você pode escolher entre \"underline\", \"overline\" e \"line-through\". Você pode ler mais sobre a propriedade text-decoration em <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\">W3Schools - CSS text-decoration Property</a>\n    </details>\n    <details>\n    <summary><strong>Por que toda a pontuação é necessária?</strong></summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Sublinhamento\n\n-   Localize o código na folha de estilos que faz a tag `h1` ficar sublinhada.\n-   Altere a decoração do texto e veja qual você prefere.\n-   Escolha entre \"underline\", \"overline\" e \"line-through\"\n-   Adicione uma regra de decoração de texto para o parágrafo ou tag h3."
      CSD U2 text style decoration_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como o código funciona?</strong></summary>\nAqui está o código que faz os elementos `h1` serem sublinhados:\n\n<pre>h1 {\ntext-decoration: underline; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `text-decoration: underline;` é a regra que faz o texto no interior da tag `h1` ficar sublinhado.\n-   `text-decoration` é a _propriedade_. Ela indica do que se trata a regra, neste caso onde a linha deve ser colocada.\n-   `underline` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso está sublinhando o texto.\n    </details>\n    <details>\n    <summary><strong>Quais são os valores possíveis para decoração de texto?</strong></summary>\n    Você pode escolher entre \"underline\", \"overline\" e \"line-through\". Você pode ler mais sobre a propriedade text-decoration em <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\">W3Schools - CSS text-decoration Property</a>\n    </details>\n    <details>\n    <summary><strong>Por que toda a pontuação é necessária?</strong></summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Sublinhamento\n\n-   Localize o código na folha de estilos que faz a tag `h1` ficar sublinhada.\n-   Altere a decoração do texto e veja qual você prefere.\n-   Escolha entre \"underline\", \"overline\" e \"line-through\"\n-   Adicione uma regra de decoração de texto para o parágrafo ou tag h3."
      CSD U2 text style decoration_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como o código funciona?</strong></summary>\nAqui está o código que faz os elementos `h1` serem sublinhados:\n\n<pre>h1 {\ntext-decoration: underline; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `text-decoration: underline;` é a regra que faz o texto no interior da tag `h1` ficar sublinhado.\n-   `text-decoration` é a _propriedade_. Ela indica do que se trata a regra, neste caso onde a linha deve ser colocada.\n-   `underline` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso está sublinhando o texto.\n    </details>\n    <details>\n    <summary><strong>Quais são os valores possíveis para decoração de texto?</strong></summary>\n    Você pode escolher entre \"underline\", \"overline\" e \"line-through\". Você pode ler mais sobre a propriedade text-decoration em <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\">W3Schools - CSS text-decoration Property</a>\n    </details>\n    <details>\n    <summary><strong>Por que toda a pontuação é necessária?</strong></summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Sublinhamento\n\n-   Localize o código na folha de estilos que faz a tag `h1` ficar sublinhada.\n-   Altere a decoração do texto e veja qual você prefere.\n-   Escolha entre \"underline\", \"overline\" e \"line-through\"\n-   Adicione uma regra de decoração de texto para o parágrafo ou tag h3."
      CSD U2 text style font family: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como o código funciona?</strong></summary>\n\nAqui está o código que está controlando a fonte usada no parágrafo:\n\n<pre>p {\nfont-family: cursive; \n}</pre>\n\n-   `p` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `font-family: cursive;` é a regra que faz o texto no interior da tag `p` usar uma fonte específica.\n-   `font-family` é a _propriedade_. Ela indica do que se trata a regra, neste caso a fonte que deve ser usada.\n-   `cursive` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a fonte cursiva.\n\n</details>\n<details>\n<summary><strong>Quais são os valores possíveis para família de fontes?</strong></summary>\n\nVocê pode escolher entre \"serif\", \"sans-serif\", \"cursive\", \"fantasy\" e \"monospace\". Você pode ler mais sobre fontes específicas em <a href=\"http://www.w3schools.com/cssref/css_websafe_fonts.asp\">W3Schools - CSS Web Safe Font Combinations</a>\n\n</details>\n<details>\n<summary><strong>Por que toda a pontuação é necessária?</strong></summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Alterando a Fonte\n\n-   Localize o conjunto de regras CSS na folha de estilos que define o estilo para tags de parágrafos.\n-   Altere a família de fontes para aquela que você preferir.\n-   Escolha entre \"serif\", \"sans-serif\", \"cursive\", \"fantasy\" e \"monospace\"\n-   Adicione uma regra de família de fontes para as tags h1 ou h3."
      CSD U2 text style font family_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que está controlando a fonte usada no parágrafo:\n\n<pre>p {\nfont-family: cursive; \n}</pre>\n\n-   `p` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `font-family: cursive;` é a regra que faz o texto no interior da tag `p` usar uma fonte específica.\n-   `font-family` é a _propriedade_. Ela indica do que se trata a regra, neste caso a fonte que deve ser usada.\n-   `cursive` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a fonte cursiva.\n\n</details>\n<details>\n<summary>\n<strong>Quais são os valores possíveis para família de fontes?</strong>\n</summary>\n\nVocê pode escolher entre \"serif\", \"sans-serif\", \"cursive\", \"fantasy\" e \"monospace\". Você pode ler mais sobre fontes específicas em <a href=\"http://www.w3schools.com/cssref/css_websafe_fonts.asp\">W3Schools - CSS Web Safe Font Combinations</a>\n\n</details>\n<details>\n<summary>\n<strong>Por que toda a pontuação é necessária?</strong>\n</summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary>\n<strong>O que é uma folha de estilos?</strong>\n</summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary>\n<strong>O que é CSS?</strong>\n</summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Alterando a Fonte\n\n-   Localize o conjunto de regras CSS na folha de estilos que define o estilo para tags de parágrafos.\n-   Altere a família de fontes para aquela que você preferir.\n-   Escolha entre \"serif\", \"sans-serif\", \"cursive\", \"fantasy\" e \"monospace\"\n-   Adicione uma regra de família de fontes para as tags h1 ou h3."
      CSD U2 text style font family_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que está controlando a fonte usada no parágrafo:\n\n<pre>p {\nfont-family: cursive; \n}</pre>\n\n-   `p` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `font-family: cursive;` é a regra que faz o texto no interior da tag `p` usar uma fonte específica.\n-   `font-family` é a _propriedade_. Ela indica do que se trata a regra, neste caso a fonte que deve ser usada.\n-   `cursive` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a fonte cursiva.\n\n</details>\n<details>\n<summary>\n<strong>Quais são os valores possíveis para família de fontes?</strong>\n</summary>\n\nVocê pode escolher entre \"serif\", \"sans-serif\", \"cursive\", \"fantasy\" e \"monospace\". Você pode ler mais sobre fontes específicas em <a href=\"http://www.w3schools.com/cssref/css_websafe_fonts.asp\">W3Schools - CSS Web Safe Font Combinations</a>\n\n</details>\n<details>\n<summary>\n<strong>Por que toda a pontuação é necessária?</strong>\n</summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary>\n<strong>O que é uma folha de estilos?</strong>\n</summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary>\n<strong>O que é CSS?</strong>\n</summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Alterando a Fonte\n\n-   Localize o conjunto de regras CSS na folha de estilos que define o estilo para tags de parágrafos.\n-   Altere a família de fontes para aquela que você preferir.\n-   Escolha entre \"serif\", \"sans-serif\", \"cursive\", \"fantasy\" e \"monospace\"\n-   Adicione uma regra de família de fontes para as tags h1 ou h3."
      CSD U2 text style freeplay - OLD: |-
        # Adicionando Estilos

        Agora você pode estilizar o texto em seu site pessoal!

        -   Abra sua folha de estilo e adicione o estilo de sua escolha à sua página. Certifique-se de usar pelo menos 3 propriedades CSS diferentes.

        # Lista de controle

        -   Pelo menos 3 das seguintes propriedades CSS são usadas:
        -   `font-size`
        -   `font-family`
        -   `color`
        -   `text-decoration`
        -   `text-align`

        Se você usou pelo menos três das propriedades da lista de verificação, explore algumas propriedades de texto adicionais para adicionar ao seu projeto.
      CSD U2 text style freeplay: |-
        # Adicionando Estilos

        Agora você pode estilizar o texto em seu site pessoal!

        -   Abra sua folha de estilo e adicione o estilo de sua escolha ao seu projeto. Certifique-se de usar pelo menos 3 propriedades CSS diferentes.

        # Lista de controle

        -   Pelo menos 3 das seguintes propriedades CSS são usadas:
        -   `font-size`
        -   `font-family`
        -   `color`
        -   `text-decoration`
        -   `text-align`

        Se você usou pelo menos três das propriedades da lista de verificação, explore algumas propriedades de texto adicionais para adicionar ao seu projeto.
      CSD U2 text style freeplay_2018: |-
        # Adicionando Estilos

        Agora você pode estilizar o texto em seu site pessoal!

        -   Abra sua folha de estilo e adicione o estilo de sua escolha ao seu projeto. Certifique-se de usar pelo menos 3 propriedades CSS diferentes.

        # Lista de controle

        -   Pelo menos 3 das seguintes propriedades CSS são usadas:
        -   `font-size`
        -   `font-family`
        -   `color`
        -   `text-decoration`
        -   `text-align`

        Se você usou pelo menos três das propriedades da lista de verificação, explore algumas propriedades de texto adicionais para adicionar ao seu projeto.
      CSD U2 text style freeplay_2019: |-
        # Adicionando Estilos

        Agora você pode estilizar o texto em seu site pessoal!

        -   Abra sua folha de estilo e adicione o estilo de sua escolha ao seu projeto. Certifique-se de usar pelo menos 3 propriedades CSS diferentes.

        # Lista de controle

        -   Pelo menos 3 das seguintes propriedades CSS são usadas:
        -   `font-size`
        -   `font-family`
        -   `color`
        -   `text-decoration`
        -   `text-align`

        Se você usou pelo menos três das propriedades da lista de verificação, explore algumas propriedades de texto adicionais para adicionar ao seu projeto.
      CSD U2 text style h1: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Que cores eu posso usar em CSS?</strong></summary>\nCSS inclui a maioria dos nomes de cores em inglês (red, blue, green,etc.) e muitas cores incomuns. Você pode ver a lista completa de nomes de cores CSS em <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>. Você pode também usar cores que não estão incluídas na lista de nomes, mas você terá que usar os valores RGB. Você pode ler mais sobre o uso de cores em CSS em <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n</details><details>\n<summary><strong>Como o código funciona?</strong></summary>\nAqui está o código que está fazendo o cabeçalho `h1` ficar vermelho:\n\n<pre>p {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n    </details>\n    <details>\n    <summary><strong>Por que toda a pontuação é necessária?</strong></summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# CSS e Cor do Texto\n\nEste arquivo HTML usa uma folha de estilos (\"style.css\") para dar à página um estilo específico. A folha de estilos contém informações sobre como cada um dos elementos HTML deve ser exibido.\n\n-   Localize o código na folha de estilos (clique em \"style.css\" na lista de arquivos) que está fazendo o cabeçalho h1 ficar vermelho.\n-   Troque o código para a cor do cabeçalho h1 de \"red\" para uma cor diferente."
      CSD U2 text style h1_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Que cores eu posso usar em CSS?</strong>\n</summary>\n\nCSS inclui a maioria dos nomes de cores em inglês (red, blue, green,etc.) e muitas cores incomuns. Você pode ver a lista completa de nomes de cores CSS em <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>. Você pode também usar cores que não estão incluídas na lista de nomes, mas você terá que usar os valores RGB. Você pode ler mais sobre o uso de cores em CSS em <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n\n</details><details>\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que está fazendo o cabeçalho `h1` ficar vermelho:\n\n<pre>p {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n\n</details>\n<details>\n<summary>\n<strong>Por que toda a pontuação é necessária?</strong>\n</summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary>\n<strong>O que é uma folha de estilos?</strong>\n</summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary>\n<strong>O que é CSS?</strong>\n</summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# CSS e Cor do Texto\n\nEste arquivo HTML usa uma folha de estilos (\"style.css\") para dar à página um estilo específico. A folha de estilos contém informações sobre como cada um dos elementos HTML deve ser exibido.\n\n-   Localize o código na folha de estilos (clique em \"style.css\" na lista de arquivos) que está fazendo o cabeçalho h1 ficar vermelho.\n-   Troque o código para a cor do cabeçalho `h1` de \"red\" para uma cor diferente."
      CSD U2 text style h1_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Que cores eu posso usar em CSS?</strong>\n</summary>\n\nCSS inclui a maioria dos nomes de cores em inglês (red, blue, green,etc.) e muitas cores incomuns. Você pode ver a lista completa de nomes de cores CSS em <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>. Você pode também usar cores que não estão incluídas na lista de nomes, mas você terá que usar os valores RGB. Você pode ler mais sobre o uso de cores em CSS em <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n\n</details><details>\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que está fazendo o cabeçalho `h1` ficar vermelho:\n\n<pre>p {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n\n</details>\n<details>\n<summary>\n<strong>Por que toda a pontuação é necessária?</strong>\n</summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary>\n<strong>O que é uma folha de estilos?</strong>\n</summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary>\n<strong>O que é CSS?</strong>\n</summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# CSS e Cor do Texto\n\nEste arquivo HTML usa uma folha de estilos (\"style.css\") para dar à página um estilo específico. A folha de estilos contém informações sobre como cada um dos elementos HTML deve ser exibido.\n\n-   Localize o código na folha de estilos (clique em \"style.css\" na lista de arquivos) que está fazendo o cabeçalho h1 ficar vermelho.\n-   Troque o código para a cor do cabeçalho `h1` de \"red\" para uma cor diferente."
      CSD U2 text style h3: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Que cores eu posso usar em CSS?</strong></summary>\n\nCSS inclui a maioria dos nomes de cores em inglês (red, blue, green,etc.) e muitas cores incomuns. Você pode ver a lista completa de nomes de cores CSS em <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>. Você pode também usar cores que não estão incluídas na lista de nomes, mas você terá que usar os valores RGB. Você pode ler mais sobre o uso de cores em CSS em <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n\n</details>\n<details>\n<summary><strong>Como o código funciona?</strong></summary>\nAqui está o código que está fazendo o cabeçalho `h1` ficar vermelho:\n\n<pre>p {\ncolor: red; \n}</pre>\n\n-   `p` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n    </details>\n    <details>\n\n<summary><strong>Como eu crio um novo conjunto de regras?</strong></summary>\n\nPara criar um novo conjunto de regras, você irá precisar de um seletor e uma lista de regras. O seletor é o nome da tag em que você que as regras sejam aplicadas. As regras são a lista de pares de propriedades e valores. Você também precisa prestar atenção na pontuação usada no conjunto de regras. Veja o código abaixo para ter um exemplo de como o código deve ficar. Você vai precisar adaptar os detalhes para a sua página.\n\n<pre>h1 {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n    </details>\n    <details>\n    <summary><strong>Por que toda a pontuação é necessária?</strong></summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Criando um novo conjunto de regras de CSS\n\nO bloco de código que fornece regras para uma tag específica é chamado de _conjunto de regras_. Você pode criar um novo conjunto de regras copiando o padrão que aparece no conjunto de regras para a tag `h1`.\n\n-   Localize o conjunto de regras de CSS da folha de estilos que determina os estilos para a tag h1.\n-   Usando o mesmo padrão, escreva um novo conjunto de regras CSS que irá definir os estilos para a tag h3.\n-   Acrescente código para definir uma cor diferente para as tags h3."
      CSD U2 text style h3_2018: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Que cores eu posso usar em CSS?</strong>\n</summary>\nCSS inclui a maioria dos nomes de cores em inglês (red, blue, green,etc.) e muitas cores incomuns. Você pode ver a lista completa de nomes de cores CSS em <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>. Você pode também usar cores que não estão incluídas na lista de nomes, mas você terá que usar os valores RGB. Você pode ler mais sobre o uso de cores em CSS em <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n</details>\n<details>\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que está fazendo o cabeçalho `h1` ficar vermelho:\n\n<pre>h1 {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n\n</details>\n<details>\n<summary>\n<strong>Como eu crio um novo conjunto de regras?</strong>\n</summary>\n\nPara criar um novo conjunto de regras, você irá precisar de um seletor e uma lista de regras. O seletor é o nome da tag em que você que as regras sejam aplicadas. As regras são a lista de pares de propriedades e valores. Você também precisa prestar atenção na pontuação usada no conjunto de regras. Veja o código abaixo para ter um exemplo de como o código deve ficar. Você vai precisar adaptar os detalhes para a sua página.\n\n<pre>h1 {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n\n</details>\n<details>\n<summary>\n<strong>Por que toda a pontuação é necessária?</strong>\n</summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary>\n<strong>O que é uma folha de estilos?</strong>\n</summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary>\n<strong>O que é CSS?</strong>\n</summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Criando um novo conjunto de regras de CSS\n\nO bloco de código que fornece regras para uma tag específica é chamado de _conjunto de regras_. Você pode criar um novo conjunto de regras copiando o padrão que aparece no conjunto de regras para a tag `h1`.\n\n-   Localize o conjunto de regras de CSS da folha de estilos que determina os estilos para a tag h1.\n-   Usando o mesmo padrão, escreva um novo conjunto de regras CSS que irá definir os estilos para a tag h3.\n-   Acrescente código para definir uma cor diferente para as tags h3."
      CSD U2 text style h3_2019: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Que cores eu posso usar em CSS?</strong>\n</summary>\nCSS inclui a maioria dos nomes de cores em inglês (red, blue, green,etc.) e muitas cores incomuns. Você pode ver a lista completa de nomes de cores CSS em <a href=\"http://www.w3schools.com/colors/colors_names.asp\">W3Schools - HTML Color Names</a>. Você pode também usar cores que não estão incluídas na lista de nomes, mas você terá que usar os valores RGB. Você pode ler mais sobre o uso de cores em CSS em <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\">W3Schools - CSS Legal Color Values</a>\n</details>\n<details>\n<summary>\n<strong>Como o código funciona?</strong>\n</summary>\n\nAqui está o código que está fazendo o cabeçalho `h1` ficar vermelho:\n\n<pre>h1 {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n\n</details>\n<details>\n<summary>\n<strong>Como eu crio um novo conjunto de regras?</strong>\n</summary>\n\nPara criar um novo conjunto de regras, você irá precisar de um seletor e uma lista de regras. O seletor é o nome da tag em que você que as regras sejam aplicadas. As regras são a lista de pares de propriedades e valores. Você também precisa prestar atenção na pontuação usada no conjunto de regras. Veja o código abaixo para ter um exemplo de como o código deve ficar. Você vai precisar adaptar os detalhes para a sua página.\n\n<pre>h1 {\ncolor: red; \n}</pre>\n\n-   `h1` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves.\n-   `color: red;` é a regra que faz o texto no interior das tags `h1` ficarem vermelhas.\n-   `color` é a _propriedade_. Ela indica do que se trata a regra, neste caso a cor da fonte.\n-   `red` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso escolhendo a cor vermelha.\n\n</details>\n<details>\n<summary>\n<strong>Por que toda a pontuação é necessária?</strong>\n</summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary>\n<strong>O que é uma folha de estilos?</strong>\n</summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary>\n<strong>O que é CSS?</strong>\n</summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Criando um novo conjunto de regras de CSS\n\nO bloco de código que fornece regras para uma tag específica é chamado de _conjunto de regras_. Você pode criar um novo conjunto de regras copiando o padrão que aparece no conjunto de regras para a tag `h1`.\n\n-   Localize o conjunto de regras de CSS da folha de estilos que determina os estilos para a tag h1.\n-   Usando o mesmo padrão, escreva um novo conjunto de regras CSS que irá definir os estilos para a tag h3.\n-   Acrescente código para definir uma cor diferente para as tags h3."
      CSD U2 text style sample: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary>\n\n**O que é uma folha de estilos?**\n\n</summary>\nUma folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n</details>\n<details>\n<summary>\n\n**O que é CSS?**\n\n</summary>\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n<details>\n<summary>\n\n**Por que o arquivo \"style.css\" está em uma linguagem diferente?**\n\n</summary>\nDesenvolvedores web intencionalmente separam conteúdo e estilo para tornar seu código mais fácil de manter. HTML é a linguagem usada para dar estrutura ao conteúdo de uma página web. CSS é a linguagem que acrescenta estilo à página web.\n</details>\n<details>\n<summary>\n\n**O que significa `px` / O que é um pixel?**\n\n</summary>\nPixel, que é abreviado por `px`, é a forma como elementos são medidos em CSS. É o tamanho de um único ponto de luz na tela.\n</details>\n<details>\n<summary>\n\n**Para que serve a propriedade `text-decoration`?**\n\n</summary>\nA propriedade `text-decoration` coloca uma linha acima, abaixo, ou no meio de um trecho de texto. Você pode ler mais sobre esta propriedade em <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\">W3Schools - CSS text-decoration Property</a>\n</details>\n<details>\n<summary>\n\n**Para que serve a propriedade `text-align`?**\n\n</summary>\nA propriedade `text-align` alinha o texto à esquerda, à direita, ou ao centro. Você pode ler mais em <a href=\"http://www.w3schools.com/cssref/pr_text_text-align.asp\">W3Schools - CSS text-align Property</a>\n</details>\n<details>\n<summary>\n\n**Para que serve a propriedade `font-family`?**\n\n</summary>\n\nA propriedade `font-family` altera a fonte do texto. Ela fornece uma descrição geral do tipo de fonte que deve ser usado, mas cada browser pode exibir a fonte de forma um pouco diferente. Leia mais em <a href=\"http://www.w3schools.com/cssref/pr_font_font-family.asp\">W3Schools - CSS font-family Property</a>\n\n</details>\n</div>\n\n# CSS e Folhas de Estilo\n\n-   Observe a página web abaixo e localize alguns tipos diferentes de estilos de texto que você ainda não conhece.\n-   Clique na folha de estilos (\"style.css\" na área de arquivos) e observe o texto no interior do arquivo.\n-   Com seu parceiro, discuta quais as partes do código que você acha que estão fazendo o texto parecer um pouco diferente do que antes.\n\nNas próximas lições, você irá alterar e adicionar novos estilos a esta página."
      CSD U2 text style size: "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Como o código funciona?</strong></summary>\nAqui está o código que está controlando o tamanho da fonte usada no parágrafo:\n\n<pre>p {\nfont-size: 14px; \n}</pre>\n\n-   `p` é o _seletor_. Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.\n-   `font-size: 14px;` é a regra que faz o texto no interior da tag `p` usar um tamanho de fonte específico.\n-   `font-size` é a _propriedade_. Ela indica do que se trata a regra, neste caso a fonte que deve ser usada.\n-   `14px` é o _valor_. Ele explica como a regra deve ser aplicada, neste caso fazendo que o tamanho do texto tenha 14px.\n    </details>\n    <details>\n    <summary><strong>O que significa `px` / O que é um pixel?</strong></summary>\n\nPixel, que é abreviado como `px`, é a forma como elementos são mensurados em CSS. É o tamanho de um único ponto de luz na tela.\n\n</details>\n<details>\n<summary><strong>Por que toda a pontuação é necessária?</strong></summary>\n\nA pontuação, como as chaves `{}`, dois pontos `:`, e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves contém todas as regras para um seletor em particular. Cada regra deve terminar com um ponto e vírgula, e as propriedades são sempre separadas de seus valores por dois pontos.\n\n</details>\n<details>\n<summary><strong>O que é uma folha de estilos?</strong></summary>\n\nA folha de estilos é um documento que controla como uma página web será exibida. Folhas de estilo externas são arquivos separados, que estão vinculados à página HTML.\n\n</details>\n<details>\n<summary><strong>O que é CSS?</strong></summary>\n\nCSS é a linguagem que controla a maneira que o conteúdo de uma página web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras possui um seletor, que especifica quais elementos na página serão afetados, e as regras, que explicam como exibir os elementos. Cada regra consiste em uma propriedade e o valor para esta propriedade.\n\nAqui está um exemplo de um conjunto de regras que faz o texto em uma tag `h2` ficar azul e cursivo:\n\n<pre>h2 {\ncolor: blue;\nfont-family: cursive; \n</pre>\n\nNeste exemplo, `h2` é o seletor, `color` e `font-family` são propriedades, e `blue` e `cursive` são os valores das propriedades.\n\n</details>\n</div>\n\n# Alterando o Tamanho da Fonte\n\nVocê pode alterar outras coisas além de cores utilizando outras propriedades.\n\n-   Localize o conjunto de regras CSS na folha de estilos que define o estilo para tags de parágrafos.\n-   Altere o tamanho do texto dos parágrafos para que fiquem maiores.\n-   Adicione uma nova regra ao seu conjunto de regras para as tags h3, para fazer os textos ficarem maiores ou menores."
      CSD U2 text style size_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>

        Esse é o código que controla o tamanho do texto do parágrafo:

        <pre>p {
        font-size: 14px;
        }</pre>

        -   `p` é o _seletor_.  Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.
        -   `font-size: 14px;` é a regra que faz o texto dentro das tags `p` ter um tamanho específico.
        -   `font-size` é a _propriedade_. Ela explica sobre o que a regra é, nesse caso o tamanho (size) da fonte.
        -   `14px` é o _valor_.  Ele explica como a regra deve ser aplicada, nesse caso fazendo o tamanho do texto ser 14 pixels.

        </details>
        <details>
        <summary>
        <strong>O que <code>px</code> significa / O que é um pixel?</strong>
        </summary>

        Pixel, abreviado como `px`, é como os elementos são medidos em CSS. É o tamanho de um único ponto de luz na tela.

        </details>
        <details>
        <summary>
        <strong>Por que preciso de toda essa pontuação?</strong>
        </summary>

        A pontuação, como as chaves `{}`, os dois-pontos `:` e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves guardam todas as regras de um seletor específico. Cada regra deve terminar em um ponto e vírgula, enquanto as propriedades e valores são sempre separados por dois-pontos.

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla a aparência de uma página da web. Folhas de estilo externas são arquivos separados que são ligados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo numa página da web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras tem um seletor, que especifica quais elementos da página serão afetados, além de regras, que explicam como exibir os elementos. Cada regra consiste de uma propriedade e de um valor para essa propriedade.

        O exemplo a seguir é de um conjunto de regras que torna o texto em um `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        }</pre>

        Nesse exemplo, `h2` é um seletor, `color` e `font-family` são propriedades, enquanto `blue` e `cursive` são os valores dessas propriedades.

        </details>
        </div>

        # Alterando o tamanho do texto

        Você pode controlar outras coisas além das cores ao usar outras propriedades.

        -   Encontre o conjunto de regras CSS na folha de estilos que determina o estilo para a tag parágrafo.
        -   Faça o texto dos parágrafos ser maior.
        -   Adicione uma regra para sua tag h3 ao seu conjuntos de regras e faça o texto dela ser maior ou menor.
      CSD U2 text style size_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>

        Esse é o código que controla o tamanho do texto do parágrafo:

        <pre>p {
        font-size: 14px;
        }</pre>

        -   `p` é o _seletor_.  Ele especifica quais elementos terão que seguir as regras dentro das chaves. O `p` significa parágrafo.
        -   `font-size: 14px;` é a regra que faz o texto dentro das tags `p` ter um tamanho específico.
        -   `font-size` é a _propriedade_. Ela explica sobre o que a regra é, nesse caso o tamanho (size) da fonte.
        -   `14px` é o _valor_.  Ele explica como a regra deve ser aplicada, nesse caso fazendo o tamanho do texto ser 14 pixels.

        </details>
        <details>
        <summary>
        <strong>O que <code>px</code> significa / O que é um pixel?</strong>
        </summary>

        Pixel, abreviado como `px`, é como os elementos são medidos em CSS. É o tamanho de um único ponto de luz na tela.

        </details>
        <details>
        <summary>
        <strong>Por que preciso de toda essa pontuação?</strong>
        </summary>

        A pontuação, como as chaves `{}`, os dois-pontos `:` e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves guardam todas as regras de um seletor específico. Cada regra deve terminar em um ponto e vírgula, enquanto as propriedades e valores são sempre separados por dois-pontos.

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla a aparência de uma página da web. Folhas de estilo externas são arquivos separados que são ligados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo numa página da web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras tem um seletor, que especifica quais elementos da página serão afetados, além de regras, que explicam como exibir os elementos. Cada regra consiste de uma propriedade e de um valor para essa propriedade.

        O exemplo a seguir é de um conjunto de regras que torna o texto em um `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        }</pre>

        Nesse exemplo, `h2` é um seletor, `color` e `font-family` são propriedades, enquanto `blue` e `cursive` são os valores dessas propriedades.

        </details>
        </div>

        # Alterando o tamanho do texto

        Você pode controlar outras coisas além das cores ao usar outras propriedades.

        -   Encontre o conjunto de regras CSS na folha de estilos que determina o estilo para a tag parágrafo.
        -   Faça o texto dos parágrafos ser maior.
        -   Adicione uma regra para sua tag h3 ao seu conjuntos de regras e faça o texto dela ser maior ou menor.
      CSD U2 text style text align: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **Como o código funciona?**

        </summary>
        Aqui está o código que controla o alinhamento do texto do parágrafo:

        <pre>p {
        text-align: left;
        }</pre>

        -   `p` é o _seletor_. Ele determina quais elementos seguirão as regras dentro das chaves. O `p` significa parágrafo.
        -   `text-align: left;` é a regra que faz o texto dentro das tags `p`alinhar ao lado esquerdo (left) do parágrafo.
        -   `text-align` é a _propriedade_. Ela explica sobre o que a regra é, nesse caso o alinhamento do texto.
        -   `left` é o _valor_. Ele explica como a regra deve ser aplicada, nesse caso fazendo o texto alinhar ao lado esquerdo do parágrafo.
            </details>
            <details>
            <summary>

        **Por que `text-align: left;` não faz nada?**

        </summary>
        A maioria das propriedades têm valores padrão. Os valores padrão são os estilos que um elemento terá automaticamente, antes de você adicionar sua folha de estilos. O valor padrão para `text-align` é `left`, então ele não muda de como já estava.
        </details>
        <details>
        <summary>

        **Quais são os valores possíveis para o alinhamento do texto?**

        </summary>
        Você pode escolher dentre "left", "right" e "center" (esquerda, direita e centro). Você pode ler mais sobre a propriedade text-align em <a href="http://www.w3schools.com/cssref/pr_text_text-align.asp">W3Schools - propriedade CSS text-align</a>
        </details>
        <details>
        <summary>

        **Por que preciso de toda essa pontuação?**

        </summary>
        A pontuação, como as chaves `{}`, os dois-pontos `:` e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves guardam todas as regras de um seletor específico. Cada regra deve terminar em um ponto e vírgula, enquanto as propriedades e valores são sempre separados por dois-pontos.
        </details>
        <details>
        <summary>

        **O que é uma folha de estilos?**

        </summary>

        Uma folha de estilos é um documento que controla a aparência de uma página da web. Folhas de estilo externas são arquivos separados que são ligados à página HTML.

        </details>
        <details>
        <summary>

        **O que é CSS?**

        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo numa página da web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras tem um seletor, que especifica quais elementos da página serão afetados, além de regras, que explicam como exibir os elementos. Cada regra consiste de uma propriedade e de um valor para essa propriedade.

        O exemplo a seguir é de um conjunto de regras que torna o texto em um `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        }</pre>

        Nesse exemplo, `h2` é um seletor, `color` e `font-family` são propriedades, enquanto `blue` e `cursive` são os valores dessas propriedades.

        </details>

        </details>
        </div>

        # Alinhamento de Texto

        A propriedade `text-align` define o posicionamento horizontal (lado a lado) do texto dentro de cada linha.

        -   Encontre a propriedade "text-align" na tag parágrafo.
        -   Altere o alinhamento do parágrafo.
        -   Escolha entre "left", "right" e "center" (esquerda, direita e centro)
      CSD U2 text style text align_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>

        Aqui está o código que controla o alinhamento do texto do parágrafo:

        <pre>p {
        text-align: left;
        }</pre>

        -   `p` é o _seletor_. Ele determina quais elementos seguirão as regras dentro das chaves. O `p` significa parágrafo.
        -   `text-align: left;` é a regra que faz o texto dentro das tags `p`alinhar ao lado esquerdo (left) do parágrafo.
        -   `text-align` é a _propriedade_. Ela explica sobre o que a regra é, nesse caso o alinhamento do texto.
        -   `left` é o _valor_. Ele explica como a regra deve ser aplicada, nesse caso fazendo o texto alinhar ao lado esquerdo do parágrafo.

        </details>
        <details>
        <summary>
        <strong>Por que <code>text-align: left;</code> não faz nada?</strong>
        </summary>

        A maioria das propriedades têm valores padrão. Os valores padrão são os estilos que um elemento terá automaticamente, antes de você adicionar sua folha de estilos. O valor padrão para `text-align` é `left`, então ele não muda de como já estava.

        </details>
        <details>
        <summary>
        <strong>Quais são os valores possíveis para o alinhamento do texto?</strong>
        </summary>

        Você pode escolher dentre "left", "right" e "center" (esquerda, direita e centro). Você pode ler mais sobre a propriedade text-align em <a href="http://www.w3schools.com/cssref/pr_text_text-align.asp">W3Schools - propriedade CSS text-align</a>

        </details>
        <details>
        <summary>
        <strong>Por que preciso de toda essa pontuação?</strong>
        </summary>

        A pontuação, como as chaves `{}`, os dois-pontos `:` e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves guardam todas as regras de um seletor específico. Cada regra deve terminar em um ponto e vírgula, enquanto as propriedades e valores são sempre separados por dois-pontos.

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla a aparência de uma página da web. Folhas de estilo externas são arquivos separados que são ligados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo numa página da web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras tem um seletor, que especifica quais elementos da página serão afetados, além de regras, que explicam como exibir os elementos. Cada regra consiste de uma propriedade e de um valor para essa propriedade.
        <br/><br/>
        O exemplo a seguir é de um conjunto de regras que torna o texto em um `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        }</pre>

        Nesse exemplo, `h2` é um seletor, `color` e `font-family` são propriedades, enquanto `blue` e `cursive` são os valores dessas propriedades.

        </details>

        </details>
        </div>

        # Alinhamento de Texto

        A propriedade `text-align` define o posicionamento horizontal (lado a lado) do texto dentro de cada linha.

        -   Encontre a propriedade "text-align" na tag parágrafo.
        -   Altere o alinhamento do parágrafo.
        -   Escolha entre "left", "right" e "center" (esquerda, direita e centro)
      CSD U2 text style text align_2019: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>Como o código funciona?</strong>
        </summary>

        Aqui está o código que controla o alinhamento do texto do parágrafo:

        <pre>p {
        text-align: left;
        }</pre>

        -   `p` é o _seletor_. Ele determina quais elementos seguirão as regras dentro das chaves. O `p` significa parágrafo.
        -   `text-align: left;` é a regra que faz o texto dentro das tags `p`alinhar ao lado esquerdo (left) do parágrafo.
        -   `text-align` é a _propriedade_. Ela explica sobre o que a regra é, nesse caso o alinhamento do texto.
        -   `left` é o _valor_. Ele explica como a regra deve ser aplicada, nesse caso fazendo o texto alinhar ao lado esquerdo do parágrafo.

        </details>
        <details>
        <summary>
        <strong>Por que <code>text-align: left;</code> não faz nada?</strong>
        </summary>

        A maioria das propriedades têm valores padrão. Os valores padrão são os estilos que um elemento terá automaticamente, antes de você adicionar sua folha de estilos. O valor padrão para `text-align` é `left`, então ele não muda de como já estava.

        </details>
        <details>
        <summary>
        <strong>Quais são os valores possíveis para o alinhamento do texto?</strong>
        </summary>

        Você pode escolher dentre "left", "right" e "center" (esquerda, direita e centro). Você pode ler mais sobre a propriedade text-align em <a href="http://www.w3schools.com/cssref/pr_text_text-align.asp">W3Schools - propriedade CSS text-align</a>

        </details>
        <details>
        <summary>
        <strong>Por que preciso de toda essa pontuação?</strong>
        </summary>

        A pontuação, como as chaves `{}`, os dois-pontos `:` e o ponto e vírgula `;`, ajudam o computador a entender as regras na folha de estilos. As chaves guardam todas as regras de um seletor específico. Cada regra deve terminar em um ponto e vírgula, enquanto as propriedades e valores são sempre separados por dois-pontos.

        </details>
        <details>
        <summary>
        <strong>O que é uma folha de estilos?</strong>
        </summary>

        Uma folha de estilos é um documento que controla a aparência de uma página da web. Folhas de estilo externas são arquivos separados que são ligados à página HTML.

        </details>
        <details>
        <summary>
        <strong>O que é CSS?</strong>
        </summary>

        CSS é uma linguagem que controla a forma como o conteúdo numa página da web é exibido. Ela usa conjuntos de regras para alterar a aparência de uma página. Cada conjunto de regras tem um seletor, que especifica quais elementos da página serão afetados, além de regras, que explicam como exibir os elementos. Cada regra consiste de uma propriedade e de um valor para essa propriedade.
        <br/><br/>
        O exemplo a seguir é de um conjunto de regras que torna o texto em um `h2` azul e cursivo:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        }</pre>

        Nesse exemplo, `h2` é um seletor, `color` e `font-family` são propriedades, enquanto `blue` e `cursive` são os valores dessas propriedades.

        </details>

        </details>
        </div>

        # Alinhamento de Texto

        A propriedade `text-align` define o posicionamento horizontal (lado a lado) do texto dentro de cada linha.

        -   Encontre a propriedade "text-align" na tag parágrafo.
        -   Altere o alinhamento do parágrafo.
        -   Escolha entre "left", "right" e "center" (esquerda, direita e centro)
      CSD U3 - Booleans Video: "# Video de Expressões Booleanas"
      CSD U3 - Sprites - Sprite v Rect: |-
        # Sprites vs Rect

        Atualmente sprites e retângulos parecem muito semelhantes. Ficará claro mais tarde porque os sprites são mais poderosos que as formas básicas. Antes de chegar lá, é importante destacar uma grande diferença na forma como sprites e retângulos desenham.

        # Faça isso

        Você pode descobrir a diferença apenas tentando isso?

        -   Crie um retângulo com largura e altura de 30
        -   Defina o preenchimento para o retângulo para uma cor diferente de cinza (Então, é claro que é o retângulo)
        -   Crie um sprite e dê os mesmos valores de x e y que você deu ao retângulo
        -   Certifique-se de chamar `drawSprites` no laço de desenho
        -   Execute o programa
        -   Você consegue ver a diferença?
      CSD U3 - images - Embed Project: Exemplo do Projeto Final
      CSD U3 - images - animations: |-
        # Animações

        Vocês viram através desta Unidade que, quando você monta um conjunto de imagens e as reproduz juntas de volta para trás, ela se parece um movimento! Bem, sprites fazem essa animação mais fácil! Você pode montar um conjunto de imagens para criar uma animação. Existem animações pré-carregadas para você no gerenciador de animações.

        Definir a animação com setAnimation.

        # Faça isso

        -   Crie um sprite
        -   Adicione a animação.
      CSD U3 Random random ellipse-2018: |-
        # Números aleatórios

        `numeroAleatorio ()` escolhe um número aleatório entre um valor mínimo e máximo. Você pode usar este código em vez de escrever no número específico. Se você fizer seus desenhos com números aleatórios, ele parecerá um pouco diferente toda vez que você executar seu programa.

        # Faça isso

        -   Execute o programa várias vezes para ver como funciona.
        -   Altere os números dentro de `numeroAleatorio` e execute o código novamente algumas vezes para ver o que muda.
      CSD U3 Random random ellipse: |-
        # Números aleatórios

        `numeroAleatorio ()` escolhe um número aleatório entre um valor mínimo e máximo. Você pode usar este código em vez de escrever no número específico. Se você fizer seus desenhos com números aleatórios, ele parecerá um pouco diferente toda vez que você executar seu programa.

        # Faça isso

        -   Execute o programa várias vezes para ver como funciona.
        -   Altere os números dentro de `numeroAleatorio` e execute o código novamente algumas vezes para ver o que muda.
      CSD U3 Random random ellipse_2018: |-
        # Números aleatórios

        `numeroAleatorio ()` escolhe um número aleatório entre um valor mínimo e máximo. Você pode usar este código em vez de escrever no número específico. Se você fizer seus desenhos com números aleatórios, ele parecerá um pouco diferente toda vez que você executar seu programa.

        # Faça isso

        -   Execute o programa várias vezes para ver como funciona.
        -   Altere os números dentro de `numeroAleatorio` e execute o código novamente algumas vezes para ver o que muda.
      CSD U3 Random random ellipse_2018_2019: |-
        # Números aleatórios

        `numeroAleatorio ()` escolhe um número aleatório entre um valor mínimo e máximo. Você pode usar este código em vez de escrever no número específico. Se você fizer seus desenhos com números aleatórios, ele parecerá um pouco diferente toda vez que você executar seu programa.

        # Faça isso

        -   Execute o programa várias vezes para ver como funciona.
        -   Altere os números dentro de `numeroAleatorio` e execute o código novamente algumas vezes para ver o que muda.
      CSD U3 Scene Example-2018: |-
        # Cenas Sprite

        Ao combinar formas, sprites e texto, você pode criar cenas simples, histórias ou histórias em quadrinhos. Embora esse exemplo seja bastante simples, você pode combinar quantos sprites e formas desejar para criar cenas tão complexas ou detalhadas quanto desejar.

        ## Esboce-o

        Antes de prosseguir, tire um segundo para esboçar uma cena que você gostaria de fazer no final desta lição. Considere as formas simples que você usou no passado, sprites para seus personagens e qualquer texto que você gostaria na tela. Depois de esboçar uma ideia, você aprenderá sobre `texto` e como compor uma cena.
      CSD U3 Scene Example: |-
        # Cenas Sprite

        Combinando formas, sprites e um novo bloco chamado `texto`, você pode criar cenas simples, histórias ou quadrinhos. Embora esse exemplo seja bastante simples, você pode combinar quantos sprites e formas desejar para criar cenas tão complexas ou detalhadas quanto desejar.

        ## Esboce-o

        Antes de prosseguir, tire um segundo para esboçar uma cena que você gostaria de fazer no final desta lição. Considere as formas simples que você usou no passado, sprites para seus personagens e qualquer texto que você gostaria na tela. Depois de esboçar uma ideia, você aprenderá sobre `texto` e como compor uma cena.
      CSD U3 Scene Example_2018: |-
        # Cenas Sprite

        Ao combinar formas, sprites e texto, você pode criar cenas simples, histórias ou histórias em quadrinhos. Embora esse exemplo seja bastante simples, você pode combinar quantos sprites e formas desejar para criar cenas tão complexas ou detalhadas quanto desejar.

        ## Esboce-o

        Antes de prosseguir, tire um segundo para esboçar uma cena que você gostaria de fazer no final desta lição. Considere as formas simples que você usou no passado, sprites para seus personagens e qualquer texto que você gostaria na tela. Depois de esboçar uma ideia, você aprenderá sobre `texto` e como compor uma cena.
      CSD U3 Scene Example_2018_2019: |-
        # Cenas Sprite

        Ao combinar formas, sprites e texto, você pode criar cenas simples, histórias ou histórias em quadrinhos. Embora esse exemplo seja bastante simples, você pode combinar quantos sprites e formas desejar para criar cenas tão complexas ou detalhadas quanto desejar.

        ## Esboce-o

        Antes de prosseguir, tire um segundo para esboçar uma cena que você gostaria de fazer no final desta lição. Considere as formas simples que você usou no passado, sprites para seus personagens e qualquer texto que você gostaria na tela. Depois de esboçar uma ideia, você aprenderá sobre `texto` e como compor uma cena.
      CSD U3 Simple Drawing - Personal Animation: |-
        # Sua própria animação

        Aqui está o desenho que você planejou e começou na última lição - vamos animá-lo!

        # Faça isso

        -   Mova todo o seu código para um laço `desenhar()`
        -   Use `numeroAleatorio ()` nas entradas de algumas das suas formas
        -   Defina a velocidade da sua animação usando o bloco `Mundo.frameRate`
      CSD U3 Sprites text: |-
        # Adicionando texto

        Você pode colocar o texto em qualquer lugar que quiser na tela usando `texto`. Altere o texto exibido no código fornecido e adicione um segundo `texto` para escrever em uma parte diferente da tela.

        _Dica: O tamanho do texto padrão é bem pequeno, mas você pode usar o bloco `tamanhoDoTexto` para mudar isso. Você também pode usar `preencher` para mudar a cor do seu texto._
      CSD U3 Test collaboration FR: Como você e seu parceiro decidiram dividir o trabalho para fazer este programa?
      CSD U3 Test debug FR: Pense em um bug difícil que você precisava corrigir em seu programa. Qual foi o seu processo para encontrar e corrigir o bug?
      CSD U3 Test parameter FR: Blocos como `rect` e`velocityX` possuem parâmetros que permitem dar informações específicas sobre o que eles podem fazer. Escolha uma função do seu programa que possa ser melhorada com um parâmetro e explique como.
      CSD U3 Variables Square: |-
        # Variáveis e Desenho

        Variáveis permitem que você **use o mesmo valor várias vezes em seu programa**. Se um valor sempre será usado muitas vezes em um programa, é realmente útil colocar esse valor em uma variável. Isso permite que você **mude rapidamente o mesmo valor em muitos lugares em seu programa**. Também pode tornar o movimento óbvio **como esse valor é usado**.

        # Faça isso

        -   Altere o valor que `tamanho` é inicializado para que o programa desenhe um **quadrado maior**
      CSD U3 abstraction make it your own: |-
        # Faça o seu próprio

        Agora você tem a mecânica básica do seu jogo no lugar, então é hora de torná-lo seu. O que você quer que aconteça? O personagem ganha pontos toda vez que recebe uma moeda? Você pode adicionar um placar como aprendeu na última lição? Você quer fazer outra moeda? Que tal uma "moeda ruim" que tira pontos?

        # Faça isso

        Faça pelo menos uma melhoria no jogo que o torne seu. Esteja preparado para compartilhar suas alterações e melhorias com seu colega de classe.
      CSD U3 abstraction make it your own_2018: |-
        # Faça o seu próprio

        Agora você tem a mecânica básica do seu jogo no lugar, então é hora de torná-lo seu. O que você quer que aconteça? O personagem ganha pontos toda vez que recebe uma moeda? Você pode adicionar um placar como aprendeu na última lição? Você quer fazer outra moeda? Que tal uma "moeda ruim" que tira pontos?

        # Faça isso

        Faça pelo menos uma melhoria no jogo que o torne seu. Esteja preparado para compartilhar suas alterações e melhorias com seu colega de classe.
      CSD U3 abstraction make it your own_2019: |-
        # Faça o seu próprio

        Agora você tem a mecânica básica do seu jogo no lugar, então é hora de torná-lo seu. O que você quer que aconteça? O personagem ganha pontos toda vez que recebe uma moeda? Você pode adicionar um placar como aprendeu na última lição? Você quer fazer outra moeda? Que tal uma "moeda ruim" que tira pontos?

        # Faça isso

        Faça pelo menos uma melhoria no jogo que o torne seu. Esteja preparado para compartilhar suas alterações e melhorias com seu colega de classe.
      CSD U3 collisions displace intro: |-
        # Deslocar

        A interação que você está programando é tão comum que existe um bloco projetado para fazer a interação para você. `sprite.deslocar()` que fará um sprite empurrar o outro quando se tocarem. O código que está implícito a este bloco pode parecer muito com o que você acabou de escrever, mas agora você não precisa mais se preocupar em escrever esses detalhes.

        # Faça isso

        Alguém tentou usar o bloco `sprite.deslocar()` para fazer o **elefante empurra o hipopótamo**, mas existe um bug. Você pode mudar o código para que o elefante empurre o hipopótamo para fora da tela?

        -   Encontre a linha de código onde o bloco `sprite.deslocar()` é usado e corrija o erro.
      CSD U3 collisions displace intro_2018: |-
        # Deslocar

        A interação que você está programando é tão comum que existe um bloco projetado para fazer a interação para você. `sprite.deslocar()` que fará um sprite empurrar o outro quando se tocarem. O código que está implícito a este bloco pode parecer muito com o que você acabou de escrever, mas agora você não precisa mais se preocupar em escrever esses detalhes.

        # Faça isso

        Alguém tentou usar o bloco `sprite.deslocar()` para fazer o **elefante empurra o hipopótamo**, mas existe um bug. Você pode mudar o código para que o elefante empurre o hipopótamo para fora da tela?

        -   Encontre a linha de código onde o bloco `sprite.deslocar()` é usado e corrija o erro.
      CSD U3 collisions displace intro_2019: |-
        # Deslocar

        A interação que você está programando é tão comum que existe um bloco projetado para fazer a interação para você. `sprite.deslocar()` que fará um sprite empurrar o outro quando se tocarem. O código que está implícito a este bloco pode parecer muito com o que você acabou de escrever, mas agora você não precisa mais se preocupar em escrever esses detalhes.

        # Faça isso

        Alguém tentou usar o bloco `sprite.deslocar()` para fazer o **elefante empurra o hipopótamo**, mas existe um bug. Você pode mudar o código para que o elefante empurre o hipopótamo para fora da tela?

        -   Encontre a linha de código onde o bloco `sprite.deslocar()` é usado e corrija o erro.
      CSD U5 Waze Data Video: Assista este vídeo para aprender como esse problema é resolvido pelo Waze. Enquanto assiste, pense em quais dados estão sendo coletados e de onde eles estão vindo.
      CSD U5 Waze Data Video_2018: Assista este vídeo para aprender como esse problema é resolvido pelo Waze. Enquanto assiste, pense em quais dados estão sendo coletados e de onde eles estão vindo.
      CSD U5 Waze Data Video_2019: Assista este vídeo para aprender como esse problema é resolvido pelo Waze. Enquanto assiste, pense em quais dados estão sendo coletados e de onde eles estão vindo.
      CSD U6 LEDs color: |-
        # Adicionando alguma cor

        Você provavelmente notou que quando usou `colorLeds [0].on()` no último nível, os LEDs ficaram brancos. Se você não especificar uma cor, `on()` ligará todas as três partes do LED (vermelho, verde e azul) para produzir o branco. Você verá um novo comando na caixa de ferramentas chamado `colorLeds [0].color ()` que permite especificar uma cor, como um tipo texto como "Azul" ou um valor RGB usando o comando color `color()`.

        # Faça isso

        Use o comando `.color()` para configurar cada um dos LEDs de cor para uma cor diferente.
      CSD U6 LEDs color_2018: |-
        # Adicionando alguma cor

        Você provavelmente notou que quando usou `colorLeds [0].on()` no último nível, os LEDs ficaram brancos. Se você não especificar uma cor, `on()` ligará todas as três partes do LED (vermelho, verde e azul) para produzir o branco. Você verá um novo comando na caixa de ferramentas chamado `colorLeds [0].color ()` que permite especificar uma cor, como um tipo texto como "Azul" ou um valor RGB usando o comando color `color()`.

        # Faça isso

        Use o comando `.color()` para configurar cada um dos LEDs de cor para uma cor diferente.
      CSD U6 LEDs color_2019: |-
        # Adicionando alguma cor

        Você provavelmente notou que quando usou `colorLeds [0].on()` no último nível, os LEDs ficaram brancos. Se você não especificar uma cor, `on()` ligará todas as três partes do LED (vermelho, verde e azul) para produzir o branco. Você verá um novo comando na caixa de ferramentas chamado `colorLeds [0].color ()` que permite especificar uma cor, como um tipo texto como "Azul" ou um valor RGB usando o comando color `color()`.

        # Faça isso

        Use o comando `.color()` para configurar cada um dos LEDs de cor para uma cor diferente.
      CSD U6 analog change: |-
        # Alterando o Evento

        O evento de dados é bom se você não se importa que o seu código rode constantemente, mas às vezes não é a solução mais eficiente para o seu problema. O evento "alterar" do sensor é acionado apenas se o valor do sensor tiver mudado desde a última leitura, o que pode garantir que o programa não esteja executando o código quando não for necessário.

        # Faça isso

        Usando o manipulador de eventos fornecido, escreva um programa que acione a campainha e atualize "valor\_temporário" sempre que a leitura do sensor de temperatura mudar. Coloque o polegar sobre o sensor de temperatura para que ele mude e veja como o seu programa responde.
      CSD U6 analog change_2018: |-
        # Alterando o Evento

        O evento de dados é bom se você não se importa que o seu código rode constantemente, mas às vezes não é a solução mais eficiente para o seu problema. O evento "alterar" do sensor é acionado apenas se o valor do sensor tiver mudado desde a última leitura, o que pode garantir que o programa não esteja executando o código quando não for necessário.

        # Faça isso

        Usando o manipulador de eventos fornecido, escreva um programa que acione a campainha e atualize "valor\_temporário" sempre que a leitura do sensor de temperatura mudar. Coloque o polegar sobre o sensor de temperatura para que ele mude e veja como o seu programa responde.
      CSD U6 analog change_2019: |-
        # Alterando o Evento

        O evento de dados é bom se você não se importa que o seu código rode constantemente, mas às vezes não é a solução mais eficiente para o seu problema. O evento "alterar" do sensor é acionado apenas se o valor do sensor tiver mudado desde a última leitura, o que pode garantir que o programa não esteja executando o código quando não for necessário.

        # Faça isso

        Usando o manipulador de eventos fornecido, escreva um programa que acione a campainha e atualize "valor\_temporário" sempre que a leitura do sensor de temperatura mudar. Coloque o polegar sobre o sensor de temperatura para que ele mude e veja como o seu programa responde.
      CSD U6 iter predict bubbles: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      'CSD: Boolean Expressions': "# Video de Expressões Booleanas"
      CSDU2 - First-Weblab: |-
        # Adicionando conteúdo

        Comece a criar sua primeira página web! Tente criar uma página com um título e dois parágrafos.

        # Faça isto

        -   Escreva uma frase sobre seu animal favorito
        -   Em uma linha separada escreva outra frase sobre seu animal menos favorito.
        -   Acima de ambas as frases, tente adicionar um título que diz "Animais"
        -   Não se esqueça de clicar em <img src="https://images.code.org/6a35d13b10ed2029a9323c9cb555e39e-image-1477681291001.01.12 PM.png" style="width:100px">
        -   **O que você notou sobre a estrutura do seu conteúdo?**
      CSDU2 - Headers: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>

        **O que são cabeçalhos?**

        </summary>
        Cabeçalhos são os títulos de seções de tamanhos diferentes em uma página web. Os cabeçalhos adicionam estrutura à sua página através da divisão da mesma facilitando a leitura do usuário.
        </details>
        <details>
        <summary>

        **Como eu crio um cabeçalho?**

        </summary>
        Você pode fazer algo se tornar um elemento de cabeçalho ao cercá-lo com tags de cabeçalho. Por exemplo:
        <pre> &lt;h1&gt; Texto de Cabeçalho &lt;/h1&gt; </pre> <br> <br>

        Note que há uma tag inicial (\<h1>) e uma tag fim (\</h1>). A tag fim é a mesma que a início exceto que esta tem `/` depois do sinal de maior. O texto que você quer mostrar como cabeçalho vai entre as tags.

        </details>
        <details>
        <summary>

        **O que é HTML?**

        </summary>
        HTML significa Hypertext Markup Language (Linguagem de Marcação de Hipertexto, em tradução livre). o HTML é usado para adicionar estratura ao conteúdo de uma página web. O HTML usa tags para especificar onde certas estruturas começam e terminam. Estas tags são conjuntos de caracteres não encontrados no idioma Inglês para que o conteúdo e a estrutura possam ser diferenciados.
        </details>
        <details>
        <summary>

        **O que é um elemento HTML?**

        </summary>
        Um elemento HTML é uma peça do website que é marcado por uma tag inicial e algumas vezes encerrado por uma tag final. O elemento também inclui o conteúdo entre as tags. Por exemplo:
        <img src="https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png" style="width:500px">
        </details>
        <details>
        <summary>

        **O que é uma tag HTML?**

        </summary>
        Uma tag HTML é um conjunto especial de caracteres que instrui a máquina onde está o começo e fim de um elemento HTML e de que tipo ele é.
        </details>
        <details>
        <summary>

        **Por que você precisa tags início e fim?**

        </summary>

        Você precisa das tags início e fim para muitos elements HTML porque elas marcam onde a estrutura começar e termina. Você não precisa que todo o texto na sua página web seja um título.

        </details>
        </div>

        # Cabeçalhos

        Você deve ter notado no último nível que tudo que você digita no editor é colocado junto. Para diferenciar entre estas diferentes partes nós usamos elementos HTML para marcar as variadas partes de uma página web. Na sua investigação com o inspetor você se deparou com algo que criou cabeçalhos?

        # Faça Isto

        -   Faça seu cabeçalho "Animais" se destacar usando o elemento cabeçalho `<h1>`.
      CSDU2 - Local Images: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>

        **Como faço para adicionar imagens?**

        </summary>
        a tag '<img>' permite visualizar imagens em sua página web.  exemplo de <br><br>

        :

        <pre>&lt;img src="dog.png" alt="dog jumping"/&gt;</pre><br><br>

        Para dizer ao browser qual arquivo usar, informações extras, um **atributo** é adicionado na tag \<img> dentro dos colchetes. O atributo 'src' significa **s**ou**rc**e (fonte) e define o nome da imagem. Nomes de arquivos de imagem incluem extensões que dizem ao computador qual o tipo de imagem está sendo usada. Extensões comuns são. jpg,. jpeg,. png. <br><br>

        Além do atributo src, elementos de imagem também tem o atributo 'alt' que descreva a imagem. Isto é importante, no caso a imagem não carregar ou para pessoas que têm problemas com de visão. <br><br>

        A tag '<img>' é um exemplo de um **elemento void** porque ele inicia e fecha em uma tag. Para fazer isso colocamos o '/' que normalmente vai no fim da tag de imagem.

        </details>
        <details>
        <summary>

        **O que é uma tag void?**

        </summary>
        'A tag <img>' é um exemplo de um **elementos void** porque ele inicia e fecha em uma tag . Para fazer isso colocamos o '/' que normalmente vai no fim da tag de imagem. Tags void não precisa de uma tag de fechamento porque não há nenhum conteúdo de texto que pode ser colocado dentro delas. O conteúdo que aparece na tela é definido através dos atributos desse tipo de tags.
        </details>
        <details>
        <summary>

        **Por uma tag de imagem não tem fechamento?**

        </summary>
        Uma tag de imagem é uma tag void e tags void não precisa de fechamento porque não há nenhum conteúdo de texto que deve ser colocado nessas tags. O conteúdo que aparece na tela é definido através dos atributos das tags.
        </details>
        <details>
        <summary>

        **O que é um atributo?**

        </summary>

        Atributos são informações extras incluídas em uma tag. Atributos têm nomes e valores. O nome diz que tipo de informação está sendo fornecido e em seguida, o valor para o atributo em questão.

        Por exemplo, tags \<img> tem dois atributos, src e alt. src especifica o nome do arquivo de imagem e alt informa ao navegador em texto legível o que é a imagem.

        </details>
        </div>

        # imagens

        Começamos uma página web Cachorro vs Gato para você. A imagem do cão já foi adicionada em baixo a página da web. Use uma tag de imagem para adicionar a imagem de cat.jpeg na página embaixo do cabeçalho do gato.
      CSDU2 - Missing Home Link: |-
        # Link Inicial ausente

        Copiando seus hiperlinks para todas as suas páginas permitiu que você chegasse à maioria das páginas em seu site de qualquer outra página. Um hiperlink está faltando - o único para levá-lo à sua página inicial (index.html).

        **Adicione um hiperlink à sua página inicial a partir de todas as páginas, até mesmo da sua página inicial.** Adicionando isto à sua página inicial manterá seu cabeçalho de navegação consistente em todas as páginas.
      CSDU6L06 - lists and colorLeds - set color: |-
        # Adicionando alguma cor

        Você provavelmente notou que quando usou `colorLeds [0].on()` no último nível, os LEDs ficaram brancos. Se você não especificar uma cor, `on()` ligará todas as três partes do LED (vermelho, verde e azul) para produzir o branco. Você verá um novo comando na caixa de ferramentas chamado `colorLeds [0].color ()` que permite especificar uma cor, como um tipo texto como "Azul" ou um valor RGB usando o comando color `color()`.

        # Faça isso

        Use o comando `.color()` para configurar cada um dos LEDs de cor para uma cor diferente.
      Calc Circles of Eval .1: |-
        Você vai escrever um tipo de código chamado
        Bloco de cálculo, porque cada bloco de código retorna um único valor.
        Altere o ??? nesse código para que o bloco retorne 5.
      Calc Circles of Eval .2: |-
        Esse bloco de cálculo é uma função
        de multiplicação que recebe dois números e retorna o produto desses números.
        Edite esse bloco para que ele multiplique 2 \* 5
      Calc Circles of Eval .3: |-
        Esta é uma função de Adição que
        usa dois números e retorna sua soma. Use este bloco Adição para somar 3

        -   6\.
      Calc Circles of Eval .4: |-
        Temos aqui um bloco de adição aninhado
        dentro de um bloco de multiplicação. Complete esse código para que ele multiplique 3 por (4

        -   1\)
      Calc Circles of Eval 2: |-
        Use um bloco de multiplicação para completar
        esse código.
      Calc Circles of Eval 3: |-
        Complete os blocos de cálculo para corresponder
        a essa instrução.
      Calc Circles of Eval 4: |-
        Nesse código estão faltando alguns blocos de
        cálculo - lembre-se de colocar tudo na ordem correta.
      Calc Circles of Eval 7: |-
        Complete os blocos de cálculo para corresponder
        a essa instrução.
      Calc Circles of Eval 8: |-
        Complete os blocos de cálculo para corresponder
        a essa instrução.
      Calc Circles of Eval 9: |-
        Complete os blocos de cálculo para corresponder
        a essa instrução.
      Calc Circles of Eval Free Play: |-
        Atividade livre: tente usar um bloco de cálculo
        para escrever algumas equações você mesmo. Como aninhar os blocos de
        formas diferentes interfere no cálculo?
      Calc Rocket 2: |-
        Excelente, vamos fazer mais um exemplo antes de escrever
        a função - qual deve ser a altura do foguete após 30 segundos?
      CoureE_HOC 2018 Level_7a: Você encontrou as ruínas subaquáticas. No arenito, procure um **baú** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) que contém tesouro de **prismarinho** (<https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png>).
      Course 4 Artist 13: |-
        Ainda jogando?  Temos aqui uma tela em branco
        na qual você pode projetar o que quiser!
      Course 4 Artist 6: |-
        Complete o código para desenhar esses três triângulos
        equiláteros.
      Course 4 Artist 8: |-
        Desenhe esse sol repetindo todo este bloco de código
        várias vezes.
      Course 4 Artist 8a: |-
        Lembra-se dessa forma? Agora vamos deixar
        você construí-la sem dar nenhum bloco inicial!
      Course 4 Artist Binary 1a: |-
        Temos aqui uma função que recebe uma string
        binária de 1's e 0's e instrui o artista a mover-se da esquerda para
        a direita, de cima para baixo. O artista vai preencher os quadrados nos quais vir um 1 e ignorar
        os que tiverem um 0.\\r
        \\r
        Execute este código para ver como
        o artista usa números binários para desenhar este padrão.
      Course 4 Artist For Loops 13: |-
        Hmm, essas formas estão ficando cada vez
        maiores! Já não tínhamos resolvido esse problema com variáveis? Como
        podemos usar a variável contador para deixar os lados menores conforme a forma tem
        mais lados? Ao invés de avançar por uma quantidade definida, avance (100 /
        contador) pixels.
      Course 4 Artist For Loops 4: |-
        Use um laço "para" para desenhar esses quadrados.
        Eles começam com 15 pixels de comprimento, o maior tem 300 pixels de comprimento, e cada quadrado
        é 15 pixels maior que o anterior. Foi fornecida a maior parte do código
        de que você vai precisar - está faltando um bloco, qual?
      Course 4 Artist For Loops 6: |-
        Atividade livre: tente usar um laço "para"
        para desenhar um padrão crescente de formas com seu próprio design.
      Course 4 Artist For Loops 6a: |-
        Faça três pequenas alterações no
        código do último nível para conseguir isso!
      Course 4 Artist For Loops 8a: |-
        Apenas uma pequena alteração no código
        da última imagem pode criar esta imagem. Você consegue descobrir qual é essa
        alteração?
      Course 4 Artist For Loops Challenge_a: |-
        Você consegue descobrir como
        usar todas as coisas que você aprendeu para criar esta imagem?\\r
        \\r
        Precisa de uma
        dica? Clique aqui.
      Course 4 Artist Vars 3: "Temos aqui um laço que desenha um quadrado, mas\nalgo está faltando. Você pode consertá-lo para que ele use a variável \"comprimento\"\npara descobrir qual deve ser o tamanho de cada lado? "
      Course 4 Bee 7: |-
        Use tudo o que você aprendeu até agora para coletar
        todo o néctar. A flor roxa pode ter 1, 2 ou 3 néctares.
      Course 4 Bee For Loops 11: |-
        O que está errado nesse laço? Veja se
        você consegue arrumá-lo e fazer a abelha coletar todo o néctar.
      Course 4 Bee Params 1: |-
        Escreva uma sequência para coletar todo o
        néctar usando a função "obtenha 3 néctares", que vira, move-se para coletar o néctar e
        então retorna à posição original.
      Course 4 Play Lab Params 4: |-
        Aqui temos uma função chamada "patrulhe".
        \\r
        \\r
        Edite-a para mover o gato 400 pixels para cima, e então 400 pixels para baixo.
      Course 4 Play Lab Params 8: |-
        Use o bloco "quando o personagem tocar"
        para enviar o cão de volta para a parte superior esquerda SOMENTE se ele tocar em qualquer outro personagem.
      Course 4 Play Lab Vars 2: |-
        A corrida do último desafio não foi
        muito justa! Altere a variável "velocidade\_cão" para garantir que você possa coletar mais
        bandeiras do que o gato. O primeiro a coletar 10 bandeiras vence!
      Course 4 Play Labs For Loops 1: |-
        Vamos fazer o cão falar todos
        os números de 1 a 100. Use um laço "para" e o bloco "contador" para que ele fale o
        a variável "contador" toda vez que o laço for executado.
      Course 4 Playlab For Loops 5b: |-
        Ajuste o intervalo nestes laços "para"
        para que os dois personagens terminem exatamente no mesmo lugar.
      Course 4 SCFP 1: |-
        Crie uma função com parâmetros que permitem
        ao artista saltar para trás e para frente por x pixels, e também para cima e para baixo
        por y pixels (usando números positivos e negativos).
      Course 4 SCVP 1: |-
        Crie uma função com parâmetros que permitem
        ao artista saltar para trás e para frente por x pixels, e também para cima e para baixo
        por y pixels (usando números positivos e negativos).
      CourseD_Dance_Party_01: |-
        “Vamos fazer uma festa dançante!”

        Arraste o bloco 'criar novo' para a área de trabalho, conectando-o dentro do bloco de 'configuração' para criar seu(sua) primeiro(a) dançarino(a).

        -   -   Você também pode clicar na lâmpada à esquerda caso queira mais informações ou desafios adicionais.\*
      CourseD_Dance_Party_02: |-
        Faça esse alce entrar na dança!

        Arraste o bloco <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> para a área de trabalho. Conecte o bloco abaixo do bloco <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. O(a) dançarino(a) deve iniciar um novo movimento após o quarto compasso.

        Os **compassos** são usados para contar o tempo musical. Neste tutorial, cada compasso tem quatro batidas.
      CourseD_Dance_Party_03: |-
        _Agora vamos curtir!_

        Adicione um bloco <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> à sua área de trabalho. Faça o(a) dançarino(a) iniciar um novo movimento após seis compassos.
      CourseD_Dance_Party_04: |-
        _Esta dança está precisando de brilho!_

        Procure um novo bloco em sua caixa de ferramentas que adicione um efeito em segundo plano, atrás do(a) dançarino(a). Veja os efeitos mudando em sincronia com a música!
      CourseD_Dance_Party_05: |-
        Use outro bloco novo para fazer o(a) dançarino(a) mudar seus movimentos a cada dois **compassos**!

        \*Ao clicar em '(Próximo)', '(Anterior)', ou '(Aleatório)', o dançarino vai executar um movimento diferente cada vez que o código for executado.
      CourseD_Dance_Party_06: |-
        _Precisamos de mais dançarinos!_

        Crie um(a) dançarino(a) de apoio intitulado 'backup\_dancer1' para dançar com o gato.
      CourseD_Dance_Party_08: |-
        Cada dançarino(a) tem um conjunto de _propriedades_ que controlam sua aparência.

        Você pode fazer parecer que o(a) dançarino(a) está em segundo plano diminuindo o seu _tamanho_. É possível deixar os dois dançarinos de apoio do mesmo tamanho?
      CourseD_Dance_Party_09: |-
        Os dançarinos têm uma propriedade de "tonalidade" que permite adicionar uma camada de cor. Tente alterar a tonalidade de um de seus dançarinos.
        \*As tonalidades vão mesclar a cor que você escolher com as cores do(a) dançarino(a).
      CourseD_Dance_Party_10: |-
        Agora sabemos como alterar as propriedades de um(a) dançarino(a). Nós também podemos fazer com que as mesmas propriedades respondam automaticamente à música usando este bloco:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Este programa utiliza o volume do "baixo" da música (os sons graves) para controlar a altura de um dançarino. Você pode fazer o outro dançarino responder à música também?
      CourseD_Dance_Party_11: |-
        O bloco <xml><block type="Dancelab_whenKey"></block></xml> permite executar o código quando a seta para cima for selecionada.

        Você pode mudar o passo de dança, alterar as propriedades de um(a) dançarino(a) ou fazer um movimento rápido apenas uma vez. Use a criatividade e procure novos blocos!
      CourseD_Dance_Party_11_5: |-
        Veja este bloco:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Agora você pode criar um grupo de dançarinos de uma só vez!

        Tente usar alguns dos blocos "todos os patos" para escrever o código que fará todos os patos dançarem juntos.
      CourseD_Dance_Party_11b: É hora do concurso de dança! O gato dança dab quando você pressiona a tecla de seta para a esquerda. Faça o robô dançar drop pressionando a tecla da seta para a direita.
      CourseD_Dance_Party_12: Entre no ritmo! Crie sua própria dança para compartilhar com seus amigos.
      CourseE_HOC 2018 Level_1: Você precisa de suprimentos para a viagem adiante. Colete um **barco** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) de um **baú** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      CourseE_HOC 2018 Level_10: Há uma **lula** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png) escondida em algum lugar deste Monumento Oceânico. Você consegue encontrá-la?
      CourseE_HOC 2018 Level_11: Construa uma parede de **prismarinho** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) em volta do concreto preto. Isso ativará o **canal** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) e concluirá seu desafio.
      CourseE_HOC 2018 Level_2: Usar um barco é bem melhor do que nadar no mar aberto. Vá até o final do cais e suba a bordo.
      CourseE_HOC 2018 Level_3: Pegue os remos e controle o barco pelo mar aberto para pegar o **bacalhau** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      CourseE_HOC 2018 Level_4: Use o bacalhau para alimentar o **golfinho** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Use um bloco de repetição para atravessar o oceano mais rápido.
      CourseE_HOC 2018 Level_5: Há uma **concha de náutilo** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png) escondida em algum lugar. Explore o naufrágio para encontrar o **baú** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      CourseE_HOC 2018 Level_6: Aqui está congelando! Pegue um **salmão** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) no caminho até as ruínas subaquáticas.
      CourseE_HOC 2018 Level_7a: Você encontrou as ruínas subaquáticas. No arenito, procure um **baú** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) que contém tesouro de **prismarinho** (<https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png>).
      CourseE_HOC 2018 Level_8: Primeiro icebergs, e agora lava? Sobreviva nesta ilha vulcânica e encontre o **salmão** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) no recife de coral.
      CourseE_HOC 2018 Level_9b: Você conseguiu chegar ao recife de corais. Agora, procure o **Coração do Mar** [](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png). Use os corais azul e vermelho para chegar no **baú** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png) do tesouro.
      CourseF_PlayLab_vars2: |-
        A corrida do último desafio não foi
        muito justa! Altere a variável "velocidade\_cão" para garantir que você possa coletar mais
        bandeiras do que o gato. O primeiro a coletar 10 bandeiras vence!
      Craft Aquatic - allthethings: Chegue ao Farol do Mar.
      Dance_Party_01: |-
        “Vamos fazer uma festa dançante!”

        Arraste o bloco 'criar novo' para a área de trabalho, conectando-o dentro do bloco de 'configuração' para criar seu(sua) primeiro(a) dançarino(a).

        -   -   Você também pode clicar na lâmpada à esquerda caso queira mais informações ou desafios adicionais.\*
      Dance_Party_01_low: |-
        “Vamos fazer uma festa dançante!”

        Arraste o bloco 'criar novo' para a área de trabalho, conectando-o dentro do bloco de 'configuração' para criar seu(sua) primeiro(a) dançarino(a).

        -   -   Você também pode clicar na lâmpada à esquerda caso queira mais informações ou desafios adicionais.\*
      Dance_Party_02: |-
        Faça esse alce entrar na dança!

        Arraste o bloco <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> para a área de trabalho. Conecte o bloco abaixo do bloco <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. O(a) dançarino(a) deve iniciar um novo movimento após o quarto compasso.

        Os **compassos** são usados para contar o tempo musical. Neste tutorial, cada compasso tem quatro batidas.
      Dance_Party_03: |-
        _Agora vamos curtir!_

        Adicione um bloco <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> à sua área de trabalho. Faça o(a) dançarino(a) iniciar um novo movimento após seis compassos.
      Dance_Party_04: |-
        _Esta dança está precisando de brilho!_

        Procure um novo bloco em sua caixa de ferramentas que adicione um efeito em segundo plano, atrás do(a) dançarino(a). Veja os efeitos mudando em sincronia com a música!
      Dance_Party_05: |-
        Use outro bloco novo para fazer o(a) dançarino(a) mudar seus movimentos a cada dois **compassos**!

        \*Ao clicar em '(Próximo)', '(Anterior)', ou '(Aleatório)', o dançarino vai executar um movimento diferente cada vez que o código for executado.
      Dance_Party_06: |-
        _Precisamos de mais dançarinos!_

        Crie um(a) dançarino(a) de apoio intitulado 'backup\_dancer1' para dançar com o gato.
      Dance_Party_08: |-
        Cada dançarino(a) tem um conjunto de _propriedades_ que controlam sua aparência.

        Você pode fazer parecer que o(a) dançarino(a) está em segundo plano diminuindo o seu _tamanho_. É possível deixar os dois dançarinos de apoio do mesmo tamanho?
      Dance_Party_09: |-
        Os dançarinos têm uma propriedade de "tonalidade" que permite adicionar uma camada de cor. Tente alterar a tonalidade de um de seus dançarinos.
        \*As tonalidades vão mesclar a cor que você escolher com as cores do(a) dançarino(a).
      Dance_Party_10: |-
        Agora sabemos como alterar as propriedades de um(a) dançarino(a). Nós também podemos fazer com que as mesmas propriedades respondam automaticamente à música usando este bloco:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Este programa utiliza o volume do "baixo" da música (os sons graves) para controlar a altura de um dançarino. Você pode fazer o outro dançarino responder à música também?
      Dance_Party_11.5_test: |-
        Veja este bloco:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Agora você pode criar um grupo de dançarinos de uma só vez!

        Tente usar alguns dos blocos "todos os patos" para escrever o código que fará todos os patos dançarem juntos.
      Dance_Party_11: |-
        O bloco <xml><block type="Dancelab_whenKey"></block></xml> permite executar o código quando a seta para cima for selecionada.

        Você pode mudar o passo de dança, alterar as propriedades de um(a) dançarino(a) ou fazer um movimento rápido apenas uma vez. Use a criatividade e procure novos blocos!
      Dance_Party_11_5: |-
        Veja este bloco:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Agora você pode criar um grupo de dançarinos de uma só vez!

        Tente usar alguns dos blocos "todos os patos" para escrever o código que fará todos os patos dançarem juntos.
      Dance_Party_11b: É hora do concurso de dança! O gato dança dab quando você pressiona a tecla de seta para a esquerda. Faça o robô dançar drop pressionando a tecla da seta para a direita.
      Dance_Party_12: Entre no ritmo! Crie sua própria dança para compartilhar com seus amigos.
      Dance_Party_extras_battle: |-
        # Equipes de dança

        Aqui está uma disputa de dança entre duas equipes. As teclas de seta controlam um dos dançarinos, e as teclas "w, a, s, d" controlam o outro. Divirta-se em uma disputa de dança com um amigo e depois tente melhorar essa dança.

        -   Adicione mais teclas para controlar as danças
        -   Faça com que os dançarinos auxiliares também respondam quando as teclas são pressionadas
        -   Alterne o dançarino a cada 4 compassos, definindo sua visibilidade
      Dance_Party_extras_every_beat: |-
        # Semínimas

        A maioria de nossas danças usou compassos inteiros, mas cada compasso é composto de 4 semínimas. Esta dança usa `a cada 0,25 compassos` para fazer o dançarino aplaudir a cada semínima.

        Esta dança também usa um bloco _condicional_ para controlar quando o bloco \`a cada 0,25 compassos' pode mudar a dança. Tente mudar os números no bloco condicional para ver como isso muda a dança.

        -   Experimente outras durações de notas (como 0,5 para uma mínima ou 0,125 para uma colcheia).
        -   Adicione alguns eventos `após o compasso`.
        -   Troque "compassos" por "segundos" e tente sincronizar suas danças dessa maneira.
      Dance_Party_extras_layout: |-
        # Vamos entrar em formação!

        Confira esta dança que usa o bloco `layout` para mudar a formação dos dançarinos auxiliares durante a dança. Tente um destes ides para estendê-la:

        -   Crie um segundo grupo de dançarinos em um layout diferente
        -   Mude o layout quando uma tecla é pressionada
        -   Altere uma propriedade quando os dançarinos mudam de formação
      Dance_Party_extras_on_beat: |-
        # Grave, médio e agudo

        Esta dança usa eventos de "pico" para acionar o código quando diferentes partes da música ficam altas. Tente mexer com músicas diferentes para ver como eles mudam a dança.
      Dance_Party_extras_speed: |-
        # Acelerar, retardar

        Esta dança final usa o bloco `definir velocidade` para controlar a rapidez com que cada dançarino se move. Tente experimentar diferentes velocidades durante diferentes pontos na música. Sinta-se à vontade para continuar mexendo nessa dança ou retornar a qualquer uma das danças anteriores para torná-las ainda mais legais.
      Dance_Party_extras_visible: |-
        # Onde eles foram?

        Esta dança mostra e oculta dois grupos diferentes de dançarinos. Confira e tente adicionar seu próprio toque.

        -   Adicionar outro grupo de dançarinos
        -   Mostrar e ocultar dançarinos usando as teclas de seta
        -   Ocultar todos os dançarinos e alternar para um efeito de fundo estimulante
      Eval Booleans Free Play: |-
        Atividade livre: experimente criar algo
        você mesmo usando booleanos.
      Eval Design Recipe Free Play: |-
        Atividade livre: use a receita de design
        para criar algumas funções com seu próprio design
      Eval Strings Images .1: |-
        Até agora, lidamos com um único
        tipo de dado, os números. Outro tipo de dados é a string, que é uma combinação
        de letras, números, ou outros caracteres envolvidos entre aspas. Execute a
        string "Olá, mundo!" e veja o que acontece.
      Eval Strings Images 2: |-
        Atividade livre: todos os blocos de cálculo estão identificados por cores
        para que você saiba que tipo de dados eles retornam e que tipo de dados eles precisam para seus
        parâmetros. O último parâmetro da função triângulo recebe uma string que
        controla sua cor - experimente algumas cores diferentes para ver o que acontece.
      Eval Strings Images 6: |-
        Use a função sobreposição para colocar uma estrela
        amarela com raio de 75 pixels em cima de um quadrado azul com 150 pixels de comprimento.
      Eval Strings Images Free Play: |-
        Atividade livre: explore os blocos disponíveis
        para criar algo interessante. Lembre-se de compartilhar suas criações favoritas.
      Fish Tank 5-validated_simple: O peixe quer um amigo.   Adicione um novo sprite.
      Function intro Ryan: |-
        A **função** chamada 'construir ponte' está em sua área de trabalho. Todos os códigos de que você precisa para atravessar o rio estão corretos! \\r
         \\r
        Fixe o bloco verde pequeno duas vezes em sua área de trabalho para corrigir o caminho e levar o jogador {currentPlayerName} até a Tocha de Redstone [redstone_torch].
      Function intro Ryan_2019: |-
        A **função** chamada 'construir ponte' está em sua área de trabalho. Todos os códigos de que você precisa para atravessar o rio estão corretos! \\r
         \\r
        Fixe o bloco verde pequeno duas vezes em sua área de trabalho para corrigir o caminho e levar o jogador {currentPlayerName} até a Tocha de Redstone [redstone_torch].
      HOC 2018 Level_1: Você precisa de suprimentos para a viagem adiante. Colete um **barco** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) de um **baú** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      HOC 2018 Level_10: Há uma **lula** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png) escondida em algum lugar deste Monumento Oceânico. Você consegue encontrá-la?
      HOC 2018 Level_11: Construa uma parede de **prismarinho** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) em volta do concreto preto. Isso ativará o **canal** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) e concluirá seu desafio.
      HOC 2018 Level_12: Parabéns! O mundo aquático aberto aguarda você. Construa um recife de coral. Um vulcão. Um naufrágio. Você decide.
      HOC 2018 Level_2: Usar um barco é bem melhor do que nadar no mar aberto. Vá até o final do cais e suba a bordo.
      HOC 2018 Level_3: Pegue os remos e controle o barco pelo mar aberto para pegar o **bacalhau** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      HOC 2018 Level_4: Use o bacalhau para alimentar o **golfinho** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Use um bloco de repetição para atravessar o oceano mais rápido.
      HOC 2018 Level_5: Há uma **concha de náutilo** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png) escondida em algum lugar. Explore o naufrágio para encontrar o **baú** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      HOC 2018 Level_6: Aqui está congelando! Pegue um **salmão** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) no caminho até as ruínas subaquáticas.
      HOC 2018 Level_7a: Você encontrou as ruínas subaquáticas. No arenito, procure um **baú** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) que contém tesouro de **prismarinho** (<https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png>).
      HOC 2018 Level_8: Primeiro icebergs, e agora lava? Sobreviva nesta ilha vulcânica e encontre o **salmão** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) no recife de coral.
      HOC 2018 Level_9b: Você conseguiu chegar ao recife de corais. Agora, procure o **Coração do Mar** [](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png). Use os corais azul e vermelho para chegar no **baú** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png) do tesouro.
      HOC Dance 4_draft: |-
        Use outro bloco novo para fazer o(a) dançarino(a) mudar seus movimentos a cada dois **compassos**!

        \*Ao clicar em '(Próximo)', '(Anterior)', ou '(Aleatório)', o dançarino vai executar um movimento diferente cada vez que o código for executado.
      HOC Dance 5_draft: |-
        _Precisamos de mais dançarinos!_

        Crie um(a) dançarino(a) de apoio intitulado 'backup\_dancer1' para dançar com o gato.
      HOC Dance 9_draft: |-
        O bloco <xml><block type="Dancelab_whenKey"></block></xml> permite executar o código quando a seta para cima for selecionada.

        Você pode mudar o passo de dança, alterar as propriedades de um(a) dançarino(a) ou fazer um movimento rápido apenas uma vez. Use a criatividade e procure novos blocos!
      HOC Dance Freeplay: Entre no ritmo! Crie sua própria dança para compartilhar com seus amigos.
      HOC Dance Freeplay_draft: Entre no ritmo! Crie sua própria dança para compartilhar com seus amigos.
      HOC Dance Predraw: Entre no ritmo! Crie sua própria dança para compartilhar com seus amigos.
      Inspirational Artwork: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Atividade Livre - Inspiração**: Agora você aprendeu tudo o que precisa saber para criar um padrão como esse! \n\nSe essa imagem inspira você, tente fazer algo similar. Caso contrário, crie algo você mesmo. \n\nNota: Nós usamos o bloco `definir alpha` para fazer as \"pétalas\" desaparecerem para fora."
      'Introduction to Conditionals: Boolean Expressions': |-
        ### Pontos para prestar atenção:

        1.  O que é uma _Expressão Booleana?_
        2.  Por que ela é chamada "Booleana"?
        3.  Esta é uma expressão legal? `10 > 25`?
      'Introduction to Conditionals: Boolean Expressions_2018': |-
        ### Pontos para prestar atenção:

        1.  O que é uma _Expressão Booleana?_
        2.  Por que ela é chamada "Booleana"?
        3.  Esta é uma expressão legal? `10 > 25`?
      'Introduction to Conditionals: Boolean Expressions_2019': |-
        ### Pontos para prestar atenção:

        1.  O que é uma _Expressão Booleana?_
        2.  Por que ela é chamada "Booleana"?
        3.  Esta é uma expressão legal? `10 > 25`?
      K-1 Bee Loops 2: |-
        Use um laço "repita" para mover e então coletar o néctar e
        produzir mel!
      K-1 Bee Loops 3: |-
        Use três laços "repita" para coletar o néctar
        e
        fabricar o mel!
      K-1 Bee Loops 4: |-
        Use laços "repita" para obter néctar, produzir
        mel e
        para mover!
      K-1 Bee Loops 5: Use laços "repita" para obter néctar e mel!
      K-1 Bee Loops 6: Use um laço "repita" para coletar néctar, fabricar mel, e para mover!
      K-1 Maze Loops 11: |-
        Leve-me até o porco!\\r
        O laço "repita" vai
        facilitar as coisas.
      K-1 Maze Loops 12: |-
        Leve-me até o porco!\\r
        O laço "repita" vai
        facilitar as coisas.
      K-1 Maze Loops 2: Use o bloco "repita" para me levar até o porco!
      K-1 Maze Loops 8: Use o laço "repita" para me levar até o porco.
      KIKI GLJ Test Response: Olhe cuidadosamente para o código abaixo. O que você acha que acontecerá com o avião quando você clicar "Executar"?
      MC Agent Freeplay: "**Jogo Livre:** Agora é com você! Use o código do Agent para ajudá-lo a explorar este mundo."
      MC_HOC_2017 Agent Test: |-
        Clique em "Executar" para mover o jogador usando as **teclas de seta**. \\r
        \\r
        Para passar este nível, você precisa chegar até a porta e abri-la (usando a **barra de espaço**) para que você consiga entrar no quadrado laranja.
      MC_HOC_2017_01: |-
        Clique em "Executar" para mover o jogador usando as **teclas de seta**. \\r
        \\r
        Para passar este nível, você precisa chegar até a porta e abri-la (usando a **barra de espaço**) para que você consiga entrar no quadrado laranja.
      MC_HOC_2017_01_Cole: Você precisa coletar todas as ferramentas nesta jornada. Movimente-se usando as **teclas de seta** e chegue até o baú no caminho para vencer
      MC_HOC_2017_01_Kiki: 'Para jogar este nível, clique no botão laranja "Executar" sob o espaço de jogo, então mova o jogador usando as **teclas de seta**.  '
      MC_HOC_2017_01_RETRY: "{currentPlayerName} está preso dentro da casa, mas o Agent está aqui para ajudar!  \\\\r\n \\\\r\n   \\\\r\nFixe um bloco 'mover para a frente' no bloco 'ao rodar' na área de trabalho para levar o Agent até a placa de pressão [PressurePlate_Up], então pressione \"Executar\" e use as teclas de seta para mover o jogador {currentPlayerName} para fora da casa para coletar o **baú** [chest].  "
      MC_HOC_2017_01_RETRY_2019: "{currentPlayerName} está preso dentro da casa, mas o Agent está aqui para ajudar!  \\\\r\n \\\\r\n   \\\\r\nFixe um bloco 'mover para a frente' no bloco 'ao rodar' na área de trabalho para levar o Agent até a placa de pressão [PressurePlate_Up], então pressione \"Executar\" e use as teclas de seta para mover o jogador {currentPlayerName} para fora da casa para coletar o **baú** [chest].  "
      MC_HOC_2017_02: O jogador precisa entrar no bosque secreto. Ajude o Agent a abrir o portão escrevendo um código para levá-lo até a placa de pressão.
      MC_HOC_2017_02_Cole: "{currentPlayerName} entrou em uma aventura! Para ajudar, pegue o **mapa** [map_empty] atrás da porta trancada à direita. \\\\r\n \\\\r\nFixe o código na área de trabalho para mover o Agent até a placa de pressão [PressurePlate_Up] para que o jogador {currentPlayerName} consiga passar. "
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName} entrou em uma aventura! Para ajudar, pegue o **mapa** [map_empty] atrás da porta trancada à direita. \\\\r\n \\\\r\nFixe o código na área de trabalho para mover o Agent até a placa de pressão [PressurePlate_Up] para que o jogador {currentPlayerName} consiga passar. "
      MC_HOC_2017_02_Kiki: |-
        O jogador entrou em uma aventura, mas primeiro ele tem que conseguir a tocha que está escondida do outro lado da porta trancada. \\r
        \\r
        Programe o Agent para mover-se parar frente duas vezes até o caminho branco e chegar até a placa de pressão para que ele possa abrir a porta para o jogador.
      MC_HOC_2017_02_Will: |-
        Para concluir este nível, o jogador precisa chegar até o quadrado laranja dentro do Bosque Secreto, que está atrás da porta trancada. \\r
        \\r
        O código na área de trabalho fará com que o Agent mova-se para frente duas vezes para chegar até a placa de pressão e abrir a porta para o Alex ou o Steve.
      MC_HOC_2017_03_Cole: "{currentPlayerName} continua na aventura e precisa da **bússola** [compass] para se preparar para a viagem. \\\\r\n   \\\\r\nUse o código do Agent para abrir o portão. "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} continua na aventura e precisa da **bússola** [compass] para se preparar para a viagem. \\\\r\n   \\\\r\nUse o código do Agent para abrir o portão. "
      MC_HOC_2017_03_Kiki: |-
        A aventura do jogador vai começar atrás da porta fechada, no Bosque Secreto! \\r
        \\r
        \\r
        Ajude o Agent a abrir a porta escrevendo um código para levá-lo até a placa de pressão.
      MC_HOC_2017_04: Altere o ciclo do último enigma para ajudar o Agent a trilhar um caminho sobre a parte mais larga deste rio.
      MC_HOC_2017_04POINT5_Cole: "Você conseguiu sair do pântano! Agora, leve o jogador com segurança para a quadrado laranja. \n\nAjude o Agent a liberar o caminho encontrando um padrão simples e usando ciclos para atravessar as duas primeiras placas de pressão."
      MC_HOC_2017_04POINT5_RYAN: |-
        Você conseguiu chegar até o outro lado! \\r
        \\r
        Agora, leve o jogador {currentPlayerName} em segurança pelo labirinto para coletar o **machado** [diamond_axe]\\r
      MC_HOC_2017_04POINT5_RYAN_2019: |-
        Você conseguiu chegar até o outro lado! \\r
        \\r
        Agora, leve o jogador {currentPlayerName} em segurança pelo labirinto para coletar o **machado** [diamond_axe]\\r
      MC_HOC_2017_04_Cole: "O Agent pode mover-se pela água! \\\\r\n \\\\r\nUse um ciclo 'repetir' para resolver este enigma e ajudar {currentPlayerName} a chegar até o **balde** [bucket_empty] atrás da porta. "
      MC_HOC_2017_04_Cole_2019: "O Agent pode mover-se pela água! \\\\r\n \\\\r\nUse um ciclo 'repetir' para resolver este enigma e ajudar {currentPlayerName} a chegar até o **balde** [bucket_empty] atrás da porta. "
      MC_HOC_2017_04_Kiki: |-
        A entrada para o Bosque Secreto levou a este belo Oásis! Para passar deste nível, o jogador precisa chegar até o quadrado laranja na cabana. \\r
        \\r
        Use um ciclo 'repetir' para ajudar o Agent a percorrer todo o caminho até a placa de pressão, que abre a porta da cabana.
      MC_HOC_2017_05: "Os ciclos nem sempre são úteis. \n\nEstes cactos não estão crescendo em um padrão óbvio, então um ciclo não os eliminaria corretamente. Em vez disso, demos a você uma função chamada 'destruir e mover' que fará o trabalho duro toda vez que o Agent encontrar um obstáculo no caminho."
      MC_HOC_2017_05_Cole: |-
        Ah não, a ponte está interditada! \\r
        \\r
        Use o código do Agent para reconstruir a ponte usando o bloco 'colocar' para que {currentPlayerName} consiga pegar a **pá** [diamond_shovel].
      MC_HOC_2017_05_Cole_2019: |-
        Ah não, a ponte está interditada! \\r
        \\r
        Use o código do Agent para reconstruir a ponte usando o bloco 'colocar' para que {currentPlayerName} consiga pegar a **pá** [diamond_shovel].
      MC_HOC_2017_05_Josh: |-
        Ah não, a ponte está interditada! \\r
        \\r
        Use o código do Agent para reconstruir a ponte usando o bloco 'colocar' para que {currentPlayerName} consiga pegar a **pá**.
      MC_HOC_2017_05_Kiki: |-
        É hora do jogador sair do Bosque Secreto e continuar a aventura, mas a ponte está interditada! \\r
        \\r
        Ajude o Agent a reconstruir a ponte, depois vá até a tábua de madeira para que o jogador consiga chegar até o quadrado laranja.
      MC_HOC_2017_06_Cole: "Outro rio, mas este é bem mais largo! \\\\r\n \\\\r\nCorrija esse código para ajudar o Agent a construir uma ponte para que {currentPlayerName} consiga chegar ate a **picareta** [diamond_pickaxe]. "
      MC_HOC_2017_06_Cole_2019: "Outro rio, mas este é bem mais largo! \\\\r\n \\\\r\nCorrija esse código para ajudar o Agent a construir uma ponte para que {currentPlayerName} consiga chegar ate a **picareta** [diamond_pickaxe]. "
      MC_HOC_2017_06_Josh: |-
        Outro rio, mas este é bem mais largo! \\r
        \\r
        Corrija este código para ajudar o Agent a construir uma ponte sobre este rio.
      MC_HOC_2017_06_Kiki: |-
        Outro rio, mas este é bem mais largo! \\r
        \\r
        Corrija este código para ajudar o Agent a construir uma ponte sobre a água.
      MC_HOC_2017_07_Cole: "Tem gelo no caminho! \\\\r\n \\\\r\nA função 'abrir caminho' pode ajudá-lo a destruir o gelo e levar {currentPlayerName} até o Carrinho de Minas [minecart_normal]! "
      MC_HOC_2017_07_Cole_2019: "Tem gelo no caminho! \\\\r\n \\\\r\nA função 'abrir caminho' pode ajudá-lo a destruir o gelo e levar {currentPlayerName} até o Carrinho de Minas [minecart_normal]! "
      MC_HOC_2017_07_Kiki: "O ciclos não são o único modo de repetir códigos! \\\\r\n\\\\r\nAqui, demos a você uma função chamada 'eliminar cactos' que fará o trabalho duro de eliminar três cactos toda vez que você usá-la. Use dois blocos 'eliminar cactos' para abrir o caminho até o quadrado laranja. "
      MC_HOC_2017_07a_Kiki: Agora, edite esse ciclo para ajudar o Agent a liberar o caminho até o quadrado laranja.
      MC_HOC_2017_08_Cole: |-
        Agora, em vez de destruir antes de mover-se, você precisará colocar um bloco. \\r
        \\r
        Altere a função fornecida para funcionar neste deserto.
      MC_HOC_2017_08_Kiki: |-
        Agora, em vez de destruir cactos, você precisará colocar pedras sobre a lava e, em seguida, destruir o arenito. \\r
        \\r
        Altere a função para funcionar neste nível.
      MC_HOC_2017_08_RY: "Agora, existem **DUAS** funções para escolher! \n\nUse essas funções para rapidamente construir uma ponte sobre a lava para {currentPlayerName}."
      MC_HOC_2017_08_Will: "Agora, existem **DUAS** funções para escolher! \n\nUse essas funções para rapidamente construir uma ponte sobre a lava para o jogador."
      MC_HOC_2017_09_Cole: Use as funções para ajudar o Agent a destruir os blocos gigantes de terra que estão bloqueando o caminho do jogador até a placa de pressão.
      MC_HOC_2017_09_Kiki: "Este código inicial não pode ser removido.\\\\r\n\\\\r\nAcrescente comandos para a função 'criar rastro' para que o programa na área de trabalho leve o Agent até a placa de pressão. "
      MC_HOC_2017_09_RS_CLONE: Corrija esta função para preencher os buracos, depois pise sobre a placa de pressão para abrir o caminho até a tocha.
      MC_HOC_2017_10_Cole: Use as funções para liberar o caminho até o carrinho de minas e entrar no Portal do Nether.
      MC_HOC_2017_10_Cole_old: Tente criar uma função desde o início que torne mais fácil para o Agent terminar este carrinho de minas e levar o jogador para a quadrado laranja.
      MC_HOC_2017_10_Kiki: Tente criar uma função desde o início que torne mais fácil para o Agent terminar este carrinho de minas e levar o jogador para a quadrado laranja.
      MC_HOC_2017_10_RETRY: "Você consegue ver a diferença entre as duas funções na área de trabalho? \\\\r\n \\\\r\nUse essas funções com outro código da caixa de ferramentas para liberar o caminho até o Carrinho de Minas e, em seguida, colete **Pederneira** [flint_and_steel]. \\\\r\n "
      MC_HOC_2017_10_RETRY_2019: "Você consegue ver a diferença entre as duas funções na área de trabalho? \\\\r\n \\\\r\nUse essas funções com outro código da caixa de ferramentas para liberar o caminho até o Carrinho de Minas e, em seguida, colete **Pederneira** [flint_and_steel]. \\\\r\n "
      MC_HOC_2017_10_RYAN: Tente criar funções desde o início que torne mais fácil para o Agent terminar este carrinho de minas e levar o jogador para a quadrado laranja.
      MC_HOC_2017_10_RYAN2: Tente criar funções desde o início que torne mais fácil para o Agent terminar este carrinho de minas e levar o jogador para a quadrado laranja.
      MC_HOC_2017_11_Kiki: Agora é com você! Veja o que você consegue criar em torno deste lago congelado.
      MC_HOC_2017_13_Cole: "**Jogo Livre:** Agora é com você! Use o código do Agent para ajudá-lo a explorar este mundo."
      MC_HOC_2017_4.5v2: "Você conseguiu sair do pântano! Agora, leve o jogador com segurança para a quadrado laranja. \n\nAjude o Agent a liberar o caminho encontrando um padrão simples e usando ciclos para atravessar as duas primeiras placas de pressão."
      MC_HOC_2017_Ali: 'Olhe as funções abaixo. Como pode você usá-las para evitar o Ghasts e ajudar {currentPlayerName} a chegar em segurança até o **Livro Encantado** [book_enchanted]?  '
      MC_HOC_2017_Ali_2019: 'Olhe as funções abaixo. Como pode você usá-las para evitar o Ghasts e ajudar {currentPlayerName} a chegar em segurança até o **Livro Encantado** [book_enchanted]?  '
      MC_HOC_2017_FP10x10: "**Jogo Livre:** Agora é com você! Você consegue se superar e coletar todos os diamantes neste nível? "
      MC_HOC_2017_FP10x10_RE: "**Jogo Livre:** Agora é com você! Você consegue se superar e coletar todos os diamantes neste nível? "
      MC_HOC_2017_FP20x20: "**Jogo Livre:** Agora é com você! Use o código do Agent para ajudá-lo a explorar este mundo."
      MC_HOC_2017_FP20x20_2019: "**Jogo Livre:** Agora é com você! Use o código do Agent para ajudá-lo a explorar este mundo."
      MC_HOC_2017_Ryan_03: |-
        Você sabia que pode colocar mais de um código em um ciclo? \\r
        \\r
        Use um ciclo 'repetir' para ajudar o Agent a construir uma ponte sobre o rio colocando os blocos na água.
      MC_HOC_2017_Ryan_05: |-
        Às vezes você precisa derrubar o que estiver atrapalhando seu jogador. \\r
        Use o bloco 'destruir' para eliminar todos os cactos entre o Agent e a placa de pressão.
      MC_HOC_Kiki_02: Alguém precisa estar na placa de pressão antes que a porta lateral abra. Ajude o Agent a chegar até a placa para que o jogador possa sair da casa.
      MSM Defining Vars 1: |-
        Escreva um programa que produz um triângulo
        verde sólido de 50 pixels.
      Middle School Hackathon Pt 1: |-
        # MS Hackathon: Desenho Chique

        Os blocos que lhe foram dados são aqueles que um estudante em CS Descobertas provavelmente teria disponível depois de uma semana usando o Laborário de Jogos. Sem sprites ainda, mas você **acaba de ser apresentado à algumas construções programáticas muito fortes como geração de números aleatórios, armazenamento de valores numa variável, e iteração.** Você também terá familiaridade com os comandos de desenho à esta altura.

        # Faça Isto

        -   Usando apenas as ferramentas disponíveis, **faça algo incrível!!**
        -   O projeto nesta altura provavelmente seria um **cartão animado** mas sinta-se a vontade para ir na direção que você quiser.
        -   **Evite variáveis aritméticas complexas** se puder. Você "ainda não as conhece" ainda.
        -   **Evite referenciar o iterador nas suas iterações**. À esta altura é só uma iteração repetitiva.
      Middle School Hackathon Pt 2: |-
        # MS Hackathon: Sprites e Interatividade

        Você pode agora **criar sprites, adicionar imagens, manipular suas propriedades, e executar variáveis aritméticas simples para atualizar os seus valores (exemplo: `sprite.scale = sprite.scale + 1;`)**. Você também foi apresentado às declarações condicionais e sabe como usá-las para ter algum comportamento interativo com o mouse e teclado.

        # Faça Isto

        -   Usando somente as ferramentas que lhe foram disponibilizadas **faça algo incrível!**
        -   Provavelmente sua meta de projeto aqui deva ser um **jogo simples** ou **visualização interativa**.
        -   Você não sabe ainda sobre **grupos, iterações, colisões**, ou propriedades mais mágicas como **velocidade ou rapidez de rotação**.

        **Estes comandos não estão na paleta de bloco mas fique a vontade para usar**

        -   `mySprite.mouseActive = true;` fará seu sprite rastrear os eventos do mouse
        -   `mySprite.mouseIsOver` e `mySprite.mouseIsPressed` são booleanos que você pode usar para entender as interações mouse-sprite

        **Para adicionar sprites na imagem siga o padrão abaixo**

            var spriteImage, sprite;

            //Você vai precisar uma função de pré-carregamento para carregar a imagem.
            function preload(){\t\t\t
                spriteImage = loadImage("imageURL");
            }

            //Cria seu sprite e adiciona a imagem
            function setup(){
                sprite = createSprite(200,200,10,10);
                sprite.addImage("someName", spriteImage);
            }

            //Desenha seus sprites.
            function draw(){
            \tbackground(255,255,255);
            \tdrawSprites();
            }
      Mike Test Bee Conditionals 1: "Esta nuvem está tapando minha visão! \n\nVeja se há uma flor atrás da nuvem, e só colete néctar se houver uma flor. Cuidado, isso pode mudar!"
      Mike Test Bee Conditionals 2: "**Avaliação:** Colete todo o néctar. \nTenha cuidado para não coletar néctar das flores roxas que não o tiverem."
      NEW Course 4 Artist Functions 10.1: |-
        Use as funções dos desafios
        anteriores para desenhar esse padrão.
      NEW Course 4 Artist Functions 12: |-
        Use a função "desenhe uma fileira de quadrados"
        do último desafio para desenhar esse padrão.
      NEW Course 4 Artist Functions 3: |-
        Temos aqui um novo tipo de bloco.
        Ele é chamado de "função". Clique em "editar" e então preencha-o com o código
        para desenhar um quadrado com lados de 100 pixels. \\r
        \\r
        Quando terminar de editar
        a função, clique em "Fechar" para retornar ao seu programa.
      NEW Course 4 Artist Functions 9: |-
        Você consegue resolver isso adicionando
        apenas um bloco?
      NEW Course 4 Artist Params 2: Crie uma função `desenhar um triângulo` desde o início, para fazer um triângulo com lados de 50 pixels.
      NEW Course 4 Artist Params 4: |-
        Você percebe algo diferente
        sobre esses blocos de função? Clique em "Executar" para ver o que acontece.
      NEW Course 4 Artist Params inspire: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Atividade Livre - Inspiração**: Agora você aprendeu tudo o que precisa saber para criar um padrão como esse! \n\nSe essa imagem inspira você, tente fazer algo similar. Caso contrário, crie algo você mesmo. \n\nNota: Nós usamos o bloco `definir alpha` para fazer as \"pétalas\" desaparecerem para fora."
      NEW Course 4 Artist Vars 12: |-
        Agora, recrie o algoritmo do último
        nível para criar um pentágono de lados 150.
      NEW Course 4 Artist Vars 4: |-
        Vamos tentar de novo! \\r
        \\r
        Você consegue
        definir a variável "comprimento" em 60 para fazer este design bacana com hexágonos?
      NEW Course 4 Artist Vars 6: |-
        Desenhe esse padrão de pentágonos com
        lados de 100 pixels definindo o valor correto para "comprimento" e colocando a variável
        "comprimento" em todos os lugares corretos. \\r
        \\r
        Você percebeu que só precisa
        definir o valor de "comprimento" uma vez, e o código usa o valor correto em todos os lugares?
      New Minecraft Hero Project: "**Jogo Livre:** Agora é com você! Use o código do Agent para ajudá-lo a explorar este mundo."
      Nike Example Brand Book: |-
        # Livro Marca

        Confira o exemplo de um livro de marca
      October15 bat: 'Atividade livre: aqui estão as funções que você escreveu e mais algumas para você usar. Brinque com a largura da caneta para ver como seus desenhos ficam diferentes!'
      Overworld Move to Sheep: Adicione um segundo comando "andar à frente" para chegar à ovelha.
      Overworld Move to Sheep_2018: Adicione um segundo comando "andar à frente" para chegar à ovelha.
      Overworld Move to Sheep_2019: Adicione um segundo comando "andar à frente" para chegar à ovelha.
      PDK5 Difficulty: Programar foi tão difícil quanto você esperava? Explique por que sim ou por que não. Como isso afeta seu ensino de ciência da computação?
      PS copy 2-3 Bee Conditionals 5: |-
        Estas flores roxas mágicas mudam!

        Cada vez que você tentar o quebra-cabeça, as flores roxas podem ter 1 néctar ou nenhuma... mas você não saberá o número até que você execute o código!

        Tenha cuidado para não coletar néctar de uma flor roxa se ela não tiver nenhum.
        Você deve primeiro verificar se o néctar é igual a 1 usando o bloco `se nectar`.
      PS fr prediction q1: 'O que _você_ acha que vai acontecer? '
      Pixel Filterator: |-
        # Jogo Livre

        Faça o que você quiser, faça algo incrível
      Pixelation - Lesson 15 - Color Shades 4x4: "# Pixelização: Tarefa 3\n\n<img src = \"https://code.org/images/cspunit1/ColorTask3.png\" align=right width=200 hspace=20>\n**Instruções:**\nVocê começa com a imagem 4x4 da Maddie criada no video.\n\nSua tarefa é completar uma grade 4x4 com cores usando _12-bits por pixel_. O resultado deve se assemelhar (mas não exatamente) com a imagem mostrada abaixo.  \n\nEstes são os requisitos:\n\n-   Linha 1 - complete com tons de vermelho.\n-   Linha 2 - tons de verde. \n-   Linha 3 - tons de azul. \n-   Linha 4 - tons de cinza."
      Pixelation - Lesson 15 - Color Shades 4x4_2018: "# Pixelização: Tarefa 3\n\n<img src = \"https://code.org/images/cspunit1/ColorTask3.png\" align=right width=200 hspace=20>\n**Instruções:**\nVocê começa com a imagem 4x4 da Maddie criada no video.\n\nSua tarefa é completar uma grade 4x4 com cores usando _12-bits por pixel_. O resultado deve se assemelhar (mas não exatamente) com a imagem mostrada abaixo.  \n\nEstes são os requisitos:\n\n-   Linha 1 - complete com tons de vermelho.\n-   Linha 2 - tons de verde. \n-   Linha 3 - tons de azul. \n-   Linha 4 - tons de cinza."
      Pixelation - Lesson 15 - Color Shades 4x4_2019: "# Pixelização: Tarefa 3\n\n<img src = \"https://code.org/images/cspunit1/ColorTask3.png\" align=right width=200 hspace=20>\n**Instruções:**\nVocê começa com a imagem 4x4 da Maddie criada no video.\n\nSua tarefa é completar uma grade 4x4 com cores usando _12-bits por pixel_. O resultado deve se assemelhar (mas não exatamente) com a imagem mostrada abaixo.  \n\nEstes são os requisitos:\n\n-   Linha 1 - complete com tons de vermelho.\n-   Linha 2 - tons de verde. \n-   Linha 3 - tons de azul. \n-   Linha 4 - tons de cinza."
      Pixelation - Lesson 15 - Complete 3-bit color: "# Pixelização de Cor: Tarefa 1\n\n**Instruções:**\n\n-   Você começa com a imagem 4x2 que Maddie estava criando, mas deixamos de fora os últimos dois quadrados. \n-   Termine a imagem descobrindo quais as duas cores que estão faltando e codifique elas."
      Pixelation - Lesson 15 - Complete 3-bit color_2018: "# Pixelização de Cor: Tarefa 1\n\n**Instruções:**\n\n-   Você começa com a imagem 4x2 que Maddie estava criando, mas deixamos de fora os últimos dois quadrados. \n-   Termine a imagem descobrindo quais as duas cores que estão faltando e codifique elas."
      Pixelation - Lesson 15 - Complete 3-bit color_2019: "# Pixelização de Cor: Tarefa 1\n\n**Instruções:**\n\n-   Você começa com a imagem 4x2 que Maddie estava criando, mas deixamos de fora os últimos dois quadrados. \n-   Termine a imagem descobrindo quais as duas cores que estão faltando e codifique elas."
      Play Lab Rocket 3: |-
        Excelente! Agora, você consegue atualizar essa função para
        que nosso foguete se mova mais rapidamente? Lembre-se de atualizar a instrução de finalidade,
        os exemplos e a definição da função para lançar um foguete a 40 metros por segundo.
      Poorva copy U3L2 Using Simple Commands: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      Ryan_Demo: |-
        Faça esse alce entrar na dança!

        Arraste o bloco <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> para a área de trabalho. Conecte o bloco abaixo do bloco <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. O(a) dançarino(a) deve iniciar um novo movimento após o quarto compasso.

        Os **compassos** são usados para contar o tempo musical. Neste tutorial, cada compasso tem quatro batidas.
      Testing Quantum Farmer: "Uau, que demais! \\\\r\n\\\\r\nEu não sei de quantas\npás cheias de terra esse buraco precisa.  \\\\r\nVocê pode escrever um programa que\nfique usando o bloco \"preencha\" até que o solo fique nivelado?  "
      Total Artist Clone Me: 'Atividade livre: aqui estão as funções que você escreveu e mais algumas para você usar. Brinque com a largura da caneta para ver como seus desenhos ficam diferentes!'
      Trent Test Level: Mais questões!
      U2L16 Free response assessment 1: O que significa "computacionalmente difícil"?
      U2L17 Assessment 1: Descreva o que significa para um problema ser "computacionalmente difícil."
      U3 Variables misconceptions 2: Qual a saída do Programa 2?
      U3 Variables misconceptions 3: Qual a saída do Programa 3?
      U3 Variables misconceptions 4: Qual a saída do Programa 4?
      U3L2 Using Simple Commands: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      U3L2 Using Simple Commands_2018: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      U3L2 Using Simple Commands_2019: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      U4 - Objects - Template Contacts: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 - Objects - Template Contacts_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4 - Objects - Template Contacts_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      U4L02 - Objects - Template1: "# Modelo"
      U4L02 - Objects - Template1_2018: "# Modelo"
      U4L02 - Objects - Template1_2019: "# Modelo"
      U5 Booleans: |-
        ### Pontos para prestar atenção:

        1.  O que é uma _Expressão Booleana?_
        2.  Por que ela é chamada "Booleana"?
        3.  Esta é uma expressão legal? `10 > 25`?
      U5 Check Password if statement lock image: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Faça o teste - Validador de senha\n\n**Idéia principal**: Você por usar `==` para comparar palavras e números.  \n\n-   Vamos usa uma declaração if em um manipulador de eventos para comparar o texto que o usuário inseriu em um elemento da tela.\n\n**Configuração:**\n\n-   Note a configuração em Modo de Design\n-   Há duas imagens: uma trava vermelha, e uma \"destrava\" verde.\n-   A \"destrava\" verde está _escondida_ no início.\n\n## Faça isto:\n\n**Adicione uma declaração if ao manipulador de evento para validar a senha e mostrar a \"destrava\" somente se este estiver correto** \n\n-   Você pode usar `==` para comparar o texto que você recebe da caixa de texto *entrada\\_senha* e uma palavra que você quer usar como senha. A expressão booleana que você deve usar parece com esta:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n-   Se você inseriu a senha correta então **mostre** a \"destrava\" verde e **esconda** a trava vermelha.\n    \\\\t\\* Nós fornecemos o código para esconder e mostrar as imagens. Você apenas precisa adicionar a declaração if.\n-   Senão, não faça nada. Eles podem tentar novamente."
      U5 Check Password if statement lock image_2018: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Faça o teste - Validador de senha\n\n**Idéia principal**: Você por usar `==` para comparar palavras e números.  \n\n-   Vamos usa uma declaração if em um manipulador de eventos para comparar o texto que o usuário inseriu em um elemento da tela.\n\n**Configuração:**\n\n-   Note a configuração em Modo de Design\n-   Há duas imagens: uma trava vermelha, e uma \"destrava\" verde.\n-   A \"destrava\" verde está _escondida_ no início.\n\n## Faça isto:\n\n**Adicione uma declaração if ao manipulador de evento para validar a senha e mostrar a \"destrava\" somente se este estiver correto** \n\n-   Você pode usar `==` para comparar o texto que você recebe da caixa de texto *entrada\\_senha* e uma palavra que você quer usar como senha. A expressão booleana que você deve usar parece com esta:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n-   Se você inseriu a senha correta então **mostre** a \"destrava\" verde e **esconda** a trava vermelha.\n    \\\\t\\* Nós fornecemos o código para esconder e mostrar as imagens. Você apenas precisa adicionar a declaração if.\n-   Senão, não faça nada. Eles podem tentar novamente."
      U5 Check Password if statement lock image_2019: "<img src=\"https://images.code.org/117a2a8e098760173f16048fde721295-image-1479829058899.gif\" style=\"float: right; width: 150px\">\n\n## Faça o teste - Validador de senha\n\n**Idéia principal**: Você por usar `==` para comparar palavras e números.  \n\n-   Vamos usa uma declaração if em um manipulador de eventos para comparar o texto que o usuário inseriu em um elemento da tela.\n\n**Configuração:**\n\n-   Note a configuração em Modo de Design\n-   Há duas imagens: uma trava vermelha, e uma \"destrava\" verde.\n-   A \"destrava\" verde está _escondida_ no início.\n\n## Faça isto:\n\n**Adicione uma declaração if ao manipulador de evento para validar a senha e mostrar a \"destrava\" somente se este estiver correto** \n\n-   Você pode usar `==` para comparar o texto que você recebe da caixa de texto *entrada\\_senha* e uma palavra que você quer usar como senha. A expressão booleana que você deve usar parece com esta:\n\n![](https://images.code.org/9124274f38ed19bdae6cfc4b492162b6-image-1479828796051.png)\n\n-   Se você inseriu a senha correta então **mostre** a \"destrava\" verde e **esconda** a trava vermelha.\n    \\\\t\\* Nós fornecemos o código para esconder e mostrar as imagens. Você apenas precisa adicionar a declaração if.\n-   Senão, não faça nada. Eles podem tentar novamente."
      U5 video Booleans: |-
        ### Pontos para prestar atenção:

        1.  O que é uma _Expressão Booleana?_
        2.  Por que ela é chamada "Booleana"?
        3.  Esta é uma expressão legal? `10 > 25`?
      Video. Introduction to Conditionals - Part 1: |-
        ### Pontos para prestar atenção:

        1.  O que é uma _Expressão Booleana?_
        2.  Por que ela é chamada "Booleana"?
        3.  Esta é uma expressão legal? `10 > 25`?
      allthethings data blocks test: Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      allthethings level dataTables: Por favor, faça o login para testar os níveis do applab (Por design, os níveis do applab só funcionam se estiverem conectados. Normalmente, fazemos com que as pessoas façam login, mas isso só é aplicável para um script inteiro e seria chato de fazer para o script todasascoisas).
      course1_artist_loops_challenge3: |-
        -   -   Piu! \* \*
        -   "Pode me ajudar fazer duas casas de pássaro?" \*
      course1_maze_debugging_challenge1: Depure esse nível. Remova blocos extras, e adicione blocos que estão faltando. Leve o pássaro até o porco!
      course1_maze_debugging_challenge2: Analise este nível. Estes são os blocos corretos, mas eles estão colocados na ordem errada!
      course2_collector_prog_challenge1: Preste atenção! Você consegue coletar todas as **10** peças do tesouro?
      course3_collector_debugging_challenge2: Você é um especialista em laços aninhados? Use o que você aprendeu até agora para coletar todo o tesouro!
      course4_artist_fwp_challenge1: Execute este programa e faça alterações para ver o que acontece. Você pode descobrir como ele funciona? (Ou exclua-o e substitua-o por algo totalmente diferente)
      courseA_artist_loops10: |-
        ## Hora de voltar à terra. Me ajude a colocar pedras para que eu não caia na água!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops10_2018: |-
        ## Hora de voltar à terra. Me ajude a colocar pedras para que eu não caia na água!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops10_2019: |-
        ## Hora de voltar à terra. Me ajude a colocar pedras para que eu não caia na água!

        ![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)
      courseA_artist_loops11: |-
        ## Me ajude a construir degraus para ver o navio velejar.

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops11_2018: |-
        ## Me ajude a construir degraus para ver o navio velejar.

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops11_2019: |-
        ## Me ajude a construir degraus para ver o navio velejar.

        ![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)
      courseA_artist_loops12: |-
        O artista viu algo engraçado à distância. Desenhe o que você acha que ele viu.

        * * *

        ### Ideias

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops12_2018: |-
        O artista viu algo engraçado à distância. Desenhe o que você acha que ele viu.

        * * *

        ### Ideias

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops12_2019: |-
        O artista viu algo engraçado à distância. Desenhe o que você acha que ele viu.

        * * *

        ### Ideias

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseA_artist_loops2: |-
        Ajude o artista a desenhar esta linha para frente duas vezes.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2018: |-
        Ajude o artista a desenhar esta linha para frente duas vezes.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops2_2019: |-
        Ajude o artista a desenhar esta linha para frente duas vezes.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      courseA_artist_loops3: |-
        Nosso artista está tentando desenhar uma linha cinco vezes, mas não está conseguindo. Você pode ajudar?

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops3_2018: |-
        Nosso artista está tentando desenhar uma linha cinco vezes, mas não está conseguindo. Você pode ajudar?

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops3_2019: |-
        Nosso artista está tentando desenhar uma linha cinco vezes, mas não está conseguindo. Você pode ajudar?

        ![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      courseA_artist_loops4: |-
        Agora use um <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> bloco de repetição para desenhar esta linha cinco vezes!

        [](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops4_2018: |-
        Agora use um <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> bloco de repetição para desenhar esta linha cinco vezes!

        [](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops4_2019: |-
        Agora use um <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-6">5</title></block></xml> bloco de repetição para desenhar esta linha cinco vezes!

        [](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)
      courseA_artist_loops5: |-
        ## Desenhe uma linha de sete passos. Isso vai ser nosso horizonte.

        ![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)
      courseA_artist_loops5_2018: |-
        ## Desenhe uma linha de sete passos. Isso vai ser nosso horizonte.

        ![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)
      courseA_artist_loops5_2019: |-
        ## Desenhe uma linha de sete passos. Isso vai ser nosso horizonte.

        ![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)
      courseA_artist_loops6: |-
        ## Vamos colocar uma bela colina na parte de trás.

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops6_2018: |-
        ## Vamos colocar uma bela colina na parte de trás.

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops6_2019: |-
        ## Vamos colocar uma bela colina na parte de trás.

        ![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)
      courseA_artist_loops7: |-
        ## Use o <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bloco de repetição para adicionar ondas à água.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_2018: |-
        ## Use o <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bloco de repetição para adicionar ondas à água.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_2019: |-
        ## Use o <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bloco de repetição para adicionar ondas à água.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_forVideo: |-
        ## Use o <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> bloco de repetição para adicionar ondas à água.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops8: |-
        ## Precisamos de uma escada para o barco.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2018: |-
        ## Precisamos de uma escada para o barco.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2019: |-
        ## Precisamos de uma escada para o barco.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops9: |-
        ## **Desafio:** As escadas para o cais estão quebradas. Ajude-me a conserta-las.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2018: |-
        ## **Desafio:** As escadas para o cais estão quebradas. Ajude-me a conserta-las.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2019: |-
        ## **Desafio:** As escadas para o cais estão quebradas. Ajude-me a conserta-las.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops_challenge1: |-
        Você pode usar uma repetição para desenhar várias linhas em uma fila.

        Você consegue desenhar uma casa? Faça-a do jeito que você mais gostar. Tente identificar padrões que se repetem.

        Aqui estão algumas ideias:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge1_2018: |-
        Você pode usar uma repetição para desenhar várias linhas em uma fila.

        Você consegue desenhar uma casa? Faça-a do jeito que você mais gostar. Tente identificar padrões que se repetem.

        Aqui estão algumas ideias:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge1_2019: |-
        Você pode usar uma repetição para desenhar várias linhas em uma fila.

        Você consegue desenhar uma casa? Faça-a do jeito que você mais gostar. Tente identificar padrões que se repetem.

        Aqui estão algumas ideias:

        ![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)
      courseA_artist_loops_challenge2: |-
        -   -   Piu! \* \*
        -   "Pode me ajudar fazer duas casas de pássaro?" \*
      courseA_artist_loops_challenge2a: |-
        _"Ajude-me a deixar o acampamento pronto!"_

        Use os blocos na caixa de ferramentas para desenhar três tendas.
      courseA_artist_loops_challenge2a_2018: |-
        _"Ajude-me a deixar o acampamento pronto!"_

        Use os blocos na caixa de ferramentas para desenhar três tendas.
      courseA_artist_loops_challenge2a_2019: |-
        _"Ajude-me a deixar o acampamento pronto!"_

        Use os blocos na caixa de ferramentas para desenhar três tendas.
      courseA_bee_seq1: Ajude a abelha a pegar um néctar!
      courseA_bee_seq10: Tente sozinho! Pegue todo o néctar.
      courseA_bee_seq11: Você tem andando ocupado! Obtenha todo o néctar.
      courseA_bee_seq12: Ajude a abelha a pegar um néctar!
      courseA_bee_seq13: |-
        _Bzzz bzzz!_

        Use <xml><block type="maze_moveWest"/></xml> **três** vezes para levar a abelha até a flor! Não se esqueça de usar <xml><block type="maze_nectar"/></xml> para obter o néctar!
      courseA_bee_seq14: |-
        _Bzzz bzzz!_

        Use <xml><block type="maze_moveNorth"/></xml> **três** vezes para levar a abelha até a flor! Não se esqueça de obter o néctar no final.
      courseA_bee_seq2: Adicione _um_ bloco para ajudar a abelha a obter o néctar da flor.
      courseA_bee_seq3: Você consegue descobrir o que está errado no código? Ajude a abelha a chegar até a flor!
      courseA_bee_seq4: Tente você mesmo!
      courseA_bee_seq5: Você tem que se mover em duas direções para pegar a flor! Ajude a abelha a escolher o caminho certo.
      courseA_bee_seq6: Agora a abelha precisa pegar néctar de duas flores!
      courseA_bee_seq7: Adicione dois blocos para terminar este enigma!
      courseA_bee_seq8: Este labirinto parece familiar... você consegue descobrir o que está diferente?
      courseA_bee_seq9: Esta abelha precisa de néctar! Você consegue ver um padrão?
      courseA_collector_loops1: |-
        -   -   Jogo gratuito: \* \* Esta é a Laurel, a Aventureira! Mova-a e o maior número de tesouros que conseguir.

        Arraste os blocos para área de trabalho e tente descobrir como obter o tesouro.  Obtenha pelo menos um ítem para passar este nível.
      courseA_collector_loops12: "_\"Eureka! Colete o máximo de tesouros que puder!\"_  \n(Você não tem que pegar todos.)"
      courseA_collector_loops12_2018: "_\"Eureka! Colete o máximo de tesouros que puder!\"_  \n(Você não tem que pegar todos.)"
      courseA_collector_loops12_2019: "_\"Eureka! Colete o máximo de tesouros que puder!\"_  \n(Você não tem que pegar todos.)"
      courseA_collector_loops1_2018: |-
        -   -   Jogo gratuito: \* \* Esta é a Laurel, a Aventureira! Mova-a e o maior número de tesouros que conseguir.

        Arraste os blocos para área de trabalho e tente descobrir como obter o tesouro.  Obtenha pelo menos um ítem para passar este nível.
      courseA_collector_loops1_2019: |-
        -   -   Jogo gratuito: \* \* Esta é a Laurel, a Aventureira! Mova-a e o maior número de tesouros que conseguir.

        Arraste os blocos para área de trabalho e tente descobrir como obter o tesouro.  Obtenha pelo menos um ítem para passar este nível.
      courseA_collector_loops2: "Pegue todas as três pilhas! Mova Laurel para cada peça do tesouro, e então use esse block: \n<xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_loops2_2018: "Pegue todas as três pilhas! Mova Laurel para cada peça do tesouro, e então use esse block: \n<xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_loops2_2019: "Pegue todas as três pilhas! Mova Laurel para cada peça do tesouro, e então use esse block: \n<xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_loops_challenge1: '"Você pode me ajudar encontrar alguns bugs? Eu sei aonde eu quero ir, mas eu não sei quantos passos devo dar."'
      courseA_collector_loops_challenge1_2018: '"Você pode me ajudar encontrar alguns bugs? Eu sei aonde eu quero ir, mas eu não sei quantos passos devo dar."'
      courseA_collector_loops_challenge1_2019: '"Você pode me ajudar encontrar alguns bugs? Eu sei aonde eu quero ir, mas eu não sei quantos passos devo dar."'
      courseA_collector_preLoops1: |-
        Esta é Laurel, a Aventureira!

        Pressione "Run" para vê-la andar até o tesouro e pegá-lo
      courseA_collector_preLoops2: |-
        Ótimo! Agora, adicione o código você mesmo!

        Mova um ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) bloco para o final do programa e clique em "Executar"!
      courseA_collector_preLoops3: Para pegar o tesouro, encaixe dois blocos ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png) blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png) no final do programa e clique em "Executar"!
      courseA_collector_preLoops7: "Pegue todas as três pilhas! Mova Laurel para cada peça do tesouro, e então use esse block: \n<xml><block type=\"collector_collect\"/></xml>"
      courseA_forVideoTest_artist: Loops de repetição funcionam para o Artista também!
      courseA_harvester_forVideo: Você consegue pegar todo o milho usando apenas \*\* um \*\* bloco de movimento?
      courseA_harvester_loops1: Ajude a colheitadeira a pegar todo o milho!
      courseA_harvester_loops10: Ajude a colheitadeira a pegar todas as cinco espigas de milho!
      courseA_harvester_loops10_2019: Ajude a colheitadeira a pegar todas as cinco espigas de milho!
      courseA_harvester_loops11: 'Tente mais um por sua conta! '
      courseA_harvester_loops11_2019: 'Tente mais um por sua conta! '
      courseA_harvester_loops1_2019: Ajude a colheitadeira a pegar todo o milho!
      courseA_harvester_loops2: A colheitadeira precisa coletar todo o milho! Você vê um padrão?
      courseA_harvester_loops2_2019: A colheitadeira precisa coletar todo o milho! Você vê um padrão?
      courseA_harvester_loops3: Você consegue pegar todo o milho usando apenas \*\* um \*\* bloco de movimento?
      courseA_harvester_loops3_2019: Você consegue pegar todo o milho usando apenas \*\* um \*\* bloco de movimento?
      courseA_harvester_loops4: |-
        -   "Eu preciso de ajuda para encontrar o erro!"

        Você pode ajudar a colheitadeira a encontrar o bug em seu código?
      courseA_harvester_loops4_2019: |-
        -   "Eu preciso de ajuda para encontrar o erro!"

        Você pode ajudar a colheitadeira a encontrar o bug em seu código?
      courseA_harvester_loops5: Tente você mesmo! Você consegue pegar o milho que está no final também?
      courseA_harvester_loops5_2019: Tente você mesmo! Você consegue pegar o milho que está no final também?
      courseA_harvester_loops5a: Olha todo este milho! Você coletar tudo sozinho?
      courseA_harvester_loops5a_2019: Olha todo este milho! Você coletar tudo sozinho?
      courseA_harvester_loops5b: Você consegue modificar seu código para fazer a colheitadeira pegar todo o milho?
      courseA_harvester_loops5b_2019: Você consegue modificar seu código para fazer a colheitadeira pegar todo o milho?
      courseA_harvester_loops6: Você vai precisar de \* \* um \* \* <xml><block type="maze_moveWest"></block></xml> bloco e de \* \* um \* \* <xml><block type="maze_moveNorth"></block></xml> bloco para terminar este enigma!
      courseA_harvester_loops6_2019: Você vai precisar de \* \* um \* \* <xml><block type="maze_moveWest"></block></xml> bloco e de \* \* um \* \* <xml><block type="maze_moveNorth"></block></xml> bloco para terminar este enigma!
      courseA_harvester_loops7: 'Tente você mesmo! '
      courseA_harvester_loops7_2019: 'Tente você mesmo! '
      courseA_harvester_loops8: |-
        Este é o mesmo enigma, mas agora você tem que repetir \* \* três \* \* vezes em vez de dua! Use este bloco:

        <xml><block type="controls_repeat_simplified_dropdown">

        <title name="TIMES" config="2-10">3</title>
        </block></xml>
      courseA_harvester_loops9: Você consegue descobrir como pegar _todo_ o milho?
      courseA_harvester_loops9_2019: Você consegue descobrir como pegar _todo_ o milho?
      courseA_harvester_seq1: Ajude a colheitadeira a pegar a espiga de milho!
      courseA_harvester_seq10: A colheitadeira precisa coletar todo o milho! Você vê um padrão?
      courseA_harvester_seq10_2019: A colheitadeira precisa coletar todo o milho! Você vê um padrão?
      courseA_harvester_seq11: Tente você mesmo! Pegue todo o milho.
      courseA_harvester_seq11_2019: Tente você mesmo! Pegue todo o milho.
      courseA_harvester_seq12: "-   Obrigada por me ajudar! \\* \n\nColher todo o milho."
      courseA_harvester_seq12_2019: "-   Obrigada por me ajudar! \\* \n\nColher todo o milho."
      courseA_harvester_seq13: Ajude a colheitadeira a pegar o milho!
      courseA_harvester_seq13_2019: Ajude a colheitadeira a pegar o milho!
      courseA_harvester_seq1_2019: Ajude a colheitadeira a pegar a espiga de milho!
      courseA_harvester_seq2: 'Use <xml><block type="maze_moveWest"/></xml> \* \* três \* vezes para levar a colhedora até o milho! '
      courseA_harvester_seq2_2019: 'Use <xml><block type="maze_moveWest"/></xml> \* \* três \* vezes para levar a colhedora até o milho! '
      courseA_harvester_seq3: Use <xml><block type="maze_moveNorth"/></xml> **três** vezes para levar a colheitadeira até o milho! Não se esqueça de pegar o milho no final.
      courseA_harvester_seq3_2019: Use <xml><block type="maze_moveNorth"/></xml> **três** vezes para levar a colheitadeira até o milho! Não se esqueça de pegar o milho no final.
      courseA_harvester_seq4: Adicione _um_ bloco para ajudar a colheitadeira a pegar o milho.
      courseA_harvester_seq4_2019: Adicione _um_ bloco para ajudar a colheitadeira a pegar o milho.
      courseA_harvester_seq5: Você consegue descobrir o que há de errado com este código? Ajude a colheitadora a pegar o milho!
      courseA_harvester_seq5_2019: Você consegue descobrir o que há de errado com este código? Ajude a colheitadora a pegar o milho!
      courseA_harvester_seq6: Tente você mesmo!
      courseA_harvester_seq6_2019: Tente você mesmo!
      courseA_harvester_seq7: Você tem que se mover em duas direções para chegar até o milho! Ajuda a colhedora a escolher a direção certa.
      courseA_harvester_seq7_2019: Você tem que se mover em duas direções para chegar até o milho! Ajuda a colhedora a escolher a direção certa.
      courseA_harvester_seq8: Agora a colheitadeira precisa pegar o milho duas vezes!
      courseA_harvester_seq8_2019: Agora a colheitadeira precisa pegar o milho duas vezes!
      courseA_harvester_seq9: Adicione dois blocos para terminar este enigma!
      courseA_harvester_seq9_2019: Adicione dois blocos para terminar este enigma!
      courseA_maze_ramp2_2018: Anexe os dois <xml> <block type="maze_moveEast"/></xml> blocos <xml><block type="when_run"/></xml> para terminar seu código, em seguida, clique em "Executar ▶".
      courseA_maze_ramp2_2019: Anexe os dois <xml> <block type="maze_moveEast"/></xml> blocos <xml><block type="when_run"/></xml> para terminar seu código, em seguida, clique em "Executar ▶".
      courseA_maze_ramp2a_2018: Anexe os dois <xml><block type="maze_moveEast"/></xml> blocos <xml><block type="when_run"/></xml> para finalizar seu código e clique ![](https://images.code.org/727d03b75b490aa49ed2e23e1290fdd8-image-1522888269949.11.32.png).
      courseA_maze_ramp3a_2018: Pegue um <xml><block type="maze_moveNorth"/></xml> da caixa de ferramentas e adicione-o no final dos outros blocos para finalizar o código, e então clique em "▶ Executar".
      courseA_maze_ramp3a_2019: Pegue um <xml><block type="maze_moveNorth"/></xml> da caixa de ferramentas e adicione-o no final dos outros blocos para finalizar o código, e então clique em "▶ Executar".
      courseA_maze_ramp3b_2018: |-
        Há um bloco extra no final desse código!

        Arrate-o de volta para a caixa de ferramentas para jogá-lo fora.
      courseA_maze_ramp3b_2019: |-
        Há um bloco extra no final desse código!

        Arrate-o de volta para a caixa de ferramentas para jogá-lo fora.
      courseA_maze_ramp4a_2018: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseA_maze_ramp4a_2019: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseA_maze_ramp5a_2018: Tente este sozinho!
      courseA_maze_ramp5a_2019: Tente este sozinho!
      courseA_maze_seq1: _"Brinque com esses blocos e tente me levar até o porco malvado!"_
      courseA_maze_seq10: |-
        -   -   Desafio: \* \* circundar a TNT para levar o pássaro até o porco!

        ![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)
      courseA_maze_seq10_2018: "**Desafio:** Evite a TNT para levar o pássaro até o porco! "
      courseA_maze_seq10_2019: "**Desafio:** Evite a TNT para levar o pássaro até o porco! "
      courseA_maze_seq11: |-
        Hora para um quebra-cabeça menor!  Mova um caminho e, em seguida, mov outro para levar o pássaro até o porco.

        ![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)
      courseA_maze_seq11_2018: Hora para um quebra-cabeça menor!  Mova um caminho e, em seguida, mova outro para levar o pássaro até o porco.
      courseA_maze_seq11_2019: Hora para um quebra-cabeça menor!  Mova um caminho e, em seguida, mova outro para levar o pássaro até o porco.
      courseA_maze_seq12: |-
        Pegue aquele porco!

        ![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)
      courseA_maze_seq12_2018: Pegue aquele porco!
      courseA_maze_seq12_2019: Pegue aquele porco!
      courseA_maze_seq1_2018: _"Brinque com esses blocos e tente me levar até o porco malvado!"_
      courseA_maze_seq1_2019: _"Brinque com esses blocos e tente me levar até o porco malvado!"_
      courseA_maze_seq2: |-
        -   "Um bug! Corrija o código para levar-me até o porco."

        ![expandable](https://images.code.org/4af4959874b3ca1fdd3008dc4f77add4-image-1497994904322.gif)
      courseA_maze_seq2_2018: |-
        -   "Um bug! Corrija o código para levar-me até o porco."

        ![expandable](https://images.code.org/4af4959874b3ca1fdd3008dc4f77add4-image-1497994904322.gif)
      courseA_maze_seq3: |-
        -   "Corrija o código para levar-me ao porco!"

        ![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)
      courseA_maze_seq3_2018: |-
        -   "Corrija o código para levar-me ao porco!"

        ![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)
      courseA_maze_seq4: "-   \"Algo não está certo.\" \n\nRETIRE um bloco para levar o pássaro até o porco!\n\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq4_2018: "-   \"Algo não está certo.\" \n\nRETIRE um bloco para levar o pássaro até o porco!\n\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq5: |-
        Tente este você mesmo desde o início.

        ![expandable](https://images.code.org/e4ef591b4580db478330c298d1af756f-image-1497997080163.gif)
      courseA_maze_seq5_2018: Dê uma chance a este.
      courseA_maze_seq5_2019: Dê uma chance a este.
      courseA_maze_seq5a_2018: |-
        _"Aqui, porquinho, porquinho!"_

        O que você pode adicionar no final desse código para levar o pássaro até o porco?
      courseA_maze_seq5a_2019: |-
        _"Aqui, porquinho, porquinho!"_

        O que você pode adicionar no final desse código para levar o pássaro até o porco?
      courseA_maze_seq6: |-
        Mova um caminho, então mova o outro para levar o pássaro até o porco!

        ![expandable](https://images.code.org/8f71c406afa60c6898937d950c670205-image-1497996506419.gif)
      courseA_maze_seq6_2018: Mova-me por um caminho, e então por outro para levar o pássaro até o porco!
      courseA_maze_seq6_2019: Mova-me por um caminho, e então por outro para levar o pássaro até o porco!
      courseA_maze_seq7: |-
        Descubra o que está faltando e então adicione blcoos para levar o pássaro até o porco!

        ![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)
      courseA_maze_seq7_2018: |-
        Descubra o que está faltando e então adicione blcoos para levar o pássaro até o porco!

        ![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)
      courseA_maze_seq8: |-
        Resolva este nível e leve o pássaro até o porco!
        ![expandable](https://images.code.org/fb4735244f74a4e001d1fa7b5c6028f9-image-1497998330218.gif)
      courseA_maze_seq8_2018: Resolva este nível e leve o pássaro até o porco!
      courseA_maze_seq8_2019: Resolva este nível e leve o pássaro até o porco!
      courseA_maze_seq9: |-
        **Desafio:** Depure esse código adicionando blocos para levar o pássaro até o porco!

        ![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)
      courseA_maze_seq9_2018: |-
        **Desafio:** Depure esse código adicionando blocos para levar o pássaro até o porco!

        ![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)
      courseA_maze_seq_challenge1: Depure esse nível. Remova blocos extras, e adicione blocos que estão faltando. Leve o pássaro até o porco!
      courseA_maze_seq_challenge1_2018: Depure esse nível. Remova blocos extras, e adicione blocos que estão faltando. Leve o pássaro até o porco!
      courseA_maze_seq_challenge1_2019: Depure esse nível. Remova blocos extras, e adicione blocos que estão faltando. Leve o pássaro até o porco!
      courseA_playLab_events3: |-
        Ajude Jorge, o cachorro, a mover-se conectando o <xml><block type="studio_move">

        <title name="SPRITE">1</title>
        <title name="DIR">8</title>
        </block></xml> bloco à<xml><block type="studio_whenArrow">
        <title name="VALUE">esquerda </title>
        </block></xml> onde já se encontra o bloco de evento na área de trabalho.

        Leve Jorge até a bandeira para passar de nível!
      courseA_playLab_events3_2018: |-
        Ajude Jorge, o cachorro, a mover-se conectando o <xml><block type="studio_move">

        <title name="SPRITE">1</title>
        <title name="DIR">8</title>
        </block></xml> bloco à<xml><block type="studio_whenArrow">
        <title name="VALUE">esquerda </title>
        </block></xml> onde já se encontra o bloco de evento na área de trabalho.

        Leve Jorge até a bandeira para passar de nível!
      courseA_playLab_events3_2019: |-
        Ajude Jorge, o cachorro, a mover-se conectando o <xml><block type="studio_move">

        <title name="SPRITE">1</title>
        <title name="DIR">8</title>
        </block></xml> bloco à<xml><block type="studio_whenArrow">
        <title name="VALUE">esquerda </title>
        </block></xml> onde já se encontra o bloco de evento na área de trabalho.

        Leve Jorge até a bandeira para passar de nível!
      courseA_playLab_events4: Agora, adicione mais blcoos para fazer Jorge se mover para a direita quando a seta para direita for clicada.
      courseA_playLab_events4_2018: Agora, adicione um outro bloco de evento para fazer Jorge mover-se para a direita quando a seta para direita for clicada.
      courseA_playLab_events4_2019: Agora, adicione um outro bloco de evento para fazer Jorge mover-se para a direita quando a seta para direita for clicada.
      courseA_playLab_events5: Adcione eventos para fazer com que Jorge mova-se para cima e para baixo quando a seta para cima e para baixo forem pressionadas.
      courseA_playLab_events5_2018: Adcione eventos para fazer com que Jorge mova-se para cima e para baixo quando a seta para cima e para baixo forem pressionadas.
      courseA_playLab_events5_2019: Adcione eventos para fazer com que Jorge mova-se para cima e para baixo quando a seta para cima e para baixo forem pressionadas.
      courseA_playLab_events7_2018: _Jogo Livre:_ Adicione qualquer coisa nesse jogo. Você consegue fazer o dinossauro desaparecer  quando Jorge correr em direção a ele?
      courseA_playLab_events7_2019: _Jogo Livre:_ Adicione qualquer coisa nesse jogo. Você consegue fazer o dinossauro desaparecer  quando Jorge correr em direção a ele?
      courseA_playlab_events_challenge1: |-
        Clicar em Olive irá fazer Robin aparecer! Você consegue escrever código que faça o restante dos personagens aparecerem?

        Nesse quebra-cabeça, certifique-se de clicar nas dicas! As dicas irão te ajudar a completar esse desafio passo-a-passo!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2018: |-
        Clicar em Olive irá fazer Robin aparecer! Você consegue escrever código que faça o restante dos personagens aparecerem?

        Nesse quebra-cabeça, certifique-se de clicar nas dicas! As dicas irão te ajudar a completar esse desafio passo-a-passo!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2019: |-
        Clicar em Olive irá fazer Robin aparecer! Você consegue escrever código que faça o restante dos personagens aparecerem?

        Nesse quebra-cabeça, certifique-se de clicar nas dicas! As dicas irão te ajudar a completar esse desafio passo-a-passo!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1a: |-
        Onde estão meus amigos escondidos? Neste jogo, clique em mim para mostrar meu amigo Olive, o gato! Clicando em Olive fará com que Robin apareça! Você consegue escrever um código para mostrar o resto dos meus amigos também?

        Neste quebra-cabeça, certifique-se de clicar nas dicas! As dicas irão ajudá-lo a fazer esse projeto passo a passo!

        ! [a] \(<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19> PM.png)
      courseA_playlab_events_challenge2: |-
        Dê algo para cada um fazer quando clicar neles. O que os animais irão dizer? O que mais vai acontecer?

        Nesse desafio, certifique-se de clicar nas dicas. As dicas irão te dar coisas legais para tentar!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2_2018: |-
        Dê algo para cada um fazer quando clicar neles. O que os animais irão dizer? O que mais vai acontecer?

        Nesse desafio, certifique-se de clicar nas dicas. As dicas irão te dar coisas legais para tentar!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2_2019: |-
        Dê algo para cada um fazer quando clicar neles. O que os animais irão dizer? O que mais vai acontecer?

        Nesse desafio, certifique-se de clicar nas dicas. As dicas irão te dar coisas legais para tentar!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challengeClone: |-
        Onde estão meus amigos escondidos? Neste jogo, clique em mim para mostrar meu amigo Olive, o gato! Clicando em Olive fará com que Robin apareça! Você consegue escrever um código para mostrar o resto dos meus amigos também?

        Neste quebra-cabeça, certifique-se de clicar nas dicas! As dicas irão ajudá-lo a fazer esse projeto passo a passo!

        ! [a] \(<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19> PM.png)
      courseB_Scrat_ramp3a_2018: Pegue um <xml><block type="maze_moveNorth"/></xml> da caixa de ferramentas e adicione-o no final dos outros blocos para finalizar o código, e então clique em "▶ Executar".
      courseB_Scrat_ramp3a_2019: Pegue um <xml><block type="maze_moveNorth"/></xml> da caixa de ferramentas e adicione-o no final dos outros blocos para finalizar o código, e então clique em "▶ Executar".
      courseB_Scrat_ramp3b_2018: |-
        Há um bloco extra no final desse código!

        Arrate-o de volta para a caixa de ferramentas para jogá-lo fora.
      courseB_Scrat_ramp3b_2019: |-
        Há um bloco extra no final desse código!

        Arrate-o de volta para a caixa de ferramentas para jogá-lo fora.
      courseB_Scrat_ramp4a_2018: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseB_Scrat_ramp4a_2019: Você consegue descobrir qual bloco você precisa adicionar aos outros blocos para terminar este código?
      courseB_Scrat_ramp5a_2018: Tente este sozinho!
      courseB_Scrat_ramp5a_2019: Tente este sozinho!
      courseB_collector_loops1: |-
        -   -   Jogo gratuito: \* \* Esta é a Laurel, a Aventureira! Mova-a e o maior número de tesouros que conseguir.

        Arraste os blocos para área de trabalho e tente descobrir como obter o tesouro.  Obtenha pelo menos um ítem para passar este nível.
      courseB_iceage_loops1: Ajude Scrat a atravessar o gelo escorregadio e chegar na noz!
      courseB_iceage_loops10: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops10_2019: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops11: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops11_2019: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops11_forVideo: Ajude Scrat a chegar até a noz!
      courseB_iceage_loops12: Pegue a noz da maneira que você conseguir!
      courseB_iceage_loops12_2019: Pegue a noz da maneira que você conseguir!
      courseB_iceage_loops1_2019: Ajude Scrat a atravessar o gelo escorregadio e chegar na noz!
      courseB_iceage_loops3: |-
        Você consegue chegar na noz usando apenas um bloco <xml><block type="maze_moveWest"/></xml>?
        Tente usar um laço!
      courseB_iceage_loops3_2019: |-
        Você consegue chegar na noz usando apenas um bloco <xml><block type="maze_moveWest"/></xml>?
        Tente usar um laço!
      courseB_iceage_loops4: Adicione mais um bloco para levar Scrat até a noz!
      courseB_iceage_loops4_2019: Adicione mais um bloco para levar Scrat até a noz!
      courseB_iceage_loops5: Você consegue adicionar mais um laço para chegar até a noz?
      courseB_iceage_loops6: Você consegue adicionar um laço para chegar até a noz?
      courseB_iceage_loops6_2019: Você consegue adicionar um laço para chegar até a noz?
      courseB_iceage_loops7: 'Scrat realmente quer aquela noz! '
      courseB_iceage_loops7_2019: 'Scrat realmente quer aquela noz! '
      courseB_iceage_loops8: 'Você consegue corrigir este código? '
      courseB_iceage_loops8_2019: 'Você consegue corrigir este código? '
      courseB_iceage_loops9: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseB_iceage_loops9_2019: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseB_maze_seq3: _"Conserte o código para me levar até o porco!"_
      courseB_maze_seq3_2018: _"Conserte o código para me levar até a noz!"_
      courseB_maze_seq9: "**Desafio**: Dê a volta na TNT para levar o pássaro até o porco."
      courseB_maze_seq9_2018: "**Desafio**: Mova-se ao redor do gelo quebrado para levar Scrat até a noz."
      courseB_maze_seq9_2019: "**Desafio**: Mova-se ao redor do gelo quebrado para levar Scrat até a noz."
      courseB_maze_seqCold: "**Desafio**: Analise este nível adicionando blocos para levar o pássaro até o porco!"
      courseB_playlab_events6: |-
        Ajude o seu cavaleiro a pegar todas as bandeiras!

        Para fazer isso, você precisará adicionar eventos que ajudem o cavaleiro a mover-se para cima, para baixo, para esquerda e para a direita.
      courseB_playlab_events6_2018: |-
        Ajude o seu cavaleiro a pegar todas as bandeiras!

        Para fazer isso, você precisará adicionar eventos que ajudem o cavaleiro a mover-se para cima, para baixo, para esquerda e para a direita.
      courseB_playlab_events6_2019: |-
        Ajude o seu cavaleiro a pegar todas as bandeiras!

        Para fazer isso, você precisará adicionar eventos que ajudem o cavaleiro a mover-se para cima, para baixo, para esquerda e para a direita.
      courseC_PlayLab_events6_2019: Agora escreva um programa que faça Valfredo o Penguin se mover usando as teclas com as setas para cima / para baixo / à esquerda / à direita, para atingir todos os alvos!
      courseC_collector_prog9: _"Vamos pegar todo o tesouro!"_
      courseC_collector_prog9_2018: _"Vamos pegar todo o tesouro!"_
      courseC_collector_prog9_2019: _"Vamos pegar todo o tesouro!"_
      courseC_collector_progA: Ajude Laurel a coletar todo o tesouro.
      courseC_harvester_loops10: Colete todo os milhos e as abóboras.
      courseC_harvester_loops10_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops10_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops11: Colete todo os milhos e as abóboras.
      courseC_harvester_loops11_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops11_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops3: Colete todas as abóboras.
      courseC_harvester_loops3_2018: Colete todas as abóboras.
      courseC_harvester_loops3_2019: Colete todas as abóboras.
      courseC_harvester_loops5: Colete todo os milhos e as abóboras.
      courseC_harvester_loops5_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops5_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops6: Colete todo os milhos e as abóboras.
      courseC_harvester_loops6_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops6_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops7: Colete todo os milhos e as abóboras.
      courseC_harvester_loops7_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops7_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops9: Colete todo os milhos e as abóboras.
      courseC_harvester_loops9_2018: Colete todo os milhos e as abóboras.
      courseC_harvester_loops9_2019: Colete todo os milhos e as abóboras.
      courseC_harvester_loops_forVid: Colete todo os milhos e as abóboras.
      courseC_maze_programming8: _" Mantenha a calma e ajude-me a encontrar o porco mal."_
      courseC_maze_programming8_2018: _" Mantenha a calma e ajude-me a encontrar o porco mal."_
      courseC_maze_programming8_2019: _" Mantenha a calma e ajude-me a encontrar o porco mal."_
      courseC_maze_programming8_predict1: _" Mantenha a calma e ajude-me a encontrar o porco mal."_
      courseC_maze_programming8_predict1_2018: _" Mantenha a calma e ajude-me a encontrar o porco mal."_
      courseC_maze_programming8_predict1_2019: _" Mantenha a calma e ajude-me a encontrar o porco mal."_
      courseC_maze_programming_challenge1: 'O pássaro precisa de sua ajuda! O porco está escondido, e o objetivo é encontrá-lo. '
      courseC_maze_programming_challenge1_2018: 'O pássaro precisa de sua ajuda! O porco está escondido, e o objetivo é encontrá-lo. '
      courseC_maze_programming_challenge1_2019: 'O pássaro precisa de sua ajuda! O porco está escondido, e o objetivo é encontrá-lo. '
      courseD_bee_conditionals3: Você só pode coletar nectar das flores, mas você pode verificar qualquer espaço para ver se há uma flor. Se existe uma flor embaixo de alguma das nuvens, a abelha precisará coletar o nectar _uma vez_.
      courseD_bee_conditionals3_2018: Você só pode coletar nectar das flores, mas você pode verificar qualquer espaço para ver se há uma flor. Se existe uma flor embaixo de alguma das nuvens, a abelha precisará coletar o nectar _uma vez_.
      courseD_bee_conditionals3_2019: Você só pode coletar nectar das flores, mas você pode verificar qualquer espaço para ver se há uma flor. Se existe uma flor embaixo de alguma das nuvens, a abelha precisará coletar o nectar _uma vez_.
      courseD_bee_nestedLoops5: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\\\r\n\\\\r\nUse um laço aninhado. "
      courseD_bee_nestedLoops8: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\\\r\n\\\\r\nUse um laço aninhado. "
      courseD_bee_nestedLoops8_2018: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\\\r\n\\\\r\nUse um laço aninhado. "
      courseD_bee_nestedLoops8_2019: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\\\r\n\\\\r\nUse um laço aninhado. "
      courseD_bounce_events1: Vá até a bandeira! Anexe um bloco ao bloco "quando seta para esquerda" e clique em "Executar" para mover o jogador até a bandeira.
      courseD_iceage_loops1: Ajude Scrat a atravessar o gelo escorregadio e chegar na noz!
      courseD_iceage_loops10: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops10_2019: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops11: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops11_2019: Ajude Scrat a chegar até a noz!
      courseD_iceage_loops12: Pegue a noz da maneira que você conseguir!
      courseD_iceage_loops12_2019: Pegue a noz da maneira que você conseguir!
      courseD_iceage_loops1_2019: Ajude Scrat a atravessar o gelo escorregadio e chegar na noz!
      courseD_iceage_loops4: Adicione mais um bloco para levar Scrat até a noz!
      courseD_iceage_loops4_2019: Adicione mais um bloco para levar Scrat até a noz!
      courseD_iceage_loops6: Você consegue adicionar um laço para chegar até a noz?
      courseD_iceage_loops6_2019: Você consegue adicionar um laço para chegar até a noz?
      courseD_iceage_loops7: 'Scrat realmente quer aquela noz! '
      courseD_iceage_loops7_2019: 'Scrat realmente quer aquela noz! '
      courseD_iceage_loops8: 'Você consegue corrigir este código? '
      courseD_iceage_loops8_2019: 'Você consegue corrigir este código? '
      courseD_iceage_loops9: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseD_iceage_loops9_2019: A noz está tão longe! Você pode usar laços para ajudar o Scrat a chegar lá?
      courseD_maze_nestedLoops4: |-
        Leve-me até o girassol usando o menor número de blocos
        possível! \\r
        \\r
        Use um laço "repita" dentro de outro para diminuir
        a quantidade de códigos que você precisa.
      courseD_maze_nestedLoops4_2018: |-
        Leve-me até o girassol usando o menor número de blocos
        possível! \\r
        \\r
        Use um laço "repita" dentro de outro para diminuir
        a quantidade de códigos que você precisa.
      courseD_maze_nestedLoops4_2019: |-
        Leve-me até o girassol usando o menor número de blocos
        possível! \\r
        \\r
        Use um laço "repita" dentro de outro para diminuir
        a quantidade de códigos que você precisa.
      courseD_maze_ramp5d: Leve o pássaro até o porco.
      courseD_maze_ramp5d_2018: Leve o pássaro até o porco.
      courseD_maze_ramp5d_2019: Leve o pássaro até o porco.
      courseD_maze_until10: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_predict2: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_predict2_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until10_predict2_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until6: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until6_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until6_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until7: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until7_2018: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until7_2019: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until8: Ajude o zumbi a chegar até o girassol.
      courseD_maze_until8_2018: Ajude o zumbi a chegar até o girassol.
      courseD_scrat_ramp5: Evite o gelo com rachadura!
      courseD_scrat_ramp5_2018: Evite o gelo com rachadura!
      courseD_scrat_ramp7: Ajude Scrat a chegar até a noz!
      courseD_scrat_ramp7_2018: Ajude Scrat a chegar até a noz!
      courseE_bee_functions2: "As funções são blocos de código que realizam uma tarefa. \n\nUse a função `colete 2 néctares` para coletar o néctar de cada flor."
      courseE_bee_functions2_2018: "As funções são blocos de código que realizam uma tarefa. \n\nUse a função `colete 2 néctares` para coletar o néctar de cada flor."
      courseE_bee_functions3: |-
        As funções são blocos de código que realizam
        uma tarefa. \\r
        \\r
        Use a função "obtenha 5" para obter 5 néctares por vez.
      courseE_bee_functions3_2018: |-
        As funções são blocos de código que realizam
        uma tarefa. \\r
        \\r
        Use a função "obtenha 5" para obter 5 néctares por vez.
      courseE_farmer_concept4: |-
        Agora, vamos nos aprofundar mais um nível!
        Aninhamos todo o bloco de código dentro de outro laço, mas você precisa posicionar o
        artista no lugar para desenhar a próxima reta. Qual desses blocos de código você
        pode colocar no final do laço mais externo para desenhar toda a grade?
      courseE_farmer_functions10b: Use sua nova função duas vezes para resolver este desafio.
      courseE_farmer_functions10b_2018: Use sua nova função duas vezes para resolver este desafio.
      courseF_bee_for_challenge2: |-
        Resolva este desafio com o menor número de blocos
        possível.
      courseF_bee_for_challenge2_2018: |-
        Resolva este desafio com o menor número de blocos
        possível.
      courseF_bee_for_challenge2_2019: |-
        Resolva este desafio com o menor número de blocos
        possível.
      coursea_maze_ramp1_2018: Para levar o pássaro até o porco, encaixe o <xml><block type="maze_moveEast"/></xml> bloco no final do <xml><block type="when_run"/></xml> bloco e aperte "▶ Executar"!
      coursea_maze_ramp1_2019: Para levar o pássaro até o porco, encaixe o <xml><block type="maze_moveEast"/></xml> bloco no final do <xml><block type="when_run"/></xml> bloco e aperte "▶ Executar"!
      csd-pulse-check-survey-1-free-response U1Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U1Ch2_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U2Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U2Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U3Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U3Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U4Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U4Ch1_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U4Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U4Ch2_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U5Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U5Ch1_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U5Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U5Ch2_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U6Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U6Ch1_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U6Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response U6Ch2_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csd-pulse-check-survey-1-free-response: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-1-q6-FR-U1Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-1-q6-FR-U1Ch2_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-1-q6-FR-U1Ch2_2019: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-2-q6-FR-U2Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-2-q6-FR-U2Ch1_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-2-q6-FR-U2Ch1_2019: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-3-q6-FR-U2Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-3-q6-FR-U2Ch2_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-3-q6-FR-U2Ch2_2019: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-4-q6-FR-U3Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-4-q6-FR-U3Ch1_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-4-q6-FR-U3Ch1_2019: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-5-q6-FR-U4Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-5-q6-FR-U4Ch1_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-5-q6-FR-U4Ch1_2019: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-6-q6-FR-U4Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-6-q6-FR-U5Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-6-q6-FR-U5Ch1_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-6-q6-FR-U5Ch1_2019: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-7-q6-FR-U5Ch1: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-7-q6-FR-U5Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-7-q6-FR-U5Ch2_2018: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-7-q6-FR-U5Ch2_2019: Mais alguma coisa que você gostaria que o professor soubesse?
      csp-pulse-check-survey-8-q6-FR-U5Ch2: Mais alguma coisa que você gostaria que o professor soubesse?
      frozen circle function in circle: |-
        Agora vamos criar 20 círculos
        sobrepostos, virando 18 graus entre cada círculo.
      frozen circle function with parameter: |-
        Temos aqui um bloco "crie um círculo"
        que pode fazer círculos de tamanhos diferentes. Você pode usar isso para criar
        um pequeno círculo de tamanho 5 e um círculo maior de tamanho 10?
      frozen circle function: |-
        Use o novo bloco "crie um círculo" para
        criar 10 círculos sobrepostos. Não se esqueça de avançar entre os círculos.
      frozen circle: |-
        Um círculo é uma forma especial. Você pode descobrir
        que número usar para substituir os pontos de interrogação para desenhar um círculo?
      frozen cross rotate dense: |-
        Vamos repetir isso 90 vezes! Quantas
        vezes 90 cabe em 360? Dica: é um número realmente pequeno.
      frozen cross rotate: |-
        Agora, tente repetir isso 10 vezes. Quantos graus
        você precisa virar entre cada reta?
      frozen cross rotate_b: Agora, tente repetir isso **10** vezes. **Quantos graus** você precisa virar entre cada reta?
      frozen cross rotate_test: Agora, tente repetir isso **10** vezes. **Quantos graus** você precisa virar entre cada reta?
      frozen cross: |-
        Envolva um bloco "Repita" em torno desses comandos para criar
        um sinal de adição. Você notou que Elsa pode se mover para a frente e para trás?
      frozen diamond mini snowflake: |-
        Você sabia que cada floco de neve
        tem uma forma diferente? Vamos criar um novo floco de neve usando o bloco "Repita"
        para repetir um paralelogramo 4 vezes, virando 90 graus à direita entre
        cada paralelogramo.
      frozen diamond snowflake: |-
        Agora, vamos criar um novo floco de neve
        usando o bloco repita para repetir um paralelogramo 10 vezes, virando 36 graus
        à direita entre cada um.
      frozen diamond: |-
        Use um bloco "Repita" em torno desses blocos para criar um paralelogramo.
        É como um retângulo mas tem ângulos diferentes. Este tem ângulos de 60 graus
        e 120 graus em vez de todos os ângulos terem 90 graus.
      frozen freeplay: |-
        Você se tornou oficialmente um artista mestre!
        Crie um país das maravilhas de gelo.
      frozen perpendicular: |-
        Agora, vamos ver se podemos criar duas retas
        que formam um ângulo de 90 graus entre si. Você vai precisar usar o bloco "vire"
        e também o bloco "mova".
      frozen snowflake branch: |-
        Tente usar o bloco "crie um floco de neve do tipo ramificado”
        para criar três ramificações, o que começa a parecer um floco de neve.
      frozen snowflake full: |-
        Agora, vamos repetir isso 8 vezes para fazer um
        belo floco de neve!
      frozen snowflake full_b: Agora, vamos repetir isso **8** vezes para criar um lindo floco de neve!
      frozen snowflake full_test: Agora, vamos repetir isso **8** vezes para criar um lindo floco de neve!
      frozen snowflower: |-
        Padrões de neve complexos podem ser criados com
        formas muito simples. Você pode criar um padrão repetindo 5 círculos de tamanho
        5 e 5 círculos de tamanho 10?
      frozen square iterative: |-
        Parece que estamos na metade do caminho para fazer
        um quadrado. Vamos juntar 4 retas para criar um quadrado.
      frozen square loop 3x: |-
        Vamos criar três quadrados, virando depois
        de cada quadrado. Lembre-se de virar 120 graus antes de cada novo quadrado.
      frozen square loop: |-
        Oi, eu sou Anna de Arendelle! Vamos fazer um quadrado
        com o bloco "repita", que usa menos blocos. Quantas vezes (???) o bloco
        "repita" deve repetir os blocos dentro dele para fazer um quadrado?
      frozen square snowflake: |-
        Você consegue criar um floco de neve usando o bloco
        "repita" para criar um quadrado 10 vezes e o bloco "vire" para virar 36
        graus entre cada quadrado?
      grade2_CaringForNewPet_11: _" Mantenha a calma e ajude-me a encontrar o porco mal."_
      grade2_CaringForNewPet_3D: _"Siga este caminho para me levar até o porco!"_
      grade2_MakeDogTag_8: |-
        Agora vamos conectar um monte de "V"
        em um laço.
      grade2_MakeDogTag_9: |-
        Hora de fazer algo atrativo!

        Reconstrua o código do último desafio, mas dessa vez, adicione uma ação de virar à esquerda em 30 graus dentro do laço. Agora repita
        a ação 24 vezes, em vez de 8.
      grade2_PuppyLoops_10: |-
        Meu professor diz que eu devo terminar o que
        comecei!\\r
        \\r
        Ajude-me a terminar meu cata-vento. Você consegue descobrir o que há de errado?
      grade2_PuppyLoops_2: |-
        De repente, aparece um bloco mágico!  Com o bloco de 'Repetir', você pode fazer loop código repetidamente.

        você consegue chegar ao porco, criando um loop que usa apenas um bloco 'Avançar' dentro 'Repetir'?
      grade2_PuppyLoops_4: |-
        Neste desafio, dois laços "repita" ajudarão você
        a pegar o porco com o menor número possível de blocos!
      grade2_PuppyLoops_8: |-
        O código dos bigodes do gato está errado.
        \\r
        \\r
        Corrija o código para desenhar os bigodes, todos com o mesmo tamanho.
      grade2_PuppyLoops_9: |-
        Parece que o C no código está desenhado ao contrário!\\r
        \\r
        Você
        consegue fazê-lo parecer com um C de novo?
      grade2_collector_2: Mova Laurel até o ouro, então use `coletar` para pegar.
      grade2_collector_9: _"Vamos pegar todas as moedas!"_
      grade2_collector_A: Ajude Laurel a coletar todo o tesouro.
      grade2_collector_A_2018: Ajude Laurel a coletar todo o tesouro.
      grade2_collector_A_2019: Ajude Laurel a coletar todo o tesouro.
      grade2_maze_intro10: Resolva este desafio.
      grade2_maze_intro9: Resolva este desafio.
      grade2_puppy_loops2: |-
        De repente, aparece um bloco mágico!  Com o bloco de 'Repetir', você pode fazer loop código repetidamente.

        você consegue chegar ao porco, criando um loop que usa apenas um bloco 'Avançar' dentro 'Repetir'?
      grade2_puppy_loops4: |-
        Neste desafio, dois laços "repita" ajudarão você
        a pegar o porco com o menor número possível de blocos!
      grade3_ConditionalsElse_1: "Esta nuvem está tapando minha visão! \n\nVeja se há uma flor atrás da nuvem, e só colete néctar se houver uma flor. Cuidado, isso pode mudar!"
      grade3_ConditionalsElse_2: |-
        Mais nuvens! \\r
        \\r
        Procure atrás
        de todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r
        \\r
        Lembre-se:
        Nem todas as nuvens escondem alguma coisa!
      grade3_ConditionalsElse_4: "As vezes esta nuvem esconde uma flor, e outras vezes uma colmeia! \n\nUse o bloco `se/senão` para coletar néctar apenas se for uma flor. \nSenão para produzir mel (porque é uma colmeia)."
      grade3_ConditionalsElse_5: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\\r
        \\r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\\r
        Caso contrário, produza mel (porque há uma colmeia).
      grade3_ConditionalsElse_6: |-
        Não tenho certeza de quanto néctar esta flor
        tem, mas sei que ela tem 1, 2 ou 3 unidades de néctar. \\r
        \\r
        Combine os blocos
        condicionais ("se" e/ou "se/senão") para coletar apenas a quantidade de néctar que a flor tiver.
        \\r
        \\r
        Lembre-se de que a quantidade de néctar pode mudar a cada vez que você executar o desafio!
      grade3_ConditionalsElse_7: |-
        Essas flores podem ter 3, 2 ou 1 néctar.
        \\r
        \\r
        Complete a função "verifique a flor roxa" e use-a para coletar
        todo o néctar das flores.
      grade3_ConditionalsElse_8: |-
        Escreva a função "verifique flor e
        produza mel". \\r
        \\r
        Sua função deve verificar se a flor roxa tem 3, 2
        ou 1 néctar e coletar todo o néctar. \\r
        Então, avance e produza mel.
      grade3_ConditionalsElse_9: |-
        **Avaliação:** esta nuvem
        esconde uma flor com um néctar ou uma colmeia que precisa de um mel.  \\r
        \\r
        Complete
        a função "colete néctar ou produza mel" e então, chame-a para coletar o néctar
        ou o mel.  \\r
      grade3_ConditionalsElse_TeacherIDo: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\\r
        \\r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\\r
        Caso contrário, produza mel (porque há uma colmeia).
      grade3_Conditionals_1: |-
        Sou uma abelha faminta! \\r
        Ajude-me a coletar
        todo o néctar das flores usando o menor número possível de blocos.
      grade3_Conditionals_10: |-
        Há muita coisa acontecendo por aqui!\\r
        \\r
        Use
        o que você aprendeu para coletar todo o néctar e, então, produza o mel.
      grade3_Conditionals_11 BAD: 'Avaliação: Use um laço `enquanto` para coletar todo o néctar dessas flores.'
      grade3_Conditionals_11: "Vamos unir todas as informações!\n\nUse o que você aprendeu para me ajudar a coletar néctar apenas das flores que têm néctar para oferecer, usando o menor número possível de blocos. \n\nNão se esqueça de produzir o mel para terminar."
      grade3_Conditionals_12: |-
        Este padrão de degrau deve ser familiar.  \\r
        \\r
        Você
        consegue coletar néctar apenas das flores que têm néctar para oferecer, usando o menor número de
        blocos possível?
      grade3_Conditionals_13: "**Avaliação:** Colete todo o néctar. \nTenha cuidado para não coletar néctar das flores roxas que não o tiverem."
      grade3_Conditionals_2: "Olhe só todo esse néctar!\\\\r\n\\\\r\nAjude-me\na coletar todo o néctar e produzir mel usando o menor número possível de blocos.  "
      grade3_Conditionals_3: |-
        Estas flores roxas mágicas mudam!

        Cada vez que você tentar o quebra-cabeça, as flores roxas podem ter 1 néctar ou nenhuma... mas você não saberá o número até que você execute o código!

        Tenha cuidado para não coletar néctar de uma flor roxa se ela não tiver nenhum.
        Você deve primeiro verificar se o néctar é igual a 1 usando o bloco `se nectar`.
      grade3_Conditionals_8: "O que será que tem por aí!\\\\r\n\\\\r\nAjude-me\na voar pelo jardim e coletar o néctar apenas das flores que têm\nnéctar para oferecer. "
      grade3_Debugging_1: |-
        Esses blocos estão me incomodando!

        Corrija o(s) erro(s) para coletar todo o néctar.
      grade3_Debugging_5: "Essa flor parece deliciosa! \n\nCorrija o(s) erro(s) para coletar todo o néctar. Agora você pode usar os botões \"Executar\" e \"Passo\"."
      grade3_Debugging_6: |-
        Que doce desafio!\\r
        \\r
        Corrija o(s) erro(s)
        para coletar todo o néctar.
      grade3_Debugging_9: |-
        Uau, que ferroada!\\r
        \\r
        Você
        terá que corrigir algumas coisas neste programa para coletar todo o
        néctar e produzir todo o mel.
      grade3_Loops_10: |-
        Que abelha trabalhadora!

        Ajude a abelha a coletar todo o néctar e produzir todo o mel com o menor número de blocos possível.
      grade3_Loops_11: |-
        O formato deste caminho é diferente dos demais.

        Você consegue coletar todo o néctar usando o menor número possível de blocos?
      grade3_Loops_3: Use um laço "repita" para coletar todo o néctar.
      grade3_Loops_4: |-
        Agora, use o bloco "repita" para coletar todo o
        néctar e produzir todo o mel.
      grade3_Loops_6: |-
        Quantas vezes os laços ajudaram você neste desafio?  \\r
        \\r
        Os laços
        são seus amigos! Use alguns deles para completar este desafio com o menor número
        de blocos possível.
      grade3_Loops_7: |-
        Essas flores parecem deliciosas!\\r
        \\r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      grade3_Loops_TeacherIDo: |-
        Essas flores parecem deliciosas!\\r
        \\r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      grade3_bee_conditionals_quantum2: |-
        Mais nuvens! \\r
        \\r
        Procure atrás
        de todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r
        \\r
        Lembre-se:
        Nem todas as nuvens escondem alguma coisa!
      grade3_maze_Loop1: "**Avaliação:** leve-me até o girassol usando apenas 5 blocos! "
      grade3_maze_loops2: |-
        Leve-me até o girassol usando o menor número de blocos
        possível! \\r
        \\r
        Use um laço "repita" dentro de outro para diminuir
        a quantidade de códigos que você precisa.
      grade3_maze_nestedLoops2: |-
        De repente, aparece um bloco mágico!  Com o bloco de 'Repetir', você pode fazer loop código repetidamente.

        você consegue chegar ao porco, criando um loop que usa apenas um bloco 'Avançar' dentro 'Repetir'?
      grade3_maze_nestedLoops3: Leve-me até o porco! Você só pode usar um bloco `mover para frente` desta vez
      grade3_maze_nestedLoops4: |-
        Neste desafio, dois laços "repita" ajudarão você
        a pegar o porco com o menor número possível de blocos!
      grade4_arist_nested_loop_circles1: |-
        **Avaliação**: use um laço aninhado para
        completar o desenho.
      grade4_arist_nested_loop_flags1: Repita o código dado para criar um moinho de vento.
      grade4_arist_nested_loop_polygons1: |-
        Repita esse desenho 10 vezes. \\r
        \\r
        Quanto
        você precisa virar a cada repetição?
      grade4_arist_nested_loop_polygons2: "Repita essa forma 6 vezes. \\\\r\n\\\\r\nQuanto\nvocê precisa virar a cada repetição? "
      grade4_arist_nested_loop_squares1: "Você pode desenhar esses 10 quadrados desta calçada usando um laço aninhado? \n\nCada quadrado tem 30 pixels."
      grade4_arist_nested_loop_triangles2: "Agora, aninhe esse laço dentro de outro laço para desenhar 10 triângulos. \nIsso se chama laço \"aninhado\".  "
      grade4_arist_nested_loop_triangles3: |-
        Você pode desenhar um hexágono repetindo o
        código do triângulo?
      grade4_arist_nested_loop_triangles4: Desenhe o dente na boca do crocodilo!
      grade4_arist_nested_loop_triangles5: |-
        Crie um sol aninhando o código inicial em
        outro laço.\\r
        \\r
        Para conseguir este desenho legal com um centro vazio, você terá que
        dar um pulo para a frente do tamanho do triângulo antes de virar.
      grade4_arist_nested_loop_triangles6: |-
        Você pode desenhar esses 36 triângulos usando
        um laço aninhado?
      grade4_artist_functions2: |-
        As funções permitem que você defina novos blocos! \\r
        \\r
        Movemos
        os blocos necessários para desenhar um quadrado para dentro de uma função chamada "desenhe
        um quadrado". Desta vez, use a função "desenhe um quadrado" para criar os óculos.
        \\r
        \\r
        Os quadrados estão separados por uma distância de 75 pixels.
      grade4_artist_nested_loop_circles1: |-
        **Avaliação**: use um laço aninhado para
        completar o desenho.
      grade4_artist_nested_loop_flags1: Repita o código dado para criar um moinho de vento.
      grade4_artist_nested_loop_polygons1: |-
        Repita esse desenho 10 vezes. \\r
        \\r
        Quanto
        você precisa virar a cada repetição?
      grade4_artist_nested_loop_squares1: "Você pode desenhar esses 10 quadrados desta calçada usando um laço aninhado? \n\nCada quadrado tem 30 pixels."
      grade4_artist_nested_loop_triangles1: 'Complete o código para desenhar esses triângulos. O primeiro já está feito pra você. Dica: 3 triângulos em uma rotação de 360 graus.'
      grade4_artist_nested_loop_triangles5: |-
        Crie um sol aninhando o código inicial em
        outro laço.\\r
        \\r
        Para conseguir este desenho legal com um centro vazio, você terá que
        dar um pulo para a frente do tamanho do triângulo antes de virar.
      grade4_artist_nested_loop_triangles6: |-
        Você pode desenhar esses 36 triângulos usando
        um laço aninhado?
      grade4_artist_parameters_triangles2: |-
        Você percebe algo diferente
        sobre esses blocos de função? Clique em "Executar" para ver o que acontece.
      grade4_bee_conditionals_nested_loops: "**Avaliação:** Colete todo o néctar. \nTenha cuidado para não coletar néctar das flores roxas que não o tiverem."
      grade4_bee_conditionals_new1: "**Avaliação:** Colete todo o néctar. \nTenha cuidado para não coletar néctar das flores roxas que não o tiverem."
      grade4_bee_conditionals_quantum1: "Esta nuvem está tapando minha visão! \n\nVeja se há uma flor atrás da nuvem, e só colete néctar se houver uma flor. Cuidado, isso pode mudar!"
      grade4_bee_conditionals_quantum2: |-
        Mais nuvens! \\r
        \\r
        Procure atrás
        de todas as nuvens para ver se elas escondem alguma flor antes de coletar o néctar.  \\r
        \\r
        Lembre-se:
        Nem todas as nuvens escondem alguma coisa!
      grade4_bee_conditionals_quantum4: "As vezes esta nuvem esconde uma flor, e outras vezes uma colmeia! \n\nUse o bloco `se/senão` para coletar néctar apenas se for uma flor. \nSenão para produzir mel (porque é uma colmeia)."
      grade4_bee_conditionals_quantum5: |-
        Deve haver uma flor ou uma colmeia
        atrás de cada uma dessas nuvens!\\r
        \\r
        Use o bloco "se/senão" para coletar néctar
        se houver uma flor.\\r
        Caso contrário, produza mel (porque há uma colmeia).
      grade4_bee_functions2: "As funções são blocos de código que realizam uma tarefa. \n\nUse a função `colete 2 néctares` para coletar o néctar de cada flor."
      grade4_bee_functions3: |-
        As funções são blocos de código que realizam
        uma tarefa. \\r
        \\r
        Use a função "obtenha 5" para obter 5 néctares por vez.
      grade4_bee_nestedLoops4: "Colete todo o néctar de cada flor\ne produza mel na colmeia. \\\\r\n\\\\r\nUse um laço aninhado. "
      grade4_frozen_freeplay: |-
        Você se tornou oficialmente um artista mestre!
        Crie um país das maravilhas de gelo.
      grade4_frozen_functions0: |-
        Um círculo é uma forma especial. Você pode descobrir
        que número usar para substituir os pontos de interrogação para desenhar um círculo?
      grade4_frozen_functions1a: |-
        Use o novo bloco "crie um círculo" para
        criar 10 círculos sobrepostos. Não se esqueça de avançar entre os círculos.
      grade4_frozen_functions2: |-
        Agora vamos criar 20 círculos
        sobrepostos, virando 18 graus entre cada círculo.
      grade4_frozen_functions3: |-
        Temos aqui um bloco "crie um círculo"
        que pode fazer círculos de tamanhos diferentes. Você pode usar isso para criar
        um pequeno círculo de tamanho 5 e um círculo maior de tamanho 10?
      grade4_frozen_functions4: |-
        Padrões de neve complexos podem ser criados com
        formas muito simples. Você pode criar um padrão repetindo 5 círculos de tamanho
        5 e 5 círculos de tamanho 10?
      grade4_frozen_nested_loop_diamonds2: |-
        Você sabia que cada floco de neve
        tem uma forma diferente? Vamos criar um novo floco de neve usando o bloco "Repita"
        para repetir um paralelogramo 4 vezes, virando 90 graus à direita entre
        cada paralelogramo.
      grade4_frozen_nested_loop_diamonds3: |-
        Agora, vamos criar um novo floco de neve
        usando o bloco repita para repetir um paralelogramo 10 vezes, virando 36 graus
        à direita entre cada um.
      grade4_frozen_square: |-
        Oi, eu sou Anna de Arendelle! Vamos fazer um quadrado
        com o bloco "repita", que usa menos blocos. Quantas vezes (???) o bloco
        "repita" deve repetir os blocos dentro dele para fazer um quadrado?
      grade4_frozen_square_loop1: |-
        Oi, eu sou Anna de Arendelle! Vamos fazer um quadrado
        com o bloco "repita", que usa menos blocos. Quantas vezes (???) o bloco
        "repita" deve repetir os blocos dentro dele para fazer um quadrado?
      grade4_frozen_square_loop2: |-
        Vamos criar três quadrados, virando depois
        de cada quadrado. Lembre-se de virar 120 graus antes de cada novo quadrado.
      grade4_frozen_square_loop3: |-
        Você consegue criar um floco de neve usando o bloco
        "repita" para criar um quadrado 10 vezes e o bloco "vire" para virar 36
        graus entre cada quadrado?
      grade4_review_artist1: |-
        Olá, eu sou um artista. Você pode escrever códigos para me fazer desenhar praticamente qualquer coisa. Use alguns blocos para me fazer desenhar sobre as retas cinzas na imagem. (Cada reta tem 100 pixels de comprimento)

        <br>
      grade4_review_artist2: |-
        Esta casa precisa de um telhado! Desenhe um triângulo. \\r
        \\r
        Dica:
        todos os três lados tem o mesmo tamanho.\\r
        \\r
        <img src="https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif"
        width="300"/>
      grade4_review_artist3: |-
        O bloco "pule" move o artista sem desenhar.
        Desenhe a linha tracejada usando os blocos "pule para a frente" e "avance".
        Cada linha tem 50 pixels de comprimento.
      grade4_review_bee1: |-
        Agora, use o bloco "repita" para coletar todo o
        néctar e produzir todo o mel.
      grade4_review_bee3: |-
        Que abelha trabalhadora!

        Ajude a abelha a coletar todo o néctar e produzir todo o mel com o menor número de blocos possível.
      grade5_artist_binary1: "Binário é uma forma de representar informações usando apenas duas opções. Aqui, vamos usar as opções \"desligado\" (representada\npelo número 0) e \"ligado\" (representada pelo número 1).  \n\nFoi fornecida uma grade de \"pixels\" pela qual você pode andar e criar designs virando em certos quadrados. \n\n**Você consegue fazer o artista desenhar \"01010101\" em binário na primeira fileira?**"
      grade5_artist_binary10: "<img src=\"https://images.code.org/0a30f23ff6138828d053267719d34fa8-image-1444435986654.00.22.png\" width=\"250px\"/>\n\n**Atividade Livre - Inspiração**: agora você aprendeu tudo o que precisa saber para criar um padrão como esse! \n\nSe essa imagem inspira você, tente fazer algo similar. Caso contrário, crie algo você mesmo. \n<br/>"
      grade5_artist_for_loops1: |-
        Use um bloco "repita" para desenhar este triângulo
        que tem 50 pixels de largura.
      grade5_artist_for_loops10: |-
        Você consegue descobrir como
        usar todas as coisas que você aprendeu para criar esta imagem?\\r
        \\r
        Precisa de uma
        dica? Clique aqui.
      grade5_artist_for_loops5: |-
        Apenas uma pequena alteração no código
        da última imagem pode criar este desenho. Você consegue descobrir qual é
        essa alteração?\\r
        \\r
        Dica: algo precisa ser removido!
      grade5_artist_functionparameters10: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\" width=\"250px\"/>\n\n**Atividade Livre - Inspiração**: Agora você aprendeu tudo o que precisa saber para criar um padrão como esse! \n\nSe essa imagem inspira você, tente fazer algo similar. Caso contrário, crie algo você mesmo. \n\nNota: Nós usamos o bloco `definir alpha` para fazer as \"pétalas\" desaparecerem para fora."
      grade5_artist_parameters_triangles2a: |-
        Você percebe algo diferente
        sobre esses blocos de função? Clique em "Executar" para ver o que acontece.
      grade5_artist_variables_hexagons1: |-
        Vamos tentar de novo! \\r
        \\r
        Você consegue
        definir a variável "comprimento" em 60 para fazer este design bacana com hexágonos?
      grade5_artist_variables_pentagon9: |-
        Agora, recrie o algoritmo do último
        nível para criar um pentágono de lados 150.
      grade5_artist_variables_pentagons1: |-
        Desenhe esse padrão de pentágonos com
        lados de 100 pixels definindo o valor correto para "comprimento" e colocando a variável
        "comprimento" em todos os lugares corretos. \\r
        \\r
        Você percebeu que só precisa
        definir o valor de "comprimento" uma vez, e o código usa o valor correto em todos os lugares?
      grade5_artist_variables_triangles1: "Vamos desenhar um triângulo equilátero. \n\nEle deve ter exatamente 50 pixels de comprimento em cada lado."
      grade5_artist_variables_triangles1_2018: "Vamos desenhar um triângulo equilátero. \n\nEle deve ter exatamente 50 pixels de comprimento em cada lado."
      grade5_artist_variables_triangles1_2019: "Vamos desenhar um triângulo equilátero. \n\nEle deve ter exatamente 50 pixels de comprimento em cada lado."
      grade5_bee_for_loops2: "Adicione o código necessário para garantir que a abelha colete todo o néctar. \n\nOlhe quanto código você precisa para esse desafio! (Vamos aprender uma maneira mais simples no próximo desafio.)"
      grade5_bee_for_loops4: Ajude a abelha a coletar todo o nectar.
      grade5_bee_for_loops7: "O último número em seu laço para é chamado de **\"incremento\"**. A cada execução do laço, a variável contador é alterada de acordo com o incremento. \n\nTente coletar essas flores usando um incremento de 2."
      grade5_playlab_variables13: |-
        Use o bloco "quando o personagem tocar"
        para enviar o cão de volta para a parte superior esquerda SOMENTE se ele tocar em qualquer outro personagem.
      grade5_playlab_variables2: |-
        A corrida do último desafio não foi
        muito justa! Altere a variável "velocidade\_cão" para garantir que você possa coletar mais
        bandeiras do que o gato. O primeiro a coletar 10 bandeiras vence!
      grade5_playlab_variables9: |-
        Aqui temos uma função chamada "patrulhe".
        \\r
        \\r
        Edite-a para mover o gato 400 pixels para cima, e então 400 pixels para baixo.
      gradek_artist_loops1: |-
        Ajude o artista a desenhar esta linha para frente duas vezes.

        ![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)
      gradek_artist_loops2: |-
        Nosso artista está tentando desenhar uma linha cinco vezes, mas não está conseguindo. Você pode ajudar?

        ![](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)
      level 'grade3_Loops_10: |-
        Que abelha trabalhadora!

        Ajude a abelha a coletar todo o néctar e produzir todo o mel com o menor número de blocos possível.
      level 'grade3_Loops_11: |-
        O formato deste caminho é diferente dos demais.

        Você consegue coletar todo o néctar usando o menor número possível de blocos?
      level 'grade3_Loops_3: Use um laço "repita" para coletar todo o néctar.
      level 'grade3_Loops_4: |-
        Agora, use o bloco "repita" para coletar todo o
        néctar e produzir todo o mel.
      level 'grade3_Loops_5: "Que lindo campo florido!  \n\nAjude a abelha a visitar cada flor. \n\nVocê consegue achar uma maneira de fazer isso com menos de 7 blocos?"
      level 'grade3_Loops_6: |-
        Quantas vezes os laços ajudaram você neste desafio?  \\r
        \\r
        Os laços
        são seus amigos! Use alguns deles para completar este desafio com o menor número
        de blocos possível.
      level 'grade3_Loops_7: |-
        Essas flores parecem deliciosas!\\r
        \\r
        Colete o néctar
        de cada uma das flores usando o menor número possível de blocos.
      pre-assessment survey q25A: Se sim, qual(is) curso(s) de ciência da computação você teve antes do seu curso atual?
      ramp_artist_loops9: Resolva este enigma desenhando um quadrado com lados de 200 pixels.
      ramp_artist_loops9_2018: Resolva este enigma desenhando um quadrado com lados de 200 pixels.
      ramp_artist_loops9_2019: Resolva este enigma desenhando um quadrado com lados de 200 pixels.
      subgoal U3 L4 introducing subgoal labels: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      subgoal U3L2 Using Simple Commands: |-
        <img src="https://images.code.org/0aca9e3ba0945f31ddd56438a45ed69c-image-1436286498758.png" align=right>

        Dado apenas 4 comandos da tartaruga, escreva um código no Aplicativo de Laboratório para completar os desenhos em cada um dos desafios abaixo. Seu objetivo é escrever um código que resolva o problema da forma mais eficiente possível usando apenas os comandos fornecidos.

        O que "eficiente" significa? Na ciência da computação isso pode significar várias coisas diferentes dependendo do assunto que estamos conversando. Trabalhe nesses desafios, tente resolvê-los de uma forma que você ache que é a melhor forma e iremos perguntar sobre eficiência no final.

        <img src="https://images.code.org/d26ed114448c5ffe75a75ed761fab5f0-image-1447888033281.gif" align=right>

        # Faça isso:

        Desenhe um quadrado 1 x 1 na frente e na esquerda da tartaruga da forma mais eficiente possível. O programa deve parar quando a tartaruga estiver em sua posição inicial, de frente para sua direção inicial.
      test_sarah: oi
