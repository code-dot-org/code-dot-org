ka:
  data:
    instructions:
      2-3 Artist 1 new_instruction: სალამი, მე მხატვარი ვარ. შეგიძლია დაწერო კოდი, რომლითაც მე თითქმის ყველაფერს დამახატვინებ. გამოიყენე რამდენიმე ბლოკი, რომ სურათში მოცემულ ნაცრისფერ ხაზებზე ზემოდან ვხატო. (თითოეული ხაზის სიგრძეა 100 პიქსელი)
      2-3 Artist 11_instruction: 'შექმენით საზღვარი გაჩერების ნიშნისთვის რვაკუთხედის დახატვით, რომელსაც რვა გვერდი ექნება, თითო 100 პიქსელი სიგრძის. რამდენი გრადუსით მოგიწევთ მობრუნება? (მინიშნება: რას უდრის 360 გაყოფილი რვაზე?) '
      2-3 Artist 12_instruction: 'დააყენეთ "გამეორების" ბლოკი ისე, რომ მან შექმნას "წრე", რომელიც თვალს დაასრულებს. თუ ყოველი მოძრაობა ერთი გრადუსით მარჯვნივ ბრუნვას შეესაბამება, რამდენჯერ უნდა გავიმეოროთ მოძრაობა სრული წრის შესრულებისთვის? 180? 360? 500?'
      2-3 Artist 2 new_instruction: 'ამ სახლს ნახევრად დასრულებული კედელი აქვს. ყოველი გვერდის სიგრძეა 100, მაგრამ ნახევრად დასრულებული კედლის სიგრძეა 50. დაასრულეთ კედელი. '
      2-3 Artist 2_instruction: |
        This house has a half-finished wall. Each side is
        100, but the half-finished wall is only 50. Complete the wall. 
      2-3 Artist 3.4_instruction: ახტომის ბლოკი მხატვარს დახატვის გარეშე ამოძრავებს. დახატეთ წყვეტილი ხაზი ახტომისა და დახატვის ბლოკების გამოყენებით.
      2-3 Artist 3_instruction: ეს ქუდის სიმაღლეა 100 პიქსელი. დახატეთ ქუდი, რომლის სიმაღლეა 70 პიქსელით ნაკლები.
      2-3 Artist 3new_instruction: წითელი ქუდის სიმაღლეა 100 პიქსელი. დაასრულეთ შავი ქუდის ხატვა ისე, რომ ის 70 პიქსელით უფრო მნოკლე იყოს. შავი ქუდის სიგანეა 50 პიქსელი.
      2-3 Artist 4_instruction: მომეხმარეთ ამ კატისთვის სახლის ბოლომდე დახატვაში.
      2-3 Artist 5_instruction: 'ჩაანაცვლეთ ეს კოდი "გამეორების" ბლოკით, რათა იგივე სახლი მხოლოდ სამი ბლოკის გამოყენებით დახატოთ.'
      2-3 Artist 6_instruction: 'სახლს სახურავი სჭირდება! დახატეთ სამკუთხედი. მინიშნება: სამივე გვერდი თანაბარი სიგრძისაა.'
      2-3 Artist 7_instruction: 'დაასრულეთ უკანასკნელი ფანჯრის მარჯვენა ნახევრის ხატვა. ყოველი კვადრატული ფანჯრის სიგანეა 25 პიქსელი. '
      2-3 Artist 8_instruction: 'დახატეთ ბოლომდე ოთახები თითოეული ცხოველისთვის მართკუთხედის ორ თანაბარ კვადრატად გაყოფით. მართკუთხედის სიგანეა 200, ხოლო სიმაღლე - 100 პიქსელი.'
      2-3 Artist 9_instruction: დახატეთ ბოლომდე ეს ფრანი
      2-3 Artist Assessment 1_instruction: 'შეჯამება: დაასრულეთ უკანასკნელი კბილის ხატვა, 25 პიქსელი სიგანისა და 25 პიქსელი სიმაღლის.'
      2-3 Artist Debugging 1_instruction: შეგიძლიათ ამ ქუდის ზედა ნაწილის სიგრზე 100 გახადოთ?
      2-3 Artist Debugging 10_instruction: 'მიმართულების პლატფორმა ჩემს კონტროლერზე ძალიან ვიწროა. რჩევა: გაზარდეთ სიგანეში 10 პიქსელით'
      2-3 Artist Debugging 11_instruction: 'დამეხმარეთ ჩემი მშვენიერი ფიფქის დასრულებაში. რამდენჯერ მომიწევს "გამეორება" ბოლომდე დასახატად?'
      2-3 Artist Debugging 12_instruction: ამ სცენას ოკეანის ტალღა უნდა დავუმატო. შეგიძლიათ დამეხმაროთ?
      2-3 Artist Debugging 2_instruction: კოდი სამი ულვაშისთვის, რომელსაც თქვენ ხედავთ, არასწორია. თითოეული ულვაშის სიგრძეა 75 პიქსელი. გაასწორეთ კოდი რომ სწორად დახატოთ ულვაშები.
      2-3 Artist Debugging 3_instruction: 'ჩემს ნავს ხვრელი აქვს! შეგიძლია შეაკეთო ხაზის კუთხის შეცვლით? მინიშნება: უკანასკნელი კუთხე 15 გრადუსით აცდენილია.'
      2-3 Artist Debugging 4_instruction: რა სურათს დახატვას ვცდილობთ? დაასრულეთ წერტილების შეერთება შესაბამისი ხაზებითა და კუთხეებით.
      2-3 Artist Debugging 5_instruction: 'კოდი ფეხისა და ტერფისთვის არასწორია. მინიშნება: ტერფი ძალიან გრძელია, შესაძლოა ერთი ნაბიჯის წაშლა დაგვჭირდეს'
      2-3 Artist Debugging 6_instruction: როგორც ჩანს სკამზე ვზივარ რომელსაც ერთი ფეხი აკლია. შეასწორეთ ბლოკები რომ ფეხი დაიხატოს.
      2-3 Artist Debugging 7_instruction: როგორც ჩანს code-ში C უკუღმაა დახატული. შეგიძლიათ C-ს დაამგვანოთ?
      2-3 Artist Debugging 8_instruction: 'ჩემი პოპელერი დაუსრულებელია. რამდენჯერ უნდა გავაკეთო "გამეორება" რომ დასრულდეს?'
      2-3 Artist Debugging 9_instruction: 'კოდი ამ ფესვისთვის არასწორია. მინიშნება: კუთხე აცდენილია 60 გრადუსით'
      2-3 Artist Debugging Assessment 1_instruction: 'ეს ფორმა ძალიან პატარაა. შეგიძლიათ გაზარდოთ? მინიშნება: ორივე მხარეს უნდა იყოს 75 პიქსელით გრძელი.'
      2-3 Artist Free Play_instruction: თავისუფლება! დახატეთ რაც გსურთ.
      2-3 Artist Functions 1_instruction: 'სალამი. მე ზომბი მხატვარი. მე სიყვარული ხატვა! დამეხმარეთ კვადრატული სათვალეების დახატვაში. მინიშნება: სათვალის ხიდი 25 პიქსელით მოკლეა კვადრატის სიგრძეზე.'
      2-3 Artist Functions 10_instruction: 'აქ ორი ფუნქციაა, ერთი დიდი მექანიზმების დასახატად, მეორე კი - პატარა. გამოიყენეთ ისინი მანქანის შიდა ნაწილის დასახატად!'
      2-3 Artist Functions 11.5_instruction: 'აქაც მოცემულია იგივე "დახატე ექვსკუთხედი" ფუნქცია. რა მოხდება თუ მხოლოდ 60 გრადუსით შემოვბრუნდებით ყოველი ციკლისას?'
      2-3 Artist Functions 11_instruction: '"დახატე კვადრატი" ფუნქციას დავარქვით "დახატე ექვსკუთხედი", მაგრამ ის მაინც კვადრატებს ხატავს! შეგიძლიათ "დახატე ექვსკუთხედი" ფუნქცია ისე შეცვალოთ, რომ დახატოს ექვსკუთხედი, 50 პიქსელიანი გვერდებით და სურათის დახატვაში ფუნქცია გამოიყენოთ?'
      2-3 Artist Functions 12_instruction: 'ფუნქციებით მარტივია რთული რაღაცების მრავალჯერ დახატვა. შეგიძლიათ გამოიყენოთ "დახატე ყვავილი" ფუნქცია რათა მებაღის ყუთი ბოლომდე შეავსოთ?(მინიშნება: მცენარეები 100 პიქსელით არიან დაშორებული)  '
      2-3 Artist Functions 13_instruction: ჩვენ მოგაწოდეთ ფუნქციები. გამოიყენეთ ისინი როგორც მოგესურვებათ ერთ ან რამდენიმე ციკლში რათა დახატოთ სურათები, რომელთა მეგობრებთან გაზიარება შეგეძლებათ. დააჭირეთ run-ს რომ იხილოთ მაგალითი.
      2-3 Artist Functions 2_instruction: 'ფუნქციები ახალი ბლოკების განსაზღვრის საშუალებას გაძლევთ! კვადრატის დამხატავი ბლოკები გადავიტანეთ ფუნქციაში "დახატე კვადრატი". შეგიძლიათ გამოიყენოთ "დახატე კვადრატი" სათვალეების შესაქმნელად? კვადრატები 75 პიქსელითაა დაშორებული.'
      2-3 Artist Functions 3_instruction: ჩაასწორეთ ფუნქცია რომ დახატოს კვადრატი გვერდით 115 და დახატეთ უფრო დიდი სათვალე. კვადრატები ახლა 45 პიქსელითაა დაშორებული.
      2-3 Artist Functions 4_instruction: 'გამოიყენეთ "გამეორება" ბლოკი რომ დახატოთ 3 კვადრატი.'
      2-3 Artist Functions 7_instruction: 'გამოიყენეთ "დახატე სახლი" ფუნქცია რომ დახატოთ ორი სახლი განსხვავებული პარამეტრებით. (მინიშნება: პირველი სახლი 100 პიქსელია).'
      2-3 Artist Functions 9_instruction: ეს არის ფიფქის ფუნქცია. ითამაშეთ ამ ფუნქციით და შექმენით ზამთრის სურათი! ეს თავისუფალი დონეა, ამიტომ არანაირი თავსატეხი არაა ამოსახსნელი. გაერთეთ!
      2-3 Artist Loops 1_instruction: შეგიძლიათ შექმნათ ექვსკუთხედი, გვერდებით 100 პიქსელი, რათა დაასრულოთ სურათი? შეგახსენებთ, ეს ნიშნავს რომ თქვენ მხოლოდ 60 გრადუსით მობრუნება მოგიწევთ!
      2-3 Artist Loops 10_instruction: რა მოუვა დიზაინს თუ უკანასკნელი წინ გადადგმული ნაბიჯის სიგრძეს გავანახევრებთ?
      2-3 Artist Loops 11_instruction: 'ახლა კი *კიდევ ერთი* ციკლი შემოვავლოთ ჩვენს ქმნილებას. არ დაგავიწყდეთ გარე ციკლის ბოლოს კუთხის დამატება.'
      2-3 Artist Loops 2_instruction: ახლა კი გამოიყენეთ გამეორების ბლოკი რათა უჯრედისგან გარსი მიიღოთ.
      2-3 Artist Loops 4_instruction: გინდათ იხილოთ რა მოხდება თუ ფიგურას ციკლის გამოყენებით ისევ და ისევ გავიმეორებთ?
      2-3 Artist Loops 5_instruction: ახლა ციკლი ოდნავ შევცვალოთ და ვნახოთ რამდენად განსხვავებულ სურათს მივიღებთ.
      2-3 Artist Loops 6_instruction: დაამატეთ კიდევ ერთი მოძრაობა და მობრუნება ციკლში და ნახეთ როგორ შეიცვლება თქვენი დიზაინი.
      2-3 Artist Loops 7_instruction: ციკლების გამოყენება მრავალგვარი მრავალკუთხედის შესაქმნელად შეგვიძლია. შეგიძლიათ ამ ექვსკუთხედში რომბი შექმნათ?
      2-3 Artist Loops 8_instruction: ჩავსვათ ორივე ელემენტი ციკლში.
      2-3 Artist Loops 9_instruction: "ერთსა და იმავე ელემენტები ციკლშია, მაგრამ ახლა მათ შორის მანძილსაც დავამატებთ.\r\nგამოიყენეთ აქამდე გამოყენებუკი კოდი, მაგრამ გარე ციკლის ბოლოს დაუმატეთ ერთი ნაბიჯი წინ."
      2-3 Artist Loops New 1_instruction: დავხატოთ ამ რობოტის თავი! შეგიძლიათ შექმნათ კვადრატი, რომლის გვერდების სიგრძე 100 პიქსელი იქნება?
      2-3 Artist Loops New 10_instruction: ახლა რამდენიმე V შევაერთოთ მათი ციკლში დახატვით.
      2-3 Artist Loops New 11_instruction: ამჯერად 24-ჯერ დავხატოთ. დაამატეთ კოდს 30 გრადუსით მარცხნივ მობრუნება და ჩასვით ყველაფერი გამეორების ბლოკში.
      2-3 Artist Loops New 12_instruction: |
        დახატეთ ბრილიანტი, გვერდით 100 პიქსელი.
        
      2-3 Artist Loops New 13_instruction: ახლა დახატეთ ბრილიანტი სამჯერ, ციკლის მეშვეობით.
      2-3 Artist Loops New 14_instruction: ახლა დავხატოთ ბრილიანტი ათჯერ, მაგრამ ყოველ ბრილიანტს შორის 90 გრადუსით მოვბრუნდეთ.
      2-3 Artist Loops New 15_instruction: დახატეთ რამე სახალისო.
      2-3 Artist Loops New 2_instruction: ესაა კოდი, რომლითაც კვადრატს ხატავთ. რა მოხდება თუ გამეორების ბლოკს გამოიენებთ ამ კოდის ოთხჯერ გასაშვებად?
      2-3 Artist Loops New 9_instruction: დახატეთ უბრალო V სადაც ორივე გვერდი 50 პიქსელი სიგრძისაა, რათა დაასრულოთ ისარი.
      2-3 Artist Match Hex Pic_instruction: 'შესაბამისობა: დაეხმარეთ ექვსკუთხედის დასრულებაში.'
      2-3 Artist Match Rho Pic_instruction: 'შესაბამისობა: ბოლომდე მიიყვანეთ გამოტოვებული კოდი.'
      2-3 Artist Match Sq Pic_instruction: 'შესაბამისობა: დაასრულეთ გამოტოვებული კოდი'
      2-3 Artist Match Tri pic_instruction: 'შესაბამისობა: შეავსეთ გამოტოვებული კოდის ადგილი.'
      2-3 Artist Nested Loops 1_instruction: "ციკლებს აქამდე იყენებდით ფორმების დასახატად, მაგრამ იცოდით რომ შეგიძლიათ ციკლი კიდევ ერთ ციკლში მოათავსოთ?\r\nციკლით გაიმეორეთ მთელი ეს ბლოკი სამჯერ სურათის დასახატად."
      2-3 Artist Nested Loops 10_instruction: სურათის დასასრულებლად ეს კოდი ციკლით გაიმეორეთ 12-ჯერ.
      2-3 Artist Nested Loops 11_instruction: სურათის დასასრულებლად ეს კოდი ციკლით ოთხჯერ გაიმეორეთ, ყოველი წრის შემდეგ შემობრუნდით 90 გრადუსით.
      2-3 Artist Nested Loops 12_instruction: სპირალის დასასრულებლად ეს კოდი ციკლით გაიმეორეთ 12-ჯერ.
      2-3 Artist Nested Loops 2_instruction: ახლა ციკლში 6-ჯერ გაატარეთ სამკუთხედი. ყოველი სამკუთხედის შემდეგ, დაგჭირდებათ 60 გრადუსით მობრუნება შემდეგი სამკუთხედის დახატვამდე.
      2-3 Artist Nested Loops 3_instruction: სურათის დასახატად თქვენ დაგჭირდებათ ამ სამკუთხედის ციკლით 12-ჯერ გამეორება. გაყავით წრეში გრადუსების რაოდენობა (360) იმ ფორმების რაოდენობაზე, რომლებიც უნდა დახატოთ (12), რათა გაარკვიოთ თუ რამდენი გრადუსით მოგიწევთ მობრუნება ყოველი ფორმის შემდეგ.
      2-3 Artist Nested Loops 4_instruction: 'ყვავილის დასახატად ეს ბრილიანტი 12-ჯერ გაიმეორეთ ციკლით. მინიშნება: 12 ბრილიანტი იგივეა, რაც 12 სამკუთეხდი რომელიც გააკეთეთ - რამდენი მობრუნებაა საჭირო ყოველი ფორმის შემდეგ?'
      2-3 Artist Nested Loops 5_instruction: შეავსეთ ამ შენობის ფანჯრები ჩასმული ციკლით. ფანჯრები 20 პიქსელი სიგრძისაა და 20 პიქსელითაა დაშორებული.
      2-3 Artist Nested Loops 6_instruction: დინოზავრს კუდის გასწვრივ რვა წვეტიანი გამონაზრარდი აქვს. თითოეული გამონაზარდი 30 პიქსელი სიგრძისაა. სამკუთხედი ციკლში რვაჯერ გაატარეთ, მაგრამ დარწმუნდით, რომ თითოეულ ციკლს შორის წინ გადაადგილდებით.
      2-3 Artist Nested Loops 7_instruction: ათჯერ გაატარეთ ციკლში ეს სამკუთხედი რომ დახატოთ მზე. ყოველი სამკუთხედის შემდეგ მოგიწევთ გადაადგილება და მობრუნება. შეგიძლიათ გაიგოთ რამდენითაა საჭირო მობრუნება თუ გაყოფთ წრეში გრადუსების რაოდენობას შემადგენელი ფიგურების რაოდენობაზე.
      2-3 Artist Nested Loops 8_instruction: ახლა ჩვენს სურათს ბალახი დავუმატოთ. თითოეული კონა 50 პიქსელითაა დაშორებული.
      2-3 Artist Nested Loops 9_instruction: ამ სურათს ყვავილის დამატებით დავასრულებთ. გაიმეორეთ ბრილიანტი ციკლში 12-ჯერ რათა დახატოთ თქვენი ყვავილი.
      2-3 Artist Nested Loops Free Play_instruction: თავისუფლება! დახატეთ რამე მაგარი ჩასმული ციკლების გამოყენებით.
      2-3 Bee Conditionals 1_instruction: სალამი! მე ფუტკარი ვარ. დამეხმარე ყვავილიდან ნექტრის აღებაში.
      2-3 Bee Conditionals 10_instruction: "იასამნისფერ ყვავილს შეიძლება ჰქონდეს 1 ან 0 ნექტარი. ფრთხილად - არ მოკრიბო ნექტარი ისეთი ყვავილისგან, რომელიც მას არ შეიცავს. \r\n"
      2-3 Bee Conditionals 11_instruction: მოკრიბე ნექტარი იმ ყვავილებისგან, რომელიც მას შეიცავენ.
      2-3 Bee Conditionals 12_instruction: ყველა ყვავილის შესამოწმებლად და მათგან ნექტარის მოსაკრებად გამოიყენე ციკლი.
      2-3 Bee Conditionals 13_instruction: 'შეაგროვე ნექტარი და დაამზადე თაფლი. მინიშნება: რა მოხდება, თუ "თუ ნექტარი არის" პირობას წითელი ყვავილისთვის გამოიყენებ? შეგიძლია ამ დავალებაში ციკლის გამოყენება?'
      2-3 Bee Conditionals 14_instruction: 'შეაგროვე ნექტარი და დაამზადე თაფლი. ფრთხილად - არ მოკრიბო ნექტარი იისფერი ყვავილისგან, თუ ის ნექტარს არ შეიცავს.'
      2-3 Bee Conditionals 15_instruction: მოკრიბე ნექტრი ოთხივე ყვავილისგან.
      2-3 Bee Conditionals 2_instruction: 'ჰეი, მე ფუთკარი ვარ! დამეხმარე - ყველა ყვავილის ნექტარი უნდა მოვკრიბო. გამოიყენე ციკლი.'
      2-3 Bee Conditionals 3_instruction: დამეხმარე, მოვკრიბო ყველა ნექტარი და დავამზადო თაფლი. გამოიყენე ციკლი.
      2-3 Bee Conditionals 4_instruction: 'დამეხმარე - ყველა ყვავილის ნექტარი უნდა მოვკრიბო და მერე თაფლი გავაკეთო.'
      2-3 Bee Conditionals 5_instruction: 'იისფერ ყვავილებს აქვთ 1 ან 0 ნექტარი, მაგრამ შენ არ იცი, რომელს რამდენი აქვს. ფრთხილად - არ მოკრიბო ნექტარი ისეთი ყვავილისგან, რომელიც მას არ შეიცავს. "თუ" ბლოკით შეამოწმე, შეიცავს თუ არა ყვავილი ნექტარს.'
      2-3 Bee Conditionals 6_instruction: 'შეამოწმე ეს ყვავილი "თუ" ბლოკით და ნახე, შეიცავს თუ არა იგი ნექტარს.'
      2-3 Bee Conditionals 7_instruction: მოაროვე ნექტარი ყოველი ყვავილისგან, რომელიც მას შეიცავს.
      2-3 Bee Conditionals 8_instruction: 'ამ მდელოზე წითელი და იისფერი ყვავილებია. წითელ ყვავილებში ნექტარის რაოდენობა ცნობილია, იისფერებში კი - უცნობი. მოაგროვე ნექტარი მთლიანად.'
      2-3 Bee Conditionals 9_instruction: მოკრიბე მთლიანად ყოველი ყვავილის ნექტარი.
      2-3 Bee Conditionals Assessment 1_instruction: 'შეფასება: შეაგროვე მთელი ნექტარი. ფრთხილად იყავით, არ სცადოთ ნექტრის აღება იასამნისფერი ყვავილიდან, თუ მას ნექტარი არ აქვს.'
      2-3 Bee Debugging 1_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 10_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 2_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 3_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 4_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 5_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა. ახლა შეგიძლია გამოიყენო გაშვება და ნაბიჯი.
      2-3 Bee Debugging 6_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 7_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 8_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging 9_instruction: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.
      2-3 Bee Debugging Assessment 1_instruction: 'შეჯამება: ეს ბლოკები არ მომწონს. გაასწორე შეცდომა/შეცდომები რათა შეაგროვო მთელი ნექტარი და გააკეთო თაფლის სრული რაოდენობა.'
      2-3 Bee Functions 1_instruction: 'ფუნქცები კოდის ბლოკებია, რომლებიც გარკვეულ დავალებას ასრულებენ. გამოიყენე "აიღე 2 ნექტარი" ფუნქცია რათა შეაგროვო ნექტარი თითოეული ყვავილიდან.'
      2-3 Bee Functions 10_instruction: იასამნისფერ ყვავლის შეიძლება ჰქონდეს ან 1 ნექტარი, ან 0. შექმენი ფუნქცია რომელიც მხოლოდ იმ იასამნისფერი ყვავილებიდან აგროვებს ნექტარს, რომელთაც აქვთ ნექტარი.
      2-3 Bee Functions 2_instruction: 'ფუნქციები კოდის ბლოკებია რომლებიც გარკვეულ დავალებას ასრულებენ. გამოიყენე "აიღე 5" ფუნქცია რათა აიღო 5 ნექტარი ერთ ჯერზე. გამოიყენე ციკლი რომ ბლოკები სწორად დათვალო.'
      2-3 Bee Functions 3_instruction: მოკრიბე მთლიანად ყოველი ყვავილის ნექტარი.
      2-3 Bee Functions 4_instruction: '"გადაადგილდი და აიღე ნექტარი" ფუნქცია ფუტკარს გადააადგილებს, აგროვებს ნექტარს და შემდეგ აბრუნებს იქ, საიდანაც დაიწყო. გამოიყენე ეს ფუნქცია რათა შეაგროვო ყველა ნექტარი.'
      2-3 Bee Functions 5_instruction: ახლა ყვავილებზე მეტი ნექტარია. შეასწორე ფუნქცია ისე, რომ ის აგროვებდეს 4 ნექტარს და შეაგროვე ყველა ნექტარი ყვავილებიდან.
      2-3 Bee Functions 6_instruction: ახლა გამოიყენე იგივე ფუნქცია რათა ნექტარი სამი ყვავილიდან აიღო.
      2-3 Bee Functions 7_instruction: ახლა ყვავილები უფრო შორსაა. შეასწორე ფუნქცია და გამოიყენე ის ყვავილებიდან მთელი ნექტარის შესაგროვებლად.
      2-3 Bee Functions 8_instruction: შექმენი შენი ფუნქცია, რომელიც აგროვებს 7 ნექტარს, გადაადგილდება წინ და აკეთებს 7 თაფლს. გამოიყენე ფუნქცია რათა შეაგროვო ნექტარი თითოეულ ყვავილზე და გააკეთე თაფლი თითოეულ ფიჭასთან.
      2-3 Bee Functions 9_instruction: შექმენი შენი ფუნქცია, რომელიც გაივლის ბილიკს, აიღებს ნექტარს, გაკეთებს თაფლს და დააბრუნებს ფუტკარს ბილიკის დასაწყისში.
      2-3 Bee Functions Assessment 1_instruction: 'შეჯამება: გამოიყენე მოცემული ფუნქცია ყველა ყვავილიდან ნექტრის შესაგროვებლად.'
      2-3 Bee Functions Assessment 2_instruction: 'შეჯამება: შექმენი ფუნქცია რათა ერთ ჯერზე 3 თაფლი გააკეთო.'
      2-3 Bee Loops 1_instruction: 'თითოეული ყვავილი შეიცავს ნექტრის ერთ ერთეულს. შეაგროვე ნექტარი თითოეული ყვავილიდან. '
      2-3 Bee Loops 10_instruction: შეგიძლია გამოიყენო while ციკლი სხვა ორ ციკლში და შეაგროვო მთელი ნექტარი?
      2-3 Bee Loops 11_instruction: გამოიყენე while ციკლები რომ შეაგროვო ყველა ნექტარი ამ მდელოს ყვავილებიდან.
      2-3 Bee Loops 12_instruction: გამოიყენე while ციკლები რომ შეაგროვო ყველა ნექტარი ამ მდელოს ყვავილებიდან.
      2-3 Bee Loops 13_instruction: 'შეჯამება: გამოიყენე გამეორების ბლოკი რათა შეაგროვო ყველა ნექტარი.'
      2-3 Bee Loops 1A_instruction: 'გამარჯობა, მე ფუტკარი ვარ. შეგიძლია დამეხმარო ყვავილებიდან ნექტრის შეგროვებაში? '
      2-3 Bee Loops 2_instruction: გამოიყენე ციკლი რომ შეაგროვო ნექტარი და გააკეთო თაფლი.
      2-3 Bee Loops 2A_instruction: შეგიძლია იგივე დავალება უფრო მარტივად ციკლით შეასრულო?
      2-3 Bee Loops 3_instruction: შეაგროვე ნექტარი თითოეული ყვავილიდან და გააკეთე თაფლი თითოეულ ფიჭასთან.
      2-3 Bee Loops 3A_instruction: შეგიძლია გამოიყენო ციკლი ყველა ნექტრის შესაგროვებლად?
      2-3 Bee Loops 3B_instruction: ახლა გამოიყენე ახალი გამეორების ბლოკი რათა შეაგროვო ყველა ნექტარი და გააკეთო ყველა თაფლი.
      2-3 Bee Loops 4_instruction: გამოიყენე წინა თავსატეხში გამოყენებულის მსგავსი ციკლი, მაგრამ ჩაამატე მობრუნება.
      2-3 Bee Loops 4A_instruction: რა მოხდება თუ ამ მწკრივს სამჯერ გაიმეორებ ციკლში? არ დაგავიწყდეს ბოლოს თაფლის გაკეთება!
      2-3 Bee Loops 5_instruction: გამოიყენე ციკლი რომ ჩაიარო კიბეები და შეაგროვო ნექტარი.
      2-3 Bee Loops 6_instruction: გამოიყენე ციკლი რომ შეაგროვო ნექტარი ყველა ყვავილიდან და გააკეთო თაფლი ყველა ფიჭასთან.
      2-3 Bee Loops 7_instruction: ჩასვი ეს ბლოკები ციკლში რათა შეაგროვო ნექტარი ყველა ყვავილიდან.
      2-3 Bee Loops 8_instruction: 'ამ იასამნისფერ ყვავილებს განუსაზღვრელი რაოდენობის ნექტარი აქვთ. გამოიყენე "სანამ ნექტარია" ციკლი რათა შეაგროვო მთელი ნექტარი. ეს ციკლი იმუშავებს, სანამ პირობა ჭეშმარიტი იქნება, ანუ ნექტარი > 0.'
      2-3 Bee Loops 9_instruction: '"while" ციკლს შეუძლია შეასრულოს იგივე მოქმედება, რასაც if დებულება ასრულებს ციკლში.'
      2-3 Bee Loops Assessment 1_instruction: 'შეჯამება - გამოიყენე while ციკლი რომ შეაგროვო მთელი ნექტარი ამ ყვავილიდან.'
      2-3 Maze 1_instruction: 'შეგიძლია დამეხმარო ჩემი ჯიუტი ღორის დაჭერაში? დაალაგე რამდენიმე "გადაადგილდი წინ" ბლოკი და დააჭირე "გაშვება"-ს. '
      2-3 Maze 10_instruction: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
      2-3 Maze 11_instruction: მიმიყვანე ყვავილთან, მშია! რამდენჯერ მოგიწევს ბლოკის გამეორება?
      2-3 Maze 12 (copy 1)_instruction: 'შეგიძლია წინა პასუხი მხოლოდ ორი ბლოკით შეცვალო? (მინიშნება: შექმენი ციკლი "გამეორება" ბლოკის გამოყენებით.)'
      2-3 Maze 12 (copy 2)_instruction: 'შეგიძლია წინა პასუხი მხოლოდ ორი ბლოკით შეცვალო? (მინიშნება: შექმენი ციკლი "გამეორება" ბლოკის გამოყენებით.)'
      2-3 Maze 12 (old)_instruction: მიმიყვანე ღორთან, ახლა გამეორების ბლოკით!
      2-3 Maze 12_instruction: 'შეგიძლია ჩაანაცვლო ხუთი ბლოკი მხოლოდ ორი ბლოკით? (მინიშნება: შექმენი ციკლი "გამეორება" ბლოკის გამოყენებით.)'
      2-3 Maze 13 (old)_instruction: 'მიმიყვანე ღორთან, ახლა "გაიმეორე სანამ" ბლოკით!'
      2-3 Maze 13_instruction: მიმიყვანე ღორთან მხოლოდ ორი ბლოკით.
      2-3 Maze 14 (old)_instruction: 'მიმიყვანე ღორთან "გაიმეორე სანამ" ბლოკით!'
      2-3 Maze 14_instruction: 'მიმიყვანე მზესუმზირასთან! (სადაა "გამეორება" ბლოკი როცა გჭირდება?)'
      2-3 Maze 15 (old)_instruction: 'მიმიყვანე ღორთან "გაიმეორე სანამ" ბლოკით!'
      2-3 Maze 15_instruction: გამოიყენე ორი ციკლი რომ ღორთან ნაკლები ბლოკის გამოყენებით მიხვიდე.
      2-3 Maze 16 (old)_instruction: 'მიმიყვანე ღორთან "გაიმეორე სანამ" ბლოკით!'
      2-3 Maze 16 before_instruction: მიმიყვანე ღორთან.
      2-3 Maze 16_instruction: მიმიყვანე მზესუმზირასთან. მწკრივი ციკლში გაუშვი!
      2-3 Maze 2_instruction: ეს ღორი ჩემს ბუმბულებს ურევს. მომეხმარე დავიჭირო!
      2-3 Maze 3_instruction: მონიშნე ტრაექტორია და მიმიყვანე გოჭამდე. უფრთხილი ასაფეთქებელს!
      2-3 Maze 4_instruction: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
      2-3 Maze 5_instruction: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
      2-3 Maze 6_instruction: დამშვიდდი და მაპოვნინე ეს ტუტუცი გოჭი. თორემ გავბრაზდები!
      2-3 Maze 7_instruction: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
      2-3 Maze 8_instruction: მიმიყვანე ღორთან!
      2-3 Maze 9_instruction: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
      2-3 Maze Loops 1_instruction: შეგიძლია მიმიყვანო ღორთან 5 ბლოკის გამოყენებით?
      2-3 Maze Loops 17_instruction: მიმიყვანე მზესუმზირასთან!
      2-3 Maze Loops 18_instruction: მიმიყვანე მზესუმზირასთან!
      2-3 Maze Loops 19_instruction: მიმიყვანე მზესუმზირასთან!
      2-3 Maze Loops 20_instruction: მიმიყვანე მზესუმზირასთან!
      2-3 Maze Loops 21_instruction: მიმიყვანე მზესუმზირასთან!
      2-3 Maze Loops Assessment 1_instruction: 'შეჯამება:  მიმიყვანე მზესუმზირასთან მხოლოდ 5 ბლოკის გამოყენებით! '
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: მიმიყვანე ღორთან! რომელი ბლოკები გამეორდა?
      2-3 Maze sq10v2_instruction: მიმიყვანე ღორთან! რომელი ბლოკები გამეორდა?
      2-3 maze sq11_instruction: მიმიყვანე ღორთან! რომელი ბლოკები გამეორდა?
      2-3 maze sq12_instruction: 'შეგიძლია წინა პასუხი ციკლით ჩაანაცვლო რომელიც "გამეორება" ბლოკს შეიცავს?'
      2-3 maze sq13_instruction: 'ძვირფასო პიროვნება. მე ზომბი. უნდა... მივიდე... მზესუმზირასთან. შექმენი ციკლი "გაიმეორე სანამ" ბლოკით.'
      2-3 maze sq14_instruction: შეგიძლია მიმიყვანო მზესუმზირასთან მხოლოდ ოთხი ბლოკის გამოყენებით?
      2-3 maze sq15_instruction: შეგიძლია მიმიყვანო მზესუმზირასთან მხოლოდ ხუთი ბლოკის გამოყენებით?
      2-3 maze sq16_instruction: კარგი, ეს მსგავსია, მაგრამ ოდნავ განსხვავებული. შეგიძლია ხუთი ბლოკით გააკეთო?
      2-3 Maze sq2_instruction: მონიშნე ტრაექტორია და მიმიყვანე გოჭამდე. უფრთხილი ასაფეთქებელს!
      2-3 Maze sq3_instruction: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
      2-3 Maze sq4_instruction: დამშვიდდი და მაპოვნინე ეს ტუტუცი გოჭი. თორემ გავბრაზდები!
      2-3 Maze sq5_instruction: მიმიყვანე ღორთან! რამდენჯერ მოგიწევს ბლოკის გამეორება?
      2-3 Maze sq6_instruction: 'შეგიძლია წინა ამონახსნი მხოლოდ ორი ბლოკით ჩაანაცვლა? (მინიშნება: გმაოიყენე ბლოკი "გამეორება")'
      2-3 Maze sq7_instruction: მიმიყვანე მწავანე ბოროტმოქმედამდე მხოლოდ სამი ბლოკის გამოყენებით.
      2-3 Maze sq8_instruction: 'მიმიყვანე ამ გოჭამდე! (სადაა ბლოკი "გამეორება" ახლა, როცა მჭირდება?)'
      2-3 Maze sq9_instruction: 'შექმენი ციკლები - ასე გოჭამდე ნაკლები ბლოკის გამოყენებით მიხვალ.'
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: დაეხმარე ჩიტს ჯიუტი ღორის დაჭერაში მისი წინ გადაადგილებით
      4-5 Artist 1_instruction: 'დამასრულებინე ჩემი ყუთის ხატვა. (ყოველი გვერდის სიგრძე არის 300 პიქსელი) '
      4-5 Artist 10_instruction: 'კოდის შესამოწმებლად დააჭირე ღილაკს "გაშვება". ნახატის დასასრულებლად გიმეორე რამდენჯერმე. ფერი ყოველ ჯერზე შეიცვლება.'
      4-5 Artist 11_instruction: დაასრულე მწვანე ხაზები. ყოველი ხაზის სიგრძეა 300 პიქსელი, მათ შორის დაშორება კი 15 პიქსელია.
      4-5 Artist 2_instruction: შეგძლია შექმნა ამ კოდისგან ციკლი და დაასრულო კვადრატი?
      4-5 Artist 3.5_instruction: 'სცადე მიხვდე, რა მოხდება, თუ ამ კოდს გაუშვებ (ან დააჭირე ღილაკს "გაშვება" და ნახე). შემდეგ გაუშვი იმდენჯერ, რამდენიც საჭიროა ნახატის დასასრულებლად. ფერები ყოველ ჯერზე (დიდი ალბათობით) დსხვადასხვა იქნება.'
      4-5 Artist 3_instruction: 'ყვავილების მართკუთხა კლუმბის პერიმეტრი არის 600, სიგრძე - 200. დახატე მართკუთხედი.'
      4-5 Artist 4_instruction: რამდენი გრადუსია წრეში? შექმენი ციკლი ბლოკებისგან და დახატე ფერადი წრე.
      4-5 Artist 5_instruction: რამდენ გრადუსს გამოიყენებ?
      4-5 Artist 6_instruction: ამ ტოლგვერდა სამკუთხედის კუთხეებია 60, 60 და 60 გრადუსი. თითოეული გვერდის სიგრძეა 200 პიქსელი. დაასრულე ნახატი.
      4-5 Artist 7_instruction: ამ სამკუთხედის კუთხეებია 30, 60 და 90 გრადუსი. დახრილი გვერდის სიგრძე 100 პიქსელ სიმაღლეზე ორჯერ მეტია. დაასრულე ნახატი.
      4-5 Artist 8_instruction: ფეხბურთის მოედნის გამყოფი ხაზი გვერდითი ხაზების მართობულია. ამ მოედნის პერიმეტრია 800 პიქსელი და მისი სიგრძეა 240 პიქსელი. რას უდრის მისი სიგანე? დახატე საზღვრები და გამყოფი ხაზი.
      4-5 Artist 9_instruction: დახატე მეორე ნახევარი რომ დიზაინი სიმეტრიული გამოვიდეს. სამკუთხედები ტოლგვერდაა და 50 პიქსელი სიგრძის.
      4-5 Artist Assessment 1_instruction: 'შეჯამება: გამოიყენე ციკლი ტოლგვერდა სამკუთხედის დასახატად. თითოეული გვერდი 300 პიქსელია.'
      4-5 Artist For Loops 1_instruction: ჩასვი რიცვები 1-დან 10-მდე სიგანის ბლოკებში და გაუშვი კოდი.
      4-5 Artist For Loops 11_instruction: დაასრულე for ბლოკი ისე, რომ დაითვალოს 0, 20, 40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'რა მოხდება თუ შევანაცვლებთ "-დან" და "-მდე" რიცხვებს? დაასრულე "for" ბლოკი ისე, რომ დაითვალოს 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: 'დიზაინი "for" ციკლის გარეშე დაიწყო და ბევრ ბლოკს საჭიროებს! გამოიყენე "for" ბლოკი და დაასრულე სპირალი. მინიშნება: უკანასკნელი ხაზის სიგრძეა 250 პიქსელი.'
      4-5 Artist For Loops 14_instruction: 'ვიღაცამ კოდი დაიწყო და შემდეგ გაიაზრა რომ უფრო სწრაფი გზა უნდა არსებობდეს! გამოიყენე "for" ბლოკი სხვა ბლოკების ჩასანაცვლებლად და დაასრულე სამკუთხა სპირალი. (მინიშნება: უაკანასკნელი ხაზის სიგრძეა 300 პიქსელი.)'
      4-5 Artist For Loops 15_instruction: 'ვიღაცამ კოდი დაიწყო და შემდეგ გაიაზრა რომ უფრო სწრაფი გზა უნდა არსებობდეს! გამოიყენე "for" ბლოკი სხვა ბლოკების ჩასანაცვლებლად და დაასრულე ექვსკუთხა სპირალი. (მინიშნება: უაკანასკნელი ხაზის სიგრძეა 200 პიქსელი.)'
      4-5 Artist For Loops 3_instruction: 'როგორ დავითვაოთ 1-დან 50-მდე? შეასწორე ბლოკი "For".'
      4-5 Artist For Loops 4_instruction: 'შეასწორე ბლოკი "For" ისე, რომ 1-დან 10-მდე დაითავლოს ნაბიჯით 1.'
      4-5 Artist For Loops 6_instruction: 'დახატე კვადრატები გვერდებით 50, 60, 70, 80 და 90 პიქსელი. შენ მოგიწევს გამოიყენო ფუნქცია "დახატე კვადრატი" ხუთჯერ.'
      4-5 Artist For Loops 7_instruction: 'დახატე კვადრატები და გამოიყენე "count with" ბლოკი რათა შეცვალო მათი ზომები. მოათავსე "მთვლელი" ბლოკი "დახატე კვადრატი" ფუნქციაში. მითითება: ეს ცვლადების კატეგორიაშია.'
      4-5 Artist For Loops 8_instruction: 'შეგიძლია დაასრულო პროგრამა ბლოკების "for" ბლოკში მოთავსებით რომელიც 10-დან 200-მდე ათობით ითვლის? შეგიძლია "for" ბლოკი იპოვო კატეგორიაში "ციკლები".'
      4-5 Artist For Loops 9_instruction: 'ამ წრეწირების ზომაა 5, 10, 15, 20, 25, 30 და 35. დახატე წრეები "For" ბლოკის გამოყენებით.'
      4-5 Artist Free Draw 1_instruction: თავისუფალი თემა! შეგიძლია დახატო რაც გინდა.
      4-5 Artist Functions 1_instruction: ამ სამკუთხედის დასახატად გამოიყენე გამეორების ციკლი.
      4-5 Artist Functions 10a_instruction: 'ჩასვი ეს კოდი "დახატე ფიფქი" ფუნქციაში და ჩაანაცვლე 50 პარამეტრით "ზომა". ფუნქცია უკვე გამოძახებულაი რათა შექმნას 100 პიქსელიანი ფიფქი.'
      4-5 Artist Functions 10b_instruction: 'გამოიყენე "დახატე ფიფქი" ფუნქცია სხვადასხვა ზომის ფიფქების შესაქმნელად. მინიშნება: პირველი ფიფქი სიგრძით 25-ია და ყოველი ფიფქი ორჯერ დიდია წინა ფიფქზე.'
      4-5 Artist Functions 11_instruction: 'ეს "დახატე ექვსკუთხედი" ფუნქცია იყენებს "დახატე სამკუთხედი" ფუნქციას. დაასრულე ექვსკუთხედის ფუნქცია. (მინიშნება: ექვსკუთხედს აქვს 6 გვერდი, თითოეული 100 პიქსელი სიგრძის)'
      4-5 Artist Functions 12_instruction: 'დაასრულე "დახატე ტალღები" ფუნქცია. თითოეული ტალღა შედგება ზედა და ქვედა ტალღისგან.  მინიშნება: დახატე 5 ლურჯი ტალღა.'
      4-5 Artist Functions 13 Free play_instruction: აქ რამდენიმე ფუნქციაა პლანეტების, ვარსკვლავების, რაკეტებისა და რობოტების დასახატად. გამოიყენე ისინი როგორც მოგესურვება რათა შექმნა სურათები რომელთა გაზიარება მეგობრებთან შეგეძლება.
      4-5 Artist Functions 14 Free play_instruction: 'მოგაწოდეთ რამდენიმე ფუნქცია. გამოიყენე ისინი ერთ ან მეტ ციკლში როგორც მოგესურვება რათა შექმნა სურათები რომელთა გაზიარება მეგობრებთან შეგეძლება. დააჭირე "გაშვება"-ს რათა ნახო მაგალითი.'
      4-5 Artist Functions 15 Assessment_instruction: 'შეჯამება: გამოიყენე "დახატე კვადრატი" ფუნქცია კვადრატების შესაქმნელად. კვადრატების ზომებია 50, 100 და 150 პიქსელი.'
      4-5 Artist Functions 2a_instruction: 'ახლა ჩასვი ეს ბლოკები ახალ ფუნქციაში "პატარა სამკუთხედის დახატვა" და გამოიძახე იგი.'
      4-5 Artist Functions 2b_instruction: 'ახლა კი მოცემული ბლოკებით შექმენი ახალი ფუნქცია "პატარა სამკუთხედის დახატვა".'
      4-5 Artist Functions 3_instruction: 'ახლა შექმენი ფუნქციები "დახატე საშუალო სამკუთხედი" და "დახატე დიდი სამკუთხედი. "დახატე პატარა სამკუთხედი" ფუნქცია უკვე მზადაა. სამკუთხედების გვერდების სიგრძეებია 50 (პატარა), 100 (საშუალო) და 150 (დიდი). '
      4-5 Artist Functions 4_instruction: 'ამ ახალ "დახატე სამკუთხედი" ფუნქციას პარამეტრი გააჩნია და შეუძლია წინა სამივე ფუნქციის სამუშაო შეასრულოს. დახატე იგივე სამკუთხედები ამ ახალი ფუნქციის გამოყენებით.'
      4-5 Artist Functions 5_instruction: 'შეგიძლია გადააქციო ფუნქცია "სამკუთხედის დახატვა" "კვადრატის დახატვად" და შეცვალო ნახატი?'
      4-5 Artist Functions 6_instruction: 'გამოიყენე ფუნქციები "სამკუთხედის დახატვა" და "კვადრატის დახატვა" და დახატე სახლი. (მინიშნება: კვადრატის გვერდი 200 პიქსელია)'
      4-5 Artist Functions 6b_instruction: 'გამოიყენე "დახატე კვადრატი" და სამკუთხედის ფუნქციები სხვა ბლოკებთან ერთად რათა შექმნა სახლი მათი "დახატე სახლი" ფუნქციაში დამატებითა და გამოძახებით.'
      4-5 Artist Functions 7_instruction: 'გამოიყენე "დახატე სახლი" ფუნქცია სახლების შესაქმნელად რომელთა ზომებია 100 პიქსელი და 50 პიქსელი. სახლები ერთმანეთისგან დაშორებულია 50 პიქსელით.'
      4-5 Artist Functions 8_instruction: 'ფუნქციას "ყვავილის დახატვა" აქვს პარამეტრი, რომელიც არეგულირებს ღეროს სიმაღლეს. დააყენე იგი 200-ზე და ნახე, რა მოხდება.'
      4-5 Artist Functions 9_instruction: დახატე ეს 3 ყვავილი. პირველის სიმაღლეა 100 და ყველი მომდევნო წინაზე 50 პიქსელით უფრო მაღალია. ყვავილები 100 პიქსელითაა დაშორებული.
      4-5 Artist Patterns 1_instruction: |
        შეგიძლია ამ კვადრატის დახატვა ციკლის გამოყენებით? 
        გვერდის სიგრძე 20 პიქსელია.
      4-5 Artist Patterns 10_instruction: 'ეს კოდი ექვსკუთხედების ორ სტრიქონს ხატავს - გაიმეორე ყველაფერი ციკლში ოთხჯერ რათა დახატო მთელი ფიჭა. მინიშნება: ყველაზე გარეთა ციკლში დაგჭირდება 120 პიქსელით უკან გადასვლა რათა მხატვარმა ეკრანს გარეთ არ სცადოს დახატვა.'
      4-5 Artist Patterns 11_instruction: 'რამდენჯერ გჭირდება ამისი ციკლით გამეორება რომ ნახევარწრე დახატო? მინიშნება: თუ წრეში 360 გრადუსია და თითოეული ციკლი 3 გრადუსით გადაადგილდება, რამდენი ციკლი იქნება საჭირო მთელი წრის დასახატად?'
      4-5 Artist Patterns 12_instruction: რა მოხდება, თუ ამ ციკლის დააკოპირებ და მოაბრუნებთ მარცხნივ და არა მარჯვნივ? შეგიძლია დახატო ტალღა ამის გამეორებით?
      4-5 Artist Patterns 13_instruction: 'ახლა ეს ყველაფერი ოთხჯერ გავიმეოროთ ციკლში რათა შევქმნათ სურათის ჩარჩო. კუთხეებთან ფრთხილად - უბრალოდ 90 გრადუსით ვერ მობრუნდები! თუ 3 გრადუსით მობრუნების 60-ჯერ გამოერება ნახევარწრეს ქმნის, კოდის რომელი ბლოკები შექმნის მეოთხედ წრეებს კუთხეებისთვის?'
      4-5 Artist Patterns 2_instruction: თუ მოათავსებ შენს კვადრატის ციკლს კიდევ ერთ ციკლში, მიიღებ ჩასმულ ციკლს. რა უნდა დაუმატო გარე ციკლს იმისთვის, რომ თხუთმეტივე კვადრატი ერთმანეთის გვერდზე იყოს?
      4-5 Artist Patterns 3_instruction: ახლა ერთი ნაბიჯით ღრმად წავიდეთ! კოდის მთელი ბლოკი ჩავსვით ციკლში, მაგრამ საჭიროა მხატვარი უკან დავაბრუნოთ შემდეგი ხაზის დასახატად. კოდის რომელი ბლოკი უნდა მოვათავსოთ გარე ციკლის ბოლოში რომ მთელი ბადე დაიხატოს?
      4-5 Artist Patterns 4_instruction: რომბის გვერდი არის 50 პიქსელი და კუთხეების ზომაა 120 და 60 გრადუსი. დახატე ციკლის გამოყენებით.
      4-5 Artist Patterns 5.5_instruction: რამდენჯერ მოგიწევს ამ ბლოკის გამეორება ბრილიანტების სრული ბადის მისაღებად?
      4-5 Artist Patterns 5_instruction: 'გავიმეოროთ 6 ბრილიანტიანი სტრიქონის შესაქმნელად. დაუკვირდი, რომ ჩვენი ბრილიანტის კოდი ორის მაგივრად სამჯერ გამეორებაზე შევცვალეთ - როგორ გგონიათ, რატომ?'
      4-5 Artist Patterns 6_instruction: რამდენჯერ მოგიწევს ამ ბლოკის გამეორება ბრილიანტების სრული ბადის მისაღებად?
      4-5 Artist Patterns 7_instruction: 'შევცვალოთ კოდი წინა თავსატეხიდან რათა უფრო რთული ნიმუში მივიღოთ. დაუკვირდით როგორ იკვეთებიან ბრილიანტები და სცადეთ შეცვალოთ პირველი "გადახტი უკან" 100-დან 50-მდე (გაანახევროთ) - ახლა რამდენად უკან უნდა წავიდეს მხატვარი მეორე ნახტომისას?'
      4-5 Artist Patterns 8_instruction: გამოიყენე ციკლი რომ დახატო ექვსკუთხედი 40 პიქსელი სიგრძის გვერდებითა და 60 გრადუსი კუთხეებით.
      4-5 Artist Patterns 9.5_instruction: გავატაროთ ციკლში ეს კოდი რომ დავხატოთ ექვსკუთხედების ორი სტრიქონი. დაუკვირდი როგორ გადაინაცვლებს მეორე სტრიქონი მარჯვნივ.
      4-5 Artist Patterns 9_instruction: ახლა გაიმეორე ეს კოდი სამჯერ და დახატე მთელი სტრიქონი. მინიშნება, თითოეული ექვსკუთხედის ყველაზე დაშორებულ წერტილებს შორის მანძილი, ანუ სიგანეა 80 პიქსელი.
      4-5 Artist Patterns Free Play_instruction: 'თავისუფალი თამაში - სცადე შენ თვითონ შექმნა ნიმუში!'
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: ფუტკარი ვერ ხვდება ეს ყვავილია თუ ფიჭა. შეაგროვე ნექტარი მხოლოდ ყვავილებიდან მაგრამ ჯერ შეამოწმე ყვავილთან გაქვს საქმე თუ ფიჭასთან.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: ფუტკარს ახლა მხოლოდ ნექტარი უნდა. დაიმახსოვრე, ყველა ობიექტი ყვავილი არაა, ამიტომ შეამოწმე რომ ნექტრის აღება მხოლოდ ყვავილთან სცადო.
      4-5 Bee Conditionals 3_instruction: ახლა ფუტკარს მხოლოდ თაფლის გაკეთება სურს. შეამოწმე რომ მხოლოდ ფიჭასთან გააკეთო თაფლი.
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: უცნობი ობიექტი ან ყვავილია ან ფიჭა. გამოიყენე if/else ნექტრის შესაგროვებლად, თუ ყვავილია, სხვა შემთხვევაში, გააკეთე თაფლი (რადგან ფიჭა იქნება).
      4-5 Bee Conditionals 5_instruction: ამ ღრუბლებს ქვეშ ან ყვავილი უნდა იყოს, ან ფიჭა. გამოიყენე if/else ნექტრის შესაგროვებლად, თუ ყვავილია, სხვა შემთხვევაში, გააკეთე თაფლი (რადგან ფიჭა იქნება).
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: ამ იასამნისფერ ყვავილში უნდა იყოს 3, 2 ან 1 ნექტარი. აქ if-else ბლოკი კიდევ ერთ if-else ბლოკთანაა კომბინირებული და ქმნის if, else-if, else ბლოკს. დაასრულე ამოხსნა რათა შეაგროვო უცნობი რაოდენობის ნექტარი.
      4-5 Bee Conditionals 7_instruction: 'გახსოვდეს, რომ იასამნისფერ ყვავილში 3, 2 ან 1 ნექტარია. დაასრულე "შეამოწმე იასამნისფერი ყვავილი" ფუნქცია და გამოიყენე ის ყვავილებიდან მთელი ნექტრის შესაგროვებლად.'
      4-5 Bee Conditionals 8_instruction: 'დაწერე ფუნქცია "შეამოწმე ყვავილი გააკეთე თაფლი"-ს შიგნით. შენი ფუნქცია უნდა ამოწმებდეს 3 ნექტარი აქვს იასამნისფერ ყვავილს, 2 თუ 1 და აგროვებდეს მთელ ნექტარს. შემდეგ გადაადგილდი წინ და გააკეთე თაფლი.'
      4-5 Bee Conditionals Assessment 1_instruction: 'შეჯამება: ეს კოდი არასწორია. დაასრულე "აიღე ნექტარი ან გააკეთე თაფლი" ფუნქცია, შემდეგ კი გამოიძახე მთელი ნექტარისა და თაფლის შესაგროვებლად. გახსოვდეს, რომ იასამნისფერ ყვავილში არის 3, 2 ან 1 ნექტარი.'
      4-5 Bee Debugging 1_instruction: ეს ბლოკები ძალიან მაწუხებს. შეგიძლია გაასაწორო?
      4-5 Bee Debugging 10_instruction: იპოვე შეცდომები და გაასწორე.
      4-5 Bee Debugging 11_instruction: ეს სწორად ითვლის?
      4-5 Bee Debugging 2_instruction: დაეხმარე ფუტკარს ნექტრის შეგროვებასა და თაფლის გაკეთებაში.
      4-5 Bee Debugging 3_instruction: იპოვე შეცდომები და გაასწორე.
      4-5 Bee Debugging 4_instruction: ეს ბლოკები არ მუშაობს. როგორია კანონზომიერება?
      4-5 Bee Debugging 5_instruction: აქ რაღაც არაა სწორი...
      4-5 Bee Debugging 6_instruction: ამ იასამნისფერ ყვავილს უცნობი რაოდენობის ნექტარი აქვს. გაასწორე ბლოკები რომ ყვავილიდან მთელი ნექტარი აიღო.
      4-5 Bee Debugging 7_instruction: ფუნქციას რაღაც აკლია...
      4-5 Bee Debugging 8_instruction: ფუნქცია კარგია, მაგრამ არაა სწორად გამოყენებული.
      4-5 Bee Debugging 9_instruction: რატომ არ აკეთებს ფუტკარი საკმარის თაფლს?
      4-5 Bee Debugging Assessment 1_instruction: 'შეჯამება: გაასწორე კოდი.'
      4-5 Bee Nested Loops 1_instruction: გამოიყენე ციკლი რომ შეაგროვო მთელი ნექტარი.
      4-5 Bee Nested Loops 2_instruction: 'შეაგროვე ყველა ნექტარი თითოეული ყვავილიდან. გამოიყენე ჩასმული ციკლი. '
      4-5 Bee Nested Loops 3_instruction: შეაგროვე ყველა ნექტარი საწყისი კოდის ჩასმულ ციკლში მოთავსებით.
      4-5 Bee Nested Loops 4_instruction: 'შეაგროვე ყველა ნექტარი თითოეული ყვავილიდან და გააკეთე თაფლი ყველა ფიჭასთან. გამოიყენე ჩასმული ციკლი. '
      4-5 Bee Nested Loops 5_instruction: შეაგროვე ყველა ნექტარი ჩასმული ციკლის შექმნით.
      4-5 Bee Nested Loops 6_instruction: შეაგროვე ყველა ნექტარი.
      4-5 Bee Nested Loops 7_instruction: ჩასვი ეს ციკლი მეორე ციკლში რათა შექმნა ჩასმული ციკლი და შეაგროვო ყველა ნექტარი ყვავილებიდან.
      4-5 Bee Nested Loops 8_instruction: 'შეაგროვე მთელი ნექტარი ამ ყვავილებიდან while ციკლის ჩასმით. ჩაანაცვლე შიდა გამეორების ბლოკი while ბლოკით. '
      4-5 Bee Nested Loops 9_instruction: შეაგროვე ყველა ნექტარი ამ ყვავილებიდან while ციკლის გამეორებაში ჩასმით.
      4-5 Bee Nested Loops Assessment 1_instruction: 'შეჯამება - შეაგროვე ველა ნექტარი და გააკეთე თაფლის სრული რაოდენობა ციკლების გამოყენებით.'
      4-5 Bee Nested Loops Rows_instruction: შეაგროვე ნექტარი ყვავილების რიგებიდან. გამოიყენე ჩასმული ციკლი.
      4-5 Maze 1 (copy 1)_instruction: ძვირფასო პიროვნება. მე ზომბი. უნდა... მივიდე... მზესუმზირასთან.
      4-5 Maze 1_instruction: ძვირფასო პიროვნება. მე ზომბი. უნდა... მივიდე... მზესუმზირასთან.
      4-5 Maze 10_instruction: შეგიძლია მიმიყვანო მზესუმზირასთან მხოლოდ ოთხი ბლოკის გამოყენებით?
      4-5 Maze 11_instruction: შეგიძლია მიმიყვანო მზესუმზირასთან მხოლოდ ხუთი ბლოკის გამოყენებით?
      4-5 Maze 12_instruction: კარგი, ეს ოდნავ განსხვავებულია. შეგიძლია მხოლოდ ექვსი ბლოკით გააკეთო?
      4-5 Maze 13_instruction: მიმიყვანე ღორთან!
      4-5 Maze 14_instruction: 'მიმიყვანე ღორთან! გამოიყენე გამოიყენე "გაიმეორე სანამ" ბლოკი.'
      4-5 Maze 2 (copy 1)_instruction: მიიყვანე ზომბი მზესუმზირასთან, მაგრამ მოერიდე მტაცებელს!
      4-5 Maze 2_instruction: მიიყვანე ზომბი მზესუმზირასთან, მაგრამ მოერიდე მტაცებელს!
      4-5 Maze 3 (copy 1)_instruction: უნდა... მივიდე... მზესუმზირასთან.
      4-5 Maze 3_instruction: უნდა... მივიდე... მზესუმზირასთან.
      4-5 Maze 4 (copy 1)_instruction: სცადე გამეორების ბლოკი გამოყენებული ბლოკების რიცხვის შესამცირებლად...
      4-5 Maze 4_instruction: სცადე გამეორების ბლოკი გამოყენებული ბლოკების რიცხვის შესამცირებლად...
      4-5 Maze 5 (copy 1)_instruction: შეგიძლია ამოხსნა ეს თავსატეხი ბლოკების უმცირესი რაოდენობის გამოყენებით?
      4-5 Maze 5_instruction: შეგიძლია ამოხსნა ეს თავსატეხი ბლოკები უმცირესი რაოდენობის გამოყენებით?
      4-5 Maze 6 (copy 1)_instruction: შეგიძლია ამოხსნა ეს თავსატეხი ბლოკების უმცირესი რაოდენობის გამოყენებით?
      4-5 Maze 6_instruction: შეგიძლია ამოხსნა ეს თავსატეხი ბლოკები უმცირესი რაოდენობის გამოყენებით?
      4-5 Maze 7_instruction: ძვირფასო პიროვნება. მე ზომბი. უნდა... მივიდე... მზესუმზირასთან.
      4-5 Maze 8_instruction: გამოიყენე გამეორების ბლოკი რომ მიიყვანო ზომბი მზესუმზირამდე. (მოერიდე მტაცებლებს!)
      4-5 Maze 9_instruction: 'შექმენი ციკლი, რომელშიც "გაიმეორე სანამ" ბლოკი იქნება.'
      4-5 Maze Assessment 1_instruction: 'შეჯამება: მიდი მზესუმზირამდე.'
      4-5 Maze Conditionals 1_instruction: 'გამოიყენე "გაიმეორე სანამ" ბლოკი რათა მიიყვანო ზომბი მზესუმზირამდე.'
      4-5 Maze Conditionals 10_instruction: შეგიძლია დაამატო მხოლოდ 3 ბლოკი რათა დამეხმარო უფრო რთული ლაბირინთიდან გამოსვლაში? თუ სწორად გააკეთებ, ნებისმიერ მრუდ გზას გავივლი მიუხედავად სიგრძისა.
      4-5 Maze Conditionals 2_instruction: 'გამოიყენე "გაიმეორე სანამ" ბლოკი რათა მიიყვანო ზომბი მზესუმზირამდე.'
      4-5 Maze Conditionals 3_instruction: 'გამოიყენე if ბლოკი რათა გადამაწყვეტინო როდის შევბრუნდე. მინიშნება: გჭირდება მხოლოდ კიდევ ერთი ბლოკი, მაგრამ დაიმახსოვრე როგორ ჩავსვით ის, რომ მოამვალში შენ თვითონ გააკეთო.'
      4-5 Maze Conditionals 4_instruction: ეს წინა თავსატეხივითაა, მაგრამ დაგჭირდება იმისი გახსენება, თუ როგორ გამოიყენება if ბლოკი და გამეორების ბლოკი ერთად.
      4-5 Maze Conditionals 5_instruction: 'მე მინდა მზესუმზირა! გამოიყენე "if" ბლოკი რომ მიმიყვანო ბლოკების უმცირესი რაოდენობის გამოყენებით.'
      4-5 Maze Conditionals 6_instruction: 'მე მინდა მზესუმზირა! გამოიყენე "if" ბლოკი რომ მიმიყვანო ბლოკების უმცირესი რაოდენობის გამოყენებით.'
      4-5 Maze Conditionals 7_instruction: კარგი, ისევ იგივე გავაკეთოთ ვარჯიშისთვის, დიდად განსხვავებული არაა, მაგრამ უფრთხილდით მტაცებლებს!
      4-5 Maze Conditionals 8_instruction: If-else ბლოკი ამოწმებს პირობას და შემდეგ ან ერთ მოქმედებას ასრულებს, ან მეორეს. ჩემს მზესუმზირამდე მისაყვანად გამოიყენე ეს ახალი ბლოკი.
      4-5 Maze Conditionals 9_instruction: 'კიდევ ერთი ამოცანა "if/else" ბლოკის გამოყენებაზე. შეძლებ პირველივე ცდაზე სწორად გააკეთო?'
      4-5 Maze Conditionals Assessment 1_instruction: 'გამოიყენე "გაიმეორე სანამ" და "if/else" ბლოკები რომ მზესუმზირამდე ბლოკების რაც შეიძლება მცირე რაოდენობის გამოყენებით მიმიყვანო.'
      4-5 Nested Loops 1_instruction: 'დაასრულე კოდი რომ დახატო ეს სამკუთხედები.  პირველი შენთვის გაკეთბულია. მინიშნება:  3 სამკუთხედი 360 გრადუსიან მობრუნებას ნიშნავს.'
      4-5 Nested Loops 10_instruction: დახატე ვარსკვლავების ბოლო სტრიქონი ამ დროშაზე მოცემული ბლოკების ციკლში გამეორებით. ვარსკვლავები 50 პიქსელითაა დაშორებული, მაგრამ გახსოვდეს, რომ ვარსკვლავების სიგანეა 30 პიქსელი.
      4-5 Nested Loops 11_instruction: შეგიძლია დახატო ეს 10 კვადრატი ამ ტროტუარზე ციკლის გამოყენებით? თითოეული კვადრატი 30 პიქსელია.
      4-5 Nested Loops 12_instruction: შეგიძლია დახატო ეს 36 სამკუთხედი ჩასმული ციკლის გამოყენებით?
      4-5 Nested Loops 2_instruction: 'ახლა ჩასვი ეს ციკლი სხვა ციკლში რათა დახატო 10 ვარსკვლავი. ამას ეწოდება ჩასმული ციკლი. მინიშნება: ათივე სამკუთხედი 360 გრადუსით მობრუნებას შეასრულებს.  '
      4-5 Nested Loops 3_instruction: "შექმენი მზე საწყისი კოდის კიდევ ერთ ციკლში ჩასმით. ამას ჩასმული ციკლი ეწოდება.\r\n"
      4-5 Nested Loops 5_instruction: გაატარე ციკლში მოცემული კოდი რათა შექმნა ქარის წისქვილი.
      4-5 Nested Loops 6_instruction: შეგიძლია დახატო ექვსკუთხედი სამკუთხედის კოდის ციკლში გაშვებით?
      4-5 Nested Loops 7_instruction: 'გაატარე ციკლში ეს დიზაინი ათჯერ. რამდენით მოგიწევს მობრუნება ყოველი ციკლის შემდეგ? (მინიშნება: რამდენია 360 გაყოფილი 10-ზე?)'
      4-5 Nested Loops 8_instruction: 'გაატარე ციკლში ეს დიზაინი ექვსჯერ. რამდენით მოგიწევს მობრუნება ყოველი ციკლის შემდეგ? (მინიშნება: რამდენია 360 გაყოფილი 6-ზე?)'
      4-5 Nested Loops 9_instruction: დახატე კბილები ალიგატორის პირში!
      4-5 Nested Loops Assessment 1_instruction: გამოიყენე ჩასმული ციკლი დიზაინის დასამთავრებლად.
      4-5 While Loops 1_instruction: 'მიმიყვანე ხვრელთან და "გავსება" ბლოკის გამოყენებით გაავსე ორი ნიჩაბი მიწით.'
      4-5 While Loops 2_instruction: 'მიმიყვანე მიწის გროვასთან და "მოშორება" ბლოკით მოაშორე ის ნიჩბის 5-ჯერ გამოყენებით.'
      4-5 While Loops 3_instruction: 'მიმიყვანე გროვასთან და მოაშორე ის მთლიანად, შემდეგ მიდი ხვრელთან და გაავსე ბოლომდე.  მინიშნება:  გამოიყენე რაც შეიძლება ცოტა ბლოკი.'
      4-5 While Loops 4_instruction: 'ოჰო, ძალიან ღრმა ხვრელი ვიპოვე! არ ვიცი რამდენი ნიჩაბი მიწა დასჭირდება. შეგიძლია დაწერო პროგრამა რომელიც ორმოს გაავსებს ისე, რომ მიწა გათანაბრდეს? მინიშნება:  ეცადე ამჯერად while ციკლი გამოიყენო.'
      4-5 While Loops 5_instruction: ოჰო, ახლა ორი ხვრელია! შეგიძლია დაწერო პროგრამა რომელიც ორივეს გაავსებს მანამდე, სანამ მიწა არ გათანაბრდება?
      4-5 While Loops 6_instruction: ოჰო, ახლა აქ მიწის დიდი გროვაა! შეგიძლია დაწერო პროგრამა რომელიც მოაშორებს მიწას გროვიდან ისე, რომ ზედაპირი გათანაბრდეს?
      4-5 While Loops 7_instruction: ოჰო, ახლა აქ მიწის სამი გროვაა! შეგიძლია დაწერო პროგრამა რომელიც თითოეულ მათგანს მოაშორებს ისე, რომ მიწა გათანაბრდეს?
      4-5 While Loops 8_instruction: ' მოცემულია ძალიან ღრმა ხვრელი და მიწის ძალიან დიდი გროვა. რამდენი ნიჩაბი მიწის გადაადგილება იქნება საჭირო მიწის გასათანაბრებლად. მინიშნება: ორივესთვის გამოიყენე while ციკლი.'
      4-5 While Loops Assessment 1_instruction: 'ახლა აქ მრავალი ხვრელი და გროვაა.  დამეხამარე მათ გავსებასა და მოშორებაში რომ მიწა ბრტყელი გახდეს.'
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: |
        Complete the code to draw these triangles.  The
        first one is done for you.  Hint:  3 triangles in a 360 degree rotation.
      Artist - Nested Loops 10_instruction: |
        Draw the last row of stars on this flag
        by looping the provided blocks. The stars are 50 pixels apart, but remember
        that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: |
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: |
        Can you draw these 36 triangles using
        a nested loop?
      Artist - Nested Loops 2_instruction: |
        Now nest this loop inside another loop
        to draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles
        complete a 360 degree rotation.  
      Artist - Nested Loops 3_instruction: "Create a sun by nesting the starter code\nin another loop. This is called a nested loop.\r\n"
      Artist - Nested Loops 5_instruction: Loop the given code to create a windmill.
      Artist - Nested Loops 6_instruction: |
        Can you draw a hexagon by looping the
        triangle code?
      Artist - Nested Loops 7_instruction: |
        Loop this design 10 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 10?)
      Artist - Nested Loops 8_instruction: |
        Loop this design 6 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 6?)
      Artist - Nested Loops 9_instruction: "Draw the teeth in the alligator's mouth!"
      Artist - Nested Loops Assessment 1_instruction: გამოიყენე ჩასმული ციკლი დიზაინის დასამთავრებლად.
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click run to see what your game can currently do (not much!), update any variables
        you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        The update-danger function should work just
        like update-target, except that the danger should move from the right side
        over towards the left. Complete update-danger to make the danger fly across
        the screen.
      Big Game Animation 4_instruction: |
        At this point your game your danger should
        run across the screen from right to left, and your target should run across
        from left to right. They don't ever come back on screen once they've left,
        but we'll take care of that later. Take a minute to make sure your game is
        working like you want it to, and then click finish to move on.
      Big Game Booleans 1_instruction: |
        When you last worked on your game we got
        our target and danger sprites to fly across the screen, but they never come
        back. Click run to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your danger should run across
        the screen from right to left, your target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        Finish to move on.
      Big Game Collision 1 (copy 1)_instruction: |
        When you last worked on your game
        we got our target and danger sprites to fly across the screen, but they never
        come back. Click run to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving target and danger, both of which return to the screen once
        they've left, and a player that responds to keyboard input. Click run to
        see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Final_instruction: |
        You made it! At this point your game should be
        fully functioning, take some time to enjoy your new game and make any final
        tweaks to it. When you're happy with the final product, click Finish and
        you'll have an opportunity to share a link to your game. Good work!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!Last
        time you worked on your game, you used booleans to make your Target and Danger
        return to the screen once they've left. Click Run to see how your game looks
        right now, and then we'll get to making your Player move up and down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Vars 1 (copy 1)_instruction: |
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |
        The first step to making this game your own is
        to give it a good Title. Click edit on the title and subtitle variables and
        change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for Addition which
        takes two numbers and returns their sum. Use this Addition block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a multiplication block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function 'f'
        every time; create a function called 'times-ten' that should take a parameter
        'x' and return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should have a domain of Number, range
        of Number, and return the given number to the power of 3. Make sure to write
        two example cases! When you're done, use your new function to calculate 7
        cubed.
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou need to track the cost of making each cookie, the money paid, and the\ntotal profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r\nWrite\nthe function cost, which takes in the number of cookies you intend to sell,\nand returns the cost of making those cookies."
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor the function \"rocket-height\" that states it has a range of Number, domain\nof Number, and should return the height of the rocket traveling at 15 m/s\nafter a given number of seconds. Let's write an example case now for the\nheight of the rocket at 3 seconds.\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 1_instruction: "In the last puzzle you wrote a contract for the\nfunction rocket-height that states it has a range of Number, domain of Number,\nand should return the height of the rocket traveling at 15 m/s after a given\nnumber of seconds. Let's write an example case now for the height of the\nrocket at 3 seconds.\r\n\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months - use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: |
        Draw the line. It is
        200 pixels long. 
      Code Studio Puzzle Challenge 1 Artist1_instruction: |
        Draw the line. It is 200
        pixels long. 
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the code to draw six lines that grow from 50, 60, 70,
        80, 90, to 100 pixels long. 
      Code Studio Puzzle Challenge 14 - Artist_instruction: |
        This is just like a
        "for" loop. Complete the loop to draw 4 squares that grow from 80, 100,
        120, to 140 pixels. 
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: |
        Draw
        the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: |
        Complete the
        code to draw the line. Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Artist Screencast_instruction: |
        Draw the line.
        Each segment is 100 pixels long. 
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Course 2 Bee Loops 1_instruction: |
        Hi, I'm a bee. Can you help me collect
        the nectar from these flowers? 
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: შეგიძლია მიმიყვანო ღორთან 5 ბლოკის გამოყენებით?
      Course 4 2_instruction: ფუტკარს ახლა მხოლოდ ნექტარი უნდა. დაიმახსოვრე, ყველა ობიექტი ყვავილი არაა, ამიტომ შეამოწმე რომ ნექტრის აღება მხოლოდ ყვავილთან სცადო.
      Course 4 Artist 1_instruction: 'დამეხმარე ყუთის დახატვაში. (ყოველი ხაზი 200 პიქსელი სიგრძისაა) '
      Course 4 Artist 10_instruction: 'თავისუფალი თამაშის დროა! ეს არის საინტერესო ფიგურის კოდი. რა მოხდება თუ მას გაიმეორებ? გაერთე და დახატე რაც მოგესურვება. '
      Course 4 Artist 11_instruction: 'გამოწვევა! ეს დიზაინი იყენებს მხოლოდ იმ ბლოკებს, რომლებიც ნანახი გაქვთ. შეგიძლიათ ხელახლა შექმნათ ის დამატებითი ინფორმაციის გარეშე? მინიშნება: შეგიძლიათ შეცდომების ხარჯზე ისწავლოთ. არაა აუცილებელი პირველივე ცდა წარმატებული იყოს.'
      Course 4 Artist 12_instruction: "თავისუფალი შთაგონება: უკვე ისწავლე ყველაერი რაც შეიძლება დაგჭირდეს ასეთ ნიმუშის შესაქმნელად! თუ ეს სურათი შთაგაგონებს, ეცადე შექმნა რამე მსგავსი. ან, შექმენი რამე სრულიად შენ თვითონ.\r\n\n\r\nგსურს გაიგო როგორ შეიქმნა შთაგონები ნიმუშები? ეწვიე https://studio.code.org/c/105671120/edit-ს პასუხისთვის."
      Course 4 Artist 13_instruction: 'კიდევ თამაშობ?  ეს არის ცარიელი ტილო, რომელზეც შეგიძლია დახატო რაც მოგესურვება!'
      Course 4 Artist 2_instruction: შეგიძლია ეს კოდი ციკლში გაატარო და დახატო განაცრისფრებული კვადრატი?
      Course 4 Artist 20_instruction: 'კიდევ თამაშობ?  ეს არის ცარიელი ტილო, რომელზეც შეგიძლია შექმნა რაც მოგესურვება!'
      Course 4 Artist 3_instruction: 'ეცადე გაარკვიო რა მოხდება თუ ამ კოდს გაუშვებ (ან დააწვები "გაშვება"-ს მის შესამოწმებლად). შემდეგ, გაიმეორე კოდი იმდენჯერ, რომ დაასრულო ნახატი.'
      Course 4 Artist 4_instruction: 'რამდენი გრადუსია წრეში?  შეავსე გამეორების ბლოკი ამ რიცხვით რათა შექმნა სხვადსხვა ფერის წრე.'
      Course 4 Artist 5_instruction: 'დახატე დიზაინის მეორე ნახევარი რომ ის სიმეტრიული გახდეს. სამკუთხედები ტოგვერდაა და 50 პიქსელი სიგრძის. მინიშნება: შესაძლოა დაგჭირდეს ამ კოდის რამდენჯერმე გაშვება ყველა დასამატებელი ბლოკის გასარკვევად.'
      Course 4 Artist 6_instruction: 'დაასრულე კოდი ამ სამკუთხედების დასახატად. მინიშნება: სამი სამკუთხედია და 360 გრადუსიანი მობრუნება...რამდენჯერ მოთავსდება 360-ში 3?'
      Course 4 Artist 7_instruction: 'ახლა ჩავსვათ ეს ციკლი სხვა ციკლში რათა დავხატოთ 10 სამკუთხედი. ამას ჩასმული ციკლი ეწოდება. მინიშნება: ათივე სამკუთხედი 360 გრადუსიან მობრუნებას ასრულებს.  '
      Course 4 Artist 8_instruction: დახატე ეს მზე ამ კოდის ბლოკის რამდენჯერმე ციკლში გატარებით.
      Course 4 Artist 9_instruction: 'გაიმეორე ციკლში ეს დიზაინი 10-ჯერ და არ დაგავიწყდეს ყოველი ფიგურის დახატვის შემდეგ მობრუნება. ესეც მინიშნება თუ რამდენით უნდა მობრუნდე: რას უდრის 360 გაყოფილი 10-ზე?'
      Course 4 Artist Binary 1_instruction: "ეს ფუნქცია 1-ებისა და 0-ების ორობით strings იყენებს მხატვრისთვის მითითებების მისაცემად, გაჰყვეს მარცხნიდან მარჯვნივ, ზემოდან ქვემოთ. მხატვარი შეავსებს კვადრატებს როცა შეხვდება 1 და არ შეავსება კვადრატს როცა დაინახავს 0-ს.\r\n\r\nგაუშვი ეს კოდი და ნახე როგორ იყენებს მხატვარი ორობითს თავისი ნიმუშის შესაქმნელად."
      Course 4 Artist Binary 2_instruction: რომელი ორობითი string შეგიძლია გაატარო ციკლში 8-ჯერ რომ დახატო ეს სურათი?
      Course 4 Artist Binary 3_instruction: შეგიძლია დახატო ეს ნიმუში სამნიშნა ორობითი string-ის ციკლში გატარებით?
      Course 4 Artist Binary 4_instruction: თითოეული ორობითი string წარმოადგენს ამ სურათის ერთ სტრიქონს. შეგიძლია მათი გადანაცვლება ისე, რომ მოწყენილი სახის მაგივრად გაღიმებული დაიხატოს?
      Course 4 Artist Binary 5_instruction: რომელი ექვსნიშნა ორობითი string დახატავს ამ სურათს 11-ჯერ გამეორებით?
      Course 4 Artist Binary 6_instruction: რომელია უმოკლესი ორობითი string რომელიც შეგიძლია გაიმეორო ამ სურათის დასახატად?
      Course 4 Artist Binary 7_instruction: დაასრულე ეს ნახატი.
      Course 4 Artist Binary Free Play 2_instruction: 'თავისუფალი თამაში: ეს უფრო მაღალი გაფართოების ტილოა - 16 ბიტი 16 ბიტზე!'
      Course 4 Artist Binary Free Play_instruction: 'თავისუფალი თამაში: დახატე რაც გსურს, ორობითის გამოყენებით!'
      Course 4 Artist For  Functions 10_instruction: 'ცოტა მოვუმატოთ, შეგიძლია დახატო ვარსკვლავის ფორმა "დახატე კვადრატი" ფუნქციით? წარმატებები!'
      Course 4 Artist For  Functions 11_instruction: 'ცოტა მოვუმატოთ, შეგიძლია დახატო ვარსკვლავის ფორმა "დახატე კვადრატი" ფუნქციით? წარმატებები!'
      Course 4 Artist For Loops 1_instruction: 'დახატე ეს სამკუთხედი ისე, რომ ზომით 50 პქსელი იყოს. მინიშნება: გამოიყენე გამეორების ბლოკი.'
      Course 4 Artist For Loops 10_instruction: თავისუფალი თამაშის დროა! დახატე რაც გსურს ის, ამ ბლოკებით, რომელთა გამოყენება უკვე ისწავლე
      Course 4 Artist For Loops 11_instruction: 'გახსოვს ფიგურის გვერდების რიცხვის საკონტროლებლად ცვლადს რომ ვიყენებდით? ეს ნიმუში იწყება სამკუთხედით და ემატება ერთი გვერდი, სანამ არ დაიხატება დეკაგონი (10 გვერდი). თითოეული გვერდი უნდა იყოს 100 პიქსელი სიგრძის. მინიშნება: 360 გაყოფილი ფიგურის გვერდების რიცხვზე უდრის იმდენ გრადუსს, რამდენით მობრუნებაცაა საჭირო.'
      Course 4 Artist For Loops 11a_instruction: "შევაჯამოთ ყველაფერი! შენი ცოდნის გამოყენებით \"for ციკლებისა\" და \"მთვლელების\" შესახებ, შექმენი ნახატი, სადაც ყოველ ფიგურას ორით მეტი გვერდი ექნება წინა ფიგურაზე. ყოველი გვერდი 10-ჯერ უფრო გრძელი უნდა იყოს მრავალკუთხედის გვერდების რაოდენობაზე.\r\n\r\nმოცემული გაქვს ძალიან მცირე სიდიდის კოდი."
      Course 4 Artist For Loops 12_instruction: 'ეგ მაგრად გამოიყურება, მაგრამ ახლა მინდა თითოეული ფიგურა წინას გვერდზე დავხატო. ამჯერად ყველა გვერდის სიგრძეა 20 პიქსელი. დამოიყენე ნახტომის ბლოკი ფიგურის შემდეგ 40 პიქსელით წინ გადასახტომად. '
      Course 4 Artist For Loops 13_instruction: 'ეს ფიგურები ყოველ ჯერზე უფრო იზრდება! ეს ამოცანა ხომ ცვლადებით გადავჭერით? როგორ შევამციროთ გვერდების სიგრძეები მათი რაოდენობის მატებისას მთვლელი ცვლადის გამოყენებით? წინ ფიქსირებული სიდიდით გადაადგილების ნაცვლად გადაადგილდით (100 / "მთვლელი") პიქსელით.'
      Course 4 Artist For Loops 14_instruction: თუ ნორმალურზე ოდნავ მეტად ან ნაკლებად მოაბრუნებ რომელიმე ფიგურას, ლამაზ ეფექტს მიიღებ. სცადე 89 გრადუსით მობრუნება რათა შექმნა გამრუდებული კვადრატული სპირალი.
      Course 4 Artist For Loops 15_instruction: 'თავისუფალი თამაში: ეცადე შენ თვითონ შექმნა რამე ნახატი for ციკლების გამოყენებით. დამატებულია რამდენიმე ზოგადი ცვლადი რომელთა გამოყენება ასევე შეგიძლია.'
      Course 4 Artist For Loops 2_instruction: 'კოდი რომელიც ხატავს სამკუთხედს ჩავსვი ციკლში, რომელიც ათბით ითვლის 50-დან 100-მდე. დააკვირდი როგორ ავაგე კოდი და დააჭირე "გაშვება"-ს როცა მზად იქნები მის მოქმედებაში სანახავად. '
      Course 4 Artist For Loops 3_instruction: 'უმცირეს სამკუთხედს გააჩნია 20 პიქსელი სიგრძის გვერდები, უდიდესს - 200 პიქსელი სიგრძის გვერდები და თითოეული სამკუთხედი 20 პიქსელით დიდია წინაზე. განაახლე for ციკლი ამ სამკუთხედების დასახატად.'
      Course 4 Artist For Loops 4_instruction: 'გამოიყენე ციკლი კვადრატების დასახატად. უმცირესის სიგრძეა 50 პიქსელი, უდიდესის - 300 პიქსელი და ყოველი მომდევნო წინაზე 25 პიქსელით უფრო დიდია. მოგაწოდე თითქმის მთელი კოდი რაც დაგჭირდება - გაკლია ერთი ბლოკი, რომელი?'
      Course 4 Artist For Loops 5_instruction: 'წინა თავატეხი კარგად დაასრულე! ახლა ისევ გამოვიყენოთ "მთვლელი" ცვლადი რომ დავხატოთ ეს მაგარი სურათი. '
      Course 4 Artist For Loops 6_instruction: თავისუფალი თამაში! ეცადე გამოიყენო for ციკლი და დახატო ზრდადი ფიგურის ნიმუში, შენი დიზაინით.
      Course 4 Artist For Loops 7_instruction: 'რა მოხდება თუ "გაიმეორე 3-ჯერ"-ს მოვაშორებთ ამ ალგორითმიდან მაგრამ "გადაადგილება" და "შემობრუნება" ბლოკებს დავტოვებთ ციკლში? ამ სპირალურ სამკუთხედში ყოველი გვერდი 20 პიქსელით უფრო გრძელია წინაზე.'
      Course 4 Artist For Loops 8_instruction: 'ამ კვადრატული სპირალის უმცირესი გვერდის სიგრძეა 10, უდიდესის - 200 და ყოველი ხაზი 10 პიქსელით გრძელია წინაზე. შეგიძლია შეავსო გამოტოვებული ბლოკები რათა დაასრულო ეს მშვენიერი სურათი?'
      Course 4 Artist For Loops 9_instruction: შეგიძლია სპირალის გაკეთბა? დაიწყე 1-დან 75 პიქსელამდე, ყოველ ჯერზე 1 პიქსელის მომატებით.
      Course 4 Artist For Loops inspire_instruction: "თავისუფალი შთაგონება: უკვე ყველაფერი ისწავლე რაც გჭირდება იმისთვის, რომ იცოდე როგორ შექმნა ასეთი ნიმუში! თუ ეს სურათი შთაგაგონებს, სცადე რამე მსგავსი შექმნა. სხვამხრივ, სცადე შექმნა რამე შენ თვითონ.\r\n\r\nგსურს ნახო როგორ შეიქმნა ეს შთამაგონებელი ნიმუშები? ესტუმრე https://studio.code.org/c/106387604-ს პასუხისთვის."
      Course 4 Artist Functions 1_instruction: შეგიძლია ციკლის გამოყენებით დახატო კვადრატი რომლის სიგრძე 100 პიქსელია?
      Course 4 Artist Functions 10_instruction: 'რომელი ბლოკი უნდა დაამატო რომ სამკუთხედი კვადრატზე "დაჯდეს"?'
      Course 4 Artist Functions 11_instruction: 'ნახე კოდი რომელიც ხატავს კუბს - შეგიძლია გადაიტანო ის ფუნქციაში სახელად "დახატე კუბი"?'
      Course 4 Artist Functions 12_instruction: გაუშვი ციკლში კვადრატის ფუნქცია რომ დახატო ხაზი
      Course 4 Artist Functions 13_instruction: 'ნახე, ახალი ფუნქცია გვაქვს - "დახატე კვადრატების ხაზი". შეგიძლია ნახო ფუნქციის ბლოკი და გამოიკვლიო თუ როგორ ავაგეთ. დააკლიკე "გაშვება"-ზე როცა მზად იქნები შემდეგი თავსატეხისთვის.'
      Course 4 Artist Functions 14_instruction: 'მშვენივრად მიდიხარ! გამოვიყენოთ ახალი "დახატე კვადრატების ხაზი" ფუნქცია კვადრატული ფორმის დასახატად. გახსვოდეს, თითოეული კვადრატის სიგრძეა 40 პიქსელი.'
      Course 4 Artist Functions 15_instruction: 'ცოტა მოვუმატოთ, შეგიძლია დახატო ვარსკვლავის ფორმის ფიგურა "დახატე კვადრატების ხაზი" ფუნქციის გამოყენებით? წარმატებები! მინიშნება: შესაძლოა 144 გრადუსით მობრუნება დაგჭირდეს'
      Course 4 Artist Functions 2_instruction: 'შეგიძლია დახატო 3 კვადრატი, ერთმანეთისგან 20 პიქსელი დაშორებით? მინიშნება: თითოეული კვადრატი 100 პიქსელი ზომისაა'
      Course 4 Artist Functions 3_instruction: "შეგიძლია დახატო ეს სურათი \"დახატე კვადრატი\" ფუნქციის ბლოკის გამოყენებით? მინიშნება: ყოველი კვადრატი 120 პიქსელითაა დაშორებული.\r\n"
      Course 4 Artist Functions 4_instruction: 'მზად ხარ საკუთარი "ფუნქციის ბლოკის" შესაქმნელად? დააკლიკე "ფუნქიები" ბლოკზე ინსტრუმენტების ყუთში, დაარქვი "დახატე სამკუთხედი", შემდეგ შექმენი სამკუთხედი როგორც აქამდე აკეთებდი, მოქმედებებითა და ციკლების ბლოკებით. შემდეგ დააკლიკე შენახვა და დახურვაზე ზედა მარჯვენა კუთხეში. მინიშნება: შექმენი სამკუთხედი რომლის სიგრძეა 100 პიქსელი. წარმატებები!'
      Course 4 Artist Functions 5 OLD_instruction: 'ვცადოთ ჩვენი ორი ფუნქციის გამოყენება სახლის დასახატად - რა უნდა გასწორდეს ამ კოდში რომ სახლი კარგად დაიხატოს?'
      Course 4 Artist Functions 5_instruction: "შეგიძლია დახატო ეს სურათი \"დახატე კვადრატი\" ფუნქციის ბლოკის გამოყენებით? მინიშნება: ყოველი კვადრატი 120 პიქსელითაა დაშორებული.\r\n"
      Course 4 Artist Functions 6_instruction: 'რომელი ბლოკი უნდა დაამატო რომ სამკუთხედი კვადრატზე "დაჯდეს"?'
      Course 4 Artist Functions 7_instruction: შეგიძლია დახატო კვადრატების ხაზი კვადრატის ფუნქციის გამოყენებით? თითოეული კვადრატი სიგრძით 40 პიქსელია.
      Course 4 Artist Functions 8_instruction: 'ეჩვევი ფუნქციის ბლოკების გამოყენებას? შევცვალოთ ეს კვადრატი ისე, რომ მისი ზომა 200 პიქსელი გახდეს. მინიშნება: დააჭირე "ჩასწორება"-ს რათა შეცვალო "დახატე კვადრატი" ფუნქციის ედიტორის ზომა. დაიმახსოვრე რომ დააჭირო "შენახვა და დახურვა"-ს ფუნქციის ედიტორიდან გამოსასვლელად. '
      Course 4 Artist Functions 9_instruction: ფუნქციის შესაქმნელად ჩვენ მოგაწოდეთ კოდის უმეტესი ნაწილი, თუმცა, როგორც ჩანს რაღაც აკლია. შეგიძლია ეს ფუნქციის ბლოკი ბოლომდე შეავსო?
      Course 4 Artist Inspire_instruction: "თავისუფალი შთაგონება: უკვე ისწავლე ყველაერი რაც შეიძლება დაგჭირდეს ასეთ ნიმუშის შესაქმნელად! თუ ეს სურათი შთაგაგონებს, ეცადე შექმნა რამე მსგავსი. ან, შექმენი რამე სრულიად შენ თვითონ.\r\n\n\r\nგსურს გაიგო როგორ შეიქმნა შთაგონები ნიმუშები? ეწვიე https://studio.code.org/c/105765376/edit-ს პასუხისთვის."
      Course 4 Artist Params 1_instruction: ჩავასწოროთ ფუნქცია რომელიც ხატავს კვადრატებს 50 პიქსელი სიგრძის გვერდებით
      Course 4 Artist Params 10_instruction: 'შეგიძლია ფუნქციები სხვა ფუნქციებიდან გამოიძახო! გამოიყენე "ფიგურა" ფუნქცია საფუძვლად, შექმენი 3 სახლის ფიგურა, თითოეული წინაზე 20 პიქსელით უფრო დიდი, დაწყებული 50 პიქსელი სიგრძით. მთვლელი ციკლის გამოყენება შესაძლოა გამოსადეგი იყოს. '
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: 'გამოიყენე "pinwheel"ფუნქცია რომ დახატო ეს ფიგურები. გვერდის სიგრძე თითოეული სურათისთვის არს 50.'
      Course 4 Artist Params 13_instruction: 'თავისუფალი თამაში: აქ რამდენიმე ფუნქციაა რომელიც დაწერე და რამდენიმე რომლითაც თამაში შეგიძლია. დახატე რამე მაგარი!'
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: 'შეგიძლია თითოეული ეს სამკუთხედი ახალი ფუნქციით დახატო? პირველი 25 პიქსელი სიგრძისაა, მეორე - 50 და მესამე - 75. '
      Course 4 Artist Params 4_instruction: შეგიძლია დაამატო ახალი ფუნქცია, სახელად კვადრატი? ის უნდა იღებდეს სიგრძის პარამეტრს, როგორც სამკუთხედი. ამჯერად დახატე 3 კვადრატი, 25, 50 და 75 პიქსელი სიგრძის, დაშორებული 100 პიქსელით.
      Course 4 Artist Params 5_instruction: |
        გამოიყენე შენი ორივე ახალი ფუნქცია ამ სურათის დასახატად. საქმის გასამარტივებლად გამოიყენე ციკლი "მთვლელი" პარამეტრით.
        
      Course 4 Artist Params 6_instruction: 'მოდი შევასწოროთ ეს "დახატე ფიგურა" ფუნქცია. მას უკვე აქვს სიგრძის პარამეტრი. ახლა, შევასწოროთ ფუნქცია ისე, რომ ასევე გააჩნდეს პარამეტრი "გვერდი". გახსოვდეს, რომ ნებისმიერი ფიგურისთვის მობრუნების კუთხე არის 360 გაყოფილი ფიგურის გვერდების რაოდენობაზე. მინიშნება: თითოეული ფიგურის სიგრძეებია: სამკუთხედის - 100 პიქსელი, ექვსკუთხედის - 25 პუქსელი და კვადრატის - 50 პიქსელი. '
      Course 4 Artist Params 7_instruction: 'შეგიძლია დახატო ეს ფიგურები "???"-ს შევსებით? კვადრატი და სამკუთხედი 100 პიქსელი ზომისაა, ექვსკუთხედი კი 75 პიქსელი ზომის. '
      Course 4 Artist Params 8_instruction: |
        შეგიძლია გაარკვიო როგორ უნდა დაიხატოს ეს ფიგურა? მინიშნება: შექმენი ახალი ფუნქცია ექვსი გვერდით, სახელად ექვსკუთხედი.
        
      Course 4 Artist Params 9_instruction: 'გახსოვს რომ გამოვიყენეთ მთვლელი ციკლი მაგრამ მოვაშორეთ შიგნით მყოფი ციკლი? გავერთოთ და გამოვიყენოთ "დახატე ფიგურა" ფუნქცია სიგრძის და "გვერდის" პარამეტრებით. შეგიძლია ამ ფიგურების შექმნა? კვადრატის მთვლელი უნდა იყოს 5/100/5 სამკუთხედის - 10/100/10 და ექვსკუთხედის - 2/100/2.'
      Course 4 Artist Var 9_instruction: 'ეს არის სამკუთხედის დახატვის ალგორითმი. შეცვალე ისე, რომ ის "გვერდის" პარამეტრს იყენებდეს. ჩაანაცვლე რიცხვი 3 "გვერდის" პარამეტრით. მინიშნება: არ დაგავიწყდეს "მიანიჭე გვერდები" ბლოკისგამოყენება.'
      Course 4 Artist Vars 1_instruction: შეგიძლია დამეხმარო ტლგვერდა სამკუთხედის დახატვაში? თითოეული გვერდის სიგრძე უნდა იყოს 100 პიქსელი.
      Course 4 Artist Vars 10_instruction: 'ეს ალგორითმი მცირე სამკუთხედებიდან სამკუთხედებს ხატავს. შეგიძლია შეცვალო ისე, რომ ის "გვერდების" ცვლადს იყენებდეს თითოეული სამკუთხედის დასახატად? გაარჩიე კოდი და ყოველ ჯერზე როცა დაინახავ 3-ს, შეცვალე ის შენი "გვერდები" ცვლადით. არ დაგავიწყდეს "მიანიჭე გვერდები" ბლოკის გამოყენება.'
      Course 4 Artist Vars 11_instruction: 'ეს ალგორითმი წინა თავსატეხისთვის მოვიფიქრეთ - რა უნდა მივანიჭოთ "გვერდები" ცვლადს რომ დავხატოთ კვადრატების სურათი?'
      Course 4 Artist Vars 12_instruction: 'მივანიჭოთ "გვერდები" ცვლადს 5. რაც მეტ გვერდს დავამატებთ ამ ალგორითმს, მით უფრო დიდ თარგს მივიღებთ საბოლოოდ! დაუკვირდით, რომ ახალი ცვლადი "სიგრძე" გვაქვს. შეგვიძლია ის გამოვიყენოთ ყოველ ჯერზე როცა გვექნება "წინ გადაადგილება". ამ ფიგურისთვის მიანიჭე "სიგრძე" ცვლადს 75.'
      Course 4 Artist Vars 13_instruction: 'რაც მეტი გვერდი აქვს ფიგურას, მით მოკლე უნდა იყოს ეს გვერდები, რომ სურათი ეკრანზე დაეტიოს. სიგრძის ცვლადის ხელით გასწორების ნაცვლად, გამოვიყენოთ "გვერდები" ცვლადი და მათემატიკის ბლოკი რათა განვსაზღვროთ "სიგრძე". არიჩიე სწორი განტოლება ინსტრუმენტების ყუთიდან რათა "სიგრძე" ცვლადი განსაზღვრო და განაახლე "გვერდები" ცვლადი.'
      Course 4 Artist Vars 14_instruction: 'თავისუფალი თამაში: ნახე, შენი ალგორითმი კიდევ ერთ ციკლშია ჩასმული. ატარე ექსპერიმენტები შენი ორი ცვლადის მნიშვნელობების ცვლით და დახატე საინტერესო ნიმუშები.'
      Course 4 Artist Vars 2_instruction: '"გადაადგილდი 100-ით წინ"-ის გამოყენების ნაცვლად, "გადაადგილება" ბლოკი ახლა ცვლად "სიგრძე"-ს უკავშირდება. შეგიძლია "სიგრძე"-ს მიანიჭო 150 რომ დახატო ეს სამკუთხედი?'
      Course 4 Artist Vars 3_instruction: 'ეს ციკლი უნდა ხატავდეს კვადრატს, მაგრამ რაღაც აკლია. შეგიძლია გაასწორო ისე, რომ იყენებდეს "სიგრძე" ცვლადს და გაარკვიო თუ რა სიგრძის უნდა იყოს თითოეული გვერდი? '
      Course 4 Artist Vars 4_instruction: 'ახლა მინდა გავაკეთო მართკუთხედი რომლის სიმაღლე მის სიგანეზე ორჯერ მეტია. გვაქვს ცვლადი სახელად "სიგანე" რომელსაც მინიჭებული აქვს 100. შეგიძლია გამოიყენო მათემატიკის ბლოკები და დაასრულო ეს კოდი?'
      Course 4 Artist Vars 5_instruction: 'გამოიყენე ცვლადი "გვერდები" რომ აკონტროლო რამდენჯერ უნდა გაეშვას ციკლი.'
      Course 4 Artist Vars 6_instruction: "დავამატე ცვლადი \"გვერდები\" რომელსაც მინიჭებული აქვს 4. შეგიძლია გამოიყენო ცვლადი \"გვერდები\" (მათემატიკის ბლოკებთან ერთად) რათა დარწმუნდე რომ სწორი რაოდენობით ვაკეთებ მობრუნებას კვადრატის დასახატად? \r\n\r\nმინიშნება:\nწესიერი მრავალკუთხედის დასახატად ყოველ ჯერზე 360/გვერდები სიდიდით უნდა მოვბრუნდე."
      Course 4 Artist Vars 7_instruction: 'შეგიძლია შეასწორო "გვერდები" ცვლადი რომ დამეხმარო ამ ექვსკუთხედის დახატვაში?'
      Course 4 Artist Vars 8_instruction: 'თავისუფალი თამაში: ცვალეთ ფიგურის გვერდების რაოდენობა. შეგიძლიათ შეცვალოთ ალგორითმი ისე, რომ ფიგურის ზომა დამოუკიდებელი იყოს გვერდების რაოდენობაზე? მინიშნება: შესაძლოა მათემატიკის ბლოკების გამოყენება დაგჭირდეთ (360 გაყოფილი "გვერდებზე" ამჯერად ორ ადგილას) '
      Course 4 Artist Vars 9_instruction: 'შეასწორე ეს ალგორითმი ისე, რომ ის იყენებდეს "გვერდები" ცვლადს ფიქსირებული რაოდენობის მაგივრად და ხატავდეს სამკუთხედს. არ დაგავიწყდეს "მიანიჭე გვერდები" ბლოკის გამოყენება.'
      Course 4 Bee 1_instruction: 'ფუტკარი ვერ არჩევს რა არი ღრუბელს ქვემოთ! ჯერ შეამოწმე ყვავილია ეს თუ ფიჭა. მხოლოდ შემდეგ შეაგროვე ნექტარი, თუ ეს ყვავილია. '
      Course 4 Bee 2_instruction: შეამოწმე თითოეული ობიექტი რომ ნახო ყვავილია თუ არა. თუ არის, შეაგროვე ნექტარი...სხვა შემთხვევაში შეგიძლია ყურადღება არ მიაქციო!
      Course 4 Bee 3_instruction: უცნობი ობიექტი ან ყვავილია ან ფიჭა. გამოიყენე if/else ბლოკი ნექტრის შესაგროვებლად თუ ყვავილია, თუ არა, გააკეთე თაფლი (რადგან მაშინ ფიჭა იქნება).
      Course 4 Bee 4_instruction: ამ იისფერ ყვავილში შეიძლება იყოს 3, 2 ან 1 ნექტარი. აქ არის if-else ბლოკი, კომბინირებული კიდევ ერთ if-else ბლოკთან, რაც ქმნის if, else-if, else ბლოკს. დაასრულე ამოხსნა და შეაგროვე უცნობი რაოდენობის ნეტქარი.
      Course 4 Bee 5_instruction: იასამნისფერ ყვავილში შეიძლება იყოს 3, 2 ან 1 ნექტარი. დაამატე if-else ბლოკი if, else-if, else ბლოკის შესაქმნელად. დაასრულე ამოხსნა რათა შეაგროვო ნეტქრის უცნობი რაოდენობა.
      Course 4 Bee 6_instruction: ამ იისფერ ნექტარში შესაძლოა იყოს 3, 2 ან 1 ნექტარი. შექმენი if, else-if, else ბლოკი რათა შეაგროვო უცნობი რაოდენობის ნექტარი.
      Course 4 Bee 7_instruction: გამოიყენე ყველაფერი რაც ისწავლე რომ შეაგროვო ყველა ნექტარი. იასამნისფერ ყვავილში შეიძლება იყოს 3, 2 ან 1 ნექტარი.
      Course 4 Bee For Loops 1_instruction: გამოიყენე ციკლი რომ შეაგროვო ნექტარი თითოეული ყვავილიდან.
      Course 4 Bee For Loops 10_instruction: თუ შენი ციკლი კლებადობით ითვლის, ყოველ ციკლში შენს მთვლელს გარკვეული სიდიდე აკლდება. რა უნდა იყოს ეს სიდიდე, რომ შეგროვდეს 9, 6 და შემდეგ 3 ნექტარი?
      Course 4 Bee For Loops 11_instruction: რა სჭირს ამ ციკლს? ნახე თუ შეძლებ მის შეკეთებსა და შეაგროვებინე ფუტკარს ყველა ნექტარი.
      Course 4 Bee For Loops 2_instruction: 'ეს ახალი ტიპის ციკლია, რომელსაც "for" ციკლი ეწოდება. ეს კონკრეტული for ციკლი ერთობით დაითვლის 1-დან 5-მდე და ყოველი დათვლისას შეასრულებს მასში მოქცეულ პირობებს. დაეხმარე ფუტკარს ნექტრის აღებაში.'
      Course 4 Bee For Loops 3_instruction: შეგიძლია ეს თავსატეხი 1-დან 3-მდე თითოთი მთვლელი ციკლით ამოხსნა. შევაგროვოთ ნექტარი!
      Course 4 Bee For Loops 4_instruction: შეაგროვე ყველა ნექტარი ამ ყვავილებიდან. ნეტა ამის უფრო მარტივი გზა თუ არსებობს...
      Course 4 Bee For Loops 5_instruction: 'ამას for ციკლი გაცილებით ამარტივებს! for ციკლიდან მთვლელი ცვლადის გამოყენებით გაატარე ციკლში "აიღე ნექტარი" ბლოკი იმდენჯერ, რამდენჯერაც ეს ციკლში ხდებოდა. უჰ! ბევრი ციკლია. ყველა საჭირო კოდი აქაა, კარგად დააკვირდი თუ როგორაა აგებული და შემდეგ დააჭირე გაშვებას რომ ნახო როგორ მუშაობს. '
      Course 4 Bee For Loops 6_instruction: შეგიძლია ციკლი უკუთვლისთვისაც გამოიყენო. სცადე შეაგროვო ნექტარი 5-დან 1-მდე თითო-თითოდ უკუთვლით.
      Course 4 Bee For Loops 7_instruction: 'გამოიყენე შენი for ცილკის "მთვლელი" ცვლადი რომ აკონტროლო ჰორიზონტალური გადაადგილება.'
      Course 4 Bee For Loops 8_instruction: შეგიძლია გამოიყენო ციკლის ცვლადი რომ აკონტროლო მოძრაობა და ნექტრის შეგროვება?
      Course 4 Bee For Loops 9_instruction: 'უკანასკნელ რიცხვს შენს ციკლში ეწოდება "ნაზრდი", ციკლის ყოველ შესრულებაზე მთვლელი ცვლადი ნაზრდით იზრდება. სცადე ამ ყვავილების შეგროვება 2 ნაზრდის გამოყენებით.'
      Course 4 Bee Params 1_instruction: 'გამოიყენე ფუნქცია "აიღე 3 ნექტარი" რომელიც აბრუნებს, გადააადგილებს ნექტრის შესაგროვებლად და შემდეგ აბრუნებს საწყის მდებარეობაზე. დაწერე მწკრივი რათა შეაგროვო ყველა ნექტარი "აიღე 3 ნექტარი"-ს გამოყენებით'
      Course 4 Bee Params 2_instruction: 'ჩაასწორე "აიღე 3 ნექტარი" ისე, რომ ყვავილისკენ მარცხნივ მობრუნების მაგივრად მარჯვნივ მომაბრუნოს.'
      Course 4 Bee Params 3 (copy 1)_instruction: 'ახლა ორივე მხარეს ყვავილებია! შეგიძლია გამოიყენო პარამეტრი რომ იგივე ფუნქციამ ორივე მხარეს მყოფ ყვავილებზე იმუშაოს. ფუნქციას დავამატე პარამეტრი სახელად "მიმართულება". თუ "მიმართულება" პარამეტრი უდრის 0-ს, შევბრუნდები მარცხნივ, თუ უდრის 1-ს - მარჯვნივ.'
      Course 4 Bee Params 3_instruction: 'ახლა ორივე მხარეს ყვავილებია! ფუნქციას დავამატე პარამეტრი სახელად "მიმართულება". გამოიყენე "მარცხენა" და "მარჯვენა" ცვლადები რათა აკონტროლო მიმართულება. შეავსე დანარჩენი ფუნქციის განმარტება და დააჭირე "შენახვა და დახურვა"-ს'
      Course 4 Bee Params 4 (copy 1)_instruction: სცადე გამოიყენო შენი ახალი ფუნქცია რათა შეაგროვო ყველა ყვავილი. დაიმახსოვრე, 0 = მარცხნივ და 1 = მარჯვნივ.
      Course 4 Bee Params 4 backup_instruction: 'კარგი არ იქნებოდა ყველა ნექტრის ერთი ფუნქციით შეგროვება რომ შეგვეძლოს? სცადე ფუნქციისთვის ახალი პარამეტრის, "ნექტრები"-ს დამატება რათა აკონტროლო შეგროვებული ნექტრის რაოდენობა. სასურველია ფუნქციასაც შეუცვალო სახელი!'
      Course 4 Bee Params 4_instruction: სცადე გამოიყენო შენი ახალი ფუნქცია რათა შეაგროვო ყველა ყვავილი. არ დაგავიწყდეს მარცხენას და მარჯვენას ცვლადებად გამოყენება.
      Course 4 Bee Params 5_instruction: 'დავიწყოთ ნულიდან - შეგიძლია შექმნა ფუნქცია სახელად "აიღე 5 ნექტარი" რომელსაც ექნება მიმართულების პარამეტრი?'
      Course 4 Bee Params 6 (copy 1)_instruction: სცადე შენი ახალი ფუნქციის ამ ნექტრის შესაგროვებლად გამოყენება.
      Course 4 Bee Params 6_instruction: 'კარგი არ იქნებოდა ყველა ნექტრის ერთი ფუნქციით შეგროვება რომ შეგვეძლოს? სცადე ფუნქციისთვის ახალი პარამეტრის, "ნექტრის ერთეულები"-ს დამატება რათა აკონტროლო შეგროვებული ნექტრის რაოდენობა. სასურველია ფუნქციასაც შეუცვალო სახელი!'
      Course 4 Bee Params 7 (copy 1)_instruction: სცადე შენი ახალი ფუნქციის ამ ნექტრის შესაგროვებლად გამოყენება.
      Course 4 Bee Params 7_instruction: სცადე შენი ახალი ფუნქციის ამ ნექტრის შესაგროვებლად გამოყენება.
      Course 4 Bee Params 8_instruction: 'გამოწვევა: თაფლსაც უნდა მივხედოთ! გადაწერე შენი ფუნქცია ისე, რომ მასში თაფლის და ნექტრის ერთეულების რაოდენობა შედიოდეს. როგორ გამოიყენებ ამ რიცხვებს შემდეგი მოქმედების გადასაწყვეტად?'
      Course 4 Binary 1_instruction: ეს ფუნქცია ორობით 1-ებისა და 0-ეიბს string-ს და მიუთითებს ფერმერს რომ მობრუნდეს მარცხნიდან მარჯვნივ, ზემოდან ქვემოთ, მობრუნდეს კვადრატებზე, რომელიც ნულს შეიცავს. გაუშვი მოცემული კოდი რათა ნახო თუ როგორ იყენებს ფერმერი ორობითს სურათის დასახატად.
      Course 4 Binary 2_instruction: 'რა ორობითი string უნდა გაუშვა ციკლში 8-ჯერ ამ სურათის დასახატად? მინიშნება: რიცხვი "1" ხვრელს ავსებს.'
      Course 4 Binary 3_instruction: შეგიძლია დახატო ეს ნიმუში ერთი ორობითი string-ის ციკლში გაშვებით?
      Course 4 Binary 5 (copy 1)_instruction: რომელი ორობითი string დახატავს ამ სურათს 10-ჯერ გამეორებით?
      Course 4 Binary 5_instruction: რომელი ორობითი string დახატავს ამ სურათს 10-ჯერ გამეორებით?
      Course 4 Binary 6 (copy 1)_instruction: რომელი ორობითი string დახატავს ამ სურათს 10-ჯერ გამეორებით?
      Course 4 Binary 6_instruction: რომელი ორობითი string დახატავს ამ სურათს 10-ჯერ გამეორებით?
      Course 4 Binary 7_instruction: რომელი ორობითი string დახატავს ამ სურათს 10-ჯერ გამეორებით?
      Course 4 Binary 8_instruction: 'ამ სურათის უდიდესი ნაწილის დასრულება შეგიძლია ციკლში 5 ბიტიანი ორობითი რიცხვის გამეორებით - შემდეგ მოგიწევს დამატებით ერთი 4 ბიტიანი რიცხვი ქვედა მარჯვენა კუთხისთვის.'
      Course 4 Maze 1_instruction: მიიყვანე ჩემი გაბრაზებული ჩიტი ღორთან!
      Course 4 Maze 2_instruction: მოერიდე დინამიტს!
      Course 4 Maze 3_instruction: 'დააპროგრამე გაბრაზებული ჩიტი რომ მივიდეს ღორთან. '
      Course 4 Maze 4_instruction: სცადე გამეორების ბლოკი გამოყენებული ბლოკების რიცხვის შესამცირებლად...
      Course 4 Maze 5_instruction: შეგიძლია ამოხსნა ეს თავსატეხი ბლოკები უმცირესი რაოდენობის გამოყენებით?
      Course 4 Maze 6_instruction: შეგიძლია ამოხსნა ეს თავსატეხი ბლოკები უმცირესი რაოდენობის გამოყენებით?
      Course 4 Play Lab For Loops 2_instruction: ამჯერად ვცადოთ 1-დან 100-მდე კენტი რიცხვების დათვლა.
      Course 4 Play Lab Params 1_instruction: 'ესაა ფუნქცია სახელად "ახტომა", რომელიც შენს მთავარ პერსონაჟს 100 პიქსელით ახტუნებს. გამოიყენე ახტომის ფუნქცია ყველა დროშის შესაგროვებლად.'
      Course 4 Play Lab Params 10_instruction: "ჩვენ თქვენთვის დავამატეთ კიდევ ერთი ფუნქცია.\r\n\r\nდააპროგრამეთ თქვენი თამაში რომ იძახებდეს \"დონის გაზრდა\" ფუნქციას თუ \"მოთამაშის_ქულა\" > 10. \r\n\r\nითამაშე და გასცდი მეოთხე დონეს რომ გადახვიდე შემდეგ თავსატეხზე. "
      Course 4 Play Lab Params 2_instruction: "ახლა გვაქვს დროშები რომლებიც ზედმეტად მაღალია ჩვენი ახტომის ფუნქციისთვის. გამოვიყენოთ \"ზემოთა\" და \"ქვემოთა\" ისრები რომ გვქონდეს ახტომის სხვადსხვა სიმაღლე.  \r\n\r\nსაჭიროა ჩვენს ახტომის ფუნქციას დავამატოთ პარამეტრი სახელად \"სიმაღლე\". ზედა ისარმა ძაღლი უნდა აახტუნოს 200 პიქსელით ხოლო ქვედა ღილაკმა - მხოლოდ 100 პიქსელით.\n\r\n\r\nმინიშნება: დაგჭირდება ახტომის ფუნქციაზე \"ჩასწორება\"-ს დააჭირო და განაახლო რომ შეძლოს \"სიმაღლის\" პარამეტრის გამოყენება."
      Course 4 Play Lab Params 3_instruction: 'დავამატოთ კიდევ ერთი პარამეტრი ახტომის ფუნქციას, რათა შეგვეძლოს ორ მსახიობზე გამოყენება. თითოეული მსახიობი რიცხვითაა წარმოდგენილი, დაწყბული ერთიდან. ჩაასწორეთ "ახტომა" ფუნქცია ისე, რომ განმარტებაში შედიოდეს პარამეტრი "მსახიობი". '
      Course 4 Play Lab Params 4_instruction: 'ამ ფუნქციას ეწოდება "პატრული". ჩაასწორე ის რომ გადაიყვანო კატა 400 პიქსელით ზემოთ და შემდეგ 400 პიქსელით ქვემოთ.'
      Course 4 Play Lab Params 5_instruction: 'შეავსეთ "მსახიობი" პარამეტრის ადგილი რომ შევძლოთ "პატრული" ფუნქციის გამოძახება თითოეული მსახიობისთვის. გახსოვდეთ რომ მსახიობები შეესაბამებიან რიცხვებს 1, 2 და 3.'
      Course 4 Play Lab Params 6_instruction: 'დაამატე "პატრულ" ფუნქციას კიდევ ერთი პარამეტრი სახელად "სიჩქარე". გამოიყენე "მიანიჭე სიჩქარე" ბლოკი ახალი "სიჩქარის" პარამეტრთან.'
      Course 4 Play Lab Params 7_instruction: "შეხედე მოცემულ კოდს და სცადე გაარკვიო რას აკეთებს თითოეული ბლოკი. \r\n\r\nროცა მორჩები, გამოიყენე ისრები ძაღლის საკონტროლებლად და დროშების შესაგროვებლად."
      Course 4 Play Lab Params 8_instruction: 'გამოიყენე "შეხებისას" ბლოკი რომ დააბრუნო ძაღლი მარცხენა ზედა კუთხეში მხოლოდ იმ შემთხვევაში, თუ ის სხვა მსახიობს შეეხება.'
      Course 4 Play Lab Params 9_instruction: "შესაძლოა ეს თამაში წინა დონიდან გეცნობოდეს. \r\n\r\nდავამატეთ ფუნქცია სახელად \"ქულის_აღება\" რომელიც იღებს პარამეტრს \"ქულები\". \r\n\r\nჩაასწორე ფუნქცია ისე, რომ \"ქულები\" პარამეტრი \"მოთამაშის_ქულები\" ცვლადს დაემატოს.\r\n\r\nროცა მორჩები, თამაშის დასაწყებად დააჭირე \"გაშვებას\". როდესაც ძაღლი შეაგროვებს 10 ქულას, შეგეძლება მომდევნო თავსატეხზე გადასვლა. "
      Course 4 Play Lab Vars 1_instruction: 'ამჯერად კოდის დაწერა საერთოდ არ გიწევს, დააჭირე "გაშვებას" რათა ითამაშო! ამ თამაშში შენი ძაღლი კატაზე მეტი დროშის შეგროვებას ცდილობს. გამოიყენე ქვედა ისარი ძაღლის საკონტროლებლად. დააჭირე "დასრულებას" როცა მორჩები დამაშს.'
      Course 4 Play Lab Vars 2_instruction: 'შეჯიბრი წინა თავსატეხში არც ისე სამართლიანი იყო! შეცვალე "ძაღლის_სიჩქარე" ცვლადი რათა შეძლო კატაზე მეტი დროშის შეგროვება. პირველი ვინც შეაგროვებს 10 დროშას გაიმარჯვებს!'
      Course 4 Play Lab Vars 3_instruction: ესეც ახალი ტიპის თამაში! გამოიყენე მარცხენა და მარჯვენა ისრები მოძრაობისთვის და ზედა ისარი ახტომისთვის. ნახე შეძლებ თუ არა ყველა დროშის შეგროვებას.
      Course 4 Play Lab Vars 4_instruction: 'ახლა ვიყენებთ ცვლადს სახელად "სიმაღლე" რათა ვაკონტროლოთ ძაღლის ახტომის სიმაღლე. განაახლე ცვლადი "სიმაღლე" რათა ძაღლს შეეძლოს ახტომა იმ სიმაღლეზე, რომ ყველა დროშას მისწვდეს.'
      Course 4 Play Lab Vars 5_instruction: 'ავაგოთ თამაში! პირველ რიგში ქულა დაგვჭირდება. გამოიყენე "მიანიჭე ქულა" ბლოკი რომ საწყის ქულად 10 ჩაწერო. '
      Course 4 Play Lab Vars 6 (copy 1)_instruction: 'უკვე გვაქვს ქულების ცვლადი, მაგრამ როგორ გავხადოთ ის გამოსადეგი? შეიძლება ქულების ცვლადის გაზრდა ყოველ ჯერზე როცა მტერს ცეცხლოვან ბურთს მოახვედრებ. გამოიყენე "როდესაც მსახიობი 2 შეეხება რამეს" მოვლენა რათა გამოიწვიო შენი ქულის განახლება როცა შენი ცეცხლოვანი ბურთი მოხვდება კატას. შეგიძლია ქულა გაზარდო ასე: score = score + 1. აიყვანე შენი ქულა 10-მდე (თითო ჯერზე ერთით!) რათა გადალახო ეს დონე.'
      Course 4 Play Lab Vars 6_instruction: 'როგორ დავაგროვოთ ქულები ჩვენს თამაშში? დაამატე 1 შენს "ქულები" ცვლადს ყოველ ჯერზე როცა ძაღლის კატას გულს მოახვედრებს. გამოიყენე "როდესაც მსახიობი 2 შეეხება რამეს" მოვლენა რათა გამოიწვიო შენი ქულის განახლება. შენი ცვლადი შეგიძლია ასე ზარდო: "ქულები = ქულები + 1." აიყვანე შენი ქულა 10-მდე (თითო ჯერზე ერთით!) რათა გადალახო ეს დონე.'
      Course 4 Play Lab Vars 7_instruction: 'მოდი ეს თამაში ზედმეტად მარტივი ნუ იქნება - ყოველ ჯერზე როცა ძაღლს (მსახიობი 1) მოხვდება ცეცხლოვანი ბურთი, ქულა უნდა დაკარგო. დაიწყე 10 ქულით რომ ძალიან რთული არ იყოს. ჩამოაგდე შენი ქულა 10-დან 0-მდე რათა გადალახო დონე.'
      Course 4 Play Lab Vars 8 (copy 1)_instruction: 'კარგი, უკანასკნელი რამ ამ თამაშისთვის - გავაკეთოთ ისე, რომ მოთამაშეს მოგება (ან წაგება) შეეძლოს. გამოიყენე სამუდამო ციკლი რათა ამოწმო ქულების მნიშვნელობა - თუ ქულა 20-ს გადაცდა, გააქრე მტერი. თუ ქულა 0-ზე ნაკლები გახდა, მაშინ გააქრე მოთამაშე. დააჭირე "დასრულებას" როცა თამაში შენი სურვილის შესაბამისად იმუშავებს.'
      Course 4 Play Lab Vars 8_instruction: 'გავაკეთოთ ეს თამაში ისე, რომ ძაღლს მოგება (ან წაგება) შეეძლოს. გამოიყენე სამუდამო ციკლი რათა ამოწმო ქულების მნიშვნელობა - თუ ქულა 20-ს გადაცდა, გააქრე მტერი (კატა). თუ ქულა 0-ზე ნაკლები გახდა, მაშინ გააქრე მოთამაშე (ძაღლი). დააჭირე "დასრულებას" როცა თამაში შენი სურვილის შესაბამისად იმუშავებს.'
      Course 4 Play Lab Vars 9_instruction: 'თავისუფალი თამაშის დროა! მოცემულია ყველა ცვლადი რომლითაც ამ ეტაპზე ვითამაშეთ, ასევე რამდენიმე დამატებითი, თუ მოისურვე. შექმენი თამაში ან ისტორია ამ ცვლადების გამოყენებით. მინიშნება: ყველა ბრძანება შეგიძლია ნახო ქვემოთ, სამუშაო სივრცეში.'
      Course 4 Play Lab Vars_instruction: 'კარგი, უკანასკნელი რამ ამ თამაშისთვის - გავაკეთოთ ისე, რომ მოთამაშეს მოგება (ან წაგება) შეეძლოს. გამოიყენე სამუდამო ციკლი რათა ამოწმო ქულების მნიშვნელობა - თუ ქულა 20-ს გადაცდა, გააქრე მტერი. თუ ქულა 0-ზე ნაკლები გახდა, მაშინ გააქრე მოთამაშე.'
      Course 4 Play Labs For Loops 1_instruction: მოდი ძაღლს 1-დან 100-მდე ყველა რიცხვი ვათქმევინოთ. გამოიყენე for ციკლი და მთვლელის ბლოკი რომ წარმოთქვა მთვლელი ცვლადის მნიშვნელობა ციკლის ყოველ გაშვებაზე.
      Course 4 Play Labs For Loops 2_instruction: ამჯერად ვცადოთ 1-დან 100-მდე კენტი რიცხვების დათვლა.
      Course 4 Play Labs For Loops 3_instruction: თუ დიდი რიცხვებით დავთვლით, შეგვიძლია უფრო მეტ რიცხვამდე იმავე დროში დავთვალოთ. სცადე ძაღლს 10-დან 1000-მდე ათობით ათვლევინო.
      Course 4 Play Labs For Loops 4_instruction: ნაზრდის შეცვლა მოსახერხებელი შეიძლება იყოს, მაგრამ მაინც წრფივად ვითვლით (ყოველ რიცხვს შორის თანაბარი მანძილია). ვთქვათ, გვინდა ვთვალოთ ექსპონენციალურად? ციკლისთვის პირობების შეცვლის გარეშე, შეგიძლიათ დათვალოთ 1, 4, 9, 16, 25... (მთვლელი კვადრატში)?
      Course 4 Play Labs For Loops 5_instruction: 'უკანასკნელ ეტაპზე დავთვალეთ თითოეული რიცხვის კვადრატი. სცადე შეცვალო "მთვლელი ^ 2" "მთვლელი ^ 3"-ით რათა დათვალო თითოეული რიცხვის კუბი (1, 8, 27, 64, 125, 216, 343...)'
      Course 4 Play Labs For Loops 6_instruction: 'შესაძლოა გახსოვდეს, რომ მარტივი რიცხვი არის ნებისმიერი მთელი რიცხვი რომელიც მხოლოდ თავის თავსა და ერთზე იყოფა. გამოიყენე "მარტივია" ფუნქცია რათა წარმოთქვა მხოლოდ მარტივი რიცხვები 1-დან 100-მდე.'
      Course 4 Play Labs For Loops 7_instruction: 'შეგიძლია გამოიყენო for ცილლი რომ დამეხმარო ამ მწკრივის წარმოთქმაში: 1, 4, 7, 10, 13, 16, 19, 22, 25?'
      Course 4 Play Labs For Loops 8_instruction: როგორი for ციკლი მათქმევინებს მწკრივს 19, 27, 35, 43, 51?
      Course 4 Variables Assessment_instruction: 'შეგიძლია შექმნა ეს სურათი "გვერდები" ცვლადის გამოყენებით? თითოეული ხაზის სიგრძე უნდა იყოს 50 პიქსელი.'
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\r\nMove one way, then\nanother to get me to the pig."
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin the name of a food and produces a String that says how you feel about that\nfood. For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review, but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\r\nOne example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes in the name of a shape and produces a solid green shape. Your function\nshould work with at least “circle”, “star” and “rectangle”, but you can add\nother shapes if you like. You can choose the size of each shape. Don’t forget\nto add an “else” clause!\r\nOne example - and part of the definition -  has\nalready been done for you!\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave your own business by 30. Write a function called life-goals, which takes\nin an age and produces a string that describes your life goals by then. Don’t\nforget to add an “else” clause!\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: |
        Can you complete this image using the "shrink"
        function block? The radius is 20. 
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The design recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition. The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst that has two domains. 1) a number of points and 2) a radius. starburst
        returns a yellow radial star with given points, and an inner radius that is
        half the outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Using the Design Recipe, write a function
        large-polygon that should output a solid polygon of given sides and color
        that takes up most of the window, regardless of the number of sides. To make
        sure that the polygon doesn't get too large as you increase the number of
        sides, side length should be inversely proportional to side number, with a
        length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the design recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        _overlay_ to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay function to place a 75
        pixel radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      frozen circle function in circle_instruction: ახლა შევქმნათ 20 გადამკვეთი წრე, ყოველი წრის შემდეგ 18 გრადუსი მობრუნებით.
      frozen circle function with parameter_instruction: 'ეს არის "შექმენი წრე" ბლოკი, რომლითაც შეიძლება სხვადასხვა ზომის წრის შექმნა. შეგიძლია ამისი გამოყენებით შექმნა პატარა წრე ზომით 5 და დიდი წრე ზომით 10?'
      frozen circle function_instruction: 'გამოიყენე ახალი "შექმენი წრე" ბლოკი რომ შექმნა 10 გადამკვეთი წრე. არ დაგავწიყდეს წრეებს შორის წინ გადახტომა.'
      frozen circle_instruction: 'წრე განსაკუთრებული ფიგურაა. შეგიძლია გაარკვიო რა რიცხვებით უნდა შეიცვალოს კითხვის ნიშნები "draw a circle"-ში?'
      frozen cross rotate dense_instruction: 'გავიმეოროთ 90-ჯერ! რამდენჯერ მოთავსდება 360-ში 90? მინიშნება: ძალიან მცირე რიცხვია.'
      frozen cross rotate_instruction: ახლა სცადე 10-ჯერ გაიმეორო. რამდენი გრადუსით უნდა მობრუნდე თითოეულ ხაზს შორის?
      frozen cross_instruction: გამოიყენე გამეორების ბლოკი რომ შექმნა პლუსის ნიშანი. შეამჩნიე რომ ელზას წინ და უკან მოძრაობა შეუძლია?
      frozen diamond mini snowflake_instruction: 'იცოდი რომ ყველა ფიფქს განსხვავებული ფორმა აქვს? შევქმნათ ფიფქი "გამეორების" ბლოკის გამოყენებით, რომლითაც პარალელოგრამს გავიმეორებთ 4-ჯერ, ყოველი პარალელოგრამის შემდეგ 90 გრადუსით მობრუნებით.'
      frozen diamond snowflake_instruction: ახლა შევქმნათ ახალი ფიფქი გამეორების ბლოკით პარალელოგრამის 10-ჯერ გამეორებითა და ყოველი პარალელოგრამის შემდეგ 36 გრადუსით მობრუნებით.
      frozen diamond_instruction: 'შევქმნათ პარალელოგრამი. იგივეა, რაც კვადრატი, მაგრამ განსხვავებული კუთხეებით: 60 და 120 გრადუსი კუთხეები 90 გრადუსი კუთხეების მაგივრად.'
      frozen freeplay_instruction: შენ ოფიციალურად გახდი ოსტატი მხატვარი! შექმენი ზამთრის საოცრებათა სამყარო.
      frozen line_instruction: გამარჯობა! მე ელზა ვარ არენდელიდან. მომეხმარე ერთი ხაზის შექმნაში.
      frozen perpendicular_instruction: ახლა ვნახოთ შეგვიძლია თუ არა ორი ხაზის შექმნა, რომლებიც ერთმანეთთან 90 გრადუსს ადგენენ. დაგჭირდება შემობრუნების ბლოკის და გადაადგილების ბლოკის გამოყენება.
      frozen snowflake branch_instruction: 'სცადე "შექმენი ფიფქის ტოტი" ბლოკის გამოყენება რომ შექმნა სამი ტოტი, რომლებიც ფიფქს ემგვანებიან.'
      frozen snowflake full_instruction: ახლა ეს 8-ჯერ გავიმეოროთ და შევქმნათ მშვენიერი ფიფქი!
      frozen snowflower_instruction: თოვლში უბრალო ფიგურებით საკმაოდ რთული ნიმუშების შექმნა შეიძლება. შეგიძლია შექმნა ნიმუში 5 ხუთ პიქსელიანი და 5 ათ პიქსელიანი წრის გამეორებით?
      frozen square iterative_instruction: როგორც ჩანს კვადრატი ნახევრად დავხატეთ. მოვათავსოთ 4 ხაზი ერთად რომ შევქმნათ კვადრატი.
      frozen square loop 3x_instruction: შევქმნათ სამი კვადრატი, ყოველი კვადრატის შემდეგ მობრუნებით. ყოველი კვადრატის შემდეგ მობრუნდით 120 გრადუსით.
      frozen square loop_instruction: სალამი, მე ანა ვარ არენდელიდან! მოდი კვადრატი დავხატოთ გამეორების ბლოკით, რომელიც ნაკლებ ბლოკს იყენებს. რამდენჯერ (???) უნდა გაიმეოროს თავის თავში მყოფი ბლოკები გამეორების ბლოკმა კვადრატის შესაქმნელად?
      frozen square snowflake_instruction: შეგიძლია გამეორების ბლოკით 10 კვადრატის შექმნით და შემობრუნების ბლოკით 36 გრადუსით მობრუნებით ყოველი კვადრატის შემდეგ ფიფქი შექმნა?
      hoc2015_intro_instruction: 'ჰირო არის "მსახიობი ". გამოიყენე მოძრაობის ბლოკი რომ მიიყვანო და შეახო ჰირო Baymax-ს.'
      hoc2015_sandbox_instruction: 'ჰირო არის "მსახიობი ". გამოიყენე მოძრაობის ბლოკი რომ მიიყვანო და შეახო ჰირო Baymax-ს.'
      Infinity_catch_instruction: 'შეგიძლია ელზა ("მსახიობი 2") ანას ისრებიანი ღლაკების გამოყენებით დააწიო?'
      Infinity_finale_instruction: შექმენი რაც მოგესურვება და გააზიარე!
      Infinity_move_collide_instruction: 'ჰირო არის "მსახიობი 1". გადააადგილე ის Baymax-ის მარჯვნივ და ჩართე მუსიკა როცა შეეხებიან ერთმანეთს.'
      Infinity_move_directions_instruction: 'Baymax არის "მსახიობი 2". დაამატე მოძრაობის ბლოკები და შემდეგ ისრებით ამოძრავე Baymax. შეახე ის დანარჩენ ორ პერსონაჟს.'
      Infinity_move_right_instruction: 'ჰირო არის "მსახიობი ". გამოიყენე მოძრაობის ბლოკი რომ წაიყვანო ჰირო მარჯვნივ და შეახო Baymax-ს.'
      Infinity_repeat_instruction: 'გამოიყენე "იმეორე მუდმივად" ბლოკი რომ ანა ზემოთ და ქვემოთ 400 პიქსელით გადააადგილო.'
      Infinity_say_instruction: 'ათქმევინე ანას "გამარჯობა" "თქმა" ბლოკის გამოყენებით.'
      Infinity_shoot_instruction: 'Baymax არის "მსახიობი 2". ასროლინე Baymax-ს რაკეტა ჰიროსთვის.'
      Infinity_shoot_directions_instruction: 'ჰირო არის "მსახიობი 3". ასროლინე ჰიროს ყუმბარა ოთხივე პერსონაჟის მიმართულებით. ყოველ სროლას შორის გააკეთე მოიცადე ერთი წამი.'
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: შეეხე კიდევ უფრო მეტ ფიფქს!
      Infinity_touch_four_instruction: გადააადგილე ანა ზემოთ, ქვემოთ, მარცხნივ და მარჯვნივ რომ შეეხოს ოთხივე ფიფქს.
      Infinity_touch_score_instruction: ააღებინე ანას ერთი ქულა როცა შეეხება ფიფქს. შემდეგ დააჭირე გაშვებას და მიიყვანე ის თითეულ ფიფქთან თითოჯერ შესახებად.
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: 'დახატე მოკლე ხაზი ზემოთკენ და გრძელი - მარჯვნისაკენ!'
      K-1 artist 1 level 10_instruction: დახატე წყვეტილი ხაზი ახტომისა და დახატვის ბლოკების გამოყენებით
      K-1 artist 1 level 9_instruction: დახატე ეს სამი ხაზის გამოყენებით
      K-1 Artist Loops 1_instruction: დახატე ეს ხაზი აღმოსავლეთით ოთხჯერ გადაადგილებით.
      K-1 Artist Loops 2_instruction: შეგიძლია იგივე ხაზი ციკლის გამოყენებით დახატო?
      K-1 Artist Loops 3_instruction: შეგიძლია ეს ბლოკები ციკლში გაუშვა და დახატო 6 ხაზი?
      K-1 Artist Loops 4_instruction: დაგვეხმარება ციკლი ამ სასახლის ზედა ნაწილის დახატვაში?
      K-1 Artist Loops 5_instruction: რა შეიძლება გაუშვა ციკლში ოთხჯერ ამ კიბეების დასახატად?
      K-1 Artist Loops 6_instruction: 'ამას ორი ციკლი სჭირდება: ერთი კიბეებზე ასასვლელად და ერთიც - ჩამოსასვლელად.'
      K-1 Artist Loops 7_instruction: შეგიძლია ეს ნიმუში ორი ციკლით დაასრულო?
      K-1 Artist Loops 8_instruction: კიბეს უფრო გრძელი საფეხურები აქვს.
      K-1 Artist Loops 9_instruction: 'შეჯამება: გამოიყენე ციკლი რომ დახატო კიბეები'
      K-1 Artist Loops Free Play_instruction: თავისუფალი თამაში, დახატე რამე სახალისო!
      K-1 Artist1 1_instruction: დახატე კაცის ფეხი ერთი ხაზით
      K-1 Artist1 10_instruction: დახატე და ახტი რომ გააკეთო წყვეტილი ბილიკი განძის X-მდე
      K-1 Artist1 2_instruction: დახატე ულვაში კატაზე ორი ხაზით!
      K-1 Artist1 3_instruction: დახატე ორი ხაზი აღმოსავლეთით და ორი ხაზი ჩრდილოეთით რომ დაასრულო სახლი!
      K-1 Artist1 4_instruction: დახატე ხაზები ზემოთ, სასახის ზემოდან და ქვემოთ რომ დაასრულო სასახლე!
      K-1 Artist1 5.5_instruction: დაასრულე სასახლის მესამე კოშკი მოკლე ხაზების გამოყენებით
      K-1 Artist1 5_instruction: დახატე ამ ყვავილის ღერო ორი ხაზით!
      K-1 Artist1 6_instruction: დაასრულე სურათი ახტომის ბლოკის გამოყენებით!
      K-1 Artist1 7_instruction: გამოიყენე ახტომის ბლოკი რომ დახატვის გარეშე გადაადგილდე. ახტი ზემოთ და დახატე ხაზი.
      K-1 Artist1 8_instruction: დახატე წყვეტილი ხაზი ახტომისა და დახატვის ბლოკების გამოყენებით
      K-1 Artist1 9_instruction: დახატე და ახტი რომ შექმნა წყვეტილი ხაზი
      K-1 Artist1 Assessment 1_instruction: დახატე მოკლე და გრძელი ხაზები!
      K-1 Artist1 Assessment 2_instruction: დახატე მოკლე წყვეტილი ხაზები!
      K-1 Artist2 1_instruction: დახატე კვადრატი სამკუთხედს ქვემოთ.
      K-1 Artist2 2_instruction: ახტი და დახატე კვადრატი სახლის გვერდით.
      K-1 Artist2 3_instruction: დახატე კვადრატი მეორე კვადრატს ზემოთ
      K-1 Artist2 4_instruction: დახატე მართკუთხედი რომ დაასრულო ხიდი.
      K-1 Artist2 5_instruction: დახატე მართკუთხედი რომ დაასრული ხიდის ბოძები
      K-1 Artist2 6_instruction: დახატე ორი კვადრატი რომ გააკეთო მართკუთხედი!
      K-1 Artist2 Assessment1_instruction: 'შეჯამება: დახატე კვადრატი მეორე კვადრატის გვერდით.'
      K-1 Artist2 Free Draw_instruction: დახატე ნებისმიერი რამ!
      K-1 Artist2_7_instruction: დახატე მართკუთხედი რომ კარადას ზედა თარო გაუკეთო!
      K-1 Bee 1_instruction: მიმიყვანე ყვავილთა, აიღე ნექტარი, შემდეგ დამაბრუნე ფიჭასთან და გააკეთე თაფლი
      K-1 Bee 10_instruction: აიღე ოთხი ნექტარი და გააკეთე ორი თაფლი!
      K-1 Bee 11.5_instruction: აიღე ოთხი ნექტარი და გააკეთე ოთხი თაფლი!
      K-1 Bee 11_instruction: აიღე სამი ნექტარი და გააკეთე ერთი თაფლი
      K-1 Bee 12_instruction: აიღე სამი ნექტარი და გააკეთე ორი თაფლი!
      K-1 Bee 13_instruction: აიღე სამი ნექტარი და გააკეთე ერთი თაფლი!
      K-1 Bee 14_instruction: მიმიყვანე ნექტართან, აიღე, მიმიყვანე ფიჭასთან და გააკეთე თაფლი
      K-1 Bee 15_instruction: აიღე ორი ნექტარი რომ გააკეთო ორი თაფლი!
      K-1 Bee 2_instruction: მიმიყვანე ყვავილთა, აიღე ნექტარი, შემდეგ დამაბრუნე ფიჭასთან და გააკეთე თაფლი
      K-1 Bee 3_instruction: მიმიყვანე ყვავილთა, აიღე ნექტარი, შემდეგ დამაბრუნე ფიჭასთან და გააკეთე თაფლი
      K-1 Bee 4_instruction: აიღე ორი ნექტარი და გააკეთე ორი თაფლი!
      K-1 Bee 5_instruction: აიღე სამი ნექტარი და გააკეთე სამი თაფლი!
      K-1 Bee 6_instruction: აიღე ორი ნექტარი და გააკეთე ორი თაფლი!
      K-1 Bee 7_instruction: აიღე სამი ნექტარი და გააკეთე ორი თაფლი!
      K-1 Bee 8_instruction: აიღე ორი ნექტარი და გააკეთე ორი თაფლი!
      K-1 Bee 9_instruction: აიღე ორი ნექტარი და გააკეთე ორი თაფლი!
      K-1 Bee Assessment 1_instruction: აიღე ნექტარი რომ გააკეთო თაფლი!
      K-1 Bee Assessment 2_instruction: აიღე ნექტარი რომ გააკეთო თაფლი!
      K-1 Bee Loops 1_instruction: აიღე ნექტარი რომ გააკეთო თაფლი!
      K-1 Bee Loops 10_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი, თაფლი და გადაადგილდე!
      K-1 Bee Loops 11_instruction: 'შეჯამება: გამოიყენე ციკლები, აიღე ნექტარი და გააკეთე თაფლი!'
      K-1 Bee Loops 12_instruction: 'შეჯამება: გამოიყენე ციკლები რომ მიიღე ნექტარი, თაფლი და გადაადგილდე!'
      K-1 Bee Loops 2_instruction: გამოიყენე ციკლი რომ გადაადგილდე, აიღო ნექტარი და გააკეთო თაფლი!
      K-1 Bee Loops 3_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი და გააკეთო თაფლი!
      K-1 Bee Loops 4_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი, გააკეთო თაფლი და გადაადგილდე!
      K-1 Bee Loops 5_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი და თაფლი!
      K-1 Bee Loops 6_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი, თაფლი და გადაადგილდე!
      K-1 Bee Loops 7_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი და გააკეთო თაფლი!
      K-1 Bee Loops 8_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი და თაფლი!
      K-1 Bee Loops 9_instruction: გამოიყენე ციკლები რომ აიღო ნექტარი, თაფლი და გადაადგილდე!
      K-1 Bee Loops Assessment 1_instruction: აიღე ნექტარი რომ გააკეთო თაფლი და გამოიყენე ციკლები რომ იმოძრაო!
      K-1 Bee Loops Assessment 2_instruction: აიღე ნექტარი რომ გააკეთო თაფლი ციკლების გამოყენებით!
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: ააგე სამ დონიანი პირამიდა. სხვა მითითება არაა, ამიტომ ითამაშე ნაწილებით სანამ არ გამოგივა!
      k-1 maze 1_instruction: შეგიძლია გადაადგილდე დასავლეთით რომ მიხვიდე ღორთან?
      K-1 Maze 10_instruction: 'შემოუარე დინამიტს რომ მიმიყვანო ღორთან! '
      K-1 Maze 11_instruction: 'გაჰყევი ბილიკს და მიმიყვანე სასაცილო ღორთან. მოერიდე დინამიტს! მინიშნება: ის ჩემს სამხრეთითაა.'
      K-1 Maze 2_instruction: გადაადგილდი აღმოსავლეთით რომ მიმიყვანო ღორთან!
      K-1 Maze 3_instruction: გადამაადგილე სამხრეთით რომ მიმიყვანო ღორთან!
      K-1 Maze 4_instruction: გადამაადგილე ჩრდილოეთით რომ მიმიყვანო ღორთან!
      K-1 Maze 5_instruction: გადაადგილდი აღმოსავლეთით რომ მიმიყვანო ღორთან!
      K-1 Maze 6_instruction: გადამაადგილე ერთით, შემდეგ ისევ ერთით რომ მიმიყვანო ღორთან!
      K-1 Maze 7_instruction: გადამაადგილე ერთით, შემდეგ ისევ ერთით რომ მიმიყვანო ღორთან!
      K-1 Maze 8_instruction: გადამაადგილე ერთით, შემდეგ ისევ ერთით რომ მიმიყვანო ღორთან!
      K-1 Maze 9_instruction: გადამაადგილე ერთით, შემდეგ ისევ ერთით რომ მიმიყვანო ღორთან!
      K-1 Maze Assessment 1_instruction: 'შეჯამება -- მიმიყვანე ღორთან!'
      K-1 Maze Assessment 12_instruction: შეჯამების დონე
      K-1 Maze Assessment 13_instruction: შეჯამების დონე
      K-1 Maze Assessment 2_instruction: 'შეჯამება -- მიმიყვანე ღორთან!'
      K-1 maze debug 1_instruction: შეცვალე კოდი რომ მიმიყვანო ღორთან!
      K-1 maze debug 10_instruction: გაასუფთავე ეს დონე ბაგებისგან ბლოკების გადაადგილებითა და დამატებით რომ მიმიყვანო ღორთან!
      K-1 maze debug 11_instruction: "ეს გამოცდაა!\r\nგაასწორე ამ დონის ბაგები ბლოკების გადალაგებითა და დამატებით რომ მიმიყვანო ღორთან"
      K-1 maze debug 2_instruction: გაარკვიე რა აკლია კოდს და დაამატე კოდები რომ მიმიყვანო ღორთან!
      K-1 maze debug 3_instruction: გაარკვიე რა აკლია კოდს და მოაშორე ბლოკები რომ მიმიყვანო ღორთან!
      K-1 maze debug 4_instruction: ნახე ბლოკები და შეასწორე! მგონი მე არასწორი მიმართულებით მივდივარ.
      K-1 maze debug 5_instruction: გაასუფთავე ეს დონე ბაგებისგან ბლოკების გადაადგილებითა და დამატებით რომ მიმიყვანო ღორთან!
      K-1 maze debug 6_instruction: გაასუფთავე ეს დონე ბაგებისგან ბლოკების გადაადგილებითა და დამატებით რომ მიმიყვანო ღორთან!
      K-1 maze debug 7_instruction: გაასუფთავე ეს დონე ბაგებისგან ბლოკების გადაადგილებითა და დამატებით რომ მიმიყვანო ღორთან!
      K-1 maze debug 8_instruction: გაასუფთავე ეს დონე ბაგებისგან ბლოკების გადაადგილებითა და დამატებით რომ მიმიყვანო ღორთან!
      K-1 maze debug 9_instruction: გაასუფთავე ეს დონე ბაგებისგან ბლოკების გადაადგილებითა და დამატებით რომ მიმიყვანო ღორთან!
      K-1 Maze debug Assessment 1_instruction: 'შეჯამება -- გაწმინდე ეს დონე ბაგებისგან ბლოკების გადაადგილებითა და დამატებით რომ მიმიყვანო ღორთან!'
      K-1 Maze Loops 1_instruction: მიმიყვანე ღორთან!
      K-1 Maze Loops 10_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 11_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 12_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 2_instruction: გამოიყენე გამეორების ბლოკი რომ მიმიყვანო ღორთან!
      K-1 Maze Loops 3_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 4_instruction: მიმიყვანე ღორთან!
      K-1 Maze Loops 5_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 6_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 7_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 8_instruction: მიმიყვანე ღორთან! გამოიყენე გამეორების ციკლი.
      K-1 Maze Loops 9_instruction: მიმიყვანე ღორთან!
      K-1 Maze Loops Assessment 1_instruction: 'შეჯამება -- გამოიყენე ციკლები რომ მიმიყვანო ღორთან!'
      K-1 Maze Loops Assessment 2_instruction: 'შეჯამება -- გამოიყენე ციკლები რომ მიმიყვანო ღორთან!'
      K-1 Maze Multi 14_instruction: შეჯამების დონე
      K-1 Maze Multi 15_instruction: შეჯამების დონე
      K-1 Maze Sequence Assessment 1_instruction: "ეს გამოცდაა!\r\nგადაადგილდი ერთი მიმართულებით, შემდეგ კი მეორე მიმართულებით რომ მიმიყვანო ღორთან"
      K-1 Maze Sequence Assessment 2_instruction: "ეს გამოცდაა!\r\nგადაადგილდი ერთი მიმართულებით, შემდეგ კი მეორე მიმართულებით რომ მიმიყვანო ღორთან."
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: "In this version of the Internet Simulator,\nyou can connect to up to 5 other people in a room. When you send messages\nin the room, everyone receives them. What are some of the challenges of this\nsystem, and how might you solve them?\r\n"
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
        
      NetSim Standalone Routers Addresses_instruction: "For this activity, connect\nto a router with the others in your group. Important note: The router will\nonly properly route messages where the first 4 bits are the To: address and\nthe second 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
        
      NetSim Standalone Sending Numbers_instruction: |
        You and your partner can now
        reliably send messages back and forth without extra coordination! While you're
        always sending bits back and forth, you can also represent those bits as decimal
        numbers. What kinds of information can you represent with this system? 
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: დახატე რამე მაგარი! შენი კოდი ინახება როგორც პროექტი რომელსაც შეგიძლია ნებისმიერ დროს დაუბრუნდე.
      NEW Course 4 Artist Functions 1_instruction: შეგიძლია ციკლის გამოყენებით დახატო კვადრატი რომლის სიგრძე 100 პიქსელია?
      NEW Course 4 Artist Functions 10_instruction: დააჭირე ჩასწორებას რომ ფუნქციის განმარტების ბლოკები შეავსო და გააკეთო 40 პიქსელიანი კვადრატი.
      NEW Course 4 Artist Functions 11_instruction: 'გვაქვს ახალი ფუნქცია სახელად "დახატე კვადრტების ხაზი". შეგიძლია შეხედო ფუნქციის ბლოკს რომ ნახო როგორაა აგებული. დააჭირე გაშვებას როცა მზად იქნები შემდეგი თავსატეხისთვის.'
      NEW Course 4 Artist Functions 12_instruction: გამოიყენე ”დახაზე კვადრატების ხაზი” ფუნქცია წინა თავსატეხიდან რომ დახატო ეს ნიმუში.
      NEW Course 4 Artist Functions 13_instruction: 'შეგიძლია დახატო ვარსკვლავის ფიგურა "დახატე კვადრატების ხაზი" ფუნქციის გამოყენებით? მინიშნება: თითოეულ იტერაციაზე მოგიწევს გარკვეული რაოდენობის პიქსელით წინ გადაადგილება და 144 გრადუსით მობრუნება.'
      NEW Course 4 Artist Functions 14_instruction: 'თავისუფალი თამაშის დროა! '
      NEW Course 4 Artist Functions 2_instruction: 'შეგიძლია დახატო 3 კვადრატი, ერთმანეთისგან 20 პიქსელი დაშორებით? მინიშნება: თითოეული კვადრატი 100 პიქსელი ზომისაა'
      NEW Course 4 Artist Functions 3_instruction: 'ეს ახალი ტიპის ბლოკია, სახელად ”ფუნქციის ბლოკი”. დააჭირე გაშვებას რომ ნახო რისი გაკეთება შეუძლია. '
      NEW Course 4 Artist Functions 4_instruction: 'გამოიყენე "დახატე კვადრატი" ფუნქცია რათა დახატო ეს ნიმუში. მინიშნება: ყოველი კვადრატის შემდეგ მოგიწევს "შემობრუნდი 120 გრადუსით" ბლოკის გამოყენება.'
      NEW Course 4 Artist Functions 5_instruction: 'საიდან იცის "დახატე კვადრატი" ფუნქციამ თუ რომელი ბრძანებები გაუშვას? დააჭირე "ჩასწორებას" "დახატე კვადრატი" ფუნქციის ბლოკში. ფუნქციის ედიტორში ბლოკები წარმოადგენენ განმარტებას, რომელიც ქმნის "დახატე კვადრატი"-ს. როცა მორჩები თვალიერებას, დააჭირე "შენახვა და დახურვა"-ს და შემდეგ "გაშვება"-ს'
      NEW Course 4 Artist Functions 6_instruction: "შეგიძლია დახატო ეს სურათი \"დახატე კვადრატი\" ფუნქციის ბლოკის გამოყენებით? მინიშნება: ყოველი კვადრატი 20 პიქსელითაა დაშორებული.\r\n"
      NEW Course 4 Artist Functions 7_instruction: 'ეჩვევი ფუნქციების ბლოკების გამოყენებას? მოდი შევცვალოთ კვადრატი ისე რომ მისი ზომა 200 პიქსელი გახდეს. მინიშნება: დააჭირე "ჩასწორება"-ს რათა შეცვალო "დახატე კვადრატი" ფუქნციის ედიტორის ზომა. არ დაგავიწყდეს დააჭირო "შენახვა და დახურვას"-ს რომ გამოხვიდე ფუნქციის ედიტორიდან. '
      NEW Course 4 Artist Functions 8_instruction: ჩვენ მოგაწოდეთ კოდის უმეტესი ნაწილი ფუნქციის შესაქმნელად, მაგრამ რაღაც აკლია. შეგიძლია ჩაასწორო ფუნქციის განმარტება სამკუთხედის დასახატად?
      NEW Course 4 Artist Functions 9_instruction: 'რომელი ბლოკი უნდა დაამატო რომ სამკუთხედი კვადრატზე "დაჯდეს"?'
      NEW Course 4 Artist Functions inspire_instruction: "თავისუფალი შთაგონება:\nუკვე ყველაფერი იცი იმისთვის რომ ასეთი ნიმუშები შექმნა! თუ ეს სურათი შთაგაგონებს, სცადე შექმნა რამე მსგავსი. სხვამხრივ, შეეცადე გააკეთო რამე შენ თვითონ.\r\n\r\nგაინტერესებს როგორ შეიქმნა შთაგონების ნიმუში? იხილე ამოხსნა."
      New Course 4 Artist Functions Level 4_instruction: გამოიყენე ”დახატე კვადრატი” ფუნქცია ამ ნიმუშის დასახატად.
      NEW Course 4 Artist Params 1_instruction: განვსაზღვროთ ეს ფუნქცია რომ დახატოს 50 პიქსელი სიგრძის გვერდებიანი კვადრატი. დასაწყებად დააჭირე ჩასწორებას.
      NEW Course 4 Artist Params 10_instruction: 'შექმენი ”დახატე ექვსკუთხედი” ფუნქციის ბლოკი სიგრძის პარამეტრით. მინიშნება: ამ ექვსკუთხედის ზომა 100 პიქსელია. '
      NEW Course 4 Artist Params 11_instruction: შეგიძლია გაარკვიო თუ როგორ იხატება ეს ფიგურა? ჩაასწორე ფუნქცია რომ გამოიყენო ”გვერდები” პარამეტრი.
      NEW Course 4 Artist Params 12_instruction: შეგიძლია დაასრულო ეს ნახატი? ყოველი ფიგურის გვერდის სიგრძეა 100 პიქსელი.
      NEW Course 4 Artist Params 12a_instruction: ეს სურათი წინას ჰგავს. შეგიძლია for ციკლის შენს ფუნქციასთან ერთად გამოყენებით გააკეთო ეს დიზაინი?
      NEW Course 4 Artist Params 13_instruction: 'მოდი ჩავასწოროთ ეს "დახატე ფიგურა" ფუნქცია. მას უკვე აქვს სიგრძის პარამეტრი. ახლა ჩავასწოროთ ფუნქცია ისე, რომ მას გააჩნდეს "გვერდები" პარამეტრი. გაიხსენე, რომ მობრუნების კუთხე ტოლია 360 გაყოფილი ფიგურის გვერდების რაოდენობაზე. მინიშნება: ეს სიგრძეებია თითოეული ფიგურისთვის: სამკუთხედი - 100 პიქსელი, ექვსკუთხედი - 25 პიქსელი და კვადრატი - 50 პიქსელი.'
      NEW Course 4 Artist Params 14_instruction: 'შეგიძლია ხელახლა შექმნა ეს ფიგურები? გადაიტანე პარამეტრი ”სიგრძე” ფუნქციის განმარტებაში. '
      NEW Course 4 Artist Params 15_instruction: 'თავისუფალი თამაში: აქ რამდენიმე ფუნქციაა რომელიც დაწერე და რამდენიმე რომლითაც თამაში შეგიძლია. დახატე რამე მაგარი!'
      NEW Course 4 Artist Params 2_instruction: შექმენი ნულიდან ”დახატე სამკუთხედი” ფუნქცია 50 პიქსელიანი გვერდებით
      NEW Course 4 Artist Params 3_instruction: "ახლა გამოვიყენოთ ფუნქცია წინა თავსატეხიდან 3 სამკუთხედის დასახატად. მინიშნება: თითოეული სამკუთხედი დაშორებულია 50 პიქსელით.\r\n"
      NEW Course 4 Artist Params 4_instruction: ამ ფუნქციის ბლოკებს რამე განსხვავებულს ხომ არ ამჩნევ? დააჭირე გაშვებას რომ ნახო რა მოხდება.
      NEW Course 4 Artist Params 5_instruction: 'შეავსე ??? input ბლოკის სიგრძის პარამეტრში. მინიშნება; ხუთკუთხედის ზომაა 500 პიქსელი. '
      NEW Course 4 Artist Params 6_instruction: 'შეავსე სიგრძის პარამეტრი რათა დახატო ფიგურები "???"-ის სწორი რიცხვებით ჩანაცვლებით. კვადრატი და სამკუთხედი ზომით 100 პიქსელია, ექვსკუთხედი კი 75 პიქსელი.'
      NEW Course 4 Artist Params 7_instruction: 'შეგიძლია დაასრულო ნახატი? მინიშნება: თითოეული სამკუთხედი 25 პიქსელით უფრო დიდია ვიდრე წინა.  პირველი სამკუთხედი ზომით 25 პიქსელია.'
      NEW Course 4 Artist Params 8_instruction: ამ სამკუთხედის ფუნქციის კოდი გაფუჭებულია. შეგიძლია ჩაასწორო ფუნქცია და შემდეგ შექმნა სამკუთხედები სიგრძით 25, 50 და 75?
      NEW Course 4 Artist Params 9_instruction: 'დააჭირე "ჩასწორება"-ს რათა შეავსო "დახატე კვადრატი" ფუნქციის განმარტება და დაამატე პარამეტრი. მასში უნდა შედიოდეს სიგრძის პარამეტრი, როგორც სამკუთხედში. ამჯერად, დახატე 3 კვადრატი: 25, 50 და 75 პიქსელი სიგრძის, თითეული 100 პიქსელის დაშორებით.'
      NEW Course 4 Artist Params inspire_instruction: "თავისუფალი შთაგონება:\nუკვე ყველაფერი იცი იმისთვის რომ ასეთი ნიმუშები შექმნა! თუ ეს სურათი შთაგაგონებს, სცადე შექმნა რამე მსგავსი. სხვამხრივ, შეეცადე გააკეთო რამე შენ თვითონ.\r\n\r\nგაინტერესებს როგორ შეიქმნა შთაგონების ნიმუში? ეწვიე https://studio.code.org/c/106387530-ს და იხილე ამოხსნა."
      NEW Course 4 Artist Vars 1.5_instruction: 'შეხედე კოდს. ხედავ როგორ მუშაობს "მიანიჭე სიგრძე" და "სიგრძე" ბლოკები ერთად? დააჭირე "გაშვება"-ს რომ იხილო ისინი მოქმედებაში. '
      NEW Course 4 Artist Vars 12_instruction: ახლა შეცვალე წინა დონის კოდი რომ შექმნა ხუთკუთხედი, გვერდებით 100.
      NEW Course 4 Artist Vars 2.5_instruction: 'შეხედე კოდს. ხედავ როგორ მუშაობს "მიანიჭე სიგრძე" და "სიგრძე" ბლოკები ერთად? დააჭირე "გაშვება"-ს რომ იხილო ისინი მოქმედებაში. '
      NEW Course 4 Artist Vars 2_instruction: 'გადაიტანე რიცხვების ბლოკი ”მიანიჭე სიგრძე” ბლოკში რომ დახატო 50 პიქსელიანი სამკუთხედები. '
      NEW Course 4 Artist Vars 4 5_instruction: უკანასკნელი თავსატეხი მშვენივრად შეასრულე. იგივე ვცადოთ, ოღონდ ამჯერად დიზაინი 60 პიქსელიანი ექვსკუთხედებით შევქმნათ.
      NEW Course 4 Artist Vars 4_instruction: 'კიდევ ვცადოთ. შეგიძლია დააყენო სიგრძის ცვლადი ისე, რომ ეს დიზაინი ექვსკუთხედებით შექმნა? მინიშნება: ათის ჯერადია.'
      NEW Course 4 Artist Vars 6_instruction: შეგიძლია დამეხმარო ამ ნიმუშის დახატვაში სიგრძის ცვლადის ბლოკის სწორ ადგილებში ჩასმით?
      NEW Course 4 Bee For Loops 1_instruction: გამოიყენე ციკლი რომ შეაგროვო ნექტარი თითოეული ყვავილიდან.
      NEW Course 4 Bee For Loops 10_instruction: 'გამოიყენე შენი for ცილკის "მთვლელი" ცვლადი რომ აკონტროლო ჰორიზონტალური გადაადგილება.'
      NEW Course 4 Bee For Loops 11_instruction: შეგიძლია გამოიყენო ციკლის ცვლადი რომ აკონტროლო მოძრაობა და ნექტრის შეგროვება?
      NEW Course 4 Bee For Loops 2_instruction: დაამატე საჭირო კოდი რათა ფუტკარმა მთელი ნექტარი შეაგროვოს. ნახე რამდენი კოდია საჭრო ამ თავსატეხისთვის! (უფრო მარტივ გზას მომდევნო თავსატეხში ვისწავლით.)
      NEW Course 4 Bee For Loops 3_instruction: 'For ციკლი ამას გაცილებით ამარტივებს! მთელი საჭრო კოდი აქაა, ნახე როგორაა აგებული და დააჭირე "გაშვება"-ს რომ ნახო როგორ მუშაობს. '
      NEW Course 4 Bee For Loops 4 4_instruction: 'შეგიძლია დაეხმარო ფუტკარს for ციკლის გამოყენებით დარჩენილი თაფლის შეგროვებაში? '
      NEW Course 4 Bee For Loops 4_instruction: 'ჩაანაცვლე ??? for ციკლში ფუტკრისთვის შესაგროვებელი ნექტრის უდიდესი რაოდენობით. '
      NEW Course 4 Bee For Loops 5 5_instruction: ეჩვევი for ციკლის გამოყენებას? დავეხმაროთ ფუტკარს დანარჩენი ნექტრის შეგროვებაში.
      NEW Course 4 Bee For Loops 5_instruction: შეგიძლია ციკლი უკუთვლისთვისაც გამოიყენო. სცადე შეაგროვო ნექტარი 5-დან 1-მდე თითო-თითოდ უკუთვლით.
      NEW Course 4 Bee For Loops 6_instruction: 'უკანასკნელ რიცხვს შენს ციკლში ეწოდება "ნაზრდი", ციკლის ყოველ შესრულებაზე მთვლელი ცვლადი ნაზრდით იზრდება. სცადე ამ ყვავილების შეგროვება 2 ნაზრდის გამოყენებით.'
      NEW Course 4 Bee For Loops 7_instruction: |
        ეჩვევი for ციკლის გამოყენებას? ეს წინა თავსატეხს ჰგავს, მაგრამ უნდა შეაგროვო 2, 4, 6, 8, 10 ნექტარი.
        
      NEW Course 4 Bee For Loops 8_instruction: "რას იზამ რამდენიმე ბლოკს თუ მოვაშორებთ? შეგიძლია ისევ დაამატო ისინი და დაეხმარო ფუტკარს ნექტრის შეგროვებაში?\r\nდაიმახსოვრე:\nთუ შენი ციკლი ითვლის ზრდადობით, შენს მთვლელ ცვლადს ნაზრდი ემატება ყოველ ჯერზე. რამდენი უნდა იყოს ნაზედი რომ შეაგროვო 3, 6, 9 ნექტარი?\r\n"
      NEW Course 4 Bee For Loops 9_instruction: თუ შენი ციკლი კლებადობით ითვლის, ყოველ ციკლში შენს მთვლელს გარკვეული სიდიდე აკლდება. რა უნდა იყოს ეს სიდიდე, რომ შეგროვდეს 9, 6 და შემდეგ 3 ნექტარი?
      NEW Course 4 Bee For Loops 95_instruction: 'დააკვირდი შენი შექმნილი for ციკლის თითოეულ დეტალს.  შეგიძლია მიხვდე რომელი რიცხვები უნდა გააორმაგო ამ თავსატეხის ამოსახსნელად? რატომ მუშაობს?'
      NEW Course 4 Play Lab Params 11_instruction: 'თავისუფალი თამაშის დროა! გაერთე ყველა ბლოკით შენი ინსტრუმენტების ყუთიდან. '
      NEW Course 4 Play Lab Params 5 5_instruction: კიდევ ვცადოთ, მაგრამ ნაკლები დახმარებით. ამჯერად რა უნდა ჩაასწორო რომ მსახიობებმა პატრულირება დაიწყონ?
      NEW Course 4 Play Lab Vars 4 5_instruction: როგორ გგონია რას იზამს ეს კოდი? დააჭირე გაშვებას და ნახე რა მოხდება
      NEW Course 4 Play Labs For Loops 7a_instruction: უკვე ნასწავლის გამოყენებით, შეგიძლია დინოზავრს ნაბიჯი გადაადგმევინო ყოველ ჯერზე როცა პინგვინი დაითვლის?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'თავისუფალი თამაშის დროა, გაერთე ყველა ბლოკით შენი ინსტრუმენტების ყუთიდან. '
      NEW Course 4 Play Labs For Loops 8a_instruction: 'გამოწვევა: როგორ გამოიყენებ for ციკლს რომ ყველა მსახიობი ამოძრაო, საკუთარი ნომერი ათქმევინო და შემდეგ გააქრო ეკრანიდან? '
      New Play Lab Project_instruction: შექმენი შენი ისტორია ან თამაში! შენი კოდი ინახება როგორც პროექტი, რომელსაც ნებისმიერ დროს შეგიძლია დაუბრუნდე.
      Ninjacat Demo B (copy 1)_instruction: "\r\nLet’s begin by exploring a simple\nvideogame, and then figuring out how it works. You can use the arrow keys\nto move the ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\r\n\r\n\r\n\r\n  \r\n\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: |
        Try this puzzle that uses conditionals and
        loops together. Use the "if" block to decide when to turn. Hint: you only
        need one more block to complete this puzzle. 
      PDK5 Events 1_instruction: |
        So far all of the programs we've written are executed
        in order from top to bottom. In this puzzle, we'll use "Events" to respond
        to an action on demand. Make the octopus say "Hello" only when you click
        on the Octopus. 
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: 'ფუნქციები ახალი ბლოკების განსაზღვრის საშუალებას გაძლევთ! კვადრატის დამხატავი ბლოკები გადავიტანეთ ფუნქციაში "დახატე კვადრატი". შეგიძლიათ გამოიყენოთ "დახატე კვადრატი" სათვალეების შესაქმნელად? კვადრატები 75 პიქსელითაა დაშორებული.'
      PDK5 Loops 1_instruction: |
        Instead of using 5 "move forward" blocks, use
        the "repeat" block with a "move forward" block inside of it. In computer
        science, this is called a "loop." 
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        from going either direction? Try using the AND block to program the function
        on-screen? to check if Sam is safe-left? AND safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: 'რკო! რკო! რკო! გამოიყენე "if" ბლოკი რომ მიმიყვანო იქ ბლოკების უმცირესი რაოდენობის გამოყენებით.'
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: 'გავაკეთოთ კიდევ ერთხელ - ეს დავალება თითქმის იგივეა, მაგრამ უნდა უფრთხილდე კედელს!'
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: 'ბლოკი "if/else" ამოწმებს პირობას და შემდეგ ასრულებს ერთ ან მეორე ქმედებას. გამოიყენე ეს ახალი ბლოკი და მიმიყვანე რკომდე.'
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: 'კიდევ ერთი ამოცანა "if/else" ბლოკის გამოყენებაზე. შეძლებ პირველივე ცდაზე სწორად გააკეთო?'
      scrat 20_instruction: შეგიძლია დაამატო 3 ბლოკი რომ დამეხმარო უფრო რთული ლაბირინთიდან გამოსვლაში? თუ სწორად გააკეთებ, ნებისმიერ მრუდ გზაზე ვიმოძრავებ, მიუხედავად სიგრძისა. ჩქარა! ყინული დნება!
      SpecialFrozenLevel_instruction: შენ ოფიციალურად გახდი ოსტატი მხატვარი! შექმენი ზამთრის საოცრებათა სამყარო.
      Standalone_Artist_1_instruction: კეთილი იყოს შენი მობრძანება მხატვარში! ჯერ ვცადოთ კვადრატის შექმნა მარჯვნივ მობრუნებისა და წინ გადაადგილების ბლოკებით. თითეული გვერდი უნდა იყოს 100 პიქსელი.
      Standalone_Artist_2_instruction: დახატე ეს ბრილიანტი 120 და 60 გრადუსი კუთხეებით და 150 პიქსელი სიგრძის გვერდებით.
      Standalone_Artist_3_instruction: შეგიძლია დახატო ეს ექვსკუთხედი 100 პიქსელიანი გვერდებითა და 60 გრადუსიანი მობრუნებებით?
      Standalone_Artist_4_instruction: ახლა ახალი ბლოკი გაქვს სათამაშოდ, ციკლი. ეს ბრძანებების სიას გაიმეორებს ბრძანებების. რა მოხდება თუ ამ ბრძანებებს ექვსჯერ გავატარებთ ციკლში?
      Standalone_Artist_5.5_instruction: 'დაუკვირდი როგორ გავამარტივეთ ბრილიანტის კოდი ციკლად გადაკეთებით. შეგიძლია მთელი მწკრივი 12-ჯერ გაატარო ციკლში და ყვავილი დაიხატება. მინიშნება: ყველა ბრილიანტი რომ ერთმანეთზე არ დაიხატოს, თითოეულის შემდეგ მოგიწევს 30 გრადუსით მობრუნება.'
      Standalone_Artist_5_instruction: რამდენჯერ უნდა გაატარო ეს ბრილიანტი ციკლში რომ ყვავილი დახატო?
      Standalone_Artist_6_instruction: 'გაატარე ეს ექვსკუთხედი ციკლში ექვსჯერ რომ შექმნა დიზაინი. რამდენი გრადუსით მოგიწევს მობრუნება ყოველ ჯერზე? მინიშნება: გაყავი წრის გრადუსების რაოდენობა იმ რაოდენობაზე, რამდენჯერაც აპირებ ციკლის გაშვებას.'
      Standalone_Artist_7_instruction: 'ფუნქცია პროგრამირების კიდევ ერთი ინსტრუმენტია, რომელიც გეხმარება რაღაცების ხშირად გამეორებას თავი აარიდო. ეს ფუნქცია ყვავილს ხატავს, ასე რომ, შეგიძლია გამოიყენო როცა ყვავილის დახატვა მოგინდება. გამოიყენე ეს და ახალი ახტომის ბლოკი რომ დახატო ყვავილები: მინიშნება: ყვავილები 150 პიქსელითაა დაშორებული'
      Standalone_Artist_8_instruction: 'ეს არის ფუნქცია სახელად "დახატე ფიგურა" რომელიც დაპროგრამებულია ექვსკუთხედების დასახატად. გაუშვი კოდი რომ ნახო რას აკეთებს და იექსპერიმენტე ფუნქციით რომ ნახო რა მოხდება. შეგიძლია ამ ფუნქციას კვადრატების, სამკუთხედების ან რვაკუთხედებისგან რამე დაახატვინო?'
      Standalone_Artist_9_instruction: ახლა შექმენი როგორი სურათიც მოგესურვება! ცარიელი ფუნქცია გაქვს, რომელსაც შეგიძლია გააკეთებინო რაც მოგესურვება!
      Standalone_Artist_v2_instruction: კეთილი იყოს შენი მობრძანება მხატვარში! ჯერ ვცადოთ კვადრატის შექმნა მარჯვნივ მობრუნებისა და წინ გადაადგილების ბლოკებით. თითეული გვერდი უნდა იყოს 100 პიქსელი.
      Test Play Lab_instruction: This is a test play lab level.
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L4 NetSim SendAB_instruction: |
        Develop, document, and test a protocol that
        allows you to use Internet Simulator to relay a message. See the worksheet
        for more detailed instructions.  
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor Reliably Sending a Message.\r\n\r\nConstraints:\r\n- Packets may contain\nonly 6 characters\r\n- Packets may drop with small probability\r\n- Packets\nmay not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship moves. For setup, join a Room with your group, and add ships to\nyour paper board for each opponent. When playing, all communication must be\ndone through the tool, so no talking, but have fun!\r\n"
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter with the others in your group. Important note: The router will only\nproperly route messages where the first 4 bits are the To: address and the\nsecond 4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na router with the others in your group. The Internet Simulator now provides\na place for you to put the To and From addresses, so you don't have to type\nout the bits manually.\r\n\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U313 Two Buttons with Ids_instruction: |
        Now you try it! We've given you some
        starting code with two buttons and two event handlers on the screen, but we've
        just left the default Ids of "id".  You need to change the ids to connect
        the right event handler to the right button. (Interestingly, the incorrect
        program does work, but exhibits some bizarre behavior.  We'll discuss this
        more in the next lesson.  Make the buttons work correctly for now).
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Write the turnAround() function
        and use it to make the turtle move as depicted.
      U3L03 define turnRight and draw a rectangle_instruction: |
        Create a turnRight()
        function and draw a rectangle twice as tall as it is wide by having the turtle
        navigate clockwise to draw the rectangle. 
      U3L03 Draw a T using turnAround_instruction: |
        The turnAround function is now
        provided for you in the code.  Use the turnAround() function to draw a T as
        depicted.
      U3L03 draw diamond_instruction: "Use any and all of the functions you wrote\npreviously to make a 'diamond' shape as shown in the image.\r\n\r\nNOTE:\nthis is another tricky one.  The 4 sides of the diamond are made by drawing\nthree steps with other movement made between calls.  HINT: you might want\nto make another function that handles drawing one side of the diamond. "
      U3L03 Three Steps_instruction: |
        Draw 3 "steps" moving up and to the right.  Notice
        the pattern in the movement. You should define a function called drawStep()
        which draws one of the steps, and then call it 3 times to achieve the effect.
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 Challenge 1 triangle_instruction: |
        Check out the extended Turtle palette
        now made available to you. These new commands accept parameters, allowing
        you to specify precisely how the function operates rather than only being
        able to move or turn a predetermined amount. Make use of these functions to
        draw the triangle as shown.
      U3L06 Challenge 2 purple square_instruction: |
        This time we're going to learn
        a little bit about changing the turtle's pen. Read through the documentation
        for penWidth() and penColor(), and then draw the purple square as shown.
      U3L06 Challenge 3 fill pink_instruction: |
        Now let's try to fill in the entire
        background of the screen. To make it a little easier for you, we can tell
        you the color we chose is one of the 140 named colors.  If you don't know
        what the named colors are, take a closer look at the documentation for penColor()
        again. Hint: you need to use dot().
      U3L06 Challenge 4 bullseye_instruction: |
        Let's try this out one more time.
        This time the colors are NOT named colors - you need to use the hex-color
        number to set the color.  So that you're not randomly guessing, we'll give
        you a hint -- each of the colors shown in the target image is one of these
        one of the five in the following list:  #00ABDC, #CC4400, #1188CC, #006699,
        #11CC00  You might be able to guess correctly if you apply what you know about
        RGB colors.
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: |
        Next we're going to be adding some
        curves to our drawing. Read the documentation for the "arc" commands and
        then draw the squiggles as shown. To make things easier here's a hint: all
        the parameters are multiples of 10, and the colors are from the following
        list of named colors: PowderBlue, lightBlue, Indigo, Purple, Magenta.
      U3L06 Challenge 7 smiley face_instruction: |
        To make this smiley face you'll
        need to look at the documentation for the move() command and then use it with
        the others you've learned.  You can make reasonable guesses about the colors.
      U3L06 Challenge 8 make your own_instruction: |
        Use the tools you've learned
        today to create a drawing of your own creation. If you have time, challenge
        your friends to see if they can duplicate your image.  We'll show you the
        drawing we made for ourselves.  You can try to duplicate that if you want
        to, otherwise, have fun making your own!
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play!  Use what you learned
        from loops and random to make your own little scene.  Have fun.
      U3L07 - Starry Night Starter Code_instruction: |
        You are going to use loops
        and random numbers to generate an image of starry night sky similar to one
        shown here.  We have given you some starter code to generate the ground and
        sky (just two giant dots), you will add code to this project to make the stars,
        grass, and moon.  All of the effects are clever applications of turtle dots,
        lines, and colors.  To get started, follow the series of steps suggested in
        the accompanying worksheet. 
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof syntax error.  App Lab did not understand which object it should be listening\nto for a \"click\" event so it showed an error message in the console to let\nyou know.  Another kind of error is a logical error - the program is valid,\nbut it's not doing what you want it to do.\r\n\r\nThis program has 2 errors.\nA (tricky) syntax error and logical error.  Find them, fix them, and make\nthe program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        This program has problem!  Can you figure
        it out?  Run the program and see if you can figure out from the error messages
        in the console what the issue is.  There is not much code, so you might be
        able to figure it out just by reading carefully.  Make a change that will
        make the program work as expected.
      U3L13 - Turtle Driver Project_instruction: |
        Challenge: Create a “turtle driver”
        with at least three buttons on the screen to move the turtle forward, and
        turn the turtle right and left. You can copy/paste code from a previous level
        if you like but it will help build your coding muscles if you create this
        small program from scratch.  If you have time, try adding additional buttons!  You
        can also have fun changing the parameters on the turtle functions, using colors,
        etc.
      U3L13 - Turtle move with button_instruction: |
        Drag a button out onto the screen
        and set its text to "Go forth!".  Add an event handler for the button, that
        makes the turtle move forward.  Run the program to make sure it works. 
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L16 - challenge say hi app_instruction: "In this challenge we give you starter\ncode that lays all the elements out on the screen.  Here’s what you need to\ndo:\r\nAdd event handler to textInput with the event type ‘input’ that shows\nthe “Say hi” button when that event occurs.\r\nAdd event handler to button\nso that on click, it writes a hello message to the screen and hides the textInput\nand button."
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: |
        Introducing objects other than
        buttons! - textLabels and images.  First try replacing your button with a
        textLabel.  Will the text respond to events just like the button?  Try connecting
        an event handler to it.  We've started you out with code similar to the result
        of the last level, you can copy your code from that level into here if you
        prefer. 
      U3L16 - images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer. 
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command!  Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        We'll be building upon some simple
        starting code throughout this lesson.  Your first task: use moveTo and randomNumber
        to get the turtle to move to a random location with each button click.  We've
        given you starting code for our common setup: a button that moves the turtle
        when clicked.  You should modify this code.  
      U3L16 - text labels_instruction: |
        Introducing textLabels.  First try replacing
        your button with a textLabel.  Will the text respond to events just like the
        button?  Try connecting an event handler to it.  We've started you out with
        code similar to the result of the last level, you can copy your code from
        that level into here if you prefer. 
      U3L16 - textInput getText write_instruction: |
        Introducing textInput, getText
        and write.  First run the starter code several times.  Try to change what's
        written to the screen when the button is clicked. Then use getText to write
        to the screen what the user entered in the text box.
      U3L16 - use images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer.
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        This example shows how you
        might insert console.log statements in your code to verify for yourself how
        the values in the variables change during the running of the code.  This is
        an important debugging technique to use when each line in your program doesn't
        have a visual effect on the app that you can see to verify things are working
        right.  Run the code to see the output in the console.
      U3L19 - DEMO up down count practice app_instruction: |
        This is a demonstration
        of a simple App that uses variables, arithmetic and setText.  Play with it
        a little bit here to see what it does.  You can also come back to experiment
        if you want.  You are going to try to create this app yourself on the next
        screen.  Don't worry, we'll start you out with some of the code and leave
        the rest for you to complete.
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof code from the previous screen.  Try changing the value assigned to foo\nto see the string change. \r\nDo this: \r\n1. Try changing the value assigned\nto foo to see the string change. \r\n2. By only modifying the lines of code\nthat were given to you, try to get the output to say: “The value of foo is:\n9.  And isn’t that fine.” \r\n"
      U3L19 - fix the var name syntax error_instruction: "We've given you some code\nwith an error.  It doesn’t recognize the variable.  Can you figure out why?  Fix\nthe error and get the program to run.  Also note the error message since it\nmight come up at some point later in your life.\r\n\r\n"
      U3L19 - practice with setText_instruction: |
        We've started you out with the
        code shown on the previous screen.  First experiment with the app.  Identify
        where setText is being used.  CHALLENGE: modify the code to also use setText
        to change the text on the button itself when it's clicked.  GIF: U3L19 -
        setTextOfButton.gif
      U3L19 - Target Clicker App_instruction: "# A motivating example\r\n\r\nHere\nis an example of the kind of app we want to make.  Study this for the elements\ncontained in the app rather than what it is or does.  Things to investigate:\n\r\n\r\n1. what happens when you click on the Code.org logo? \r\n2. What happens\nwhen you click somewhere else? \r\n3. Try the reset button.   \r\n\r\nThe\nelements contained in this app appear to be simple, and they are in some ways.\nHowever, the computing principles involved - controlling and keeping track\nof things in memory while the program is running - get into some deeper issues\nof programming and computer science in general.  There are some devilish details\nand paths that can lead to misunderstanding if you're not careful.\r\n\r\nSo,\nkeep this app in mind as you go through the different levels in this lesson.  It\nmight seem like you need to learn a lot in order to get this simple thing\nworking.  But it's worth taking the time to understand at a deeper level\nwhat is going on.  Because this one topic: controlling memory leads to many\npossible misunderstandings about coding, and how computers work.  We want\nto make sure you get it right from the outset.  \r\n\r\nSo take your time.  Work\nthrough the issues.  Read the explanations.  You'll come out on the other\nside a better programmer with much deeper knowledge and understanding of how\nthings work.  \r\n\r\nAre you ready?  Click 'finish' to move to the next\npage and start the lesson."
      U3L19 - test reassignment of two vars_instruction: |
        Why is this happening?
        The code given here is the same as the example from the previous page where
        we asked you to make a prediction about what will happen.  Run this code to
        find out if you were right.  If you weren't, that's okay.  You might experiment  a
        little if you want to, but bon't spend too much time here. We'll explain
        more on the next page.
      U3L19 - three basic ops of variables_instruction: "Do this:\r\nWe've given\nyou the three lines of code shown in the previous page.  Add three lines of\ncode just below the ones shown here to make your own variable, assign it a\nvalue and write it to the screen.  NOTE: change the variable name from the\ndefault x to something else.\r\n"
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).  Run\nthe program and you should see the output show up in the console area below\nthe workspace.  Then try adding a few more console.log statements.  Display\nsome text.  Make another variable and display that.  \r\nThe app screen will\nbe blank -- that's the point.  With console.log you can test output behind\nthe scenes in a way the user cannot see.  \r\n\r\n\r\nGIF: U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        This app is only SLIGHTLY
        different from the previous one, but much more dynamic.  See if you can figure
        out how and why the count is going up.  Once you've figured it out then you
        should be able to DO THIS: add a button to the app that when clicked makes
        the count go down, and updates the label.  When you're done the app should
        work as shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        We've given you
        the code from the previous page.  Right now, because the code only sets the
        values of variables, the app doesn't display anything. DO THIS: insert write
        or console.log statements into the code to figure out what the values of a,
        b, and c are after the code has executed.  You should have first made a prediction
        to see if your mental model of how the computer works is correct.  We'll
        ask for the answer on the next page.
      U3L19 - variable scope problem 2_instruction: |
        First run the program to see
        the problem.  You don't need to write code to solve any problem here.  But
        you do need to investigate the code and come up with an explanation for WHY
        what's happening is happening.  Why aren't 3 things being written to the
        screen?  Why does the variable foo seem to exist once but not the other times?  If
        you switch to code mode you'll see some warning messages next to two lines
        of code -- why do you get those messages?  Once you think you have a good
        answer, continue to the next page.
      U3L19 - variable scoping problem debugging_instruction: |
        Here is the code from
        previous page that has a subtle problem with it.  FIRST: run the app and try
        it to see the problem. NOTE: NaN stands for "Not a Number".   DO THIS: figure
        out what's happening, where, and fix the problem.  We'll explain the issue
        on the next page. 
      U3L19 - write var and string with same name_instruction: |
        Now look at this
        example. We’ve added another write statement.  Before you run the code, see
        if you can predict what the output will be.  Seriously, write it down. THEN
        run the code, mess with it if you like, and continue to the next page for
        an explanation.
      U3L2 Using Simple Commands_instruction: |
        Draw a square above and to the left
        of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Adjust the "if" block to make
        the bot respond "That's the color of the sky!" if the user inputs the color
        "blue".
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Update the assistant description, name, starter prompt, and default
        response to match this specialization.
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 Nested Conditionals 1_instruction: |
        Replace all instances of `str.indexOf("word")`
        with a function `contains(sentence, word)` that returns true if the word is
        in the sentence and returns false otherwise.
      U3L24 Nested Conditionals 2_instruction: |
        Use a nested conditional to respond
        to the category "pizza" and the details "Hawaiian," "vegan," and "meat."
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: "Fill in the function, findBeginNder()\nto get the strings \"begin\" and \"nder\" from a sentence no matter where\nin the sentence they exist.\r\nPrint the strings and their index to the console.\n"
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Inside the findingNemo function, write a conditional
        statement that detects if a command contains all the phrases "2000" "animated"
        and "G-rated." The function should return true if the above conditions are
        met and return false otherwise
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: |
        Write a conditional statement that detects
        if a command does not contain the phrase "bad." If "bad" is not detected,
        make Movie Bot respond normally. Otherwise, make Movie Bot respond "Sorry,
        I don't know about bad movies." 
      U3L26 OR operator_instruction: |
        Inside the isBest function, write a conditional
        statement that detects if a command contains at least one of the phrases "all
        time" "all-time" "overall" or "millennium." The function should return
        true if the above conditions are met and return false otherwise
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square ABOVE and to the RIGHT
        of the starting location. (Click to show full instructions)
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
