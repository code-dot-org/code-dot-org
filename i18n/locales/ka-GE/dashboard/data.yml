ka:
  data:
    script:
      name:
        20-hour:
          desc: K-8 Intro to Computer Science Course
          Unplug1: ეტაპი 1
          Maze: ეტაპი 2
          Unplug2: ეტაპი 3
          Unplug3: ეტაპი 4
          Artist: ეტაპი 5
          Unplug4: ეტაპი 6
          Artist2: ეტაპი 7
          Unplug5: ეტაპი 8
          Farmer: ეტაპი 9
          Unplug6: ეტაპი 10
          Artist3: ეტაპი 11
          Unplug7: ეტაპი 12
          Farmer2: ეტაპი 13
          Unplug8: ეტაპი 14
          Artist4: ეტაპი 15
          Unplug9: ეტაპი 16
          Farmer3: ეტაპი 17
          Unplug10: ეტაპი 18
          Artist5: ეტაპი 19
          Unplug11: ეტაპი 20
        Hour of Code:
          desc: კოდის ერთი საათი
          Maze: ეტაპი 1
        Edit Code:
          desc: კოდის რედაქტირება (ბეტა)
          MazeEC: ეტაპი 1
        2014 Levels:
          desc: Bounce (beta)
          Bounce: ეტაპი 1
        Builder Levels:
          desc: მომხმარებლების მიერ შექმნილი თავსატეხები (საცდელი)
          Custom: ეტაპი 1
        Flappy Levels:
          desc: Flappy Bird
          Flappy: ეტაპი 1
        Jigsaw Levels:
          desc: ფაზლი (ბეტა)
          Jigsaw: ეტაპი 1
        Step Levels:
          desc: ლაბირინთი (ბეტა)
          MazeStep: ეტაპის ნაბიჯი
        edit-code:
          desc: კოდის რედაქტირება (ბეტა)
          MazeEC: ეტაპი 1
          Applab: ეტაპი 2
          ArtistEC: ეტაპი 3
          StudioEC: ეტაპი 4
        events:
          desc: Bounce (beta)
          Bounce: ეტაპი 1
          Studio: ეტაპი 2
        builder:
          desc: მომხმარებლების მიერ შექმნილი თავსატეხები (საცდელი)
          Custom: ეტაპი 1
        flappy:
          desc: Flappy Bird
          Flappy: ეტაპი 1
        jigsaw:
          desc: ფაზლი (ბეტა)
          Jigsaw: ეტაპი 1
        step:
          desc: ლაბირინთი (ბეტა)
          MazeStep: ეტაპის ნაბიჯი
        wordsearch:
          desc: Spelling Bee (საცდელი)
          WordSearch: ეტაპი 1
    game:
      name:
        Unplug1: ინფორმატიკის შესავალი
        Maze: ლაბირინთი
        Multi: 'ვარიანტის არჩევა: სხვადასხვა'
        Unplug2: გამოთვლითი აზროვნება
        Unplug3: გრაფიკული პროგრამირება
        Artist: მხატვარი
        Unplug4: ალგორითმები
        Artist2: მხატვარი 2
        Unplug5: ფუნქციები
        Farmer: ფერმერი
        Unplug6: Conditionals
        Artist3: მხატვარი 3
        Unplug7: სიმღერის დაწერა
        Farmer2: ფერმერი 2
        Unplug8: აბსტრაქცია
        Artist4: მხატვარი 4
        Unplug9: პროგრამირება ცვლაში
        Farmer3: ფერმერი 3
        Unplug10: ინტერნეტი
        Artist5: მხატვარი 5
        Unplug11: შედეგები
        MazeEC: ლაბირინთი
        Bounce: ხტუნვა
        Flappy: Flappy Bird
        Jigsaw: ფაზლი
        MazeStep: ლაბირინთი ნაბიჯ-ნაბიჯ
        Wordsearch: ძებნა სიტვის მიხედვით
        Webapp: აპლიკაციების ლაბორატორია
        ArtistEC: მხატვარი
        TextMatch: ტექსტების შედარება
        StudioEC: Play Lab
        Applab: აპლიკაციების ლაბორატორია
        NetSim: ინტერნეტ-სიმულატორი
    trophy:
      name:
        Bronze: ბრნჯაო
        Silver: ვერცხლი
        Gold: ოქრო
    concept:
      description:
        sequence: თანმიმდევრობა
        if: '"თუ" ბლოკი'
        if_else: '"თუ/სხვაგვარად" ბლოკი'
        loop_times: 'ბლოკი "გამეორება"'
        loop_until: 'ბლოკი "გამეორება, მანამ"'
        loop_while: '"სანამ" ბლოკი'
        loop_for: 'ბლოკი "დათვლა"'
        function: ფუნქციები
        parameters: ფუნქციები პარამეტრებით
    level:
      instructions:
        maze_2_2: 'შეგიძლია დამეხმარარო ამ აუტანელი გოჭის დაჭერაში? დადგი ერთად რამდენიმე ბლოკი "მოძრაობა წინ" და დააჭირე "გაშვებას". '
        maze_2_1: ეს გოჭი ძალიან მიშლის ნერვებს. მაპოვნინე!
        maze_2_2_5: მონიშნე ტრაექტორია და მიმიყვანე გოჭამდე. უფრთხილი ასაფეთქებელს!
        maze_2_3: მიმიყვანე მწვანე ურჩხულამდე! (უფრთხილდი ასაფეთქებელს)
        maze_2_4: დამშვიდდი და მაპოვნინე ეს ტუტუცი გოჭი. თორემ გავბრაზდები!
        maze_2_5: იცი, ამ გოჭამდე მისვლა მხოლოდ ორი ბლოკის გამოყენებითაც შემიძლია. აბა, თუ მიხვდები, როგორ?
        maze_2_6: მიმიყვანე მწავანე ბოროტმოქმედამდე მხოლოდ სამი ბლოკის გამოყენებით.
        maze_2_7: 'დამეხმარე ამ გოჭის მოშორებაში ბლოკების უმცირესი რაოდენობის გამოყენებით. გამოიყენე ერთზე მეტი ბლოკი "გამეორება".'
        maze_2_8: 'როცა ბლოკი ნაცრისფერია, მისი წაშლა შეუძლებელია. ამოხსენით ეს თავსატეხი "გამეორების" ბლოკის დახმარებით, რომელიც ყველაფერს 3-ჯერ იმეორებს. სცადეთ "გამეორების" ნაცრისფერ ბლოკში ამ სამი ბლოკის ჩასმა: მოძრაობა, მოძრაობა, მობრუნება.'
        maze_2_9: 'კარგი, ახლა სცადეთ ახალი ბლოკი "გაიმეორე, მანამ" - ის გაიმეორებს ქმედებას, სანამ ამ გამაღიზიანებელ გოჭამდე არ მივაღწევ.'
        maze_2_10: მშვენიერია, ერთიც გავაკეთოთ. შეგიძლიათ ამის ამოხსნა მხოლოდ 4 ბლოკის გამოყენებით?
        maze_2_11: ძვირფასო ადამიანო. მე ზომბი. მე მშია. უნდა.. მივაღწიო.. მზესუმზირამდე. შეგიძლია მიმიყვანო იქ, მხოლოდ 5 ბლოკის გამოყენებით?
        maze_2_12: კარგი, ეს იგივენაირია, მცირე სხვაობით. შეგიძლია ამის გაკეთება მხოლოდ 5 ბლოკით?
        maze_2_13: 'გამოიყენეთ ახალი "თუ" ბლოკი და დამეხმარეთ, გადავწყვიტო, როდის შევტრიალდე. მინიშნება: მხოლოდ ერთით მეტი ბლოკი გჭირდება. ნახე, ჩვენ როგორ ვაკეთებთ და შემდეგ დამოუკიდებლადაც გააკეთებ.'
        maze_2_14: 'ესეც ჰგავს წინა თავსატეხს, მთავარია გახსოვდეს, როგორ გამოიყენე ბლოკები "თუ" და "გამეორება" ერთად.'
        maze_2_15: 'მე მინდა მზესუმზირა! გამოიყენე ბლოკი "თუ" და მიმიყვანე მზესუმზირამდე ბლოკების მინიმალური რაოდენობით.'
        maze_2_16: 'გავაკეთოთ კიდევ ერთხელ - ეს დავალება თითქმის იგივეა, მაგრამ უნდა უფრთხილდე მკბენარებს!'
        maze_2_17: 'ბლოკი "თუ/სხვაგვარად" ამოწმებს პირობას და შემდეგ ასრულებს ერთ ან მეორე ქმედებას. გამოიყენე ეს ახალი ბლოკი და მიმიყვანე მზესუმზირამდე.'
        maze_2_18: 'კიდევ ერთი ამოცანა "თუ/სხვაგვარად" ბლოკის გამოყენებაზე. შეძლებ პირველივე ცდაზე სწორად გააკეთო?'
        maze_2_19: შეგიძლია, უფრო რთული ლაბირინთში მხოლოდ სამი ბლოკის დამატებით გამატარო? თუ სწორად გააკეთებ, მე შევძლებ გავიარო ნებისმიერი გზა, სიგრძის მიუხედავად.
        turtle_1_1: ჰეი, მე ვარ მხატვარი. კოდის გამოყენებით თითქმის ყველაფერი შეგიძლია დამახატინო. გამავლებინე ფუნჯი ნაცრისფერ ხაზებზე რამდენიმე ბლოკის გამოყენებით.
        turtle_1_2: 'ახლა დავხატოთ კვადრატი. მინიშნება: შენი საყვარელი ფერის გამოსაყენებლად, აირჩიე ის ახალ ბლოკში "ფერის არჩევა".'
        turtle_1_3: დახატე კვადრატი მხოლოდ 3 ბლოკის გამოყენებით.
        turtle_1_4: 'დახატე სამკუთხედი სხვადასხვა ფერის გვერდებით. ამისთვის გამოიყენე ბლოკი "შემთხვევითი ფერი", რომელიც ყოველ ჯერზე ახალ ფერს ირჩევს. მინიშნება: მოგიწევს შეარჩიო მობრუნების სიდიდე ბლოკისთვის "მობრუნება" (დააჭირე რიცხვს).'
        turtle_1_5: ახლა კი დახატე სამკუთხედი და მერე კვადრატი, ისე, რომ კონვერტი გამოგივიდეს.
        turtle_1_6: 'ხვდები, როგორ უნდა დახატო სამკუთხედი და კვადრატი? მინიშნება: ჯერ დახატე სამკუთხედი, შემდეგ კი გამოთვალე, როგორ უნდა მოატრიალო მხატვარი კვადრატის დასახატად.'
        turtle_1_7: 'ახლა ცოტა გავართულოთ - სცადე ამ მწვანე სათვალის დახატვა. კვადრატები ზომაში 100 პიქსელისაა და დაშორებულია ერთმანეთს 50 პიქსელით. არ დაგავიწყდეს - მწვანე!'
        turtle_1_8: 'სცადე მიხვდე, რა მოხდება, თუ ამ კოდს გაუშვებ (ან დააჭირე ღილაკს "გაშვება" და ნახე). შემდეგ გაუშვი იმდენჯერ, რამდენიც საჭიროა ნახატის დასასრულებლად. ფერები ყოველ ჯერზე სხვადასხვა იქნება.'
        turtle_1_9: შეგიძლია მიხვდე, რა რიცხვით უნდა შეცვალო კითხვის ნიშანი წრის დასახატად?
        turtle_1_10: 'გამოგივიდა! ახლა დახატე რაც გინდა. რამდენიმე სახალისო იდეა: ფიგურა, ფიფქი, სპირალი. ასევე სცადე ახალი ბლოკი "განის განსაზღვრა". გაერთე!'
        turtle_4_1: 'შეგიძლია დახატო სამკუთხედი (თითო გვერდი 100 პიქსელის ზომის) მხოლოდ სამი ბლოკით? მინიშნება: გამოიყენე ბლოკი "გამეორება".'
        turtle_4_2: 'ამ სამკუთხედების დასახატად სადმე შუა პროგრამაში დაამატე ბლოკი "90 გრადუსით შეტრიალება".'
        turtle_4_3: 'აი, ესაა კოდი, რომლითაც ერთი სამკუთხედი დახატე. შეძლებ, "გამეორება" და "მოტრიალება" ბლოკების გამოყენებით დახატო ყვავილი?'
        turtle_4_4: 'აი, იგივე კოდი წინა თავსატეხიდან, მაგრამ ყოველი სამკუთხედის შემდეგ მოტრიალება მხოლოდ 36 გრადუსი არის. რამდენჯერ უნდა გამეორდეს მოტრიალება? (მინიშნება: წრე შეიკვრება 360 გრადუსიანი მოტრიალების შემდეგ)'
        turtle_4_5: 'აი, იგივე კოდი წინა თავსატეხიდან, მაგრამ მოტრიალება 36-ჯერ მეორდება. რამხელა უნდა იყოს თითო მოტრიალება? (მინიშნება: წრე შეიკვრება 360 გრადუსიანი მოტრიალების შემდეგ)'
        turtle_4_6: შეგიძლია დახატო კვადრატი გვერდით 20 პიქსელი მხოლოდ 3 ბლოკის გამოყენებით?
        turtle_4_7: 'აი, კოდი კვადრატის დასახატად წინა თავსატეხიდან. შეგიძლია მისი გამეორება 10-ჯერ ისე, რომ გამოვიდეს კიბე? მინიშნება: მხოლოდ ორი დამატებითი ბლოკი გჭირდება.'
        turtle_4_8: აი, წინა თავსატეხის ამოხსნა. შეგიძლია დაასრულო ნახატი მხოლოდ 2 ბლოკის დამატებით?
        turtle_4_9: აი, წინა თავსატეხის ამონახსნი. რამდენი გრადუსით უნდა მოაბრუნო ნახატის დასასრულებლად? (ალბათ, რამდენჯერმე მოგიწევს ამოცნობა)
        turtle_4_10: აი, წინა თავსატეხის ამონახსნი. რამდენჯერ უნდა მოაბრუნო ნახატი მის დასასრულებლად?
        turtle_4_11: 'შეცვალე რიცხვები ბლოკებში "მოტრიალება" და "გამეორება" და შექმენით სხვადასხვა ნახატები. ან შეცვალე კოდის სხვა ნაწილებით და დახატე, რაც გინდა.'
        maze_karel_1_1: 'ჰეი, მე ვარ ფერმერი. დათესვის დროა და შენი დახმარება მჭირდება მდელოს გასასწორებლად. გადამაადგილე ნაგვის გროვასთან და მომაშორებინე ის "მოშორების" ბლოკით.'
        maze_karel_1_2: 'შემდეგ მიმიყვანე ორმოსთან და შემავსებინე ორი ნიჩბით. ამისთვის გამოიყენე ბლოკი "შევსება".'
        maze_karel_1_3: გადამიყვანე მიწის გროვასთან და მითხარი, რამდენი ნიჩაბი მიწა მოვაშორო ბლოკების მინიმალური რაოდენობის გამოყენებით.
        maze_karel_1_4: 'შეგიძლია, ნაგვის ოთხივე გროვა მომაშორებინო? მინიშნება: თუ შეძლებ, გამოიყენე გამეორების ბლოკი.'
        maze_karel_1_5: 'შემავსებინე ყველა ეს ორმო მიწის ხუთი ნიჩბით. მინიშნება: "სანამ" ბლოკში შეგიძლია ჩასვა ბლოკი "გამეორება".'
        maze_karel_1_6: 'მოაშორე ნაგვის ყველა გროვა ბლოკების მინიმალური რაოდენობის გამოყენებით. ახალი ვარიანტები "სანამ" ბლოკის ჩამოსაშლელ მენიუში მაცნობებს,  გროვასთან ვარ თუ ორმოსთან.'
        maze_karel_1_7: ნახეთ, როგორი ღრმა ორმო ვიპოვე! არც კი ვიცი, რამდენი ნიჩაბი მიწა უნდა ჩავყარო, რომ ამოვავსო. შეგიძლია დაწერო პროგრამა, რომელიც ჩაყრის მიწას, სანამ ორმო არ გასწორდება?
        maze_karel_1_8: შემავსებინე ორმო მდელოს ბოლოს ბლოკების მინიმალური რაოდენობის გამოყენებით.
        maze_karel_1_9: 'მომაშორებინე ნაგვის ყველა გროვა. სცადე ბლოკების მინიმალური რაოდენობის გამოყეენბა. მინიშნება: გამოიყენე ბლოკი "სანამ".'
        maze_karel_1_10: 'გვიანომადე ვმუშაობ, ახლა უკვე დაბნელდა და ვერ ვხედავ, რამხელაა გროვები. ახლა ვერ ვიყინებ "სანამ" ბლოკის ყველა ფუქნციას. გამატარე მდელოზე და თუ სადმე გროვა შეგვხვდა, მომაშორებინე.'
        maze_karel_1_11: 'გარეთ ისევ ბნელა. გამატარე ამ მდელოზე. თუ სადმე გროვა იპოვე, მომაშორებინე და თუ ორმო - შემავსებინე. მინიშნება: გამოიყენე "თუ" ბლოკის ჩამოსაშლელი მენიუ.'
        turtle_2_1: 'ჰეი. მე ვარ ზომბი-მხატვარი. მე მიყვარს ხატვა! დამახატინე კვადრატი განსაკუთრებულ ფერში. მნიშველოვანია: ბლოკები ახლა კატეგორიებადაა დაყოფილი.'
        turtle_2_2: 'უკვე შეგიძლია გამოიყენო ფუნქციები, რომლებიც ახალი ბლოკების განსაზღვრაში დაგეხმარება. სცადე ახალი ბლოკი "კვადრატის დახატვა", რომელიც განლაგებულია კატეგორიაში "ფუნქციები" და დახატე მწვანე კვადრატი გვერდით 50.'
        turtle_2_3: 'გამოიყენე ბლოკი "გამეორება" (კატეგორია: ციკლები) და დახატე სამი კვადრატი გვერდით 100, 120 გრადუსიანი დაშორებით. გამოიყენე სამი სხვადასხვა შემთხვევითი ფერი.'
        turtle_2_4: 'ახლა კი გავერთოთ. შეცვალე კოდი: დახატე 36 კვადრატი გვერდთ 100 პიქსელი და დაშორებით 10 გრადუსი. მინიშნება: თუ ჩამოსქროლავ, უფრო სწრაფად ვიმოძრავებ.'
        turtle_2_5: 'დახატე კვადრატები გვერდებით 50, 60, 70, 80 და 90 პიქსელი. შენ მოგიწევს გამოიყენო ფუნქცია "დახატე კვადრატი" ხუთჯერ.'
        turtle_2_6: 'ამ პროგრამაში იგივე კვადრატების დასახატად გამოვიყენებთ მთვლელს. ზომა მთვლელმა უნდა განსაზღვროს, ამიტომ გამოიყენე ბლოკი "მთვლელი". მინიშნება: ეს ბლოკი არის კატეგორიაში "ცვლადები".'
        turtle_2_7: 'ეს პროგრამა დაგახატინებს სპირალს, მაგრამ ბლოკები გათიშულია და არ გაეშვება.  გამოიყენე ბლოკები "დათვლა ცვლადით" (კარეგორია  "ციკლები") და "მთვლელი" (კატეგორია "ცვლადები") და დახატე ზუსტად ასეთივე სპირალი.'
        turtle_2_7_5: 'ახალი ფუნქცია გვაქვს - "დახატე თოვლის კაცი" (კატეგორიაში "ფუნქციები"). დახატე ორი თვოლის კაცი, სიმაღლეებით 250 და 100.'
        turtle_2_8: 'ეს კი ცოტათი რთულია. გამოიყენე ფუნქცია "დახატე თოვლის კაცი" და ახალი ბლოკი "ნახტომი წინ" (კატეგორია "მოქმედებები"). დახატე 3 თოვლის კაცი, სხვადასხვა ფერის, დაშორებით 100 პიქსელი.'
        turtle_2_9: 'გამოიყენე ციკლი "დათვლა ცვლადით" და დახატე თოვლის კაცების ოჯახი, სიმაღლეებით 110, 100, 90, 80 და 70. დაშორება ყოველთვის 60 პიქსელი უნდა იყოს.'
        turtle_2_10: 'ამ კოდით სხვადასხვა სპირალების დახატვა შეიძლება. რა მოხდება, თუ შეცვლი მნიშვნელობას ბლოკში "მობრუნება"? ან ციკლში შემთხვევით ფერს მიუთითებ? დახატე, როგორც გინდა.'
        maze_karel_2_1: 'გამოიყენე ბლოკები და მომაშორებინე ყველა გროვა და შემავსებინე ყველა ორმო. ბევრი ბლოკის მაგივარად სცადე გამოიყენო ციკლები. მინიშნება: ციკლის შიგნით სხვა ციკლის ჩასმა შეგიძლია.'
        maze_karel_2_2: 'შევქმენით ახალი ბლოკი, რომელსაც ჰქვია "შეავსე 5" და მოვათავსეთ კატეგორიაში "ფუნქციები". გამოიყენე ის ამ ორმოს შესავსებად.'
        maze_karel_2_3: 'გამოიყენე ახალი ბლოკი "შეავსე 5" და ყველა ორმოს შევავსებს. ამ ბლოკის არჩევა "ფუნქციების" კატეგორიიდან შეგიძლია.'
        maze_karel_2_4: განსაზღვრე ახალი ფუნქცია, რომელიც ერთდროულად 7 პორციას მოაშორებს. შემდეგ დაწერე პროგრამა, რომელიც დამეხმარება ყველა გროვის მოშორებაში.
        maze_karel_2_5: შექმენი ახალი ფუნქცია, რომელიც გროვად ერთდროულად 6 პორციას მოაშორებს და გამათანაბრებინე გროვები.
        maze_karel_2_6: 'ახალი ფუნქცების გამოყენებით ("შეავსე 8" და "მოაშორე 8") დამეხმარე, მოვაშორო ყველა გროვა და შევავსო ყველა ორმო.'
        maze_karel_2_7: ჩემს მდელოზე ძროხაა! დაწერე ახალი ფუქნცია, რომელიც ამარიდებს ძროხას და მომაშორებინებს გროვას. ჩასვი ყველა საჭირო ბლოკი ახალ ფუნქციაში.
        maze_karel_2_8: 'გამოიყენე ეს ახალი ფუქნცია "ძროხის არიდება და 1 მოშორება" და მომოშორებინე ყველა გროვა.'
        maze_karel_2_9: ნახე, ესაა ფუნქცია, რომელიც მოგაშორებინებს 4 სხვადასხვა გროვას ვერტიკალურ მწრკივში. ჩასვი ეს ფუნქცია ციკლში და მოაშორე ყველა გროვა რმადენიმე ახალი ბლოკის გამოყენებით.
        maze_karel_2_10: გამატარე მდელოზე და გამოიყენე ეს ორი ფუნქცია იმისთვის, რომ მომაშრებინო ყველა გროვა და შემავსებინო ყველა ორმო.
        turtle_3_1: 'ეს თავსატეხი გაჩვენებს, როგორაა განსაზღვრული ფუნქციები "დახატე კვადრატი" და "დახატე წრე". მხოლოდ ფუნქცია არ არის საკმარისი პროგრამის გასაშვებად. კვადრატის გასაშვებად უნდა გამოიყენო ბლოკი "დახატე კვადრატი".'
        turtle_3_2: 'გამოიყენე ფუნქცია "დახატე კვადრატი" მაგალითად და შექმენი ფუქნცია "დახატე სამკუთხედი". შემდეგ გამოიყენე ის.'
        turtle_3_3: 'კატების ირგვლივ სამკუთხედი ღობეები დახატე და ძროხის ირგვლივ - კვადრატული. რჩევა: შიგადაშიგ დატესტე პროგრამა.'
        turtle_3_4: 'სცადე გამოიცნო, როგორ უნდა გამოიყენო "დახატე კვადრატი" და "დახატე სამკუთხედი" (და ზოგი სხვა ბლოკიც) ლომის ირგვლივ სახლის დასახაზად.'
        turtle_3_5: 'ახლა შექმენი ახალი ფუნქცია "დახატე სახლი" და დაუხატე სახლი ამ ორ კატას. მინიშნება: ფუნქციის შესაქმნელად გამოიყენე ბლოკი "გააკეთე რამე" და მერე შეიყვანე ბლოკის სახელწოდებაში შენი ტექსტი.'
        turtle_3_6: 'გამოიყენე "დახატე კვადრატი", როგორც მაგალითი და დაუმატე ფუნქციას "დახატე სამკუთხედი" პარამეტრი "სიგრძე". მერე დახატე სხვადასხვა ზომის სამკუთხედები. (მინიშნება: პარამეტრის დასამატებლად დააჭირე ვარსკვლავს)'
        turtle_3_7: 'დაუმატე პარამეტრი "სიგრძე" "დახატე სახლს" და აუშენე სპილოს დიდი სახლი (გვერდის სიგრძე: 150 პიქსელი)'
        turtle_3_8: 'შეცვალე "დახატე სახლი" ისე, რომ ახალი სახლის დახატვა მარჯვენა ქვედა კუთხეში დავასრულო. შეცვლილი ფუნქციით დახატე სამი სახლი.'
        turtle_3_9: 'შეგიძლია დამოუკიდებლად აღადგინო ფუნქცია "დახატე სახლი"? სცადე და დახატე სახლების რიგი.'
        turtle_3_10: უკვე ბევრი ისწავლე! ახლა დახატე რაც გინდა, მაგალითად, ვარსკვლავი, სპირალი ან უჩვეულო ფიფქი.
        maze_karel_debug_seq_1: გადავდივართ პროგრამის გასწორებაზე! ჩემი კოდი არ მუშაობს სწორად. შეგიძლია იპოვო შეცდომა და გამოასწორო? ჩემი მდელო გასწორებული უნდა იყოს.
        maze_karel_debug_seq_2: რა შეცდომაა ამ პროგრმაში? რა უნდა შეასწორო, რომ შევძლო ამ გროვის მოშორება?
        maze_karel_debug_repeat: 'გამოასწორე ეს პროგრამა  - ჩემი მდელო სუფთა და მოსწორებული უნდა იყოს.'
        maze_karel_debug_while: როგორ უნდა შეცვალო ეს პროგრამა, რომ ორმოს შევსება შევძლო?
        maze_karel_debug_if: მიშველე! გაასწორე კოდი და გამასწორებინე მდელო.
        maze_karel_debug_if_else: შეასწორე შეცდომები, თორემ ორმოების შევსებას და გროვების მოშორებას ვერ ვახერხებ.
        maze_karel_debug_function_1: რა უნდა შეცვალო ამ პროგრმაში, რომ ყველა გროვის მოშორება შევძლო?
        maze_karel_debug_function_2: შეგიძლია გაასწორო ეს პროგრმა? ჩემი მდელოს მოსწორება მინდა.
        maze_karel_debug_function_3: 'შეასწორე ეს პრგორამა, ჩემს მდელოზე გორების მოშორება რომ შევძლო. '
        turtle_5_1: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება. ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_2: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება. ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_3: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება. ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_4: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება. ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_5: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება. ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        turtle_5_6: სცადე ამ პროგრამის გაშვება, ცვლილებების შეტანა და დაკვირვება. ხვდები, როგორ მუშაობს? (ან წაშალე და აბსოლუტურად სხვა რამით შეცვალე)
        maze_3_1: უნდა დავიჭირო ეს გოჭი! გამოიძახეთ გადაადგილება(); და დამაბრუნებინეთ ჩემი კვერცხები.
        maze_3_2: დამიწერე პროგრამა და დამაჭერინე გოჭი.
        maze_3_3: როგორ მივაღწიო გოჭამდე? ფრთხილად, ასაფეთქებელს არ შემაჯახო!
        maze_3_4: გრრ! დამიწერე პროგრამა ისე, რომ ასაფეთქებელს გვერდი ავუარო და გოჭამდე მივიდე.
        bounce_1: 'მიამაგრე ეს ბლოკი ბლოკს "როცა მარცხენა ისარი"  და გაუშვი. ამოძრავე პლატფორმა მარცხენა ისრით და მიდი მიზნამდე.'
        bounce_2: 'მიამაგრე ბლოკები ბლოკებს "როცა მარჯვენა ისარი" და "როცა მარცხენა ისარი". მიზნამდე მისაღწევად ამოძრავე პლატფორმა.'
        bounce_3: 'ახლა სცადე რამე მსგავსი ბლოკთან "როცა ზემოთა ისარი". ამოძრავე პლატფომა რომ ზემოთ მდებარე მიზანს მიაღწიო.'
        bounce_4: ახლა 4 ბლოკი უნდა დაამატო. თავსატეხის დასასრულებლად გადაიყვანე პლატფორმა ოთხივე მიზანთან.
        bounce_5: 'ჩვენ გამოვუშვებთ ბურთს, რომელიც პლატფორმაზე დავარდება. დაუმატე ბლოკი ბლოკს "როცა ბურთი მოხვდება პლატფორმას" ისე, რომ ბურთმა საბოლოო მიზანს მიაღწიოს.'
        bounce_6: 'ახლა საბოლოო მიზანი ზემოთაა. ამოცანის ამოსახსნელად ბლოკები უნდა მიამაგროთ ორივე "როცა ბურთი დაეცემა" ბლოკს.'
        bounce_7: 'მიამაგრეთ ბლოკები ორივე "როცა" ბლოკს. აისხლიტეთ ბურთი, სანამ ის მიზანს არ მოხვდება.'
        bounce_10: 'ახლა მიზანი ზემოთაა. მიამაგრეთ ბლოკები "ქულის დაგროვება" და "მოწინააღმდეგის მიერ ქულის დაგროვება" ბლოკებს "როცა ბურთი აღწევს მიზანს" და "როცა ბურთი ცდება მიზანს". ასე შეიქმნება თამაში. შემდეგ ნახეთ, რამდენ ქულას დააგროვებთ, სანამ თქვენი მოწინააღმდეგე დააგროვებს ორჯერ მეტს.'
        bounce_11: 'ახლა შეგიძლიათ ბლოკს "როცა გაშვებულია" მიუმაგროთ სხვა ბლოკები. ბლოკი "ახალი ბურთის გაშვება" რამდენიმე ადგილასაა მისამაგრებელი. ასევე, სცადეთ შეცვალოთ პლატფორმის ზომა ან სიჩქარე და ნახეთ, რამდენ ქულას დააგროვებთ, სანამ თქვენი მოწინააღმდეგე დააგროვებს ორჯერ მეტს.'
        bounce_12: 'შექმენით თქვენი საკუთარი Bounce თამაში. შეგიძლიათ ყველა წესისა და გამოსახულების შეცვლა. როცა მორჩებით, დააჭირეთ "დასრულებას" და ათამაშეთ თქვენი მეგობრები.'
        Custom_builder: დონეების შესაქმნელად გადაიტანეთ ბლოკები ინსტრუმენტების პანელიდან სამუშაო დაფაზე. როცა დაასრულებთ, გაუშვით.
        flappy_1: 'მიუმაგრეთ ბლოკი ბლოკს "დაჭერისას" და გაუშვით. შემდეგ დააჭირეთ შესაბამის ღილაკს ან ეკრანს და გადადგილეთ ფლაპი მიზნისკენ.'
        flappy_2: |-
          ახლა უკვე დავამატეთ მიწაც. მიუმაგრეთ ბლოკი ბლოკს "როცა დაეჯახება მიწას". კოდი უნდა 'ამთავრებდეს თამაშს', როცა ფლაპი შეეხება მიწას.
        flappy_3: 'თამაშის დაწყებისას თქვენი კოდი მუშაობს "როცა გაშვებულია" ბლოკის გამო. სცადეთ შეცვლოთ სიჩქარისა და აქნევების დონეები.'
        flappy_4: |-
          Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_5: |-
          Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
        flappy_6: See if you can still score a point after making Flappy flap either a smaller or larger amount.
        flappy_7: 'Next, try changing the scene by attaching another block to the "when run" block.'
        flappy_8: You can set visuals anytime, not just when the game starts. Try setting a RANDOM scene when other events happen, for example, when passing an obstacle.
        flappy_9: To mix things up, when hitting an obstacle, instead of ending the game try setting the score back to 0.
        flappy_11: "Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When you're done, click Finish to let friends try your game on their phones."
        flappy_k1_1: Play Flappy
        flappy_k1_2: 'მიუმაგრეთ ბლოკი ბლოკს "დაჭერისას" და გაუშვით. შემდეგ დააჭირეთ შესაბამის ღილაკს ან ეკრანს და გადადგილეთ ფლაპი მიზნისკენ.'
        flappy_k1_3: |-
          ახლა უკვე დავამატეთ მიწაც. მიუმაგრეთ ბლოკი ბლოკს "როცა დაეჯახება მიწას". კოდი უნდა 'ამთავრებდეს თამაშს', როცა ფლაპი შეეხება მიწას.
        flappy_k1_4: 'თამაშის დაწყებისას თქვენი კოდი მუშაობს "როცა გაშვებულია" ბლოკის გამო. სცადეთ შეცვლოთ სიჩქარისა და აქნევების დონეები.'
        flappy_k1_5: |-
          Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_k1_6: |-
          Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
        flappy_k1_7: See if you can score multiple points for making it past an obstacle
        flappy_k1_8: 'Next, try changing the scene by attaching another block to the "when run" block.'
        flappy_k1_9: 'Try changing the player by attaching a "set player" block to the "when run" block.'
        jigsaw_1: Click the block
        jigsaw_2: Drag the block to the target
        jigsaw_3: Arrange the blocks to form the image
        jigsaw_4: Arrange the blocks to form the image
        jigsaw_5: Arrange the blocks to form the image
        jigsaw_6: Arrange the blocks to form the image
        jigsaw_7: Arrange the blocks to form the image
        jigsaw_8: Arrange the blocks to form the image
        jigsaw_9: Arrange the blocks to form the image
        jigsaw_10: Arrange the blocks to form the image
        jigsaw_11: Arrange the blocks to form the image
        jigsaw_12: Arrange the blocks to form the image
        jigsaw_13: Fix the puzzle!
        mazestep_1: Maze step description here
        mazestep_2: Maze step description here
        mazestep_3: Maze step description here
        mazestep_4: Maze step description here
        mazestep_5: Maze step description here
        studio_c2_1: 'Can you make this dog say "hello world"?'
        studio_c2_2: Can you make the dog say something and then have the cat say something afterwards?
        studio_c2_3: Can you write a program to make this dog move to the cat?
        studio_c2_4: 'Can you write a program that makes the dog move to the cat, and have the cat say "hello" when the dog reaches him?'
        studio_c2_5: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_c2_6: Can you write a program to make Waddles move around using the up / down / left /right keys to hit all of the targets?
        studio_c2_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_c2_8: 'Can you have Waddles say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        studio_c2_9: Can you add a block to score a point when Waddles runs into the octopus, and then move him with the arrows until you score?
        studio_c2_10: Can you add blocks to change the background and the speed of Waddles, and then move him with the arrows until you score?
        studio_c2_11: "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        studio_c3_story_1: 'Can you make this dog say "hello world"?'
        studio_c3_story_2: Can you make the dog say something and then have the cat say something afterwards?
        studio_c3_story_3: Can you write a program to make this dog move to the cat?
        studio_c3_story_4: 'Can you write a program that makes the dog move to the cat, and have the cat say "hello" when the dog reaches him?'
        studio_c3_story_5: Can you add a block to make the octopus happy?
        studio_c3_story_6: "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        studio_c3_game_1: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_c3_game_2: Can you write a program to make Waddles move around using the up / down / left /right keys to hit all of the targets?
        studio_c3_game_3: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_c3_game_4: 'Can you have Waddles say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        studio_c3_game_5: Can you add a block to score a point when Waddles runs into the octopus, and then move him with the arrows until you score?
        studio_c3_game_6: Can you add blocks to change the background and the speed of Waddles, and then move him with the arrows until you score?
        studio_c3_game_7: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        studio_playlab_1: 'Waddles wants to say "hello" - can you help him?'
        studio_playlab_2: 'Cave Boy (actor 1) and Jasmine (actor 2) would like to say "hello" to each other. Can you help them by using the "say" block twice?'
        studio_playlab_3: Can you help Tennis Girl get to the flag?
        studio_playlab_4: Can you help Tennis Boy (actor 1) get to Tennis Girl (actor 2) and play a sound when he gets there?
        studio_playlab_5: 'Can you help the Spacebot say "greetings earthlings" when it is clicked? Don’t forget to click it after you click Run'
        studio_playlab_6: Can you help the Witch move around using the up/down/right/left arrow keys to get to all the magical fireballs?
        studio_playlab_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to it to help the wizard move right and left repeatedly?'
        studio_playlab_8: Can you add a block to score a point and a block to play a sound when the unicorn runs into the wizard, and then move him with the arrows until you score?
        studio_playlab_9: Set the background for this alien invasion and help the Spacebot get to the alien faster by changing its speed. Then move him with the arrow keys to get to the Spacebot and alert everyone else
        studio_playlab_10: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        studio_full_sandbox: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        studio_k1_1: 'Can you make this dog say "hello world"?'
        studio_k1_2: Can you make the dog say something and then have the cat say something afterwards?
        studio_k1_3: Can you write a program to make this dog move to the cat?
        studio_k1_4: 'Make the dog move to the cat and the cat say "hello" when he gets there.'
        studio_k1_5: Can you add a block to make the octopus happy?
        studio_k1_6: Create your own story! Move around the cat and dog, and make them say things.
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell the word STORY
        applab_ec_simple: Create your app by using the blocks in the toolbox.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking it in the new "penColor" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas: a stick figure, snowflake, or spiral. Also try the new "penWidth" block. Have fun!'
        studio_ec_sandbox: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
    video:
      name:
        maze_intro: 'ლაბირინთი - შესავალი'
        artist_intro: 'მხატვარი - შესავალი'
        farmer_intro: 'ფერმერი - შესავალი'
        flappy_intro: 'Flappy - შესავალი'
        loop_times: 'ბლოკი "რამდენჯერმე გამეორება"'
        loop_until: 'ბლოკი "გამეორება სანამ"'
        if: 'ბლოკი "თუ"'
        if_else: 'ბლოკი "თუ/სხვაგვარად"'
        if_else_scrat: 'ბლოკი "თუ/სხვაგვარად"'
        function: ფუნქციები
        loop_while: 'ბლოკი "სანამ"'
        loop_for: 'ბლოკი "მთვლელი"'
        parameters: ფუნქციები პარამეტრებით
        hoc_wrapup: '"კოდის ერთი საათის" შედეგები'
        Unplug1: რა არის CS?
        Unplug2: გამოთვლითი აზროვნება
        Unplug3: გრაფიკული პროგრამირება
        Unplug4: ალგორითმები
        Unplug5: ფუნქციები
        Unplug6: Conditionals
        Unplug7: სიმღერის დაწერა
        Unplug8: აბსტრაქცია
        Unplug9: Relay programming
        Unplug10: Internet
        Unplug11: შედეგები
        C1_happy_maps_unplugged: Happy Maps
        C1_moveitmoveit_unplugged: გადაადგილე, გადაადგილე
        C1_bigevent_unplugged: The Big Event
        C1_getting_loopy: Getting Loopy
        C1_pair_programming: პროგრამირება წყვილებში
        C1_maze_intro_sequencing: 'ლაბირინთი: შესავალი თანმიმდევრობაში'
        C1_maze_debugging: 'ლაბირინთი: ბაგების გამოსწორება'
        C1_bee_level_intro: 'ფუტკრის დონე - შესავალი'
        C1_artist_intro: 'მხატვარი - შესავალი'
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: Maze Loops
        C1_bee_loops: Bee Loops
        C1_maze_loops: Maze Loops
        C1_playlab_storytelling: 'თამაშების ლაბორატორია - ისტორიის შექმნა'
        C1_planting_seed: თესლის დარგვა
        C1_building_foundation: Building a Foundation
        C1_going_places_safely: Going Places Safely
        C2_maze_intro: 'ლაბირინთი - შესავალი'
        C2_artist_intro: 'მხატვარი - შესავალი'
        C2_zuck_repeat_loop: Maze Loops
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: Bee Loops
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: Bee Conditionals
        C2_playlab_createstory: 'თამაშების ლაბორატორია - ისტორიის შექმნა'
        C2_graph_paper: გრაფიკული პროგრამირება
        C2_conditionals_with_cards: Conditionals
        C2_binary_bracelets: Binary Bracelets
        C2_relay_programming: პროგრამირება ცვლაში
        C2_paper_airplanes: ქაღალდის თვითმფრინავები
        C2_digital_footprint: Your Digital Footprint
        C2_digital_footprint_v2: Your Digital Footprint
        C3_maze_level_4: Maze Loops
        C3_artist_intro: 'მხატვარი - შესავალი'
        C3_artist_functions: Artist Functions
        C3_bee_functions: Bee Functions
        C3_bee_conditionals: Bee Conditionals
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: ჩასმული ციკლები
        C3_farmer_while: '"სანამ" ციკლები'
        C3_bee_nested_loops: ჩასმული ციკლები
        C3_bee_debugging: Bee Debugging
        C3_bounce: ხტუნვა
        C3_playlab_create_game: 'თამაშების ლაბორატორია - შექმენი თამაში'
        C3_computational_thinking: გამოთვლითი აზროვნება
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Functional Suncatchers
        C3_songwriting_with_parameters: სიმღერის დაწერა პარამეტრების გამოყენებით
        C4_intro: შესავალი
        C4_loops_zombie: Loops
        C4_bee_conditional: Bee Conditionals
        C4_variables_artist: 'ცვლადები - არტისტი'
        C4_variables_playlab: 'ცვლადები - თამაშების ლაბორატორია'
        C4_for_loops: For Loops
        C4_math_artist: Programming the Artist with Math
        C4_function_edit: ფუნქციების რედაქტირება
        C4_function_create: ფუნქციების შექმნა
        C4_function_parameters: ფუნქციები პარამეტრებით
        C4_conditionals: Conditionals
        C4_unplugged_algorithms: ალგორითმები თანგრამებით
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: ცვლადები კონვერტებში
        C4_unplugged_forloops: For Loops
        C4_unplugged_parameters: Songwriting with Parameters
        C4_unplugged_binary: ორობითი
        frozen_intro: '"კოდის ერთი საათი" შესავალი'
        frozen_loops: 'ციკლები - შესავალი'
        frozen_functions: 'ფუნქციები - შესავალი'
        playlab_intro: 'თამაშების ლაბორატორია - შესავალი'
        playlab_events: 'თამაშების ლაბორატორია - მოვლენები'
        playlab_repeat_forever: 'თამაშების ლაბორატორია - უსასრულოდ გამეორება'
        tutorial_puzzle_challenge: 'თავსატეხი - ტუტორიალი'
        infinity_playlab_intro: 'თამაშების ლაბორატორია - შესავალი'
        infinity_playlab_events: 'თამაშების ლაბორატორია - მოვლენები'
        infinity_playlab_repeat_forever: 'თამაშების ლაბორატორია - გამეორება უსასრულოდ'
        csp_concept_rgb: A Little Bit About Pixels
        csp_pixelation_color_1: 'Color pixelation widget - Part 1'
        csp_pixelation_color_2: 'Color pixelation widget - Part 2'
        csp_pixelation_color_3: 'Color pixelation widget - Part 3'
        csp_pixelation_bw: Black and white pixelation widget
        csp_U1L14_tipstricks: 'Unit 1 Lesson 14 Teacher Tips & Tricks'
        csp_textcompression: Text compression widget
        csp_internetsimulator_1: 'Internet Simulator - Part 1'
        csp_internetsimulator_2: 'Internet Simulator - Part 2'
        csp_internetsimulator_3: 'Internet Simulator - Part 3'
        alg_1_intro: 'CS in Algebra - Introduction'
        alg_2_eval_block: 'CS in Algebra - Evaluation Blocks'
        alg_3_pemdas: 'CS in Algebra - Order of Operations'
        alg_4_data_types: 'CS in Algebra - Data Types'
        alg_5_contracts: 'CS in Algebra - Contracts'
        alg_6_variables: 'CS in Algebra - Variables'
        alg_7_function: 'CS in Algebra - Functions'
        alg_8_design_recipe: 'CS in Algebra - Design Recipe'
        alg_9_booleans: 'CS in Algebra - Booleans'
        alg_10_conditionals: 'CS in Algebra - Conditionals'
        alg_11_coordinate_plane: 'CS in Algebra - Coordinate Plane'
        alg_12_biggame_variables: 'CS in Algebra - Big Game Variables'
        alg_13_biggame_animation: 'CS in Algebra - Big Game Animation'
        alg_14_biggame_booleans: 'CS in Algebra - Big Game Booleans'
        alg_15_biggame_update_player: 'CS in Algebra - Big Game Update Player'
        alg_16_biggame_collision_detection: 'CS in Algebra - Big Game Collision Detection'
        alg_17_sambat_compound_booleans: 'CS in Algebra - Compound Booleans'
    callout:
      text:
        drag_blocks: 'Drag a "move" block and snap it below the other block'
        run: 'Hit "Run" to try your program'
        watch_again: Click here to watch the video again
        gray_block_explanation: "Blocks that are grey can't be deleted. Can you solve the puzzle anyway?"
        show_code_explanation: "Click here to see the code for the program you're making"
        instructions_repeat_explanation: The instructions for each puzzle are repeated here
        category_explanation: "You have all the same blocks but they've now been arranged in categories"
        set_sprite_image: 'Attach a "set actor to image" block to the "when story starts" block to enable an actor for this story'
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: Click this block!
        move_elsa_forward: 'Drag a "Move Forward" block and snap it below the "When Run" block to make Elsa move forward'
        turn_elsa: 'Use the "Turn" block to make Elsa turn. The number in the drop-down determines how much Elsa turns'
        replace_questions: 'Use the drop-down to replace "???" with a number'
        replace_questions_degree: 'Use the drop-down to replace "???" with the correct degree to turn'
        repeat_blocks: 'Use the "Repeat" block and wrap it around the blocks in the workspace'
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the workspace
        repeat_blocks_2: '(2) Move the "Repeat" block here, and place the gray blocks inside'
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each angle in degrees.
        set_sides: 'Use this block to set "sides" to the number needed to complete the puzzle.'
        set_length: 'Use this block to set "length" to the correct value.'
        which_equation: Which equation makes each side shorter for shapes with more sides?
        get_nectar: 'Use the new "get nectar" block.'
        actions_category: 'The tool box got a new look! The "Actions" blocks are in here now.'
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Click here to edit your function.
        create_function: 'Click here to open the "Functions" flyout, then click the "Create a Function" button.'
        house_hint: "It's ok if the picture doesn't look like a house yet. We will fix it in the next puzzle."
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction the Bee will turn to get the nectar.
        logic_category: 'Open the "Logic" flyout to find the "if/else" block.'
        length_parameter: 'Can you update this function so it uses the "length" parameter?'
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: "Don't forget to turn after creating each circle."
        frozen_circle_function_with_parameter_circle: 'Use the "create a circle" block and change the size.'
        frozen_snowflake_branch: 'Use the "create a snowflake branch" block'
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: 'Drag the "say" block here and type "hello"'
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: 'Use the "move right" block to move Tennis Girl'
        playlab_play_sound: 'Add "play sound" block here'
        playlab_arrow_keys: Remember to use these to move the witch after clicking on Run
        playlab_add_move: 'Add "move" blocks inside this repeat block'
        playlab_add_score: Add score blocks here
        playlab_add_blocks: Add your blocks here
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: 'This is your function definition. These blocks run everytime you use the "draw a square" block'
        change_here: Make your change here
        write_draw_square_function: Drag blocks from the toolbox into here that draw a square
        write_draw_triangle_function: Drag blocks from the toolbox into here that draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add, and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: 'Use the "if" block to decide if the bee should get nectar'
        if_else_bee: |-
          Use the "if/else" block so that the Bee gets nectar from a flower, and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to make a full circle
        place_length_variable: კითხვის ნიშნების შესაცვლელად ჩაწერეთ აქ სიგრძის ცვლადი
        arrows_move_actor: პერსონაჟის გადასაადგილებლად გამოიყენე ისრები
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: თქვენი ფუნქციის სახელი ჩაწერეთ აქ
        Infinity_move_right_runbutton: 'დაამატეთ აქ ბლოკი "გადაადგილება"'
        Infinity_move_directions_callout: რომელი ბლოკი გადააადგილებს ბეიმაქს ზემოთ ზემოთა ისრის დაჭერისას?
        Infinity_move_directions_callout_arrow: სამართავად გამოიყენეთ ეს ისრები
        Infinity_move_collide_callout: ხმის გამოცემა ამ მოვლენისას.
        Infinity_repeat_callout: 'მოათავსე ბლოკი "გადაადგილება" აქ'
