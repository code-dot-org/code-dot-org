de:
  data:
    script:
      name:
        20-hour:
          desc: Einführung in die Informatik bis 8. Schuljahr
          Unplug1: Teil 1
          Maze: Teil 2
          Unplug2: Teil 3
          Unplug3: Teil 4
          Artist: Teil 5
          Unplug4: Teil 6
          Artist2: Teil 7
          Unplug5: Teil 8
          Farmer: Teil 9
          Unplug6: Teil 10
          Artist3: Teil 11
          Unplug7: Teil 12
          Farmer2: Teil 13
          Unplug8: Teil 14
          Artist4: Teil 15
          Unplug9: Teil 16
          Farmer3: Teil 17
          Unplug10: Teil 18
          Artist5: Teil 19
          Unplug11: Teil 20
        Hour of Code:
          desc: Programmierstunde
          Maze: Teil 1
        Edit Code:
          desc: Code bearbeiten (beta)
          MazeEC: Stufe 1
        2014 Levels:
          desc: Hüpfen (beta)
          Bounce: Stufe 1
        Builder Levels:
          desc: von Benutzern erstellte Puzzles (beta)
          Custom: Stufe 1
        Flappy Levels:
          desc: Flappy Bird
          Flappy: Stufe 1
        Jigsaw Levels:
          desc: Puzzle (beta)
          Jigsaw: Stufe 1
        Step Levels:
          desc: Labyrinth (Beta)
          MazeStep: Bühnen Schritt
        edit-code:
          desc: Code bearbeiten (beta)
          MazeEC: Stufe 1
          Webapp: Teil 2
          ArtistEC: Teil 3
          StudioEC: Teil 4
        events:
          desc: Hüpfen (beta)
          Bounce: Stufe 1
          Studio: Teil 2
        builder:
          desc: von Benutzern erstellte Puzzles (beta)
          Custom: Stufe 1
        flappy:
          desc: Flappy Bird
          Flappy: Stufe 1
        jigsaw:
          desc: Puzzle (beta)
          Jigsaw: Stufe 1
        step:
          desc: Labyrinth (Beta)
          MazeStep: Bühnen Schritt
        wordsearch:
          desc: Buchstabierwettbewerb (beta)
          WordSearch: Stufe 1
    game:
      name:
        Unplug1: Einführung in die Informatik
        Maze: Das Labyrinth
        Multi: Multiple-Choice Sachen
        Unplug2: Computerorientiertes Denken
        Unplug3: Programmieren auf Millimeterpapier
        Artist: Der Künstler
        Unplug4: Algorithmen
        Artist2: Der Künstler 2
        Unplug5: Funktionen
        Farmer: Der Bauer
        Unplug6: Bedingungen
        Artist3: Der Künstler 3
        Unplug7: Lieder schreiben
        Farmer2: Der Bauer 2
        Unplug8: Abstraktion
        Artist4: Der Künstler 4
        Unplug9: Relais-Programmierung
        Farmer3: Der Bauer 3
        Unplug10: das Internet
        Artist5: Der Künstler 5
        Unplug11: Zusammenfassung
        MazeEC: Das Labyrinth
        Bounce: Bounce
        Flappy: Flappy Bird
        Jigsaw: Puzzle
        MazeStep: Labyrinth-Schritt-Modus
        Wordsearch: Wörtersuche
        Webapp: Webapp
        ArtistEC: Der Künstler
        TextMatch: Text Spiel
        StudioEC: Play Lab
    trophy:
      name:
        Bronze: Bronze
        Silver: Silber
        Gold: Gold
    concept:
      description:
        sequence: Sequenz
        if: Wenn-Baustein
        if_else: Wenn-Dann-Baustein
        loop_times: Wiederhole-Anzahl-Baustein
        loop_until: Wiederhole-Bis-Baustein
        loop_while: Solange-Baustein
        loop_for: Zähler-Baustein
        function: Funktionen
        parameters: Funktionen mit Parametern
    level:
      instructions:
        maze_2_2: 'Kannst du mir helfen, das freche Schwein zu fangen? Stecke ein paar „vorwärts“-Bausteine zusammen und drücke „Ausführen“, um mir zu helfen. '
        maze_2_1: Dieses Schwein lässt meine Federn zu Berge stehen. Hilf mir es zu finden!
        maze_2_2_5: Folge dem Weg und führe mich zum Schwein. Lass mich nicht ins TNT laufen, sonst fliegen die Federn!
        maze_2_3: Führe mich zu dem grünen Bösewicht! (Achte auf das TNT)
        maze_2_4: Bleibe ruhig – und hilf mir, das böse Schwein zu finden. Sonst werde ich noch wütend!
        maze_2_5: Es gibt einen Weg, mit dem ich mit nur zwei Bausteinen zum grünen Schweinchen komme. Findest du ihn?
        maze_2_6: Versuche mich mit nur drei Blöcken zum grünen Eindringling zu bringen.
        maze_2_7: Hilf mir dieses böse Schweinchen mit möglichst wenigen Bausteinen zu erwischen. Verwende mehr als einen „Wiederhole _ mal“-Baustein.
        maze_2_8: 'Wenn ein Baustein grau ist, kannst du ihn nicht löschen. Löse das Rätsel mit dem „wiederholen“-Baustein, der die Aktionen darin 3 mal wiederholt. Versuche die folgenden 3 Bausteine in den grauen „wiederholen“-Baustein zu stecken: bewegen, bewegen, drehen.'
        maze_2_9: OK, probiere den neuen „Wiederholen-bis“-Baustein aus – dieser wiederholt alle Aktionen darin, bis ich das grüne Schwein erreiche.
        maze_2_10: 'Okay, eine letzte Übung - kannst du das mit nur 4 Bausteinen lösen?'
        maze_2_11: Sehr geehrte Person. Ich Zombie. Ich hungrig. ... Muss... zur... Sonnenblume... gelangen. Kannst du mich mit nur 5 Bausteinen hin bringen?
        maze_2_12: OK, das ist ähnlich, aber etwas anders. Schaffst du es in nur 5 Bausteinen?
        maze_2_13: 'Nutze den neuen "Wenn" Baustein um zu entscheiden wann ich mich drehen soll. Hinweis: Du brauchst nur einen weiteren Baustein, aber schau dir an wie wir es gemacht haben um es beim nächsten Mal alleine machen zu können.'
        maze_2_14: 'Ok, es ist wie das letzte Puzzle, aber vergiss nicht wie du den "Wenn" Baustein und den "Wiederholen" Baustein zusammen verwendet hast.'
        maze_2_15: 'Sonnenblume haben will! Benutze einen "Wenn" Baustein um mich mit so wenig Bausteinen wie möglich dort hin zu bringen.'
        maze_2_16: 'Ok, lass es uns nochmal versuchen - es ist nicht wirklich anders, aber pass vor den Fleischfressenden Pflanzen auf!'
        maze_2_17: 'Der "Wenn-Ansonsten" Baustein überprüft eine Bedingung und macht dann eine Sache ODER eine andere. Versuche den neuen Baustein zu verwenden um mich zu der Sonnenblume zu bringen.'
        maze_2_18: 'Noch eine Übung mit dem "Wenn-Ansonsten" Baustein, schaffst du es mit dem ersten Versuch?'
        maze_2_19: Können Sie nur 3 Bausteine hinzufügen um mir mit einem komplexen Labyrinth zu helfen? Wenn du es richtig machst, kann ich jeden kurvigen Weg gehen, unabhängig von der Länge.
        turtle_1_1: Hallo, ich bin ein Künstler. Du kannst Code schreiben, um mich fast alles malen zu lassen. Benutze ein paar Bausteine um mich die grauen Linien im Bild übermalen zu lassen.
        turtle_1_2: 'Nun zeichnen Sie ein Quadrat. HINWEIS: Verwenden Sie Ihre Lieblingsfarbe von dem neuen "setze Farbe" Baustein.'
        turtle_1_3: Zeichne ein Viereck mit nur 3 Bausteinen.
        turtle_1_4: 'Zeichne ein Dreieck, dessen Seiten alle unterschiedliche Farben haben. Verwende dazu die "zufällige Farbe"-Option, welche jedes Mal eine andere Farbe verwendet. Hinweis: Du musst herausfinden wie weit du drehen musst, indem du die Nummern im Dreh-Baustein anklickst.'
        turtle_1_5: Jetzt zur Übung, zeichne ein Dreieck und dann ein Quadrat um einen Umschlag zu zeichnen.
        turtle_1_6: 'Kannst du herausfinden wie man dieses Dreieck und Quadrat zeichnet? Tipp: Zuerst das Dreieck zeichnen, dann rechne aus wie viele Umdrehungen benötigt sind, bevor du das Quadrat zeichnest.'
        turtle_1_7: 'Ok, lass es uns ein wenig schwieriger machen - mal schauen, ob du diese grüne Brille zeichnen kannst. Die Quadrate haben eine Kantenlänge von jeweils 100 Pixel und sie sind 50 Pixel von einander entfernt. Vergiss nicht Grün zu verwenden!'
        turtle_1_8: 'Ok, versuche herauszufinden was passiert, wenn du diesen Code ausführst (oder drücke "Programm Starten" um es zu versuchen). Danach wiederhole es so oft, um die Zeichnung fertigzustellen. Die Farben werden jedes Mal unterschiedlich sein.'
        turtle_1_9: Kannst du herausfinden mit welcher Nummer du das Fragezeichen ersetzen musst, um einen Kreis zu zeichnen?
        turtle_1_10: 'Du hast es geschafft! Jetzt, zeichne was du willst! Hier sind ein paar Ideen: ein Strichmännchen, eine Schneeflocke, oder eine Spirale. Probiere auch den neuen "Setze Breite"-Baustein aus. Viel Spaß!'
        turtle_4_1: 'Kannst du ein Dreieck (mit den Kanten von 100 Pixeln) mit nur 3 Bausteinen zeichnen? Tipp: Verwenden Sie einen "Wiederholen"-Baustein.'
        turtle_4_2: 'Füge einen "nach rechts drehen um 90 Grad" Baustein irgendwo in der Mitte des Programm, welches sich bereits auf dem Arbeitsplatz befindet, um diese Dreiecke zu zeichnen.'
        turtle_4_3: 'Ok, hier ist das Programm das du geschrieben hast um ein einzelnes Dreieck zu zeichnen. Kannst du einen "Wiederholen"- und "Drehen"-Baustein hinzufügen um eine hübsche Blume zu zeichnen?'
        turtle_4_4: 'Hier ist das gleiche Programm aus dem vorherigen Puzzle, aber diesmal nur 36 Grad drehend nach dem Zeichnen jedes Dreiecks. Wie oft muss das wiederholt werden? (Hinweis: nach 360 Grad wird die Zeichnung zu einem vollen Kreis)'
        turtle_4_5: 'Hier ist das gleiche Programm aus dem vorherigen Puzzle, aber diesmal werden die Drehungen 36 Mal wiederholt. Wie viel Grad müssten die Drehungen sein? (Hinweis: nach 360 Grad wird die Zeichnung zu einem vollen Kreis)'
        turtle_4_6: Kannst du ein Viereck mit der Kantenlänge von 20 Pixeln mit nur 3 Bausteinen zeichnen?
        turtle_4_7: 'Das ist der Code vom letzten Puzzle, der Quadrate zeichnen kann. Kannst du ihn wiederholen, damit er 10 angrenzende Quadrate zeichnet, die zusammen aussehen wie eine Leiter? Hinweis: du brauchst nur zwei weitere Bausteine.'
        turtle_4_8: Hier ist die Lösung für das vorherige Puzzle. Können Sie nur zwei weitere Bausteine benutzen um die Zeichnung zu beenden?
        turtle_4_9: Hier ist die Lösung für das vorherige Puzzle. Wie weit muss gedreht werden um die Zeichnung zu beenden? (Du musst wahrscheinlich ein paar Mal probieren)
        turtle_4_10: Hier ist die Lösung für das vorherige Puzzle. Wie oft musst du wiederholen um die Zeichnung zu beenden?
        turtle_4_11: 'Ändere die Werte im "Drehen"- und "Wiederholen"-Baustein um verschiedene Muster zu zeichnen. Oder experimentiere und ändere das restliche Programm um zu Malen was du willst.'
        maze_karel_1_1: 'Hallo, ich bin ein Bauer. Ich brauche deine Hilfe beim Glätten meines Feldes um es für das Säen vorzubereiten. Bewege mich zu dem Erdblock und nutze den "Entfernen" Baustein um diesen zu entfernen.'
        maze_karel_1_2: 'Anschließend verschiebe mich in das Loch und fülle es mit zwei Schaufelladungen Erde mit dem "Füllen"-Block.'
        maze_karel_1_3: Verschiebe mich zum Erdhaufen und sag mir, wie viele Schaufeln entfernt werden sollen. Verwende dabei so wenig Bausteine wie möglich.
        maze_karel_1_4: 'Kannst du mir helfen alle vier Haufen Erde zu entfernen? Hinweis: Nutze einen "Wiederholen" Block wenn du kannst.'
        maze_karel_1_5: 'Helfen Sie diese Löcher mit 5 Schaufeln Erde aufzufüllen. Tipp: Sie können eine "Wiederholen" Baustein innerhalb des Bausteins "Wenn" setzen.'
        maze_karel_1_6: 'Entfernen Sie alle Erdhaufen, mit so wenig Bausteine wie möglich. Die neuen Optionen im Dropdown-Menü auf dem "Wenn"-Baustein sagen mir, ob ich auf einem Haufen oder einem Loch stehe.'
        maze_karel_1_7: Wow, ich habe ein wirklich tiefes Loch gefunden! Ich weiß nicht wie viele Schaufeln von Erde es braucht. Können Sie ein Programm schreiben, das es ausfüllt, bis der Boden eben ist?
        maze_karel_1_8: Hilf mir das Loch am Ende des Feldes zu füllen mit so wenigen Bausteinen wie möglich.
        maze_karel_1_9: 'Hilf mir, all diese Haufen Erde zu entfernen. Versuche so wenig Bausteine wie möglich zu benutzen. Hinweis: Versuche den „Solange“-Baustein zu benutzen.'
        maze_karel_1_10: 'Weil ich Überstunden mache und es deshalb draußen schon dunkel ist, kann ich nicht erkennen wie groß die Häufen sind. Jetzt habe ich nicht alle Optionen, die ich sonst beim "solange"-Baustein hatte. Bewege mich am Feld entlang und wenn dort ein Haufen ist, dann entferne ihn.'
        maze_karel_1_11: 'Es ist immer noch dunkel draußen. Bewege mich am Feld entlang. Wenn dort ein Haufen ist, dann entferne ihn. Ist dort jedoch ein Loch, dann fülle es auf. Hinweis: verwende das Aufklappmenü des "wenn"-Bausteins.'
        turtle_2_1: 'Hallo. Mich Zombie Künstler. Mich lieben zeichnen! Hilf mir ein Quadrat in einer besonderen Farbe zu zeichnen. Wichtiger Hinweis: du hast die gleichen Bausteine, aber sie wurden jetzt in Kategorien sortiert.'
        turtle_2_2: 'Willkommen bei der Verwendung von Funktionen. Diese lassen dich neue Bausteine definieren. Probiere den neuen "Zeichne ein Viereck"-Baustein aus, um ein kleines, grünes 50x50 Quadrat zu zeichnen. Den Baustein findest du in der "Funktionen"-Kategorie.'
        turtle_2_3: 'Verwende den "Wiederholen"-Baustein (in der "Schleifen"-Kategorie), um 3 Quadrate, jeweils 120 Grad entfernt, der Größe 100 zu zeichnen. Verwende dazu 3 verschiedene, zufällige Farben.'
        turtle_2_4: 'Jetzt wird es interessant. Verändere den Code um 36 Quadrate zu zeichnen, 100 Pixel breit und jeweils 10 Grad von einander entfernt. Hinweis: du kannst den Schiebregler verwenden, um mich schneller werden zu lassen.'
        turtle_2_5: 'Zeichne Quadrate mit Seitenlängen von 50, 60, 70, 80 und 90 Pixel. Du wirst die "Zeichne ein Quadrat"-Funktion fünf Mal benötigen.'
        turtle_2_6: 'Ok, dieses Programm verwendet einen Zähler, um die gleichen Quadrate vom letzten Mal zu zeichnen. Du möchtest, dass die Quadrate alle die selbe Größe haben wie der Zähler, deshalb verwende den "Zähler"-Baustein. Hinweis: Er ist in der Variablen Kategorie.'
        turtle_2_7: 'Das ist ein Programm, das Spiralen zeichnet. Jedoch sind die Bausteine deaktiviert, weshalb sie nicht ausgeführt werden. Erstelle ein neues Programm, welches einen "Zählen mit"-Baustein (in der Schleifen Kategorie) und einen "Zähler"-Baustein (in der Variablen Kategorie) verwendet, um die gleiche Spirale zu zeichnen.'
        turtle_2_7_5: 'Es gibt eine neue "zeichne einen Schneemann"-Funktion (in der Funktionen Kategorie). Zeichne zwei Schneemänner, mit der Höhe 250 und 100.'
        turtle_2_8: 'Das ist ein bisschen knifflig. Verwende die "zeichne einen Schneemann"-Funktion und den neuen "springe vorwärts"-Baustein (in der Aktionen Kategorie). Zeichne 3 Schneemänner in verschiedenen Farben, jeweils 100 Pixel von einander entfernt.'
        turtle_2_9: 'Verwende eine "zähle mit"-Schleife, um eine Schneemann-Familie zu zeichnen. Verwende folgende Höhen: 110, 100, 90, 80. Die Schneemänner sollten alle 60 Pixel von einander entfernt sein.'
        turtle_2_10: Hier ist ein wenig Code, um mit verschiedenen Spiralen experimentieren zu können. Was passiert wenn du den Dreh-Betrag veränderst? Oder wenn du eine zufällige Farbe in der Schleife verwendest? Zeichne was du möchtest.
        maze_karel_2_1: 'Verwende die Bausteine um mir zu helfen alle Haufen wegzuräumen und alle Löcher im Boden aufzufüllen. Versuche Schleifen anstatt zu viele Bausteine zu verwenden. Hinweis: Du kannst eine Schleife in eine andere Schleife hinein setzen.'
        maze_karel_2_2: 'Wir haben unseren eigenen Baustein, der "fülle 5" heißt, definiert. Er ist jetzt in der Funktionen-Kategorie. Verwende diesen um mir dabei zu helfen die Löcher aufzufüllen.'
        maze_karel_2_3: 'Verwende den neuen "fülle 5"-Baustein, damit ich alle Löcher auffülle. Du musst den "fülle 5"-Baustein aus der Funktionen-Kategorie herausziehen.'
        maze_karel_2_4: Definiere eine neue Funktion, die 7 Schaufeln voller Erde beseitigt. Diese verwende Sie um ein Programm zu schreiben, das mir hilft alle Häufen zu entfernen.
        maze_karel_2_5: Erstelle eine neue Funktion, die 6 Schaufeln voller Erde von einem Haufen entfernt und hilf mir mit der Funktion alle Haufen platt zu machen.
        maze_karel_2_6: 'Verwende zwei neue Funktionen, "fülle 8" und "entferne 8", um mir zu helfen die Haufen platt zu machen und die Löcher aufzufüllen.'
        maze_karel_2_7: Da ist eine Kuh in meinem Feld. Schreibe eine Funktion, die mir hilft, der Kuh auszuweichen und den Haufen zu entfernen. Ziehe alle dafür dazu nötigen Bausteine in die neue Funktion.
        maze_karel_2_8: 'Verwende diese neue Funktion "vermeide die Kuh und entferne 1", um mir zu helfen alle Haufen zu entfernen.'
        maze_karel_2_9: OK, ist hier eine Funktion, die 4 verschiedene Erdhaufen in einer vertikalen Spalte entfernt. Versuche diese Funktion in einer Schleife, so dass du alle Haufen mit nur ein paar neuen Bausteinen entfernst.
        maze_karel_2_10: Bewege mich über das Feld und verwende diese beiden Funktionen, um mir zu helfen, alle Haufen zu entfernen und alle Löcher zu füllen.
        turtle_3_1: 'Dieses Puzzle zeigt, wie die Funktionen "Zeichne ein Quadrat" und "Zeichne einen Kreis" definiert sind.  Eine Funktion definieren, führt die Bausteine nicht aus.  Du musst den Bausteine "Zeichne ein Quadrat" ziehen, um ein Quadrat zu zeichnen.'
        turtle_3_2: 'Benutze die "Zeichne Quadrat"-Funktion als Grundlage und erstelle eine "Zeichne Dreieck"-Funktion und verwende diese entsprechend.'
        turtle_3_3: 'Zeichne mehrere dreieckige Zäune um die Katzen und einen quadratischen Zaun um die Kuh. Tipp: Am Besten du testest das Programm zwischen durch immer mal wieder.'
        turtle_3_4: 'Probiere mal, ob du herausfinden kannst, wie du die Funktionen "Zeichne Quadrat" und "Zeichne Dreieck" (und weitere) dazu benutzen kannst, ein Haus um den Löwen herum zu zeichnen.'
        turtle_3_5: 'Erstelle jetzt eine neue "zeichne ein Haus"-Funktion und verwende sie um zwei Katzen unterzubringen. Hinweis: erstelle eine neue Funktion mit Hilfe des "mach etwas"-Bausteins und gib einen Namen für den Baustein ein.'
        turtle_3_6: 'Füge eine Eingabe, die "Länge" heißen soll, zu "zeichne ein Dreieck" hinzu, wie im Beispiel "zeichne ein Quadrat". Anschließend, zeichne verschieden große Dreiecke. (Hinweis: klicke auf den Stern, um bei einer Funktion eine Eingabe hinzu zufügen)'
        turtle_3_7: 'Füge eine Eingabe, die "Höhe" heißen soll, zu "zeichne ein Haus" hinzu und baue ein Haus, das groß genug für den Elefanten ist (die Kanten sollen 150 Pixel lang sein)'
        turtle_3_8: 'Das hier sind alle Bausteine von den vorherigen Puzzles. Ändere "zeichne ein Haus", so das ich in der unteren, rechten Ecke lande, nachdem ein neues Haus gezeichnet worden ist. Verwende diese modifizierte Funktion um drei Häuser zu zeichnen.'
        turtle_3_9: 'Kannst du die "zeichne ein Haus"-Funktion ohne Hilfe wieder erstellen? Versuche es und zeichne anschließend eine ganze Reihe von Häusern.'
        turtle_3_10: Glückwunsch, du hast jetzt schon viel gelernt. Jetzt kannst alles zeichnen was dir einfällt. Versuch doch mal einen Stern, ein Spirale, oder eine hübsche Schneeflocke.
        maze_karel_debug_seq_1: 'Willkommen zur "Fehlerbeseitigung"! Mein Code funktioniert nicht richtig. Kannst du das Problem finden und mein Programm reparieren, damit ich mein Feld flach bekomme und es bepflanzt werden kann?'
        maze_karel_debug_seq_2: Was ist an diesem Programm falsch? Wie kannst du es reparieren, damit ich diesen Erdhaufen entfernen kann?
        maze_karel_debug_repeat: Suche und beseitige die Fehler in diesem Programm für mich, damit mein Feld wieder flach und schön wird.
        maze_karel_debug_while: Was musst du am Programm ändern, damit es mir hilft das Loch zu füllen?
        maze_karel_debug_if: Hilfe! Repariere das Programm, damit mein Feld komplett flach wird.
        maze_karel_debug_if_else: Überprüfe dieses Programm auf Fehler und beseitige sie, damit ich alle Löcher auffüllen und alle Erdhaufen entfernen kann.
        maze_karel_debug_function_1: Was musst du am Programm ändern, damit es mir hilft alle Erdhaufen zu entfernen?
        maze_karel_debug_function_2: Kannst du dieses Programm für mich auf Fehler überprüfen und sie beseitigen, damit ich mein Feld flach machen kann?
        maze_karel_debug_function_3: 'Bearbeite das Programm so, dass ich alle Erdhaufen von meinem Feld entferne. '
        turtle_5_1: Versuche, dieses Programm auszuführen und verändere es, um zu sehen, was passiert. Kannst du herausfinden, wie es funktioniert? (Oder lösche es und ersetze es durch etwas ganz anderes)
        turtle_5_2: Versuche, dieses Programm auszuführen und verändere es, um zu sehen, was passiert. Kannst du herausfinden, wie es funktioniert? (Oder lösche es und ersetze es durch etwas ganz anderes)
        turtle_5_3: Versuche, dieses Programm auszuführen und verändere es, um zu sehen, was passiert. Kannst du herausfinden, wie es funktioniert? (Oder lösche es und ersetze es durch etwas ganz anderes)
        turtle_5_4: Versuche, dieses Programm auszuführen und verändere es, um zu sehen, was passiert. Kannst du herausfinden, wie es funktioniert? (Oder lösche es und ersetze es durch etwas ganz anderes)
        turtle_5_5: Versuche, dieses Programm auszuführen und verändere es, um zu sehen, was passiert. Kannst du herausfinden, wie es funktioniert? (Oder lösche es und ersetze es durch etwas ganz anderes)
        turtle_5_6: Versuche, dieses Programm auszuführen und verändere es, um zu sehen, was passiert. Kannst du herausfinden, wie es funktioniert? (Oder lösche es und ersetze es durch etwas ganz anderes)
        maze_3_1: Ich muss zu diesem Schwein kommen! Schreibe ein paar Aufrufe von bewegen(); damit ich mir meine Eier zurückholen kann.
        maze_3_2: Schreibe mir ein Programm mit dem ich es bis zu dem Schwein schaffe.
        maze_3_3: Wie komme ich zum Schwein? Passe auf das ich nicht in den TNT-Sprengstoff laufe!
        maze_3_4: Argh! Schreibe mir ein Programm das mich um den TNT-Sprengstoff zum Schwein bringt.
        bounce_1: 'Hänge einen Baustein an den "Wenn linker Pfeil"-Baustein und drücke "Programm ausführen". Bewege jetzt das Paddel mit dem linken Pfeil um das Ziel zu erreichen.'
        bounce_2: 'Hänge einen Baustein an den "Wenn rechter Pfeil"- und den "Wenn linker Pfeil"-Baustein. Bewege jetzt das Paddel um beide Ziele zu erreichen.'
        bounce_3: 'Versuche jetzt etwas ähnliches mit dem "Wenn oben Pfeil"-Baustein. Bewege das Paddel zum oberen Ziel.'
        bounce_4: Jetzt musst du vier Bausteine anhängen. Bewege das Paddel zu allen vier Zielen, um dieses Puzzle zu lösen.
        bounce_5: 'Wir werden jetzt einen Ball auf das Paddel runterfliegen lassen. Füge einen Baustein an den "Wenn Ball Paddel berührt"-Baustein um sicherzustellen, dass der Ball das Ziel erreicht.'
        bounce_6: 'Jetzt ist das Ziel oben. Du musst Bausteine an beide "Wenn Ball auftrifft"-Bausteine anhängen um dieses Puzzle zu lösen.'
        bounce_7: 'Füge jedem der "Wenn"-Bausteine weitere Bausteine hinzu. Lasse den Ball springen bis er das Ziel trifft.'
        bounce_10: 'Jetzt gibt es oben ein Ziel. Hänge den "Erziele einen Punkt"- und den "Erziele Gegnerpunkt"-Baustein an den "Wenn Ball im Tor"- und "Wenn Ball Paddel verfehlt"-Baustein, um ein Spiel zu erstellen. Schau wie viele Punkte du erzielen kannst, bevor der Gegner zweimal gewinnt.'
        bounce_11: 'Du kannst nun Bausteine zum "Wenn ausführen" Baustein hinzufügen. Du musst den "Starte neuen Ball" Baustein an mehreren Orten hinzufügen. Versuche die Szene oder die Geschwindigkeit des Schlägers und des Balls und sieh wie viele Punkte du erzielen kannst, bevor dein Gegner zwei Punkte macht.'
        bounce_12: 'Baue dein eigenes Bounce-Spiel. Du kannst alle Grafiken und Regeln ändern. Wenn du fertig bist, klick "Abschliessen" um dein Spiel deinen Freunden zu zeigen.'
        Custom_builder: 'Ziehe Bausteine aus deiner Werkzeugkiste auf den Arbeitsplatz um den Level zu zeichnen, welchen du erstellen möchtest. Drücke auf "Ausführen" wenn du bereit bist.'
        flappy_1: 'Füge dem "Wenn geklickt"-Baustein einen weiteren Baustein hinzu und drücke dann "Programm ausführen". Klicke oder tippe auf den Bildschirm, um Flappy zum Ziel zu bewegen.'
        flappy_2: 'Nun haben wir etwas Boden hinzugefügt. Füge dem "Wenn auf Boden gestürzt"-Baustein einen weiteren Baustein hinzu. Dein Programm benötigt einen "Spiel beendet"-Baustein, wenn Flappy zu Boden stürzt.'
        flappy_3: 'Der "Wenn ausführen" Baustein erlaubt dir Code auszuführen, wenn dein Spiel startet. Versuche die Geschwindigkeit des Levels zu setzen und zum Ziel zu fliegen.'
        flappy_4: 'Flappy fliegt durch Hindernisse hindurch, es sei denn, du programmierst ihn so, dass er abstürzt. Füge einen Baustein zum "Wenn Hindernis getroffen"-Baustein hinzu. Dein Programm muss "SPIEL BEENDEN", wenn Flappy gegen die ersten Rohre knallt.'
        flappy_5: 'Füge einen Punktezähler hinzu, der Punkte zählt, wenn Flappy es an Hindernissen vorbeischafft. Füge ihn zum "Wenn Hindernis überwunden"-Baustein hinzu und erziele einen Punkt, indem du Flappy durch die erste Reihe von Rohren fliegst.'
        flappy_6: Versuche, ob du auch dann einen Punkt erzielen kannst, wenn Flappy schwächer oder stärker flattert.
        flappy_7: 'Versuche als nächstes die Szene zu ändern indem du einen weitern Baustein zum "Wenn ausführen" Baustein hinzufügst.'
        flappy_8: Du kannst jederzeit Bilder festlegen, nicht nur zu Spielbeginn. Versuche, einen zufälligen Hintergrund zu setzen, wenn andere Ereignisse stattfinden, zum Beispiel wenn ein Hindernis überwunden wird.
        flappy_9: 'Bring etwas Abwechslung hinein: statt bei einem Zusammenstoß oder einem Aufprall zu Boden das Spiel zu beenden, versuche stattdessen den Punktestand auf Null zurückzusetzen.'
        flappy_11: 'Erstelle dein eigenes Flappy Spiel. Du kannst alle Grafiken, die Regeln und sogar die Schwerkraft verändern. Wenn du fertig bist, klicke auf "Teilen" um das Spiel deinen Freunden zu zeigen.'
        flappy_k1_1: Flappy spielen
        flappy_k1_2: 'Füge dem "Wenn geklickt"-Baustein einen weiteren Baustein hinzu und drücke dann "Programm ausführen". Klicke oder tippe auf den Bildschirm, um Flappy zum Ziel zu bewegen.'
        flappy_k1_3: 'Nun haben wir etwas Boden hinzugefügt. Füge dem "Wenn auf Boden gestürzt"-Baustein einen weiteren Baustein hinzu. Dein Programm benötigt einen "Spiel beendet"-Baustein, wenn Flappy zu Boden stürzt.'
        flappy_k1_4: 'Der "Wenn ausführen" Baustein erlaubt dir Code auszuführen, wenn dein Spiel startet. Versuche die Geschwindigkeit des Levels zu setzen und zum Ziel zu fliegen.'
        flappy_k1_5: 'Flappy fliegt durch Hindernisse hindurch, es sei denn, du programmierst ihn so, dass er abstürzt. Füge einen Baustein zum "Wenn Hindernis getroffen"-Baustein hinzu. Dein Programm muss "SPIEL BEENDEN", wenn Flappy gegen die ersten Rohre knallt.'
        flappy_k1_6: 'Füge einen Punktezähler hinzu, der Punkte zählt, wenn Flappy es an Hindernissen vorbeischafft. Füge ihn zum "Wenn Hindernis überwunden"-Baustein hinzu und erziele einen Punkt, indem du Flappy durch die erste Reihe von Rohren fliegst.'
        flappy_k1_7: Versuche mehrere Punkte zu erzielen, indem du die ersten Rohre umfliegst.
        flappy_k1_8: 'Versuche als nächstes die Szene zu ändern indem du einen weitern Baustein zum "Wenn ausführen" Baustein hinzufügst.'
        flappy_k1_9: 'Versuche den Charakter zu ändern, idem du einen "Setze Spieler" Baustein zum "Wenn ausführen" Baustein hinzufügst.'
        jigsaw_1: Klicke auf den Baustein
        jigsaw_2: Ziehe den Baustein zum Ziel
        jigsaw_3: Ordne die Teile an um das Bild zu erstellen
        jigsaw_4: Ordne die Teile an um das Bild zu erstellen
        jigsaw_5: Ordne die Teile an um das Bild zu erstellen
        jigsaw_6: Ordne die Teile an um das Bild zu erstellen
        jigsaw_7: Ordne die Teile an um das Bild zu erstellen
        jigsaw_8: Ordne die Teile an um das Bild zu erstellen
        jigsaw_9: Ordne die Teile an um das Bild zu erstellen
        jigsaw_10: Ordne die Teile an um das Bild zu erstellen
        jigsaw_11: Ordne die Teile an um das Bild zu erstellen
        jigsaw_12: Ordne die Teile an um das Bild zu erstellen
        jigsaw_13: Repariere das Puzzle!
        mazestep_1: Labyrinth-Schritt-Beschreibung hier
        mazestep_2: Labyrinth-Schritt-Beschreibung hier
        mazestep_3: Labyrinth-Schritt-Beschreibung hier
        mazestep_4: Labyrinth-Schritt-Beschreibung hier
        mazestep_5: Labyrinth-Schritt-Beschreibung hier
        studio_c2_1: 'Kannst du diesen Hund "Hallo Welt" sagen lassen?'
        studio_c2_2: Kannst du erst den Hund und danach die Katze etwas sagen lassen?
        studio_c2_3: Kannst du ein Program schreiben, bei welchem der Hund auf die Katze zugeht?
        studio_c2_4: 'Kannst du ein Programm schreiben, bei welchem der Hund zur Katze geht und die Katze "Hallo" sagt, sobal der Hund sie erreicht?'
        studio_c2_5: 'Kannst du ein Programm schreiben, bei welchem der Tintenfisch "Hallo" sagt, wenn er geklickt wird?'
        studio_c2_6: Kannst du ein Programm schreiben um den Pinguin mit den Pfeilttasten zu steuern und alle Ziele zu treffen?
        studio_c2_7: 'Der "wiederholen für immer" Baustein erlaubt es dir Code ohne Unterbruch auszuführen. Kannst du mehr Bausteine hinzufügen um den Dinosaurier wiederholt auf und ab laufen zu lassen?'
        studio_c2_8: 'Kannst du den Pinguin "Autsch!" sagen lassen und einen "Getroffen" Ton abspielen, wenn er in den Dinosaurier läuft, und ihn dazu mit den Pfeiltasten zu bewegen?'
        studio_c2_9: Kannst du einen Baustein hinzufügen um eine Punkt zu erzeilen, wenn der Pinguin in den Tintenfisch rennt, und ihn dann mit den Pfeiltasten bewegen bis du einen Punkt erzielst?
        studio_c2_10: Kannst du Bausteine hinzufügen um den Hintergrund und die Geschwindigkeit des Pinguins zu ändern, und ihn dann mit den Pfeiltasten bewegen bis du punktest?
        studio_c2_11: 'Erzähl deine eigene Geschichte. Wenn du fertig bist, klick auf "Abschliessen" um deine Geschichte deinen Freunden zu zeigen.'
        studio_c3_story_1: 'Kannst du diesen Hund "Hallo Welt" sagen lassen?'
        studio_c3_story_2: Kannst du erst den Hund und danach die Katze etwas sagen lassen?
        studio_c3_story_3: Kannst du ein Program schreiben, bei welchem der Hund auf die Katze zugeht?
        studio_c3_story_4: 'Kannst du ein Programm schreiben, bei welchem der Hund zur Katze geht und die Katze "Hallo" sagt, sobal der Hund sie erreicht?'
        studio_c3_story_5: Kannst du einen Baustein hinzufügen um den Tintenfisch glücklich zu machen?
        studio_c3_story_6: 'Erzähl deine eigene Geschichte. Wenn du fertig bist, klick auf "Abschliessen" um deine Geschichte deinen Freunden zu zeigen.'
        studio_c3_game_1: 'Kannst du ein Programm schreiben, bei welchem der Tintenfisch "Hallo" sagt, wenn er geklickt wird?'
        studio_c3_game_2: Kannst du ein Programm schreiben um den Pinguin mit den Pfeilttasten zu steuern und alle Ziele zu treffen?
        studio_c3_game_3: 'Der "wiederholen für immer" Baustein erlaubt es dir Code ohne Unterbruch auszuführen. Kannst du mehr Bausteine hinzufügen um den Dinosaurier wiederholt auf und ab laufen zu lassen?'
        studio_c3_game_4: 'Kannst du den Pinguin "Autsch!" sagen lassen und einen "Getroffen" Ton abspielen, wenn er in den Dinosaurier läuft, und ihn dazu mit den Pfeiltasten zu bewegen?'
        studio_c3_game_5: Kannst du einen Baustein hinzufügen um eine Punkt zu erzeilen, wenn der Pinguin in den Tintenfisch rennt, und ihn dann mit den Pfeiltasten bewegen bis du einen Punkt erzielst?
        studio_c3_game_6: Kannst du Bausteine hinzufügen um den Hintergrund und die Geschwindigkeit des Pinguins zu ändern, und in dann mit den Pfeiltasten zu bewegen bis du punktest?
        studio_c3_game_7: 'Entwickele Dein eigenes Spiel. Wenn Du fertig bist, clicke auf "Fertig" und lass Deine Freunde das Spiel auf ihren SmartPhones ausprobieren.'
        studio_playlab_1: 'Der Pinguin will "hallo" sagen - kannst du ihm helfen?'
        studio_playlab_2: 'Höhlenjunge (Schauspieler 1) und Höhlenmädchen (Schauspieler 2) wollen "hallo" zueinander sagen. Kannst du ihnen dabei helfen den "reden" Block zweimal zu benutzen?'
        studio_playlab_3: Kannst du dem Tennis Mädchen helfen die Fahne zu bekommen?
        studio_playlab_4: Can you help Tennis Boy (actor 1) get to Tennis Girl (actor 2) and play a sound when he gets there?
        studio_playlab_5: 'Can you help the Spacebot say "greetings earthlings" when it is clicked? Don’t forget to click it after you click Run'
        studio_playlab_6: Can you help the Witch move around using the up/down/right/left arrow keys to get to all the magical fireballs?
        studio_playlab_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to it to help the wizard move right and left repeatedly?'
        studio_playlab_8: Can you add a block to score a point and a block to play a sound when the unicorn runs into the wizard, and then move him with the arrows until you score?
        studio_playlab_9: Set the background for this alien invasion and help the Spacebot get to the alien faster by changing its speed. Then move him with the arrow keys to get to the Spacebot and alert everyone else
        studio_playlab_10: 'Entwickele Dein eigenes Spiel. Wenn Du fertig bist, clicke auf "Fertig" und lass Deine Freunde das Spiel auf ihren SmartPhones ausprobieren.'
        studio_full_sandbox: 'Entwickele Dein eigenes Spiel. Wenn Du fertig bist, clicke auf "Fertig" und lass Deine Freunde das Spiel auf ihren SmartPhones ausprobieren.'
        studio_k1_1: 'Kannst du diesen Hund "Hallo Welt" sagen lassen?'
        studio_k1_2: Kannst du erst den Hund und danach die Katze etwas sagen lassen?
        studio_k1_3: Kannst du ein Program schreiben, bei welchem der Hund auf die Katze zugeht?
        studio_k1_4: 'Lass den Hund auf die Katze zugehen und die Katze "Hallo" sagen, wenn er dort ankommt.'
        studio_k1_5: Kannst du einen Baustein hinzufügen um den Tintenfisch glücklich zu machen?
        studio_k1_6: Erzähl deine eigene Geschichte! Bewege die Katze und den Hund, und bring sie zum reden.
        maze_wordsearch_k_1: Bewege mich, um das Wort EAST (Osten) zu schreiben
        maze_wordsearch_k_2: Bewege mich, um das Wort SOUTH (Süden) zu schreiben
        maze_wordsearch_k_3: Bewege mich, um das Wort WEST (Westen) zu schreiben
        maze_wordsearch_k_4: Bewege mich, um das Wort NORTH (Norden) zu schreiben
        maze_wordsearch_k_6: Bewegen mich nach Osten, dann nach Süden, um das Wort JUMP zu schreiben
        maze_wordsearch_k_9: Bewege mich ein Feld, dann noch eins, um das Wort CODE zu schreiben
        maze_wordsearch_k_13: Bewege mich ein Feld, dann noch eins, um das Wort DEBUG zu schreiben
        maze_wordsearch_k_15: Bewege mich ein Feld, dann noch eins, um das Wort ABOVE zu schreiben
        maze_wordsearch_k_16: Bewege mich ein Feld, dann noch eins, um das Wort BELOW zu schreiben
        maze_wordsearch_k_20: Das ist ein Test! Bewege mich ein Feld, dann noch eins, um das Wort STORY zu buchstabieren
        webapp_ec_simple: Erstellen Sie Ihre Webanwendung mithilfe von CreateHtmlBlock.
        turtle_ec_1_2: 'Zeichne nun ein Quadrat. Hinweis: Benutze Deine Lieblingsfarbe durch Auswahl im "neue Stiftfarbe"-Absatz.'
        turtle_ec_1_10: 'Sie haben es geschafft! Zeichnen Sie jetzt, was Sie wollen. Einige lustige Ideen: ein Strichmännchen, Schneeflocke oder Spirale. Versuchen Sie auch die neue "PenWidth"-Block. Viel Spaß!'
        studio_ec_sandbox: 'Entwickele Dein eigenes Spiel. Wenn Du fertig bist, clicke auf "Fertig" und lass Deine Freunde das Spiel auf ihren SmartPhones ausprobieren.'
    levelbuilder:
      frozen line:
        instructions: Hallo! Ich bin Elsa von Arendelle. Hilf mir, eine einzige Linie zu zeichnen.
      frozen perpendicular:
        instructions: 'Jetzt schauen wir mal, ob wir zwei Linien zeichnen können, die in einem 90° Winkel zueinander stehen. Du musst sowohl den "Drehen" Block als auch den "Bewegen" Block benutzen.'
      frozen square iterative:
        instructions: Es scheint, als hätten wir die Hälfte eines Quadrates geschafft. Lass uns 4 Linien benutzen, um ein Quadrat zu erstellen.
      frozen square loop:
        instructions: 'Hallo, bin ich Anna von Arendelle! Lass uns ein Quadrat mit dem "Wiederholen"-Block erstellen, um weniger Blöcke zu verwenden. Wie oft (???) soll der "Wiederholung" Block die enthaltenen Blöcke ausführen, um ein Quadrat zu machen?'
      frozen square loop 3x:
        instructions: Lass uns drei Quadrate erstellen und nach jedem Quadrat drehen. Stell sicher, dass du vor jedem neuen Quadrat um 120° drehst.
      frozen square snowflake:
        instructions: 'Kannst du eine Schneeflocke erstellen, indem du den "Wiederholen" Baustein 10 mal benutzt, um ein Quadrat zu erstellen und nach jedem Quadrat den "Drehen" Baustein mit 36° benutzt?'
      frozen cross:
        instructions: 'Benutze den "Wiederholen" Baustein, um ein Pluszeichen zu erstellen. Hast du bemerkt, dass sich Elsa vor und zurück bewegen kann?'
      frozen cross rotate:
        instructions: Jetzt versuche, es zehn Mal zu wiederholen. Wieviel Grad musst du zwischen den einzelnen Linien drehen?
      frozen cross rotate dense:
        instructions: 'Wiederhole es 90 Mal! Wie oft geht 90 in 360 ? Hinweis: Es ist eine sehr kleine Zahl.'
      frozen diamond:
        instructions: 'Erstelle ein Parallelogramm. Es ist wie ein Quadrat, hat aber verschiedene Winkel: 60 und 120 Grad Winkel anstatt 90 Grad Winkel.'
      frozen diamond mini snowflake:
        instructions: 'Wusstest du schon, dass jede Schneeflocke eine andere Form hat? Erstelle eine neue Schneeflocke mit Hilfe des "Wiederholungs" Bausteins zu einem Parallelogramm, das 4 mal wiederholt wird. Drehe jedes Parallelogramm 90 Grad nach rechts.'
      frozen diamond snowflake:
        instructions: 'Nun erstellen wir eine neue Schneeflocke mit dem Wiederholen-Baustein zu einem Parallelogramm. 10 Mal wiederholen, jeweils 36 Grad  nach rechts drehen.'
      frozen circle:
        instructions: Ein Kreis ist eine besondere Form. Kannst du herausfinden, mit welcher Zahl die Fragezeichen ersetzt werden müssen, um einen Kreis zu zeichnen?
      frozen circle function:
        instructions: 'Verwende den neue "Kreis erstellen" Baustein 10 um sich überschneidende Kreise zu erstellen. Vergiss nicht zwischen den Kreisen nach vorn zu springen .'
      frozen circle function in circle:
        instructions: Jetzt erstellen wir 20 überschneidende Kreise, und drehen die einzelnen Kreise um 18 Grad.
      frozen circle function with parameter:
        instructions: 'Hier ist ein "Kreiskreation"-Baustein der Kreise verschiedener Größe machen kann. Kannst du diesen benutzen um einen kleinen Kreis von Größe 5 und einem größeren Kreis von Größe 10 zu erstellen?'
      frozen snowflower:
        instructions: Komplizierte Schneemuster können mit sehr einfachen Formen erstellt werden. Kannst du ein Muster machen, das 5 Kreise der Größe 5 und 5 Kreise der Größe 10 wiederholt?
      frozen snowflake branch:
        instructions: 'Verwende den "Erstelllung eines Schneeflockezweig" Baustein um drei Zweige zu erstellen, die beginnen wie eine Schneeflocke auszusehen.'
      frozen snowflake full:
        instructions: Jetzt wiederhole das 8 Mal, um eine schöne Schneeflocke zu machen!
      frozen freeplay:
        instructions: Du bist jetzt offiziell ein Meisterkünstler geworden! Erstelle ein Winterwunderland und teile es mit Freunden.
      scrat 16:
        instructions: 'Eichel! Eichel! Eichel! Verwende einen "wenn"-Baustein, um mich dort mit der geringsten Anzahl von Bausteinen zu erreichen.'
      scrat 17:
        instructions: 'OK, nochmal zum Ueben - das ist nicht sehr unterschiedlich, aber man muss auf die Wand achten!'
      scrat 18:
        instructions: 'Die "wenn-aber" Bausteine überprüfen eine Bedingung und machen dann eine Sache oder eine andere. Um mich zu erreichen und mir die Eichel zu geben, musst  du diesen neuen Baustein verwenden.'
      scrat 19:
        instructions: 'Noch eine Übung mit dem "Wenn-Ansonsten" Baustein, schaffst du es mit dem ersten Versuch?'
      scrat 20:
        instructions: 'Kannst du nur 3 Bausteine hinzugeben, um mir  zu helfen ein komplexes Labyrinth zu lösen? Wenn du es richtig machst, kann ich jeden kurvigen Pfad unabhängig von der Länge gehen. Beeilen dich! Das Eis schmilzt!'
      Standalone_Artist_1:
        instructions: "Welcome to Artist! First off, let's try to make a simple square using the turn right block and move forward block. Each side should be 100 pixels long."
      Standalone_Artist_2:
        instructions: Malen diesen Diamanten mit 120 und 60 Grad Winkeln und 150 Pixel langen Seiten.
      Standalone_Artist_3:
        instructions: Can you draw this hexagon with 100 pixel sides and 60 degree turns?
      Standalone_Artist_4:
        instructions: "Now you've got a new block to play with, the loop. This will repeat a set of commands. What happens if you loop these commands 6 times?"
      Standalone_Artist_5:
        instructions: How many times do you need to loop this diamond to draw the flower?
      Standalone_Artist_5.5:
        instructions: "Notice how we simplified the diamond code by turning it into a loop. You can loop that whole sequence 12 times to draw the flower. Hint: You'll need to turn 30 degrees after your diamond loop so you don't keep drawing over the same diamond."
      Standalone_Artist_6:
        instructions: 'Loop this hexagon code 6 times to create the design. How many degrees will you need to turn each time? Hint: divide the number of degrees in a circle by the number of times you are looping.'
      Standalone_Artist_7:
        instructions: 'A function is another programming tool to help you avoid repeating yourself. This function draws a flower, so you can use it any time you want to draw a flower. Use this and the new jump block to draw these flowers. Hint: The flowers are 150 pixels apart'
      Standalone_Artist_8:
        instructions: |-
          Here's a function called "Draw a shape" that we've programmed to draw hexagons. Run the code to see what it does and then experiment with the function to see what happens. Can you make it draw a pattern of squares, triangles, or octagons?
      Standalone_Artist_9:
        instructions: "Now go ahead and make whatever picture you'd like! You've even got an empty function that you can make do whatever you want!"
    video:
      name:
        maze_intro: Labyrinth Einführung
        artist_intro: Künstler Einführung
        farmer_intro: Bauer Einführung
        flappy_intro: Flappy Intro
        loop_times: Wiederhole-Anzahl-Baustein
        loop_until: Wiederhole-Bis-Baustein
        if: Wenn-Baustein
        if_else: Wenn/Ansonsten-Baustein
        if_else_scrat: Wenn/Ansonsten-Baustein
        function: Funktionen
        loop_while: Solange-Baustein
        loop_for: Zähler-Baustein
        parameters: Funktionen mit Parametern
        hoc_wrapup: Programmierstunde Zusammenfassung
        Unplug1: Was ist Informatik?
        Unplug2: Computerorientiertes Denken
        Unplug3: Programmieren auf Millimeterpapier
        Unplug4: Algorithmen
        Unplug5: Funktionen
        Unplug6: Bedingungen
        Unplug7: Songschreiben
        Unplug8: Abstraktion
        Unplug9: Relais-Programmierung
        Unplug10: Internet
        Unplug11: Zusammenfassung
        C1_happy_maps_unplugged: Glücklich Karten
        C1_moveitmoveit_unplugged: Bewegung, Bewegung
        C1_bigevent_unplugged: Der große Event
        C1_getting_loopy: Schöne Schleifen
        C1_pair_programming: Paar Programmierung
        C1_maze_intro_sequencing: Labyrinth-Sequenzierung-Intro
        C1_maze_debugging: 'Labyrinth: Debuggen'
        C1_bee_level_intro: 'Bienen Level - Intro'
        C1_artist_intro: Künstler Einführung
        C1_spelling_bee_intro: Buchstabierwettbewerb Intro
        C1_zuck_repeat_loop: Labyrinth Schleifen
        C1_bee_loops: Biene Schleifen
        C1_maze_loops: Labyrinth Schleifen
        C1_playlab_storytelling: 'Play Lab: Erstelle eine Story'
        C1_planting_seed: Einen Samen pflanzen
        C1_building_foundation: Grundlagen aufbauen
        C1_going_places_safely: Sicher unterwegs
        C2_maze_intro: Labyrinth Einführung
        C2_artist_intro: Künstler Einführung
        C2_zuck_repeat_loop: Labyrinth Schleifen
        C2_artist_loops: Künstler Schleifen
        C2_artist_debugging: Künstler Debuggen
        C2_bee_loops: Biene Schleifen
        C2_bee_debugging: Biene Debuggen
        C2_bee_conditionals: Biene Bedingungen
        C2_playlab_createstory: 'Play Lab: Erstelle eine Story'
        C2_graph_paper: Programmieren auf Millimeterpapier
        C2_conditionals_with_cards: Bedingungen
        C2_binary_bracelets: Binäre Armbänder
        C2_relay_programming: Relais-Programmierung
        C2_paper_airplanes: Papier Flugzeuge
        C2_digital_footprint: Dein digitaler Fußabdruck
        C3_maze_level_4: Labyrinth Schleifen
        C3_artist_intro: Künstler Einführung
        C3_artist_functions: Künstler Funktionen
        C3_bee_functions: Biene Funktionen
        C3_bee_conditionals: Biene Bedingungen
        C3_maze_conditionals: 'Labyrinth: Bedingungen'
        C3_artist_nested_loops: Verschachtelte Schleifen
        C3_farmer_while: While-Schleifen
        C3_bee_nested_loops: Verschachtelte Schleifen
        C3_bee_debugging: Biene Debuggen
        C3_bounce: Bounce
        C3_playlab_create_game: 'Play Lab - Erstellen eines Spiels'
        C3_computational_thinking: Computerorientiertes Denken
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Funktionale Sonnenfänger
        C3_songwriting_with_parameters: Komponieren mit Parametern
        C4_intro: Introduction
        C4_bee_conditional: Biene Bedingungen
        C4_variables_artist: 'Variables - Artist'
        C4_variables_playlab: 'Variables - Play Lab'
        C4_for_loops: '"For"-Schleifen'
        C4_math_artist: Programming the Artist with Math
        C4_function_edit: Editing Functions
        C4_function_create: Creating Functions
        C4_function_parameters: Funktionen mit Parametern
        C4_conditionals: Bedingungen
        C4_unplugged_algorithms: Algorithms with Tangrams
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Variables in Envelopes
        C4_unplugged_forloops: '"For"-Schleifen'
        C4_unplugged_parameters: Komponieren mit Parametern
        C4_unplugged_binary: Binary
        frozen_intro: Hour of Code Einführung
        frozen_loops: Einführung in Wiederholungen (Schleifen)
        frozen_functions: Einführung in Funktionen
        playlab_intro: Introduction to Play Lab
        playlab_events: Play Lab Events
        playlab_repeat_forever: Play Lab Repeat Forever
    callout:
      text:
        drag_blocks: 'Ziehen Sie einen "bewegen" Block und lassen Sie es unter den anderen Block einrasten'
        run: 'Drücken Sie "Ausführen", um Ihr Programm zu testen'
        watch_again: Hier klicken, um das Video nochmal anzusehen
        gray_block_explanation: Graue Blöcke können nicht gelöscht werden. Kannst du das Puzzle trotzdem lösen?
        show_code_explanation: Klicke hier, um den Code deines Programms zu sehen
        instructions_repeat_explanation: Die Anweisungen für jedes Rätsel werden hier wiederholt
        category_explanation: Sie haben die gleichen Blöcke, aber sie sind jetzt in Kategorien geordnet worden
        set_sprite_image: 'Fügen sie einen "Schauspieler Bild zuweisen" Block zu "wenn die Geschichte beginnt" Block hinzu um einen Schauspieler für diese Geschichte zu aktivieren'
        studio_say_text: Geben sie ein was ihr Schauspieler sagen soll mit diesen Zitaten
        jigsaw_click: Klicken Sie auf diesen Block!
        move_elsa_forward: 'Ziehen Sie einen Block "Move Forward" und lassen Sie es unterhalb des "Run als" Blocks zu Elsa vorwärts zu bewegen'
        turn_elsa: 'Verwenden Sie den "Turn"-Block um Elsa zu verwandeln. Die Zahl in der Dropdown-Liste bestimmt, wieviel Elsa sich dreht'
        replace_questions: 'Verwenden Sie den Dropdown-Pfeil, um  "???" mit einer Nummer zu ersetzen'
        replace_questions_degree: 'Verwenden Sie den Dropdown-Pfeil, um "???" mit dem richtigen Grad zum drehen zu ersetzen'
        repeat_blocks: 'Verwenden Sie den "Repeat" Block und wickeln Sie es um die Blöcke im Arbeitsbereich'
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the workspace
        repeat_blocks_2: '(2) Move the "Repeat" block here, and place the gray blocks inside'
        snowflake_dropdown: Verwenden Sie dieses Dropdown-Menü, um verschiedene Schneeflocken zu erstellen!
        degrees_per_side: Teilen Sie 360 durch die Anzahl der Seiten, um die Größe der einzelnen Winkel in Grad zu erhalten.
        set_sides: 'Verwenden Sie diesen Codeblock um "Seiten" so einzustellen, dass sie mit der Anzahl der Teile die für das Puzzel noch gebraucht werden übereinstimmen.'
        set_length: 'Verwenden Sie diesen Codeblock "Länge" auf den richtigen Wert festzulegen.'
        which_equation: Which equation makes each side shorter for shapes with more sides?
        get_nectar: 'Verwenden Sie den neuen "get-Nektar"-Block.'
        actions_category: 'Die Tool-Box hat einen neuen Look! Die "Aktionen"-Blöcke sind jetzt drin.'
        draw_square_hint: 'Tipp: Verwenden Sie die quadratische Schleife, die Sie gerade im letzten Rätsel gemacht haben.'
        edit_function: Klicke hier um die Funktion zu bearbeiten.
        create_function: 'Klicken Sie hier, um die Flyout "Funktionen" zu öffnen, dann klicken Sie auf "Erstellen einer Funktion".'
        house_hint: Es ist ok, wenn das Bild noch nicht wie ein Haus aussieht. Wir werden es im nächsten Rätsel beheben.
        edit_draw_square: Benutzen Sie diesen Knopf zum bearbeiten der Funktion und der Schleife.
        edit_get_nectar: Verwenden Sie diese Schaltfläche, um die Funktion zu bearbeiten und ändern Sie die Richtung, der die Biene sich zuwendet um den Nektar zuerhalten.
        logic_category: 'Öffne das "Logik"-Fenster um den "if/else"-Absatz zu finden.'
        length_parameter: 'Kannst Du diese Funktion so anpassen, dass sie den "Länge" Parameter benutzt?'
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: "Don't forget to turn after creating each circle."
        frozen_circle_function_with_parameter_circle: 'Use the "create a circle" block and change the size.'
        frozen_snowflake_branch: 'Use the "create a snowflake branch" block'
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: 'Drag the "say" block here and type "hello"'
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: 'Use the "move right" block to move Tennis Girl'
        playlab_play_sound: 'Add "play sound" block here'
        playlab_arrow_keys: Remember to use these to move the witch after clicking on Run
        playlab_add_move: 'Add "move" blocks inside this repeat block'
        playlab_add_score: Füge hier den Punkte Block ein
        playlab_add_blocks: Füge hier deinen Blöcke ein
        set_variable: Ziehe den Nummernblock hierhin um die Variable festzulegen
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: 'This is your function definition. These blocks run everytime you use the "draw a square" block'
        change_here: Mach deine änderung hier
        write_draw_square_function: Drag blocks from the toolbox into here that draw a square
        write_draw_triangle_function: Drag blocks from the toolbox into here that draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add, and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: 'Use the "if" block to decide if the bee should get nectar'
        if_else_bee: |-
          Use the "if/else" block so that the Bee gets nectar from a flower, and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to make a full circle
        place_length_variable: Drag the length variable here to replace the question marks
        arrows_move_actor: Use the arrows to move the actor
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: Write the name of your function here
