#!/usr/bin/env ruby
require_relative '../deployment.rb'
require_relative '../tools/hooks/hooks_utils.rb'
require 'time'

REPO_DIR = File.expand_path('../../', __FILE__)
LEVELS_DIR = File.expand_path(REPO_DIR + '/dashboard/config/scripts', __FILE__)

#This file indicates whether the script is running
LEVELBUILDER_CI_LOCK_FILENAME = 'levelbuilder_ci_lock'

#This file contains the time of the last completed test run, successful or unsuccessful
LEVELBUILDER_CI_LAST_RUN_FILENAME = 'levelbuilder_ci_last_run'

Dir.chdir(REPO_DIR)

exit if File.exist? LEVELBUILDER_CI_LOCK_FILENAME

system "touch #{LEVELBUILDER_CI_LOCK_FILENAME}"

last_modified_time = File.exist?(LEVELBUILDER_CI_LAST_RUN_FILENAME) ?
    DateTime.parse(File.read(LEVELBUILDER_CI_LAST_RUN_FILENAME)).to_time : Time.at(0)

modified_files = HooksUtils.get_modified_files
unstaged_files = HooksUtils.get_unstaged_files

all_interesting_files = modified_files | unstaged_files

level_file_modified = false

all_interesting_files.each do |filename|
  if (filename.start_with? LEVELS_DIR) && File.mtime(filename) > last_modified_time
    level_file_modified = true
  end
end

unless level_file_modified
  puts 'No new changes, cleaning up'
  File.delete LEVELBUILDER_CI_LOCK_FILENAME
  exit 0
end

puts "Modifications to levelbuilder files detected - running testing"

Dir.chdir(REPO_DIR + '/dashboard')

#This test suite can be modified - we can test a smaller set or add UI tests here
test_result = system 'rake seed:incremental'

Dir.chdir REPO_DIR

system "echo #{Time.now} > #{LEVELBUILDER_CI_LAST_RUN_FILENAME}" if test_result

puts "Ran tests, result was #{test_result}"

if test_result
  puts `./bin/content-push -n "Levelbuilder autocommits" -f`
end

File.delete LEVELBUILDER_CI_LOCK_FILENAME
