#!/usr/bin/env ruby
require_relative '../mailing-common/mailing-list-utils'

# All teachers (based on the teacher queries from 2016-11-03-hoc-global-site-refresh)
# This time, split into 2 location groups: US-CA-UK, and international (all other).
query = '
  kind_s: HocSignup2016 ||
  kind_s: HocHardwarePrizes2014 ||
  kind_s: HocHardwarePrizes2015 ||
  kind_s: HocSignup2014 ||
  kind_s: HocSignup2015 ||
  kind_s: HocSurvey2014 ||
  kind_s: HocSurvey2015 ||
  kind_s: CSEdWeekEvent2013 ||
  (
    kind_s: user && role_s: teacher
  ) || (
    kind_s: Petition && role_s: educator
  ) ||
  kind_s: BringToSchool2013 ||
  kind_s: ClassSubmission ||
  kind_s: DistrictPartnerSubmission ||
  kind_s: HelpUs2013 ||
  kind_s: K5OnlineProfessionalDevelopmentPostSurvey ||
  kind_s: K5ProfessionalDevelopmentSurvey ||
  kind_s: ProfessionalDevelopmentWorkshop ||
  kind_s: ProfessionalDevelopmentWorkshopSignup ||
  kind_s: StudentNomination ||
  kind_s: TeacherNomination
'

US_CA_UK_VALUES = {
  location_country_s: ['United States', 'Canada', 'United Kingdom'],
  location_country_code_s: %w[US CA GB],
  hoc_country_s: %w[us ca uk],
  create_ip_country_s: ['United States', 'Canada', 'United Kingdom'],

  # This is a free-form text field with many variations. Comparisons will be case-insensitive,
  # so only lower case versions are needed here.
  country_s: [
    'united states',
    'usa',
    'america',
    'united states of america',
    'united state of america',
    'us',
    'u.s.a',
    'u.s.',
    'unitedstates',
    'united state',
    'united sates',
    'united states of amarica',
    'unites states',
    'united stated',
    'united stats',
    'united  states',
    'united staes',
    'unided states',
    'untited states',
    'unite states',
    'united staes of america',
    'unitedstatesofamerica',
    'unitied states',
    'united sates of america',
    'united stares',
    'untied states of america',
    'united states of amrica',
    'united stats of amarica',
    'unided states of america',
    'United Atates',

    'canada',
    'canda',
    'cananda',
    'ca',

    'united kingdom',
    'united kindom',
    'united kingdon',
    'unitedkingdom',
    'united kingdome',
    'great britain',
    'great britan',
    'great britian',
    'gb'
  ]
}.freeze

def us_ca_uk?(row)
  US_CA_UK_VALUES.each do |key, values|
    row_value = row[key.to_s]
    next unless row_value

    values.each do |value|
      return true if value.casecmp(row_value).zero?
    end
  end

  false
end

teachers_us_ca_uk = {}
teachers_intl = {}

# Sort latest first so we get the most recent location
SOLR.query(q: query, sort: 'id desc', rows: 10000).each do |row|
  next unless row
  email = row['email_s'].downcase.strip
  next if UNSUBSCRIBERS.key?(email) || teachers_us_ca_uk.key?(email) || teachers_intl.key?(email)

  if us_ca_uk?(row)
    teachers_us_ca_uk[email] = {email: email, name: row['name_s']}
  else
    teachers_intl[email] = {email: email, name: row['name_s']}
  end
end

puts "#{teachers_us_ca_uk.count} US-CA-UK teachers"
puts "#{teachers_intl.count} international teachers"
export_contacts_to_csv teachers_us_ca_uk, 'teachers-us-ca-uk.csv'
export_contacts_to_csv teachers_intl, 'teachers-intl.csv'
