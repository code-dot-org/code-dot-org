#!/usr/bin/env ruby
require_relative '../mailing-common/mailing-list-utils'

# For each of 3 states (specified by a list of zip codes below), filter results from:
# - Code Studio teachers
# - Petition Signers
# - HOC Organizers

# Lists of relevant zip codes supplied by the marketing team, for each state:
ZIP_CODES_BY_STATE = {
  CA: %q(
    90001, 90003, 90007, 90011, 90015, 90021, 90022, 90023, 90037, 90040, 90058,
    90063, 90201, 90221, 90240, 90241, 90242, 90255, 90262, 90270, 90640, 90650,
    90670, 90706, 90723, 91754
  ),
  PA: %q(
    17003, 17010, 17022, 17026, 17028, 17033, 17036, 17038, 17041, 17042, 17046,
    17057, 17064, 17067, 17077, 17078, 17087, 17111, 17112, 17545, 17963, 18011,
    18014, 18015, 18016, 18017, 18018, 18020, 18031, 18032, 18034, 18035, 18036,
    18037, 18038, 18040, 18041, 18042, 18045, 18046, 18049, 18051, 18052, 18053,
    18055, 18059, 18062, 18064, 18066, 18067, 18068, 18069, 18072, 18077, 18078,
    18079, 18080, 18086, 18087, 18088, 18091, 18092, 18101, 18102, 18103, 18104,
    18105, 18106, 18109, 18195, 18951, 19504, 19505, 19506, 19507, 19511, 19526,
    19529, 19530, 19533, 19534, 19536, 19538, 19539, 19541, 19544, 19550, 19554,
    19555, 19559, 19562, 19567
  ),
  IA: %q(
    50001, 50002, 50003, 50007, 50009, 50020, 50021, 50022, 50023, 50026, 50029,
    50032, 50033, 50035, 50038, 50039, 50046, 50047, 50048, 50058, 50061, 50063,
    50066, 50069, 50070, 50072, 50073, 50074, 50109, 50111, 50115, 50118, 50124,
    50125, 50128, 50131, 50133, 50139, 50140, 50146, 50149, 50151, 50155, 50156,
    50160, 50161, 50164, 50166, 50167, 50169, 50174, 50210, 50211, 50216, 50218,
    50220, 50222, 50225, 50226, 50229, 50233, 50235, 50237, 50240, 50243, 50244,
    50250, 50254, 50257, 50261, 50263, 50265, 50266, 50273, 50274, 50276, 50277,
    50309, 50310, 50311, 50312, 50313, 50314, 50315, 50316, 50317, 50319, 50320,
    50321, 50322, 50323, 50324, 50325, 50327, 50801, 50830, 50833, 50835, 50836,
    50837, 50839, 50840, 50841, 50842, 50843, 50845, 50846, 50847, 50848, 50849,
    50851, 50853, 50854, 50857, 50858, 50859, 50860, 50861, 50862, 50863, 50864,
    51501, 51503, 51510, 51521, 51525, 51526, 51532, 51533, 51534, 51535, 51536,
    51540, 51541, 51542, 51544, 51548, 51549, 51551, 51552, 51553, 51554, 51555,
    51559, 51560, 51561, 51566, 51570, 51571, 51573, 51575, 51576, 51577, 51601,
    51630, 51631, 51632, 51636, 51637, 51638, 51639, 51640, 51645, 51646, 51647,
    51648, 51649, 51650, 51652, 51653, 51654, 51656
  )
}.freeze

counts = {}
ZIP_CODES_BY_STATE.each do |state, zip_codes|
  zip_code_query = zip_codes.split(',').map(&:strip).join(' OR ')
  query = %Q(
    (
      (kind_s:user && role_s:teacher) ||
      kind_s:HocSignup2015 ||
      kind_s:HocSignup2014 ||
      kind_s:CSEdWeekEvent2013 ||
      kind_s:Petition
    ) && (
      zip_code_s:(#{zip_code_query}) ||
      create_ip_postal_code_s:(#{zip_code_query})
    )
  )

  results = query_subscribed_contacts(q: query)
  puts "#{results.count} #{state} contacts"
  counts[state] = results.count

  export_contacts_to_csv results, "#{state.downcase}-contacts.csv"
end

puts 'Summary:'
counts.each do |state, count|
  puts "#{state}: #{count} contacts exported"
end
