#!/usr/bin/env ruby
# remove duplicate emails from a csv. See below for usage
require 'csv'
require 'set'

if ARGV.count < 3 || ARGV[0] == ARGV[-1]
  puts <<EOS
Usage: #{$0} mailing_list_in.csv other1.csv other2.csv ... mailing_list_out.csv
  Take a mailing_list_in.csv, remove all of the emails that are also in
  others.csv (multiple files can be removed), output in mailing_list_out.csv

  Don't use the same filename for input and output, that doesn't work.
EOS
  exit(-1)
end

in_path = ARGV[0]
remove_paths = ARGV[1..-2]
out_path = ARGV[-1]

# load the emails to remove
emails_to_remove = Set.new
remove_paths.each do |remove_path|
  emails_to_remove += CSV.read(remove_path, headers: true).map{|row| row['email']}
end

columns = nil
CSV.open(out_path, 'wb', headers: true) do |output_csv|
  CSV.read(in_path, headers: true).each do |input_row|
    unless columns
      columns = input_row.to_hash.keys
      output_csv << columns
    end
    next if emails_to_remove.include? input_row['email']
    output_csv << columns.map{|column| input_row[column]}
  end
end
