#!/usr/bin/env ruby
require_relative '../../../pegasus/src/env'
require 'cdo/solr'
require src_dir 'database'

raise "Usage: $0 'solr query'" unless ARGV.length == 1
solr_query = ARGV[0]

SOLR = Solr::Server.new(host: CDO.solr_server)

def export_contacts_to_csv(contacts, path)
  columns = nil

  CSV.open(path, 'wb') do |results|
    contacts.values.each do |contact|
      unless columns
        columns = contact.keys
        results << columns
      end
      results << columns.map{|column| contact[column]}
    end
  end
end

def query_contacts(params)
  fields = []
  fields = params[:fields] if params[:fields]

  [].tap do |results|
    SOLR.query(params.merge(rows: 10000, fl: ['email_s', 'name_s'] + fields)).each do |i|
      i = yield(i) if block_given?
      results << {email: i['email_s'].downcase.strip, name: i['name_s']}.merge(i.slice(*fields)) if i
    end
  end
end

UNSUBSCRIBERS = {}.tap do |results|
  DB[:contacts].where('unsubscribed_at IS NOT NULL').each do |i|
    email = i[:email].downcase.strip
    results[email] = true
  end
end
puts "#{UNSUBSCRIBERS.count} unsubscribers loaded."

recipients = {}.tap do |results|
  query_contacts(q: solr_query).each do |i|
    email = i[:email].downcase.strip
    results[email] = i unless UNSUBSCRIBERS[email]
  end
end
puts "#{recipients.count} recipients > mailing-list.csv"

export_contacts_to_csv recipients, 'mailing-list.csv'
