#!/usr/bin/env ruby
#
# This script caches database queries whose results are displayed at studio.code.org/admin/stats.
#
require File.expand_path('../../pegasus/src/env', __FILE__)
require src_dir 'database'
require 'cdo/hip_chat'
require 'cdo/properties'

DASHBOARD_REPORTING_DB_READONLY = sequel_connect(CDO.dashboard_reporting_db_reader, CDO.dashboard_reporting_db_reader)
PEGASUS_REPORTING_DB_READONLY = sequel_connect(CDO.pegasus_reporting_db_reader, CDO.pegasus_reporting_db_reader)

def main()
  return unless only_one_running?(__FILE__)

  users = DASHBOARD_REPORTING_DB_READONLY[:users]
  students = users.where(:user_type => 'student')
  teachers = users.where(:user_type => 'teacher')
  followers = DASHBOARD_REPORTING_DB_READONLY[:followers]
  prizes = DASHBOARD_REPORTING_DB_READONLY[:prizes]
  teacher_prizes = DASHBOARD_REPORTING_DB_READONLY[:teacher_prizes]
  teacher_bonus_prizes = DASHBOARD_REPORTING_DB_READONLY[:teacher_bonus_prizes]

  Properties.set(:admin_stats, {
    user_count: users.count,
    teacher_count: teachers.count,
    student_count: students.count,
    users_with_teachers: followers.distinct.count(:student_user_id),
    users_with_email: users.where('email <> ""').count,
    users_with_confirmed_email: users.where('confirmed_at IS NOT NULL').count,
    girls: students.where(:gender => 'f').count,
    boys: students.where(:gender => 'm').count,

    prizes_redeemed: prizes.where('user_id IS NOT NULL').group(:prize_provider_id).count,
    prizes_available: prizes.where('user_id IS NULL').group(:prize_provider_id).count,

    student_prizes_earned: users.where(:prize_earned => true).count,
    student_prizes_redeemed: prizes.where('user_id IS NOT NULL').count,
    student_prizes_available: prizes.where('user_id IS NULL').count,

    teacher_prizes_earned: users.where(:teacher_prize_earned => true).count,
    teacher_prizes_redeemed: teacher_prizes.where('user_id IS NOT NULL').count,
    teacher_prizes_available: teacher_prizes.where('user_id IS NULL').count,

    teacher_bonus_prizes_earned: users.where(:teacher_bonus_prize_earned => true).count,
    teacher_bonus_prizes_redeemed: teacher_bonus_prizes.where('user_id IS NOT NULL').count,
    teacher_bonus_prizes_available: teacher_bonus_prizes.where('user_id IS NULL').count,
  })
end

main()
