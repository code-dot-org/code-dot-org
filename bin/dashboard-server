#!/usr/bin/env ruby
require_relative '../deployment'

# Any arguments to bin/dashboard-server will get passed through to the rerun command, for example -b to run in background,
# which allows for pry debugging.
def main
  dirs = [deploy_dir('lib'), deploy_dir('shared/middleware'), deploy_dir('dashboard_legacy')]
  dirs += [pegasus_dir] if CDO.dashboard_enable_pegasus
  rerun = "rerun -p '**/*.{rb,ru,yml}' -d '#{dirs.join(',')}' -i '**/migrations/*.rb' -i 'test/**/*.rb' #{ARGV.join(' ')} --"
  pids = []

  unless CDO.use_my_apps
    # Note: This will report "apps-watcher Launch Failed" because it expects something
    # that continues to run.
    pids.push spawn("rerun -x -d #{apps_dir}/src --background -n apps-watcher -- rake package:apps")
  end

  Dir.chdir(dashboard_dir) do
    system "RAILS_ENV=#{CDO.rack_env} bundle exec #{rerun} thin start -a #{CDO.dashboard_host} -p #{CDO.dashboard_port}"
  end

  pids.each do |pid|
    puts "Stopping watcher #{pid}"
    Process.kill(:TERM, pid)
    Process.wait(pid)
  end
end

main
