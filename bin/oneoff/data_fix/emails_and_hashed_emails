#!/usr/bin/env ruby

# This script assures the invariants
#   user.email == user.email.strip.downcase
# and
#   user.hashed_email == User.hash_email(user.email.strip.downcase)
# for every user with a non-null, non-blank email.
#
# As of November 2016, the former invariant is violated for approximately 840
# users and the latter invariant is violated for approximately 150 users.

require_relative '../../../dashboard/config/environment'

# Fix violations of the invariant
#   user.email == user.email.strip.downcase
# by setting user.email.
all = false
User.with_deleted.
  where(user_type: 'teacher').
  where.not(email: nil).
  find_each do |user|
  normalized_email = user.email.strip.downcase
  next if user.email == normalized_email
  puts "DIFF: user.id: #{user.id}:, "\
    "user.email: #{user.email}, "\
    "user.email.downcase: #{normalized_email}"

  unless all
    print "Update? Y/S/A/Q: "
    response = gets.strip
  end
  if response == 'A'
    all = true
  end
  if all || response == 'Y'
    user.update!(email: normalized_email)
  elsif response == 'S'
    next
  else
    exit(-1)
  end
end

# Fix violations of the invariant
#   user.hashed_email == User.hash_email(user.email.strip.downcase)
# by setting user.hashed_email.
all = false
User.with_deleted.
  where(user_type: 'teacher').
  where.not(email: nil).
  where.not(email: '').
  find_each do |user|
  correct_hashed_email = User.hash_email(user.email)
  next if user.hashed_email == correct_hashed_email

  puts "DIFF: user.id: #{user.id}, "\
    "user.email: #{user.email}, "\
    "user.hashed_email: #{user.hashed_email}, "\
    "correct_hashed_email: #{correct_hashed_email}"

  unless all
    print "Update? Y/S/A/Q: "
    response = gets.strip
  end
  if response == 'A'
    all = true
  end
  if all || response == 'Y'
    user.update!(hashed_email: correct_hashed_email)
  elsif response == 'S'
    next
  else
    exit(-1)
  end
end
