#!/usr/bin/env ruby

require_relative '../../dashboard/config/environment'

ActiveRecord::Base.transaction do
  applications_emailed = []
  decision_entry_types = ['declined_email', 'waitlisted_email']
  puts "Sending decision emails for locked declined/waitlisted facilitator 1920 applications..."
  Pd::Application::Facilitator1920Application.find_each do |application|
    if application.locked? && Pd::Application::Facilitator1920Application::AUTO_EMAIL_STATUSES.include?(application.status)
      log = application.sanitize_status_timestamp_change_log
      if log.none? {|entry| decision_entry_types.include? entry[:title]}
        application.emails.unsent.destroy_all
        application.queue_email(application.status)
        applications_emailed << "id: #{application.id}, status: #{application.status}"
      end
    end
  rescue => exception
    puts "Failure on application #{application.id}:\n#{exception.message}\n#{application&.errors&.messages}"
    raise
  end

  puts applications_emailed
  puts "Successfully queued decision emails for #{applications_emailed.length} applications"

  # This script is a dry-run until we comment out this last line
  raise ActiveRecord::Rollback.new, "Intentional rollback"
end
