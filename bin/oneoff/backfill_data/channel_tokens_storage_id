#!/usr/bin/env ruby

# This script populates the storage_id column of the channel_tokens table.
# It is based off of the equivalent channel_tokens_storage_app_id script

require_relative '../../../dashboard/config/environment'
require_relative '../../../shared/middleware/helpers/storage_id'

slice = 0

ChannelToken.find_in_batches(batch_size: 500) do |channel_tokens_batch|
  puts "PROCESSING: slice #{slice}..."
  ActiveRecord::Base.transaction do
    channel_tokens_batch.each do |channel_token|
      next unless channel_token.storage_id.nil?
      storage_id, _storage_app_id = storage_decrypt_channel_id(channel_token.channel)
      channel_token.storage_id = storage_id
      save_result = channel_token.save(touch: false)
      raise "ERROR: ID #{channel_token.id}. STORAGE_ID: #{storage_id}." unless save_result
    end
  end
  puts "PROCESSED: slice #{slice}..."

  slice += 1
end
