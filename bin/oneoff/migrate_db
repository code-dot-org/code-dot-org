#!/usr/bin/env ruby

# One-off script to promote a read-replica database to master and cleanly migrate
# all frontend applications to the new hostname.
# Total downtime during the migration will be under one minute.

require 'json'
require 'uri'
require 'tempfile'

# Update database endpoint Chef Attributes in the environment.
def update_endpoints(new_hostname, environment)
  puts "Updating #{environment} DB endpoints to #{new_hostname}..."
  environment_json = JSON.parse(`knife environment show #{environment} --format json`)
  reader, writer = %w(reader writer).map do |db|
    URI.parse(environment_json['override_attributes']['cdo-secrets']["db_#{db}"]).tap do |uri|
      uri.hostname = new_hostname
      environment_json['override_attributes']['cdo-secrets']["db_#{db}"] = uri.to_s
    end
  end
  Tempfile.open(['environment', '.json']) do |tmp|
    File.write(tmp.path, environment_json.to_json)
    `knife environment from file #{tmp.path} -E #{environment}`
  end
  [reader, writer]
end

# Executes `cmd` in a subprocess, streaming the output to stdout.
def run(cmd)
  IO.popen(cmd) {|output| output.each {|line| puts line.chomp}}
end

# Use the `pdsh` utility and `ls_frontend_servers` script to 'fan out' a command via ssh to all front-ends.
def fanout(cmd)
  puts "Running #{cmd}..."
  servers = JSON.parse(`../bin/ls_frontend_servers -j`).values
  run "pdsh -w #{servers.join(',')} -R ssh '#{cmd}'"
end

def main
  if ARGV.length != 2
    puts "Usage: #{$0} [db_host] [environment]"
    exit 1
  end

  db_host = ARGV[0]
  environment = ARGV[1]

  # 1. Update application code to point to new DB instance endpoint.
  # (Will not take effect until chef-client is called.)
  _, writer = update_endpoints(db_host, environment)

  # 2. Stop applications on all frontends. [live-site downtime begins]
  puts 'Endpoints updated. Press enter to stop applications [begin live-site downtime]...'
  gets

  fanout 'sudo service dashboard stop; sudo service pegasus stop'

  # 3. Promote the new DB instance to master.
  puts "Promoting new DB instance to master..."
  run "echo 'CALL mysql.rds_reset_external_master();' | mysql -u'#{writer.user}' -p'#{writer.password}' -h '#{writer.host}'"

  # 4. Start applications on all frontends. [live-site downtime ends]
  fanout 'sudo chef-client'
end

main
