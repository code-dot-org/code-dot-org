#!/usr/bin/env ruby

require_relative '../../../dashboard/config/environment'

CDO.log = Logger.new(STDOUT)

SURVEY_YEAR = '2019-2020'.freeze

GRADES_MAP = {
  'All Ungraded' => 'UG',
  'Prekindergarten' => 'PK',
  'Transitional Kindergarten' => 'PK',
  'Kindergarten' => 'KG',
  'Transitional 1st grade' => 'KG',
  '1st grade' => '01',
  '2nd grade' => '02',
  '3rd grade' => '03',
  '4th grade' => '04',
  '5th grade' => '05',
  '6th grade' => '06',
  '7th grade' => '07',
  '8th grade' => '08',
  '9th grade' => '09',
  '10th grade' => '10',
  '11th grade' => '11',
  '12th grade' => '12'
}.freeze

COMMUNITY_TYPE_MAP = {
  '11' => 'city_large',
  '12' => 'city_midsize',
  '13' => 'city_small',
  '21' => 'suburban_large',
  '22' => 'suburban_midsize',
  '23' => 'suburban_small',
  '31' => 'town_fringe',
  '32' => 'town_distant',
  '33' => 'town_remote',
  '41' => 'rural_fringe',
  '42' => 'rural_distant',
  '43' => 'rural_remote'
}.freeze

AWS::S3.process_file('cdo-nces', "2019-2020/pss/final_schools_private.csv") do |filename|
  SchoolStatsByYear.merge_from_csv(filename, {col_sep: ",", headers: true, quote_char: "\x00", encoding: 'UTF-8'}, dry_run: false) do |row|
    {
      school_id:          row['School ID - NCES Assigned [Private School] Latest available year'],
      school_year:        SURVEY_YEAR,
      grades_offered_lo:  row['Lowest Grade Taught [Private School] 2019-20'].presence.try {|v| GRADES_MAP[v]},
      grades_offered_hi:  row['Highest Grade Taught [Private School] 2019-20'].presence.try {|v| GRADES_MAP[v]},
      grade_pk_offered:   row['Prekindergarten Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_kg_offered:   row['Kindergarten Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_01_offered:   row['Grade 1 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_02_offered:   row['Grade 2 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_03_offered:   row['Grade 3 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_04_offered:   row['Grade 4 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_05_offered:   row['Grade 5 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_06_offered:   row['Grade 6 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_07_offered:   row['Grade 7 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_08_offered:   row['Grade 8 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_09_offered:   row['Grade 9 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_10_offered:   row['Grade 10 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_11_offered:   row['Grade 11 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_12_offered:   row['Grade 12 Students [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? '0' : '1'},
      grade_13_offered:   false,
      virtual_status:     'MISSING',
      students_total:     row['Total Students (Ungraded & K-12) [Private School] 2019-20'].presence.try {|v| v.to_i <= 0 ? nil : v.to_i},
      student_am_count:   row['American Indian/Alaska Native Students [Private School] 2019-20'].presence.try {|v| v.to_i < 0 ? nil : v.to_i},
      student_as_count:   row['Asian or Asian/Pacific Islander Students [Private School] 2019-20'].presence.try {|v| v.to_i < 0 ? nil : v.to_i},
      student_hi_count:   row['Hispanic Students [Private School] 2019-20'].presence.try {|v| v.to_i < 0 ? nil : v.to_i},
      student_bl_count:   row['Black or African American Students [Private School] 2019-20'].presence.try {|v| v.to_i < 0 ? nil : v.to_i},
      student_wh_count:   row['White Students [Private School] 2019-20'].presence.try {|v| v.to_i < 0 ? nil : v.to_i},
      student_hp_count:   row['Nat. Hawaiian or Other Pacific Isl. Students [Private School] 2019-20'].presence.try {|v| v.to_i < 0 ? nil : v.to_i},
      student_tr_count:   row['Two or More Races Students [Private School] 2019-20'].presence.try {|v| v.to_i < 0 ? nil : v.to_i},
      title_i_status:     nil,
      frl_eligible_total: nil
    }
  end
end

AWS::S3.process_file('cdo-nces', "2019-2020/pss/final_locale_private.csv") do |filename|
  SchoolStatsByYear.merge_from_csv(filename, {col_sep: ",", headers: true, quote_char: "\x00", encoding: 'ISO-8859-1:UTF-8'}, dry_run: false) do |row|
    {
      school_id:      row['PPIN'],
      school_year:    SURVEY_YEAR,
      community_type: row['LOCALE'].presence.try {|v| COMMUNITY_TYPE_MAP[v]},
    }
  end
end
