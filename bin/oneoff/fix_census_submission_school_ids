#!/usr/bin/env ruby

# This script is to fix the bad data created when we accidentally stopped copying the
# nces school id into the census form on the HoC signup page. That bug was fixed in
# https://github.com/code-dot-org/code-dot-org/pull/19251
# The result was many census_submissions that were incorrectly associated with
# the same school_info, namely the one with just the country set to US.
# Luckily the submitters name and email were still propogated correctly. We can use
# that data to match to the Hoc Signup form submission in the pegsus FORMS table.
# If we find a unique school id there then we can associate it with the census submission.

require_relative '../../dashboard/config/environment'
include SchoolInfoDeduplicator

# 7220 is the id of the school_info with just country=US set.
# It is the record that got used when we failed to pass along the school id
# to the census form on HoC signup.
# If running someplace other than prod you will need to change this value.
@empty_school_info_id = 7220

Census::CensusSubmission.
  joins("join census_submissions_school_infos on census_submissions_school_infos.census_submission_id = census_submissions.id").
  where("census_submissions_school_infos.school_info_id=#{@empty_school_info_id}").
  each do |submission|
  puts "Processing submission #{submission.id}"
  # Find the FORMS rows with the same email and name
  forms = DB[:forms].where(email: submission.submitter_email_address, name: submission.submitter_name, kind: "HocSignup2017")
  school_ids = forms.map  do |form|
    puts "\tReading data from form #{form[:id]}"
    data = JSON.parse(form[:data])
    data['nces_school_s']
  end
  puts "\tFound school ids: #{school_ids}"
  school_id = school_ids[0]
  #verify all are the same
  if school_ids.all?(school_id)
    attrs = {school_id: school_id}
    school_info = get_duplicate_school_info(attrs) || SchoolInfo.new(attrs)
    puts "\tSetting school_info to #{school_info.id}"
    school_infos = [school_info]
    submission.update(school_infos: school_infos)
    submission.save!
    DASHBOARD_DB[:census_submissions_school_infos].where(census_submission_id: submission.id, school_info_id: @empty_school_info_id).delete
  else
    puts "Found multiple school_ids for submission #{submission.id}: #{school_ids}"
  end
end
