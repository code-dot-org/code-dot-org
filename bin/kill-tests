#!/usr/bin/env ruby

# Kill an entire test run on the test machine, regardless of what step it is
# currently running.

require_relative '../deployment'
require 'cdo/chat_client'
require 'cdo/only_one'

SUCCESS_MSG = 'successfully killed all tests'.freeze
FAIL_MSG = 'failed to kill all tests'.freeze

# @return [Boolean] Returns whether tests are currently running via pgrep.
def tests_running?
  !`pgrep -f runner.rb`.empty? || !`pgrep -f cucumber`.empty? || !`pgrep -f 'rake test'`.empty?
end

# Prints to the console and logs to ChatClient a message.
# @param message [String] The message to print and chat.
def print_and_chat(message)
  puts message
  ChatClient.log message
end

def kill_tests
  # Kill dashboard unit tests.
  `pkill -f 'rake test'`

  # Kill ui tests.
  `pkill -f runner.rb`
  `pkill -f cucumber`
end

def main
  unless [:adhoc, :development, :test].include? rack_env
    puts "Cannot kill tests on #{rack_env}..."
    return
  end

  unless tests_running?
    puts "No tests are currently running on #{rack_env}..."
    return
  end

  print "Kill tests on #{rack_env}? (Y/N): "
  return unless gets.chomp.upcase == 'Y'

  print_and_chat "killing tests via #{$0}"
  kill_tests
  sleep 2

  unless tests_running?
    print_and_chat SUCCESS_MSG
    exit 0
  end

  print_and_chat "trying again"
  kill_tests
  sleep 5

  msg = tests_running? ? FAIL_MSG : SUCCESS_MSG
  print_and_chat msg
end

main if only_one_running?(__FILE__)
