#!/usr/bin/env ruby
require_relative '../../pegasus/src/env'
require 'cdo/solr'
require src_dir 'database'

SOLR = Solr::Server.new(host: CDO.solr_server)

def export_contacts_to_csv(contacts, path)
  columns = nil

  CSV.open(path, 'wb') do |results|
    contacts.values.each do |contact|
      unless columns
        columns = contact.keys
        results << columns
      end
      results << columns.map{|column| contact[column]}
    end
  end
end

def query_contacts(params)
  fields = params[:fields] if params[:fields]

  [].tap do |results|
    SOLR.query(params.merge(rows: 10000)).each do |i|
      i = yield(i) if block_given?
      results << {email: i['email_s'].downcase.strip, name: i['name_s']}.merge(i.slice(*fields)) if i
    end
  end
end

def query_contacts_with_location(params)
  raise "there must be a query" if params[:q].nil?

  params = params.dup
  params[:q] += ' && ' + location_query if location_query
  params[:fq] = location_filter_query

  query_contacts(params)
end

UNSUBSCRIBERS = {}.tap do |results|
  DB[:contacts].where('unsubscribed_at IS NOT NULL').each do |i|
    email = i[:email].downcase.strip
    results[email] = true
  end
end
puts "#{UNSUBSCRIBERS.count} unsubscribers loaded."

HOC_SIGNUP_COUNTRIES = ["Guatemala",
                        "El Salvador",
                        "Costa Rica",
                        "Nicaragua",
                        "Belize",
                        "Panama",
                        "Cuba",
                        "Dominican Republic",
                        "Venezuela",
                        "Colombia",
                        "Ecuador",
                        "Peru",
                        "Bolivia",
                        "Paraguay",
                        "Uruguay",
                        "Chile",
                        "Argentina",
                        "Puerto Rico"]

CSEDWEEK_COUNTRIES = ["gt",
                      "sv",
                      "cr",
                      "ni",
                      "bz",
                      "pa",
                      "cu",
                      "do",
                      "ve",
                      "co",
                      "ec",
                      "pe",
                      "bo",
                      "py",
                      "uy",
                      "cl",
                      "ar",
                      "pr"]

HOC_SIGNUP_QUERY = HOC_SIGNUP_COUNTRIES.
  map {|country| %Q|(kind_s:"HocSignup2014" && location_country_s:"#{country}")| }.
  join(" || ")
CSEDWEEK_QUERY = CSEDWEEK_COUNTRIES.
  map {|country| %Q|(kind_s:"CSEdWeekEvent2013" && country_s:"#{country}")| }.
  join(" || ")

QUERY = HOC_SIGNUP_QUERY + " || " + CSEDWEEK_QUERY

puts QUERY

TEACHERS = {}.tap do |results|
  query_contacts(q: QUERY).each do |i|
    email = i[:email].downcase.strip
    results[email] = i unless UNSUBSCRIBERS[email]
  end
end
puts "#{TEACHERS.count} teachers loaded."

export_contacts_to_csv TEACHERS, "hoc-2015-latam.csv"
