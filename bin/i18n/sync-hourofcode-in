#!/usr/bin/env ruby
require 'fileutils'

# Pulls in all strings that need to be translated. Pulls source
# files from pegasus/sites.v3/hourofcode.com and collects them
# to a single source folder i18n/locales/source.

def pull_in_files_for_translation
  loc_dir = "i18n/locales/source/hourofcode"
  Dir.mkdir(loc_dir) unless Dir.exist?(loc_dir)
  orig_file = "pegasus/sites.v3/hourofcode.com/i18n/en.yml"
  FileUtils.cp(orig_file, loc_dir)

  orig_dir = Dir["pegasus/sites.v3/hourofcode.com/public/*.{md,md.partial}"]
  orig_dir.each do |file|
    loc_dir = "i18n/locales/source/hourofcode"
    if File.extname(file) == '.partial'
      loc_dir = "#{loc_dir}/#{File.basename(file, '.partial')}"
    end
    FileUtils.cp(file, loc_dir)
  end

  orig_dir = Dir["pegasus/sites.v3/hourofcode.com/public/how-to/*.{md,md.partial}"]
  orig_dir.each do |file|
    loc_dir = "i18n/locales/source/hourofcode/how-to"
    Dir.mkdir(loc_dir) unless Dir.exist?(loc_dir)
    if File.extname(file) == '.partial'
      loc_dir = "#{loc_dir}/#{File.basename(file, '.partial')}"
    end
    FileUtils.cp(file, loc_dir)
  end

  orig_dir = Dir["pegasus/sites.v3/hourofcode.com/public/promote/*.{md,md.partial}"]
  orig_dir.each do |file|
    loc_dir = "i18n/locales/source/hourofcode/promote"
    Dir.mkdir(loc_dir) unless Dir.exist?(loc_dir)
    if File.extname(file) == '.partial'
      loc_dir = "#{loc_dir}/#{File.basename(file, '.partial')}"
    end
    FileUtils.cp(file, loc_dir)
  end
end

pull_in_files_for_translation
