#
# Your crowdin's credentials
#
"project_id" : "346087"
"base_path_env": "I18N_SOURCE_DIR"
"preserve_hierarchy": true

# API Credentials must be loaded from a separate identity file. See
# https://support.crowdin.com/configuration-file/#split-project-configuration-and-api-credentials
"api_token" : ""

#
# Files configuration
#
files: [
 {
  #
  # Source files filter
  # e.g. "/resources/en/*.json"
  #
  "source" : "/**/*.yml",

  #
  # where translations live
  # e.g. "/resources/%two_letters_code%/%original_file_name%"
  #
  "translation" : "/%language%/**/%original_file_name%",

  #
  # files or directories for ignore
  # e.g. ["/**/?.txt", "/**/[0-9].txt", "/**/*\?*.txt"]
  #
  # animations content is handled by the `I18n::Resources::Apps::Animations::SyncUp` class
  # blockly-core content is handled by the `I18n::Resources::Apps::ExternalSources::SyncUp` class
  # blockly-mooc content is handled by the `I18n::Resources::Apps::Labs::SyncUp` class
  # course_content content is handled by the `I18n::Resources::Dashboard::CourseContent::SyncUp` class
  # curriculum_content content is handled by the `I18n::Resources::Dashboard::CurriculumContent::SyncUp` class
  # dashboard content is handled by the `I18n::Resources::Dashboard::*::SyncUp` classes
  # docs content is handled by the `I18n::Resources::Dashboard::Docs::SyncUp` class
  # external-sources content is handled by the `I18n::Resources::Apps::ExternalSources::SyncUp` class
  # hourofcode content is handled by the `I18n::Resources::Pegasus::HourOfCode::SyncUp` class
  # markdown content is handled by the `I18n::Resources::Pegasus::Markdown::SyncUp` class
  # pegasus content is handled by the `I18n::Resources::Pegasus::Pegasus::SyncUp` class
  # standards content is handled by the `I18n::Resources::Dashboard::Standards::SyncUp` class
  "ignore" : [
    "/animations/**",
    "/blockly-core/**",
    "/blockly-mooc/**",
    "/course_content/**",
    "/curriculum_content/**",
    "/dashboard/**",
    "/docs/**",
    "/external-sources/**",
    "/hourofcode/**",
    "/standards/**",
  ],

  #
  # The parameter "update_option" is optional. If it is not set, translations for changed strings will be lost. Useful for typo fixes and minor changes in source strings.
  # e.g. "update_as_unapproved" or "update_without_changes"
  #
  "update_option" : "update_as_unapproved"
 }, {
  # config for json content
  "source" : "/**/*.json",
  "translation" : "/%language%/**/%original_file_name%",
  "ignore" : [
    "/animations/**",
    "/blockly-core/**",
    "/blockly-mooc/**",
    "/course_content/**",
    "/curriculum_content/**",
    "/dashboard/**",
    "/docs/**",
    "/external-sources/**",
    "/hourofcode/**",
    "/standards/**",
  ],
  "update_option" : "update_as_unapproved"
 }
]
