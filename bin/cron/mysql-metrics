#!/usr/bin/env ruby
require_relative '../../deployment'
require 'cdo/db'
require 'aws-sdk'

# Report details MySQL metrics to CloudWatch.
# Intended to be run at 1-minute intervals.

STATUS_CACHE = pegasus_dir('cache', 'mysql-status-cache.json')

status = PEGASUS_DB.fetch('show global status').all.map{|x| [x[:Variable_name], x[:Value]]}.to_h
old_status = File.file?(STATUS_CACHE) ? JSON.parse(IO.read(STATUS_CACHE)) : {}
IO.write STATUS_CACHE, JSON.pretty_generate(status)

const_keys = %w(
Audit_log_current_size
Audit_log_event_max_drop_size
Audit_log_total_size
Innodb_buffer_pool_bytes_data
Innodb_buffer_pool_bytes_dirty
Innodb_buffer_pool_pages_data
Innodb_buffer_pool_pages_dirty
Innodb_buffer_pool_pages_flushed
Innodb_buffer_pool_pages_free
Innodb_buffer_pool_pages_misc
Innodb_buffer_pool_pages_total
Innodb_data_pending_fsyncs
Innodb_data_pending_reads
Innodb_data_pending_writes
Innodb_num_open_files
Innodb_os_log_pending_fsyncs
Innodb_os_log_pending_writes
Innodb_row_lock_current_waits
Innodb_row_lock_time_avg
Innodb_row_lock_time_max
Key_blocks_not_flushed
Key_blocks_unused
Key_blocks_used
Last_query_cost
Last_query_partial_plans
Max_used_connections
Not_flushed_delayed_rows
Open_files
Open_streams
Open_table_definitions
Open_tables
Opened_files
Opened_table_definitions
Opened_tables
Prepared_stmt_count
Qcache_free_blocks
Qcache_free_memory
Qcache_queries_in_cache
Qcache_total_blocks
Threads_cached
Threads_connected
Threads_created
Threads_running
)

constants = const_keys.map do |key|
  [key, status[key]]
end.to_h

counter = 'Uptime_since_flush_status'
exit 0 unless status[counter] && old_status[counter]
interval = status[counter].to_i - old_status[counter].to_i
exit 0 if interval < 1

interval_keys = %w(
Aborted_clients
Aborted_connects
Audit_log_events
Audit_log_events_filtered
Audit_log_events_lost
Audit_log_events_written
Audit_log_write_waits
Binlog_cache_disk_use
Binlog_cache_use
Binlog_stmt_cache_disk_use
Binlog_stmt_cache_use
Bytes_received
Bytes_sent
Com_admin_commands
Com_alter_db
Com_alter_db_upgrade
Com_alter_event
Com_alter_function
Com_alter_procedure
Com_alter_server
Com_alter_table
Com_alter_tablespace
Com_alter_user
Com_analyze
Com_assign_to_keycache
Com_begin
Com_binlog
Com_call_procedure
Com_change_db
Com_change_master
Com_check
Com_checksum
Com_commit
Com_create_db
Com_create_event
Com_create_function
Com_create_index
Com_create_procedure
Com_create_server
Com_create_table
Com_create_trigger
Com_create_udf
Com_create_user
Com_create_view
Com_dealloc_sql
Com_delete
Com_delete_multi
Com_do
Com_drop_db
Com_drop_event
Com_drop_function
Com_drop_index
Com_drop_procedure
Com_drop_server
Com_drop_table
Com_drop_trigger
Com_drop_user
Com_drop_view
Com_empty_query
Com_execute_sql
Com_flush
Com_get_diagnostics
Com_grant
Com_ha_close
Com_ha_open
Com_ha_read
Com_help
Com_insert
Com_insert_select
Com_install_plugin
Com_kill
Com_load
Com_lock_tables
Com_optimize
Com_preload_keys
Com_prepare_sql
Com_purge
Com_purge_before_date
Com_release_savepoint
Com_rename_table
Com_rename_user
Com_repair
Com_replace
Com_replace_select
Com_reset
Com_resignal
Com_revoke
Com_revoke_all
Com_rollback
Com_rollback_to_savepoint
Com_savepoint
Com_select
Com_set_option
Com_show_authors
Com_show_binlog_events
Com_show_binlogs
Com_show_charsets
Com_show_collations
Com_show_contributors
Com_show_create_db
Com_show_create_event
Com_show_create_func
Com_show_create_proc
Com_show_create_table
Com_show_create_trigger
Com_show_databases
Com_show_engine_logs
Com_show_engine_mutex
Com_show_engine_status
Com_show_errors
Com_show_events
Com_show_fields
Com_show_function_code
Com_show_function_status
Com_show_grants
Com_show_keys
Com_show_master_status
Com_show_ndb_status
Com_show_new_master
Com_show_open_tables
Com_show_plugins
Com_show_privileges
Com_show_procedure_code
Com_show_procedure_status
Com_show_processlist
Com_show_profile
Com_show_profiles
Com_show_relaylog_events
Com_show_slave_hosts
Com_show_slave_status
Com_show_status
Com_show_storage_engines
Com_show_table_status
Com_show_tables
Com_show_triggers
Com_show_variables
Com_show_warnings
Com_signal
Com_slave_start
Com_slave_stop
Com_stmt_close
Com_stmt_execute
Com_stmt_fetch
Com_stmt_prepare
Com_stmt_reprepare
Com_stmt_reset
Com_stmt_send_long_data
Com_truncate
Com_uninstall_plugin
Com_unlock_tables
Com_update
Com_update_multi
Com_xa_commit
Com_xa_end
Com_xa_prepare
Com_xa_recover
Com_xa_rollback
Com_xa_start
Connection_errors_accept
Connection_errors_internal
Connection_errors_max_connections
Connection_errors_peer_addr
Connection_errors_select
Connection_errors_tcpwrap
Connections
Created_tmp_disk_tables
Created_tmp_files
Created_tmp_tables
Firewall_access_denied
Firewall_access_granted
Firewall_cached_entries
Flush_commands
Handler_commit
Handler_delete
Handler_discover
Handler_external_lock
Handler_mrr_init
Handler_prepare
Handler_read_first
Handler_read_key
Handler_read_last
Handler_read_next
Handler_read_prev
Handler_read_rnd
Handler_read_rnd_next
Handler_rollback
Handler_savepoint
Handler_savepoint_rollback
Handler_update
Handler_write
Innodb_buffer_pool_read_ahead
Innodb_buffer_pool_read_ahead_evicted
Innodb_buffer_pool_read_ahead_rnd
Innodb_buffer_pool_read_requests
Innodb_buffer_pool_reads
Innodb_buffer_pool_wait_free
Innodb_buffer_pool_write_requests
Innodb_data_fsyncs
Innodb_data_read
Innodb_data_reads
Innodb_data_writes
Innodb_data_written
Innodb_dblwr_pages_written
Innodb_dblwr_writes
Innodb_log_waits
Innodb_log_write_requests
Innodb_log_writes
Innodb_os_log_fsyncs
Innodb_os_log_written
Innodb_pages_created
Innodb_pages_read
Innodb_pages_written
Innodb_row_lock_time
Innodb_row_lock_waits
Innodb_rows_deleted
Innodb_rows_inserted
Innodb_rows_read
Innodb_rows_updated
Innodb_truncated_status_writes
Key_read_requests
Key_reads
Key_write_requests
Key_writes
Qcache_hits
Qcache_inserts
Qcache_lowmem_prunes
Qcache_not_cached
Queries
Questions
Select_full_join
Select_full_range_join
Select_range
Select_range_check
Select_scan
Slow_launch_threads
Slow_queries
Sort_merge_passes
Sort_range
Sort_rows
Sort_scan
Table_locks_immediate
Table_locks_waited
Table_open_cache_hits
Table_open_cache_misses
Table_open_cache_overflows
Tc_log_page_waits
)

intervals = interval_keys.map do |key|
  [key, (status[key].to_i - old_status[key].to_i)]
end.to_h

metrics = (constants.merge(intervals)).map do |key, value|
  {
    metric_name: key,
    dimensions: [
      {
        name: "Environment",
        value: rack_env
      },
    ],
    timestamp: Time.now,
    value: value.to_f,
    unit: "Count",
  }
end

batches = []
current_batch = []
batch_size = 0
# Chunk metrics into max-20k or 20-count API-call batches.
metrics.each do |metric|
  size = JSON.generate(metric).bytesize
  if current_batch.length >= 20 || batch_size + size > 1024 * 20
    batches << current_batch
    current_batch = []
    batch_size = 0
  end
  current_batch << metric
  batch_size += size
end
batches << current_batch

batches.each do |batch|
  Aws::CloudWatch::Client.new.put_metric_data(
    namespace: 'MySQL',
    metric_data: batch
  )
end
