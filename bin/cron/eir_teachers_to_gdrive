#!/usr/bin/env ruby
require_relative 'only_one'
abort 'Script already running' unless only_one_running?(__FILE__)

require_relative '../../dashboard/config/environment'
require 'cdo/google/sheet'

#
# Uses a Google Cloud service account to write enrollment data for EIR workshops into
# a spreadsheet in Google Drive (with permissions locked down to our organization).
#

EARLIEST_WORKSHOP_END_DATE = Date.new(2022, 5, 1)

def get_rows
  # Seed results array with a header row
  results = [
    [
      "First Name",
      "Last Name",
      "Email",
      "Alternate Email",
      "District Name",
      "School",
      "Scholarship Status"
    ]
  ]

  # We want to export all teachers enrolled in CSP 5-day summer workshops who have scholarship_status = yes_eir

  potential_workshops = Pd::Workshop.
    where(course: Pd::SharedWorkshopConstants::COURSE_CSP, subject: Pd::SharedWorkshopConstants::SUBJECT_SUMMER_WORKSHOP).
    scheduled_end_on_or_after(EARLIEST_WORKSHOP_END_DATE).
    pluck(:id)

  Pd::Enrollment.
    where(pd_workshop_id: potential_workshops).
    joins('INNER JOIN pd_scholarship_infos ON pd_scholarship_infos.user_id = pd_enrollments.user_id AND pd_scholarship_infos.scholarship_status = "yes_eir"').
    find_each do |enrollment|
      results << [
        enrollment.first_name,
        enrollment.last_name,
        enrollment.email,
        enrollment.application&.form_data_hash&.[]('alternateEmail'),
        enrollment.school_info&.school_district_name,
        enrollment.school_name,
        enrollment.scholarship_status
      ]
    end

  results
end

def main
  sheet = Google::Sheet.new CDO.eir_teacher_enrollments_gsheet_key
  sheet.export(tab_name: 'EIR Teacher Tracker', rows: get_rows)
end

main
