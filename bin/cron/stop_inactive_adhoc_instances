#!/usr/bin/env ruby
require_relative 'only_one'
abort 'Script already running' unless only_one_running?(__FILE__)

# This script stops AWS EC2 instances being used to run adhoc environments,
# reporting a list of all stopped instances to ChatClient.

require_relative '../../deployment'

require 'aws-sdk-ec2'
require 'cdo/chat_client'

dry_run = !rack_env?(:production)

adhocs = Aws::EC2::Resource.new.instances(
  filters: {
    'tag:environment' => 'adhoc',
    'tag:aws:cloudformation:logical-id' => 'WebServer',
    'instance-state-name' => 'running'
  }.map {|k, v| {name: k, values: [v]}}
).reject do |adhoc|
  # Exclude instances with disableApiTermination == true.
  adhoc.describe_attribute(attribute: 'disableApiTermination').
    disable_api_termination.value
end

if adhocs.any?
  msg = "Stopping #{adhocs.length} adhoc instances:\n" +
        adhocs.map {|a| a.tags.detect {|t| t.key == 'Name'}&.value}.join("\n")
  ChatClient.message 'adhoc', msg

  Aws::EC2::Instance::Collection.new([adhocs]).batch_stop(dry_run: dry_run)
end
