#!/usr/bin/env ruby
# Updates a contact's email address in forms so it will be reflected in solr and in future bulk emails
# The change will be reflected in solr when the process-forms cron job runs (every minute)
#
# Usage: update-contact-email old_email new_email

require_relative '../deployment'
require 'json'
require 'cdo/db'

def update_form_data(raw, new_email)
  json = JSON.parse raw
  json[:email_s] = new_email
  json.to_s
end

def update_email(old_email, new_email)
  forms = PEGASUS_DB[:forms].where(email: old_email).all
  puts "Email #{old_email} found on #{forms.length} forms:"
  forms.each do |form|
    puts "  #{form[:id]}: #{form[:kind]}"
  end
  puts "Update #{old_email} with #{new_email}? (y/N)"

  unless STDIN.readline.strip.downcase == 'y'
    puts 'Canceled.'
    exit
  end

  PEGASUS_DB.transaction do
    forms.each do |form|
      new_data = update_form_data(form[:data], new_email)
      PEGASUS_DB[:forms].where(id: form[:id]).update(email: new_email, data: new_data, indexed_at: nil)
    end
  end

  puts
  puts 'Updated.'
end

if ARGV.count != 2
  puts <<EOS
Usage: #{$0} old_email_address new_email_address
  Updates all form data from the old_email_address with the new one.
EOS
  exit(-1)
end
old_email, new_email = ARGV
update_email(old_email, new_email)
