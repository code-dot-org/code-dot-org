-# Locals: current_user, loc_prefix, [session_pairings]
- if current_user
  .header_button.header_user.user_menu
    - if current_user.can_pair? && session_pairings.present?
      %i.fa.fa-users
      %span= I18n.t("#{loc_prefix}label", username: I18n.t("#{loc_prefix}team"))
    - else
      - short_name = ERB::Util.h(current_user.short_name)
      %span.user_name{'data-id': current_user.id, 'data-shortname': short_name}= I18n.t("#{loc_prefix}label", username: short_name)
    &nbsp;
    %i.user_menu_arrow_down{class: "fa fa-caret-down"}
    %i.user_menu_arrow_up{class: "fa fa-caret-up", style: "display: none"}
    .user_options{style: 'display: none'}
      - if current_user.can_pair?
        - if session_pairings.present?
          = link_to '#', {id: 'pairing_link', style: 'display: none'} do
            %i.fa.fa-user-plus
            = I18n.t("#{loc_prefix}pair_programming")
            .pairing_summary
              #{I18n.t("#{loc_prefix}driver")}:
              = h(current_user.short_name)
              - session_pairings.map do |id|
                %br
                #{I18n.t("#{loc_prefix}navigator")}:
                = h(User.find(id).short_name)
        - else
          = link_to '#', {id: 'pairing_link', style: 'display: none'} do
            %i.fa.fa-user-plus
            = I18n.t("#{loc_prefix}pair_programming")
      %a.linktag#user-edit{href: CDO.studio_url('users/edit')}= I18n.t("#{loc_prefix}settings")
      %a.linktag#user-signout{href: CDO.studio_url('users/sign_out')}= I18n.t("#{loc_prefix}logout")
- else
  %a.linktag{href: CDO.studio_url('users/sign_in'), class: 'button-signin', id: 'signin_button'}
    .header_button.header_user
      %span= I18n.t("#{loc_prefix}signin")
:javascript
  // Use function closure to avoid cluttering global namespace.
  (function() {
    // Ideally would use environment_specific_cookie_name, but that's not currently
    // available to us in pegasus
    var cookieKey = '#{'_shortName' + (rack_env?(:production) ? '' : "_#{rack_env}")}';
    // Share cookie with top-level domain.
    var topLevelDomain = document.location.hostname.split('.').slice(-2).join('.');
    var cookieMeta = "path=/;domain=" + topLevelDomain;

    // Provide current_user.short_name to cached pages via session cookie.
    // There is apps code that also depends on this query-selector, so if changes are made
    // here we should be sure to also update other locations.
    var nameSpan = document.querySelector('.header_button.header_user.user_menu .user_name');
    if (nameSpan) {
      var dataName = nameSpan.dataset.shortname;
      var id = nameSpan.dataset.id;
      var cookieMatch = document.cookie.match('(^|;) ?' + cookieKey + '=([^;]*)(;|$)');
      var storedName = cookieMatch && cookieMatch[2];
      if (storedName && !id) {
        nameSpan.innerHTML = nameSpan.innerHTML.replace(dataName, storedName);
      }
    }

    function hideUserOptions() {
      $('.user_options').slideUp();
      $('.user_menu_arrow_down').show();
      $('.user_menu_arrow_up').hide();
      $(document).off('click', hideUserOptions);
    }
    $(document).ready(function() {
      $('.user_menu').click(function (e) {
        if ($('.user_options').is(':hidden')) {
          e.stopPropagation();
          $('.user_options').slideDown();
          $('.user_menu_arrow_down').hide();
          $('.user_menu_arrow_up').show();
          $(document).on('click', hideUserOptions);

          $("#hamburger-icon").removeClass('active');
          $('#hamburger #hamburger-contents').slideUp();
        }
      });
      $('.user_options').click(function (e) {
        e.stopPropagation(); // Clicks inside the popup shouldn't close it
      });
      $('.user_options a:last').click(function (e) {
        // this partial can be on non-dashboard pages.
        if (typeof dashboard !== 'undefined') {
          dashboard.clientState.reset();
        } else {
          // Keep in sync with clientState#reset.
          try {
            sessionStorage.clear();
          } catch (e) {}
        }
      });
    });

    if (typeof dashboard !== 'undefined') {
      dashboard.pairing.init('#{CDO.studio_url('pairing')}', hideUserOptions, #{show_pairing_dialog});
    }
  })();
