
-# Some programatically-generated styling to accompany that in course-explorer.scss.

- (1..13).each do |n|
  :css
    .courses .bar-#{n} {
      float: left;
      width: #{n * 72}px;
    }

- (0..12).each do |n|
  :css
    .arrow-offset-#{n}:after {
      left: #{n * 72 + 34}px;
    }

- (0..4).each do |n|
  :css
    .tools-arrow-offset-#{n}:after {
      left: #{n * 140 + 60}px;
    }

:ruby
  courses = []

  csp_learn_more_link = CDO.code_org_url('/educate/professional-learning/cs-principles')
  courses << {
    name: "CS Principles",
    starts: 9,
    ends: 12,
    subtitle: "Full year course",
    link: CDO.code_org_url("/educate/csp"),
    course_link: CDO.studio_url("/courses/csp"),
    img: "/shared/images/teacher-announcement/csp-widgets.png",
    description: "Computer Science Principles covers many topics including the Internet, Big Data and Privacy, and Programming and Algorithms. The curriculum is flexible to be taught as a normal course or as an AP course.
      <ul>
        <li> <strong>Length:</strong> Full-year course (120-180 hours) </li>
        <li> <strong>Recommended age:</strong> Ages 13-18 </li>
        <li> <strong>Prerequisites:</strong> None </li>
        <li> <strong>Optional professional learning:</strong> Free 1-week summer workshop, four 1-day workshops throughout the academic year, and online support. <a href='#{csp_learn_more_link}'>Learn more</a> </li>
        <li> <strong>Cost to use Curriculum:</strong> None </li>
        <li> <strong>Languages:</strong> English only </li>
      </ul>"
  }

  csd_learn_more_link = CDO.code_org_url('/educate/professional-learning/cs-discoveries')
  courses << {
    name: "CS Discoveries",
    starts: 7,
    ends: 9,
    subtitle: "Semester or full year course",
    link: CDO.code_org_url("/educate/csd"),
    course_link: CDO.studio_url("/courses/csd"),
    img: "/shared/images/fit-500/courses/logo_csd.jpg",
    description: "CS Discoveries is an introductory course that empowers students to engage with Computer Science as a medium for creativity, communication, problem solving, and fun.
      <ul>
        <li> <strong>Length:</strong> Semester or full-year course (150+ hours) </li>
        <li> <strong>Recommended age:</strong> Ages 11-14 </li>
        <li> <strong>Prerequisites:</strong> None </li>
        <li> <strong>Optional professional learning:</strong> Free 1-week summer workshop, four 1-day workshops throughout the academic year, and online support. <a href='#{csd_learn_more_link}'>Learn more</a> </li>
        <li> <strong>Cost to use Curriculum:</strong> None </li>
        <li> <strong>Languages:</strong> English only </li>
      </ul>"
  }

  courses << {
    name: "CS Fundamentals",
    starts: 0,
    ends: 5,
    subtitle: "20 hour courses for each grade can be taught once a week",
    link: CDO.code_org_url("/educate/curriculum/elementary-school"),
    img: "/shared/images/courses/logo_tall_course1.jpg",
    description: 'Designed to be fun and engaging, Code.orgâ€™s progression of CS Fundamentals courses blend online and "unplugged" non-computer activities to teach students computational thinking, problem solving, programming concepts and digital citizenship.
      <ul>
        <li> <strong>Length:</strong> 15-20 hours per course, 6 courses </li>
        <li> <strong>Recommended age:</strong> Ages 6-11 </li>
        <li> <strong>Prerequisites:</strong> None </li>
        <li> <strong>Optional professional learning:</strong> Free 1-day workshop, in person in the US and online globally. </li>
        <li> <strong>Cost to use curriculum:</strong> None </li>
        <li> <strong>Languages:</strong> English, Spanish, +24 more </li>
      </ul>'
  }

  courses << {
    name: "Pre-reader Express",
    starts: 0,
    ends: 2,
    subtitle: "",
    link: CDO.studio_url("/s/pre-express"),
    img: "/shared/images/courses/logo_tall_pre-express.jpg",
    description: 'This single condensed 14-hour course covers the core concepts from the kindergarten and first grade courses in CS Fundamentals at an accelerated pace.
      <ul>
        <li> <strong>Length:</strong> 14 hours </li>
        <li> <strong>Recommended age:</strong> Ages 4-8 </li>
        <li> <strong>Prerequisites:</strong> None </li>
        <li> <strong>Optional professional learning:</strong> Free 1-day workshop, in person in the US and online globally. </li>
        <li> <strong>Cost to use curriculum:</strong> None </li>
        <li> <strong>Languages:</strong> English only </li>
      </ul>',
    lighter: true
  }

  courses << {
    name: "CS Fundamentals: Express",
    starts: 3,
    ends: 12,
    subtitle: "Condensed version of curriculum in one 30 hour course for older students",
    link: CDO.code_org_url("/educate/curriculum/express-course"),
    course_link: CDO.studio_url("/s/express"),
    img: "/shared/images/courses/logo_tall_express.jpg",
    description: 'This single condensed 30-hour course covers the core concepts from CS Fundamentals progression at an accelerated pace. The course is designed for students ages 9-18 but is also used successfully in many adult learning programs.
      <ul>
        <li> <strong>Length:</strong> 30 hours </li>
        <li> <strong>Recommended age:</strong> Ages 9-18 </li>
        <li> <strong>Prerequisites:</strong> None </li>
        <li> <strong>Optional professional learning:</strong> Free 1-day workshop, in person in the US and online globally. </li>
        <li> <strong>Cost to use curriculum:</strong> None </li>
        <li> <strong>Languages:</strong> English only </li>
      </ul>',
    lighter: true
  }

-# Generate the detail containers ahead of time
- detail_containers = []
- courses.each_with_index do |course, course_index|
  - detail_containers[course_index] = capture_haml do
    .course.detailcontainer{id: "courseextra-#{course_index}", style: "display: none; color: grey; cursor: auto"}
      .arrow_box{class: "arrow-offset-#{course[:starts]}"}
        .arrow_box_content{style: "overflow: hidden"}
          - if course[:img]
            .left{style: "float: left; width: 30%"}
              %a{href: course[:link]}
                %img.courseimage{src: course[:img]}
          .right{style: "float: left; width: 65%"}
            .title
              =course[:name]
            %br/
            - if course[:description]
              .description
                !=course[:description]
                - if course[:description2]
                  %br/
                  %br/
                  =course[:description2]
            - if course[:link]
              %a{href: course[:link], style: "text-decoration: none"}
                %button.launch{style: "font-size: 12px"}
                  Learn more
            - if course[:course_link]
              &nbsp;
              %a{href: course[:course_link]}
                %button.course-explorer-gray-button{style: "font-size: 12px"}
                  View course
        .arrow_box_close{style: "position: absolute; right: 10px; top: 0px; cursor: pointer", data: {courseindex: course_index}}
          %i.fa.fa-times{"aria-hidden" => "true"}

-#
  We support two courses on the same line.  This is the index of the first of
  those two courses.
- index_course_first_same_line = 3

.courseexplorer.courses{style: "margin-left: 0px; margin-top: 30px;"}
  .group{style: "overflow: hidden"}
    .grouprow.bar-6{style: "opacity: 0.7; opacity: 1"}
      Elementary school
    .grouprow.bar-3{style: "opacity: 0.85; opacity: 1"}
      Middle school
    .grouprow.bar-4{style: "opacity: 1"}
      High school
  .grade.break
    .graderow.numbered.bar-1
      K
    - (1..12).each do |n|
      - opacity = 1
      .graderow.numbered.bar-1{style: "opacity: #{opacity}"}
        = n
  .coursebodycontainer{ style: "position: relative; overflow: hidden; clear: both"}
    .coursebodyback{ style: "position: absolute; top: 0; left: 0; height: 100%; width: 100%; z-index: -100"}
      - (1..13).each do |n|
        - opacity = n.between?(0,6) ? 0.6 : n.between?(7,9) ? 0.8 : 1
        .graderow.bar-1{style: "height: 100%; background-color: rgba(200, 200, 200, #{opacity})"}
    .coursebodymain{style: "width: 100%"}
      - courses.each_with_index do |course, course_index|
        - if course[:heading]
          %h2.course.breakable
            = course[:heading]
        - else
          - break_class = course_index == (index_course_first_same_line + 1) ? "" : "break"
          .course.breakable{id: "course-#{course_index}", class: break_class, data: {courseindex: course_index}}
            - unless course[:starts] == 0 || course_index == (index_course_first_same_line + 1)
              %div{class: "bar-#{course[:starts]}"}
                &nbsp;
            - courserow_class = "courserow bar-#{course[:ends] - course[:starts] + 1}"
            - courserow_class += " lighter" if course[:lighter]
            %div{class: courserow_class}
              .left
                .title
                  =course[:name]
              .arrow
                %i.arrow-down{class: "fa fa-caret-down"}
                %i.arrow-up{class: "fa fa-caret-up"}
          - if course_index == index_course_first_same_line
          - elsif course_index == index_course_first_same_line + 1
            = detail_containers[index_course_first_same_line]
            = detail_containers[index_course_first_same_line + 1]
          - else
            = detail_containers[course_index]

          - unless course_index == index_course_first_same_line
            .cleardiv{style: "clear: both"}
  .cleardiv{style: "clear: both"}
