#!/usr/bin/env ruby

require_relative '../../config/environment'

# count average number of puzzles completed
def puzzles(has_teacher)
  has_teacher = "#{has_teacher ? 'IN' : 'NOT IN'} (SELECT DISTINCT(student_user_id) FROM followers)"
  levels = UserLevel.
    joins(:user).
    where("user_levels.best_result >= 20 AND users.id #{has_teacher} AND users.birthday is not null").
    where("users.user_type = 'student'").
    count.to_f
  users = User.
    where("id #{has_teacher} AND users.birthday is not null").
    where("users.user_type = 'student'").
    count

  levels / users.to_f
end

puts 'all users without teachers'
puts puzzles(false)
puts 'all users with teachers'
puts puzzles(true)

# count average number of puzzles completed
def courses_1_2_3_puzzles(has_teacher)
  script_ids = %w(course1 course2 course3).map do |name|
    Script.find_by_name(name).id
  end
  has_teacher = "#{has_teacher ? 'IN' : 'NOT IN'} (SELECT DISTINCT(student_user_id) FROM followers)"
  levels = UserLevel.
    joins(:user).
    where("user_levels.best_result >= 20").
    where("users.id #{has_teacher}").
    where("users.birthday is not null").
    where("users.user_type = 'student'").
    where("users.id in (select distinct user_id from user_scripts where script_id in (#{script_ids.join(',')}))").
    count.to_f
  users = User.
    where("users.id #{has_teacher}").
    where("users.birthday is not null").
    where("users.user_type = 'student'").
    where("users.id in (select distinct user_id from user_scripts where script_id in (#{script_ids.join(',')}))").
    count.to_f

  # WARNING: The division by levels was added as part of a cleanup PR, not as
  # part of the original script.
  users / levels
end

puts 'course1-3 users without teachers'
puts courses_1_2_3_puzzles(false)
puts 'course1-3 users with teachers'
puts courses_1_2_3_puzzles(true)
