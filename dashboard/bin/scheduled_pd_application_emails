#!/usr/bin/env ruby
require_relative '../../lib/cdo/only_one'
abort 'Script already running' unless only_one_running?(__FILE__)

require_relative '../config/environment'

def queue_pd_reminder_emails
  # For each teacher application, queue up one reminder email if their principal
  # hasn't yet responded.
  Pd::Application::TeacherApplication.where(
    application_year: Pd::Application::ActiveApplicationModels::APPLICATION_CURRENT_YEAR
  ).find_each do |teacher_application|
    if teacher_application.allow_sending_principal_approval_teacher_reminder_email?
      teacher_application.queue_email :principal_approval_teacher_reminder
    end
  end

  # Queue reminder emails for teachers that have been accepted but have not yet
  # registered for a workshop.
  Services::RegistrationReminder.queue_registration_reminders!

  # Queue reminder emails for teachers who have started an application but
  # have not completed it
  Services::RegistrationReminder.queue_incomplete_reminders!
end

# First, add PD reminder emails to the queue.
queue_pd_reminder_emails

# Second, send all queued emails.
Pd::Application::Email.send_all_queued_emails
