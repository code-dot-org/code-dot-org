{
  "category_key": "java_lang",
  "content": "The `Object` class in Java is the root of the class hierarchy. All classes inherit from the `Object` class, so it is automatically the superclass of all classes.",
  "examples": "[]",
  "external_documentation": "",
  "fields": "[]",
  "key": "Class",
  "name": "Object",
  "syntax": "",
  "tips": "",
  "methods": [
    {
      "name": "equals",
      "position": 0,
      "key": "equals",
      "overload_of": null,
      "content": "The `equals()` method in the `Object` class compares the calling object to another object. The method returns `true` if the two objects are equal and `false` otherwise.\n\n**Note:** This method is often overridden.",
      "parameters": "[{\"name\":\"obj\",\"type\":\"Object\",\"required\":true,\"description\":\"the object to compare to the calling object\"}]",
      "examples": "[{\"name\":\"\",\"code\":\"```\\nDog firstDog = new Dog(\\\"Fido\\\");\\nDog secondDog = new Dog(\\\"Max\\\");\\n\\nSystem.out.println(firstDog.equals(secondDog)); \\n```\\n\\n**Output:**\\n\\nfalse\"}]",
      "syntax": "`public boolean equals(Object obj)`",
      "external_link": null,
      "return_value": null
    },
    {
      "name": "toString",
      "position": 1,
      "key": "tostring",
      "overload_of": null,
      "content": "The `toString()` method returns a `String` representation of an object.\n\n**Note:** This method is often overridden.",
      "parameters": "[]",
      "examples": "[{\"name\":\"\",\"code\":\"```\\nObject obj1 = new Object();\\nSystem.out.println(obj1.toString());\\n```\\n**Output:**\\n\\njava.lang.Object@7a81197d\\n\\nThis is a textual representation of the object. It includes the class, `@`, and the hash code of the object.\"}]",
      "syntax": "`public String toString()`",
      "external_link": null,
      "return_value": null
    }
  ]
}