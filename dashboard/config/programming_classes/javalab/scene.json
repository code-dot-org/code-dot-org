{
  "category_key": "org_code_theater",
  "content": "",
  "examples": "[]",
  "external_documentation": "",
  "fields": "[]",
  "key": "Scene",
  "name": "Scene",
  "syntax": "",
  "tips": "",
  "methods": [
    {
      "name": "public Scene()",
      "position": 0,
      "key": "scene",
      "overload_of": null,
      "content": "Creates a new scene for the Theater. A scene is a set of steps of animation, such as drawing an image, text or a shape. A scene can also include sound, like playing a sound file or musical notes",
      "parameters": "[]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public int getWidth()",
      "position": 1,
      "key": "getwidth",
      "overload_of": null,
      "content": "Returns the width of the theater canvas in pixels.\n",
      "parameters": "[]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public int getHeight()",
      "position": 2,
      "key": "getheight",
      "overload_of": null,
      "content": "Returns the height of the theater canvas, in pixels.\n",
      "parameters": "[]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public void clear(String color)",
      "position": 3,
      "key": "clear",
      "overload_of": null,
      "content": "Clear the canvas and set the background to the given color name.\n",
      "parameters": "[{\"name\":\"color\",\"type\":\"String\",\"description\":\"The name of the color to clear the canvas with. If the name does not match a known color or hex value, this method will set the background to black.\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public void playSound(String filename)",
      "position": 4,
      "key": "playsound",
      "overload_of": null,
      "content": "Plays the sound referenced by the file name.",
      "parameters": "[{\"name\":\"filename\",\"type\":\"String\",\"required\":true,\"description\":\"the file to play in the asset manager\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public void playNote(int note, double seconds)",
      "position": 5,
      "key": "playnote",
      "overload_of": null,
      "content": "Plays a note with the default instrument (piano).",
      "parameters": "[{\"name\":\"note\",\"type\":\"int\",\"required\":true,\"description\":\"the note to play. 60 represents middle C on a piano.\"},{\"name\":\"seconds\",\"type\":\"double\",\"required\":true,\"description\":\"length of the note\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public void playNoteAndPause(int note, double seconds)",
      "position": 6,
      "key": "playnoteandpause",
      "overload_of": null,
      "content": "Plays a note with the default instrument (piano) and adds a pause in drawing/audio for the duration of the note, so that subsequent play commands begin after the note has finished playing.",
      "parameters": "[{\"name\":\"note\",\"type\":\"int\",\"required\":true,\"description\":\"the note to play. 60 represents middle C on a piano.\"},{\"name\":\"seconds\",\"type\":\"double\",\"required\":true,\"description\":\"length of the note\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public void pause(double seconds)",
      "position": 7,
      "key": "pause",
      "overload_of": null,
      "content": "Wait the provided number of seconds before performing the next draw or play command.",
      "parameters": "[{\"name\":\"seconds\",\"type\":\"double\",\"required\":true,\"description\":\"The number of seconds to wait. This can be a fraction of a second, but the smallest value can be .1 seconds.\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public void drawImage(String filename, int x, int y, int size, double rotation)",
      "position": 8,
      "key": "drawimage",
      "overload_of": null,
      "content": "Draw an image on the canvas at the given location and size.",
      "parameters": "[{\"name\":\"filename\",\"type\":\"String\",\"required\":true,\"description\":\"filename the name of the file in the asset manager\"},{\"name\":\"x\",\"type\":\"int\",\"required\":true,\"description\":\"the left side of the image in the canvas\"},{\"name\":\"y\",\"type\":\"int\",\"required\":true,\"description\":\"the top of the image in the canvas\"},{\"name\":\"size\",\"type\":\"int\",\"required\":true,\"description\":\"the width of the image, in pixels. The height will stretch to make sure the image does not appear distorted.\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "public void setTextStyle(Font font, FontStyle style) ",
      "position": 9,
      "key": "settextstyle",
      "overload_of": null,
      "content": "Set the font and style to draw text in, e.g. sans-serif, monospaced, italic, etc.",
      "parameters": "[{\"name\":\"font\",\"type\":\"Font\",\"required\":true,\"description\":\"the font to draw with\"},{\"name\":\"style\",\"type\":\"FontStyle\",\"required\":true,\"description\":\"the style of the font\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "setTextHeight",
      "position": 10,
      "key": "settextheight",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "setTextColor",
      "position": 11,
      "key": "settextcolor",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "drawText",
      "position": 12,
      "key": "drawtext",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "drawLine",
      "position": 13,
      "key": "drawline",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "drawRegularPolygon",
      "position": 14,
      "key": "drawregularpolygon",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "drawShape",
      "position": 15,
      "key": "drawshape",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "drawEllipse",
      "position": 16,
      "key": "drawellipse",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "drawRectangle",
      "position": 17,
      "key": "drawrectangle",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "setStrokeWidth",
      "position": 18,
      "key": "setstrokewidth",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "setFillColor",
      "position": 19,
      "key": "setfillcolor",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "removeStrokeColor",
      "position": 20,
      "key": "removestrokecolor",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "removeFillColor",
      "position": 21,
      "key": "removefillcolor",
      "overload_of": null,
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "playNote2",
      "position": 22,
      "key": "playnote2",
      "overload_of": "playnote",
      "content": "Plays a note with the selected instrument.",
      "parameters": "[{\"name\":\"instrument \",\"type\":\"Instrument\",\"required\":true,\"description\":\"the instrument to play.\"},{\"name\":\"note\",\"type\":\"int\",\"required\":true,\"description\":\"the note to play. 60 represents middle C on a piano.\"},{\"name\":\"seconds\",\"type\":\"double\",\"required\":true,\"description\":\"length of the note.\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "name": "playNoteAndPause2",
      "position": 23,
      "key": "playnoteandpause2",
      "overload_of": "playnoteandpause",
      "content": "Plays a note with the selected instrument and adds a pause in drawing/audio for the duration of the note, so that subsequent play commands begin after the note has finished playing.\n",
      "parameters": "[{\"name\":\"instrument\",\"type\":\"Instrument\",\"required\":true,\"description\":\"the instrument to play\"},{\"name\":\"note \",\"type\":\"int\",\"required\":true,\"description\":\"the note to play. 60 represents middle C on a piano.\"},{\"name\":\"seconds\",\"type\":\"double\",\"required\":true,\"description\":\"length of the note\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "return_value": null
    },
    {
      "key": "drawimage2",
      "position": 24,
      "name": "drawImage2",
      "content": null,
      "parameters": null,
      "examples": null,
      "syntax": null,
      "external_link": null,
      "overload_of": null,
      "return_value": null
    }
  ]
}