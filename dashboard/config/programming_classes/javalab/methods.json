{
  "category_key": "general",
  "content": "Java methods are blocks of code that are only executed when the specific method is called. Methods are extremely useful tools to reuse code or break down a large task into smaller chunks.  Methods can accept a few parameters and return an object as well.\n\nThere are two types of methods:\n\n1. **User-defined Methods:** methods we can to perform specific tasks\n\n2. **Standard Library Methods:** methods included in Java libraries\n\n###User-Defined Methods\n\n```\naccessModifier returnType methodName() {\n   // method content\n}\n```\n***accessModifier:*** the access type of the method, generally `public` or `private`\n\n***returnType:*** defines the type of the value that the method will return\n\n***methodName:*** the name of the method, which should be descriptive of the task or operation that the method is performing\n\n***method content:*** the content and operations included within the method\n\n###Standard Library Methods \n\nStandard library methods are built-in and they are embedded within the Java class.\n\nA few examples: \n\n```\nprint()     // from java.io.PrintStream\nsqrt()      // from the Math class\n```",
  "examples": "[{\"name\":\"Example Program Using Methods\",\"code\":\"```\\npublic class Calculator {\\n   public static int doubleIt(int num) {\\n      return num * 2;\\n   }\\n}\\n\\npublic class MyConsole {\\n   public static void main(String[] args) {\\n      // initialize a variable, and then print the variable doubled\\n      int value = 4;\\n      int doubledValue = Calculator.doubleIt(value);\\n      System.out.println(\\\"The double of \\\" + value + \\\" is \\\" + doubledValue + \\\".\\\");\\n   }\\n}\\n```\\n\\n**Output:**\\n\\nThe double of 4 is 8.\"}]",
  "external_documentation": "",
  "fields": "[]",
  "key": "Methods",
  "name": "Methods",
  "syntax": "",
  "tips": "",
  "methods": [

  ]
}