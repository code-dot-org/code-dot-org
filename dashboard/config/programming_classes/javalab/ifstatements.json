{
  "category_key": "control_structures",
  "content": "An `if/else` statement is critical to decision-making in programs and is one of the most valuable tools in Java programming. With an `if/else` statement, you can specify which block of code to execute based on the outcome of a condition. If the condition is `false`, the code in the `else` branch will execute.\n\n###Relational Operators:\n\nRelational operators can be used to specify a condition in an `if` statement.\n\n- Less than: `a < b`\n\n- Less than or equal to: `a <= b`\n\n- Greater than: `a > b`\n\n- Greater than or equal to: `a >= b`\n\n- Equal to: `a == b`\n\n- Not equal to: `a != b`\n\n\n###if Statement\n- The `if` statement allows you to specify a block of code to execute if its condition is `true`. If the condition is `false`, its block of code will not execute.\n\n###else if Statement\n- The `else if` statement is used to specify an additional condition to test if the condition for the `if` statement evaluates to `false`. If the condition for the `else if` statement is `true`, its block of code will execute. If it is `false`, its block of code will not execute.\n\n###else Statement\n- The `else` statement allows you to specify a block of code to execute if the condition for the `if` statement evaluates to `false`.",
  "examples": "[{\"name\":\"One-Way Selection Statement\",\"description\":\"An `if` statement is also known as a one-way selection statement.\",\"code\":\"```\\nif (17 \\u003e 12) {\\n   System.out.println(\\\"The condition evaluated to true.\\\");\\n}\\n```\\n\\n**Output:**\\n\\nThe condition evaluated to true.\"},{\"name\":\"Two-Way Selection Statement\",\"description\":\"An `if-else` statement is also known as a two-way selection statement.\",\"code\":\"```\\nif (17 \\u003c 12) {\\n   System.out.println(\\\"The condition evaluated to true.\\\");\\n}\\nelse {\\n   System.out.println(\\\"In the else block\\\");\\n}\\n```\\n\\n**Output:**\\n\\nIn the else block\"},{\"name\":\"Multi-Selection Statements\",\"description\":\"An `if-else if-else` statement is also known as a multi-selection statement.\",\"code\":\"```\\nif (17 \\u003c 12) {\\n   System.out.println(\\\"Less Than.\\\");\\n}\\nelse if (17 == 17) {\\n   System.out.println(\\\"Equal To.\\\");\\n}\\nelse {\\n   System.out.println(\\\"Greater Than.\\\");\\n}\\n```\\n\\n**Output:**\\n\\nEqual To\"}]",
  "external_documentation": "",
  "fields": "[]",
  "key": "IfStatements",
  "name": "if/else Statements",
  "syntax": "",
  "tips": "You can also use nested `if` statements to evaluate multiple conditions that must be `true` before a block of code is executed. For example:\n\n```\nif (17 >= 17) {\n   if (17 == 17) {    \n      System.out.println(\"EQUAL\");\n   }\n}\n```",
  "methods": [

  ]
}