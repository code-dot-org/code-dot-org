{
  "key": "displace",
  "name": "sprite.displace()",
  "category": "Sprites",
  "category_key": "sprites",
  "content": "Makes the sprite push the target as long as they are touching each other. The sprite keeps moving normally.\n\nMost games will involve sprites colliding with each other. There are four types of collisions available in Game Lab: [`bounce`(#f78183)](/docs/gamelab/bounce/), [`bounceOff`(#f78183)](/docs/gamelab/bounceoff/), [`collide`(#f78183)](/docs/gamelab/collide/) and [`displace`(#f78183)](/docs/gamelab/displace/). These blocks will cause a certain type of interaction between the sprite and its target and must be used within the [`draw()`(#fff176)](/docs/gamelab/draw/) function.",
  "examples": [
    {
      "name": "",
      "description": "",
      "code": "```\nvar sprite1 = createSprite(75, 250, 50, 50);\r\nsprite1.velocityX=2;\r\nsprite1.velocityY=-1;\r\nvar sprite2 = createSprite(250, 250, 50, 50);\r\nsprite2.velocityX=-1;\r\nsprite2.velocityY=-0.5;\r\nfunction draw() {\r\n  background(\"white\");\r\n  sprite1.displace(sprite2);\r\n  drawSprites();\r\n}\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Four Collisions",
      "description": "Demonstrate all four types of collisions.",
      "code": "```\n// Demonstrate all four types of collisions.\r\nvar spriteDisplace1 = createSprite(75, 50, 50, 50);\r\nspriteDisplace1.setAnimation(\"displace\");\r\nspriteDisplace1.scale=0.75;\r\nspriteDisplace1.velocityX=2;\r\nvar spriteDisplace2 = createSprite(250, 50, 50, 50);\r\nspriteDisplace2.setAnimation(\"displaceTarget\");\r\nspriteDisplace2.scale=0.75;\r\nvar spriteCollide1 = createSprite(75, 150, 50, 50);\r\nspriteCollide1.setAnimation(\"collide\");\r\nspriteCollide1.scale=0.75;\r\nspriteCollide1.velocityX=2;\r\nvar spriteCollide2 = createSprite(250, 150, 50, 50);\r\nspriteCollide2.setAnimation(\"collideTarget\");\r\nspriteCollide2.scale=0.75;\r\nvar spriteBounce1 = createSprite(75, 250, 50, 50);\r\nspriteBounce1.setAnimation(\"bounce\");\r\nspriteBounce1.scale=0.75;\r\nspriteBounce1.velocityX=2;\r\nvar spriteBounce2 = createSprite(250, 250, 50, 50);\r\nspriteBounce2.setAnimation(\"bounceTarget\");\r\nspriteBounce2.scale=0.75;\r\nvar spriteBounceOff1 = createSprite(75, 350, 50, 50);\r\nspriteBounceOff1.setAnimation(\"bounceOff\");\r\nspriteBounceOff1.scale=0.75;\r\nspriteBounceOff1.velocityX=2;\r\nvar spriteBounceOff2 = createSprite(250, 350, 50, 50);\r\nspriteBounceOff2.setAnimation(\"bounceOffTarget\");\r\nspriteBounceOff2.scale=0.75;\r\nfunction draw() {\r\n  background(\"white\");\r\n  spriteDisplace1.displace(spriteDisplace2);\r\n  spriteCollide1.collide(spriteCollide2);\r\n  spriteBounce1.bounce(spriteBounce2);\r\n  spriteBounceOff1.bounceOff(spriteBounceOff2);\r\n  drawSprites();\r\n}\n```",
      "app": "https://studio.code.org/projects/gamelab/FJM4fS9Zb9pj2Qc8dmK2Fw/",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Umbrella",
      "description": "The umbrella displaces the raindrops.",
      "code": "```\n// The umbrella displaces the raindrops.\r\nvar umbrella = createSprite(200, 200);\r\numbrella.setAnimation(\"umbrella\");\r\numbrella.setCollider(\"circle\", 0, 10);\r\nvar raindrop = createSprite(200, 200);\r\nraindrop.setAnimation(\"raindrop\");\r\nraindrop.scale = 0.1;\r\nraindrop.setCollider(\"circle\");\r\nraindrop.x = randomNumber(100, 300);\r\nraindrop.y = 0;\r\nraindrop.velocityY = 10;\r\nfunction draw() {\r\n  background(\"white\");\r\n  umbrella.displace(raindrop);\r\n  drawSprites();\r\n  if (raindrop.y > 400) {\r\n    raindrop.x = randomNumber(100, 300);\r\n    raindrop.y = 0;\r\n  }\r\n}\n```",
      "app": "https://studio.code.org/projects/gamelab/VaOQUGjrVSrVHLsmZFJoaw/",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "target",
      "type": "Sprite or Group",
      "required": true,
      "description": "The name of the target sprite or target group you want to check for a collision."
    }
  ],
  "parameters": [
    "target"
  ],
  "return_value": "Boolean true or false. Changes output in the display after the sprites touch and drawSprites() is called.",
  "short_description": "Makes the sprite push the target as long as they are touching each other. The sprite keeps moving normally.",
  "syntax": "sprite.displace(target)",
  "tips": "- All four of the collisions are similar to including an \"if (sprite.isTouching(target))\" in the [`draw()`(#fff176)](/docs/gamelab/draw/) function, and then depending on the collision type, updating the sprite and target  [`sprite.velocityX`(#f78183)](/docs/gamelab/velocityX/)and [`sprite.velocityY`(#f78183)](/docs/gamelab/velocityY/) properties.\n- Only one of the four types of collisions should be specified for each pair of sprites.\n- To fine tune your collision detection use [`setCollider()`(#f78183)](/docs/gamelab/setCollider/) to change the shape and size of the collider area and set [`sprite.debug`(#f78183)](/docs/gamelab/debug/) to true for the sprites.\n- A sprite that is not visible can still collide with other sprites and user mouse interactions."
}