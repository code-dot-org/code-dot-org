{
  "key": "clearTimeout",
  "name": "clearTimeout",
  "category": "Control",
  "category_key": "control",
  "content": "[name]\n\n## clearTimeout(timeout)\n\n[/name]\n\n[category]\n\nCategory: Control\n\n[/category]\n\n[description]\n\n[short_description]\n\nClears an existing timer by passing in the numeric value returned by setTimeout().\n\n[/short_description]\n\nSometimes you need to clear a timeout timer before it executes. clearTimeout() uses the value returned by the [setTimeout(function, milliseconds)](/docs/applab/setTimeout) function.\n\n[/description]\n\n### Examples\n____________________________________________________\n\n[example]\n\n```\n// Timeout is cleared immediately.\nvar t = setTimeout(function() {\n  console.log(\"The timeout has completed\");\n}, 10000);\nconsole.log(\"Timer ID: \" + t);\nclearTimeout(t);\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Stop the Countdown** The user controls whether to clear the 3 second timeout timer.\n\n```\n// The user controls whether to clear the 3 second timeout timer.\ntextLabel(\"instructions\", \"Click Start to begin a 3 second timeout timer, then Stop to prevent it from completing\");\ntextLabel(\"status\", \"\");\nbutton(\"startButton\", \"Start\");\nbutton(\"cancelButton\", \"Stop\");\nvar t;\nonEvent(\"startButton\", \"click\", function(){\n  t = setTimeout(function() {\n    setText(\"status\", \"The timer completed!\");\n   }, 3000);\n   setText(\"status\", \"Timer started!\");\n   console.log(\"Timer ID: \" + t);\n});\nonEvent(\"cancelButton\", \"click\", function(){\n  if(t) {\n    clearTimeout(t);\n    setText(\"status\", \"The timer has been cancelled.\");\n  } else {\n    setText(\"status\", \"You need to start the timer before you can stop it :)\");\n  }\n});\n```\n\n[/example]\n\n____________________________________________________\n\n\n[parameters]\n\n### Parameters\n\n| Name  | Type | Required? | Description |\n|-----------------|------|-----------|-------------|\n| timeout | number | Yes | The value returned by the setTimeout function to cancel.  |\n\n[/parameters]\n\n[returns]\n\n### Returns\nNo return value.\n\n[/returns]\n\n[tips]\n\n### Tips\n- If you want to clear a timeout interval you need to save the value returned by setTimeout, var i = setTimeout(callback, ms);\n\n[/tips]\n\n",
  "parameters": [
    "__"
  ],
  "short_description": "\nclearTimeout(timeout)\nCategory: Control",
  "syntax": "clearTimeout(timeout);"
}