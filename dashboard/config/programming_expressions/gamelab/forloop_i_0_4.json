{
  "key": "forLoop_i_0_4",
  "name": "For loop",
  "category": "Control",
  "category_key": "control",
  "content": "[name]\n\n## for loop\n\n[/name]\n\n[category]\n\nCategory: Control\n\n[/category]\n\n[description]\n\n[short_description]\n\nExecutes a block of statements a certain number of times depending on the initialization expression, conditional expression, and increment expression.\n\n[/short_description]\n\nInstead of typing a block of statements again and again, you can use a *for loop* around the block of statements. The most common usage of a for loop is simply to use it as a *counting* loop to execute a block of code a certain number of times.\n\n[/description]\n\n### Examples\n____________________________________________________\n\n[example]\n\n```\n// Draw 4 dots along a line.\nfor(var i=0; i<4; i++){\n\tdot(5);\n\tmoveForward();\n}\n```\n\n[/example]\n____________________________________________________\n[example]\n\n**Example: Count Down** Count down to zero from ten using a negative increment.\n\n```\n// Count down to zero from 10.\nfor(var i=10; i>0; i--){\n    write(i) ;\n}\nwrite('Blast Off!');\n```\n\n[/example]\n____________________________________________________\n[example]\n\n**Example: One Inch** Draw 8 tic marks along a line.\n\n```\npenUp();\nturnLeft();\nmoveForward(100);\nturnLeft(180);\npenDown();\nfor(var i=0; i<7; i++){\n    ticMark();\n    moveForward();\n}\nticMark();\npenUp();\nmoveForward();\n\nfunction ticMark() {\n    turnLeft();\n    moveForward(5);\n    turnLeft(180);\n    moveForward(5); \n    turnLeft();  \n}\n```\n\n[/example]\n\n____________________________________________________\n[example]\n\n**Example: Rake** Draw a rake ranging the angles from -45 to 45 by 5s.\n\n```\n// Draw a rake ranging the angles from -45 to 45 by 5s.\nfor(var angle=-45; angle<=45; angle=angle+5){\n\tturnTo(angle);\n\tmoveForward(100);\n\tturnLeft(180);\n\tmoveForward(100);\n}\nturnTo(180);\nmoveForward(200);\n```\n\n[/example]\n____________________________________________________\n[example]\n\n**Example: Flower** Draw a flower with a parameter number of petals. Works best for petalCount between 5 and 10.\n\n<table>\n<tr>\n<td style=\"border-style:none; width:90%; padding:0px\">\n<pre>\n// Draw a flower with a parameter number of petals. Works best for petalCount between 5 and 10.\ndrawFlower(5);\n\nfunction drawFlower(petalCount) {\n  penColor(\"pink\");\n  penUp();\n  for(var i=0; i&lt;360; i=i+(360/petalCount)){\n    turnTo(i);\n    moveForward(360/petalCount);\n    dot((2/3)*360/petalCount);\n    moveForward(-360/petalCount);\t\n  }\n  penColor(\"blue\");\n  dot(360/petalCount/2);\n}\n</pre>\n</td>\n<td style=\"border-style:none; width:10%; padding:0px\">\n<img src='https://images.code.org/807a8c3df4c66aae1e5db637ffda7e59-image-1446383236765.gif'>\n</td>\n</tr>\n</table>\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Random Die Rolls** Simulate rolling a die using a random number from 1 to 6, and roll the die 10000 times to check if the expected roll is 3.5.\n\n```\n// Simulate rolling a die using a random number from 1 to 6, and roll the die 10000 times to check if the expected roll is 3.5.\nvar sum = 0;\nfor (var i = 0; i < 10000; i++) {\n    sum = sum + randomNumber(1,6);\n}\nconsole.log(sum/10000);\n```\n\n[/example]\n\n____________________________________________________\n\n[syntax]\n\n### Syntax\n\n```\nfor (initialization; condition; increment) {\n  // block of statements\n}\n```\n\nHere is a typical construct for loop used to count from 0 to 3 to execute the block of code 4 times:\n\n<code>for(var i = 0; i < 4; i++)</code>\n\n**initialization**  <code>var i = 0;</code> is executed once, before anything else. Create an identifier named *i* and initialize it to 0.\n \n**condition** <code>i < 4;</code> is checked before each iteration, to see if the block of statements should execute or not. If *i* is less than 4.\n\n**increment** <code>i++</code> is executed after every iteration, after the block of statements is executed. Increase (increment) *i* by 1.\n\n[/syntax]\n\n[tips]\n\n### Tips\n- You do not need to use *i* in the for loop statement, you can use any declared and initialized identifier.\n- You can start (initialization) and end (condition) the loop at any values. \n- You can use any increment, positive or negative.\n- Be careful not to code an infinite loop where the condition is never false.\n- Be careful not to code a loop that never executes because the condition is never true.\n\n[/tips]\n\n[bug]\n\nFound a bug in the documentation? Let us know at documentation@code.org\n\n[/bug]",
  "short_description": "\nfor loop\nCategory: Control",
  "syntax": "for (var i = 0; i < 4; i++) {\n  __;\n}"
}