{
  "key": "bounciness",
  "name": "sprite.bounciness",
  "category": "Sprites",
  "category_key": "sprites",
  "content": "The velocity lost or gained by a sprite during a collision or bounce.\r\n\r\nFor example: A value of 1 is perfectly elastic, no velocity is lost. A value of 0 is perfectly inelastic, no bouncing. A value between 0 and 1 is inelastic, this is the most common in nature. A value greater than 1 is hyper-elastic, velocity is increased like in a pinball bumper\r\n\r\nThe default bounciness is 1. All sprite properties can be both accessed and updated.",
  "examples": [
    {
      "name": "My Three Bounces",
      "description": "Demonstrate three different bounciness levels.",
      "code": "```\n// Demonstrate three different bounciness levels.\r\nvar sprite1 = createSprite(75, 200);\r\nvar sprite2 = createSprite(200, 200);\r\nvar sprite3 = createSprite(325, 200);\r\nvar wall=createSprite(200, 400, 400, 20);\r\nsprite1.velocityY=2;\r\nsprite2.velocityY=2;\r\nsprite3.velocityY=2;\r\nsprite1.bounciness=0.5;\r\nsprite2.bounciness=1;\r\nsprite3.bounciness=2;\r\nfunction draw() {\r\n  background(\"white\");\r\n  drawSprites();\r\n  sprite1.bounceOff(wall);\r\n  sprite2.bounceOff(wall);\r\n  sprite3.bounceOff(wall);\r\n}\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "return_value": "The bounciness of the sprite.",
  "short_description": "The velocity lost or gained by a sprite during a collision or bounce.",
  "syntax": "sprite.bounciness",
  "tips": "- Sprites all have the same properties and you use the dot notation (combining the name of the sprite, followed by a dot, with the label of the property) to both access and update the property for that sprite.\n- Any changes to the properties of a sprite will not be seen until after [`drawSprites(group)`(#fff176)](/docs/gamelab/drawSprites/) is called."
}