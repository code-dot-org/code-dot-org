{
  "key": "rect",
  "name": "rect()",
  "category": "Drawing",
  "category_key": "drawing",
  "content": "Draws a rectangle onto the display positioned at x and y with sides length w(idth) and h(eight).\r\n\r\nYou can draw many things with the commands in the Drawing drawer of your Game Lab toolbox. For `rect()`, the x and y coordinates specify the upper left of the rectangle, relative to the top-left corner of the display area (x:0 y:0). The width and height are measured in pixels. Rectangles are drawn using the current stroke weight and current stroke color, and then filled with the current fill color (unless `noStroke()` or `noFill()` commands have been run).",
  "examples": [
    {
      "name": "Thick Outline",
      "description": "Change the thickness of the rectangle outline.",
      "code": "```\n// Change the thickness of the rectangle outline.\r\nstrokeWeight(20);\r\nrect(50, 50, 100, 200);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Two Rectangles",
      "description": "Draw two rectangles at the same location and with the same width and height but with different stroke widths and no fill color.",
      "code": "```\n// Draw two rectangles at the same location and with the same width and height but with different stroke widths and no fill color.\r\nstrokeWeight(40);\r\nstroke(\"lightblue\");\r\nnoFill();\r\nrect(50, 50, 100, 200);\r\nstrokeWeight(1);\r\nstroke(\"black\");\r\nrect(50, 50, 100, 200);\r\n\r\n\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Part of a Rectangle",
      "description": "Start a large rectangle off the display so that only part of the rectangle is visible.",
      "code": "```\n// Start a large rectangle off the display so that only part of the rectangle is visible.\r\nstrokeWeight(15);\r\nrect(60, -15, 50, 500);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Animated Box",
      "description": "Use the draw() function to animate a moving and growing box.",
      "code": "```\n// Use the draw() function to animate a moving and growing box.\r\nvar number = 0;\r\nfunction draw() {\r\n  background(\"white\");\r\n  rect(number, number, number, number);\r\n  if (number<200) {\r\n    number=number+1;\r\n  }\r\n}\n```",
      "app": "https://studio.code.org/projects/gamelab/1eTaLf8B8Mw5TaUAn2fUJg/",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Big Blue Box",
      "description": "Draw a blue rectangle offset from the top left corner.",
      "code": "```\n// Draw a blue rectangle offset from the top left corner.\r\nfill(\"blue\");\r\nrect(50, 50, 200, 100);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "",
      "description": "",
      "code": "```\n// Draw a 100x100 pixel rectangle in the top left corner.\r\nrect(0, 0, 100, 100);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "x",
      "type": "Number",
      "required": true,
      "description": "The x-location in pixels of the upper left corner of the rectangle from left to right on the display. Should be a number from 0 to 400, but negative numbers will start the rectangle to the left of the display and numbers greater than 400 will start the rectangle to the right of the display (possibly unseen)."
    },
    {
      "name": "y",
      "type": "Number",
      "required": true,
      "description": "The y-location in pixels of the upper left corner of the rectangle from top to bottom on the display. Should be a number from 0 to 400, but negative numbers will start the rectangle above the display and numbers greater than 400 will start the rectangle below the display (possibly unseen)."
    },
    {
      "name": "w",
      "type": "Number",
      "required": true,
      "description": "The horizontal width in pixels of the rectangle. Should be a positive number, but negative numbers will draw the rectangle to the left of the (x,y) upper left corner position."
    },
    {
      "name": "h",
      "type": "Number",
      "required": true,
      "description": "The vertical height in pixels of the rectangle. Should be a positive number, but negative numbers will draw the rectangle above the (x,y) upper left corner position."
    }
  ],
  "parameters": [
    "x",
    "y",
    "w",
    "h"
  ],
  "return_value": "No return value. Outputs to the display only.",
  "short_description": "Draws a rectangle onto the display positioned at x and y with sides length w(idth) and h(eight).",
  "syntax": "rect(x, y, w, h)",
  "tips": "- If you're having trouble getting a rectangle to show up, make sure that `noFill()` or `noStroke()` haven't been called, and where you're trying to draw the rectangle fits within the coordinates of the display (400 x 400).\r\n- Anything you draw will overlap previous things you drew. The sequence of drawing statements is usually important.\r\n- The default stroke is black, the default stroke weight is 1 pixel, and the default fill is gray. Change the width of the line, color of the line, and fill color used to draw all subsequent shapes using `strokeWeight()`, `stroke()`. and `fill()`.\r\n- When drawing thick borders, the width and length of the rectangle is relative to the center of the perimeter line. The outside perimeter of the rectangle will be one half the stroke weight larger all around."
}