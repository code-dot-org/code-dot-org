{
  "key": "line",
  "name": "line()",
  "category": "Drawing",
  "category_key": "drawing",
  "content": "Draws a straight line between two points.\r\n\r\nUse `stroke()` to color a line and `strokeWeight()` to change it's thickness. A line cannot be filled, therefore the `fill()` function will not affect the color of a line.\r\n\r\nThe default `stroke()` color is black and the default `strokeWeight()` is 1.",
  "examples": [
    {
      "name": "",
      "description": "",
      "code": "```\nline(10, 50, 100, 75);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Two Lane Road",
      "description": "Draw a two lane road.",
      "code": "```\n// Draw a two lane road.\r\nstrokeWeight(15);\r\nline(0, 0, 400, 400);\r\nstroke(\"yellow\");\r\nstrokeWeight(1);\r\nline(0, 0, 400, 400);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Tic-Tac-Toe",
      "description": "Draw a tic-tac-toe board.",
      "code": "```\n// Draw a tic-tac-toe board.\r\nstrokeWeight(10);\r\nline(133, 0, 133, 400);\r\nline(266, 0, 266, 400);\r\nline(0, 133, 400, 133);\r\nline(0, 266, 400, 266);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Optical Illusion",
      "description": "Are the 4 lines straight?",
      "code": "```\n// Are the 4 lines straight?\r\nnoFill();\r\nfor (var i = 5; i < 20; i++) {\r\n  ellipse(200, 200, 20*i, 20*i);\r\n}\r\nstrokeWeight(5);\r\nline(200, 0, 400, 200);\r\nline(400, 200, 200, 400);\r\nline(200, 400, 0, 200);\r\nline(0, 200, 200, 0);\n```",
      "app": "https://studio.code.org/projects/gamelab/6xHcijFSxP2DOY7Vkuzbjg/",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "x1",
      "type": "Number",
      "required": true,
      "description": "The x-location in pixels of the first endpoint of the line. Should be a number from 0 to 400, but negative numbers will start the line to the left of the display and numbers greater than 400 will start the line to the right of the display (possibly unseen)."
    },
    {
      "name": "y1",
      "type": "Number",
      "required": true,
      "description": "The y-location in pixels of the first endpoint of the line. Should be a number from 0 to 400, but negative numbers will start the line above the display and numbers greater than 400 will start the line below the display (possibly unseen)."
    },
    {
      "name": "x2",
      "type": "Number",
      "required": true,
      "description": "The x-location in pixels of the second endpoint of the line. Should be a number from 0 to 400, but negative numbers will start the line to the left of the display and numbers greater than 400 will start the line to the right of the display (possibly unseen)."
    },
    {
      "name": "y2",
      "type": "Number",
      "required": true,
      "description": "The y-location in pixels of the second endpoint of the line. Should be a number from 0 to 400, but negative numbers will start the line above the display and numbers greater than 400 will start the line below the display (possibly unseen)."
    }
  ],
  "return_value": "No return value. Outputs to the display only.",
  "short_description": "Draws a straight line between two points.",
  "syntax": "line(x1, y1, x2, y2)",
  "tips": "- If you're having trouble getting a line to show up, make sure that `noStroke()` hasn't been called, and where you're trying to draw the line fits within the coordinates of the display (400 x 400).\r\n- Anything you draw will overlap previous things you drew. The sequence of drawing statements is usually important.\r\n- The default stroke is black, the default stroke weight is 1 pixel. Change the width and color of subsequent lines using `strokeWeight()` and `stroke()`."
}