{
  "key": "andOperator",
  "name": "And Operator",
  "category": "Math",
  "category_key": "math",
  "content": "More complex decisions sometimes require two things to be true. The *&&* operator allows you to check if both operand expressions are true, and then possibly perform some specific action using an *if*, *if-else*, or *while* block.\r\n\r\n<table>\r\n<tr>\r\n<td style=\"border-style:none; width:90%; padding:0px\">\r\n<pre>\r\n// Truth table for the boolean AND operator.\r\nconsole.log(true && true);\r\nconsole.log(true && false);\r\nconsole.log(false && true);\r\nconsole.log(false && false);\r\n</pre>\r\n</td>\r\n<td style=\"border-style:none; width:10%; padding:0px\">\r\n<img src='https://images.code.org/aca44404d74a4d2a377fa30e699bfac6-image-1450178464068.jpg'>\r\n</td>\r\n</tr>\r\n</table>\r\n\r\n[tips]\r\n\r\n### Tips\r\n- Some complex decisions using an && operator can sometimes be rewritten to use an || operator. It is fine to choose whichever reads clearest.\r\n\r\n[/tips]\r\n\r\n[bug]\r\n\r\nFound a bug in the documentation? Let us know at documentation@code.org\r\n\r\n[/bug]",
  "examples": [
    {
      "name": "Working 9 to 5",
      "description": "Determines if it is currently working hours.",
      "code": "```\n// Determines if it is currently working hours.\r\nvar now = new Date();\r\nvar hours = now.getHours(); \r\nvar workHours = false;\r\nif (hours >= 9 && hours < 17) {\r\n    workHours = true;\r\n}\r\nconsole.log(workHours);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Take Your Temperature",
      "description": "Check whether a given temperature is in a healthy range or not.",
      "code": "```\n// Check for temperature in a good range or not.\r\ntextLabel(\"tempLabelID\", \"What is your temperature?\");\r\ntextInput(\"tempID\", \"\");\r\nbutton(\"buttonID\", \"Submit\");\r\ntextLabel(\"tempMessageID\", \"\");\r\nonEvent(\"buttonID\", \"click\", function(event) {\r\n  setText(\"tempMessageID\",\"\");\r\n  var temp = getText(\"tempID\");\r\n  if (temp >= 98 && temp <= 99.5) {\r\n    setText(\"tempMessageID\", \"Your temperature is fine.\");\r\n  }\r\n  else {\r\n    setText(\"tempMessageID\", \"You may be sick.\");\r\n  }\r\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "expression1",
      "type": "boolean",
      "required": true,
      "description": "The first boolean expression to evaluate."
    },
    {
      "name": "expression2",
      "type": "boolean",
      "required": true,
      "description": "The second boolean expression to evaluate."
    }
  ],
  "return_value": "Boolean (true or false)",
  "short_description": "More complex decisions sometimes require two things to be true. The &amp;&amp; operator allows you to check if both operand expressions are true, and then possibly perform some specific action using an if, if-else, or while block.",
  "syntax": "__ && __",
  "tips": "* Some complex decisions using an && operator can sometimes be rewritten to use an || operator. It is fine to choose whichever reads clearest."
}