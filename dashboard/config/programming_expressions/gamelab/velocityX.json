{
  "key": "velocityX",
  "name": "sprite.velocityX",
  "category": "Sprites",
  "category_key": "sprites",
  "content": "Velocity in the positive x direction of the sprite in pixels per frame.\r\n\r\nA positive value will move the sprite to the right, a negative value will move to the left. Must be used with the `draw()` function containing a `drawSprites()`.\r\n\r\nThe default velocityX is 0. All sprite properties can be both accessed and updated.",
  "examples": [
    {
      "name": "Vibration",
      "description": "Make a sprite vibrate by alternating velocityX positive and negative.",
      "code": "```\n// Make a sprite vibrate by alternating velocityX positive and negative.\r\nvar sprite = createSprite(200, 200);\r\nsprite.velocityX = 5;\r\nsprite.velocityY = 1;\r\nfunction draw() {\r\n  background(\"white\");\r\n  drawSprites();\r\n  if (sprite.velocityX>0) {\r\n    sprite.velocityX = -5;\r\n  }\r\n  else {\r\n    sprite.velocityX = 5;\r\n  }\r\n}\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "",
      "description": "",
      "code": "```\nvar sprite = createSprite(200, 200);\r\nsprite.velocityX = 1;\r\nfunction draw() {\r\n  background(\"white\");\r\n  drawSprites();\r\n}\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "return_value": "Velocity in the positive x direction.",
  "short_description": "Velocity in the positive x direction of the sprite in pixels per frame.",
  "syntax": "velocityX",
  "tips": "- velocityX can be used similarly to using the \"counter pattern\" on `sprite.x` within the `draw()` function.\r\n- Changing `World.frameRate` will affect the velocityX.\r\n- Sprites all have the same properties and you use the dot notation (combining the name of the sprite, followed by a dot, with the label of the property) to both access and update the property for that sprite.\r\n- Any changes to the properties of a sprite will not be seen until after `drawSprites()` is called."
}