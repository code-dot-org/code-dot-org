{
  "key": "clearInterval",
  "name": "clearInterval(interval)",
  "category": "Control",
  "category_key": "control",
  "content": "Some interval timers do not run forever, but need to be stopped at some time (maybe like a countdown, see the first example). *clearInterval()* uses the value returned by the [setInterval(function, milliseconds)](/docs/applab/setInterval/) function.",
  "examples": [
    {
      "name": "Example: countdown",
      "description": "",
      "code": "```\nvar countdown = 10;\ntextLabel(\"countdown\", countdown);\nvar i = setInterval(function() {\n  countdown = countdown - 1;\n  setText(\"countdown\", countdown);\n  if(countdown === 0) {\n    clearInterval(i);\n  }\n}, 1000);\nconsole.log(\"Interval timer ID: \" + i);\n```"
    },
    {
      "name": "Example: Stop the Presses!",
      "description": "**Example: Stop the Presses!** Run a half second interval timer until a button is pressed.",
      "code": "```\n// Run a half second interval timer until a button is pressed.\nbutton(\"stop\", \"Stop the timer\");\nvar i = setInterval(function() {\n  write(\"Timer code ran!\");\n}, 500);\nonEvent(\"stop\", \"click\", function(){\n  clearInterval(i);\n});\n```"
    }
  ],
  "palette_params": [
    {
      "name": "interval",
      "type": "number",
      "required": true,
      "description": "The value returned by the setInterval function that you want clear."
    }
  ],
  "parameters": [
    "__"
  ],
  "return_value": "No return value.",
  "short_description": "Clears an existing interval timer by passing in the numeric value returned by *setInterval()*.",
  "syntax": "clearInterval(interval);",
  "tips": "### Tips\n- If you want to clear an interval you need to save the value returned by setInterval, var i = setInterval(callback, ms);"
}