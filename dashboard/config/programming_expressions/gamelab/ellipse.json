{
  "key": "ellipse",
  "name": "ellipse()",
  "category": "Drawing",
  "category_key": "drawing",
  "content": "Draws an ellipse onto the display centered at x and y and inscribed in a rectangle with sides length w(idth) and h(eight).\r\n\r\nYou can draw many things with the commands in the Drawing drawer of your Game Lab toolbox. For ellipse(), the x and y coordinates specify the center of the ellipse, relative to the top-left corner of the display area (x:0 y:0). The width and height of the rectangle that the ellipse is inscribed in are measured in pixels. Ellipses are drawn using the current stroke weight and current stroke color, and then filled with the current fill color (unless `noStroke()` or `noFill()` commands have been run).",
  "examples": [
    {
      "name": "Two Ellipses",
      "description": "Draw two ellipses at the same location but with different stroke widths and no fill color.",
      "code": "```\n// Draw two ellipses at the same location but with different stroke widths and no fill color.\r\nstrokeWeight(40);\r\nstroke(\"lightblue\");\r\nnoFill();\r\nellipse(200, 200, 100, 200);\r\nstrokeWeight(1);\r\nstroke(\"black\");\r\nellipse(200, 200, 200, 100);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Quarter of an Ellipse",
      "description": "Change the thickness of a ellipse outline, filled in green, drawn in the upper left corner of the display.",
      "code": "```\n// Change the thickness of a ellipse outline, filled in green, drawn in the upper left corner of the display.\r\nstrokeWeight(20);\r\nfill(\"green\");\r\nellipse(0, 0, 200 ,100);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Animated Ellipse",
      "description": "Use the draw() function to animate an oscillating ellipse.",
      "code": "```\n// Use the draw() function to animate an oscillating ellipse.\r\nvar number = 0;\r\nvar count=0;\r\nfunction draw() {\r\n  background(\"white\");\r\n  ellipse(200, 200, 100-number, 100+number);\r\n  count=count+1;\r\n  if (count<=100) {\r\n      number=number+1;\r\n  }\r\n  else if (count<=200){\r\n    number=number-1;\r\n  }\r\n  else if (count>200) {\r\n    count=0;\r\n  }\r\n}\n```",
      "app": "https://studio.code.org/projects/gamelab/r0WZgNVXawAK00MLTl2X3Q/",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "",
      "description": "",
      "code": "```\n// Draw a 100x100 pixel ellipse (circle) in the center of the display.\r\nellipse(200, 200, 100, 100);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Red Line",
      "description": "Change the color of the ellipse outline drawn in the center of the display.",
      "code": "```\n// Change the color of the ellipse outline drawn in the center of the display.\r\nstroke(\"red\");\r\nellipse(160, 240, 100 ,200);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "x",
      "type": "Number",
      "required": true,
      "description": "The x-location in pixels of the center of the ellipse, from left to right on the display. Should be a number from 0 to 400, but negative numbers will center the ellipse to the left of the display and numbers greater than 400 will center the ellipse to the right of the display (possibly unseen)."
    },
    {
      "name": "y",
      "type": "Number",
      "required": true,
      "description": "The y-location in pixels of the center of the ellipse, from top to bottom on the display. Should be a number from 0 to 400, but negative numbers will center the ellipse above the display and numbers greater than 400 will center the ellipse below the display (possibly unseen)."
    },
    {
      "name": "w",
      "type": "Number",
      "required": true,
      "description": "The horizontal width in pixels of the ellipse. Should be a positive number, but negative numbers will draw the same ellipse as positive."
    },
    {
      "name": "h",
      "type": "Number",
      "required": true,
      "description": "The vertical height in pixels of the ellipse. Should be a positive number, but negative numbers will draw the same ellipse as positive."
    }
  ],
  "return_value": "No return value. Outputs to the display only.",
  "short_description": "Draws an ellipse onto the display centered at x and y and inscribed in a rectangle with sides length w(idth) and h(eight).",
  "syntax": "ellipse(x, y, w, h)",
  "tips": "- If you're having trouble getting an ellipse to show up, make sure that `noFill()` or `noStroke()` haven't been called, and where you're trying to draw the ellipse fits within the coordinates of the display (400 x 400).\r\n- Anything you draw will overlap previous things you drew. The sequence of drawing statements is usually important.\r\n- The default stroke is black, the default stroke weight is 1 pixel, and the default fill is gray. Change the width of the line, color of the line, and fill color used to draw all subsequent shapes using `strokeWeight()`, `stroke()`, and `fill()`.\r\n- When drawing thick lines, the width and length of the ellipse is relative to the center of the perimeter line. The outside perimeter of the ellipse will be one half the stroke weight larger all around."
}