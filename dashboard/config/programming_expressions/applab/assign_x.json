{
  "key": "assign_x",
  "name": "Assign x",
  "category": "Variables",
  "category_key": "variables",
  "content": "[name]\r\n\r\n## Assign a value to a variable\r\n\r\n[/name]\r\n\r\n[category]\r\n\r\nCategory: Variables\r\n\r\n[/category]\r\n\r\n[description]\r\n\r\n[short_description]\r\n\r\nAssigns a value to a previously declared variable.\r\n\r\n[/short_description]\r\n\r\nTo process data in our apps we need to assign values to memory locations we have previously named using *var* to declare a variable. Programmers read the statement \"area = length * width;\" as \"area gets length times width\". The variable getting the value always goes on the left hand side of the assignment operator =. The right hand side of the assignment operator can be a number or a string, or the number or string returned by a function, or the numeric or string result of the evaluation of an expression.\r\n\r\n[/description]\r\n\r\n### Examples\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n```\r\n// Declare, assign, and output the value of a variable.\r\nvar x;\r\nx = 5;\r\nconsole.log(\"x has the value \" + x)\r\n```\r\n\r\n[/example]\r\n\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n**Example: Circumference and Area** Calculate the circumference and area of a circle with radius 10.\r\n\r\n```\r\n// Calculate the circumference and area of a circle with radius 10.\r\nvar radius, circumference, area;\r\nradius = 10;\r\ncircumference = 2 * Math.PI * radius;\r\narea = Math.PI * radius * radius;\r\nconsole.log(\"Circle radius 10 has circumference of \" + circumference + \" and area of \" + area);\r\n```\r\n\r\n[/example]\r\n\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n**Example: Fibonacci** Generate the first nine terms of the Fibonacci series.\r\n\r\n```\r\n// Generate the first 9 terms of the Fibonacci series.\r\nvar termA, termB, termC;\r\ntermA = 1;\r\ntermB = 1;\r\ntermC = termA + termB;\r\nconsole.log(termA + \" \" + termB + \" \" + termC);\r\ntermA = termB + termC;\r\ntermB = termC + termA;\r\ntermC = termA + termB;\r\nconsole.log(termA + \" \" + termB + \" \" + termC);\r\ntermA = termB + termC;\r\ntermB = termC + termA;\r\ntermC = termA + termB;\r\nconsole.log(termA + \" \" + termB + \" \" + termC);\r\n```\r\n\r\n[/example]\r\n\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n**Example: Message Board** Collect, count and display messages from friends.\r\n\r\n```\r\n// Collect, count and display messages from friends.\r\ntextLabel(\"myTextLabel\", \"Type a message and press press enter\");\r\ntextInput(\"myTextInput\", \"\");\r\nvar count;\r\ncount=1;\r\nonEvent(\"myTextInput\", \"change\", function(event) {\r\n  var myText;\r\n  myText = getText(\"myTextInput\");\r\n  write(\"Message #\" + count + \": \" + myText);\r\n  setText(\"myTextInput\", \"\");\r\n  count = count + 1;\r\n});\r\n```\r\n\r\n[/example]\r\n\r\n____________________________________________________\r\n\r\n[syntax]\r\n\r\n### Syntax\r\n\r\n```\r\nx = ___;\r\n```\r\n\r\n[/syntax]\r\n\r\n[parameters]\r\n\r\n### Parameters\r\n\r\n| Name  | Type | Required? | Description |\r\n|-----------------|------|-----------|-------------|\r\n| x | variable name | Yes | The name you will use in the program to reference the variable. Must begin with a letter, contain no spaces, and may contain letters, digits, - and _. |\r\n| ___ | any type | Yes | The right hand side of the assignment operator can be a number or a string, or the number or string returned by a function, or the numeric or string result of the evaluation of an expression. |\r\n\r\n[/parameters]\r\n\r\n[returns]\r\n\r\n### Returns\r\nNo return value. Variable assigned value in memory.\r\n\r\n[/returns]\r\n\r\n[tips]\r\n\r\n### Tips\r\n\r\n- The variable must be declared using *var* before it can be assigned its initial value. \r\n- You can use the same variable on both the right hand side of the assignment operator = and the left hand side. This is sometimes used for a counter *count = count + 1;*\r\n- = is the assignment operator. == is the boolean check for equivalency operator.\r\n\r\n[/tips]\r\n\r\n[bug]\r\n\r\nFound a bug in the documentation? Let us know at documentation@code.org\r\n\r\n[/bug]",
  "return_value": "Does not return a value.  Assigns 2 to `someVal`.  Assumes that `someVal` has already been declared.",
  "short_description": "\nAssign a value to a variable\nCategory: Variables",
  "syntax": "x = __;"
}