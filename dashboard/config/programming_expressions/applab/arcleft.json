{
  "key": "arcLeft",
  "name": "arcLeft",
  "category": "Turtle",
  "category_key": "turtle",
  "content": "The turtle is not limited to only moving in a straight line. arcLeft(angle,radius) moves the turtle counterclockwise along an *angle* degree arc of a *radius* sized circle. The center of the circle is *radius* pixels to the left of the starting turtle position and direction.",
  "examples": [
    {
      "name": "Example: One Ring to Rule Them All",
      "description": "Draw a full circle counterclockwise.",
      "code": "```\n// Draw a full circle counterclockwise.\npenColor(\"gold\");\npenWidth(15);\narcLeft(360, 50);\n```"
    },
    {
      "name": "Example: Spiral",
      "description": "Spiral into the center of a circle.",
      "code": "```\n// Spiral into the center of a circle.\nfor (var radius=50; radius>0; radius=radius-5) {\n  arcLeft(180, radius);\n}\n```",
      "image": "https://images.code.org/ceada786c67b4adf4d07b827ba636830-image-1445794379473.gif"
    },
    {
      "name": "Draw a Quarter Circle",
      "description": "",
      "code": "```\n// Draw a quarter circle counterclockwise.\narcLeft(90, 25);\n```"
    },
    {
      "name": "Example: Negative Angle",
      "description": "arcLeft always moves the turtle counterclockwise. For a negative *angle* the turtle moves (360+*angle*) degrees.\n",
      "code": "```\n// arcLeft always moves the turtle counterclockwise. \n// For a negative angle the turtle moves (360+angle) degrees.\narcLeft(-45, 100);\n```"
    }
  ],
  "palette_params": [
    {
      "name": "angle",
      "type": "number",
      "required": true,
      "description": "The angle degree arc to move the turtle counterclockwise in a circle."
    },
    {
      "name": "radius",
      "type": "number",
      "required": true,
      "description": "The radius of the circle that is placed left of the turtle. radius must be >= 0."
    }
  ],
  "parameters": [
    "angle",
    "radius"
  ],
  "return_value": "No return value. Moves turtle only.",
  "short_description": "Moves the turtle forward and to the left in a smooth, circular arc.",
  "syntax": "arcLeft(angle, radius);",
  "tips": "- Use [penUp()](/docs/applab/penUp) before calling arcLeft() to have the turtle not draw as it moves.\n- You can specify a radius of 0, which makes arcLeft() act the same as [turnLeft()](/docs/applab/turnLeft).\n- Use alternating with [arcRight()](/docs/applab/arcRight) to make wavy lines."
}