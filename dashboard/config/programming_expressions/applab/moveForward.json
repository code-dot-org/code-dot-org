{
  "key": "moveForward",
  "name": "moveForward",
  "category": "Turtle",
  "category_key": "turtle",
  "content": "[name]\n\n## moveForward(*pixels*)\n\n[/name]\n\n[category]\n\nCategory: Turtle\n\n[/category]\n\n[description]\n\n[short_description]\n\nMoves the turtle forward a given number of pixels in the current direction.\n\n[/short_description]\n\nmoveForward() is the easiest way to move the turtle in a straight line in the direction it is facing. When used with turnLeft() and turnRight() you can navigate the turtle anywhere or draw any straight line pictures. \n\n[/description]\n\n### Examples\n____________________________________________________\n\n[example]\n\n```\n// Move forward 25 pixels (default)\nmoveForward(); \n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Letter L** Draw the letter L with moveForward() and turnLeft() only.\n\n```\n// Draw the letter L with moveForward() and turnLeft() only.\nturnLeft();\nturnLeft();\nmoveForward();\nmoveForward();\nturnLeft();\nmoveForward();\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Long Line** Move forward 200 pixels.\n\n```\n// Move forward 200 pixels\nmoveForward(200); \n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Lemon Popsicle** Draw a lemon popsicle by changing the pen color and width, and by specifing how many pixels the turtle should move in the direction forwards and backwards.\n\n<table>\n<tr>\n<td style=\"border-style:none; width:90%; padding:0px\">\n<pre>\n// Draw a lemon popsicle by changing the pen color and width\n// and by specifing how many pixels the turtle should move in the direction forwards and backwards.\npenColor(\"yellow\");\npenWidth(40);\nmoveForward(100);\npenWidth(5);\npenColor(\"brown\");\nmoveForward(-200);\n</pre>\n</td>\n<td style=\"border-style:none; width:10%; padding:0px\">\n<img src='https://images.code.org/0d47dda8effd331957863ddbee33820a-image-1445603074466.gif'>\n</td>\n</tr>\n</table>\n\n[/example]\n\n[syntax]\n\n### Syntax\n\n```\nmoveForward(pixels);\n```\n\n[/syntax]\n\n[parameters]\n\n### Parameters\n\n| Name  | Type | Required? | Description |\n|-----------------|------|-----------|-------------|\n| pixels | number | No | The number of pixels to move the turtle forward in its current direction. If not provided, the turtle will move forward 25 pixels  |\n\n[/parameters]\n\n[returns]\n\n### Returns\nNo return value. Moves turtle only.\n\n[/returns]\n\n[tips]\n\n### Tips\n- Use [penUp()](/docs/applab/penUp) before calling moveForward() to stop the turtle from drawing a line behind it as it moves.\n- The screen default size is 320 pixels wide and 450 pixels high, but you can move the turtle off the screen by exceeding those dimensions.\n- There are three ways to move the turtle in a straight line:\n\t- Specify the number of pixels to move the turtle in the direction it is facing using moveForward(pixels) or [moveBackward(pixels)](/docs/applab/moveBackward).\n\t- Specify a number of pixels in the x and y direction to move the turtle using [move(x,y)](/docs/applab/move), regardless of direction that the turtle is facing.\n\t- Specify an x and y pixel location on the screen to move the turtle to using [moveTo(x,y)](/docs/applab/moveTo), regardless of direction that the turtle is facing.\n\n[/tips]\n\n[bug]\n\nFound a bug in the documentation? Let us know at documentation@code.org\n\n[/bug]",
  "parameters": [
    "pixels"
  ],
  "short_description": "\nmoveForward(pixels)\nCategory: Turtle",
  "syntax": "moveForward(pixels)"
}