{
  "key": "turnTo",
  "name": "turnTo",
  "category": "Turtle",
  "category_key": "turtle",
  "content": "Sometimes you need to orient the turtle in a certain direction before drawing something. turnTo changes the turtle's direction to be *angle* degrees clockwise from a line pointing up. The turtle's position remains the same.\n\n![](https://images.code.org/0803b1c9af5f61e082cea1d2fea38305-569c4a42322db34372bbbd2096cbb5d4-image-1445680553509.jpg)",
  "examples": [
    {
      "name": "Example: Turn To",
      "code": "```\n// Turtle faces right.\nturnTo(90);    \n```"
    },
    {
      "name": "Example: Look South",
      "description": "Turtle faces down.",
      "code": "```\n// Turtle faces down.\nturnTo(180);\n```"
    },
    {
      "name": "Example: Clock Face",
      "description": "Draw a minute and hour marks on a clock face",
      "code": "```\n// Draw a minute and five minute marks on a clock face\nfor (var minute = 0; minute &lt;= 60; minute++) {\n  penUp();\n  moveTo(160, 240);\n  turnTo(minute*6); // Every minute is 6 degrees.\n  penUp();\n  if(Math.round(minute/5)*5==minute) { // Must be a five minute mark.\n    moveForward(50);\n    penDown();\n    moveForward(25);\n  }\n  else {\n    moveForward(70);\n    penDown();\n    moveForward(5);   \n  }\n}\n```",
      "image": "https://images.code.org/5021ac3ccb9e08af3b68046c47415e46-image-1445681906473.gif"
    }
  ],
  "palette_params": [
    {
      "name": "angle",
      "type": "number",
      "required": true,
      "description": "The angle to point the turtle."
    }
  ],
  "parameters": [
    "angle"
  ],
  "return_value": "No return value. Rotates turtle only.",
  "short_description": "Changes the turtle's direction to a specific angle. 0 is up, 90 is right, 180 is down, and 270 is left.",
  "syntax": "turnTo(angle);",
  "tips": "- You can specify a negative angle to rotate to, measured counterclockwise from up (0 angle).\n- There are three ways to rotate the turtle in place\n  - turnRight(*angle*) - Rotates the turtle right **by** the specified angle relative to the current turtle direction. The turtle’s position remains the same.\n  - turnLeft(*angle*) - Rotates the turtle left **by** the specified angle relative to the current turtle direction. The turtle’s position remains the same.\n  - turnTo(*angle*) - Rotates the turtle **to** a specific angle. 0 is up, 90 is right, 180 is down, and 270 is left. The turtle’s position remains the same."
}