{
  "key": "indexOf",
  "name": "[string].indexOf(searchValue)",
  "category": "Variables",
  "category_key": "variables",
  "content": "In apps you sometimes need to check if one string is contained in another string, and if so, where. For example, to split comma delimted data into individual data fields. *indexOf()* returns a the numeric position where the *searchString* was first found in the string, else it returns -1 if =not found. To call the *indexOf* function you need use a variable containing a string, followed by a dot (\".\"), followed by the function name \"indexof()\" with a string argument or variable of what to search for.",
  "examples": [
    {
      "name": "Example: Question Check",
      "code": "```\n// See if a sentence is a question or not.\nvar sentence=\"How old are you?\";\nconsole.log(sentence.indexOf(\"?\") == (sentence.length-1));\n```\n"
    },
    {
      "name": "Example: Original Gettysburg Address",
      "description": "Demonstrate that indexOf() is case sensitive.",
      "code": "```\n// Demonstrate that indexOf is case sensitive.\nvar gettysburgAddress=\"Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.\";\nconsole.log(gettysburgAddress.indexOf(\"Four\"));\nconsole.log(gettysburgAddress.indexOf(\"four\"));\n```"
    },
    {
      "name": "Example: Parse Comma-Delimited Data",
      "description": "Parse a comma-delimted string into fields.",
      "code": "```\n// Parse a comma-delimted string into fields.\nvar data=\"Titantic,1997,James Cameron,PG-13\";\nvar commaPosition=data.indexOf(\",\");\nwhile (commaPosition!=-1) {\n  console.log(data.substring(0,commaPosition));\n  data=data.substring(commaPosition+1,data.length);\n  commaPosition=data.indexOf(\",\");\n}\nconsole.log(data);\n```"
    }
  ],
  "palette_params": [
    {
      "name": "string",
      "type": "string",
      "required": true,
      "description": "The string to search."
    },
    {
      "name": "searchValue",
      "type": "string",
      "required": true,
      "description": "The string to search for."
    }
  ],
  "parameters": [
    "searchValue"
  ],
  "return_value": "Returns the position of the first occurrence of *searchValue* within the string, else returns -1 if not found.",
  "short_description": "Returns the position of the first occurrence of *searchValue* within the string, else returns -1 if not found.",
  "syntax": "[string].indexOf(searchValue)",
  "tips": "- The search is a case-sensitive search. "
}