{
  "key": "indexOf",
  "name": "indexOf",
  "category": "Variables",
  "category_key": "variables",
  "content": "[name]\n\n## [string].indexOf(searchValue)\n\n[/name]\n\n[category]\n\nCategory: Variables\n\n[/category]\n\n[description]\n\n[short_description]\n\nReturns the position of the first occurrence of *searchValue* within the string, else returns -1 if not found.\n\n[/short_description]\n\nIn apps you sometimes need to check if one string is contained in another string, and if so, where. For example, to split comma delimted data into individual data fields. *indexOf()* returns a the numeric position where the *searchString* was first found in the string, else it returns -1 if =not found. To call the *indexOf* function you need use a variable containing a string, followed by a dot (\".\"), followed by the function name \"indexof()\" with a string argument or variable of what to search for.\n\n[/description]\n\n### Examples\n____________________________________________________\n\n[example]\n\n```\n// See if a sentence is a question or not.\nvar sentence=\"How old are you?\";\nconsole.log(sentence.indexOf(\"?\") == (sentence.length-1));\n```\n\n[/example]\n____________________________________________________\n\n[example]\n\n**Example: Original Gettysburg Address** Demonstrate that indexOf() is case sensitive.\n\n```\n// Demonstrate that indexOf is case sensitive.\nvar gettysburgAddress=\"Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.\";\nconsole.log(gettysburgAddress.indexOf(\"Four\"));\nconsole.log(gettysburgAddress.indexOf(\"four\"));\n```\n\n[/example]\n____________________________________________________\n[example]\n\n**Example: Parse Comma-Delimited Data** Parse a comma-delimted string into fields.\n\n```\n// Parse a comma-delimted string into fields.\nvar data=\"Titantic,1997,James Cameron,PG-13\";\nvar commaPosition=data.indexOf(\",\");\nwhile (commaPosition!=-1) {\n  console.log(data.substring(0,commaPosition));\n  data=data.substring(commaPosition+1,data.length);\n  commaPosition=data.indexOf(\",\");\n}\nconsole.log(data);\n```\n\n[/example]\n____________________________________________________\n\n[parameters]\n\n### Parameters\n\n| Name  | Type | Required? | Description |\n|-----------------|------|-----------|-------------|\n| string | string | Yes | The string to search. |\n| searchValue | string | Yes | The string to search for. |\n\n[/parameters]\n\n[returns]\n\n### Returns\nReturns the position of the first occurrence of *searchValue* within the string, else returns -1 if not found.\n\n[/returns]\n\n[tips]\n\n### Tips\n- The search is a case-sensitive search. \n\n[/tips]\n\n",
  "parameters": [
    "searchValue"
  ],
  "short_description": "\n[string].indexOf(searchValue)\nCategory: Variables",
  "syntax": "[string].indexOf(searchValue)"
}