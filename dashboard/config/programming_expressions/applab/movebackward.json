{
  "key": "moveBackward",
  "name": "moveBackward",
  "category": "Turtle",
  "category_key": "turtle",
  "content": "[name]\n\n## moveBackward(*pixels*)\n\n[/name]\n\n[category]\n\nCategory: Turtle\n\n[/category]\n\n[description]\n\n[short_description]\n\nMoves the turtle backward a given number of pixels from the current direction.\n\n[/short_description]\n\nSometimes it is more natural to tell the turtle to moveBackward() in a straight line instead of telling the turtle to moveForward() a negative number of pixels.\n\n[/description]\n\n### Examples\n____________________________________________________\n\n[example]\n\n```\n// Move backward 25 pixels (default)\nmoveBackward();\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Letter L** Draw the letter L with moveBackward() and turnLeft() only.\n\n```\n// Draw the letter L with moveBackward() and turnLeft() only.\nmoveBackward();\nmoveBackward();\nturnLeft();\nmoveBackward();\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Long Line** Move backward 200 pixels.\n\n```\n// Move backward 200 pixels.\nmoveBackward(200);\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Barbell** Draw a barbell using moveForward(), moveBackward() and dot().\n\n```\n// Draw a barbell using moveForward(), moveBackward() and dot().\nmoveForward(50);\ndot(10);\nmoveBackward(100);\ndot(10);\nmoveForward(50);\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Parallel Park the Turtle** Use canvas drawing and moveBackward() to parallel park.\n\n<table>\n<tr>\n<td style=\"border-style:none; width:90%; padding:0px\">\n<pre>\n// Use canvas drawing and moveBackward() to parallel park.\nspeed(10);\ncreateCanvas(\"id\", 320, 480);\nsetFillColor(\"yellow\");\nrect(180, 100, 60, 100);\nsetFillColor(\"red\");\nrect(180, 300, 60, 100);\nshow();\nmoveForward(75);\nmoveBackward(50);\nturnLeft(45);\nmoveBackward(75);\nturnRight(45);\nmoveForward();\n</pre>\n</td>\n<td style=\"border-style:none; width:10%; padding:0px\">\n<img src='https://images.code.org/78a29825b8039d040862cd77bec86ea2-image-1445625258937.gif'>\n</td>\n</tr>\n</table>\n\n[/example]\n\n____________________________________________________\n\n[parameters]\n\n### Parameters\n\n| Name  | Type | Required? | Description |\n|-----------------|------|-----------|-------------|\n| pixels | number | No | The number of pixels to move the turtle backward from its current direction. If not provided, the turtle will move forward 25 pixels  |\n\n[/parameters]\n\n[returns]\n\n### Returns\nNo return value. Moves turtle only.\n\n[/returns]\n\n[tips]\n\n### Tips\n- Use [penUp()](/docs/applab/penUp) before calling moveBackward() to have the turtle not draw as it moves.\n- The screen default size is 320 pixels wide and 450 pixels high, but you can move the turtle off the screen by exceeding those dimensions.\n- There are three ways to move the turtle in a straight line:\n\t- Specify the number of pixels to move the turtle in the direction it is facing using [moveForward(pixels)](/docs/applab/moveForward) or moveBackward(pixels).\n\t- Specify a number of pixels in the x and y direction to move the turtle using [move(x,y)](/docs/applab/move), regardless of direction that the turtle is facing.\n\t- Specify an x and y pixel location on the screen to move the turtle to using [moveTo(x,y)](/docs/applab/moveTo), regardless of direction that the turtle is facing.\n\n[/tips]\n\n",
  "parameters": [
    "pixels"
  ],
  "short_description": "\nmoveBackward(pixels)\nCategory: Turtle",
  "syntax": "moveBackward(pixels);"
}