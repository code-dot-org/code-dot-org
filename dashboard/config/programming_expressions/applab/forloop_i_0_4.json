{
  "key": "forLoop_i_0_4",
  "name": "For loop",
  "category": "Control",
  "category_key": "control",
  "content": "Executes a block of statements a certain number of times depending on the initialization expression, conditional expression, and increment expression.\n\nInstead of typing a block of statements again and again, you can use a *for loop* around the block of statements. The most common usage of a for loop is simply to use it as a *counting* loop to execute a block of code a certain number of times.\n\nHere is a typical construct for loop used to count from 0 to 3 to execute the block of code 4 times:\n\n```for(var i = 0; i < 4; i++)```\n\n**initialization**  `var i = 0;` is executed once, before anything else. Create an identifier named *i* and initialize it to 0.\n \n**condition** `i < 4;` is checked before each iteration, to see if the block of statements should execute or not. If *i* is less than 4.\n\n**increment** `i++` is executed after every iteration, after the block of statements is executed. Increase (increment) *i* by 1.",
  "examples": [
    {
      "name": "Basic Example",
      "description": "```\n// Draw 4 dots along a line.\nfor(var i=0; i<4; i++){\n\tdot(5);\n\tmoveForward();\n}\n```"
    },
    {
      "name": "Example: Count Down",
      "description": "Count down to zero from ten using a negative increment.\n",
      "code": "```\n// Count down to zero from 10.\nfor(var i=10; i>0; i--){\n    write(i) ;\n}\nwrite('Blast Off!');\n```"
    },
    {
      "name": "Example: One Inch",
      "description": "Draw 8 tic marks along a line.",
      "code": "```\npenUp();\nturnLeft();\nmoveForward(100);\nturnLeft(180);\npenDown();\nfor(var i=0; i<7; i++){\n    ticMark();\n    moveForward();\n}\nticMark();\npenUp();\nmoveForward();\n\nfunction ticMark() {\n    turnLeft();\n    moveForward(5);\n    turnLeft(180);\n    moveForward(5); \n    turnLeft();  \n}\n```"
    },
    {
      "name": "Example: Rake",
      "description": "Draw a rake ranging the angles from -45 to 45 by 5s.",
      "code": "```\n// Draw a rake ranging the angles from -45 to 45 by 5s.\nfor(var angle=-45; angle<=45; angle=angle+5){\n\tturnTo(angle);\n\tmoveForward(100);\n\tturnLeft(180);\n\tmoveForward(100);\n}\nturnTo(180);\nmoveForward(200);\n```"
    },
    {
      "name": "Example: Flower",
      "description": "Draw a flower with a parameter number of petals. Works best for petalCount between 5 and 10.",
      "code": "```\n// Draw a flower with a parameter number of petals. Works best for petalCount between 5 and 10.\ndrawFlower(5);\n\nfunction drawFlower(petalCount) {\n  penColor(\"pink\");\n  penUp();\n  for(var i=0; i&lt;360; i=i+(360/petalCount)){\n    turnTo(i);\n    moveForward(360/petalCount);\n    dot((2/3)*360/petalCount);\n    moveForward(-360/petalCount);\t\n  }\n  penColor(\"blue\");\n  dot(360/petalCount/2);\n}\n```",
      "image": "https://images.code.org/807a8c3df4c66aae1e5db637ffda7e59-image-1446383236765.gif"
    },
    {
      "name": "Example: Random Die Rolls",
      "description": "Simulate rolling a die using a random number from 1 to 6, and roll the die 10000 times to check if the expected roll is 3.5.",
      "code": "```\n// Simulate rolling a die using a random number from 1 to 6, and roll the die 10000 times to check if the expected roll is 3.5.\nvar sum = 0;\nfor (var i = 0; i < 10000; i++) {\n    sum = sum + randomNumber(1,6);\n}\nconsole.log(sum/10000);\n```"
    }
  ],
  "palette_params": [
    {
      "name": "initialization",
      "type": "AppLab Expression",
      "required": true,
      "description": "executed once, before anything else"
    },
    {
      "name": "condition",
      "type": "Boolean expression",
      "required": true,
      "description": "checked before each iteration, to see if the block of statements should execute or not."
    },
    {
      "name": "increment",
      "type": "AppLab Expression",
      "required": true,
      "description": "executed after every iteration, after the block of statements is executed"
    }
  ],
  "short_description": "\nfor loop\nCategory: Control",
  "syntax": "for (initialization; condition; increment) {\n  // block of statements\n}",
  "tips": "- You do not need to use *i* in the for loop statement, you can use any declared and initialized identifier.\n- You can start (initialization) and end (condition) the loop at any values. \n- You can use any increment, positive or negative.\n- Be careful not to code an infinite loop where the condition is never false.\n- Be careful not to code a loop that never executes because the condition is never true."
}