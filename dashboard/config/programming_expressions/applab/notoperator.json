{
  "key": "notOperator",
  "name": "Not operator",
  "category": "Math",
  "category_key": "math",
  "content": "[name]\r\n\r\n## Not operator\r\n\r\n[/name]\r\n\r\n[category]\r\n\r\nCategory: Math\r\n\r\n[/category]\r\n\r\n[description]\r\n\r\n[short_description]\r\n\r\nReturns false if the expression is true; otherwise, returns true.\r\n\r\n[/short_description]\r\n\r\nYou can stick a NOT (!) in front of any boolean expression to invert its result. This opens the door to express the same logical statements in different ways.\r\n\r\n[/description]\r\n\r\n### Examples\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n```\r\n// Truth table for the boolean NOT operator.\r\nconsole.log(!true);\r\nconsole.log(!false);\r\n```\r\n\r\n[/example]\r\n\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n**Example: Take Your Temperature**  Check (two different ways) for temperature in a good range or not.\r\n\r\n```\r\n// Check for temperature in a good range or not.\r\ntextLabel(\"tempLabelID\", \"What is your temperature?\");\r\ntextInput(\"tempID\", \"\");\r\nbutton(\"buttonID\", \"Submit\");\r\ntextLabel(\"tempMessageID1\", \"\");\r\ntextLabel(\"tempMessageID2\", \"\");\r\nonEvent(\"buttonID\", \"click\", function(event) {\r\n  setText(\"tempMessageID1\",\"\");\r\n  setText(\"tempMessageID2\",\"\");  \r\n  var temp = getText(\"tempID\");\r\n  if (!(temp >= 98 && temp <= 99.5) ) {\r\n    setText(\"tempMessageID1\", \"You may be sick.\");\r\n  }\r\n  else {\r\n    setText(\"tempMessageID1\", \"Your temperature is fine.\");\r\n  }\r\n  if (!(temp >= 98) || !(temp <= 99.5) ) {\r\n    setText(\"tempMessageID2\", \"You may be sick.\");\r\n  }\r\n  else {\r\n    setText(\"tempMessageID2\", \"Your temperature is fine.\");\r\n  }\r\n});\r\n```\r\n\r\n[/example]\r\n\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n**Example: Working 9 to 5** Determines if it is currently working hours.\r\n\r\n```\r\n// Determines if it is currently working hours.\r\nfunction IsWorkingHours() {\r\n    var now = new Date();\r\n    var hours = now.getHours();\r\n    var workHours = false;\r\n    if (hours >= 9 && hours < 17) {\r\n        workHours = true; \r\n    }\r\n    return workHours;\r\n}\r\n\r\nif (!IsWorkingHours()) {\r\n    console.log('take a break');\r\n} else {\r\n    console.log('get to work');\r\n}\r\n```\r\n\r\n[/example]\r\n\r\n____________________________________________________\r\n\r\n[syntax]\r\n\r\n### Syntax\r\n\r\n```\r\n!expression\r\n```\r\n\r\n[/syntax]\r\n\r\n[parameters]\r\n\r\n### Parameters\r\n\r\n| Name  | Type | Required? | Description |\r\n|-----------------|------|-----------|-------------|\r\n| expression | boolean | Yes | The boolean expression to invert the result of. |\r\n\r\n[/parameters]\r\n\r\n[returns]\r\n\r\n### Returns\r\nBoolean true or false\r\n\r\n[/returns]\r\n\r\n[tips]\r\n\r\n### Tips\r\n- Some complex decisions can sometimes be rewritten to use an ! operator. It is fine to choose whichever reads clearest.\r\n\r\n[/tips]\r\n\r\n[bug]\r\n\r\nFound a bug in the documentation? Let us know at documentation@code.org\r\n\r\n[/bug]",
  "return_value": "Boolean (true/false) value",
  "short_description": "\nNot operator\nCategory: Math",
  "syntax": "!__"
}