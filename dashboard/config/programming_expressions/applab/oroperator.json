{
  "key": "orOperator",
  "name": "Or operator",
  "category": "Math",
  "category_key": "math",
  "content": "More complex decisions sometimes allow one or another thing to be true. The *||* operator allows you to check if either operand expression is true (or both), and then possibly perform some specific action using an *if*, *if-else*, or *while* block.",
  "examples": [
    {
      "name": "Example: Typical Usage",
      "description": "Truth table for the boolean OR operator.",
      "code": "```\nconsole.log(true || true);\nconsole.log(true || false);\nconsole.log(false || true);\nconsole.log(false || false);\n```",
      "image": "https://images.code.org/fb54113f9b33ee873c60d5ca67fb2e54-image-1450178507165.jpg"
    },
    {
      "name": "Example: Take Your Temperature",
      "description": "Check for temperature outside a good range or not.",
      "code": "```\n// Check for temperature outside a good range or not.\ntextLabel(\"tempLabelID\", \"What is your temperature?\");\ntextInput(\"tempID\", \"\");\nbutton(\"buttonID\", \"Submit\");\ntextLabel(\"tempMessageID\", \"\");\nonEvent(\"buttonID\", \"click\", function(event) {\n  setText(\"tempMessageID\",\"\");\n  var temp = getText(\"tempID\");\n  if (temp < 98 || temp > 99.5) {\n    setText(\"tempMessageID\", \"Your temperature is fine.\");\n  }\n  else {\n    setText(\"tempMessageID\", \"You may be sick.\");\n  }\n});\n```"
    },
    {
      "name": "Example: Thank Goodness It's Friday!",
      "description": "Determines if it is currently the weekend.",
      "code": "```\n// Determines if it is currently the weekend.\nvar now = new Date(); \nvar dayOfWeek = now.getDay();\nvar isWeekend = false;\nif (dayOfWeek == 0 || dayOfWeek == 6) {\n    isWeekend = true;\n}\nconsole.log(isWeekend);\n```"
    }
  ],
  "palette_params": [
    {
      "name": "expression1",
      "type": "boolean",
      "required": true,
      "description": "The first boolean expression to evaluate."
    },
    {
      "name": "expression2",
      "type": "boolean",
      "required": true,
      "description": "The second boolean expression to evaluate."
    }
  ],
  "return_value": "Boolean (true or false).",
  "short_description": "Returns true when either expression is true and false otherwise.",
  "syntax": "expression1 || expression2",
  "tips": "- Some complex decisions using an || operator can sometimes be rewritten to use an && operator. It is fine to choose whichever reads clearest."
}