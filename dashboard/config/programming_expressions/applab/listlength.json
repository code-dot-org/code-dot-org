{
  "key": "listLength",
  "name": "[list].length",
  "category": "Variables",
  "category_key": "variables",
  "content": "Since our collections of data may change while the app is running, we might need to know how many items are currently in a list (array). *length* will tell us how big the array is. Even if some of the elements in the array are empty strings or zero, they are counted by *length*. \n\nIn addition to the array variable name, items in your array are numbered with an index. The first element in an array is has index 0 and the second had index 1 and so on. As a result the last index is always one less than the length of the array.",
  "examples": [
    {
      "name": "Example: Pick a Day",
      "description": "Pick a random weekday and the last weekday.",
      "code": "```\n// Pick a random weekday and the last weekday.\nvar weekDays = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\"];\nvar randomDayIndex=randomNumber(0,weekDays.length-1);\nvar lastDayIndex=weekDays.length-1;\nconsole.log(\"Random weekday is \" + weekDays[randomDayIndex]);\nconsole.log(\"Last weekday is \" + weekDays[lastDayIndex]);\n```"
    },
    {
      "name": "Example: Make Change",
      "description": "Find the minimum number of coins to make change.",
      "code": "```\n// Find the minimum number of coins to make change.\nvar coinValues = [1,5,10,25];\nvar coinCounts = [0,0,0,0];\nvar changeAmount = promptNum(\"How much change must I give you?\");\nwhile (changeAmount>0) {\n  for (var i=coinValues.length-1; i>=0; i--) {\n    var currentCoin=coinValues[i];\n    while (changeAmount>=currentCoin) {\n      changeAmount=changeAmount-currentCoin;\n      coinCounts[i]++;\n    }\n  }\n}\nconsole.log(coinCounts);\n```"
    }
  ],
  "palette_params": [
    {
      "name": "list",
      "type": "variable name",
      "required": true,
      "description": "The variable name of the list (array) you want to know the length of."
    }
  ],
  "return_value": "The whole number length of the list (array).",
  "short_description": "Returns the length of the array.",
  "syntax": "[list].length",
  "tips": "- Off-by-one errors are very common when referencing array elements. Always pay attention to making sure you start at zero and end one less than the length of the array."
}