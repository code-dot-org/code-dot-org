{
  "key": "checkbox",
  "name": "checkbox",
  "category": "UI controls",
  "category_key": "ui_controls",
  "content": "Creates a checkbox on the screen with the initial *checked* boolean value and referenced by the given *id* at default location (0,0).\n\n\nSome apps require the user to check a box if they agree with something, like an app privacy statement.",
  "examples": [
    {
      "name": "Example: Privacy Statement",
      "description": "",
      "code": "```\n// Create a basic privacy statement checkbox.\r\ncheckbox(\"agreeBox\", false);\r\ntextLabel(\"agreeLabel\",\"I agree to the above privacy statement.\",\"agreeBox\");\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Example: Checkbox Click Event",
      "description": "Retrieve and display a checkbox value.",
      "code": "```\n// Retrieve and display a checkbox value.\ncheckbox(\"agreeBox\", false);\ntextLabel(\"agreeLabel\",\"I agree to the above privacy statement.\",\"agreeBox\");\n\ntextLabel(\"response1\",\"Response: \");\ntextLabel(\"response2\",\"\");\nonEvent(\"agreeBox\", \"click\", function() {\n  setText(\"response2\",getChecked(\"agreeBox\"));\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "id",
      "type": "string",
      "required": true,
      "description": "The unique identifier for the screen element. Must begin with a letter, contain no spaces, and may contain letters, digits, - and _. |"
    },
    {
      "name": "checked",
      "type": "boolean",
      "required": true,
      "description": "Whether the checkbox is initially checked."
    }
  ],
  "parameters": [
    "id",
    "checked"
  ],
  "return_value": "No return value. Modifies screen only.",
  "short_description": "Creates a checkbox on the screen with the initial checked boolean value and referenced by the given id at default location (0,0).",
  "syntax": "checkbox(id, checked)",
  "tips": "- If there is another UI element at location (0,0) the checkbox is placed at the next available position to the right or below.\n- There are various UI element modification functions available: [`setText()`(#fff176)](/docs/applab/setText/), [`showElement()`(#fff176)](/docs/applab/showElement/), [`hideElement()`(#fff176)](/docs/applab/hideElement/), [`deleteElement()`(#fff176)](/docs/applab/deleteElement/), [`setPosition()`(#fff176)](/docs/applab/setPosition/), [`setSize()`(#fff176)](/docs/applab/setSize/). \n- There are various UI element query functions available: [`getText()`(#fff176)](/docs/applab/getText/), [`getXPosition()`(#fff176)](/docs/applab/getXPosition/), [`getYPosition()`(#fff176)](/docs/applab/getYPosition/).\n- Buttons can also be created and initi\n- Checkboxes usually have an associated textLabel.\n- If you are asking the user something with multiple responses, consider using grouped radio buttons instead.\n- The checkbox can also be created in design mode.\n"
}