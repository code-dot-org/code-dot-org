{
  "key": "onRecordEvent",
  "name": "onRecordEvent",
  "category": "Data",
  "category_key": "data",
  "content": "[name]\n\n## onRecordEvent(table, callback, *includeAll*)\n\n[/name]\n\n[category]\n\nCategory: Data\n\n[/category]\n\n[description]\n\n[short_description]\n\nExecutes the *callback* function code when a create, update, or delete event occurs (remotely, for any reason) inside the specified table. In other words, *onRecordEvent* is a way for any and all instances of an app to be notified in real time if any changes to the underlying table are made.  The *eventType* (create, update, delete) is passed to the callback function.  By default, the event will only fire if it occurred while the app was running.  If *includeAll* is set to true, however, a create event will also fire for each record that is already in the table.  \n\n[/short_description]\n\n[/description]\n\n### Examples\n____________________________________________________\n\n[example]\n\n**Example: Update chart** Updates chart whenever any record is added, updated, or deleted from the data table.  Assumes a table named foodVotes and a chart named votesChart already exists.  \n\n```\n// On any kind of change to the data table redraw the chart\nonRecordEvent(\"foodVotes\", function(record) {\n   drawChartFromRecords(\"votesChart\", \"bar\", \"foodVotes\", [\"name\", \"count\"]);\n});\n```\n\n[/example]\n____________________________________________________\n\n[example]\n\n**Example: Log events** Log any kind of event happening to the data table to the console by checking for the *eventType*.  Assumes a table named foodVotes already exists.\n\n```\nonRecordEvent(\"foodVotes\", function(record, eventType) {\n  if (eventType == 'create') {\n    console.log('A record for the food ' + record.name + ' was created');\n  } else if (eventType == 'update') {\n    console.log('The record for the food ' + record.name + ' was updated');\n  } else if (eventType == 'delete') {\n    console.log('The record for the food ' + record.name + ' was deleted');\n  } \n});\n```\n\n[/example]\n____________________________________________________\n[example]\n\n**Example: Include all** Set the *includeAll* optional parameter to true to fire create events for existing records and print out info for records that have already been created.  Assumes a table named fav_foods already exists.\n\n```\ntextLabel(\"heading\", \"Everyone's favorite foods:\");\nonRecordEvent(\"fav_foods\", function(record, eventType) {\n  if (eventType == 'create') {\n     write(record.name + \"'s favorite food is \" + record.food + \".\");\n  }\n}, true);\n```\n\n[/example]\n____________________________________________________\n\n[syntax]\n\n### Syntax\n\n```\nonRecordEvent(table, function(record, eventType) {\n  // code to execute\n}, includeAll);\n```\n\n[/syntax]\n\n[parameters]\n\n### Parameters\n\n| Name  | Type | Required? | Description |\n|-----------------|------|-----------|-------------|\n| table | string | Yes | The name of the table to which this event handler applies. |\n| callback | function | Yes | The callback function executed in response to a create, update, or delete event in the specified table. |\n| includeAll | boolean | No | Optional parameter that specifies whether a create event should also fire for each record that is already in the table. Defaults to false.|\n\n<br>\n\n| eventType  | Description                   |\n|-------|-------------------------------|\n| \"create\" | A record has been added to the specified table.  |\n| \"update\" | A record has been updated in the specified table.  |\n| \"delete\" | A record has been deleted in the specified table. |\n\n[/parameters]\n\n[returns]\n\n### Returns\nNo return value, callback function executed.\n\n[/returns]\n\n[tips]\n\n### Tips\n- Donâ€™t use multiple *onRecordEvent* functions to listen to the same table.  Otherwise you may hit a race condition and run into unexpected behavior.\n\n[/tips]\n\n[bug]\n\nFound a bug in the documentation? Let us know at documentation@code.org\n\n[/bug]\n",
  "short_description": "\nonRecordEvent(table, callback, includeAll)\nCategory: Data",
  "syntax": "onRecordEvent(table, callback)"
}