{
  "key": "createButton",
  "name": "createButton()",
  "category": "Maker",
  "category_key": "maker",
  "content": "A command to create a new button object that can be programmed in the same way as the blocks in the Circuit drawer. The var myButton = createButton() command creates a new button object named myButton that you can use in `onBoardEvent()` blocks, just like `buttonL` and `buttonR`. Remember to pass in a pin parameter so the board knows where the button is connected.",
  "examples": [
    {
      "name": "",
      "description": "",
      "code": "```\n// Create a button attached to a pin\r\nvar myButton = createButton(5);\r\n\r\n// Buzz when the button goes down\r\nonBoardEvent(myButton, \"down\", function() {\r\n  buzzer.note(\"G4\", 100);\r\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "Pin",
      "type": "number",
      "required": true,
      "description": "The number of the pin your LED is connected to. This is usually printed on your board, but can also be found in your board's documentation."
    }
  ],
  "parameters": [
    "pin"
  ],
  "return_value": "New button object",
  "short_description": "A command to create a new button object that can be programmed in the same way as the blocks in the Circuit drawer. The var myButton = createButton() command creates a new button object named myButton that you can use in onBoardEvent() blocks, just like buttonL and buttonR. Remember to pass in a pin parameter so the board knows where the button is connected.",
  "syntax": "createButton(pin)",
  "tips": "* You'll need to work in text mode to use this block. You can still drag out blocks that you're familiar with from the Circuit drawer, you'll just need to change the name of the object.\r\n* You can create new button objects on pin 0, 2, 3, 6, and 12."
}