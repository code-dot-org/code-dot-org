{
  "key": "move",
  "name": "move",
  "category": "Turtle",
  "category_key": "turtle",
  "content": "[name]\n\n## move(x, y)\n\n[/name]\n\n[category]\n\nCategory: Turtle\n\n[/category]\n\n[description]\n\n[short_description]\n\nMoves the turtle by adding x pixels to the turtle's current x position and y pixels to the turtle's current y position. \n\n[/short_description]\n\nSome drawings are more easily described by movements of the turtle *relative* to the current turtle location. Unlike moveForward(pixels), the turtle can move in a direction different from its facing direction.\n\n[/description]\n\n### Examples\n____________________________________________________\n\n[example]\n\n```\n// Draw a line while moving the turtle to the right and down.\nmove(50, 50);\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Turtle Direction Irrelevant** Draw the same line as the previous example but with the turtle facing a different direction.\n\n```\n// Draw the same line as the previous example but with the turtle facing a different direction.\nturnRight(90);\nmove(50, 50);\n```\n\n[/example]\n\n____________________________________________________\n\n[example]\n\n**Example: Arrow** Draw a arrow pointing up from a random location on the screen.\n\n<table>\n<tr>\n<td style=\"border-style:none; width:90%; padding:0px\">\n<pre>\n// Draw a arrow pointing up from a random location on the screen.\npenUp();\nmoveTo(randomNumber(320),randomNumber(480));\npenDown();\nmove(0, -100);\nmove(-25, 50);\nmove(50, 0);\nmove(-25, -50);\n</pre>\n</td>\n<td style=\"border-style:none; width:10%; padding:0px\">\n<img src='https://images.code.org/5b6a206fcd8c2bbc5433f11cbdae8d94-image-1445617661083.gif'>\n</td>\n</tr>\n</table>\n\n[/example]\n\n____________________________________________________\n\n[syntax]\n\n### Syntax\n\n```\nmove(x, y);\n```\n\n[/syntax]\n\n[parameters]\n\n### Parameters\n\n| Name  | Type | Required? | Description |\n|-----------------|------|-----------|-------------|\n| x | number | Yes | The number of pixels to move the turtle right.  |\n| y | number | Yes | The number of pixels to move the turtle down.  |\n\n[/parameters]\n\n[returns]\n\n### Returns\nNo return value. Moves turtle only.\n\n[/returns]\n\n[tips]\n\n### Tips\n- Use [penUp()](/docs/applab/penUp) before calling move(x,y) to have the turtle not draw as it moves.\n- The screen default size is 320 pixels wide and 450 pixels high, but you can move the turtle off the screen by exceeding those dimensions.\n- There are three ways to move the turtle in a straight line:\n\t- Specify the number of pixels to move the turtle in the direction it is facing using [moveForward(pixels)](/docs/applab/moveForward) or [moveBackward(pixels)](/docs/applab/moveBackward).\n\t- Specify a number of pixels in the x and y direction to move the turtle using move(x,y), regardless of direction that the turtle is facing.\n\t- Specify an x and y pixel location on the screen to move the turtle to using [moveTo(x,y)](/docs/applab/moveTo), regardless of direction that the turtle is facing.\n\n<img src='https://images.code.org/7de9a1ac26ad8630ebcb92e608c3803c-image-1445616750775.jpg'>\n\n[/tips]\n\n[bug]\n\nFound a bug in the documentation? Let us know at documentation@code.org\n\n[/bug]",
  "parameters": [
    "x",
    "y"
  ],
  "short_description": "\nmove(x, y)\nCategory: Turtle",
  "syntax": "move(x, y)"
}