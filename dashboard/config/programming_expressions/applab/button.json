{
  "key": "button",
  "name": "button",
  "category": "UI controls",
  "category_key": "ui_controls",
  "content": "Creates a button on the screen displaying the *text* provided and referenced by the given *id* at default location (0,0).\n\nMany apps use buttons to allow the user to initiate some app action. An event handler must be created for each type of user interaction with the button using `onEvent()` and the *id*.\n\n\n",
  "examples": [
    {
      "name": "Example: Simple Turtle Control 2",
      "description": "Move the turtle forward or backward depending on the button clicked.",
      "code": "```\n// Move the turtle forward or backward depending on the button clicked.\r\nbutton(\"forward\", \"Move Forward\");\r\nbutton(\"backward\", \"Move Backward\");\r\nonEvent(\"forward\", \"click\", function(event) {\r\n  moveForward();\r\n});\r\n\r\nonEvent(\"backward\", \"click\", function(event) {\r\n  moveBackward();\r\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "",
      "description": "",
      "code": "```\n// Create a \"Click Me\" button.\r\nbutton(\"id\", \"Click Me!\");\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Example: Simple Turtle Control 1",
      "description": "Move the turtle forward on every click of the button.\n",
      "code": "```\n// Move the turtle forward on every click of the button.\nbutton(\"forward\", \"Move Forward\");\nonEvent(\"forward\", \"click\", function(event) {\n  moveForward();\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "id",
      "type": "string",
      "required": true,
      "description": "The unique identifier for the button. The id is used for referencing the button in event handlers or other UI element modification functions. Must begin with a letter, contain no spaces, and may contain letters, digits, - and _. "
    },
    {
      "name": "text",
      "type": "string",
      "required": true,
      "description": "The text displayed within the button. "
    }
  ],
  "parameters": [
    "id",
    "text"
  ],
  "return_value": "No return value. Modifies screen only.",
  "short_description": "Creates a button on the screen displaying the text provided and referenced by the given id at default location (0,0).",
  "syntax": "button(id, text)",
  "tips": "- If there is another UI element at location (0,0) the button is placed at the next available position to the right or below.\n- There are various UI element modification functions available: `setText()`, `showElement()`, `hideElement()`, `deleteElement()`, `setPosition()`, `setSize()`. \n- There are various UI element query functions available: `getText()`, `getXPosition()`, `getYPosition()`.\n- Buttons can also be created and initialized in Design mode."
}