{
  "key": "join",
  "name": "[list].join",
  "category": "Variables",
  "category_key": "variables",
  "content": "Sometimes we want to put all of the items in our lists together. *join* allows us to do this and to choose what we want in between each of the items. The separator we choose will be placed between every single item in the resulting string.",
  "examples": [
    {
      "name": "Example: Simple Join",
      "description": "Join a list of strings with the word \"and\"",
      "code": "```\nvar colors = [\"red\",\"orange\",\"yellow\",\"green\",\"blue\"];\nconsole.log(\"My favorite colors are \" + colors.join(\" and \"));\n```"
    },
    {
      "name": "Example: Multiline-String",
      "description": "Join a string so that each element prints on another line.",
      "code": "```\nvar colors = [\"red\",\"orange\",\"yellow\",\"green\",\"blue\"];\nconsole.log(\"My favorite colors are:\\n\" + colors.join(\" \\n \"));\n```"
    }
  ],
  "palette_params": [
    {
      "name": "list",
      "type": "variable name",
      "required": true,
      "description": "The variable name of the list (array) you want to join"
    },
    {
      "name": "separator",
      "type": "string",
      "description": "The string to use to join the list (array). If none is given a comma will be used"
    }
  ],
  "parameters": [
    "separator"
  ],
  "return_value": "The list (array) as a single string, connected by the given separator.",
  "short_description": "Returns the array as a string with elements joined by an optional separator",
  "syntax": "[list].join(\"separator\")",
  "tips": "- If you use the newline character `\"\\n\"` as your separator you can create a list in which each element prints on a different line.\n"
}