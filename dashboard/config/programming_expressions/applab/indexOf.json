{
  "key": "indexOf",
  "name": "indexOf",
  "category": "Variables",
  "category_key": "variables",
  "content": "[name]\r\n\r\n## [string].indexOf(searchValue)\r\n\r\n[/name]\r\n\r\n[category]\r\n\r\nCategory: Variables\r\n\r\n[/category]\r\n\r\n[description]\r\n\r\n[short_description]\r\n\r\nReturns the position of the first occurrence of *searchValue* within the string, else returns -1 if not found.\r\n\r\n[/short_description]\r\n\r\nIn apps you sometimes need to check if one string is contained in another string, and if so, where. For example, to split comma delimted data into individual data fields. *indexOf()* returns a the numeric position where the *searchString* was first found in the string, else it returns -1 if =not found. To call the *indexOf* function you need use a variable containing a string, followed by a dot (\".\"), followed by the function name \"indexof()\" with a string argument or variable of what to search for.\r\n\r\n[/description]\r\n\r\n### Examples\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n```\r\n// See if a sentence is a question or not.\r\nvar sentence=\"How old are you?\";\r\nconsole.log(sentence.indexOf(\"?\") == (sentence.length-1));\r\n```\r\n\r\n[/example]\r\n____________________________________________________\r\n\r\n[example]\r\n\r\n**Example: Original Gettysburg Address** Demonstrate that indexOf() is case sensitive.\r\n\r\n```\r\n// Demonstrate that indexOf is case sensitive.\r\nvar gettysburgAddress=\"Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.\";\r\nconsole.log(gettysburgAddress.indexOf(\"Four\"));\r\nconsole.log(gettysburgAddress.indexOf(\"four\"));\r\n```\r\n\r\n[/example]\r\n____________________________________________________\r\n[example]\r\n\r\n**Example: Parse Comma-Delimited Data** Parse a comma-delimted string into fields.\r\n\r\n```\r\n// Parse a comma-delimted string into fields.\r\nvar data=\"Titantic,1997,James Cameron,PG-13\";\r\nvar commaPosition=data.indexOf(\",\");\r\nwhile (commaPosition!=-1) {\r\n  console.log(data.substring(0,commaPosition));\r\n  data=data.substring(commaPosition+1,data.length);\r\n  commaPosition=data.indexOf(\",\");\r\n}\r\nconsole.log(data);\r\n```\r\n\r\n[/example]\r\n____________________________________________________\r\n[syntax]\r\n\r\n### Syntax\r\n\r\n```\r\n[string].indexOf(searchValue)\r\n```\r\n\r\n[/syntax]\r\n\r\n[parameters]\r\n\r\n### Parameters\r\n\r\n| Name  | Type | Required? | Description |\r\n|-----------------|------|-----------|-------------|\r\n| string | string | Yes | The string to search. |\r\n| searchValue | string | Yes | The string to search for. |\r\n\r\n[/parameters]\r\n\r\n[returns]\r\n\r\n### Returns\r\nReturns the position of the first occurrence of *searchValue* within the string, else returns -1 if not found.\r\n\r\n[/returns]\r\n\r\n[tips]\r\n\r\n### Tips\r\n- The search is a case-sensitive search. \r\n\r\n[/tips]\r\n\r\n[bug]\r\n\r\nFound a bug in the documentation? Let us know at documentation@code.org\r\n\r\n[/bug]",
  "parameters": [
    "searchValue"
  ],
  "short_description": "\n[string].indexOf(searchValue)\nCategory: Variables",
  "syntax": "indexOf(searchValue)"
}