{
  "key": "textInput",
  "name": "textInput",
  "category": "UI controls",
  "category_key": "ui_controls",
  "content": "Creates a text input box on the screen displaying the *text* provided and referenced by the given *id* at default location (0,0).\n\nYour apps will sometimes need to collect text input from the user. You can code an event handler that is triggered by various events in the textInput box. Use `getText()` to get the text currently in the textInput box.",
  "examples": [
    {
      "name": "Example: Label for a Text Input Box",
      "description": "Create a label and associate it with a text input box.",
      "code": "```\n// Create a label and associate it with a text input box.\r\ntextLabel(\"YourNameLabel\",\"Enter your name:\", \"YourName\");\r\ntextInput(\"YourName\",\"\");\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Example Simple Form",
      "description": "Demonstrate UI element modification and query functions.",
      "code": "```\n// Demonstrate UI element modification and query functions.\r\ntextInput(\"id\", \"Enter your name\");\r\nsetPosition(\"id\", 50, 200, 200, 50);\r\nonEvent(\"id\", \"change\", function(event) {\r\n  hideElement(\"id\");\r\n  write(\"Hi \" + getText(\"id\"));\r\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "",
      "description": "",
      "code": "```\n// Acknowledge keystrokes.\r\ntextInput(\"id\", \"type here\");\r\nonEvent(\"id\", \"keypress\", function(event) {\r\n  console.log(\"You typed a letter.\");\r\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "id",
      "type": "string",
      "required": true,
      "description": "The unique identifier for the text input box. The id is used for referencing the text input box in event handlers or other UI element modification functions. Must begin with a letter, contain no spaces, and may contain letters, digits, - and _. "
    },
    {
      "name": "text",
      "type": "string",
      "required": true,
      "description": "The text displayed within the text input box. "
    }
  ],
  "return_value": "No return value. Modifies screen only.",
  "short_description": "Creates a text input box on the screen displaying the text provided and referenced by the given id at default location (0,0).",
  "syntax": "textInput(id, text)",
  "tips": "- If there is another UI element at location (0,0) the text input box is placed at the next available position to the right or below.\n- There are various UI element modification functions available: `setText()`, `showElement()`, `hideElement()`, `deleteElement()`, `setPosition()`, `setSize()`. \n- There are various UI element query functions available: `getText()`, `getXPosition()`, `getYPosition()`.\n- You should always provide a label for your text input box.\n- Text input boxes can also be created and initialized in Design mode."
}