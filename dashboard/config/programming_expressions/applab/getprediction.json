{
  "key": "getPrediction",
  "name": "getPrediction",
  "category": "Data",
  "category_key": "data",
  "content": "*getPrediction(name, id, data, callback)*\n\nAfter importing an AI Model into App Lab, you can use `getPrediction()` to ask your model to make a decision based on the data you supply.\n\nThe *name* and *id* are generated when you import your AI Model into App Lab. The *data* is the information you've collected in your app that is used by the model to make a decision. Once the model makes it's decision, any code inside the *callback* function is executed.\n\n**Want to learn more about AI Lab?** Read a short overview of what it is and how to use it [here](/docs/concepts/ai-lab/introduction-to-ai-lab/).\n\nThe *data* parameter must be a javascript object variable or a javascript object defined using curly brace and colon notation (see examples below). Once the model makes its decision, the result is stored in the variable *value* and can be used in the callback function. To view more information about the model that your app uses, use the Import AI Models screen to view the Model Card in your app.",
  "examples": [
    {
      "name": "Quiz - Where Is Your Ideal Vacation?",
      "description": "Uses a pre-trained Machine Learning model from AI Lab to predict your ideal vacation from 4 questions",
      "code": "```\nvar testValues = {};\r\nonEvent(\"QuizWhereShouldYouTakeaVacation_predict\", \"click\", function() {\r\n    testValues.scent = getText(\"scent_dropdown\");\r\n\t\ttestValues.personality = getText(\"personality_dropdown\");\r\n\t\ttestValues.activity = getText(\"activity_dropdown\");\r\n\t\ttestValues.plant = getText(\"plant_dropdown\");\r\n    setText(\"QuizWhereShouldYouTakeaVacation_prediction\", '');\r\n    getPrediction(\"Quiz - Where Should You Take a Vacation?\", \"l1MvzjqO1K5L\", testValues, function(value) {\r\n      if (value == \"Paris\") {\r\n        setScreen(\"parisScreen\");\r\n      }\r\n      if (value == \"New York\") {\r\n        setScreen(\"newYorkScreen\");\r\n      }\r\n      if (value == \"London\") {\r\n        setScreen(\"londonScreen\");\r\n      }\r\n      if (value == \"Bahamas\") {\r\n        setScreen(\"bahamasScreen\");\r\n      }\r\n    });\r\n  });\n```",
      "app": "https://studio.code.org/projects/applab/Qd92HEe1u8OxN8C0i65EFMNuZ2YDJtrq5TY2iN4hqU8",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "name",
      "type": "String",
      "required": true,
      "description": "The name of the model from when it was saved in AI Lab."
    },
    {
      "name": "id",
      "type": "String",
      "required": true,
      "description": "A unique identifier for your model that is generated by AI Lab. Changing this value can cause problems with your app."
    },
    {
      "name": "data",
      "type": "Object",
      "required": true,
      "description": "The data that is used by the model to make a prediction. Must be either a javascript object variable or a javascript object defined using curly brace and colon notation (see examples above)."
    },
    {
      "name": "callback",
      "type": "Function",
      "required": false,
      "description": "The callback function that is run automatically after the model makes its decision. The result from the model is stored in the *value* variable and can be used within the callback function."
    }
  ],
  "return_value": "When *getPrediction()* is finished, the decision from the model is stored in the *value* variable and all code inside the callback function is automatically run.",
  "short_description": "getPrediction(name, id, data, callback)\r\n\r\nUses an AI Model trained in AI Lab to make a prediction based on a collection of data",
  "syntax": "getPrediction(name, id, data, callback)",
  "tips": "Importing an AI Model will automatically generate the `getPrediction()` block for your model. You shouldn't need to change the *name* or *id* of the model, but you can make changes to the *data* parameter and the code inside the *callback* function."
}