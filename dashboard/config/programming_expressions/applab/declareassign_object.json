{
  "key": "declareAssign_object",
  "name": "Declare an object",
  "category": "Variables",
  "category_key": "variables",
  "content": "Declares an object and stores it in a variable.\r\n\r\nAn object is a way to collect data and assign a unique label to each item. One example of a real-life object is a dictionary - every word has a corresponding definition. Here's how a dictionary would look as an App Lab object:\r\n\r\n```\r\nvar dictionary = {\r\n\t\"tortilla\": \"a thin, flat pancake of cornmeal or flour, eaten hot or cold, typically with a savory filling as a part of Mexican cuisine.\",\r\n    \"naan\": \"a type of leavened bread, typically of teardrop shape and traditionally cooked in a clay oven as part of Indian cuisine.\",\r\n    \"injera\": \"a white leavened Ethiopian bread made from teff flour, similar to a crÃªpe.\"\r\n}\r\n```\r\n\r\nIn the example above, each word in the dictionary is the `key` - it's what you use to look up values in the dictionary. The definitions are the `values` - they are what are trying to look up in the dictionary. \r\n\r\nYou can use [`getValue()`(#BB77C7)](/docs/applab/getValue/) to access the values of the dictionary, and you can use [`addPair()`(#BB77C7)](/docs/applab/addPair/) to add new values to the dictionary.",
  "examples": [
    {
      "name": "Profile Object",
      "description": "Creates an object to store profile information",
      "code": "```\nvar myProfile = {\r\n\t\"name\": \"Michelle\",\r\n    \"age\": \"17\",\r\n    \"interests\": \"Computer science, playing music, basketball\",\r\n    \"favorite food\": \"seafood tacos\"\r\n}\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Choose Your Own Adventure",
      "description": "Using objects to start a choose your own adventure game",
      "code": "```\nvar options = {\r\n\t\"left\": \"You see a giant squid! It looks dangerous at first, but then you start to pet it and it becomes friendly\",\r\n    \"straight\": \"You see a large table with food on it! All of your friends jump out and say 'Surprise! Happy Birthday!'\",\r\n    \"right\": \"You are now outside and it's snowing! You start making a snowman and humming your favorite song to yourself\"\r\n};\r\n\r\nconsole.log(\"There are three doors in front of you - which path will you take? left, right, or straight?\");\r\nvar answer = prompt(\"Enter your choice (left, right, or straight));\r\nvar response = getValue(options, answer);\r\nconsole.log(\"You chose \" + answer + \"! Here's what happens:\");\r\nconsole.log(response);\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "return_value": "An object with the pair \"key\": \"value\" stored in the object",
  "short_description": "Declare an Object\r\nCategory: Variables",
  "syntax": "var object = {\"key\": \"value\"};",
  "tips": "- The `keys` in a dictionary must be unique.\r\n\t- For example: `var dictionary = {\"orange\": \"a color\", \"orange\": \"a fruit\"}` would return an error\r\n- Objects are similar to arrays in the following ways:\r\n\t- Both allow you to store a collection of data\r\n\t- You can add elements to both an object and an array\r\n\t- You use a single variable to access the entire collection of variables\r\n- Objects are different from arrays in the following ways:\r\n\t- Arrays store _ordered_ information, and you can access each element by its index in the array\r\n\t- Objects tore _unordered_ information, and you can access each element by it's key value"
}