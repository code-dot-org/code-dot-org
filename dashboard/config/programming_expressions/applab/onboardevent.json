{
  "key": "onBoardEvent",
  "name": "onBoardEvent()",
  "category": "Circuit",
  "category_key": "circuit",
  "content": "Lets the board respond to inputs on the board such as buttons and the switch. \r\n\r\n`onBoardEvent()` works very similar to `onEvent()` in App Lab, but responds to input from the left button, right button, toggle switch, sound sensor, light sensor, temperature sensor, and accelerometer components on the board. The buttons, switch, and sensors all have different events they can respond to.\r\n\r\n| Component(s)  |      \t\t\t\tEvents            |\r\n|-------|-------------------------------|\r\n| `buttonL` and `buttonR` | **Pressed** (When the button is pressed), **Down** (When the button is down), **Up** (When the button comes back up) |\r\n| `toggleSwitch` | **Open** (When the switch is flipped \"Off\"), **Closed** (When the switch is flipped \"On\")|\r\n| All Sensors |**Change** (Fired any time the input value of the specified sensor changes), **Data** ( Fired every 50 milliseconds)|\r\n|`accelerometer`| **Single Tap** Fires when a tap is detected next to the board, **Double Tap** Fires only when two taps within x amount of time of each other is detected next to the board|\r\n",
  "examples": [
    {
      "name": "Event Example: Buttons L and R",
      "description": "",
      "code": "```\nonBoardEvent(buttonL, \"press\", function(event) {\r\n  buzzer.note(\"A4\");\r\n});\r\nonBoardEvent(buttonR, \"press\", function(event) {\r\n  buzzer.stop();\r\n});\r\n\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Event Example: tempSensor Thermometer ",
      "description": "Continuously updates the temperature with the data event.",
      "code": "```\nonBoardEvent(tempSensor, \"data\", function(event) {\r\n  setNumber(\"temperature\", tempSensor.F);\r\n});\n```",
      "app": "",
      "image": "https://curriculum.code.org/media/U6TempSense.gif",
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Event Example: lightSensor Color Changer",
      "description": "Consistently updates the the color of the screen based on the amount of light coming through.",
      "code": "```\nonBoardEvent(lightSensor, \"data\", function(event) {\r\n  lightSensor.setScale(0, 255);\r\n  var light1 = lightSensor.value;\r\n  lightSensor.setScale(100, 150);\r\n  var light2 = lightSensor.value;\r\n  lightSensor.setScale(0, 200);\r\n  var light3 = lightSensor.value;\r\n  setProperty(\"screen1\", \"background-color\", rgb(light1,light2,light3));\r\n});\r\n\n```",
      "app": "",
      "image": "https://curriculum.code.org/media/U6ColorChanger.gif",
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Event Example: toggleSwitch Lightswitch",
      "description": "",
      "code": "```\nonBoardEvent(toggleSwitch, \"open\", function(event) {\r\n  led.off();\r\n});\r\nonBoardEvent(toggleSwitch, \"close\", function(event) {\r\n  led.on();\r\n});\r\n\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    },
    {
      "name": "Event Example: accelerometer Tilt Detector",
      "description": "Lights up the color LEDs based on how the board is being tilted.",
      "code": "```\nvar colors = \"white\";\r\n\r\nonBoardEvent(accelerometer, \"data\", function(event) {\r\n  var pitch = accelerometer.getOrientation(\"pitch\");\r\n  var inclination = accelerometer.getOrientation(\"inclination\");\r\n  var roll = accelerometer.getOrientation(\"roll\");\r\n  \r\n  //front to back\r\n  if (pitch < -10) {\r\n    colorLeds[0].on();\r\n    colorLeds[9].on();\r\n  }\r\n  if (pitch > 10) {\r\n    colorLeds[4].on();\r\n    colorLeds[5].on();\r\n  }\r\n  \r\n  //side-to-side\r\n  if (roll > 20) {\r\n    colorLeds[7].on();\r\n  } \r\n  if(roll < -20){\r\n    colorLeds[2].on();\r\n  }\r\n});\n```",
      "app": "",
      "image": null,
      "app_display_type": "codeFromCodeField",
      "embed_app_with_code_height": 310
    }
  ],
  "palette_params": [
    {
      "name": "component",
      "type": "string",
      "required": true,
      "description": "Type of input that's being listened for (`toggleSwitch`, `buttonR`, `buttonL`, etc)."
    },
    {
      "name": "event",
      "type": "string",
      "required": true,
      "description": "Name of the event to listen for (\"pressed\", \"up\", \"down, etc)."
    },
    {
      "name": "callback",
      "type": "function",
      "required": true,
      "description": "The callback function executed in response to an event for the matching component of the matching *event*. "
    }
  ],
  "parameters": [
    "component",
    "event",
    "callback"
  ],
  "short_description": "Lets the board respond to inputs on the board such as buttons and the switch. ",
  "syntax": "onBoardEvent(component, event, function(event) {...});"
}