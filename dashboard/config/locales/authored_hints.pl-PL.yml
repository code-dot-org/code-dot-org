---
pl-PL:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Jeżeli użyjesz bloku "idź do przodu o 100 pikseli", narysuję
          linię automatycznie.
        2-3_Artist_1_new_b: Masz problem z zakrętem? Użyj bloku "skręć w prawo o 90
          stopni".
      2-3 Artist 11:
        2-3_Artist_11_a: 'Masz problem ze stopniami? Musisz obrócić się o 360 stopni
          w 8 krokach. Ile jest 360/8? '
      2-3 Artist 12:
        2-3_Artist_12_a: Koło ma 360 stopni, więc jeżeli w pętli artysta obróci się
          za każdym razem o 1 stopień, musi przejść przez nią 360 razy.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Artysta chyba nie jest zwrócony we właściwym kierunku.
          Możesz sprawić, żeby obrócił się zanim narysuje linię?
      2-3 Artist 3new:
        2-3_Artist_3new_a: Ile to jest 100-70? Z opisu wynika, że taką wysokość powinien
          mieć kapelusz!
        2-3_Artist_3new_b: Artysta chyba nie jest zwrócony we właściwym kierunku.
          Możesz sprawić, żeby obrócił się zanim narysuje linię?
      2-3 Artist 4:
        2-3_Artist_4_a: Aby dokończyć dom wystarczy tylko narysować kwadrat!
      2-3 Artist 6:
        2-3_Artist_6_a: 'By zrobić te małe kąty musisz za każdym razem obrócić się
          _dalej_ niż to robiłeś z kwadratem.   '
        2-3_Artist_6_b: Skoro już patrzę w prawo, będzie łatwiej pójść najpierw do
          przodu a potem, skręcając w lewo, stworzyć trójkąt.
        2-3_Artist_6_c: Każdy bok trójkąta ma taką samą długość jak każdy bok kwadratu...
          100 pikseli!
      2-3 Artist 7:
        2-3_Artist_7_a: Najłatwiej rozwiązać tą łamigłówkę rysując pierwszy kwadrat
          tak, żeby na końcu artysta był skierowany w dół przed rozpoczęciem rysowania
          drugiego kwadratu.
      2-3 Artist 8:
        2-3_Artist_8_a: Jeśli podzielisz 200 pikseli na pół, jaką szerokość powinien
          mieć każdy kwadrat?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Ten diament to tak na prawdę kwadrat obrócony na bok
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_b: |-
          **Metoda prób i błędów sprawdza się tu doskonale!**

          Zmieniaj po jednej liczbie na raz.

          Jeśli się zgubisz, po prostu kliknij "Zacznij od nowa",  a kod będzie taki jak na początku.
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Wskazówka: każdy wąsik ma 75 pikseli długości.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Jeden ze skrętów ma o 15 stopni za mało.
        2-3_Artist_Debugging_3_b: Jeśli program działa zbyt szybko, zobacz co się
          dzieje, spowalniając go suwakiem.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Co się stanie, jeśli masz tryb Artysta i ruszają
          lub skaczą przez pierwszy wiersz?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: Artysta musi obrócić się jeszcze w lewo o 60 stopni
          zanim rozpocznie rysowanie!
        2-3_Artist_Debugging_9_b: Nie potrzebujesz kolejnego bloku, żeby uzyskać pełny
          obrót, po prostu dodaj 60 stopni do bloku 'obrót w lewo', który już tu jest!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: Kwadraty mają boki o długości 100 pikseli, czyli
          musisz przesunąć się do przodu o 175 pikseli zanim narysujesz drugi kwadrat.
        2-3_Artist_Functions_1_b: To dobrze rysować nakładające się linie do okularów.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Trzeba będzie zmienić w funkcji nie tylko liczbę
          i długość boków, ale także kąt o jaki obraca się artysta pomiędzy bokami.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Spróbuj najpierw uruchomić program i sprawdzić,
          co trzeba dodać.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: "Twój program powinien:\n\n-   uzyć funkcji, \n-
          \  przesunąć się do przodu o 100 + 75 pikseli\n-   ponownie użyć funkcji"
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: Aby stworzyć ten wzór artysta musi obrócić się o
          120 stopni pomiędzy każdym bokiem.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_b: Twój następny ruch powinien zacząć się na \*\*
          koniec \*\* kodu poprzedniej pętli.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Przed rozpoczęciem rysunku, artysta musi skręcić
          w lewo pod kątem 60 stopni aby ustawić się na właściwej pozycji.
        2-3_Artist Loops_New_12_b: Po artysty idzie do przodu 100 pikseli, będzie
          musiał włączyć prawo 120 stopni narysować kąt ostry.
        2-3_Artist Loops_New_12_c: Artysta musi włączyć prawa tylko 60 stopni stworzyć
          rozwarty kąt.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: Na koniec każdego diamentu artysta jest już skierowany
          we właściwym kierunku, do rozpoczęcia kolejnego.    W związku z tym nie
          trzeba dodać dodatkowej komendy 'skręcić w lewo przez', zanim zaczniemy
          ponownie rysować.
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: Artysta musi skręcić o 45 stopni w prawo, zanim
          zacznie rysować.
        2-3_Artist_Loops_New_9_b: Ten kształt grotu jest naprawdę tylko połową kwadratu.  Jaki
          byłby kod, który rysuje połowę kwadratu?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Pamiętaj, aby umieścić wszystkie szare bloki
          kodu wewnątrz swojej pętli.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: |-
          Potrzebujesz pomocy z obliczania kątów?\
          \*\* 360/12 = 30 \*\*
        2-3_Artist_Nested_Loops_3_b: Pamiętaj, aby umieścić wszystkie szare bloki
          kodu i twój ruch wewnątrz pętli.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: |-
          Potrzebujesz pomocy z obliczania kątów?\
          \*\* 360/12 = 30 \*\*
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: "Spróbuj użyć bloku 'skok do przodu', aby przejść
          o jeden kwadrat do miejsca, w którym rozpocznie się rysowanie następnego.
          \  \n\nJeśli bok Twoich kwadratów to 20 pikseli wysokości i są one oddalone
          o 20 pikseli od siebie, to jak daleko potrzebujesz skoczyć?"
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: "Jaki powinien być Twój ruch w każdej pętli?
          \  \n\nIle to jest 360/10?"
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          Potrzebujesz pomocy w znalezieniu odpowiedniego kąta?

           \*\* 360 / 12 = 30 \*\*
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Przez dłuższy czas zastanawiasz się jak ułożyć
          kolejne bloki? Potraktuj czerwony kwiat dokładnie tak samo, jak fioletowy!
        2-3_Bee_Conditionals_14_b: Gdyby czerwony kwiat był fioletowy, czy możesz
          sobie wyobrazić, jak używać dodatkowych powtórzeń pętli skrócenia kodu?
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Pamiętaj: Fioletowe kwiaty mogą mieć nektar lub
          nie (0 lub 1) i mogą zmienić ten stan za każdym uruchomieniem programu.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: Kod będzie krótszy, jeśli użyjesz 2 pętli, za każdym
          przejściem do przodu. Innej, aby  zebrać nektar, a innej aby zrobić miód.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Pamiętaj: Fioletowe kwiaty mogą mieć nektar lub
          nie (0 lub 1), za każdym razem, gdy uruchamiasz program!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Jeśli znalazłeś i skorygowałeś jakiś niepoprawny blok,
          czy widzisz już jakiś wzorzec, który pozwoli Ci wykonać instrukcje prościej,
          za pomocą pętli 'repeat'?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Jeśli znalazłeś i skorygowałeś jakiś niepoprawny blok,
          czy widzisz już jakiś wzorzec, który pozwoli Ci wykonać instrukcje prościej,
          za pomocą pętli 'repeat'?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Czy widzisz jakieś miejsce, gdzie pszczoła robi coś,
          co nie ma sensu? Co się stanie, gdy zmienisz ten fragment bloku?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Nie musisz używać pętli z funkcją. Spróbuj w ruchu,
          za pomocą funkcji, by przeniósł się ponownie przy użyciu funkcji.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Nie musisz używać pętli z funkcją. Spróbuj w ruchu,
          za pomocą funkcji, by przeniósł się ponownie przy użyciu funkcji.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: "Jeśli zadanie wydaje Ci sie za trudne,  spróbuj budować
          funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj ich działanie.
          Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz cel! \n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: "Jeśli zadanie wydaje Ci sie za trudne,  spróbuj budować
          funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj ich działanie.
          Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz cel!"
        2-3_Bee_Functions_8_b: |-
          Pamiętaj, aby budować kodu wewnątrz zielonego bloku funkcji.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: Powinieneś użyć czterech bloków wewnątrz pętli.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: Powinieneś mieć 6 bloków wewnątrz pętli.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Będziesz potrzebować dwóch różnych pętli 'repeat', jeden
          po drugim.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: Powinieneś użyć 5 bloków wewnątrz pętli.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: Najpierw powinieneś się obrócić, a nie przesunąć na kolejne
          pole.
        2-3_Bee_Loops_4A_b: Ostatnią częścią programu będzie napisanie kodu na koniec
          programu, już poza pętlą.
        2-3_Bee_Loops_4A_c: Jeśli od razu nie użyjesz pętli, spróbuj kodowania wiersz
          po wierszu, następnie zobacz co można połączyć w pętli 'repeat'.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Jeśli nie możesz dostrzec bloki, aby umieścić go wewnątrz
          'repeat', możesz zacząć kodowanie każdego ruchu i dopiero poszukać wzorców.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Jeśli nie możesz ogadnąć, co powinno być w pętli 'repeat',
          spróbuj kodować bloki jeden po drugim i zobacz, czy odkryjesz jakiś wzór.
        2-3_Bee_Loops_6_b: Powinieneś użyć 6 bloków wewnątrz pętli 'repeat', aby zakończyć.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: Najpierw powinieneś się obrócić, a nie przesunąć na kolejne
          pole.
        2-3_Bee_Loops_7_b: 'Jeśli od razu widzisz pętli, spróbuj kodowania wiersz
          po wierszu, następnie zobacz czy nie znajdziesz wzorca.  '
      2-3 Maze 1:
        2-3_Maze_1_a: Aby użyć bloku 'Idź do przodu', przeciągnij go do obszaru roboczego
          i ułóż poniżej bloku 'po uruchomieniu'.
      2-3 Maze 16:
        2-3_Maze_16_a: Jeśli trudno Ci dostrzec wzorzec, spróbuj kodowania "krok po
          kroku", i dopiero wtedy zastąp elementy powtarzające się pętlą.
        2-3_Maze_16_b: Aby umieścić wiele bloków wewnątrz pętli 'powtórz', przeciągnij
          je do obszaru roboczego, a następnie połącz do bloku 'po uruchomieniu' i
          gotowe!
      2-3 Maze 6:
        2-3_Maze_6_a: Istnieją dwa sposoby, aby rozwiązać ten problem!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Jeśli trudno Ci dostrzec wzorzec, spróbuj kodowania "krok
          po kroku", i dopiero wtedy zastąp elementy powtarzające się pętlą.
        2-3_Maze_Loops_17_b: Czy początkowy kod został usunięty?  Kliknij przycisk
          'Zacznij od nowa', aby zacząć od początku!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Jeśli trudno Ci dostrzec wzorzec, spróbuj kodowania "krok
          po kroku", i dopiero wtedy zastąp elementy powtarzające się pętlą.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Jeśli utkniesz, spróbuj piać kod początkowo bez pętli
          i poszukaj wzorów.
        2-3_Maze_Loops_19_b: Umieszczenie jednej pętli 'powtórz' wewnątrz innej, może
          zmniejszyć liczbę używanych bloków.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Znajdź wzór schodków w tym labiryncie, aby dowiedzieć
          się, gdzie można użyć pętli.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Jeśli masz problem ze znalezieniem wzoru schodków, próbuj
          napisać kod linia po linii.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: W pętli upewnij się, że artysta przeskakuje do tyłu i do
          góry po każdej linii.
      4-5 Artist 3:
        4-5_Artist_3_a: "Jeśli pole kwiatowe ma wymiary 600 pikseli obwodu i dwa jego
          boki mają długość 200 pikseli, oto jak dowiedzieć się, co dodać do krótszych
          bokach: \n\n\\*\\* 600-200 - 200 = 200 \\*\\* \n\noznacza to, że oba krótsze
          boki mają 200 pikseli. \n\n\\*\\* Ile to 200 / 2? \\*\\*"
        4-5_Artist_3_b: Jeśli jeszcze trudno Ci dostrzec wzorzec, spróbuj kodowania
          "krok po kroku", i dopiero wtedy zastąp elementy powtarzające się pętlą.
      4-5 Artist 4:
        4-5_Artist_4_a: "Koło ma 360 stopni! \n\nWięc ile razy trzeba powtarzać ten
          kod (ruch o 1 stopień) aby narysować pełne koło?"
      4-5 Artist 7:
        4-5_Artist_7_a: 'Jaki kąt jest najmniejszy?  Pod jakim kątem stoi artysta? '
      4-5 Artist 8:
        4-5_Artist_8_a: "Dłuższe boki mają po 240 pikseli.  Oznacza to, że 2 krótsze
          boki mają razem: \n\n\\*\\* 800-240 - 240 = 320 \\*\\*\n\nIle to \\*\\*
          320/2 \\*\\*? "
      4-5 Artist 9:
        4-5_Artist_9_b: Trzeba będzie narysować trzy trójkąty tej samej wielkości.
          Nie zapomnij, aby skoczyć na nową pozycję, po narysowaniu każdego z nich.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Musisz narysować tylko zewnętrzny trójkąt.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Jeśli okrąg ma 360 stopni i w każdej pętli następuje
          obrót o 3 stopnie, to ile razy trzeba użyć pętli narysować połowę pełnego
          okręgu?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Zwróć uwagę, że kwadraty mają bok o długości 20 pikseli,
          trzeba więc będzie przejść dodatkowe 20 pikseli przed rozpoczęciem rysowania
          następnej kratki.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Bądź ostrożny, kiedy rezygnujesz z jakiegoś bloku
          kodu, za każdym razem kiedy spróbujesz nowego z paska narzędzi.
        4-5_Artist_Patterns_3_b: Jeśli Twój kod staje się zbyt skomplikowany, można
          użyć przycisku "Zacznij od nowa"!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: |-
          Teraz gdy artysta narysował diament, stoi w przeciwnym kierunku do miejsca, gdzie powinien zacząć następny.

          O ile stopni musi się obrócić, aby stać prosto?
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          \*\* Pamiętaj: \*\*

          Ta plansza jest inna za każdym uruchomieniem.

          Będziesz potrzebował użyć bloku warunkowego ('if' lub ' if/else') do rozwiązania problemu.
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          \*\* Pamiętaj: \*\*

          Ta plansza jest inna za każdym uruchomieniem.

          Będziesz potrzebował użyć bloku warunkowego ('if' lub ' if/else') do rozwiązania problemu.
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Można rozwiązać tę zagadkę, przy użyciu bloków już
          położonych na obszarze roboczym.  W jakiej kolejności powinny zostać wykorzystane?
        4-5 Bee Conditionals 6_b: Sprawdź, czy kwiat ma więcej nektaru niż \*\* 0
          \*\* przynajmniej \*\* 3 \*\* razy, aby rozwiązać tę zagadkę.
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: Jeśli zastanawiasz się, co nie działa, spróbuj uruchomić
          program, aby zobaczyć, gdzie jest problem.
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Spróbuj, potraktować te puzzle jak długi prostokąt,
          gdzie pszczoła musi iść do przodu, a następnie skręcić w lewo kilka razy
          aby przejść do końca obwodu.
      4-5 Maze 10:
        4-5_Maze_10_a: "Jeśli z początku nie wiesz, jak używać pętli do rozwiązania
          zagadki, spróbuj małych kroków, a następnie szukaj wzorca. \n\nCo należy
          umieścić w pętli 'repeat', aby uzyskać krótszy kod?"
      4-5 Maze 4:
        4-5_Maze_4_a: Jeśli masz trudności z ustaleniem, gdzie umieścić pętle 'powtórz',
          spróbuj kodować po kroku i szukaj wzoru.
      4-5 Maze 5:
        4-5_Maze_5_a: Spróbuj użyć pętli'powtórz' zawsze tam, gdzie trzeba "iść do
          przodu ' więcej niż dwa kroki.
        4-5_Maze_5_b: Można użyć więcej niż jednej pętli 'powtórz' w tym labiryncie.
      4-5 Maze 6:
        4-5_Maze_6_a: |-
          Jeśli masz kłopot, wskaż sobie palcem drogę.\
          Czy jest to najkrótsza droga, którą można znaleźć?
      4-5 Maze 7:
        4-5_Maze_7_a: |-
          \*\* Chcesz otrzymać kod tak mały, jak może być? \*\*

          Szukaj powtarzających się elementów w bloków. Czy widzisz co się powtarza?\
          Zamiast powtarzać, zrób pętlę!
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "\\*\\* 360 / 36 =? \\*\\*"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: "Nie zapomnij skręcić na koniec wewnętrznej pętli. \n\nMożesz
          użyć 6 pętli do narysowania 6 trójkątów. \n\n\\*\\* 360 / 6 =? \\*\\*"
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: "Ten rysunek potrzebuje 10 pętli dając Ci ponad 360
          stopni. \n\n\\*\\* 360 / 10 =? \\*\\*"
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: "Musisz użyć pętli tego kształtu 6 razy aby obrócić
          się o 360 stopni. \n\n\\*\\* 360 / 6 =? \\*\\*"
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Każdy element musi zawierać własną pętlę 'dopóki'.
      Course 4 Artist 11:
        Course_4_Artist_11_a: 'Połowa sześciokąta ma **długość 30** i wymaga obrotu
          w prawo o **60 stopni**.  '
        Course_4_Artist_11_b: '2/3 trójkąta ma bok o **długość 30** i wymaga obrotu
          w prawo o **120 stopni**. '
      Course 4 Artist 12:
        Course_4_Artist_12_a: 'Każdy powtarzany kształt jest kombinacją **połowy sześciokąta**,
          i **2/3 trójkąta**. '
        Course_4_Artist_12_b: 'Ten kształt jest prawie taki sam jak w poprzednim przykładzie,
          za wyjątkiem połowy sześciokąta, który jest nieco większy. '
      Course 4 Artist 6:
        Course_4_Artist_6_a: To 3 trójkąty wpisane w pełne koło (360 stopni)... ile
          razy 3 mieści się w 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: "Potrzebujesz pomocy o ile należy się obrócić? \n\nTo
          3 trójkąty w pełnym obrocie o 360 stopni.\n\nIle razy 3 mieści się w 360?"
      Course 4 Artist 9:
        Course_4_Artist_9_a: "Potrzebujesz pomocy o ile należy się obrócić? \nIle
          to jest 360, podzielone przez 10?"
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_a: "Ten kod używa dwóch 'pętli'. \n\nJedna
          liczy od 1 do 'counter', kolejna odlicza w dół od 'counter' do 1."
        Course_4_Artist_Binary_Free_Play_2b_b: Każda 'pętla' ma trzy powtórzenia.  Pierwsza
          rysuje od lewej od góry linie, druga wykonuje zejście do środka i trzecia
          rysuje linie na samym dole pola.
        Course_4_Artist_Binary_Free_Play_2b_c: W każdym powtórzeniu potrzebujesz "licznika"
          dla jedynek oraz "podwójnego licznika" dla zer.
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solution:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">licznik</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">POMNÓŻ</title><value name="A"><block type="variables_get"><title name="VAR">licznik</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">licznik</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">licznik</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">POMNÓŻ</title><value name="A"><block type="variables_get"><title name="VAR">licznik</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">licznik</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 4:
        Course_4_Artist_For_Loops_4_a: |-
          **Jaka jest najmniejsza liczba, którą będziesz potrzebował?
          Jak jest największa liczba?
          O jaką wielkość zmienia się ta liczba za każdym razem?**

          Te pytania musisz zadać aby wypełnić puste pola w pętli `for`.
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: Największy kształt ma 19 ścian. Najmniejszy
          tylko 2.
        Course_4_Artist_For_Loops_Challenge_b: Pętla `for` zwiększa się o 2 za każdym
          razem.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_a: Założenie tego kodu jest takie samo jak
          rozwiązanie poprzedniej zagadki z puzzlami... z kilkoma zmianami.
        Course_4_Artist_For_Loops_inspire_b: Spróbuj pętli `for` która liczy od 3
          do 10 z krokiem równym 1.
        Course_4_Artist_For_Loops_inspire_c: Wewnątrz pętli `for` są dwa powtórzenia
          pętli powtarzającej się, ale drugie powtórzenie idzie w przeciwnym kierunku.
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_a: Zacznij z kodem z poprzedniej zagadki
          i dodaj dodatkowe `turn right` o 3 stopnie wewnątrz powtarzającej się pętli.
        Course_4_Artist_Functions_Inspiration_b: Spróbuj obrócić o więcej niż 90 stopni
          poza `repeat loop`, ale wciąż wewnątrz pętli `for loop`.
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: Aby zrozumieć jak wykorzystywać funkcje,
          należy sobie uświadomić, których potrzebujemy, a których nie.
        Course_4_Artist_Functions_challenge_b: Wykorzystaj `for loop`, następnie użyj
          jej zmiennej licznika wewnątrz zagnieżdżonej pętli `repeat`.
        Course_4_Artist_Functions_challenge_c: Podczas każdej iteracji powinieneś
          narysować kwadrat a potem przejść dalej.
        Course_4_Artist_Functions_challenge_d: Musisz się obrócić o 90 stopni w lewo
          poza Twoim `repeat`, ale cały czas wewnątrz `for loop`.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_b: Każdy kwadrat i przejście jest powtarzane czterokrotnie
          (przy wykorzystaniu skrętu w lewo) aby stworzyć jednostkę podobną do pinwheel.
      Course 4 Artist Vars 13:
        Course_4_Artist_Vars_13_a: Potrzebujesz dwóch powtórzeń pętli (jedna s środku
          drugiej) obie powtarzające się `sides` razy.
        Course_4_Artist_Vars_13_b: "Wewnętrzna powtarzająca się pętla rysuje ośmiokąt
          (obracając się w lewo) \n\nNastępnie, musisz iść do przodu i obrócić się
          w prawo, tylko w zewnętrznej pętli."
        Course_4_Artist_Vars_13_c: Aby dopasować kształt do stałego rozmiaru podczas
          zmiany ilości boków, użyj bloku matematycznego aby podzielić długość w pikselach
          przez liczbę boków.
      Course 4 Artist Vars 6:
        Course_4_Artist_Vars_6_a: Aby narysować zwykły wielokąt, obróć się o **\*360/sides**
          za każdym razem.
      Course 4 Artist Vars 8:
        Course_4_Artist_Vars_8_a: Jeśli podzielisz swoją startową długość przez liczbę
          boków, długość każdego boku się skróci gdy liczba boków będzie rosnąć.
      Course 4 Bee Params 7:
        notice_pattern: 'Czy widzisz wzór zmiany liczby nektaru? '
        count_with_for: Zauważ, że ilość nektaru wzrasta wraz z krokami. Jakiego bloku
          możesz użyć aby zrobić to samo wiele razy podczas odliczania?
      Course 4 Bee Params 8:
        Course_4_Bee_Params_8_a: Za każdym razem można poprosić o ilość miodu i nektaru.
          Jeśli czegoś nie ma, liczba może wynosić 0.
      Course 4 Play Lab Params 2:
        Course_4_Play_Lab_Params_2_a: Będziesz musiał nacisnąć "edytuj" na funkcji
          skoku i zaktualizował go, aby używał parametru `height`.
      Course 4 Play Lab Vars 2:
        Course_4_Play_Lab_Vars_2_a: Upewnij się, aby ustawić wartość `prędkość_psa`
          większą od `prędkość_kota`.
      Course 4 Play Labs For Loops 2:
        Course_4_Play_Labs_For_Loops_2_a: Co byś dodał do pętli `for`, aby za każdym
          razem pominąć liczby parzyste?
      Course 4 Playlab For Loops 4b:
        Course_4_Playlab_For_Loops_4b_a: Flagi są oddalone o około 330 pikseli od
          postaci.
        Course_4_Playlab_For_Loops_4b_b: W jaki sposób można zrobić, aby każda postać
          osiągnęła 330 pikseli w takiej samej ilości kroków z innymi wartościami
          początkowymi i końcowymi?
        Course_4_Playlab_For_Loops_4b_c: Pamiętaj, że nie ma znaczenia ile postaci
          przejdzie przez flagę w ostatnim kroku, tak długo, jak każda postać będzie
          potrzebowała taką samą ilość kroków, aby tą flagę przejść.
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: Postacie są około 175 pikseli od centrum.
        Course_4_Playlab_For_Loops_5b_b: Pamiętaj, że następny krok postaci będzie
          większy niż poprzednim razem, ponieważ licznik cały czas się powiększa.
      Course 4 SCF 1:
        Course_4_SCF_1_a: Każdy sześciokąt ma boki długości 40 pikseli.
        Course_4_SCF_1_b: Pomiędzy każdymi sześciokątami jest 120 pikseli odległości
          w każdym kierunku.
        Course_4_SCF_1_c: "Zanim narysujesz drugi rząd sześciokątów, musisz się obrócić
          w prawo o 60 stopni i ruszyć na przód o 40 pikseli. \n\nJak będziesz w poprawnym
          pionowym położeniu, musisz odwrócić swojego artystę i wrócić do tyłu o 320
          pikseli."
        Course_4_SCF_1_d: "Zanim narysujesz trzeci rząd sześciokątów, musisz się obrócić
          w prawo o 60 stopni i przejść 40 pikseli do przodu. \n\nJak będziesz w prawidłowej
          pozycji w pionie, musisz zawrócić artystę i wrócić 440 pikseli (120 pikseli
          dalej niż Twoja `shift down/forward` funkcja). "
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Pamiętaj swoje funkcje z etapu 16.
        Course_4_SCF_1a_c: Rozważ wykorzystanie `for loop`. Nie dla kroków, ale dla
          parametru funkcji.
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: |-
          Zauważ, że kształt każdego z punktów miodowych jest podobny.

          Jest to dobre miejsce, na funkcję!
        Course_4_SCF_1b_c: Rozważ użycie `for loop` do odległości przemieszania się
          pszczoły.
      Course 4 SCF 2:
        Course_4_SCF_2_a: Każdy sześciokąt ma boki długości 40 pikseli.
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        Course_4_SCF_3_d: 'Nie zapomnij obrócić się o 22.5 stopni pod koniec każdej
          iteracji. '
        Course_4_SCF_3_e: Zarówno kolor każdego ośmiokąta jak i szerokość pióra są
          sterowane przez zmienną 'licznik'.
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
        Course_4_SCFL_1_b: 'Spróbuj użyć dwóch pętlach "dla": jednej dla wznoszenia
          się by zebrać nektar, a drugiej dla schodzenia i robienia miodu.'
        Course_4_SCFL_1_c: Zauważ, że jedna pętla "dla" potrzebuje wewnątrz wielu
          zwykłych pętli, które powtarzaj się 'licznik' razy, aby utworzyć wzór wznoszących
          się schodów. Inna pętla "dla" potrzebuje tylko jednej zwykłej pętli, aby
          zrobić 'licznik' miodu.
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_b: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Spróbuj użyć pętli "dla".
        Course_4_SCFL_1b_b: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
        Course_4_SCFL_2_b: Zauważ, że istnieją trzy czynności podczas każdego kroku
          pętli `for`, która przechodzisz, aby wykonać jakąś akcję dla konkretnego
          obiektu.
        Course_4_SCFL_2_c: Podczas każdej iteracji pętli `for`, liczba każdego elementu
          odpowiada w jakiś sposób zmiennej `counter`.
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: "`pen width` wynosi 1. Pierwszy kwadrat ma boki o szerokości
          50 pikseli, kolejny kwadrat jest o 50 pikseli szerszy od poprzedniego."
      Course 4 SCFL 4:
        Course_4_SCFL_4_b: Każdy kształt jest kwadratem, którego długość boków wynosi
          `counter`, zaczynając od 5 pikseli, zwiększając każdorazowo o 5 pikseli
          aż do 200 pikseli.
        Course_4_SCFL_4_c: Artysta obraca się o 15 stopni pomiędzy każdym kwadratem.
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: Zmiana koloru odbywa się poprzez użycie bloku `ustaw kolor
          z kolorem czerwonym, zielonym, niebieskim`. Czerwony ma stałą wartość 255,
          zielony jest zawsze wartością `licznik`, a niebieski to `255-licznik`.
        Course_4_SCFL_6_b: Kod jest dużo prostszy niż Ci się wydaje. Po prostu ustaw
          kolor wewnątrz `pętla_for`, rusz do przodu, później się obróć.
        Course_4_SCFL_6_c: "`pętla for` zmienia się od 5 do 250 z krokiem równym 2. "
      Course 4 SCFL 7:
        Course_4_SCFL_7_b: 'Rysunek jest tworzony z wykorzystaniem dwóch podobnych
          `pętli for`. Jedna iteruje od 5 do 200 z krokiem 2, kolejną od 200 do 5
          z krokiem 2. '
        Course_4_SCFL_7_c: Wewnątrz każdej `for loop` przechodzisz do przodu o 5 pikseli
          zanim obracasz się o `360 / counter`. Zanim to zrobisz, nie zapomnij ustawić
          grubości pędzla na `counter`!
        Course_4_SCFL_7_d: Będziesz musiał obrócić się o 225 stopni w lewo pomiędzy
          dwiema `for loops`.
      Course 4 SCV 1:
        Course_4_SCV_1_a: 'Zmienne są pomocne, ponieważ można do nich dodawać w każdym
          kroku pętli. '
        Course_4_SCV_1_b: Łamigłówka ma jedną pętle, która tworzy wielokąt, jedną
          pętle, która powtarza wielokąt `boki` razy, następnie jeszcze jedną pętle,
          która powtarza to wszystko po dodaniu wartości 5 do `sides`.
        Course_4_SCV_1_c: Użycie zmiennej dla `boki` oraz dla `długość` czyni kod
          czystszym, ponieważ możesz zapętlać ten sam kod wiele razy, zamiast tworzyć
          nowej kopi dla każdego zestawu liczb.
      Course 4 SCV 2:
        Course_4_SCV_2_c: Artysta skręca w lewo kiedy tworzy każdy dziesięciobok,
          w obu pozostałych pętlach skręca w prawo.
        Course_4_SCV_2_d: Aby zapobiec wyciągnięciu wszystkich 10 płatów "kwiatów"
          w tym samym miejscu. upewnij się, że przechodzisz dalej o `długość`/`boki`
          zanim obrócisz się o 360/`boki` stopni, w najbardziej zewnętrznej pętli.
      Course 4 SCV 3:
        Course_4_SCV_3_a: 'Użyj bloku matematycznego do dodawania i odejmowania punktów
          w zmiennej `punkty` kiedy postacie się zderzają. '
      Course 4 SCV 4:
        Course_4_SCV_4_a: Pomogą Ci w tym 3 zmienne. Jedna jako ilość nektaru, jedna
          dla ilości miodu, oraz jedna dla określenia, jak daleko powinna poruszać
          się pszczoła w każdej iteracji.
        Course_4_SCV_4_b: 'Bardzo pomocne będzie użycie trzech pętli wewnątrz pętli
          głównej. Jedna dla poruszania się do przodu, jedna do zbierania ilości nektaru
          oraz jedna do robienia miodu. '
        Course_4_SCV_4_c: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
      Course 4 SCV 5:
        Course_4_SCV_5_b: Za każdym krokiem pętli, nektar w kwiatach spada o 2, oraz
          pszczoły muszą robić o jeden więcej miód.
        Course_4_SCV_5_c: Zauważ, że na początku zewnętrznej pętli, pszczoła porusza
          się taką ilość razy ile jest nektaru w następnym kwiatku.
      Course 4 SCV 6:
        Course_4_SCV_6_b: 'Zyskasz korzyść z tworzenia 8 różnych zmiennych: czerwony1,
          zielony1, niebieski1, czerwony2, zielony2, niebieski2, długość oraz boki.'
      CourseD_Dance_Party_01:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Postaraj się, aby na ekranie pojawił się tancerz.

          -   Ten poziom kończy się po 4 taktach.
        challenges: |-
          **Dodatkowe wyzwania**

          -   Wybierz inny utwór do odtwarzania.
          -   Zmień imię swojego tancerza.
      CourseD_Dance_Party_02:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Ten tancerz musi zmienić ruch po 4 taktach.

          -   Ten poziom kończy się po 7 taktach.
      CourseD_Dance_Party_03:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Po 6 taktach Twój tancerz musi tańczyć inny taniec niż po 4 taktach.

          -   Ten poziom kończy się po 11 taktach.
      CourseD_Dance_Party_04:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Musisz zmienić efekt tła w czasie siódmego taktu piosenki.

          -   Ten poziom kończy się po 9 taktach.
        challenges: |-
          **Dodatkowe wyzwanie**

          Zmieniaj efekt tła w różnych momentach piosenki, łącząc nowy blok pod zdarzeniami <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      CourseD_Dance_Party_06:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Musisz mieć co najmniej dwóch tancerzy.

          -   Ten poziom kończy się po 5 taktach.
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Dodaj trzeciego tancerza (lub tylu, ile chcesz!)
          -   Spraw, aby wszyscy tancerze w różnych momentach piosenki wykonywali różne ruchy.
      CourseD_Dance_Party_08:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Dwóch tancerzy musi mieć wielkość inną niż 100.

          -   Ten poziom kończy się po 5 taktach.
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Eksperymentuj, zmieniając inne właściwości (szerokość, wysokość, obrót, itp.)
      CourseD_Dance_Party_09:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Zmień odcień przynajmniej jednego tancerza.

          -   Ten poziom kończy się po 7 taktach.
      CourseD_Dance_Party_10:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Należy zmienić właściwości dwóch lub więcej tancerzy.

          -   Ten poziom kończy się po 7 taktach.
      CourseD_Dance_Party_11:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Wystarczy być kreatywnym!

          -   Ten poziom kończy się po 7 taktach.
      CourseD_Dance_Party_11_5:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Wystarczy być kreatywnym!

          -   Ten poziom kończy się po 7 taktach.
      CourseD_Dance_Party_11b:
        validation: |-
          **Jak przejdę ten poziom?**

          -   Użyj bloku „kiedy strzałka w lewo”, aby sprawić, że Robot będzie tańczył po naciśnięciu tego klawisza.

          -   Ten poziom kończy się po 7 taktach.
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Widzisz **Latarnie morskie** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Jak wykorzystasz warunek z nimi, aby przejść przez Oceaniczny monument?
      CourseE_HOC 2018 Level_7a:
        aquatic7: Możesz użyć bloku "jeśli jest ścieżka", aby wykonać właściwy skręt.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Cóż za przepiękna rafa koralowa! Niebieski koral jest \*\*
          właściwą drogą, i uważaj, aby czerwony koral nie był po **lewej** stronie!
      Dance_2019_01:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Postaraj się, aby na ekranie pojawił się tancerz.

          _Ten poziom kończy się po 4 taktach._
        challenges: |-
          **Opcjonalne wyzwania**

          -   Wybierz inną piosenkę do odtworzenia.
          -   Przenieś swojego tancerza w nowe miejsce.
          -   Stwórz więcej niż jednego tancerza.
      Dance_2019_02:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Tancerz musi wykonać ruch.
          -   Musisz nacisnąć klawisz strzałki.

          _Ten poziom kończy się po 4 taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          Użyj więcej niż jednego bloku <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml>.
      Dance_2019_03:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Obaj tancerze muszą wykonać ruch.
          -   Musisz naciskać klawisze strzałek.

          _Ten poziom kończy się po 6 taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Spraw, aby tancerz reagował na naciśnięcie klawiszy strzałek w lewo i w prawo.
      Dance_2019_04:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Ten tancerz musi zmienić ruch po 4 taktach.

          _Ten poziom kończy się po 7 taktach._
      Dance_2019_05:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Po 6 taktach Twój tancerz musi tańczyć inny taniec niż po 4 taktach.

          _Ten poziom kończy się po 11 taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Zmień tło zawsze wtedy, gdy tancerze zmieniają ruchy.
      Dance_2019_06:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Utwórz jednego tancerza głównego i grupę tancerzy pomocniczych w ciągu 4 pierwszych taktów piosenki.

          _Ten poziom kończy się po siedmiu taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Utwórz wiele grup tancerzy pomocniczych.
      Dance_2019_07:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Zmień rozmiar co najmniej jednego tancerza.

          _Ten poziom kończy się po 6 taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Eksperymentuj, zmieniając inne właściwości takie, jak szerokość lub obrót.
      Dance_2019_08:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Zmień odcień co najmniej jednego tancerza.

          _Ten poziom kończy się po 6 taktach._
        tint_hint: Czy zauważyłeś, że twoi tancerze nie zmieniają się dokładnie na
          wybrany przez Ciebie kolor? To dlatego, że **odcienie** mieszają wybrany
          kolor z kolorami tancerza.
      Dance_2019_09:
        validation: |-
          **Jak przejść ten poziom?**

          -   Wystarczy nacisnąć przycisk „Zakończ”!
        repeat_every_ideas: |-
          **Czy potrzebujesz pomysłów?**

          -   Wielokrotnie zmieniaj rozmiar tancerza, aby rósł.
          -   Wielokrotnie zmieniaj rotację tancerza, aby się obracał.

          _Można również użyć liczb ujemnych, aby uzyskać odwrotny efekt!_
        next_previous: |-
          **Dodatkowe wyzwanie**

          -   Możesz również użyć tego nowego bloku zdarzeń, aby cyklicznie przechodzić listę ruchów tanecznych, ustawiając ruch na „(Losowo)”, „(Następny)” lub „(Poprzedni)”.
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Postaraj się, aby na ekranie pojawił się tancerz.

          _Ten poziom kończy się po 4 taktach._
        challenges: |-
          **Dodatkowe wyzwania**

          -   Wybierz inny utwór do odtwarzania.
          -   Zmień imię swojego tancerza.
      Dance_Party_02:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Ten tancerz musi zmienić ruch po 4 taktach.

          _Ten poziom kończy się po 7 taktach._
      Dance_Party_03:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Po 6 taktach Twój tancerz musi tańczyć inny taniec niż po 4 taktach.

          _Ten poziom kończy się po 11 taktach._
      Dance_Party_04:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Musisz zmienić efekt tła w czasie siódmego taktu piosenki.

          _Ten poziom kończy się po 9 taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          Zmieniaj efekt tła w różnych momentach piosenki, łącząc nowy blok pod zdarzeniami <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      Dance_Party_05:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Twój tancerz musi wykonać cykl co najmniej 4 różnych ruchów tanecznych, zanim poziom się skończy.

          _Ten poziom kończy się po 12 taktach._
      Dance_Party_06:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Musisz mieć co najmniej dwóch tancerzy.

          _Ten poziom kończy się po 5 taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Dodaj trzeciego tancerza (lub tylu, ile chcesz!)
          -   Spraw, aby wszyscy tancerze w różnych momentach piosenki wykonywali różne ruchy.
      Dance_Party_08:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Dwóch tancerzy musi mieć wielkość inną niż 100.

          _Ten poziom kończy się po 5 taktach._
        challenges: |-
          **Dodatkowe wyzwanie**

          -   Eksperymentuj, zmieniając inne właściwości (szerokość, wysokość, obrót, itp.)
      Dance_Party_09:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Zmień odcień przynajmniej jednego tancerza.

          _Ten poziom kończy się po 7 taktach._
      Dance_Party_10:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Należy zmienić właściwości dwóch lub więcej tancerzy.

          _Ten poziom kończy się po 7 taktach._
      Dance_Party_11:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Wystarczy być kreatywnym!

          _Ten poziom kończy się po 7 taktach._
      Dance_Party_11_5:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Wystarczy być kreatywnym!

          _Ten poziom kończy się po 7 taktach._
      Dance_Party_11b:
        validation: |-
          **Jak mam przejść ten poziom?**

          -   Użyj bloku 'kiedy strzałka w lewo', aby sprawić, że Robot będzie tańczył po naciśnięciu tego klawisza.

          _Ten poziom kończy się po 7 taktach._
      Dance_Party_extras_alternate_2019:
        alternate: Naprzemienny blok znajduje się w kategorii „Tancerze”.
      Function intro Ryan:
        Function_intro_Ryan_b: Jeśli wywołasz funkcję poprawnie, to jest ścieżką którą
          będziesz się przemieszczać...
        Function_intro_Ryan_a: W swoim programie możesz wywołać jedną funkcję wielokrotnie!  Spróbuj
          wywołać ją dwukrotnie, aby rozwiązać tę łamigłówkę.
      Function intro Ryan_2019:
        Function_intro_Ryan_b: Jeśli wywołasz funkcję poprawnie, to jest ścieżką którą
          będziesz się przemieszczać...
        Function_intro_Ryan_a: W swoim programie możesz wywołać jedną funkcję wielokrotnie!  Spróbuj
          wywołać ją dwukrotnie, aby rozwiązać tę łamigłówkę.
      HOC 2018 Level_10:
        voyage_aquatic_10a: Widzisz **Latarnie morskie** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Jak wykorzystasz warunek z nimi, aby przejść przez Oceaniczny monument?
      HOC 2018 Level_7a:
        aquatic7: Możesz użyć bloku "jeśli jest ścieżka", aby wykonać właściwy skręt.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Cóż za przepiękna rafa koralowa! Niebieski koral jest \*\*
          właściwą drogą, i uważaj, aby czerwony koral nie był po **lewej** stronie!
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Przeciągnij jeden blok "idź do przodu" ze skrzynki
          z narzędziami do obszaru roboczego i umieść pod blokiem "po uruchomieniu".
        MC_HOC_2017_01_RETRY_b: Nie zapomnij kliknąć na "Uruchom", aby uruchomić kod
          dla Agenta.
        MC_HOC_2017_01_RETRY_c: Po wykonaniu całego kodu przez Agenta, możesz poruszać
          się graczem przy użyciu klawiszy strzałek!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Przeciągnij jeden blok "idź do przodu" ze skrzynki
          z narzędziami do obszaru roboczego i umieść pod blokiem "po uruchomieniu".
        MC_HOC_2017_01_RETRY_b: Nie zapomnij kliknąć na "Uruchom", aby uruchomić kod
          dla Agenta.
        MC_HOC_2017_01_RETRY_c: Po wykonaniu całego kodu przez Agenta, możesz poruszać
          się graczem przy użyciu klawiszy strzałek!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Przesuń Agenta o dwa pola do przodu, aby stanął na
          płycie naciskowej.  Dzięki temu przed graczem otworzą się drzwi.
        MC_HOC_2017_02_Cole_b: "Naciśnij przycisk \"Uruchom\"! \nMożesz uruchomić
          swój kod, nawet jeśli nie jest poprawny. Wykonuj i resetuj swój kod, aż
          zobaczysz, co dzieje się źle."
        MC_HOC_2017_02_Cole_c: Gdy Agent otworzy drzwi, użyj klawiszy strzałek, aby
          gracz dotarł do mapy!
        MC_HOC_2017_02_Cole_d: Upewnij się, że Agent podąża ścieżką nakreśloną na
          mapie!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Przesuń Agenta o dwa pola do przodu, aby stanął na
          płycie naciskowej.  Dzięki temu przed graczem otworzą się drzwi.
        MC_HOC_2017_02_Cole_b: "Naciśnij przycisk \"Uruchom\"! \nMożesz uruchomić
          swój kod, nawet jeśli nie jest poprawny. Wykonuj i resetuj swój kod, aż
          zobaczysz, co dzieje się źle."
        MC_HOC_2017_02_Cole_c: Gdy Agent otworzy drzwi, użyj klawiszy strzałek, aby
          gracz dotarł do mapy!
        MC_HOC_2017_02_Cole_d: Upewnij się, że Agent podąża ścieżką nakreśloną na
          mapie!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Gdy Agent dotrze do płyty naciskowej, możesz użyć klawiszy
          strzałek, aby gracz dotarł do kompasu!
        MC_HOC_2017_03_Cole_b: Czy uważasz, że kod jest trochę za długi?  Spróbuj
          użyć pętli "powtórze", aby zobaczyć, czy da się go skrócić!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Gdy Agent dotrze do płyty naciskowej, możesz użyć klawiszy
          strzałek, aby gracz dotarł do kompasu!
        MC_HOC_2017_03_Cole_b: Czy uważasz, że kod jest trochę za długi?  Spróbuj
          użyć pętli "powtórze", aby zobaczyć, czy da się go skrócić!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Aby Agent się obrócił, Użyj bloku "skręć w prawo",
          aby Agent się obrócił '
        MC_HOC_2017_04POINT5_RYAN_a: Wystarczy, że Agent dotrze do pierwszej płyty
          naciskowej, aby Alex lub Steve mogli dotrzeć do siekiery.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Aby Agent się obrócił, Użyj bloku "skręć w prawo",
          aby Agent się obrócił '
        MC_HOC_2017_04POINT5_RYAN_a: Wystarczy, że Agent dotrze do pierwszej płyty
          naciskowej, aby Alex lub Steve mogli dotrzeć do siekiery.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent musi wykonać "idź do przodu" siedem razy.  Jak
          użyjesz pętli "powtórz", aby to zrobił?
        MC_HOC_2017_04_Cole_c: "Naciśnij przycisk \"Uruchom\"! \nMożesz uruchomić
          swój kod, nawet jeśli nie jest poprawny. Wykonuj i resetuj swój kod, aż
          zobaczysz, co dzieje się źle."
        MC_HOC_2017_04_Cole_b: Gdy Agent dotrze do płyty naciskowej, otworzy drzwi
          dla gracza.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent musi wykonać "idź do przodu" siedem razy.  Jak
          użyjesz pętli "powtórz", aby to zrobił?
        MC_HOC_2017_04_Cole_c: "Naciśnij przycisk \"Uruchom\"! \nMożesz uruchomić
          swój kod, nawet jeśli nie jest poprawny. Wykonuj i resetuj swój kod, aż
          zobaczysz, co dzieje się źle."
        MC_HOC_2017_04_Cole_b: Gdy Agent dotrze do płyty naciskowej, otworzy drzwi
          dla gracza.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Czy wiesz, że w pętli możesz umieścić więcej niż jeden
          fragment kodu?  Spróbuj umieścić w pętli "powtórz" deskę oraz "idź do przodu",
          aby ukończyć tę łamigłówkę.
        MC_HOC_2017_05_Cole_b: Przeprowadź Agenta przez rzekę, budując stopniowo most.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Czy wiesz, że w pętli możesz umieścić więcej niż jeden
          fragment kodu?  Spróbuj umieścić w pętli "powtórz" deskę oraz "idź do przodu",
          aby ukończyć tę łamigłówkę.
        MC_HOC_2017_05_Cole_b: Przeprowadź Agenta przez rzekę, budując stopniowo most.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Ile razy powtarza się ta pętla, a ile razy powinna
          się powtórzyć?
        MC_HOC_2017_06_Cole_b: 'Pomóż Agentowi zbudować most przez calutką wodę! '
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Ile razy powtarza się ta pętla, a ile razy powinna
          się powtórzyć?
        MC_HOC_2017_06_Cole_b: 'Pomóż Agentowi zbudować most przez calutką wodę! '
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Wszystko, co Agent musi zrobić, to wyczyścić ścieżkę
          do Minecartu.
        MC_HOC_2017_07_Cole_a: Aby rozwiązać tę łamigłówkę, musisz zrozumieć działanie
          funkcji "clear path". Można ją wywołać wiele razy, używając zielonego bloczku
          "clear path" znajdującego się w skrzynce z narzędziami.
        MC_HOC_2017_07_Cole_b: Spróbuj użyć bloków funkcyjnych jednocześnie z innymi
          blokami, aby ułatwić sobie rozwiązanie tej łamigłówki.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Wszystko, co Agent musi zrobić, to wyczyścić ścieżkę
          do Minecartu.
        MC_HOC_2017_07_Cole_a: Aby rozwiązać tę łamigłówkę, musisz zrozumieć działanie
          funkcji "clear path". Można ją wywołać wiele razy, używając zielonego bloczku
          "clear path" znajdującego się w skrzynce z narzędziami.
        MC_HOC_2017_07_Cole_b: Spróbuj użyć bloków funkcyjnych jednocześnie z innymi
          blokami, aby ułatwić sobie rozwiązanie tej łamigłówki.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: Nie wiesz, gdzie iść? Sprawdź, czy możesz znaleźć wykropkowaną
          linię!
        MC_HOC_2017_10_Cole_a: Użycie funkcji ułatwi rozwiązanie tej łamigłówki!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: Nie wiesz, gdzie iść? Sprawdź, czy możesz znaleźć wykropkowaną
          linię!
        MC_HOC_2017_10_Cole_a: Użycie funkcji ułatwi rozwiązanie tej łamigłówki!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "Naciśnij przycisk \"Uruchom\"! \nMożesz uruchomić swój
          kod, nawet jeśli nie jest poprawny. Wykonuj i resetuj swój kod, aż zobaczysz,
          co dzieje się źle."
        MC_HOC_2017_08_RY_b: Tę łamigłówkę można rozwiązać na WIELE różnych sposobów.  Wypróbuj
          kilka z nich!
        MC_HOC_2017_08_RY_c: Wykropkowana linia wskaże ci prostą ścieżkę poprzez lawę.
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "Naciśnij przycisk \"Uruchom\"! \nMożesz uruchomić swój
          kod, nawet jeśli nie jest poprawny. Wykonuj i resetuj swój kod, aż zobaczysz,
          co dzieje się źle."
        MC_HOC_2017_08_RY_b: Tę łamigłówkę można rozwiązać na WIELE różnych sposobów.  Wypróbuj
          kilka z nich!
        MC_HOC_2017_08_RY_c: Wykropkowana linia wskaże ci prostą ścieżkę poprzez lawę.
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Spróbuj tak pokierować Agentem tak, aby zbudował kilka
          dróg dla minicart, dzięki temu będziesz mógł wyruszyć w świat!
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Spróbuj tak pokierować Agentem tak, aby zbudował kilka
          dróg dla minicart, dzięki temu będziesz mógł wyruszyć w świat!
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: Zedytuj funkcję `draw a line of squares`
          aby nie wywoływać jej ponownie.
        NEW_Course_4_Artist_Functions_13_c: Jakiego kody byś potrzebował jeśli miałbyś
          zrobić gwiazdę używając zwykłych linii zamiast paczek?
      NEW Course 4 Artist Functions 4:
        NEW_Course_4_Artist_Functions_4_a: Będziesz musiał użyć bloku `skręć w prawo
          o 120 stopni` po każdym kwadracie.
      NEW Course 4 Artist Functions 9:
        NEW_Course_4_Artist_Functions_9_a: Spróbuj uruchomić kod zanim dodasz jakiś
          blok. Co sprawia, że rysunek wygląda na nieco inny?
      NEW Course 4 Artist Params 11:
        NEW_Course_4_Artist_Params_11_a: Istnieje więcej niż jedna liczba, którą należałoby
          wymienić na zmienną wewnątrz funkcji.
      NEW Course 4 Artist Params inspire:
        brush_width: Ustawiamy szerokość pędzla do 1, a następnie kolor na niebieski,
          zanim zrobimy cokolwiek innego.
        double_loop: Spróbuj umieścić pętlę 'dla.... ' wewnątrz pętli 'powtórz'.
        after: Po narysowaniu płatka, pamiętaj aby przejść do przodu o 20 pikseli,
          zanim obrócisz się o 60 stopni.
      NEW Course 4 Bee For Loops 8:
        NEW_Course_4_Bee_For_Loops_8_a: "Jeśli pętla jest w trakcie iteracji, za każdym
          razem do zmiennej licznika dodawany jest przyrost. \n\nCo musisz dodać do
          każdej wartości aby otrzymać kolejną wartość?"
      Overworld Avoid Monsters:
        mc_8_a: Do wyboru jest kilka ścieżek. Która jest najkrótsza?
        mc_8_b: Wykorzystaj pętlę `repeat` aby uprościć swój kod.
        mc_8_c: Twoim celem jest dojście do wejścia domu na samej górze ekranu.
      Overworld Avoid Monsters_2019:
        mc_8_a: Do wyboru jest kilka ścieżek. Która jest najkrótsza?
        mc_8_b: Wykorzystaj pętlę `repeat` aby uprościć swój kod.
        mc_8_c: Twoim celem jest dojście do wejścia domu na samej górze ekranu.
      Overworld Chop Tree:
        mc_2_a: Aby stanąć przed drzewem musisz podwójnie `move forward`.
        mc_2_b: Komenda `destroy block` ścina drzewo przed Tobą.
      Overworld Chop Tree_2019:
        mc_2_a: Aby stanąć przed drzewem musisz podwójnie `move forward`.
        mc_2_b: Komenda `destroy block` ścina drzewo przed Tobą.
      Overworld Chop Trees:
        mc_4_b: Komenda `destroy block` ścina drzewo przed Tobą.
      Overworld Chop Trees_2019:
        mc_4_b: Komenda `destroy block` ścina drzewo przed Tobą.
      Overworld House Frame Chosen:
        mc_6_b: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
        mc_6_c: Wewnątrz pętli `repeat` możesz umieścić więcej niż jeden blok.
      Overworld House Frame Chosen_2019:
        mc_6_b: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
        mc_6_c: Wewnątrz pętli `repeat` możesz umieścić więcej niż jeden blok.
      Overworld Place Wall:
        mc_5_a: Na początku użyj bloku `place`, następnie `move`.
        mc_5_b: Upewnij się, że oba bloki są wewnątrz pętli `repeat` aby wywołać kod
          więcej niż raz.
        mc_5_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
      Overworld Place Wall_2019:
        mc_5_a: Na początku użyj bloku `place`, następnie `move`.
        mc_5_b: Upewnij się, że oba bloki są wewnątrz pętli `repeat` aby wywołać kod
          więcej niż raz.
        mc_5_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
      Overworld Plant Crops:
        mc_7_c: Wewnątrz pętli `repeat` możesz umieścić więcej niż jeden blok.
      Overworld Plant Crops_2019:
        mc_7_c: Wewnątrz pętli `repeat` możesz umieścić więcej niż jeden blok.
      Overworld Powered Minecart:
        mc_13_b: Aby skrócić swój kod użyj pętli `repeat`.
      Overworld Powered Minecart_2019:
        mc_13_b: Aby skrócić swój kod użyj pętli `repeat`.
      Overworld Shear Sheep:
        mc_3_b: Jeśli chcesz zmienić kierunek w którym stoisz, użyj bloku `turn`.
        mc_3_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
      Overworld Shear Sheep_2019:
        mc_3_b: Jeśli chcesz zmienić kierunek w którym stoisz, użyj bloku `turn`.
        mc_3_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
      Underground Avoiding Lava:
        mc_11_b: Czy twoja komenda `move forward` powinna się znajdować wewnątrz instrukcji
          `if` czy po niej?
      Underground Avoiding Lava_2019:
        mc_11_b: Czy twoja komenda `move forward` powinna się znajdować wewnątrz instrukcji
          `if` czy po niej?
      Underground If Statements:
        mc_12_a: Miejsca z czerwonymi plamkami, to miejsca gdzie znajdziesz Redstone.
        mc_12_b: Czy możesz wykorzystać pętlę `powtórz` aby skrócić swój kod?
        mc_12_c: 'Wykorzystaj instrukcję `if` aby sprawdzić przestrzeń dla lawy, następnie
          umieść kostkę brukową. '
      Underground If Statements_2019:
        mc_12_a: Miejsca z czerwonymi plamkami, to miejsca gdzie znajdziesz Redstone.
        mc_12_b: Czy możesz wykorzystać pętlę `powtórz` aby skrócić swój kod?
        mc_12_c: 'Wykorzystaj instrukcję `if` aby sprawdzić przestrzeń dla lawy, następnie
          umieść kostkę brukową. '
      Underground Iron:
        mc_10_b: Kiedy stoisz na krawędzi lawy, użyj `umieść kostkę brukową` aby stworzyć
          bezpieczną ścieżkę. Potem, będziesz mógł po tym przejść!
        mc_10_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
      Underground Iron_2019:
        mc_10_b: Kiedy stoisz na krawędzi lawy, użyj `umieść kostkę brukową` aby stworzyć
          bezpieczną ścieżkę. Potem, będziesz mógł po tym przejść!
        mc_10_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć co się dzieje,
          nawet jeśli nie rozwiązałeś jeszcze zagadki.
      Underground Mining Coal:
        mc_9_a: Stoisz na właściwej drodze? `zniszcz blok`kopie blok przed Tobą.
        mc_9_b: Czarne plami w ścianie to węgiel! Aby je wykopać użyj `destroy block`.
        mc_9_c: Użyj `place torch` aby umieścić pochodnię, w miejscu w którym stoisz.
      Underground Mining Coal_2019:
        mc_9_a: Stoisz na właściwej drodze? `zniszcz blok`kopie blok przed Tobą.
        mc_9_b: Czarne plami w ścianie to węgiel! Aby je wykopać użyj `destroy block`.
        mc_9_c: Użyj `place torch` aby umieścić pochodnię, w miejscu w którym stoisz.
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: Możesz użyć bloków 'Skocz', aby przenieść się w inne miejsce.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_b: Kiedy skończysz jeden dom dla ptaków, `jump`
          do następnego!
        courseA_artist_loops_challenge2_c: Będziesz potrzebował wielu bloków wewnątrz
          tej pętli dla tego wyzwania.
      course1_artist_loops_challenge4:
        courseB_artist_loops_challenge1_c: 'Będziesz musiał `move` lub `jump` dwukrotnie
          nad niektórymi liniami. '
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Próbuj zmieniać wartości w każdej pętli,
          jeśli coś będzie szło źle.
        courseA_collector_loops_challenge1_b: Nie musisz używać pętli jeśli robisz
          coś tylko jeden raz.
      course1_collector_loops_challenge4:
        courseB_collector_loops_challenge2_a: Jeśli coś pójdzie źle, nie bój się zacząć
          od nowa. Nie poddawaj się!
        courseB_collector_loops_challenge2_c: Spróbuj użyć bloku `repeat` aby zebrać
          ostateczny skarb!
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_a: Nie musisz dodawać ani usuwać bloków, aby rozwiązać
          tą zagadkę.
        courseB_maze_seq_challenge2_b: Zmień bloki i wybierz środkową ścieżkę.
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_a: Najkrótsza ścieżka może tym razem nie działać.
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: Zacznij od zrobienia zagnieżdżonej
          pętli aby stworzyć cztery ośmiokąty. Obróć się o 45 stopni aby zrobić ośmiokąt.
          Skocz, później po każdym z nich obróć się o 90 stopni.
        courseD_artist_nestedLoops_challenge1_b: Dodaj kod aby narysować trójkąt wewnątrz
          zagnieżdżonej pętli. Dla trójkąta użyj 120 stopniowych obrotów.
        courseD_artist_nestedLoops_challenge1_c: |-
          Użyj zagnieżdżonej pętli:

          -   Powtórz 8 razy
          -   narysuj ośmiokąt
          -   narysuj trójkąt
          -   przejdź dalej o 50 pikseli
          -   obróć się w prawo o 90 stopni
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'Prostokąt ma 200 pikseli szerokości i 100
          pikseli wysokości. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "Możesz wkładać komendy do bloku 'powtórz',
          by zapętlać je w kółko i w kółko. Spróbuj!\n\n<xml>\n  \n          <block
          type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          Czy możesz znaleźć ścieżkę aby dotrzeć do każdego kwiatka i plastra miodu bez uderzania w żadne drzewo? Najlepszą ścieżką jest spirala.

          **Możesz to rozwiązać nawet bez skręcania w lewo.**
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: Oryginalny kod działałby świetnie - gdyby
          był tylko jeden skarb na każdym stosie!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Używaj komendy `collect` częściej aby
          zebrać dodatkowy skarb.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Używaj komendy `collect` częściej aby
          zebrać dodatkowy skarb.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Nawet nie myśl aby spróbować to zrobić
          bez użycia pętel!
        courseC_harvester_loops_challenge1_b: Możesz powtarzać `move forward` i `pick
          corn` tak wiele razy jak tylko zechcesz, następnie `turn right` w każdym
          narożniku.
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Pomyśl o tej drodze, jakby była trzema różnymi
          kawałkami. Każdy ma jeden wzór, który możesz powtórzyć.
        courseC_maze_loops_challenge1_b: Pomiędzy każdym blokiem 'powtórz' będziesz
          potrzebował 'skręć w lewo' lub 'skręć w prawo', by przygotować Scrata na
          kolejny wzór.
        courseC_maze_loops_challenge1_c: |-
          Jak dojdziesz już tak daleko, potrzebujesz tylko 'skręć w lewo', potem 'idź naprzód' kilka razy. Nie poddawaj się!

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Jeśli wyślesz mnie tyłem bądź bardzo
          ostrożny, bym obrócił się w dobrą stronę!_
        courseC_maze_programming_challenge2_b: Najkrótszym rozwiązaniem jest użycie
          5 bloków, ale wykorzystuje blok `repeat`!
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "Jeśli zadanie wydaje Ci sie za trudne,
          \ spróbuj budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj
          ich działanie. Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz
          cel!"
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "Jeśli zadanie wydaje Ci sie za trudne,
          \ spróbuj budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj
          ich działanie. Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz
          cel!"
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: Przycisk `STEP` może być bardzo pomocny
          w tym wyzwaniu.
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: Jednym ze sposobów rozwiązania tego problemu
          jest dodanie więcej kroków naprzód pomiędzy skrętami.
        courseC_maze_debugging_challenge2_b: Jeśli utkniesz, zawsze możesz zacząć
          od nowa lub usunąć cały kod i znaleźć własną drogę!
      course4_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_b: |-
          Zobacz ile gotowej do żniw kukurydzy w każdym z miejsc. Czy widzisz wzór liczenia? Parametr `Length` powinien być wykorzystany do ustawienia maksymalnej wartości w `for loop`.

          Nie zapomnij aby po żniwach rolnik wrócił na główną ścieżkę!
      course4_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          Aby aktorzy mogli mówić, potrzebujesz dodatkowych bloków z zestawu komend.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseA_artist_loops4:
        courseA_artist_loops4_a: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseA_artist_loops5:
        courseA_artist_loops5_b: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseA_artist_loops5_2018:
        courseA_artist_loops5_b: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseA_artist_loops5_2019:
        courseA_artist_loops5_b: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseA_artist_loops6:
        courseA_artist_loops6_b: Będziesz potrzebował 2 bloków w 2 kierunkach aby
          rozwiązać tą zagadkę.
      courseA_artist_loops6_2018:
        courseA_artist_loops6_b: Będziesz potrzebował 2 bloków w 2 kierunkach aby
          rozwiązać tą zagadkę.
      courseA_artist_loops6_2019:
        courseA_artist_loops6_b: Będziesz potrzebował 2 bloków w 2 kierunkach aby
          rozwiązać tą zagadkę.
      courseA_artist_loops7:
        courseA_artist_loops7_b: Napisz kod tylko dla pierwszej fali, potem to powtórz
          aby narysować pozostałe dwie.
      courseA_artist_loops7_2018:
        courseA_artist_loops7_b: Napisz kod tylko dla pierwszej fali, potem to powtórz
          aby narysować pozostałe dwie.
      courseA_artist_loops7_2019:
        courseA_artist_loops7_b: Napisz kod tylko dla pierwszej fali, potem to powtórz
          aby narysować pozostałe dwie.
      courseA_artist_loops9:
        courseA_artist_loops9_c: Jeśli nie wiesz gdzie umieścić pętlę, spróbuj pisać
          swój kod krok po kroku oraz szukać wzorców.
      courseA_artist_loops9_2018:
        courseA_artist_loops9_c: Jeśli nie wiesz gdzie umieścić pętlę, spróbuj pisać
          swój kod krok po kroku oraz szukać wzorców.
      courseA_artist_loops9_2019:
        courseA_artist_loops9_c: Jeśli nie wiesz gdzie umieścić pętlę, spróbuj pisać
          swój kod krok po kroku oraz szukać wzorców.
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_b: Jak skończysz jeden namiot, `jump` podwójnie
          aby przejść do następnego!
        courseA_artist_loops_challenge2_c: Wszystkie Twoje bloki muszą być wewnątrz
          pętli aby ukończyć tą zagadkę.
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_b: Jak skończysz jeden namiot, `jump` podwójnie
          aby przejść do następnego!
        courseA_artist_loops_challenge2_c: Wszystkie Twoje bloki muszą być wewnątrz
          pętli aby ukończyć tą zagadkę.
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_b: Jak skończysz jeden namiot, `jump` podwójnie
          aby przejść do następnego!
        courseA_artist_loops_challenge2_c: Wszystkie Twoje bloki muszą być wewnątrz
          pętli aby ukończyć tą zagadkę.
      courseA_collector_loops2:
        courseA_collector_loops2_a: Będziesz musiał się ruszyć zanim zbierzesz jakiś
          skarb.
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: Będziesz musiał się ruszyć zanim zbierzesz jakiś
          skarb.
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: Będziesz musiał się ruszyć zanim zbierzesz jakiś
          skarb.
      courseA_collector_loops5:
        courseA_collector_loops5_a: Jeśli nie możesz zgadnąć odpowiedzi od razu, spróbuj
          użyć kartki papieru aby rozwiązać jakich strzałek będziesz potrzebował i
          poszukaj wzorca.
        courseA_collector_loops5_b: Spróbuj rozdzielić problem na 2 części, poruszaj
          się bokiem i potem na dół.
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: Jeśli nie możesz zgadnąć odpowiedzi od razu, spróbuj
          użyć kartki papieru aby rozwiązać jakich strzałek będziesz potrzebował i
          poszukaj wzorca.
        courseA_collector_loops5_b: Spróbuj rozdzielić problem na 2 części, poruszaj
          się bokiem i potem na dół.
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: Jeśli nie możesz zgadnąć odpowiedzi od razu, spróbuj
          użyć kartki papieru aby rozwiązać jakich strzałek będziesz potrzebował i
          poszukaj wzorca.
        courseA_collector_loops5_b: Spróbuj rozdzielić problem na 2 części, poruszaj
          się bokiem i potem na dół.
      courseA_collector_loops6:
        courseA_collector_loops6_a: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseA_collector_loops7:
        courseA_collector_loops7_a: Jeśli nie wiesz co będzie dalej, uruchom kod aby
          zobaczyć gdzie Laurel skończy.
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: Jeśli nie wiesz co będzie dalej, uruchom kod aby
          zobaczyć gdzie Laurel skończy.
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: Jeśli nie wiesz co będzie dalej, uruchom kod aby
          zobaczyć gdzie Laurel skończy.
      courseA_collector_loops8:
        courseA_collector_loops8_b: Spróbuj rozbić tą zagadkę na 3 oddzielne części,
          i napisać pętle dla każdej z nich.
        courseA_collector_loops8_c: Pamiętaj, że możesz napisać jeden fragment kodu,
          nacisnąć "Idź" aby dowiedzieć się gdzie musisz iść.
      courseA_collector_loops8_2018:
        courseA_collector_loops8_b: Spróbuj rozbić tą zagadkę na 3 oddzielne części,
          i napisać pętle dla każdej z nich.
        courseA_collector_loops8_c: Pamiętaj, że możesz napisać jeden fragment kodu,
          nacisnąć "Idź" aby dowiedzieć się gdzie musisz iść.
      courseA_collector_loops8_2019:
        courseA_collector_loops8_b: Spróbuj rozbić tą zagadkę na 3 oddzielne części,
          i napisać pętle dla każdej z nich.
        courseA_collector_loops8_c: Pamiętaj, że możesz napisać jeden fragment kodu,
          nacisnąć "Idź" aby dowiedzieć się gdzie musisz iść.
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Spróbuj zmienić wartości w każdej pętli,
          jeśli coś wydaje się źle.
        courseA_collector_loops_challenge1_b: Nie musisz używać pętli jeśli robisz
          coś tylko jeden raz.
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: Spróbuj zmienić wartości w każdej pętli,
          jeśli coś wydaje się źle.
        courseA_collector_loops_challenge1_b: Nie musisz używać pętli jeśli robisz
          coś tylko jeden raz.
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: Spróbuj zmienić wartości w każdej pętli,
          jeśli coś wydaje się źle.
        courseA_collector_loops_challenge1_b: Nie musisz używać pętli jeśli robisz
          coś tylko jeden raz.
      courseA_harvester_loops2_2019:
        courseA_harvester_loops2_a: "Twój kod będzie miał **cztery** klocki `move
          west`\n\n<xml><block type=\"maze_moveWest\"/></xml>\n\ni **cztery** <xml>\n`pick
          corn`\n  <block type=\"harvester_corn\"/>\n</xml> klocki. "
      courseA_harvester_loops3:
        courseA_harvester_loops3_b: Aby powtórzyć kod, przeciągnij pętlę `repeat`,
          następnie umieść tam blok, który chcesz aby się powtarzał.
      courseA_harvester_loops3_2019:
        courseA_harvester_loops3_b: Aby powtórzyć kod, przeciągnij pętlę `repeat`,
          następnie umieść tam blok, który chcesz aby się powtarzał.
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: Jeśli utkniesz, spróbuj rozwiązać zagadnę w 2
          etapach, pierwsza część przed zakrętem, druga po zakręcie.
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: Jeśli utkniesz, spróbuj rozwiązać zagadnę w 2
          etapach, pierwsza część przed zakrętem, druga po zakręcie.
      courseA_maze_seq13:
        courseA_maze_seq13_b: Nie bój się popełniać błędów! Spróbuj dodawać bloki
          i uruchom kod, aby zobaczyć co się stanie.
      courseA_maze_seq13_2018:
        courseA_maze_seq13_b: Nie bój się popełniać błędów! Spróbuj dodawać bloki
          i uruchom kod, aby zobaczyć co się stanie.
      courseA_maze_seq13_2019:
        courseA_maze_seq13_b: Nie bój się popełniać błędów! Spróbuj dodawać bloki
          i uruchom kod, aby zobaczyć co się stanie.
        courseA_maze_seq13_c: |-
          Te klocki <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml>

           pomogą Ci zbliżyć się do świnki.
      courseA_maze_seq2:
        courseA_maze_seq2_b: Spróbuj najpierw uruchomić kod, aby zobaczyć gdzie ptak
          skończy. Dokąd musisz stąd iść?
      courseA_maze_seq3:
        courseA_maze_seq3_b: Próbuj wykorzystać przycisk krok, aby dowiedzieć się
          gdzie program jest zły. Czy to jest 1 krok, czy drugi?
      courseA_maze_seq4:
        courseA_maze_seq4_b: Spróbuj uruchomić kod w takim stanie jaki jest. Czy coś
          poszło nie tak? Który blok możesz usunąć? Jak możesz to naprawić?
      courseA_maze_seq5:
        courseA_maze_seq5_b: Będziesz potrzebował 2 bloków, wskazujących w 2 kierunkach.
      courseA_maze_seq6:
        courseA_maze_seq6_b: Jeśli utkniesz, spróbuj rozwiązać zagadnę w 2 etapach,
          pierwsza część przed zakrętem, druga po zakręcie.
      courseA_maze_seq6_2018:
        courseA_maze_seq6_b: Jeśli utkniesz, spróbuj rozwiązać zagadnę w 2 etapach,
          pierwsza część przed zakrętem, druga po zakręcie.
      courseA_maze_seq6_2019:
        courseA_maze_seq6_b: Jeśli utkniesz, spróbuj rozwiązać zagadnę w 2 etapach,
          pierwsza część przed zakrętem, druga po zakręcie.
      courseA_maze_seq9:
        courseA_maze_seq9_b: Jesli nie jesteś pewien co zrobić, naciśnij "Start over"
          i uruchom kod aby zobaczyć co idzie nie tak.
        courseA_maze_seq9_c: Będziesz musiał poruszać się w 3 kierunkach aby rozwiązać
          tą łamigłówkę.
      courseB_artist_loops2:
        courseB_artist_loops2_a: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: Jeśli chcesz, aby pętla powtarzała się więcej niż
          4 razy, możesz zmienić wartość na górze bloku.
      courseB_artist_loops3:
        courseB_artist_loops3_b: Artysta będzie chciał przenieść się na południe aby
          rysować linię.
      courseB_artist_loops3_2018:
        courseB_artist_loops3_b: Artysta będzie chciał przenieść się na południe aby
          rysować linię.
      courseB_artist_loops3_2019:
        courseB_artist_loops3_b: Artysta będzie chciał przenieść się na południe aby
          rysować linię.
      courseB_artist_loops4:
        courseB_artist_loops4_c: Nie zapomnij zmienić ilości powtórzeń pętli.
      courseB_artist_loops4_2018:
        courseB_artist_loops4_c: Nie zapomnij zmienić ilości powtórzeń pętli.
      courseB_artist_loops4_2019:
        courseB_artist_loops4_c: Nie zapomnij zmienić ilości powtórzeń pętli.
      courseB_artist_loops9:
        courseB_artist_loops9_a: Pamiętaj, że blok skoku możę być wykorzystany aby
          poruszać się bez rysowania linii.
        courseB_artist_loops9_b: Będziesz musiał użyć bloku W, aby rozwiązać tą zagadkę.
      courseB_artist_loops9_2018:
        courseB_artist_loops9_a: Pamiętaj, że blok skoku możę być wykorzystany aby
          poruszać się bez rysowania linii.
        courseB_artist_loops9_b: Będziesz musiał użyć bloku W, aby rozwiązać tą zagadkę.
      courseB_artist_loops9_2019:
        courseB_artist_loops9_a: Pamiętaj, że blok skoku możę być wykorzystany aby
          poruszać się bez rysowania linii.
        courseB_artist_loops9_b: Będziesz musiał użyć bloku W, aby rozwiązać tą zagadkę.
      courseB_artist_loops_challenge1:
        courseB_artist_loops_challenge1_c: 'Będziesz musiał `move` lub `jump` dwukrotnie
          nad niektórymi liniami. '
      courseB_artist_loops_challenge1_2018:
        courseB_artist_loops_challenge1_c: 'Będziesz musiał `move` lub `jump` dwukrotnie
          nad niektórymi liniami. '
      courseB_artist_loops_challenge1_2019:
        courseB_artist_loops_challenge1_c: 'Będziesz musiał `move` lub `jump` dwukrotnie
          nad niektórymi liniami. '
      courseB_artist_loops_challenge2:
        courseB_artist_loops_challenge2_a: Kod aby narysować X jest już Ci dany. Wszystko
          co musisz zrobić, to powtórzyć X i skoczyć do następnego miejsca.
        courseB_artist_loops_challenge2_b: Możesz użyć bloków 'Skocz' aby przenieść
          się w inne miejsce.
      courseB_artist_loops_challenge2_2018:
        courseB_artist_loops_challenge2_a: Kod aby narysować X jest już Ci dany. Wszystko
          co musisz zrobić, to powtórzyć X i skoczyć do następnego miejsca.
        courseB_artist_loops_challenge2_b: Możesz użyć bloków 'Skocz' aby przenieść
          się w inne miejsce.
      courseB_artist_loops_challenge2_2019:
        courseB_artist_loops_challenge2_a: Kod aby narysować X jest już Ci dany. Wszystko
          co musisz zrobić, to powtórzyć X i skoczyć do następnego miejsca.
        courseB_artist_loops_challenge2_b: Możesz użyć bloków 'Skocz' aby przenieść
          się w inne miejsce.
      courseB_collector_loops10:
        courseB_collector_loops10_b: Spróbuj zapisać ruchy na kartce papieru i znaleźć
          wzór.
      courseB_collector_loops10_2018:
        courseB_collector_loops10_b: Spróbuj zapisać ruchy na kartce papieru i znaleźć
          wzór.
      courseB_collector_loops10_2019:
        courseB_collector_loops10_b: Spróbuj zapisać ruchy na kartce papieru i znaleźć
          wzór.
      courseB_collector_loops2:
        courseB_collector_loops2_a: Będziesz musiał się ruszyć zanim zbierzesz jakiś
          skarb.
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: Będziesz musiał się ruszyć zanim zbierzesz jakiś
          skarb.
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: Będziesz musiał się ruszyć zanim zbierzesz jakiś
          skarb.
      courseB_collector_loops3:
        courseB_collector_prog3_b: Pamiętaj, że możesz umieścić więcej niż jeden blok
          wewnątrz powtarzającej się pętli.
      courseB_collector_loops3_2018:
        courseB_collector_prog3_b: Pamiętaj, że możesz umieścić więcej niż jeden blok
          wewnątrz powtarzającej się pętli.
      courseB_collector_loops3_2019:
        courseB_collector_prog3_b: Pamiętaj, że możesz umieścić więcej niż jeden blok
          wewnątrz powtarzającej się pętli.
      courseB_collector_loops4:
        courseB_collector_loops4_c: Laurel musi iść na dół i zebrać skarb po zakończeniu
          pętli `repeat`!
      courseB_collector_loops4_2018:
        courseB_collector_loops4_c: Laurel musi iść na dół i zebrać skarb po zakończeniu
          pętli `repeat`!
      courseB_collector_loops4_2019:
        courseB_collector_loops4_c: Laurel musi iść na dół i zebrać skarb po zakończeniu
          pętli `repeat`!
      courseB_collector_loops5:
        courseB_collector_loops5_b: Spróbuj uruchomić kod kilka razy, aby zobaczyć,
          co się dzieje.
      courseB_collector_loops5_2018:
        courseB_collector_loops5_b: Spróbuj uruchomić kod kilka razy, aby zobaczyć,
          co się dzieje.
      courseB_collector_loops5_2019:
        courseB_collector_loops5_b: Spróbuj uruchomić kod kilka razy, aby zobaczyć,
          co się dzieje.
      courseB_collector_loops6:
        courseB_collector_loops6_b: Możesz zmienić ilość powtarzania się pętli poprzez
          kliknięcie w "3" i wybranie innej wartości.
        courseB_collector_loops6_d: Jeśli nie wiesz co zrobić, rozbij tą zagadkę na
          3 części.
      courseB_collector_loops6_2018:
        courseB_collector_loops6_b: Możesz zmienić ilość powtarzania się pętli poprzez
          kliknięcie w "3" i wybranie innej wartości.
        courseB_collector_loops6_d: Jeśli nie wiesz co zrobić, rozbij tą zagadkę na
          3 części.
      courseB_collector_loops6_2019:
        courseB_collector_loops6_b: Możesz zmienić ilość powtarzania się pętli poprzez
          kliknięcie w "3" i wybranie innej wartości.
        courseB_collector_loops6_d: Jeśli nie wiesz co zrobić, rozbij tą zagadkę na
          3 części.
      courseB_collector_loops_challenge2:
        courseB_collector_loops_challenge2_a: Jeśli coś pójdzie źle, nie bój się zacząć
          od nowa. Nie poddawaj się!
        courseB_collector_loops_challenge2_c: Spróbuj użyć bloku `repeat` aby zebrać
          ostateczny skarb!
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: Jeśli coś idzie źle, spróbuj to debugować.
          Nie poddawaj się!
        courseB_collector_loops_challenge2a_b: Spójrz na te opcje, aby wydostać się
          z labiryntu. Czy zauważasz jakiś wzór, który możesz powtórzyć?
        courseB_collector_loops_challenge2a_c: Aby zebrać cały skarb, musisz albo
          dodać dwa bloki <xml> <block type="collector_collect"/></xml> w swojej pętli,
          albo umieścić blok wewnątrz własnego bloku „powtarzaj".
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: Jeśli coś idzie źle, spróbuj to debugować.
          Nie poddawaj się!
        courseB_collector_loops_challenge2a_b: Spójrz na te opcje, aby wydostać się
          z labiryntu. Czy zauważasz jakiś wzór, który możesz powtórzyć?
        courseB_collector_loops_challenge2a_c: Aby zebrać cały skarb, musisz albo
          dodać dwa bloki <xml> <block type="collector_collect"/></xml> w swojej pętli,
          albo umieścić blok wewnątrz własnego bloku „powtarzaj".
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: Jeśli coś idzie źle, spróbuj to debugować.
          Nie poddawaj się!
        courseB_collector_loops_challenge2a_b: Spójrz na te opcje, aby wydostać się
          z labiryntu. Czy zauważasz jakiś wzór, który możesz powtórzyć?
        courseB_collector_loops_challenge2a_c: Aby zebrać cały skarb, musisz albo
          dodać dwa bloki <xml> <block type="collector_collect"/></xml> w swojej pętli,
          albo umieścić blok wewnątrz własnego bloku „powtarzaj".
      courseB_iceage_loops3:
        courseB_iceage_loops3_b: Aby powtórzyć kod, przeciągnij pętlę `repeat`, następnie
          umieść tam blok, który chcesz aby się powtarzał.
      courseB_iceage_loops3_2019:
        courseB_iceage_loops3_b: Aby powtórzyć kod, przeciągnij pętlę `repeat`, następnie
          umieść tam blok, który chcesz aby się powtarzał.
      courseB_maze_seq10:
        courseB_maze_seq10_b: Aby dosięgnąć świnki, będziesz musiał poruszać się w
          2 różnych kierunkach.
      courseB_maze_seq11:
        courseB_maze_seq11_b: 'Rozwiąż tą zagadkę w dwóch etapach: pierwszy przed
          zakrętem, drugi po zakręcie.'
      courseB_maze_seq5:
        courseB_maze_seq5_a: Jeśli gdzieś utkniesz, spróbuj narysować ścieżkę na papierze.
        courseB_maze_seq5_c: Nie jesteś pewny, jak dostać się do świnki? Spróbuj tej
          ścieżki.
      courseB_maze_seq5_2018:
        courseB_maze_seq5_a: Jeśli gdzieś utkniesz, spróbuj narysować ścieżkę na papierze.
        courseB_maze_seq5_c: Nie jesteś pewny, jak dostać się do świnki? Spróbuj tej
          ścieżki.
      courseB_maze_seq5_2019:
        courseB_maze_seq5_a: Jeśli gdzieś utkniesz, spróbuj narysować ścieżkę na papierze.
        courseB_maze_seq5_c: Nie jesteś pewny, jak dostać się do świnki? Spróbuj tej
          ścieżki.
      courseB_maze_seq8:
        courseB_maze_seq8_b: Istnieją dwa sposoby, aby rozwiązać ten problem!
        courseB_maze_seq8_c: Nie wiesz, w którą stronę iść? Wypróbuj tę ścieżkę!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_b: Istnieją dwa sposoby, aby rozwiązać ten problem!
        courseB_maze_seq8_c: Nie wiesz, w którą stronę iść? Wypróbuj tę ścieżkę!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_b: Istnieją dwa sposoby, aby rozwiązać ten problem!
        courseB_maze_seq8_c: Nie wiesz, w którą stronę iść? Wypróbuj tę ścieżkę!
      courseB_maze_seq_challenge1:
        courseB_maze_seq_challenge1_a: Najkrótsza ścieżka może tym razem nie działać.
      courseB_maze_seq_challenge1_2018:
        courseB_maze_seq_challenge1_a: Najkrótsza ścieżka może tym razem nie działać.
      courseB_maze_seq_challenge1_2019:
        courseB_maze_seq_challenge1_a: Najkrótsza ścieżka może tym razem nie działać.
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_a: Nie musisz dodawać ani usuwać bloków, aby rozwiązać
          tą zagadkę.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_a: Nie musisz dodawać ani usuwać bloków, aby rozwiązać
          tą zagadkę.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_a: Nie musisz dodawać ani usuwać bloków, aby rozwiązać
          tą zagadkę.
      courseB_starWars_prog5:
        courseB_starWars_prog5_c: Śledź ten wzór swoim palcem. Licz kawałki metalu
          jak się poruszasz.
      courseB_starWars_prog5_2018:
        courseB_starWars_prog5_c: Śledź ten wzór swoim palcem. Licz kawałki metalu
          jak się poruszasz.
      courseB_starWars_prog5_2019:
        courseB_starWars_prog5_c: Śledź ten wzór swoim palcem. Licz kawałki metalu
          jak się poruszasz.
      courseB_starWars_prog9:
        courseB_starWars_prog9_a: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
        courseB_starWars_prog9_b: Jest wiele sposobów na rozwiązanie tej zagadki.
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_a: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
        courseB_starWars_prog9_b: Jest wiele sposobów na rozwiązanie tej zagadki.
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_a: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
        courseB_starWars_prog9_b: Jest wiele sposobów na rozwiązanie tej zagadki.
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: Każdy zielony blok `when arrow` powinien mieć jedną
          akcję poniżej.
        courseC_PlayLab_events6_c: Kiedy skończysz, powinieneś być w stanie poruszać
          się Waddles dookoła używając strzałek na klawiaturze!
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: Każdy zielony blok `when arrow` powinien mieć jedną
          akcję poniżej.
        courseC_PlayLab_events6_c: Kiedy skończysz, powinieneś być w stanie poruszać
          się Waddles dookoła używając strzałek na klawiaturze!
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: Każdy zielony blok `when arrow` powinien mieć jedną
          akcję poniżej.
        courseC_PlayLab_events6_c: Kiedy skończysz, powinieneś być w stanie poruszać
          się Waddles dookoła używając strzałek na klawiaturze!
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_b: Pętla `repeat forever` nie musi być połączona z
          żadnym innym blokiem zdarzeń; będzie działać samodzielnie.
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_b: Pętla `repeat forever` nie musi być połączona z
          żadnym innym blokiem zdarzeń; będzie działać samodzielnie.
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_b: Pętla `repeat forever` nie musi być połączona z
          żadnym innym blokiem zdarzeń; będzie działać samodzielnie.
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_c: Możesz mieć więcej niż jedno zdarzenie `when actor
          touches` w swojej przestrzeni roboczej w tym samym czasie, więc nie musisz
          usuwać tego pierwszego!
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_c: Możesz mieć więcej niż jedno zdarzenie `when actor
          touches` w swojej przestrzeni roboczej w tym samym czasie, więc nie musisz
          usuwać tego pierwszego!
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_c: Możesz mieć więcej niż jedno zdarzenie `when actor
          touches` w swojej przestrzeni roboczej w tym samym czasie, więc nie musisz
          usuwać tego pierwszego!
      courseC_artist_loop1:
        courseC_artist_loop1_a: Nie musisz nic w tej pętli zmieniać, wystarczy, że
          umieścisz nad nią jeden blok.
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: Nie musisz nic w tej pętli zmieniać, wystarczy, że
          umieścisz nad nią jeden blok.
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: Nie musisz nic w tej pętli zmieniać, wystarczy, że
          umieścisz nad nią jeden blok.
      courseC_artist_loops2a:
        courseC_artist_loops2a_b: Naciśnij na numer na górze pętli `repeat` aby zmienić
          ilość jej powtórzeń.
      courseC_artist_loops2a_2018:
        courseC_artist_loops2a_b: Naciśnij na numer na górze pętli `repeat` aby zmienić
          ilość jej powtórzeń.
      courseC_artist_loops2a_2019:
        courseC_artist_loops2a_b: Naciśnij na numer na górze pętli `repeat` aby zmienić
          ilość jej powtórzeń.
      courseC_artist_loops5b:
        courseC_artist_loops5b_b: Aby zrobić wzór podobny do powyższego, musisz poruszać
          się do przodu i do tyłu o taką samą odległość.
      courseC_artist_loops5b_2018:
        courseC_artist_loops5b_b: Aby zrobić wzór podobny do powyższego, musisz poruszać
          się do przodu i do tyłu o taką samą odległość.
      courseC_artist_loops5b_2019:
        courseC_artist_loops5b_b: Aby zrobić wzór podobny do powyższego, musisz poruszać
          się do przodu i do tyłu o taką samą odległość.
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: Pamiętaj o umieszczeniu wewnątrz pętli bloku
          `turn`.
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: Pamiętaj o umieszczeniu wewnątrz pętli bloku
          `turn`.
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: Pamiętaj o umieszczeniu wewnątrz pętli bloku
          `turn`.
      courseC_artist_prog2:
        courseC_artist_prog2_a: Jeżeli użyjesz bloku "idź do przodu o 100 pikseli",
          narysuję linię automatycznie.
        courseC_artist_prog2_b: Masz problem z zakrętem? Użyj bloku "skręć w prawo
          o 90 stopni".
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: Jeżeli użyjesz bloku "idź do przodu o 100 pikseli",
          narysuję linię automatycznie.
        courseC_artist_prog2_b: Masz problem z zakrętem? Użyj bloku "skręć w prawo
          o 90 stopni".
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: Jeżeli użyjesz bloku "idź do przodu o 100 pikseli",
          narysuję linię automatycznie.
        courseC_artist_prog2_b: Masz problem z zakrętem? Użyj bloku "skręć w prawo
          o 90 stopni".
      courseC_artist_prog_challenge2a:
        courseC_artist_prog_challenge2_a: Po narysowaniu pierwszej linii, obróć się
          w lewo zanim narysujesz drugą linię.
        courseC_artist_prog_challenge2_b: Po narysowaniu drugiej linii, obróć się
          w prawo zanim narysujesz 3 linię.
      courseC_artist_prog_challenge2a_2018:
        courseC_artist_prog_challenge2_a: Po narysowaniu pierwszej linii, obróć się
          w lewo zanim narysujesz drugą linię.
        courseC_artist_prog_challenge2_b: Po narysowaniu drugiej linii, obróć się
          w prawo zanim narysujesz 3 linię.
      courseC_artist_prog_challenge2a_2019:
        courseC_artist_prog_challenge2_a: Po narysowaniu pierwszej linii, obróć się
          w lewo zanim narysujesz drugą linię.
        courseC_artist_prog_challenge2_b: Po narysowaniu drugiej linii, obróć się
          w prawo zanim narysujesz 3 linię.
      courseC_collector_prog1:
        courseC_collector_prog1_a: Kiedy stoisz w pewnej odległości od skarbu, użyj
          bloku <xml><block type="collector_collect"/></xml> aby go podnieść.
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: Kiedy stoisz w pewnej odległości od skarbu, użyj
          bloku <xml><block type="collector_collect"/></xml> aby go podnieść.
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: Kiedy stoisz w pewnej odległości od skarbu, użyj
          bloku <xml><block type="collector_collect"/></xml> aby go podnieść.
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Używaj komendy `collect` częściej aby
          zebrać dodatkowy skarb.
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: Używaj komendy `collect` częściej aby
          zebrać dodatkowy skarb.
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: Używaj komendy `collect` częściej aby
          zebrać dodatkowy skarb.
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_b: Zgubiłeś się? Spróbuj tej ścieżki aby
          rozwiązać zagadkę!
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_b: Zgubiłeś się? Spróbuj tej ścieżki aby
          rozwiązać zagadkę!
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_b: Zgubiłeś się? Spróbuj tej ścieżki aby
          rozwiązać zagadkę!
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: 'Blok, który musisz dodać nazywa się `set speed`. '
        courseC_flappy_events2_b: Połącz blok `set speed` z blokiem `when run`, aby
          rozwiązać zagadkę.
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: 'Blok, który musisz dodać nazywa się `set speed`. '
        courseC_flappy_events2_b: Połącz blok `set speed` z blokiem `when run`, aby
          rozwiązać zagadkę.
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: 'Blok, który musisz dodać nazywa się `set speed`. '
        courseC_flappy_events2_b: Połącz blok `set speed` z blokiem `when run`, aby
          rozwiązać zagadkę.
      courseC_flappy_events3:
        courseC_flappy_events3_a: Jeśli coś nie działa prawidłowo, upewnij się, że
          bloki połączone są z odpowiednimi zdarzeniami w przestrzeni roboczej.
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: Jeśli coś nie działa prawidłowo, upewnij się, że
          bloki połączone są z odpowiednimi zdarzeniami w przestrzeni roboczej.
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: Jeśli coś nie działa prawidłowo, upewnij się, że
          bloki połączone są z odpowiednimi zdarzeniami w przestrzeni roboczej.
      courseC_flappy_events5:
        courseC_flappy_events5_a: Musisz użyć bloku `score a point` aby przejść ten
          poziom.
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: Musisz użyć bloku `score a point` aby przejść ten
          poziom.
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: Musisz użyć bloku `score a point` aby przejść ten
          poziom.
      courseC_flappy_events7:
        courseC_flappy_events7_a: 'Możesz zmienić tło używając bloku `set scene`. '
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: 'Możesz zmienić tło używając bloku `set scene`. '
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: 'Możesz zmienić tło używając bloku `set scene`. '
      courseC_harvester_loops2:
        courseC_harvester_loops2_c: Jedna pętla będzie powtarzać komendę `move forward`,
          a inna `pick pumpkin`.
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_c: Jedna pętla będzie powtarzać komendę `move forward`,
          a inna `pick pumpkin`.
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_c: Jedna pętla będzie powtarzać komendę `move forward`,
          a inna `pick pumpkin`.
      courseC_harvester_loops3:
        courseC_harvester_loops3_c: Jeśli chcesz uprościć swój kod, możesz umieścić
          jedną pętlę w drugiej! Nazywa się to **nested loop**.
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_c: Jeśli chcesz uprościć swój kod, możesz umieścić
          jedną pętlę w drugiej! Nazywa się to **nested loop**.
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_c: Jeśli chcesz uprościć swój kod, możesz umieścić
          jedną pętlę w drugiej! Nazywa się to **nested loop**.
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: Użyj nowego bloku `pick corn` aby nazbierać kukurydzy.
        courseC_harvester_loops4_b: Możesz użyć kilku pętli powtarzających się w swoim
          kodzie, kilka do zbierania kukurydzy a inne do zbierania dyni.
        courseC_harvester_loops4_c: Jeśli chcesz uprościć swój kod, możesz umieścić
          jedną pętlę w drugiej! Nazywa się to **nested loop**.
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: Użyj nowego bloku `pick corn` aby nazbierać kukurydzy.
        courseC_harvester_loops4_b: Możesz użyć kilku pętli powtarzających się w swoim
          kodzie, kilka do zbierania kukurydzy a inne do zbierania dyni.
        courseC_harvester_loops4_c: Jeśli chcesz uprościć swój kod, możesz umieścić
          jedną pętlę w drugiej! Nazywa się to **nested loop**.
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: Użyj nowego bloku `pick corn` aby nazbierać kukurydzy.
        courseC_harvester_loops4_b: Możesz użyć kilku pętli powtarzających się w swoim
          kodzie, kilka do zbierania kukurydzy a inne do zbierania dyni.
        courseC_harvester_loops4_c: Jeśli chcesz uprościć swój kod, możesz umieścić
          jedną pętlę w drugiej! Nazywa się to **nested loop**.
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: Czy ten stopień nie wygląda znajomo z poprzedniej
          zagadki? Ruchy powinny być podobne, pamiętaj tylko, aby zbierać plony po
          drodze.
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: Czy ten stopień nie wygląda znajomo z poprzedniej
          zagadki? Ruchy powinny być podobne, pamiętaj tylko, aby zbierać plony po
          drodze.
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: Czy ten stopień nie wygląda znajomo z poprzedniej
          zagadki? Ruchy powinny być podobne, pamiętaj tylko, aby zbierać plony po
          drodze.
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: To jest zbyt trudne bez pętel!
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: To jest zbyt trudne bez pętel!
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: To jest zbyt trudne bez pętel!
      courseC_maze_debugging1:
        courseC_maze_debugging1_b: Jest jeden blok, który musisz dodać aby skończyć
          tą zagadkę.
      courseC_maze_debugging1_2018:
        courseC_maze_debugging1_b: Jest jeden blok, który musisz dodać aby skończyć
          tą zagadkę.
      courseC_maze_debugging1_2019:
        courseC_maze_debugging1_b: Jest jeden blok, który musisz dodać aby skończyć
          tą zagadkę.
      courseC_maze_debugging2:
        courseC_maze_debugging2_c: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_c: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_c: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseC_maze_debugging3:
        courseC_maze_debugging3_b: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_b: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_b: Nie możesz dowiedzieć się do jest źle? Spróbuj
          uruchomić kod kilkukrotnie, aby zobaczyć co się dzieje.
      courseC_maze_programming6:
        courseC_maze_programming6_a: Istnieją dwa sposoby, aby rozwiązać ten problem!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Istnieją dwa sposoby, aby rozwiązać ten problem!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Istnieją dwa sposoby, aby rozwiązać ten problem!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_b: |-
          Najkrótsze rozwiązanie wykorzystuje tylko 5 bloków, ale używa tego bloku:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_b: |-
          Najkrótsze rozwiązanie wykorzystuje tylko 5 bloków, ale używa tego bloku:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_b: |-
          Najkrótsze rozwiązanie wykorzystuje tylko 5 bloków, ale używa tego bloku:
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops1:
        courseC_starWars_loops1_b: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops10:
        courseC_starWars_loops10_c: Nie bój się popełniać błędów! Uruchom kod aby
          zobaczyć co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_c: Nie bój się popełniać błędów! Uruchom kod aby
          zobaczyć co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_c: Nie bój się popełniać błędów! Uruchom kod aby
          zobaczyć co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_b: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_b: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: Aby powtórzyć kod, przeciągnij pętlę `repeat`,
          następnie umieść tam blok, który chcesz aby się powtarzał.
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: Aby powtórzyć kod, przeciągnij pętlę `repeat`,
          następnie umieść tam blok, który chcesz aby się powtarzał.
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: Aby powtórzyć kod, przeciągnij pętlę `repeat`,
          następnie umieść tam blok, który chcesz aby się powtarzał.
      courseC_starWars_loops4:
        courseC_starWars_loops4_b: 'Każda pętla `repeat` ma tylko jedną komendę w
          środku: `move forward`.'
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_b: 'Każda pętla `repeat` ma tylko jedną komendę w
          środku: `move forward`.'
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_b: 'Każda pętla `repeat` ma tylko jedną komendę w
          środku: `move forward`.'
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: Aby iść na dół, musisz się obrócić i dalej isś
          prosto.
      courseC_starWars_loops7:
        courseC_starWars_loops7_b: Jeśli masz problem z tą zagadką, spróbuj zapisać
          wszystkie ruchy na kartce papieru i poszukać wzorca.
        courseC_starWars_loops7_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_b: Jeśli masz problem z tą zagadką, spróbuj zapisać
          wszystkie ruchy na kartce papieru i poszukać wzorca.
        courseC_starWars_loops7_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_b: Jeśli masz problem z tą zagadką, spróbuj zapisać
          wszystkie ruchy na kartce papieru i poszukać wzorca.
        courseC_starWars_loops7_c: Nie bój się popełniać błędów! Uruchom kod aby zobaczyć
          co się dzieje, nawet jeśli nie rozwiązałeś jeszcze zagadki.
      courseD_artist_binary1:
        courseD_artist_binary1_b: Artysta narysuje białą spację dla każdej 1 i czarną
          spację dla każdego 0.
      courseD_artist_binary1_2018:
        courseD_artist_binary1_b: Artysta narysuje białą spację dla każdej 1 i czarną
          spację dla każdego 0.
      courseD_artist_binary1_2019:
        courseD_artist_binary1_b: Artysta narysuje białą spację dla każdej 1 i czarną
          spację dla każdego 0.
      courseD_artist_binary3:
        courseD_artist_binary3_a: Jeden z czterech binarnych wzorów w przyborniku
          rozwiąże tą zagadkę!
      courseD_artist_binary3_2018:
        courseD_artist_binary3_a: Jeden z czterech binarnych wzorów w przyborniku
          rozwiąże tą zagadkę!
      courseD_artist_binary3_2019:
        courseD_artist_binary3_a: Jeden z czterech binarnych wzorów w przyborniku
          rozwiąże tą zagadkę!
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: "Spróbuj użyć bloku 'skok do przodu', aby przejść
          o jeden kwadrat do miejsca, w którym rozpocznie się rysowanie następnego.
          \  \n\nJeśli bok Twoich kwadratów to 20 pikseli wysokości i są one oddalone
          o 20 pikseli od siebie, to jak daleko potrzebujesz skoczyć?"
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: "Spróbuj użyć bloku 'skok do przodu', aby przejść
          o jeden kwadrat do miejsca, w którym rozpocznie się rysowanie następnego.
          \  \n\nJeśli bok Twoich kwadratów to 20 pikseli wysokości i są one oddalone
          o 20 pikseli od siebie, to jak daleko potrzebujesz skoczyć?"
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: "Spróbuj użyć bloku 'skok do przodu', aby przejść
          o jeden kwadrat do miejsca, w którym rozpocznie się rysowanie następnego.
          \  \n\nJeśli bok Twoich kwadratów to 20 pikseli wysokości i są one oddalone
          o 20 pikseli od siebie, to jak daleko potrzebujesz skoczyć?"
      courseD_artist_ramp11:
        courseD_artist_ramp11_c: Pamiętaj o umieszczeniu bloku `turn` wewnątrz twojej
          pętli!
      courseD_artist_ramp12:
        courseD_artist_ramp12_a: Możesz najpierw narysować kwadrat, a potem trójkąt,
          albo odwrotnie!
        courseD_artist_ramp12_b: Spróbuj podzielić problem na 2 części wykorzystując
          2 pętle.
      courseD_autorun_binary3_2019:
        courseD_artist_binary3_a: Jeden z czterech binarnych wzorów w przyborniku
          rozwiąże tą zagadkę!
      courseD_bee_conditionals2:
        courseD_bee_conditionals2_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals2_b: Możesz wykorzystać pętlę `repeat` albo `while
          path ahead`, aby przejść przez ten labirynt.
        courseD_bee_conditionals2_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals2_2018:
        courseD_bee_conditionals2_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals2_b: Możesz wykorzystać pętlę `repeat` albo `while
          path ahead`, aby przejść przez ten labirynt.
        courseD_bee_conditionals2_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals3:
        courseD_bee_conditionals3_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals3_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals3_2018:
        courseD_bee_conditionals3_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals3_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals4:
        courseD_bee_conditionals4_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals4_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals4_2018:
        courseD_bee_conditionals4_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals4_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals5:
        courseD_bee_conditionals5_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals5_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals5_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals6:
        courseD_bee_conditionals6_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals6_c: Czy jest pętla, której możesz użyć, aby uprościć
          twój kod?
        courseD_bee_conditionals6_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals6_2018:
        courseD_bee_conditionals6_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals6_c: Czy jest pętla, której możesz użyć, aby uprościć
          twój kod?
        courseD_bee_conditionals6_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals6_2019:
        courseD_bee_conditionals6_c: Czy jest pętla, której możesz użyć, aby uprościć
          twój kod?
      courseD_bee_conditionals7:
        courseD_bee_conditionals7_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals7_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals7_2018:
        courseD_bee_conditionals7_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals7_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals8_a: |-
          \*\* Pamiętaj: \*\*

          Ta plansza jest inna za każdym uruchomieniem.

          Będziesz potrzebował użyć bloku warunkowego ('if' lub ' if/else') do rozwiązania problemu.
        courseD_bee_conditionals8_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_hintVid1: Potrzebujesz pomocy, aby zacząć? Obejrzyj
          film!
        courseD_bee_conditionals8_a: |-
          \*\* Pamiętaj: \*\*

          Ta plansza jest inna za każdym uruchomieniem.

          Będziesz potrzebował użyć bloku warunkowego ('if' lub ' if/else') do rozwiązania problemu.
        courseD_bee_conditionals8_hintVid2: Obejrzyj ten film, aby otrzymać pomoc
          w rozwiązaniu tej zagadki.
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          \*\* Pamiętaj: \*\*

          Ta plansza jest inna za każdym uruchomieniem.

          Będziesz potrzebował użyć bloku warunkowego ('if' lub ' if/else') do rozwiązania problemu.
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Istnieją dwa sposoby, aby rozwiązać ten problem!
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Istnieją dwa sposoby, aby rozwiązać ten problem!
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: 'Połowa sześciokąta ma **długość 30**
          i wymaga obrotu w prawo o **60 stopni**.  '
        courseE_artist_concept_challenge1_b: '2/3 trójkąta ma bok o **długość 30**
          i wymaga obrotu w prawo o **120 stopni**. '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: 'Połowa sześciokąta ma **długość 30**
          i wymaga obrotu w prawo o **60 stopni**.  '
        courseE_artist_concept_challenge1_b: '2/3 trójkąta ma bok o **długość 30**
          i wymaga obrotu w prawo o **120 stopni**. '
      courseE_artist_functions1:
        courseE_artist_functions1_a: Kwadraty mają boki o długości 100 pikseli, czyli
          musisz przesunąć się do przodu o 175 pikseli zanim narysujesz drugi kwadrat.
        courseE_artist_functions1_b: To dobrze rysować nakładające się linie do okularów.
      courseE_artist_functions2:
        courseD_artist_functions2_a: "Twój program powinien:\n\n-   uzyć funkcji,
          \n-   przesunąć się do przodu o 100 + 75 pikseli\n-   ponownie użyć funkcji"
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: "Twój program powinien:\n\n-   uzyć funkcji,
          \n-   przesunąć się do przodu o 100 + 75 pikseli\n-   ponownie użyć funkcji"
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: "Twój program powinien:\n\n-   uzyć funkcji,
          \n-   przesunąć się do przodu o 100 + 75 pikseli\n-   ponownie użyć funkcji"
      courseE_artist_functions8:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_bee_functions6:
        courseE_bee_functions6_a: "Jeśli zadanie wydaje Ci sie za trudne,  spróbuj
          budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj ich działanie.
          Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz cel! \n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions7:
        courseE_bee_functions7_a: "Jeśli zadanie wydaje Ci sie za trudne,  spróbuj
          budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj ich działanie.
          Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz cel!"
        courseE_bee_functions7_b: |-
          Pamiętaj, aby budować kodu wewnątrz zielonego bloku funkcji.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: "Jeśli zadanie wydaje Ci sie za trudne,
          \ spróbuj budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj
          ich działanie. Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz
          cel!"
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: "Jeśli zadanie wydaje Ci sie za trudne,
          \ spróbuj budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj
          ich działanie. Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz
          cel!"
      courseF_artist_for4:
        courseF_artist_for4_a: |-
          **Jaka jest najmniejsza liczba, którą będziesz potrzebował?
          Jak jest największa liczba?
          O jaką wielkość zmienia się ta liczba za każdym razem?**

          Te pytania musisz zadać aby wypełnić puste pola w pętli `for`.
      courseF_artist_for4_2018:
        courseF_artist_for4_a: |-
          **Jaka jest najmniejsza liczba, którą będziesz potrzebował?
          Jak jest największa liczba?
          O jaką wielkość zmienia się ta liczba za każdym razem?**

          Te pytania musisz zadać aby wypełnić puste pola w pętli `for`.
      courseF_artist_for4_2019:
        courseF_artist_for4_a: |-
          **Jaka jest najmniejsza liczba, którą będziesz potrzebował?
          Jak jest największa liczba?
          O jaką wielkość zmienia się ta liczba za każdym razem?**

          Te pytania musisz zadać aby wypełnić puste pola w pętli `for`.
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: "`pen width` wynosi 1. Pierwszy kwadrat ma
          boki o szerokości 50 pikseli, kolejny kwadrat jest o 50 pikseli szerszy
          od poprzedniego."
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: "`pen width` wynosi 1. Pierwszy kwadrat ma
          boki o szerokości 50 pikseli, kolejny kwadrat jest o 50 pikseli szerszy
          od poprzedniego."
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: "`pen width` wynosi 1. Pierwszy kwadrat ma
          boki o szerokości 50 pikseli, kolejny kwadrat jest o 50 pikseli szerszy
          od poprzedniego."
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: "`pętla for` zmienia się od 5 do 250 z krokiem
          równym 2. "
        courseF_artist_for_challenge2_a: Zmiana koloru odbywa się poprzez użycie bloku
          `ustaw kolor z kolorem czerwonym, zielonym, niebieskim`. Czerwony ma stałą
          wartość 255, zielony jest zawsze wartością `licznik`, a niebieski to `255-licznik`.
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: "`pętla for` zmienia się od 5 do 250 z krokiem
          równym 2. "
        courseF_artist_for_challenge2_a: Zmiana koloru odbywa się poprzez użycie bloku
          `ustaw kolor z kolorem czerwonym, zielonym, niebieskim`. Czerwony ma stałą
          wartość 255, zielony jest zawsze wartością `licznik`, a niebieski to `255-licznik`.
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: "`pętla for` zmienia się od 5 do 250 z krokiem
          równym 2. "
        courseF_artist_for_challenge2_a: Zmiana koloru odbywa się poprzez użycie bloku
          `ustaw kolor z kolorem czerwonym, zielonym, niebieskim`. Czerwony ma stałą
          wartość 255, zielony jest zawsze wartością `licznik`, a niebieski to `255-licznik`.
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseF_artist_fwp_challenge1_d: 'Nie zapomnij obrócić się o 22.5 stopni pod
          koniec każdej iteracji. '
        courseF_artist_fwp_challenge1_e: Zarówno kolor każdego ośmiokąta jak i szerokość
          pióra są sterowane przez zmienną 'licznik'.
      courseF_artist_variables4:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: 'Zmienne są pomocne, ponieważ można
          do nich dodawać w każdym kroku pętli. '
        courseF_artist_variables_challenge2_c: Użycie zmiennej dla `boki` oraz dla
          `długość` czyni kod czystszym, ponieważ możesz zapętlać ten sam kod wiele
          razy, zamiast tworzyć nowej kopi dla każdego zestawu liczb.
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: 'Zmienne są pomocne, ponieważ można
          do nich dodawać w każdym kroku pętli. '
        courseF_artist_variables_challenge2_c: Użycie zmiennej dla `boki` oraz dla
          `długość` czyni kod czystszym, ponieważ możesz zapętlać ten sam kod wiele
          razy, zamiast tworzyć nowej kopi dla każdego zestawu liczb.
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: 'Zmienne są pomocne, ponieważ można
          do nich dodawać w każdym kroku pętli. '
        courseF_artist_variables_challenge2_c: Użycie zmiennej dla `boki` oraz dla
          `długość` czyni kod czystszym, ponieważ możesz zapętlać ten sam kod wiele
          razy, zamiast tworzyć nowej kopi dla każdego zestawu liczb.
      courseF_bee_conditionals3:
        courseF_bee_conditionals3_b: Przydatna będzie pętla `repeat`, więc musisz
          użyć tylko jednego bloku `if`.
      courseF_bee_conditionals5:
        courseF_bee_conditionals5_b: Wewnątrz bloku `while there is a path ahead`,
          będziesz musiał iść do przodu i sprawdzić czy jest tam kwiat. Jak sprawdzisz,
          czy jest tam kwiat? Co zrobisz jak kwiat tam będzie?
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          \*\* Pamiętaj: \*\*

          Ta plansza jest inna za każdym uruchomieniem.

          Będziesz potrzebował użyć bloku warunkowego ('if' lub ' if/else') do rozwiązania problemu.
        courseF_bee_conditionals8_c: Co się stanie jak użyjesz bloku `while path ahead`
          i weźmiesz pierwszy kwiat jako ostatni?
      courseF_bee_for10:
        courseF_bee_for10_c: |-
          W zagadce pierwszy zestaw ma **14** kwiatów, drugi zestaw ma **10** kwiatów, trzeci zestaw ma **6** kwiatów a czwarty zestaw ma **2** kwiaty.

          Zauważ, że na obrazku jest **7** czerwonych kwadratów, **5** pomarańczowych kwadratów, **3** zielone kwadraty i **1** niebieski blok.

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          Jak te liczby są ze sobą powiązane?
      courseF_bee_for10_2018:
        courseF_bee_for10_c: |-
          W zagadce pierwszy zestaw ma **14** kwiatów, drugi zestaw ma **10** kwiatów, trzeci zestaw ma **6** kwiatów a czwarty zestaw ma **2** kwiaty.

          Zauważ, że na obrazku jest **7** czerwonych kwadratów, **5** pomarańczowych kwadratów, **3** zielone kwadraty i **1** niebieski blok.

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          Jak te liczby są ze sobą powiązane?
      courseF_bee_for10_2019:
        courseF_bee_for10_c: |-
          W zagadce pierwszy zestaw ma **14** kwiatów, drugi zestaw ma **10** kwiatów, trzeci zestaw ma **6** kwiatów a czwarty zestaw ma **2** kwiaty.

          Zauważ, że na obrazku jest **7** czerwonych kwadratów, **5** pomarańczowych kwadratów, **3** zielone kwadraty i **1** niebieski blok.

          ![](<https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png>)

          Jak te liczby są ze sobą powiązane?
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
        courseF_bee_for_challenge2_b: 'Spróbuj użyć dwóch pętlach "dla": jednej dla
          wznoszenia się by zebrać nektar, a drugiej dla schodzenia i robienia miodu.'
        courseF_bee_for_challenge2_c: Zauważ, że jedna pętla "dla" potrzebuje wewnątrz
          wielu zwykłych pętli, które powtarzaj się 'licznik' razy, aby utworzyć wzór
          wznoszących się schodów. Inna pętla "dla" potrzebuje tylko jednej zwykłej
          pętli, aby zrobić 'licznik' miodu.
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
        courseF_bee_for_challenge2_b: 'Spróbuj użyć dwóch pętlach "dla": jednej dla
          wznoszenia się by zebrać nektar, a drugiej dla schodzenia i robienia miodu.'
        courseF_bee_for_challenge2_c: Zauważ, że jedna pętla "dla" potrzebuje wewnątrz
          wielu zwykłych pętli, które powtarzaj się 'licznik' razy, aby utworzyć wzór
          wznoszących się schodów. Inna pętla "dla" potrzebuje tylko jednej zwykłej
          pętli, aby zrobić 'licznik' miodu.
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: Spójrz na tę opcję dla ruchu:! \[] (<https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png>)
        courseF_bee_for_challenge2_b: 'Spróbuj użyć dwóch pętlach "dla": jednej dla
          wznoszenia się by zebrać nektar, a drugiej dla schodzenia i robienia miodu.'
        courseF_bee_for_challenge2_c: Zauważ, że jedna pętla "dla" potrzebuje wewnątrz
          wielu zwykłych pętli, które powtarzaj się 'licznik' razy, aby utworzyć wzór
          wznoszących się schodów. Inna pętla "dla" potrzebuje tylko jednej zwykłej
          pętli, aby zrobić 'licznik' miodu.
      courseF_bee_functions6:
        courseF_bee_functions6_a: "Jeśli zadanie wydaje Ci sie za trudne,  spróbuj
          budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj ich działanie.
          Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz cel! \n\n![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: "Jeśli zadanie wydaje Ci sie za trudne,  spróbuj
          budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj ich działanie.
          Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz cel!"
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: "Jeśli zadanie wydaje Ci sie za trudne,  spróbuj
          budować funkcje po kawałku.  \n\nDodaj bloki, a następnie wypróbuj ich działanie.
          Dodaj kolejne, a następnie spróbuj ponownie.  Wkrótce osiągniesz cel!"
      courseF_bee_fwp7:
        courseF_bee_fwp7_b: Dodaj instrukcję `if` do swojej funkcji, aby pszczoła
          sprawdzała zarówno plastry i kwiaty.
      courseF_bee_fwp8:
        courseF_bee_fwp8_a: Jak pętla `for` mogłaby pomóc w tej zagadce?
      courseF_bee_fwp_challenge1:
        courseF_bee_fwp_challenge1_b1: |-
          Parametr `length` powinien być wykorzystany do ustawienia maksymalnej wartości w `for loop`.

          Nie zapomnij aby po zbiorach wrócić farmerem na główną ścieżkę!
      courseF_playlab_variables2b:
        courseF_playlab_variables2b_a: Jak myślisz, co powie Kiki, kiedy naciśniesz
          `Run`?
      courseF_playlab_variables5c:
        courseF_playlab_variables5c_b: Przetestuj swój kod! Spróbuj wpisać "czerwony",
          oraz inne kolory, aby zobaczyć co się stanie.
      courseF_playlab_variables_challenge1:
        courseF_playlab_variables_challenge1_a: |-
          Aby aktorzy mogli mówić, potrzebujesz dodatkowych bloków z zestawu komend.
          <xml><block type="studio_saySpriteParamsTime" inline="true">
          <value name="SPRITE">
          <block type="math_number">

          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TEXT">
          <block type="text">
          <title name="TEXT">Knock knock.</title>
          </block>
          </value>
          <value name="TIME">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block></xml>
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_c: |-
          **Rozwiązanie:**
          <xml>
          <block type="studio_whenArrow">

          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      grade5_artist_variables_triangles1:
        grade5_artist_variables_triangles1_a: Musisz pamiętać, że aby utworzyć wewnętrzny
          kąt o 60 stopniach w tym trójkącie artysta musi się obrócić o 120 stopni.
        grade5_artist_variables_triangles1_b: Aby skrócić swój kod użyj pętli 'powtórz'.
        grade5_artist_variables_triangles1_c: Wewnątrz pętli musisz pójść do przodu
          50 pikseli, a następnie skręcić w lewo o 120 stopni.
      grade5_artist_variables_triangles1_2018:
        grade5_artist_variables_triangles1_a: Musisz pamiętać, że aby utworzyć wewnętrzny
          kąt o 60 stopniach w tym trójkącie artysta musi się obrócić o 120 stopni.
        grade5_artist_variables_triangles1_b: Aby skrócić swój kod użyj pętli 'powtórz'.
        grade5_artist_variables_triangles1_c: Wewnątrz pętli musisz pójść do przodu
          50 pikseli, a następnie skręcić w lewo o 120 stopni.
      grade5_artist_variables_triangles1_2019:
        grade5_artist_variables_triangles1_a: Musisz pamiętać, że aby utworzyć wewnętrzny
          kąt o 60 stopniach w tym trójkącie artysta musi się obrócić o 120 stopni.
        grade5_artist_variables_triangles1_b: Aby skrócić swój kod użyj pętli 'powtórz'.
        grade5_artist_variables_triangles1_c: Wewnątrz pętli musisz pójść do przodu
          50 pikseli, a następnie skręcić w lewo o 120 stopni.
      iceage_hello1:
        iceage_hello1_a: Aby rozwiązać to zadanie musisz dodać tylko jeden blok. Przeciągnij
          blok 'postać mówi' do obszaru roboczego i połącz go z blokiem 'po uruchomieniu',
          który już się tam znajduje. Następnie wpisz "Cześć!" w dołączonym bloku.
