"ka":
  data:
    script:
      name:
        course1:
          title: კურსი 1
          description: კურსი 1 ადრეული მკითხველებისთვისაა. მოსწავლეები შექმნიან კომპიუტერულ
            პროგრამებს, რომლებიც მათ ჯგუფურ მუშაობას შეაჩვევთ, განუვითარებთ ამოცანების
            ამოხსნისა და რთულ დავალებებზე მუშაობის უნარებს. კურსის ბოლოს მოსწავლეები
            შექმნიან თავიანთ თამაშსა ან ისტორიას, რომლის ხვებისთვის გაზიარება შეეძლებათ.
            რეკოენდებულია K-1 კლასებისთვის.
          description_short: შესავალი კომპიუტერულ მეცნიერებაში დამწყებ მკითხველთათვის.
          description_audience: ასაკი 4-დან 6-მდე
          stages:
            'Artist: Loops':
              name: 'მხატვარი: ციკლები'
            'Artist: Sequence':
              name: 'მხატვარი: თანმიმდევრობა'
            'Artist: Shapes':
              name: 'მხატვარი: ფორმები'
            'Bee: Loops':
              name: 'ფუტკარი: ციკლები'
            'Bee: Sequence':
              name: 'ფუტკარი: თანმიმდევრობა'
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Getting Loopy:
              name: ჩაციკლვა
            Going Places Safely:
              name: უსაფრთხო მგზავრობა
            Happy Maps:
              name: ბედნიერი რუკები
            'Jigsaw: Learn to drag and drop':
              name: 'ფაზლი: ისწავლეთ გადმოტანა და ჩასმა'
            'Maze: Debugging':
              name: 'ლაბირინთი: ბაგების გამოსწორება'
            'Maze: Loops':
              name: 'ლაბირინთი: ციკლები'
            'Maze: Sequence':
              name: 'ლაბირინთი: თანმიმდევრობა'
            Move it, Move it:
              name: ვისწავლოთ გადაადგილება
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
            Spelling Bee:
              name: შეჯიბრი დამარცვლაში
            'Studio: Create a Story':
              name: 'თამაშების ლაბორატორია: ისტორიის შექმნა'
            The Big Event:
              name: დიდი მოვლენა
        course2:
          title: კურსი 2
          description: კურსი 2 შექმნილია მოსწავლეებისთვის, რომელთაც შეუძლიათ კითხვა
            და არ აქვთ გამოცდილება პროგრამირებაში. ამ კურსში მოსწავლეები შექმნიან
            ამოცანების ამომხსნელ პროგრამებს და განავითარებენ ინტერაქტიულ თამაშებს
            ან ისტორიებს, რომელთა გაზიარება შეეძლებათ. რეკომენდებულია 2-5 კლასებისთვის.
          description_short: შესავალი კომპიუტერულ მეცნიერებებში მოსწავლეებისთვის,
            რომელთაც უკვე შეუძლიათ კითხვა.
          description_audience: 'ასაკი: 6+ (უნდა შეეძლოს კითხვა)'
          stages:
            'Artist: Debugging':
              name: 'მხატვარი: ბაგების გამოსწორება'
            'Artist: Loops':
              name: 'მხატვარი: ციკლები'
            'Artist: Nested Loops':
              name: 'მხატვარი: ჩასმული ციკლები'
            'Artist: Sequence':
              name: 'მხატვარი: თანმიმდევრობა'
            'Bee: Conditionals':
              name: 'ფუტკარი: პირობითი ბრძანებები'
            'Bee: Debugging':
              name: 'ფუტკარი: ბაგების გამოსწორება'
            'Bee: Loops':
              name: 'ფუტკარი: ციკლები'
            Binary Bracelets:
              name: ორობითი სამაჯურები
            Conditionals:
              name: პირობითი ბრძანებები
            Flappy:
              name: Flappy
            Getting Loopy:
              name: ჩაციკლვა
            Graph Paper Programming:
              name: გრაფიკული პროგრამირება
            'Maze: Loops':
              name: 'ლაბირინთი: ციკლები'
            'Maze: Sequence':
              name: 'ლაბირინთი: თანმიმდევრობა'
            'Real-life Algorithms: Paper Planes':
              name: 'ცხოვრებისეული ალგორითმები: ქაღალდის თვითმფრინავები'
            Relay programming:
              name: ესტაფეტური პროგრამირება
            'Studio: Create a Story':
              name: 'თამაშების ლაბორატორია: ისტორიის შექმნა'
            The Big Event:
              name: დიდი მოვლენა
            Your Digital Footprint:
              name: თქვენი ციფრული ნაკვალევი
        course3:
          title: კურსი 3
          description: კურსი 3 შექმნილია მოსწავლეებისთვის, რომელთაც გაიარეს კურსი
            2. მოსწავლეები უფრო ღრმად გაერკვევიან წინა კურსებში წამოჭრილ პროგრამირების
            საკითხებში და მოძებნიან მოქნილ ამოხსნებს უფრო რთული ამოცანებისთვის. კურსის
            ბოლოს მოსწავლეები ქმნიან ინტერაქტიულ ისტორიებს და თამაშებს, რომელთა გაზიარება
            ნებისმიერთან შეუძლიათ. რეკომენდებულია 4-5 კლასებისთვის.
          description_short: შეისწავლეთ პროგრამირება უფრო სიღრმისეულად, კომპიუტერული
            თამაშების შექმნისა და ინტერაქტიული სწავლების მეშვეობით. ეს არის მე-2 კურსის
            გაგრძელება.
          description_audience: 'ასაკი: 8-18'
          stages:
            Artist:
              name: მხატვარი
            'Artist: Functions':
              name: 'მხატვარი: ფუნქციები'
            'Artist: Nested Loops':
              name: 'მხატვარი: ჩასმული ციკლები'
            'Artist: Patterns':
              name: 'მხატვარი: ნიმუშები'
            'Bee: Conditionals':
              name: 'ფუტკარი: პირობითი ბრძანებები'
            'Bee: Debugging':
              name: 'ფუტკარი: ბაგების გამოსწორება'
            'Bee: Functions':
              name: 'ფუტკარი: ფუნქციები'
            'Bee: Nested Loops':
              name: 'ფუტკარი: ჩასმული ციკლები'
            Bounce:
              name: Bounce
            Computational Thinking:
              name: გამოთვლითი აზროვნება
            Crowdsourcing:
              name: ქრაუდსორსინგი
            Dice Race:
              name: კამათლების შეჯიბრი
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            'Farmer: While Loops':
              name: ფერმერი - "სანამ" ციკლები
            Functional Suncatchers:
              name: ფუნქციური ვიტრაჟები
            Internet:
              name: ინტერნეტი
            Maze:
              name: ლაბირინთი
            'Maze: Conditionals':
              name: 'ლაბირინთი: პირობითი ბრძანებები'
            Songwriting:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            'Studio: Create a Game':
              name: 'თამაშების ლაბორატორია: შექმენით თამაში'
            'Studio: Create a Story':
              name: 'თამაშების ლაბორატორია: ისტორიის შექმნა'
        playlab:
          title: თამაშების ლაბი
          description: შექმენით ისტორია ან თამაში თამაშების ლაბორატორიის მეშვეობით!
          description_short: შექმენით ისტორია ან თამაში თამაშების ლაბორატორიის მეშვეობით!
          stages:
            Play Lab:
              name: თამაშების ლაბი
        artist:
          title: მხატვარი
          description: დახატეთ მაგარი სურათები და შექმენით დიზაინები მხატვართან ერთად!
          description_short: დახატეთ მაგარი სურათები და შექმენით დიზაინები მხატვართან
            ერთად!
          stages:
            Artist:
              name: მხატვარი
        hourofcode:
          title: ლაბირინთი
          description: სცადეთ კომპიუტერული მეცნიერების საფუძვლები Angry Birds-ის და
            Plants vs. Zombies-ის პერსონაჟებსა და Ice Age-ის Scrat-თან ერთად!
          description_short: სცადეთ კომპიუტერული მეცნიერების საფუძვლები მრავალ სახალისო
            პერსონაჟთან ერთად!
          stages:
            Maze:
              name: ლაბირინთი
          description_audience: ''
        frozen:
          title: წერეთ კოდი ანასა და ელზასთან ერთად
          description: გამოვიყენოთ კოდი, რათა შევუერთდეთ ანასა და ელზას, რომლებიც
            მაგიისა და ყინულის მშვენიერებას იკვლევენ. თქვენ შექმნით ფიფქებსა და ფიგურებს,
            ისრიალებთ ციგურებზე და შექმნით ზამთრის საოცნებო სამყაროს, რომლის მეგობრებთან
            გაზიარება შეგეძლებათ!
          description_short: გამოიყენეთ კოდი და შეუერთდით ანასა და ელზას ყინულის მაგიის
            აღმოჩენაში.
          stages:
            Artist:
              name: მხატვარი
        course4:
          title: კურსი 4
          description: კურსი 4 შექმნილია იმათთვის, ვინც უკვე გაიარა კურსები 2 და 3.
            მოსწავლეები გაიგებენ, როგორ გაუმკლავდნენ უფრო რთულ თავსატეხებს და ისწავლიან
            ამოცანის ამოსახსნელად რამდენიმე სხვადასხვა ცნების გამოყენებას. ამ კურსის
            დასასრულს მოსწავლეები შექმნიან პროგრამებს, რომლებიც მათ სხვადასხვა უნარებს
            გამოაჩენენ, მათ შორის ციკლებისა და პარამეტრებიანი ფუნქციების შექმნას.
            რეკომენდირებულია მეოთხე-მერვე კლასებისთვის.
          description_short: შექმენით უფრო რთული პროგრამები ისეთი იდეების გამოყენებით,
            როგორიცაა, მაგალითად, ციკლები და ფუნქციები, თავისი პარამეტრებით. ეს არის
            მე-3 კურსის გაგრძელება.
          description_audience: 'ასაკი: 10-18'
          stages:
            Artist:
              name: მხატვარი
            Artist Binary:
              name: 'მხატვარი: ორობითი'
            'Artist: For Loops':
              name: 'მხატვარი: "მიზნისთვის" ციკლები'
            'Artist: Functions':
              name: 'მხატვარი: ფუნქციები'
            'Artist: Functions with Parameters':
              name: 'მხატვარი: ფუნქციები პარამეტრებით'
            'Artist: Variables':
              name: 'მხატვარი: ცვლადები'
            'Bee: For Loops':
              name: 'ფუტკარი: "მიზნისთვის" ციკლები'
            'Bee: Functions with Parameters':
              name: 'ფუტკარი: ფუნქციები პარამეტრებით'
            Extreme Challenge - Comprehensive:
              name: განსაკუთრებული დავალება - ამომწურავი
            Maze and Bee:
              name: ლაბირინთი და ფუტკარი
            'Play Lab: For Loops':
              name: 'თამაშების ლაბორატორია: "მიზნისთვის" ციკლები'
            'Play Lab: Functions with Parameters':
              name: 'თამაშების ლაბორატორია: ფუნქციები პარამეტრებით'
            'Play Lab: Variables':
              name: 'თამაშების ლაბორატორია: ცვლადები'
            Super Challenge - For Loops:
              name: სუპერ-დავალება - For ციკლები
            Super Challenge - Functions and Parameters:
              name: სუპერ-დავალება - ფუნქციები და პარამეტრები
            Super Challenge - Variables:
              name: სუპერ-დავალება - ცვლადები
            'Unplugged: Binary':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ორობითი სისტემა'
            'Unplugged: Envelope Variables':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ცვლადები კონვერტებში'
            'Unplugged: For Loop Fun':
              name: 'გაკვეთილი კომპიუტერის გარეშე: "მიზნისთვის" ციკლები სახალისოდ'
            'Unplugged: Madlibs':
              name: 'გაკვეთილი კომპიუტერის გარეშე: Madlibs'
            'Unplugged: Songwriting with Parameters':
              name: 'გაკვეთილი კომპიუტერის გარეშე: სიმღერის წერა პარამეტრებით'
            'Unplugged: Tangrams':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ტანგრამები'
        Course4pre:
          title: კურსი 4-ის პრერეკვიზიტი
          description: მცირე შეჯამება მოსწავლეებისთვის, რომლებსაც არ გაუვლიათ კურსები
            2 და 3.
          description_short: მცირე შეჯამება მოსწავლეებისთვის, რომლებსაც არ გაუვლიათ
            კურსები 2 და 3.
          description_audience: ''
          stages:
            'Artist: Functions':
              name: 'მხატვარი: ფუნქციები'
            'Artist: Loops':
              name: 'მხატვარი: ციკლები'
            'Artist: Nested Loops':
              name: 'მხატვარი: ჩასმული ციკლები'
            'Artist: Sequence':
              name: 'მხატვარი: თანმიმდევრობა'
            'Bee: Conditionals':
              name: 'ფუტკარი: პირობითი ბრძანებები'
            'Bee: Debugging':
              name: 'ფუტკარი: ბაგების გამოსწორება'
            'Bee: Nested Loops':
              name: 'ფუტკარი: ჩასმული ციკლები'
            'Farmer: While Loops':
              name: ფერმერი - "სანამ" ციკლები
            'Maze: Sequence':
              name: 'ლაბირინთი: თანმიმდევრობა'
        usability:
          title: Usability Testing
          description: A selection of Course 4 levels for usability testing.
          description_short: ''
          description_audience: ''
          stages:
            Binary:
              name: ორობითი
            For Loops:
              name: '"მიზნისთვის" ციკლები'
            Functions and Functions with Parameters:
              name: ფუნქციები და ფუნქციები პარამეტრებით
            Intro:
              name: შესავალი
            Variables:
              name: ცვლადები
        algebra:
          title: Computer Science in Algebra
          description: Learn Functional Programming through Algebra.
          description_short: Learn Functional Programming through Algebra.
          description_audience: ''
          stages:
            'Calc: Defining Variables':
              name: განსაზღვრეთ ცვლადები და ჩამნაცვლებლები
            'Calc: Evaluation Blocks':
              name: შეფასების არეები და არითმეტიკური გამოსახულებები
            'Eval: Boolean Operators':
              name: ლოგიკური ოპერატორები
            'Eval: Conditionals':
              name: პირობითი ბრძანებები
            'Eval: Defining Functions':
              name: შედგენილი ფუნქციები
            'Eval: Functions':
              name: მსოფლიოს პრობლემების გადაჭრა "დიზაინის გეგმის" გამოყენებით
            'Eval: Strings and Images':
              name: ხაზები და სურათები
            'Eval: Writing Contracts':
              name: კონტრაქტების წერა
            'Play Lab: Animation (Big Game)':
              name: დიდი თამაში – ანიმაცია
            'Play Lab: Boolean (Big Game)':
              name: '"დიდი თამაში" - ლოგიკური ოპერატორები'
            'Play Lab: Booleans':
              name: ღამურა სემი
            'Play Lab: Collision Detection (Big Game)':
              name: დიდი თამაში – შეჯახების აღმოჩენა
            'Play Lab: Defining Functions':
              name: რაკეტის სიმაღლე
            'Play Lab: Defining Variables (Big Game)':
              name: დიდი თამაში – ცვლადები
            'Unplugged: Booleans':
              name: 'Unplugged: Booleans and Logic'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'Unplugged: Collision Detection and the Pythagorean Theorem'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'გაკვეთილი კომპიუტერის გარეშე: პირობითი ბრძანებები და ნაწილობითი
                ფუნქციები'
            'Unplugged: Contracts':
              name: 'Unplugged: Contracts, Domain, and Range'
            'Unplugged: The Design Recipe':
              name: 'გაკვეთილი კომპიუტერის გარეშე: დიზაინის რეცეპტი'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ვიდეოთამაშები და საკოორდინატო სიბრტყეები'
        infinity:
          title: დისნეის თამაშების ლაბორატორია Infinity
          description: გამოიყენეთ თამაშების ლაბორატორია ისტორიის შესაქმნელად დისნეის
            Infinity-ს პერსონაჟების მონაწილეობით.
          description_short: გამოიყენეთ თამაშების ლაბორატორია ისტორიის შესაქმნელად
            დისნეის Infinity-ს პერსონაჟების მონაწილეობით.
          stages:
            Infinity:
              name: უსასრულობა
        algebrademo:
          title: Algebra Demo
          description: A handful of puzzles to demonstrate the environment and programming
            language used in Code.org CS in Algebra
          description_short: A handful of puzzles to demonstrate the environment and
            programming language used in Code.org CS in Algebra
          stages:
            Defining Simple Functions:
              name: მარტივი ფუნქციების განსაზღვრა
            Defining Variables:
              name: ცვლადების განსაზღვრა
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Making Pictures:
              name: სურათების გაკეთება
            The Design Recipe:
              name: დიზაინის რეცეპტი
        K5PD:
          title: K5 Professional Development
          description: Professional Development for K5 Courses
          description_short: Professional Development for K5 Courses
          description_audience: ''
          stages:
            Computer Science Pedagogy:
              name: კომპიუტერული მეცნიერების პედაგოგიკა
            Introduction to PD:
              name: შესავალი PD-ში
            K-5 Courses:
              name: K-5 კურსები
            Next Steps:
              name: მომდევნო ნაბიჯები
            'Programming Concept: Conditionals':
              name: 'პროგრამირების კონცეფციები: პირობები'
            'Programming Concept: Events':
              name: 'პროგრამირების კონცეფციები: მოვლენები'
            'Programming Concept: Functions':
              name: 'პროგრამირების კონცეფციები: ფუნქციები'
            'Programming Concept: Loops':
              name: 'Programming Concept: Loops'
            Reflection:
              name: არეკვლა
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Unplugged lessons:
              name: Unplugged lessons
            Writing computer programs:
              name: კომპიუტერული პროგრამების წერა
        netsim:
          title: ინტერნეტ-სიმულატორი
          description: Learn about how the Internet works.
          description_short: Learn about how the Internet works.
          description_audience: ''
          stages:
            Automatic DNS node:
              name: Automatic DNS node
            Broadcasting messages:
              name: Broadcasting messages
            Internet Simulator Freeplay:
              name: Internet Simulator Freeplay
            Manual DNS:
              name: Manual DNS
            Overview and Setup Instructions:
              name: Overview and Setup Instructions
            Packets and Reliability:
              name: Packets and Reliability
            Peer to Peer - Sending Ascii:
              name: Peer to Peer - Sending Ascii
            Peer to Peer - Sending Bits on a Shared Wire:
              name: Peer to Peer - Sending Bits on a Shared Wire
            Peer to Peer - Sending Numbers:
              name: Peer to Peer - Sending Numbers
            Routers and addresses:
              name: Routers and addresses
        pixelation:
          title: Pixelation
          description: Create images with bits and bytes.
          description_short: Create images with bits and bytes.
          description_audience: ''
          stages:
            Black & White Pixelation Freeplay:
              name: Black & White Pixelation Freeplay
            Black & White Pixelation Tutorial:
              name: Black & White Pixelation Tutorial
            Color Pixelation Examples:
              name: Color Pixelation Examples
            Color Pixelation Freeplay:
              name: Color Pixelation Freeplay
            Color Pixelation Tutorial:
              name: Color Pixelation Tutorial
        20-hour:
          title: დაჩქარებული შესავალი CS კურსში
          description: ეს ოცსაათიანი კურსი შეიცავს კომპიუტერული მეცნიერებისა და პროგრამირების
            ძირითად ნაწილებს კურსებიდან 2-4. კურსი შექმნილია 10-18 წლის მოსწავლეებისთვის.
            სრული გამოცდილების მისაღებად გაეცანით კურსებს 2-4!
          description_short: ეს ოცსაათიანი კურსი ფარავს კომპიუტერული მეცნიერების და
            პროგრამირების ძირითად ნაწილებს კურსებიდან 2-4.
          description_audience: 'ასაკი: 10-18'
          stages:
            Abstraction:
              name: აბსტრაქცია
            Algorithms:
              name: ალგორითმები
            Computational Thinking:
              name: გამოთვლითი აზროვნება
            Conditionals:
              name: პირობითი ბრძანებები
            Functions:
              name: ფუნქციები
            Graph Paper Programming:
              name: გრაფიკული პროგრამირება
            Introduction to Computer Science:
              name: ინფორმატიკის შესავალი
            Relay Programming:
              name: ესტაფეტური პროგრამირება
            Song Writing:
              name: სიმღერის დაწერა
            The Artist:
              name: მხატვარი
            The Artist 2:
              name: მხატვარი 2
            The Artist 3:
              name: მხატვარი 3
            The Artist 4:
              name: მხატვარი 4
            The Artist 5:
              name: მხატვარი 5
            The Farmer:
              name: ფერმერი
            The Farmer 2:
              name: ფერმერი 2
            The Farmer 3:
              name: ფერმერი 3
            The Internet:
              name: ინტერნეტი
            The Maze:
              name: ლაბირინთი
            Wrap-up:
              name: შედეგები
        edit-code:
          title: კოდის რედაქტირება
          description: კოდის რედაქტირება
          description_short: კოდის რედაქტირება
          description_audience: ''
          stages:
            Applab:
              name: აპლიკაციების ლაბორატორია
            Hoc2015 Blockly:
              name: Hoc2015 Blockly
            Play Lab:
              name: თამაშების ლაბი
            The Artist:
              name: მხატვარი
            The Maze:
              name: ლაბირინთი
        events:
          title: მოვლენები
          description: მოვლენები
          description_short: მოვლენები
          description_audience: ''
          stages:
            Bounce:
              name: Bounce
            Calc:
              name: კალკულატორი
            Eval:
              name: შეფასება
            Studio:
              name: სტუდია
        flappy:
          title: Flappy კოდი
          description: გინდათ, თქვენი საკუთარი თამაში დაწეროთ 10 წუთში? ნახეთ ჩვენი
            ტუტორიალი "Flappy კოდი"!
          description_short: დაწერე შენი Flappy თამაში!
          description_audience: ''
          stages:
            Flappy Code:
              name: Flappy კოდი
        jigsaw:
          title: ფაზლი
          description: სცადე ჩვენი პაზლის ტუტორიალი.
          description_short: სცადე ჩვენი პაზლის ტუტორიალი.
          description_audience: ''
          stages:
            Jigsaw:
              name: ფაზლი
        step:
          title: ნაბიჯი
          description: ნაბიჯ–ნაბიჯ ახსნა
          description_short: ნაბიჯ–ნაბიჯ ახსნა
          description_audience: ''
          stages:
            Step:
              name: ნაბიჯი
        Hour of Code:
          title: კოდის ერთი საათი 2013
          description: გაიარეთ კომპიუტერული მეცნიერების საფუძვლები Angry Birds-ისა
            და Plants vs Zombies-ის პერსონაჟებთან ერთად!
          description_short: სცადეთ კომპიუტერული მეცნიერების საფუძვლები მრავალ სახალისო
            პერსონაჟთან ერთად!
          description_audience: ''
          stages:
            Hour of Code 2013:
              name: კოდის ერთი საათი 2013
        CodeStudioPuzzleChallenge:
          title: Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          stages:
            Puzzles:
              name: თავსატეხები
        Tutorial Video - Code Studio Puzzle Challenge:
          title: Tutorial - Code Studio Puzzle Challenge
          description: Try out these fun coding puzzles. Do your best!
          description_short: Challenge yourself!
          description_audience: ''
          stages:
            Puzzles:
              name: თავსატეხები
        cspunit1:
          title: CSP Unit 1
          description: This unit explores the technical challenges and questions that
            arise from the need to represent digital information in computers and
            transfer it between people and computational devices. This unit is a pilot
            version and is no longer supported or updated. You can find the new units
            at code.org/educate/csp.
          description_short: Make Black and White Images with the pixelation tool
          stages:
            Binary Numbers:
              name: ორობითი რიცხვები
            Bytes and File Sizes:
              name: ბაიტები და ფაილის ზომები
            Encode a Complex Thing:
              name: დააკოდირე შთაბეჭდილება
            Encoding B&W Images:
              name: შავთეთრი სურათების კოდირება
            Encoding Color Images:
              name: ფერადი სურათების კოდირება
            Encoding Numbers in the Real World:
              name: Encoding Numbers in the Real World
            Encoding and Sending Text:
              name: Encoding and Sending Text
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Number Systems:
              name: Number Systems
            Personal Innovations:
              name: პირადი ინოვაციები
            Sending Binary Messages:
              name: ორობითი წერილების გაგზავნა
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Bits in the Real World:
              name: ბიტების გაგზავნა რეალურ ცხოვრებაში
            Sending Complex Messages:
              name: რთული წერილების გაგზავნა
            Sending Formatted Text:
              name: დაფორმატებული ტექსტის გაგზავნა
            Sending Numbers:
              name: რიცხვების გაგზავნა
            Text Compression:
              name: Text Compression
          description_audience: ''
        algebraPD:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Why Computer Science belongs in Algebra:
              name: რატო მიეკუთვნება კომპიუტერული მეცნიერება ალგებრას
        algPDmiami:
          title: Computer Science in Algebra PD
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          stages:
            Booleans:
              name: ბულის ტიპის მონაცემები (ლოგიკური ოპერატორები)
            Design Recipe Practice:
              name: Design Recipe Practice
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Luigi's Pizza:
              name: ლუიჯის პიცა
            Rocket-Height:
              name: რაკეტის სიმაღლე
            Sam the Bat:
              name: ღამურა სემი
            Strings and Images:
              name: ხაზები და სურათები
            Your Game - Animation:
              name: თქვენი თამაში - ანიმაცია
            Your Game - Booleans:
              name: თქვენი თამაში - ბულის ოპერატორები
            Your Game - Collision Detection:
              name: თქვენი თამაში – შეჯახების აღმოჩენა
            Your Game - Player Movement:
              name: თქვენი თამაში - მოთამაშის მოძრაობა
        text-compression:
          title: Text Compression
          description: Compress text by identifying repeated patterns.
          description_short: Compress text by identifying repeated patterns.
          description_audience: ''
          stages:
            Text Compression:
              name: Text Compression
        CSPPD:
          title: Computer Science Principles PD
          description: 'Phase 1: Online Introduction for CSP'
          description_short: 'Phase 1: Online Introduction for CSP'
          stages:
            Exploring CSP Instructional Materials:
              name: Exploring CSP Instructional Materials
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: კომპიუტერული მეცნიერების გავლენა
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: სწავლების მეთოდები
            What is CSP?:
              name: რა არის CSP?
        CSPLessonSamples:
          title: CSP Lesson Samples
          description: Lesson samples for csp
          description_short: lesson samples for csp
          description_audience: ''
          stages:
            Lesson 14:
              name: გაკვეთილი 14
            Lesson 15:
              name: გაკვეთილი 15
        ECSPD:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          stages:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: კომპიუტერული მეცნიერების გავლენა
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: სწავლების მეთოდები
            What is ECS?:
              name: რა არის ECS?
        sciencePD:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: შესავალი რთულ ადაპტირებად სისტემებში
            Introduction to Computational Science:
              name: შესავალი გამოთვლით მეცნიერებაში
            Introduction to PD:
              name: შესავალი PD-ში
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: გაკვეთილი
            Using Computer Models in Science:
              name: კომპიუტერული მოდელების გამოყენება მეცნიერებაში
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: რას უნდა ველოდოთ
        rbo-reference:
          title: rbo-reference
          description: rbo-reference
          description_short: rbo-reference
          description_audience: ''
          stages:
            reference:
              name: მინიშნება
        Test Wednesday:
          title: Test Wednesday
          description: Test Wednesday
          description_short: Test Wednesay
          stages:
            PDK5 Intro:
              name: PDK5 შესავალი
        cspunit3:
          title: CSP Unit 3 - Programming
          description: Programming in Javascript and AppLap
          description_short: Programming
          description_audience: ''
          stages:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: მეხსიერების გაკონტროლება ცვლადებით
            Creating Functions:
              name: ფუნქციების შექმნა
            Creating functions with Parameters:
              name: Creating Functions with Parameters
            Digital Assistant Project:
              name: ციფრული ასისტენტის პროექტი
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: შესავალი დიზაინის რეჟიმში
            Introduction to Arrays:
              name: შესავალი მასივებში
            Introduction to Conditional Logic:
              name: შესავალი პირობით ლოგიკაში
            Introduction to Digital Assistants:
              name: შესავალი ციფრულ ასისტენტებში
            Looping and Random Numbers:
              name: ციკლები და შემთხვევითი რიცხვები
            Loops and Simulations:
              name: ციკლები და სიმულაციები
            Multi-screen Apps:
              name: მრავალეკრანიანი აპლიკაციები
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: მასივების დამუშავება
            The Need For Programming Languages:
              name: პროგრამირების ენების საჭიროება
            Understanding Program Flow and Logic:
              name: პროგრამის მიმდინარეობის და ლოგიკის გაგება
            User Input and Strings:
              name: მომხმარებლის მიერ შეყვანილი ინფორმაცია და რიგები
            Using Simple Commands:
              name: მარტივი ბრძანებების გამოყენება
            Using Variables in Apps:
              name: აპლიკაციებში ცვლადების გამოყენება
            While Loops:
              name: '"სანამ" ციკლები'
        algebraPD3:
          title: Phase 3 PD
          description: Teach Algebra through block-based Functional Programming
          description_short: Teach Algebra through block-based Functional Programming
          description_audience: ''
          stages:
            Computer Science Pedagogy:
              name: კომპიუტერული მეცნიერების პედაგოგიკა
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Next Steps:
              name: მომდევნო ნაბიჯები
            Strings and Images:
              name: ხაზები და სურათები
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            The Big Game:
              name: დიდი თამაში
            The Design Recipe:
              name: დიზაინის რეცეპტი
        ECSPD-NexTech:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          stages:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: კომპიუტერული მეცნიერების გავლენა
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: სწავლების მეთოდები
            What is ECS?:
              name: რა არის ECS?
        ECSPD-iZone:
          title: Exploring Computer Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          stages:
            Growth Mindset:
              name: Growth Mindset
            Impact of Computer Science:
              name: კომპიუტერული მეცნიერების გავლენა
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teaching Strategies:
              name: სწავლების მეთოდები
            What is ECS?:
              name: რა არის ECS?
        algebraPD-NexTech:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Why Computer Science belongs in Algebra:
              name: რატო მიეკუთვნება კომპიუტერული მეცნიერება ალგებრას
        algebraPD-iZone:
          title: Computer Science in Algebra PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Why Computer Science belongs in Algebra:
              name: რატო მიეკუთვნება კომპიუტერული მეცნიერება ალგებრას
        sciencePD-NexTech:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: nextech_logo.png
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: შესავალი რთულ ადაპტირებად სისტემებში
            Introduction to Computational Science:
              name: შესავალი გამოთვლით მეცნიერებაში
            Introduction to PD:
              name: შესავალი PD-ში
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: გაკვეთილი
            Using Computer Models in Science:
              name: კომპიუტერული მოდელების გამოყენება მეცნიერებაში
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: რას უნდა ველოდოთ
        sciencePD-iZone:
          title: Computer Science in Science PD
          description: 'Phase 1: Online Introduction'
          description_short: 'Phase 1: Online Introduction'
          logo_image: izone_logo.png
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: შესავალი რთულ ადაპტირებად სისტემებში
            Introduction to Computational Science:
              name: შესავალი გამოთვლით მეცნიერებაში
            Introduction to PD:
              name: შესავალი PD-ში
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: გაკვეთილი
            Using Computer Models in Science:
              name: კომპიუტერული მოდელების გამოყენება მეცნიერებაში
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: რას უნდა ველოდოთ
        sciencePD2:
          title: Computer Science in Science PD
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          stages:
            Creating Breeds in Starlogo Nova:
              name: Creating Breeds in Starlogo Nova
            Epidemic Model Extensions:
              name: Epidemic Model Extensions
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Revisiting Agent Movement:
              name: Revisiting Agent Movement
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-Up:
              name: შეჯამება
        sciencePD3:
          title: Computer Science in Science PD
          description: Phase 3 Professional Development
          description_short: Phase 3 Professional Development
          stages:
            Decode and Share:
              name: Decode and Share
            Mystery Model:
              name: საიდუმლო მოდელი
            Welcome Back!:
              name: კეთილი იყოს თქვენი დაბრუნება!
        Testing:
          title: გატესტვა
          description: გატესტვა
          description_short: გატესტვა
          stages:
            Testing:
              name: გატესტვა
          description_audience: ''
        cspunit2:
          title: CSP Unit 2 - The Internet
          description: In this unit, students extend their understanding of the internet
            and how it functions by building off the concepts learned when sending
            bits in Unit 1. This unit is a pilot version and is no longer supported
            or updated. You can find the new units at code.org/educate/csp.
          description_short: ინტერნეტი
          stages:
            Algorithms Detour - Hard Problems TSP:
              name: რთული პრობლემები - მოგზაური ვაჭრის პრობლემა
            Algorithms Detour - How Routers Learn:
              name: როგორ სწავლობენ როუტერები
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Alice and Bob and Asymmetric Keys:
              name: Asymmetric Keys - Cups and Beans
            Cracking the Code:
              name: კოდის გატეხვა
            DNS in the Real World:
              name: DNS in the Real World
            Encryption Algorithms:
              name: Keys and Passwords
            HTTP and Abstraction:
              name: HTTP და აბსტრაქცია ინტერნეტში
            Invent an Addressing Protocol:
              name: Invent an Addressing Protocol
            One Way Functions - Ice Cream Vans:
              name: One-Way Functions - The WiFi Hotspot Problem
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Public Key Crypto:
              name: Public Key Cryptography
            Routers and Redundancy:
              name: Routers and Redundancy
            Tell Me a Secret - Encrypting Text:
              name: ენკრიფციის საჭიროება
            The Internet:
              name: ინტერნეტი ყველასთვისაა
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
          description_audience: ''
        algebraPD2a:
          title: Computer Science in Algebra PD
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_audience: ''
          stages:
            Big Game - Animation:
              name: დიდი თამაში – ანიმაცია
            Big Game - Booleans:
              name: დიდი თამაში - ბულის ოპერატორები
            Big Game - Collision Detection:
              name: დიდი თამაში – შეჯახების აღმოჩენა
            Big Game - Player Movement:
              name: თქვენი თამაში - მოთამაშის მოძრაობა
            Big Game - Variables:
              name: დიდი თამაში – ცვლადები
            Booleans:
              name: ბულის ტიპის მონაცემები (ლოგიკური ოპერატორები)
            Defining Variables:
              name: ცვლადების განსაზღვრა
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Free Play:
              name: თავისუფალი თამაში
            Luigi's Pizza:
              name: ლუიჯის პიცა
            Rocket-Height:
              name: რაკეტის სიმაღლე
            Sam the Bat:
              name: ღამურა სემი
            Strings and Images:
              name: ხაზები და სურათები
            The Design Recipe:
              name: დიზაინის რეცეპტი
        allthethings:
          title: All the Things!
          description: All the level types for UI testing
          description_short: All the level types for UI testing
          description_audience: ''
          stages:
            Anonymous student survey:
              name: მოსწავლეთა ანონიმური გამოკითხვა
            Anonymous student survey 2:
              name: მოსწავლეთა ანონიმური გამოკითხვა 2
            AppLab:
              name: აპლიკაციების ლაბორატორია
            Artist:
              name: მხატვარი
            Bee:
              name: ფუტკარი
            Bounce:
              name: Bounce
            CSinA:
              name: CSinA
            Farmer:
              name: ფერმერი
            Flappy:
              name: Flappy
            Free Response:
              name: თავისუფალი გამოხმაურება
            Gamelab:
              name: თამაშების ლაბორატორია
            Jigsaw:
              name: ფაზლი
            Long assessment:
              name: Long assessment
            Markdown Details:
              name: Markdown Details
            Match:
              name: Match
            Maze:
              name: ლაბირინთი
            Minecraft:
              name: მაინკრაფტი
            Multi:
              name: Multi
            Multi2:
              name: Multi2
            Netsim:
              name: Netsim
            Odometer:
              name: ოდომეტრი
            Online PD:
              name: Online PD
            Pixelation:
              name: Pixelation
            PlayLab:
              name: სათამაშო ლაბორატორია
            Public Key Cryptography:
              name: Public Key Cryptography
            Rich long assessment:
              name: Rich long assessment
            Sample PLC Assessment:
              name: Sample PLC Assessment
            Star wars:
              name: ვარსკვლავური ომები
            Studio:
              name: სტუდია
            Swapped Levels:
              name: Swapped Levels
            Text Compression:
              name: Text Compression
            TextMatch:
              name: TextMatch
            Web Lab:
              name: ვებ ლაბორატორია
            Multi page assessment:
              name: Multi page assessment
            Single page assessment:
              name: Single page assessment
            Standalone video:
              name: Standalone video
            Curriculum Reference:
              name: Curriculum Reference
        algebraPD2b:
          title: Computer Science in Algebra PD
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_audience: ''
          stages:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Booleans:
              name: ბულის ტიპის მონაცემები (ლოგიკური ოპერატორები)
            Course Overview:
              name: Course Overview
            Defining Functions:
              name: ფუნქციების განსაზღვრა
            Defining Variables:
              name: ცვლადების განსაზღვრა
            'Eval: Conditionals':
              name: 'შეფასება: პირობითი ბრძანებები'
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Next Steps:
              name: მომდევნო ნაბიჯები
            Rocket-Height:
              name: რაკეტის სიმაღლე
            Strings and Images:
              name: ხაზები და სურათები
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Writing Contracts:
              name: კონტრაქტების წერა
        cspfacilitator:
          title: 'CS Principles Facilitator Workshop '
          description: Online levels for PD workshop
          description_short: Online levels for PD workshop
          description_audience: ''
          stages:
            App Lab:
              name: App Lab
            Broadcast Lesson:
              name: Broadcast Lesson
            Internet Simulator:
              name: ინტერნეტ-სიმულატორი
            Pixelation Widget:
              name: Pixelation Widget
            Text Compression Lesson:
              name: Text Compression Lesson
            Text Compression Widget:
              name: Text Compression Widget
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
        K5-OnlinePD:
          title: Teaching Computer Science Fundamentals
          description: Learn how to teach computer science using Code.org's Computer
            Science Fundamentals with this free, self-paced online course.
          description_short: Learn how to teach computer science using Code.org's
            Computer Science Fundamentals with this free, self-paced online course.
          description_audience: ''
          stages:
            Best Practices for Teaching Computer Science:
              name: Best Practices for Teaching Computer Science
            Computer Science Fundamentals:
              name: კომპიუტერული მეცნიერების საფუძვლები
            Getting Started:
              name: დაწყება
            Looking Ahead:
              name: Looking Ahead
            'Mastering the Basics: Conditionals':
              name: 'საფუძვლების დაუფლება: პირობითი ბრძანებები'
            'Mastering the Basics: Events':
              name: 'Mastering the Basics: Events'
            'Mastering the Basics: Functions':
              name: 'საფუძვლების დაუფლება: ფუნქციები'
            'Mastering the Basics: Loops':
              name: 'საფუძვლების დაუფლება: ციკლები'
            'Mastering the Basics: Sequencing':
              name: 'Mastering the Basics: Sequencing'
            Next Steps:
              name: მომდევნო ნაბიჯები
            Planning:
              name: დაგეგმვა
        ECSPD2:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_audience: ''
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: სექცია 1, დღე 10 ამბის მოყოლა მონაცემებით
            Unit 1, Day 11-14 Data Modeling and Design:
              name: სექცია 1, დღე 11–14 მონაცემთა მოდელირება და დიზაინი
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: სექცია 1, დღე 17-19 რა არის ინტელექტი?
            0: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            1: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            Unit 1, Days 3-4 Buying a Computer:
              name: სექცია 1, დღეები 3–4 კომპიუტერის ყიდვა
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: სექცია 1, დღეები 8–9 კომპიუტერების გავლენა და კომუნიკაცია
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-up:
              name: შედეგები
        equityPD:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          stages:
            Equity PD:
              name: Equity PD
            Necessary Background:
              name: საჭირო ფონი
        algebraPD2:
          title: Computer Science in Algebra PD Phase 2
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_audience: ''
          stages:
            Lesson Prep:
              name: გაკვეთილისთვის მომზადება
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Teaching with Puzzles:
              name: სწავლება თავსატეხების საშუალებით
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: დიზაინის რეცეპტი
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
        sciencePD2b:
          title: Computer Science in Science PD Phase 2b
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_audience: ''
          stages:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: მოდულების მიმოხილვა
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-Up:
              name: შეჯამება
        equity-pd:
          title: Leading a Discussion on Equity
          description: How to lead a discussion on equity in a Code.org PD
          description_short: How to lead a discussion on equity in a Code.org PD
          description_audience: ''
          stages:
            Code.org Equity PD:
              name: Code.org Equity PD
            Necessary Background:
              name: საჭირო ფონი
        science-PD2:
          title: Computer Science in Science PD Phase 2b
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_audience: ''
          stages:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: მოდულების მიმოხილვა
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-Up:
              name: შეჯამება
        Equity-OnlinePD:
          title: Creating More Equitable Computer Science Classrooms
          description: Develop strategies for creating equity in your classroom with
            this free, self-paced online course.
          description_short: Develop equitable teaching strategies with this free,
            self-paced online course.
          description_audience: ''
          stages:
            Creating Equitable Learning Environments:
              name: Creating Equitable Learning Environments
            Getting Started:
              name: დაწყება
            Introduction to Equity:
              name: Introduction to Equity
            Next Steps:
              name: მომდევნო ნაბიჯები
        sciencePD2b-iZone:
          title: Computer Science in Science PD Phase 2b
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_audience: ''
          stages:
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: მოდულების მიმოხილვა
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-Up:
              name: შეჯამება
        ECSPD2-iZone:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: სექცია 1, დღე 10 ამბის მოყოლა მონაცემებით
            Unit 1, Day 11-14 Data Modeling and Design:
              name: სექცია 1, დღე 11–14 მონაცემთა მოდელირება და დიზაინი
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: სექცია 1, დღე 17-19 რა არის ინტელექტი?
            0: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            1: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            Unit 1, Days 3-4 Buying a Computer:
              name: სექცია 1, დღეები 3–4 კომპიუტერის ყიდვა
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: სექცია 1, დღეები 8–9 კომპიუტერების გავლენა და კომუნიკაცია
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-up:
              name: შედეგები
        ECSPD2-NexTech:
          title: 'Exploring Computer Science PD: Blended Summer Study'
          description: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          description_short: 'ფაზა 2 ონლაინ: ფუნქციური პროგრამირების ალგებრის სწავლა'
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: სექცია 1, დღე 10 ამბის მოყოლა მონაცემებით
            Unit 1, Day 11-14 Data Modeling and Design:
              name: სექცია 1, დღე 11–14 მონაცემთა მოდელირება და დიზაინი
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: სექცია 1, დღე 17-19 რა არის ინტელექტი?
            0: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            1: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            Unit 1, Days 3-4 Buying a Computer:
              name: სექცია 1, დღეები 3–4 კომპიუტერის ყიდვა
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: სექცია 1, დღეები 8–9 კომპიუტერების გავლენა და კომუნიკაცია
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-up:
              name: შედეგები
        CSPPD2:
          title: 'Computer Science Principles PD: Blended Summer Study'
          description: 8-hour online PD that builds on the 5-day in-person experience
            and helps teachers prepare for the beginning of the semester
          description_short: 'Blended Summer Study: 8 hour online'
          stages:
            Getting Started:
              name: დაწყება
            Lesson Chunk 1- Sending Binary Messages:
              name: გაკვეთილის ფრაგმენტი 1 - ორობითი წერილების გაგზავნა
            Lesson Chunk 2- Encoding and Sending Numbers:
              name: გაკვეთილის ფრაგმენტი 2 - რიცხვების კოდირება და გაგზავნა
            Lesson Chunk 3- Encoding and Sending Text:
              name: გაკვეთილის ფრაგმენტი 2 - ტექსტის კოდირება და გაგზავნა
            Lesson Chunk 4- Compressing and Storing Information:
              name: გაკვეთილის ფრაგმენტი 4 - ინფორმაციის შეკუმშვა და შენახვა
            Practice PT:
              name: Practice PT
            Welcome to the Course!:
              name: კეთილი იყოს თქვენი მობრძანება ამ კურსში!
            Wrap Up and Next Steps:
              name: Wrap Up and Next Steps
        odometer:
          title: Odometer Widget
          description: Use the Odometer widget to control odometers with various number
            bases. Binary, Decimal and Hexadecimal are the most common number systems
            to see in computer science.
          description_short: Use the Odometer widget to control odometers with various
            number bases.
          description_audience: ''
          stages:
            Odometer Widget:
              name: Odometer Widget
        asUnplugged:
          title: Afterschool Unplugged
          description: Afterschool Unplugged is designed to teach computational thinking
            and computer science ideas through offline games and crafts. Created with
            informal classrooms in mind, these lessons are fantastic on their own,
            or in combination with Afterschool 1 . This course focuses on learning
            through entertainment. Recommended for grades K-8.
          description_short: Short unplugged course designed for informal learning
          description_audience: Ages 6-13
          stages:
            Binary Bracelets:
              name: ორობითი სამაჯურები
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Getting Loopy:
              name: ჩაციკლვა
            Graph Paper Programming:
              name: გრაფიკული პროგრამირება
            Happy Maps:
              name: ბედნიერი რუკები
            Move it, Move it:
              name: ვისწავლოთ გადაადგილება
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
            Songwriting:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            The Big Event:
              name: დიდი მოვლენა
        afterschool1:
          title: Afterschool 1
          description: Afterschool 1 is designed to for informal classrooms where
            students vary in age and assessment is not required. This course focuses
            on learning through entertainment, with varying options for implementation,
            all in 10 sessions or less. Use alone or with Afterschool Unplugged. Recommended
            for grades 3-8.
          description_short: Short course designed for informal learning
          description_audience: Ages 7-13
          stage: []
          stages: []
        vigenere:
          title: Vigenere Cipher Widget
          description: Use the Vigenere Cipher Widget to explore encrypting and decrypting
            messages using a Vigenere Cipher.
          description_short: Use the Vigenere Cipher Widget to explore encrypting
            and decrypting messages using a Vigenere Cipher.
          description_audience: ''
          stages:
            Vigenere:
              name: Vigenere
        algebraPD3a:
          title: Computer Science in Algebra PD
          description: CS in Algebra blended online school year study
          description_short: CS in Algebra blended online school year study
          description_audience: ''
          stages:
            Lesson Prep:
              name: გაკვეთილისთვის მომზადება
            Updates - The Big Game and Projects:
              name: განახლებები - დიდი თამაში და პროექტები
            Updates - The Design Recipe:
              name: განახლებები - დიზაინის რეცეპტი
            Updates - Tweaks and Polish:
              name: Updates - Tweaks and Polish
        sciencePD3_pre1:
          title: Computer Science in Science PD Phase 3 Before 1st In-Person
          description: Phase 3 Blended Summer Study (Segment One)
          description_short: Phase 3 Blended Summer Study Pre 1
          description_audience: ''
          stages:
            Prep With Your Modules:
              name: Prep With Your Modules
            The TLO:
              name: The TLO
            Welcome Back!:
              name: კეთილი იყოს თქვენი დაბრუნება!
        frequency_analysis:
          title: Frequency Analysis Widget
          description: Use the Frequency Analysis Widget to analyze letter frequencies
            in an input text compared to expected frequencies for standard English.
            Use that comparison to explore cracking Shift and Substitution Ciphers.
          description_short: Use the Frequency Analysis Widget to analyze letter frequencies
            in a text compared to expected frequencies. Crack Shift and Substitution
            Ciphers.
          stages:
            Frequency Analysis:
              name: სიხშირის ანალიზი
          description_audience: ''
        ECSPD3-Unit2:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
            Getting Started:
              name: დაწყება
            Intro to Unit 2:
              name: სექცია 2–ის შესავალი
            Lesson Overviews:
              name: გაკვეთილის მიმოხილვები
            Teaching Strategies:
              name: სწავლების მეთოდები
            Unit 2 Challenge:
              name: გაძლიერებული სექცია 2
        ECSPD3-Unit3:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
            Getting Started:
              name: დაწყება
            Intro to Unit 3:
              name: სექცია 3–ის შესავალი
            Teaching Strategies:
              name: სწავლების მეთოდები
            Unit 3 Challenge:
              name: გაძლიერებული სექცია 3
            Unit 3 Day-by-Day:
              name: სექცია 3 დღითი დღე სწავლა
        ECSPD3-Unit4:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
            Getting Started:
              name: დაწყება
            Intro to Unit 4:
              name: სექცია 4–ის შესავალი
            Teaching Strategies:
              name: სწავლების მეთოდები
            Unit 4 Challenge:
              name: გაძლიერებული სექცია 4
            Unit 4 Day-by-Day:
              name: სექცია 4 დღითი დღე სწავლა
        ECSPD3-Unit5:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Complete the Challenge:
              name: დაასრულეთ ეს გამოწვევა
            Getting Started:
              name: დაწყება
            Introduction to the Unit 5 Challenge:
              name: შესავალი მე-5-ე თავის გამოწვევაში
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: სექცია 5 მიმოხილვა
            Unit 5 lessons:
              name: სექცია 5 გაკვეთილები
        ECSPD3-Unit6:
          title: 'Exploring Computer Science PD: Academic Year Development'
          description: Academic Year Development
          description_short: Academic Year Development
          description_audience: ''
          stages:
            Alternative Ideas for Unit 6:
              name: ალტერნატიული იდეები მე-6-ე თავისთვის
            Getting Started:
              name: დაწყება
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: გაძლიერებული სექცია 6
            Unit 6 Overview:
              name: სექცია 6 მიმოხილვა
            Unit 6 lessons:
              name: სექცია 6 გაკვეთილები
        cspunit4draft:
          title: CS Principles Unit 4 - Data
          description: |-
            Collect, analyze, and extract knowledge from data by programming and\r
            building apps. Process data imported from other sources and also pull\r
            data from live data APIs.
          description_short: Data
          description_audience: ''
          stages:
            Check Your Assumptions:
              name: შეამოწმეთ თქვენი ვარაუდები
            Cleaning Data:
              name: მონაცემთა გასუფთავება
            Compiling Data:
              name: მონაცემთა კომპილირება
            Creating Javascript Objects:
              name: ჯავასკრიპტ ობიექტების შექმნა
            Creating Summary Tables:
              name: ამჯამავი ცხრილების შექმნა
            Data, Security, and Privacy:
              name: მონაცემები, უსაფრთხოება და კონფიდენციალურობა
            Designing Data Collection:
              name: Designing Data Collection
            Designing for Your User:
              name: Designing for Your User
            Discover a Data Story:
              name: აღმოაჩინეთ მონაცემთა ისტორია
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: მონაცემთა კარგი და ცუდი ვიზუალიზაცია
            How is Data Collected?:
              name: როგორ აგროვებენ მონაცემებს?
            Import, Export, and Visualize Data:
              name: Import, Export, and Visualize Data
            Interpreting Data Visualizations:
              name: Interpreting Data Visualizations
            Making Data Visualizations:
              name: Making Data Visualizations
            Permanent Data Storage:
              name: Permanent Data Storage
            Permanent Data Storage and Clicker Completion:
              name: Permanent Data Storage and Clicker Completion
            'Practice Create PT: Data App':
              name: 'Practice Create PT: Data App'
            Privacy in a Digital World:
              name: Privacy in a Digital World
            Privacy vs Utility:
              name: Privacy vs Utility
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Reading Records:
              name: ჩანაწერთა წაკითხვა
            Search Terms:
              name: ძებნის წესები
            Unique IDs, Delete and Update Records:
              name: Unique IDs, Delete and Update Records
            Using Data in the Real World:
              name: მონაცემთა გამოყენება რეალურ ცხოვრებაში
            Web Requests and APIs:
              name: Web Requests and APIs
            What Data Can Tell Us:
              name: რას გვეუბნებიან მონაცემები
            Why Make Apps?:
              name: რატომ უნდა ვაკეთოთ აპლიკაციები?
        ScienceP3OLPT2:
          title: Computer Science in Science PD Phase 3b
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          stages:
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: ფიზიკის გამოწვევები
            Thinking About Implementation:
              name: Thinking About Implementation
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-Up:
              name: შეჯამება
        algebraPD3b:
          title: Computer Science in Algebra PD
          description: CS in Algebra mid year lesson support
          description_short: CS in Algebra mid year lesson support
          description_audience: ''
          stages:
            Close and Next Steps:
              name: Close and Next Steps
            Getting Started:
              name: დაწყება
            Teaching Support - Lessons 1-3:
              name: Teaching Support - Lessons 1-3
            Teaching Support - Lessons 13-16:
              name: Teaching Support - Lessons 13-16
            Teaching Support - Lessons 17-20:
              name: Teaching Support - Lessons 17-20
            Teaching Support - Lessons 4-7:
              name: Teaching Support - Lessons 4-7
            Teaching Support - Lessons 8-12:
              name: Teaching Support - Lessons 8-12
        CSPPD3-Unit2:
          title: 'Computer Science Principles: Unit 2 PD'
          description: Online Exploration of CSP Unit 2
          description_short: Online Exploration of CSP Unit 2
          description_audience: ''
          stages:
            Challenge Overview:
              name: გამოწვევათა მიმოხილვა
            Complete the Challenge:
              name: დაასრულეთ ეს გამოწვევა
            Getting Started:
              name: დაწყება
            Share out and Submit:
              name: Share out and Submit
            Unit 2 Overview:
              name: სექცია 2 მიმოხილვა
        duino:
          title: Experimenting with Arduino stuff
          description: Testing some tools for teaching with Arduinos
          stages:
            Basic Circuits:
              name: Basic Circuits
            Blinky Lights:
              name: Blinky Lights
            JunkBot:
              name: ნაგვის ბოტი
            Making Music:
              name: მუსიკის შექმნა
        Special Fun:
          title: Special Fun
          description_short: Something special for those who know it exists. These
            puzzles might not be around long, so enjoy them while you can!
          description_audience: 'ასაკი: 10-18'
          description: ''
          stages:
            Halloween 2015:
              name: ჰელოუინი 2015
        SpecialSeries:
          title: Special Levels
          description: Something special for those who know it exists. These puzzles
            might not be around long, so enjoy them while you can!
          description_short: Something special for those who know it exists. These
            puzzles might not be around long, so enjoy them while you can!
          description_audience: 'ასაკი: 10-18'
          stages:
            Spring 2016:
              name: გაზაფხული 2016
            Halloween 2015:
              name: ჰელოუინი 2015
        iceage:
          title: გამყინვარების პერიოდი - თამაშების ლაბორატორია
          description: შექმენით ისტორია ან თამაში გამყინვარების პერიოდის თამაშების
            ლაბორატორიაში!
          description_short: შექმენით ისტორია ან თამაში გამყინვარების პერიოდის თამაშების
            ლაბორატორიაში!
          description_audience: ''
          stages:
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
        CSPPD3-Unit3:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          stages:
            Challenge Overview:
              name: გამოწვევათა მიმოხილვა
            Chunk 1 Overview:
              name: ფრაგმენტი 1 - მიმოხილვა
            Chunk 2 Overview:
              name: ფრაგმენტი 2 - მიმოხილვა
            Chunk 3 Overview:
              name: ფრაგმენტი 3 - მიმოხილვა
            Chunk 4 Overview:
              name: ფრაგმენტი 4 - მიმოხილვა
            Chunk 5 Overview:
              name: ფრაგმენტი 5 - მიმოხილვა
            Complete the Challenge:
              name: დაასრულეთ ეს გამოწვევა
            Getting Started:
              name: დაწყება
            Practice Performance Task:
              name: Practice Performance Task
            Share out and Submit:
              name: Share out and Submit
            Unit 3 Overview:
              name: სექცია 3 მიმოხილვა
        cspunit3temp:
          title: CSP Unit 3 - Temp
          description: This unit introduces the foundational concepts of computer
            programming, which unlocks the ability to make rich, interactive apps.
            This course uses JavaScript as the programming language, and App Lab as
            the programming environment to build apps, but the concepts learned in
            these lessons span all programming languages and tools.
          description_short: პროგრამირება
          description_audience: ''
          stages:
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introduction to Arrays:
              name: შესავალი მასივებში
            Loops and Simulations:
              name: ციკლები და სიმულაციები
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: მასივების დამუშავება
            While Loops:
              name: '"სანამ" ციკლები'
        CSP-Unit3-Support:
          title: 'Computer Science Principles: Unit 3 PD'
          description: Online Exploration of CSP Unit 3
          description_short: Online Exploration of CSP Unit 3
          stages:
            Chunk 1 Overview:
              name: ფრაგმენტი 1 - მიმოხილვა
            Chunk 2 Overview:
              name: ფრაგმენტი 2 - მიმოხილვა
            Chunk 3 Overview:
              name: ფრაგმენტი 3 - მიმოხილვა
            Chunk 4 Overview:
              name: ფრაგმენტი 4 - მიმოხილვა
            Chunk 5 Overview:
              name: ფრაგმენტი 5 - მიმოხილვა
            Practice Performance Task:
              name: Practice Performance Task
            Unit 3 Overview:
              name: სექცია 3 მიმოხილვა
        gumball:
          title: გამბოლი - თამაშების ლაბორატორია
          description: შექმენით ისტორია ან თამაში გამბოლის თამაშების ლაბორატორიაში!
          description_short: შექმენით ისტორია ან თამაში გამბოლის თამაშების ლაბორატორიაში!
          stages:
            Gumball Play Lab:
              name: გამბოლი - თამაშების ლაბორატორია
        starwars:
          title: 'ვარსკვლავური ომები: გალაქტიკის შექმნა კოდით'
          description: ისწავლეთ დროიდების დაპროგრამება და შექმენით საკუთარი ვარსკვლავური
            ომების თამაში.
          description_short: ისწავლეთ დროიდების დაპროგრამება და შექმენით საკუთარი
            ვარსკვლავური ომების თამაში.
          description_audience: ''
          stages:
            Hour of Code 2015:
              name: კოდის ერთი საათი 2015
        starwarsblocks:
          title: 'ვარსკვლავური ომები: გალაქტიკის შექმნა კოდით'
          description: ისწავლეთ დროიდების დაპროგრამება და შექმენით საკუთარი ვარსკვლავური
            ომების თამაში.
          description_short: ისწავლეთ დროიდების დაპროგრამება და შექმენით საკუთარი
            ვარსკვლავური ომების თამაში.
          description_audience: ''
          stages:
            Hour of Code 2015:
              name: კოდის ერთი საათი 2015
        mc:
          title: მაინკრაფტის კოდის ერთი საათი
          description: გამოიყენეთ კოდის ბლოკები და გაიარეთ მაინკრაფტის სამყაროს თავგადასავლები
            სტივთან ან ალექსთან ერთად
          description_short: შეისწავლეთ მაინკრაფტის სამყარო კოდით
          stages:
            Hour of Code 2015:
              name: კოდის ერთი საათი 2015
          description_audience: ''
        CSPPD3-Unit3-pt2:
          title: 'Computer Science Principles: Unit 3 PD Challenges'
          description: Online Exploration of CSP Unit 3-- Lesson Challenges
          description_short: Online Exploration of CSP Unit 3-- Lesson Challenges
          stages:
            Challenge Overview:
              name: გამოწვევათა მიმოხილვა
            Complete the Challenge:
              name: დაასრულეთ ეს გამოწვევა
            Share out and Submit:
              name: Share out and Submit
        ScienceP3OLPT3:
          title: Computer Science in Science PD Pre-Phase 3B
          description: Phase 3 Academic Year Development
          description_short: Phase 3 Academic Year Development
          description_audience: ''
          stages:
            "(optional) Refresh your connection to Complex Adaptive Systems":
              name: "(optional) Refresh your connection to Complex Adaptive Systems"
            Assessing Computer Models:
              name: Assessing Computer Models
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-Up:
              name: შეჯამება
        cspunit5:
          title: CSP Unit 5 - Performance Tasks
          description: This unit covers the preparation and completion of the Explore
            and Create Performance Tasks.
          description_short: Performance Tasks
          stages:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
          description_audience: ''
        cspunit4:
          title: CSP Unit 4 - Data
          description: Being able to digitally manipulate data, visualize it, identify
            patterns, trends and possible meanings are important practical skills
            that computer scientists do every day. The data rich world we live in
            also introduces many complex questions related to public policy, law,
            ethics and societal impact. Understanding where data comes from, having
            intuitions about what could be learned or extracted from it, and being
            able to use computational tools to manipulate data and communicate about
            it are the primary skills addressed in the unit.
          description_short: Data
          description_audience: ''
          stages:
            Check Your Assumptions:
              name: შეამოწმეთ თქვენი ვარაუდები
            Cleaning Data:
              name: მონაცემთა გასუფთავება
            Creating Summary Tables:
              name: ამჯამავი ცხრილების შექმნა
            Discover a Data Story:
              name: აღმოაჩინეთ მონაცემთა ისტორია
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: მონაცემთა კარგი და ცუდი ვიზუალიზაცია
            Identifying People with Data:
              name: Identifying People with Data
            Intro to Data:
              name: მონაცემები – შესავალი
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            The Cost of Free:
              name: უფასოს ფასი
            What is Big Data?:
              name: რა არის დიდი მონაცემები?
        CSPPD3-Unit4:
          title: 'Computer Science Principles: Unit 4 PD'
          description: Online Support for CSP Unit 4
          description_short: Support for CSP Unit 4
          stages:
            Challenge Overview:
              name: გამოწვევათა მიმოხილვა
            Chapter 1 Overview:
              name: თავი 1 – მიმოხილვა
            Chapter 2 Overview:
              name: თავი 2 – მიმოხილვა
            Complete the Challenge:
              name: დაასრულეთ ეს გამოწვევა
            Getting Started:
              name: დაწყება
            Practice Performance Tasks:
              name: Practice Performance Tasks
            Share out and Submit:
              name: Share out and Submit
            Unit 4 Overview:
              name: სექცია 4 მიმოხილვა
        cspunit6draft:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and
            use data in your apps. The following material provides an overview of
            how these tools work, and it concludes with a sampling of example projects
            that can be built using these tools.
          description_short: Data Apps
          stages:
            Creating Javascript Objects:
              name: ჯავასკრიპტ ობიექტების შექმნა
            Deleting Records:
              name: ჩანაწერთა წაშლა
            Final Project:
              name: ფინალური პროექტი
            Importing and Exporting Data:
              name: მონაცემთა შემოტანა და გატანა
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: ჩანაწერთა წაკითხვა
            Sample Apps:
              name: აპლიკაციების ნიმუშები
            Updating Records:
              name: ჩანაწერთა განახლება
            Visualizing Data:
              name: მონაცემთა ვიზუალიზაცია
        CSPPD3-Unit5:
          title: 'Computer Science Principles: Unit 5 PD'
          description: Online Support for CSP Unit 5
          description_short: Support for CSP Unit 5
          stages:
            Challenge Overview:
              name: გამოწვევათა მიმოხილვა
            Complete the Challenge:
              name: დაასრულეთ ეს გამოწვევა
            Create PT Breakdown:
              name: Create PT Breakdown
            Explore PT Breakdown:
              name: Explore PT Breakdown
            Getting Started:
              name: დაწყება
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: სექცია 5 მიმოხილვა
        cspunit6:
          title: CSP Post-AP Material - Databases and Using Data in Your Apps
          description: App Lab has a number of tools that allow you to collect and
            use data in your apps. The following material provides an overview of
            how these tools work, a sampling of example projects that can be built
            using these tools, and a space in which to build and submit a final project.
          description_short: ისწავლეთ მონაცემთა შეგროვება და მათი გამოყენება აპლიკაციების
            ლაბორატორიაში.
          description_audience: ''
          stages:
            Creating Javascript Objects:
              name: ჯავასკრიპტ ობიექტების შექმნა
            Deleting Records:
              name: ჩანაწერთა წაშლა
            Final Project:
              name: ფინალური პროექტი
            Importing and Exporting Data:
              name: მონაცემთა შემოტანა და გატანა
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: ჩანაწერთა წაკითხვა
            Sample Apps:
              name: აპლიკაციების ნიმუშები
            Updating Records:
              name: ჩანაწერთა განახლება
            Visualizing Data:
              name: მონაცემთა ვიზუალიზაცია
        AlgebraA:
          title: 'Computer Science in Algebra: Course A'
          description: შეისწავლეთ ფუნქციონალური პროგრამირება ალგებრის საშუალებით
          description_short: შეისწავლეთ ფუნქციონალური პროგრამირება ალგებრის საშუალებით
          description_audience: ''
          stages:
            'Calc: Defining Variables':
              name: 'კალკულატორი: ცვლადების განსაზღვრა'
            'Calc: Evaluation Blocks':
              name: 'კალკულატორი: შეფასების ბლოკები'
            'Eval: Defining Functions':
              name: 'Eval: Defining Functions'
            'Eval: Functions':
              name: 'Eval: Functions'
            'Eval: Strings and Images':
              name: 'შეფასება: ხაზები და სურათები'
            'Eval: Writing Contracts':
              name: 'შეფასება: კონტრაქტების წერა'
            'Play Lab: Defining Functions':
              name: 'სათამაშო ლაბორატორია: ფუნქციების განსაზღვრა'
            'Unplugged: Contracts':
              name: 'გაკვეთილი კომპიუტერის გარეშე: კონტრაქტები'
            'Unplugged: Fast Functions':
              name: 'Unplugged: Fast Functions'
            'Unplugged: The Design Recipe':
              name: 'გაკვეთილი კომპიუტერის გარეშე: დიზაინის რეცეპტი'
        AlgebraB:
          title: Computer Science in Algebra
          description: შეისწავლეთ ფუნქციონალური პროგრამირება ალგებრის საშუალებით
          description_short: შეისწავლეთ ფუნქციონალური პროგრამირება ალგებრის საშუალებით
          description_audience: ''
          stages:
            'Eval: Boolean Operators':
              name: 'შეფასება: ბულის ტიპის (ლოგიკური) ოპერატორები'
            'Eval: Conditionals':
              name: 'შეფასება: პირობითი ბრძანებები'
            'Play Lab: Animation (Big Game)':
              name: 'თამაშების ლაბორატორია: ანიმაცია (დიდი თამაში)'
            'Play Lab: Boolean (Big Game)':
              name: 'თამაშების ლაბორატორია: ბულის ტიპის მონაცემები(დიდი თამაში)'
            'Play Lab: Booleans':
              name: 'თამაშების ლაბორატორია: ბულის ტიპის მონაცემები (ლოგიკური ოპერატორები)'
            'Play Lab: Collision Detection (Big Game)':
              name: 'თამაშების ლაბორატორია: შეჯახების დაფიქსირება (დიდი თამაში)'
            'Play Lab: Defining Variables (Big Game)':
              name: 'თამაშების ლაბორატორია: ცვლადების განსაზღვრა (დიდი თამაში)'
            'Unplugged: Booleans':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ბულის ტიპის მონაცემები (ლოგიკური
                ოპერატორები)'
            'Unplugged: Collision Detection and the Distance Formula':
              name: 'გაკვეთილი კომპიუტერის გარეშე: შეჯახების დაფიქსირება და მანძილის
                ფორმულა'
            'Unplugged: Conditionals and Piecewise Functions':
              name: 'გაკვეთილი კომპიუტერის გარეშე: პირობითი ბრძანებები და ნაწილობითი
                ფუნქციები'
            'Unplugged: Video Games and Coordinate Planes':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ვიდეოთამაშები და საკოორდინატო სიბრტყეები'
        gamelab-hackathon:
          title: Gamelab Hackathon
          description: A place to try things out in Game Lab
          description_short: Gamelab Hackathon
          stages:
            Middle_School_Hackathon:
              name: Middle_School_Hackathon
        algebraPD1:
          title: Computer Science in Algebra PD
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          stages:
            Course Overview:
              name: Course Overview
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Introduction to PD:
              name: შესავალი PD-ში
            Preparing for in-person PD:
              name: Preparing for in-person PD
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Why Computer Science belongs in Algebra:
              name: რატო მიეკუთვნება კომპიუტერული მეცნიერება ალგებრას
        algebraPD3c:
          title: Computer Science in Algebra PD
          description: CS in Algebra end of year reflection
          description_short: CS in Algebra end of year reflection
          description_audience: ''
          stages:
            Getting Started:
              name: დაწყება
            Planning For the Future:
              name: Planning For the Future
            Sharing Student Work:
              name: მოსწავლის ნამუშევრის გაზიარება
        csp1:
          title: CS Principles Unit 1 - The Internet
          description: This unit explores the technical challenges and questions that
            arise from the need to represent digital information in computers and
            transfer it between people and computational devices. The unit then explores
            the structure and design of the internet and the implications of those
            design decisions.
          description_short: ინტერნეტი
          description_audience: ''
          stages:
            Binary Numbers:
              name: ორობითი რიცხვები
            CS Principles Pre-survey:
              name: კომპიუტერული მეცნიერების საფუძვლების წინარეგამოკითხვა
            Encoding and Sending Formatted Text:
              name: ფორმატირებული ტექსტის კოდირება და გაგზავნა
            HTTP and Abstraction:
              name: HTTP და აბსტრაქცია
            Number Systems:
              name: Number Systems
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
            Personal Innovations:
              name: პირადი ინოვაციები
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
            Routers and Redundancy:
              name: Routers and Redundancy
            Sending Binary Messages:
              name: ორობითი წერილების გაგზავნა
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
            Sending Numbers:
              name: რიცხვების გაგზავნა
            The Internet:
              name: ინტერნეტი
            The Need for Addressing:
              name: The Need for Addressing
            The Need for DNS:
              name: The Need for DNS
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        csp2:
          title: CS Principles Unit 2 - Digital Information
          description: This unit further explores the ways that digital information
            is encoded, represented and manipulated. Being able to digitally manipulate
            data, visualize it, and identify patterns, trends and possible meanings
            are important practical skills that computer scientists do every day.
            Understanding where data comes from, having intuitions about what could
            be learned or extracted from it, and being able to use computational tools
            to manipulate data and communicate about it are the primary skills addressed
            in the unit.
          description_short: Explore how more complex digital information is represented
            and manipulated through computation and visualization.
          description_audience: ''
          stages:
            Bytes and File Sizes:
              name: ბაიტები და ფაილის ზომები
            Check Your Assumptions:
              name: შეამოწმეთ თქვენი ვარაუდები
            Cleaning Data:
              name: მონაცემთა გასუფთავება
            Creating Summary Tables:
              name: ამჯამავი ცხრილების შექმნა
            Discover a Data Story:
              name: აღმოაჩინეთ მონაცემთა ისტორია
            Encode a Complex Thing:
              name: Encode a Complex Thing
            Encoding B&W Images:
              name: შავთეთრი სურათების კოდირება
            Encoding Color Images:
              name: ფერადი სურათების კოდირება
            Finding Trends with Visualizations:
              name: Finding Trends with Visualizations
            Good and Bad Data Visualizations:
              name: მონაცემთა კარგი და ცუდი ვიზუალიზაცია
            Intro to Data:
              name: მონაცემები – შესავალი
            Lossy Compression and File Formats:
              name: Lossy Compression and File Formats
            Making Data Visualizations:
              name: Making Data Visualizations
            Practice PT - Tell a Data Story:
              name: Practice PT - Tell a Data Story
            Text Compression:
              name: Text Compression
            Unit 2 Chapter 1 Assessment:
              name: Unit 2 Chapter 1 Assessment
            Unit 2 Chapter 2 Assessment:
              name: Unit 2 Chapter 2 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Practice PT - Encode an Experience:
              name: Practice PT - Encode an Experience
        csp3:
          title: CSP Unit 3 - Programming
          description: |-
            This unit introduces the foundational concepts of computer programming, which unlocks the ability to make rich, interactive apps. This course uses JavaScript as the programming language, and App Lab as the programming environment to build apps, but the concepts learned in these lessons span all programming languages and tools.\r
            \r
            This unit was last updated October 30th, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates.
          description_short: პროგრამირება
          description_audience: ''
          stages:
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating Functions:
              name: ფუნქციების შექმნა
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Creativity in Algorithms:
              name: შემოქმედებითობა ალგორითმებში
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            Looping and Random Numbers:
              name: ციკლები და შემთხვევითი რიცხვები
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            The Need For Programming Languages:
              name: პროგრამირების ენების საჭიროება
            The Need for Algorithms:
              name: ალგორითმების საჭიროება
            Using Simple Commands:
              name: მარტივი ბრძანებების გამოყენება
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Creating Functions with Parameters:
              name: Creating Functions with Parameters
            CSP End-of-Semester Mid-course survey:
              name: CSP End-of-Semester Mid-course survey
            CSP Mid-course survey:
              name: CSP Mid-course survey
            Please complete the CSP Mid-course survey!:
              name: Please complete the CSP Mid-course survey!
        csp4:
          title: CS Principles Unit 4 - Big Data and Privacy
          description: |-
            The data-rich world we live in introduces many complex questions related to public policy, law, ethics and societal impact. The goals of this unit are to develop a well-rounded and balanced view about data in the world, including the positive and negative effects of it, and to understand the basics of how and why modern encryption works.\r
            \r
            This unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates.
          description_short: Big Data and Privacy
          description_audience: ''
          stages:
            Alice and Bob and Asymmetric Keys:
              name: ელისი და ბობი და ასიმეტრიული გასაღებები
            Cracking the Code:
              name: კოდის გატეხვა
            Encryption with Keys and Passwords:
              name: Encryption with Keys and Passwords
            Identifying People with Data:
              name: Identifying People with Data
            Practice PT - Cybersecurity Innovations:
              name: Practice PT - Cybersecurity Innovations
            Practice PT - Propose an Innovation:
              name: Practice PT - Propose an Innovation
            Public Key Crypto:
              name: Public Key Crypto
            Rapid Research - Data Innovations:
              name: Rapid Research - Data Innovations
            Simple Encryption:
              name: მარტივი შიფრირება
            The Cost of Free:
              name: უფასოს ფასი
            What is Big Data?:
              name: რა არის დიდი მონაცემები?
            Rapid Research - Cybercrime:
              name: Rapid Research - Cybercrime
            Practice PT - Big Data and Security Dilemmas:
              name: Practice PT - Big Data and Security Dilemmas
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        csp5:
          title: CS Principles Unit 5 - Building Apps
          description: 'This unit continues the introduction of foundational concepts
            of computer programming, which unlocks the ability to make rich, interactive
            apps. This course uses JavaScript as the programming language, and App
            Lab as the programming environment to build apps, but the concepts learned
            in these lessons span all programming languages and tools. '
          description_short: Building Apps
          description_audience: ''
          stages:
            Beyond Buttons Toward Apps:
              name: Beyond Buttons Toward Apps
            Canvas and Arrays in Apps:
              name: Canvas and Arrays in Apps
            Compound Conditional Logic:
              name: Compound Conditional Logic
            Controlling Memory with Variables:
              name: მეხსიერების გაკონტროლება ცვლადებით
            Digital Assistant Project:
              name: ციფრული ასისტენტის პროექტი
            Event-Driven Programming and Debugging:
              name: Event-Driven Programming and Debugging
            Events Unplugged:
              name: Events Unplugged
            Functions with Return Values:
              name: Functions with Return Values
            Image Scroller with Key Events:
              name: Image Scroller with Key Events
            Introducing Design Mode:
              name: შესავალი დიზაინის რეჟიმში
            Introduction to Arrays:
              name: შესავალი მასივებში
            Introduction to Conditional Logic:
              name: შესავალი პირობით ლოგიკაში
            Introduction to Digital Assistants:
              name: შესავალი ციფრულ ასისტენტებში
            Loops and Simulations:
              name: ციკლები და სიმულაციები
            Multi-screen Apps:
              name: მრავალეკრანიანი აპლიკაციები
            'Practice PT: Create':
              name: 'Practice PT: Create'
            Processing Arrays:
              name: მასივების დამუშავება
            Understanding Program Flow and Logic:
              name: პროგრამის მიმდინარეობის და ლოგიკის გაგება
            User Input and Strings:
              name: მომხმარებლის მიერ შეყვანილი ინფორმაცია და რიგები
            Using Variables in Apps:
              name: აპლიკაციებში ცვლადების გამოყენება
            While Loops:
              name: '"სანამ" ციკლები'
            Edited lessons ABOVE this line:
              name: Edited lessons ABOVE this line
            Buttons and Events:
              name: ღილაკები და მოვლენები
            Make Your Own Multi-Screen App:
              name: შექმენით თქვენი საკუთარი მრავალეკრანიანი აპლიკაცია
            Unit 5 Assessment 1:
              name: სექცია 5 დავალება 1
            Unit 5 Assessment 2:
              name: სექცია 5 დავალება 2
            "'If' Statements Unplugged":
              name: "'If' Statements Unplugged"
            '"If" Statements Unplugged':
              name: '"If" Statements Unplugged'
            Getting started with If Statements:
              name: Getting started with If Statements
            Unit 3 Chapter 1 Assessment 3:
              name: Unit 3 Chapter 1 Assessment 3
            If statements:
              name: "'თუ' ბრძანებები"
            Unit 3 Assessment 3:
              name: სექცია 3 დავალება 3
            Unit 3 Assessment 4:
              name: სექცია 3 დავალება 4
            If-else-if and Conditional Logic:
              name: თუ-სხვაგვარად-თუ და პირობითი ლოგიკა
            'Building an App: Color Sleuth':
              name: 'Building an App: Color Sleuth'
            Possibly use later:
              name: Possibly use later
            Unit 5 Assessment 3:
              name: სექცია 5 დავალება 3
            Unit 5 Assessment 4:
              name: სექცია 5 დავალება 4
            Boolean Expressions and "If" Statements:
              name: Boolean Expressions and "If" Statements
            '"if-else-if" and Conditional Logic':
              name: '"თუ-სხვაგვარად-თუ" და პირობითი ლოგიკა'
            'Building an App: Multi-Screen App':
              name: 'აპლიკაციის შექმნა: მრავალეკრანიანი აპლიკაცია'
            'Building an App: Clicker Game':
              name: 'აპლიკაციის შექმნა: წკაპა თამაში'
            'Building an App: Image Scroller':
              name: 'აპლიკაციის შექმნა: სურათების სქროლერი'
            'Building an App: Canvas Painter':
              name: 'Building an App: Canvas Painter'
            Unit 5 Assessment 5 - Practice AP questions:
              name: Unit 5 Assessment 5 - Practice AP questions
            Unit 5 Assessment 5 - AP Pseudocode Practice Questions:
              name: Unit 5 Assessment 5 - AP Pseudocode Practice Questions
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Multi-Screen Apps:
              name: მრავალეკრანიანი აპლიკაციები
            '"if" Statements Unplugged':
              name: '"if" Statements Unplugged'
            Boolean Expressions and "if" Statements:
              name: Boolean Expressions and "if" Statements
        csp6:
          title: CS Principles Unit 6 - Performance Tasks
          description: This unit covers the preparation and completion of the Create
            and Explore Performance Tasks.
          description_short: Performance Tasks
          description_audience: ''
          stages:
            Create PT:
              name: Create PT
            Create PT Prep:
              name: Create PT Prep
            Explore PT:
              name: Explore PT
            Explore PT Prep:
              name: Explore PT Prep
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
        CSDU3-Draft:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: Temp place to work on U3 of Disco
          description_short: პროგრამირება
          description_audience: ''
          stages:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Collision Detection:
              name: შეჯახების აღმოჩენა
            Collisions:
              name: შეჯახებები
            Complex Conditionals:
              name: რთული პირობითი ბრძანებები
            Complex Sprite Movement:
              name: სპრაიტების რთული მოძრაობა
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: ხატვის ციკლი და შემთხვევითობა
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
            'Project: Interactive Card':
              name: 'პროექტი: ინტერაქტიული ბარათი'
            Sprite Movement Methods:
              name: სპრაიტის მოძრაობის მეთოდები
            Sprites and Images:
              name: სპრაიტები და სურათები
            Sprites and Properties:
              name: სპრაიტები და თვისებები
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: ცვლადები და ანიმაცია
            Functions:
              name: ფუნქციები
            Platform Jumper:
              name: პლატფორმებზე მხტუნავი
            Defender:
              name: დამცველი
            'Project: Build a Game':
              name: 'პროექტი: შექმენი თამაში'
            Velocity:
              name: სიჩქარე
            The Game Design Process:
              name: თამაშის დიზაინის პროცესი
            Using the Game Design Process:
              name: თამაშის დიზაინის პროცესის გამოყენება
        2016_sciencePD_phase1:
          title: Computer Science in Science PD 2016-2017
          description: In Partnership with Project GUTS
          description_short: In Partnership with Project GUTS
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: შესავალი რთულ ადაპტირებად სისტემებში
            Introduction to Computational Science:
              name: შესავალი გამოთვლით მეცნიერებაში
            Introduction to PD:
              name: შესავალი PD-ში
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: გაკვეთილი
            Using Computer Models in Science:
              name: კომპიუტერული მოდელების გამოყენება მეცნიერებაში
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: რას უნდა ველოდოთ
        TEMP CSD Unit 3:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: ''
          description_short: პროგრამირება
          description_audience: ''
          stages:
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
        CSF_Secret_Sample:
          title: Secret Sample
          description: Test of new educational philosophy
          description_short: This is a secret...shhhhh
          description_audience: 'ასაკი: 8-18'
          stages:
            Sample Stage:
              name: სატესტო დონე
        ECSPD1:
          title: ECS Part 1
          description: Two hour introduction to your Professional Learning Program
            for the ECS Version 5 curriculum
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Background and Context:
              name: ფონი და კონტექსტი
            'Classroom and Workshop Style ':
              name: 'Classroom and Workshop Style '
            ECS Curriculum:
              name: ECS Curriculum
            Welcome to Phase 1!:
              name: კეთილი იყოს თქვენი მობრძანება პირველ ფაზაში!
            Wrap Up:
              name: შეჯამება
            Classroom and workshop style:
              name: Classroom and workshop style
            'Classroom and workshop style ':
              name: 'Classroom and workshop style '
        algebraFacilitator:
          title: Computer Science in Algebra Facilitator Pre Work
          description: Teach Algebra through Functional Programming
          description_short: Teach Algebra through Functional Programming
          description_audience: ''
          stages:
            Evaluation Blocks:
              name: შეფასების ბლოკები
            Introduction to PD:
              name: შესავალი PD-ში
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Why Computer Science belongs in Algebra:
              name: რატო მიეკუთვნება კომპიუტერული მეცნიერება ალგებრას
        sciencePD1:
          title: 'CS in Science: Part 1'
          description: In Partnership with Project GUTS
          description_short: 'Phase 1: Online Introduction'
          description_audience: ''
          stages:
            Agent Based Modeling of Complex Adaptive Systems:
              name: Agent Based Modeling of Complex Adaptive Systems
            Computational Thinking And The Framework For K-12 Science Education:
              name: Computational Thinking And The Framework For K-12 Science Education
            Dispositions and Classroom Culture:
              name: Dispositions and Classroom Culture
            Introduction to Complex Adaptive Systems:
              name: შესავალი რთულ ადაპტირებად სისტემებში
            Introduction to Computational Science:
              name: შესავალი გამოთვლით მეცნიერებაში
            Introduction to PD:
              name: შესავალი PD-ში
            Introduction to StarLogo Nova:
              name: Introduction to StarLogo Nova
            Post-Survey:
              name: Post-Survey
            The Tutorial:
              name: გაკვეთილი
            Using Computer Models in Science:
              name: კომპიუტერული მოდელების გამოყენება მეცნიერებაში
            Using Models in the Classroom:
              name: Using Models in the Classroom
            What to Expect:
              name: რას უნდა ველოდოთ
        cspoptional:
          title: CS Principles Optional Lessons
          description: Optional lessons and content across all of the CS Principles
            units are listed here
          description_short: Optional
          description_audience: ''
          stages:
            Algorithms Detour - How Routers Learn:
              name: Algorithms Detour - How Routers Learn
            Algorithms Detour - Minimum Spanning Tree:
              name: Algorithms Detour - Minimum Spanning Tree
            Algorithms Detour - Shortest Path:
              name: Algorithms Detour - Shortest Path
            Unit 1 - Encoding Numbers in the Real World:
              name: თავი 1 - რიცხვების კოდირება რეალურ ცხოვრებაში
            Unit 1 - Sending Bits in the Real World:
              name: თავი 1 - ბიტების გაგზავნა რეალურ ცხოვრებაში
            Unit 1 - Algorithms Detour - Minimum Spanning Tree:
              name: Unit 1 - Algorithms Detour - Minimum Spanning Tree
            Unit 1 - Algorithms Detour - Shortest Path:
              name: Unit 1 - Algorithms Detour - Shortest Path
            Unit 1 - How Routers Learn:
              name: Unit 1 - How Routers Learn
            Unit 4 - Hard Problems - The Traveling Salesperson Problem:
              name: Unit 4 - Hard Problems - The Traveling Salesperson Problem
            Unit 4 - One-Way Functions - The WiFi Hotspot Problem:
              name: Unit 4 - One-Way Functions - The WiFi Hotspot Problem
        cspunit1-support:
          title: Online Support for CSP Unit 1
          description: This is a test Professional Learning Course
          description_audience: ''
          description_short: ''
          stages:
            Chapter Overviews:
              name: თავის მიმოხილვა
            Encoding and Sending Numbers:
              name: რიცხვების კოდირება და გაგზავნა
            Intro to the Unit:
              name: შესავალი სექციაში
            Running a Constructive Classroom:
              name: Running a Constructive Classroom
            Sending Binary Messages:
              name: ორობითი წერილების გაგზავნა
            Strategies for Student Writing:
              name: Strategies for Student Writing
            Supporting Peer Learning:
              name: Supporting Peer Learning
            'Tool Talk: Intro to Netsim':
              name: 'Tool Talk: Intro to Netsim'
        test-teaching-ap-cs-unit-1:
          title: Test CPS PD
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            test Unit 1 content module Alpha:
              name: test Unit 1 content module Alpha
            test Unit 1 content module Bravo:
              name: test Unit 1 content module Bravo
            test Unit 1 content module Charlie:
              name: test Unit 1 content module Charlie
            test Unit 1 practice module Delta:
              name: test Unit 1 practice module Delta
            test Unit 1 practice module Echo:
              name: test Unit 1 practice module Echo
            test Unit 1 practice module Foxtrot:
              name: test Unit 1 practice module Foxtrot
            test Unit 1 required reading:
              name: test Unit 1 required reading
        allthehiddenthings:
          title: All the Hidden Things!
          description: Unreleased level types for UI testing as admin
          description_short: Unreleased level types for UI testing as admin
          stages:
            Contained Levels:
              name: Contained Levels
            Game Lab:
              name: თამაშების ლაბი
        cspunit1-support-test:
          title: CSP Unit 1 teacher support
          description: Online Supports for CSP Unit 1
          description_audience: ''
          description_short: ''
          stages:
            Unit 1 Overview:
              name: სექცია 1 - მიმოხილვა
        cspunit1-tools:
          title: netsim task completion
          description: introduction to the internet simulator and a discussion of
            how we use it to teach the internet
          stages:
            netsim:
              name: netsim
        csp-facilitators:
          title: CSP Tool Overview
          description: A collection of tools from the CS Principles course. These
            levels provide a glimpse into the tools we use throughout the curriculum
            to
          description_short: Introduction to CS Principles for new Facilitators
          description_audience: ''
          stages:
            Introduction to Events:
              name: მოვლენები - შესავალი
            Introduction to Text Compression:
              name: შესავალი ტექსტის შეკუმშვაში
            Turtle Programming:
              name: Turtle Programming
        cspassessment:
          title: CS Principles Culminating Assessment
          description: 'This 55-question multiple choice assessment covers questions
            across 7 big ideas of computer science: Creativity, Abstraction, Data,
            Algorithms, Programming, The Internet, and Global Impact. '
          description_short: This assessment has been deprecated and is scheduled
            for removal in Summer of 2017.
          description_audience: ''
          stages:
            CS Principles Culminating Assessment:
              name: CS Principles Culminating Assessment
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            CSP Longitudinal Contact Request:
              name: CSP Longitudinal Contact Request
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            "[Deprecated - teacher cannot see results] CSP Culminating Assessment":
              name: "[Deprecated - teacher cannot see results] CSP Culminating Assessment"
            'NOTE: Deprecated - teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated - teacher cannot see results. CSP Culminating
                Assessment'
            'NOTE: Deprecated. Teacher cannot see results. CSP Culminating Assessment':
              name: 'NOTE: Deprecated. Teacher cannot see results. CSP Culminating
                Assessment'
        cspexam1-mWU7ilDYM9:
          title: CS Principles Culminating Assessment - Part 1
          description: 'This 25 question multiple choice assessment covers questions
            across 7 big ideas of computer science: Creativity, Abstraction, Data,
            Algorithms, Programming, The Internet, and Global Impact.'
          description_short: This multiple choice assessment covers questions across
            7 big ideas of computer science. It is part 1 of a two-part 50 question
            exam.
          description_audience: ''
          stages:
            CS Principles Culminating Assessment Part 1:
              name: CS Principles Culminating Assessment Part 1
        cspexam2-AKwgAh1ac5:
          title: CS Principles Culminating Assessment - Part 2
          description: 'This 25 question multiple choice assessment covers questions
            across 7 big ideas of computer science: Creativity, Abstraction, Data,
            Algorithms, Programming, The Internet, and Global Impact.  It is part
            2 of a two-part 50 question exam'
          description_short: This multiple choice assessment covers questions across
            7 big ideas of computer science. It is part 2 of a two-part 50 question
            exam.
          description_audience: ''
          stages:
            CS Principles Culminating Assessment Part 2:
              name: CS Principles Culminating Assessment Part 2
        CSDU4-Draft:
          title: " TEMP CSD Unit 4 - The Design Process"
          description: Temp place to work on U4 of Disco
          description_short: Design Process and App Lab
          description_audience: ''
          stages:
            Adding Functionality (optional):
              name: Adding Functionality (optional)
            Design Mode:
              name: დიზაინის რეჟიმი
            Making it Interactive:
              name: Making it Interactive
            Analysis of Design:
              name: დიზაინის ანალიზი
            Understanding Your User:
              name: Understanding Your User
            Discovering Users:
              name: Discovering Users
            UCD Micro Activity:
              name: UCD Micro Activity
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Re-designing a Space:
              name: Re-designing a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            User Research:
              name: User Research
            Low Fidelity Prototyping:
              name: Low Fidelity Prototyping
            Preparing for Prototype Testing:
              name: Preparing for Prototype Testing
            Prototype Testing:
              name: პროტოტიპების ტესტირება
            Preparing for App Testing:
              name: მომზადება აპლიკაციების ტესტირებისთვის
            App Testing:
              name: აპლიკაციის ტესტირება
            Planning for Improvements:
              name: Planning for Improvements
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation Prep:
              name: მომზადება აპლიკაციის პრეზენტაციისათვის
            App Presentation:
              name: აპლიკაციის პრეზენტაცია
        CSDU1-Draft:
          title: " TEMP CSD Unit 1"
          description: Temp place to work on U1 of Disco
          description_short: Problem Solving
          stages:
            Exploring Apps:
              name: აპლიკაციების გამოკვლევა
            Processing Information:
              name: ინფორმაციის დამუშავება
        CSDU2-Draft:
          title: " TEMP CSD Unit 2"
          description: Temp place to work on U2 of Disco
          description_short: Web Development
          description_audience: ''
          stages:
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Describing Webpages:
              name: ვებგვერდების აღწერა
            Designing Code for Computers:
              name: Designing Code for Computers
            Digital Footprint:
              name: ციფრული ნაკვალევი
            Images on the Web:
              name: სურათები ვებში
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            Quality Websites:
              name: ხარისხიანი ვებსაიტები
            Text on the Web:
              name: ტექსტი ვებში
            Website Design:
              name: ვებსაიტის დიზაინი
            Intellectual Property:
              name: ინტელექტუალური ქონება
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            'Personal Website: Connecting Pages':
              name: 'პერსონალური ვებსაიტი: გვერდების დაკავშირება'
            Classes and External Style Sheets:
              name: Classes and External Style Sheets
            Box Model and Page Layout:
              name: Box Model and Page Layout
            'Personal Website: Midway Check':
              name: 'Personal Website: Midway Check'
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Introduction to HTML:
              name: შესავალი HTML-ში
            Headers and Lists:
              name: სათაურები და სიები
            Designing Web Pages:
              name: ვებ გვერდების დიზაინის შექმნა
            Holding:
              name: Holding
            Describing Web pages:
              name: Describing Web pages
            Multi-Page Websites:
              name: მრავალგვერდიანი ვებსაიტები
            Classes:
              name: კლასები
            External Style Sheets:
              name: External Style Sheets
            Usability and Accessibility:
              name: Usability and Accessibility
            Peer Review:
              name: თანატოლის კომენტარი
            Describing Web Pages:
              name: ვებ გვერდების აღწერა
        CSDU5-Draft:
          title: " TEMP CSD Unit 5"
          description: Temp place to work on U5 of Disco
          description_short: Data
          stage: []
          stages: []
        CSDU6-Draft:
          title: " TEMP CSD Unit 6 "
          description: Temp place to work on U6 of Disco
          description_short: Makerlab
          stage: []
          stages: []
        CSF_Secret_Sample_Story:
          title: Secret Sample with Story
          description: Test of new educational philosophy with guiding storyline
          description_short: This is a secret...shhhh
          description_audience: Ages 8-18+
          stages:
            Sample Stage:
              name: სატესტო დონე
        MikeTest:
          title: MikeTest
          description: Trying not to break anything
          description_short: Just a script for playing around
          description_audience: Ages 8-98
          stages:
            Artist Functions:
              name: მხატვრის ფუნქციები
            Sample Stage:
              name: სატესტო დონე
            The same thing with named levels:
              name: The same thing with named levels
            You are a coding STAR:
              name: თქვენ ხართ კოდის წერის ვარსკვლავი
        artistExemplar:
          title: Artist Exemplar
          description: These artist levels will knock the socks off of third graders
          description_short: How can we make the artist levels really hum?
          description_audience: 'ასაკი: 8-18'
          stages:
            Artist Exemplar:
              name: Artist Exemplar
        teachercon:
          title: TeacherCon Supports
          description: We will use this during TeacherCon to deliver supports and
            materials for sessions
          description_short: We will use this during TeacherCon to deliver supports
            and materials for sessions
          description_audience: ''
          stages:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: შესავალი Teachercon-ში
            Lesson 1,10:
              name: 'Lesson 1.10: Routers and Redundancy'
            Lesson 1,11:
              name: 'Lesson 1.11: Packets and Making a Reliable Internet'
            Lesson 1,4:
              name: 'Lesson 1.4: Number Systems (Circle Triangle Square)'
            Lesson 1,6:
              name: 'გაკვეთილი 1.6: რიცხვების გაგზავნა'
            Lesson 1,9:
              name: 'Lesson 1.9: Internet Addressing (Battleship)'
            Lesson 2,10:
              name: 'Lesson 2.10: Good and Bad Data Visualizations'
            Lesson 2,2:
              name: 'გაკვეთილი 2.2: ტექსტის შეკუმშვა'
            Lesson 2,3:
              name: 'გაკვეთილი 2.3: შავთეთრი პიქსელაცია'
            Measuring Student Learning:
              name: Measuring Student Learning
        kinderTest:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            'Bee: Conditionals':
              name: 'ფუტკარი: პირობითი ბრძანებები'
            Kindergarten Stage 1:
              name: საბავშვო ბაღის დონე 1
        gradeKinder:
          title: Kindergarten
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: დებაგირება
            Events:
              name: მოვლენები
            Events Unplugged:
              name: Events Unplugged
            Fuzz Fiesta:
              name: Fuzz Fiesta
            'Jigsaw: Learn to drag and drop':
              name: 'ფაზლი: ისწავლეთ გადმოტანა და ჩასმა'
            Loops:
              name: ციკლები
            Loops Intro:
              name: შესავალი ციკლებში
            Loops Unplugged:
              name: Loops Unplugged
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: პროგრამირება
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: მიმდევრობები და ალგორითმები
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
            'Programming Unplugged: Happy Maps':
              name: 'Programming Unplugged: Happy Maps'
        grade4:
          title: Grade 4
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 9-99
          stages:
            'Bee: Determine the Concept':
              name: 'ფუტკარი: გაარკვიეთ კონცეფცია'
            'Bee: Functions (Course 3)':
              name: 'ფუტკარი: ფუნქციები (კურსი 3)'
            Build a Star Wars Game!:
              name: ააწყვეთ ვარსკვლავური ომების თამაში!
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            Explore project ideas:
              name: პროექტების იდეების გამოკვლევა
            'Farmer: Functions (New)':
              name: 'ფერმერი: ფუნქციები (ახალი)'
            Final Project - Presentation Day:
              name: ფინალური პროექტი - პრეზენტაციის დღე
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            More Programming with Scratch:
              name: მეტრი პროგრამირება Scratch-ით
            'New Artist: Functions':
              name: 'New Artist: Functions'
            Scaffolded Project Stage (Loops, Events, Conditionals, Functions):
              name: Scaffolded Project Stage (Loops, Events, Conditionals, Functions)
            Songwriting:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            'Unplugged: Funky Functions':
              name: 'Unplugged: Funky Functions'
        grade1:
          title: Grade 1
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            Being Safe Online:
              name: Being Safe Online
            Debugging:
              name: დებაგირება
            Events:
              name: მოვლენები
            Events Unplugged:
              name: Events Unplugged
            'Jigsaw: Learn to drag and drop':
              name: 'ფაზლი: ისწავლეთ გადმოტანა და ჩასმა'
            Loops:
              name: ციკლები
            Loops Intro:
              name: შესავალი ციკლებში
            Loops Unplugged:
              name: Loops Unplugged
            More Computer Science:
              name: More Computer Science
            Persistence & Frustration:
              name: Persistence & Frustration
            Programming:
              name: პროგრამირება
            Programming Unplugged:
              name: Programming Unplugged
            Sequences & Algorithms:
              name: მიმდევრობები და ალგორითმები
            Unspotted Bugs:
              name: შეუჩმნეველი ბაგები
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Events Unplugged: The Big Event':
              name: 'Events Unplugged: The Big Event'
        grade5:
          title: Grade 5
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 10-110
          stages:
            'Artist: For Loops':
              name: 'მხატვარი: "მიზნისთვის" ციკლები'
            'Artist: Functions with Parameters':
              name: 'მხატვარი: ფუნქციები პარამეტრებით'
            'Artist: Variables':
              name: 'მხატვარი: ცვლადები'
            'Bee: For Loops':
              name: 'ფუტკარი: "მიზნისთვის" ციკლები'
            'Bee: Functions with Parameters':
              name: 'ფუტკარი: ფუნქციები პარამეტრებით'
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            Explore project ideas:
              name: პროექტების იდეების გამოკვლევა
            Final Project - Presentation Day:
              name: ფინალური პროექტი - პრეზენტაციის დღე
            Final Project - Review/Revise Day:
              name: Final Project - Review/Revise Day
            'Final Project - Unplugged: Design Process':
              name: 'Final Project - Unplugged: Design Process'
            'Final Project - Work Day: Build Project Online':
              name: 'Final Project - Work Day: Build Project Online'
            'Play Lab: Variables':
              name: 'თამაშების ლაბორატორია: ცვლადები'
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            'Unplugged: Envelope Variables':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ცვლადები კონვერტებში'
            'Unplugged: For Loop Fun':
              name: 'გაკვეთილი კომპიუტერის გარეშე: "მიზნისთვის" ციკლები სახალისოდ'
            'Unplugged: Songwriting with Parameters':
              name: 'გაკვეთილი კომპიუტერის გარეშე: სიმღერის წერა პარამეტრებით'
        ecs-unit1:
          title: ECS Part 1
          description: 'Unit 1: Human-Computer Interaction'
          description_short: 'Unit 1: Human-Computer Interaction'
          description_audience: ''
          stages:
            Unit 1, Day 10 Telling a Story with Data:
              name: სექცია 1, დღე 10 ამბის მოყოლა მონაცემებით
            Unit 1, Day 11-14 Data Modeling and Design:
              name: სექცია 1, დღე 11–14 მონაცემთა მოდელირება და დიზაინი
            Unit 1, Day 15-16 Computer Programs and Following Directions:
              name: Unit 1, Day 15-16 Computer Programs and Following Directions
            Unit 1, Day 17-19 What Is Intelligence?:
              name: სექცია 1, დღე 17-19 რა არის ინტელექტი?
            0: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            1: |-
              სექცია ერთი, დღეები 1–2
              რა არის კომპიუტერი?
            Unit 1, Days 3-4 Buying a Computer:
              name: სექცია 1, დღეები 3–4 კომპიუტერის ყიდვა
            Unit 1, Days 5-7 Searching and Web 2:
              name: Unit 1, Days 5-7 Searching and Web 2
            Unit 1, Days 8-9 Impact of Computers and Communication:
              name: სექცია 1, დღეები 8–9 კომპიუტერების გავლენა და კომუნიკაცია
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Wrap-up:
              name: შედეგები
        ecs-unit2:
          title: ECS Unit 2
          description: 'Unit 2: Problem Solving'
          description_short: 'Unit 2: Problem Solving'
          description_audience: ''
          stages:
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
            Getting Started:
              name: დაწყება
            Intro to Unit 2:
              name: სექცია 2–ის შესავალი
            Lesson Overviews:
              name: გაკვეთილის მიმოხილვები
            Teaching Strategies:
              name: სწავლების მეთოდები
            Unit 2 Challenge:
              name: გაძლიერებული სექცია 2
        ecs-unit3:
          title: ECS Unit 3
          description: 'Unit 3: Web Design'
          description_short: 'Unit 3: Web Design'
          description_audience: ''
          stages:
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
            Getting Started:
              name: დაწყება
            Intro to Unit 3:
              name: სექცია 3–ის შესავალი
            Teaching Strategies:
              name: სწავლების მეთოდები
            Unit 3 Challenge:
              name: გაძლიერებული სექცია 3
            Unit 3 Day-by-Day:
              name: სექცია 3 დღითი დღე სწავლა
        ecs-unit4:
          title: ECS Unit 4
          description: 'Unit 4: Programming'
          description_short: 'Unit 4: Programming'
          description_audience: ''
          stages:
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
            Getting Started:
              name: დაწყება
            Intro to Unit 4:
              name: სექცია 4–ის შესავალი
            Teaching Strategies:
              name: სწავლების მეთოდები
            Unit 4 Challenge:
              name: გაძლიერებული სექცია 4
            Unit 4 Day-by-Day:
              name: სექცია 4 დღითი დღე სწავლა
        ecs-unit5:
          title: ECS Unit 5
          description: 'Unit 5: Computer and Data Analysis'
          description_short: 'Unit 5: Computer and Data Analysis'
          description_audience: ''
          stages:
            Complete the Challenge:
              name: დაასრულეთ ეს გამოწვევა
            Getting Started:
              name: დაწყება
            Introduction to the Unit 5 Challenge:
              name: შესავალი მე-5-ე თავის გამოწვევაში
            Share out and Submit:
              name: Share out and Submit
            Unit 5 Overview:
              name: სექცია 5 მიმოხილვა
            Unit 5 lessons:
              name: სექცია 5 გაკვეთილები
            Unit 5 Challenge:
              name: მე-5 სექციის გამოწვევა
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
        ecs-unit6:
          title: ECS Unit 6
          description: 'Unit 6: Robotics'
          description_short: 'Unit 6: Robotics'
          description_audience: ''
          stages:
            Alternative Ideas for Unit 6:
              name: ალტერნატიული იდეები მე-6-ე თავისთვის
            Getting Started:
              name: დაწყება
            Share out and Submit:
              name: Share out and Submit
            Unit 6 Challenge:
              name: გაძლიერებული სექცია 6
            Unit 6 Overview:
              name: სექცია 6 მიმოხილვა
            Unit 6 lessons:
              name: სექცია 6 გაკვეთილები
            Close & Next Steps:
              name: დახურვა და შემდეგი საფეხურები
        grade3:
          title: Grade 3
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            " Bee: Conditionals":
              name: " ფუტკარი: პირობითი ბრძანებები"
            'Artist: Nested Loops':
              name: 'მხატვარი: ჩასმული ციკლები'
            Bee Debugging:
              name: ფუტკრის ბაგების გამოსწორება
            Bounce:
              name: Bounce
            Build a Game:
              name: შექმენით თამაში
            Farmer Conditional with Cards:
              name: Farmer Conditional with Cards
            Farmer Debug Relay Programming:
              name: Farmer Debug Relay Programming
            Farmer Graph Paper Programming:
              name: Farmer Graph Paper Programming
            Farmer Impacts of Computing:
              name: Farmer Impacts of Computing
            'Farmer: While Loops':
              name: ფერმერი - "სანამ" ციკლები
            'Maze: Conditionals with Loops':
              name: 'Maze: Conditionals with Loops'
            'Maze: Nested Loops':
              name: 'ლაბირინთი: ჩადგმული ციკლები'
            More Programming with CS4FN:
              name: მეტი პროგრამირება CS4FN-ით
            Robot Running the Farm:
              name: ფერმის მომვლელი რობოტი
            Unplugged Conditionals with Loops:
              name: Unplugged Conditionals with Loops
        alltheplcthings:
          title: Sample course for PLC things
          description: This is a sample course that has all of the plc special things.
            Enrollment in this course does nothing. Right now, it's just a copy of
            TeacherCon
          description_short: This is a sample course that has all of the plc special
            things
          description_audience: ''
          stages:
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Introduction to Teachercon:
              name: შესავალი Teachercon-ში
            Lesson 1,10:
              name: გაკვეთილი 1,10
            Lesson 1,11:
              name: გაკვეთილი 1,11
            Lesson 1,4:
              name: გაკვეთილი 1,4
            Lesson 1,6:
              name: გაკვეთილი 1,6
            Lesson 1,9:
              name: გაკვეთილი 1,9
            Lesson 2,10:
              name: გაკვეთილი 2,10
            Lesson 2,2:
              name: გაკვეთილი 2,2
            Lesson 2,3:
              name: გაკვეთილი 2,3
            Test stage with bubbles:
              name: ბუშტუკებიანი სატესტო დონე
        csd3:
          title: " TEMP CSD Unit 3 - Interactive Games and Animations"
          description: " In Unit 3, you’ll build on your coding experience as you
            program animations, interactive art, and games in Game Lab. The unit starts
            off with simple shapes and builds up to more sophisticated sprite-based
            games, using the same programming concepts and the design process computer
            scientists use daily. In the final project, you’ll develop a personalized,
            interactive program."
          description_short: " შეისწავლეთ ანიმაციების, ინტერაქტიული ხელოვნების ნიმუშების
            და თამაშების დაპროგრამება თამაშების ლაბორატორიაში."
          description_audience: ''
          stages:
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Complex Conditionals:
              name: რთული პირობითი ბრძანებები
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Draw Loop and Randomization:
              name: ხატვის ციკლი და შემთხვევითობა
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
              description_student: კლასი ეცნობა თამაშების ლაბორატორიას, ამ თავისთვის
                საჭირო პროგრამირების გარემოს და იწყებს მის გამოყენებას, რათა განალაგოს
                ფიგურები ეკრანზე. ეს გაკვეთილი მოიცავს მიმდევრობების და დებაგირების
                საფუძვლებს, ასევე რამდენიმე მცირე ბრძანებას. გაკვეთილის ბოლო კლასი
                შექმნის წინა დონეზე მათ მიერ შექმნილი სურათის ონლაინ ვერსიას.
              description_teacher: მოსწავლეები ეცნობიან თამაშების ლაბორატორიას, ამ
                თავისთვის საჭირო პროგრამირების გარემოს და იწყებენ მის გამოყენებას,
                რათა განალაგონ ფიგურები ეკრანზე. ეს გაკვეთილი მოიცავს მიმდევრობების
                და დებაგირების საფუძვლებს, ასევე რამდენიმე მცირე ბრძანებას. გაკვეთილის
                ბოლოს მოსწავლეები შექმნიან წინა დონეზე მათ მიერ შექმნილი სურათის ონლაინ
                ვერსიას.
            'Project: Interactive Card':
              name: 'პროექტი: ინტერაქტიული ბარათი'
            Sprites and Images:
              name: სპრაიტები და სურათები
            Sprites and Properties:
              name: სპრაიტები და თვისებები
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: ცვლადები და ანიმაცია
            Velocity:
              name: სიჩქარე
              description_student: მთვლელის ნიმუშის მუშაობის პრინციპის მოკლე განხილვის
                შემდეგ, კლასი გაეცნობა იმ თვისებებს, რომლებიც გამოიყენებიან სიჩქარის
                და მობრუნების სისწრაფის განსასაზღვრად. როგორც კი ისინი დაიწყებენ ამ
                თვისებების სხვადასხვაგვარად გამოყენებას, მოსწავლეები შეძლებენ საბაზისო
                side scroller ტიპის თამაშის შექმნას.
              description_teacher: მთვლელის ნიმუშის მუშაობის პრინციპის მოკლე განხილვის
                შემდეგ, მოსწავლეების გაეცნობიან იმ თვისებებს, რომლებიც გამოიყენებიან
                სიჩქარის და მობრუნების სისწრაფის განსასაზღვრად. როგორც კი ისინი დაიწყებენ
                ამ თვისებების სხვადასხვაგვარად გამოყენებას, მოსწავლეები შეძლებენ საბაზისო
                side scroller ტიპის თამაშის შექმნას.
            Collision Detection:
              name: შეჯახების აღმოჩენა
              description_student: The class learns about collision detection on the
                computer.  Pairs explore how a computer could use sprite location
                and size properties and math to detect whether two sprites are touching.  The
                class then uses the isTouching() block to create different effects
                when sprites collide, including playing sounds.  Last, they use their
                new skills to improve the sidescroller game that they started in the
                last lesson.
              description_teacher: Students learn about collision detection on the
                computer.  Working in pairs, they explore how a computer could use
                sprite location and size properties and math to detect whether two
                sprites are touching.  They then use the `isTouching()` block to create
                different effects when sprites collide, including playing sounds.  Last,
                they use their new skills to improve the sidescroller game that they
                started in the last lesson.
            Complex Sprite Movement:
              name: სპრაიტების რთული მოძრაობა
              description_student: 'The class learns to combine the velocity properties
                of sprites with the counter pattern to create more complex sprite
                movement, such as simulating gravity, making a sprite jump, and allowing
                a sprite to float left or right. In the final levels the class combine
                these movements to animate and control a single sprite and build a
                simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties
                of sprites with the counter pattern to create more complex sprite
                movement. In particular students will learn how to simulate gravity,
                make a sprite jump, and allow a sprite to float left or right. In
                the final levels of the Code Studio progression students combine these
                movements to animate and control a single sprite and build a simple
                game in which a character flies around and collects a coin. Students
                are encouraged to make their own additions to the game in the final
                level.
            Collisions:
              name: შეჯახებები
              description_student: The class programs their sprites to interact in
                new ways.  After a brief review of how they used the isTouching block,
                the class brainstorms other ways that two sprites could interact.  They
                then use isTouching to make one sprite push another across the screen
                before practicing with the four collision blocks (collide, displace,
                bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new
                ways.  After a brief review of how they used the `isTouching` block,
                students brainstorm other ways that two sprites could interact.  They
                then use `isTouching` to make one sprite push another across the screen
                before practicing with the four collision blocks (`collide`, `displace`,
                `bounce`, and `bounceOff`).
            Functions:
              name: ფუნქციები
              description_student: This lesson covers functions as a way to organize
                their code, make it more readable, and remove repeated blocks of code.
                The class learns that higher level or more abstract steps make it
                easier to understand and reason about steps, then begins to create
                functions in Game Lab.  At the end of the lesson the class uses these
                skills to organize and add functionality to the final version of their
                side scroller game.
              description_teacher: Students learn how to create functions to organize
                their code, make it more readable, and remove repeated blocks of code.
                An unplugged warmup explores how directions at different levels of
                detail can be useful depending on context. Students learn that higher
                level or more abstract steps make it easier to understand and reason
                about steps. Afterwards students learn to create functions in Game
                Lab. They will use functions to remove long blocks of code from their
                draw loop and to replace repeated pieces of code with a single function.
                At the end of the lesson students use these skills to organize and
                add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: თამაშის დიზაინის პროცესი
              description_student: This lesson introduces the process the class will
                use to design games for the remainder of the unit. The class walks
                through through this process in a series of levels. As part of this
                lesson the class also briefly learn to use multi-frame animations
                in Game Lab. At the end of the lesson they have an opportunity to
                make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process
                they will use to design games for the remainder of the unit. This
                process is centered around a project guide which asks students to
                define their sprites, variables, and functions before they begin programming
                their game. In this lesson students begin by playing a game on Game
                Lab where the code is hidden. They discuss what they think the sprites,
                variables, and functions would need to be to make the game. They are
                then given a completed project guide which shows one way to implement
                the game. Students are then walked through this process through a
                series of levels. As part of this lesson students also briefly learn
                to use multi-frame animations in Game Lab. At the end of the lesson
                students have an opportunity to make improvements to the game to make
                it their own.
            Using the Game Design Process:
              name: თამაშის დიზაინის პროცესის გამოყენება
              description_student: In this multi-day lesson, the class uses the problem
                solving process from Unit 1 to create a platform jumper game.  After
                looking at a sample game, the class defines what their games will
                look like and uses a structured process to build them.  Finally, the
                class reflects on how the games could be improved, and implements
                those changes.
              description_teacher: In this multi-day lesson, students use the problem
                solving process from Unit 1 to create a platform jumper game.  They
                start by looking at an example of a platform jumper, then define what
                their games will look like.  Next, they use a structured process to
                plan the backgrounds, variables, sprites, and functions they will
                need to implement their game.  After writing the code for the game,
                students will reflect on how the game could be improved, and implement
                those changes.
            'Project: Build a Game':
              name: 'პროექტი: შექმენი თამაში'
            'Project: Design a Game':
              name: 'პროექტი: შექმენით თამაშის დიზაინი'
            Programming for Entertainment:
              name: პროგრამირება გართობისათვის
              description_student: The class is asked to consider the "problems" of
                boredom and self expression, and to reflect on how they approach those
                problems in their own lives. From there, they will explore how Computer
                Science in general, and programming specifically, plays a role in
                either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of
                boredom and self expression, and to reflect on how they approach those
                problems in their own lives. From there, students will explore how
                Computer Science in general, and programming specifically, plays a
                role in either a specific form of entertainment or as a vehicle for
                self expression.
            Plotting Shapes:
              name: Plotting Shapes
              description_student: Students explore the challenges of communicating
                how to draw with shapes and use a tool that introduces how this problem
                is approached in Game Lab. The warm up activity quickly demonstrates
                the challenges of communicating position without some shared reference
                point. In the main activity students explore a Game Lab tool that
                allows students to interactively place shapes on Game Lab's 400 by
                400 grid. They then take turns instructing a partner how to draw a
                hidden image using this tool, accounting for many challenges students
                will encounter when programming in Game Lab. Students optionally create
                their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating
                how to draw with shapes and use a tool that introduces how this problem
                is approached in Game Lab. The warm up activity quickly demonstrates
                the challenges of communicating position without some shared reference
                point. In the main activity students explore a Game Lab tool that
                allows students to interactively place shapes on Game Lab's 400 by
                400 grid. They then take turns instructing a partner how to draw a
                hidden image using this tool, accounting for many challenges students
                will encounter when programming in Game Lab. Students optionally create
                their own image to communicate before a debrief discussion.
            Shapes and Randomness:
              name: ფიგურები და შემთხვევითობა
              description_student: This lesson extends the drawing skills to include
                width and height and introduces the concept of random number generation.
                The class learns to draw with versions of ellipse() and rect() that
                include width and height parameters and to use the background() block
                to fill the screen with color. At the end of the progression the class
                is introduced to the randomNumber() block and uses the new blocks
                to draw a randomized rainbow snake.
              description_teacher: In this lesson students continue to develop their
                drawing skills. At the beginning of the lesson a teacher-led discussion
                connects expanded block functionality (e.g. different sized shapes)
                with the need for more block inputs, or "parameters". Students learn
                to draw with versions of `ellipse()` and `rect()` that include width
                and height parameters. They also learn to use the `background()` block.
                At the end of the progression students are introduced to the `randomNumber()`
                block. Combining all of these skills students will draw a randomized
                rainbow snake at the end of the lesson.
            Variables:
              name: ცვლადები
              description_student: This lesson introduces variables as a way to label
                a number in a program or save a randomly generated value. The class
                begins the lesson with a very basic description of the purpose of
                a variable and practices using the new blocks.  Afterwards, the class
                uses variables to save a random number, allowing the programs to use
                the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables
                to label a number in their program or save a randomly generated value.
                Students begin the lesson with a very basic description of the purpose
                of a variable. Students then complete a level progression that reinforces
                the model of a variable as a way to label or name a number. Students
                use variables to save a random number to see that variables actually
                store or save their values, allowing them to use the same random number
                multiple times in their programs.
            Sprites:
              name: სპრაიტები
              description_student: In order to create more interesting and detailed
                images, the class is introduced to the sprite object. Every sprite
                can be assigned an image to show, and sprites also keep track of multiple
                values about themselves, which will prove useful down the road when
                making animations.  At the end of the lesson, everyone creates a scene
                using sprites.
              description_teacher: In order to create more interesting and detailed
                images, students are introduced to the sprite object. Every sprite
                can be assigned an image to show, and sprites also keep track of multiple
                values about themselves, which will prove useful down the road when
                making animations.
            The Draw Loop:
              name: ხატვის ციკლი
              description_student: This lesson introduces the draw loop, one of the
                core programming paradigms in Game Lab.  The class combines the draw
                loop with random numbers to manipulate some simple animations with
                dots and then with sprites. Afterwards, everyone uses what they learned
                to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw
                loop, one of the core programming paradigms in Game Lab. To begin
                the lesson students look at some physical flipbooks to see that having
                many frames with different images creates the impression of motion.
                Students then watch a video explaining how the draw loop in Game Lab
                helps to create this same impression in their programs. Students combine
                the draw loop with random numbers to manipulate some simple animations
                with dots and then with sprites. At the end of the lesson students
                use what they learned to update their sprite scene from the previous
                lesson.
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior
                of variables. Using notecards and string to simulate variables within
                a program, the class implements a few short programs. Once comfortable
                with this syntax, the class uses the same process with sprite properties,
                tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables
                through an unplugged activity. Using notecards and string to simulate
                variables within a program, students implement a few short programs.
                Once comfortable with this syntax, students use the same process with
                sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: სპრაიტების მოძრაობა
              description_student: By combining the Draw Loop and the Counter Pattern,
                the class writes programs that move sprites across the screen, as
                well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern,
                students write programs that move sprites across the screen, as well
                as animate other sprite properties.
            Conditionals:
              name: პირობითი ბრძანებები
              description_student: The class starts by using booleans to compare the
                current value of a sprite property with a target value, using that
                comparison to determine when a sprite has reached a point on the screen,
                grown to a given size, or otherwise reached a value using the counter
                pattern. After using booleans directly to investigate the values or
                sprite properties, the class adds conditional if statements to write
                code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the
                current value of a sprite property with a target value, using that
                comparison to determine when a sprite has reached a point on the screen,
                grown to a given size, or otherwise reached a value using the counter
                pattern. After using booleans directly to investigate the values or
                sprite properties, students add conditional _if_ statements to write
                code that responds to those boolean comparisons.
            Keyboard Input:
              name: კლავიატურიდან შეყვანილი ინფორმაცია
              description_student: Following the introduction to booleans and if statements
                in the previous lesson, students are introduced to a new block called
                keyDown() which returns a boolean and can be used in conditionals
                statements to move sprites around the screen. By the end of this lesson
                students will have written programs that take keyboard input from
                the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_
                statements in the previous lesson, students are introduced to a new
                block called `keyDown()` which returns a boolean and can be used in
                conditionals statements to move sprites around the screen. By the
                end of this lesson students will have written programs that take keyboard
                input from the user to control sprites on the screen.
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional
                statements to take user input. In addition to the simple keyDown()
                command learned yesterday, the class learns about several other keyboard
                input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways
                to use conditional statements to take user input. In addition to the
                simple `keyDown()` command learned yesterday, students will learn
                about several other keyboard input commands as well as ways to take
                mouse input.
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic,
                as well as conditional statements. The class starts by playing a simple
                game of Stand Up, Sit Down in which the boolean (true/false) statements
                describe personal properties (hair or eye color, clothing type, age,
                etc). The class then groups objects based on increasingly complex
                boolean statements, then looks at how conditionals can impact the
                flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.

                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.

                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Project - Interactive Card:
              name: პროექტი - ინტერაქტიული ბარათი
              description_student: In this cumulative project for Chapter 1, the class
                plans for and develops an interactive greeting card using all of the
                programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students
                plan for and develop an interactive greeting card using all of the
                programming techniques they've learned to this point.
            Project - Design a Game:
              name: პროექტი - შექმენით თამაშის დიზაინი
              description_student: The class plans and builds original games using
                the project guide from the previous two lessons. Working individually
                or in pairs, the class plans, develops, and gives feedback on the
                games.  After incorporating the peer feedback, the class shares out
                the completed games.
              description_teacher: Students will plan and build their own game using
                the project guide from the previous two lessons to guide their project.
                Working individually or in pairs, students will first decide on the
                type of game they'd like to build, taking as inspiration a set of
                sample games. They will then complete a blank project guide where
                they will describe the game's behavior and scope out the variables,
                sprites, and functions they'll need to build. In Code Studio, a series
                of levels prompts them on a general sequence they can use to implement
                this plan. Partway through the process, students will share their
                projects for peer review and will incorporate feedback as they finish
                their game. At the end of the lesson, students will share their completed
                games with their classmates. This project will span multiple classes
                and can easily take anywhere from 3-5 class periods.
            Parameters and Randomization:
              name: Parameters and Randomization
            Shapes and Randomization:
              name: Shapes and Randomization
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
        grade2:
          title: Grade 2
          description: Planning Script for CSF 2.0
          description_short: Planning Script for CSF 2.0
          description_audience: Ages 5-18
          stages:
            At The Dog Park:
              name: At The Dog Park
            Caring for My New Pet:
              name: Caring for My New Pet
            Exploring the Neighborhood:
              name: Exploring the Neighborhood
            Flappy:
              name: Flappy
            Getting Loopy with Puppy:
              name: Getting Loopy with Puppy
            Make a Dog Tag:
              name: Make a Dog Tag
            More CS with Run Marco:
              name: More CS with Run Marco
            New Home for My Pet:
              name: ახალი სახლი ჩემი საყვარელი ცხოველისთვის
            Online Internet Safety:
              name: ონლაინ ინტერნეტ უსაფრთხოება
            Online My New Pet Jigsaw:
              name: Online My New Pet Jigsaw
            Puppy Event:
              name: ლეკვის მოვლენა
            Puppy Introduction:
              name: ლეკვის შესავალი
            Puppy Loops:
              name: ლეკვის ციკლები
            How to behave in the lab_How to use Code_org puzzles:
              name: How to behave in the lab/How to use Code.org puzzles
            Programming at home with my pet:
              name: Programming at home with my pet
            Binary Bracelets:
              name: ორობითი სამაჯურები
            'Real-life Algorithms: Paper Planes':
              name: 'ცხოვრებისეული ალგორითმები: ქაღალდის თვითმფრინავები'
            The Big Event:
              name: დიდი მოვლენა
        transferring-over:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            20-hr Stage 2:
              name: 20–სთ დონე 2
            20-hr Stage 9:
              name: 20–სთ დონე 9
            Course 2 Stage 17:
              name: კურსი 2 დონე 17
            Course 3 Stage 16:
              name: კურსი 3 დონე 16
            Course 3 Stage 17:
              name: კურსი 3 დონე 17
        k5concepts:
          title: K5 Concepts
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Binary:
              name: ორობითი
            Conditionals:
              name: პირობითი ბრძანებები
            Events:
              name: მოვლენები
            For Loops:
              name: '"მიზნისთვის" ციკლები'
            Functions:
              name: ფუნქციები
            Functions with Parameters:
              name: ფუნქციები პარამეტრებით
            Loops:
              name: ციკლები
            Nested Loops:
              name: ჩასმული ციკლები
            Variables:
              name: ცვლადები
            While Loops:
              name: '"სანამ" ციკლები'
        algebrapdnext:
          title: Computer Science in Algebra PD Phase 2
          description: Teach Algebra through Functional Programming
          description_short: "\\tPhase 3: School Year Support"
          description_audience: ''
          stages:
            Lesson Prep:
              name: გაკვეთილისთვის მომზადება
            Teacher Dashboard:
              name: მასწავლებლის მართვის პანელი
            Teaching with Puzzles:
              name: სწავლება თავსატეხების საშუალებით
            Teaching with the Design Recipe:
              name: Teaching with the Design Recipe
            The Design Recipe:
              name: დიზაინის რეცეპტი
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
        csp-pre-survey:
          title: CS Principles Pre-Survey
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Anonymous student pre-survey:
              name: მოსწავლეთა ანონიმური წინარეგამოკითხვა
            NEW Unit 1 Chapter 1 Assessment:
              name: NEW Unit 1 Chapter 1 Assessment
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            Unit 4 Chapter 1 Assessment:
              name: Unit 4 Chapter 1 Assessment
            'Anonymous student survey: Taking the AP exam':
              name: 'Anonymous student survey: Taking the AP exam'
        csd1:
          title: 'CSD Unit 1 - Problem Solving: Computers and Logic'
          description_short: "  შეისწავლეთ თუ როგორ მუშაობენ ადამიანები კომპიუტერთან
            პრობლემების გადასაჭრელად."
          description: |2
             \r
            Unit 1 is a highly interactive and collaborative introduction to the field of computer science, as framed within the broader pursuit of solving problems. You’ll practice using a problem solving process to address a series of puzzles, challenges, and real world scenarios. Next, you’ll learn how computers input, output, store, and process information to help humans solve problems.  The unit concludes with a project in which you design an application that helps solve a problem of your choosing.\r
          description_audience: ''
          stages:
            Intro to Problem Solving:
              name: შესავალი პრობლემების გადაწყვეტაში
              description_student: 'The class works in groups to design aluminum foil
                boats that will support as many pennies as possible.  At the end of
                the lesson groups reflect on their experiences with the activity and
                make connections to the types of problem solving they will be doing
                for the rest of the course. '
              description_teacher: 'In this lesson, students work in groups to design
                aluminum foil boats that will support as many pennies as possible.
                Groups have two rounds to work on their boats, with the goal of trying
                to hold more pennies than they did in round 1. The structure of the
                activity foreshadows different steps of the problem solving process
                that students will be introduced to in more detail in the following
                lesson. At the end of the lesson students reflect on their experiences
                with the activity and make connections to the types of problem solving
                they will be doing for the rest of the course. '
            The Problem Solving Process:
              name: პროებლემების გადაჭრის პროცესი
              description_student: This lesson introduces the formal problem solving
                process that the class will use over the course of the year, Define
                - Prepare - Try - Reflect.  The class relates these steps to the aluminum
                boats problem from the previous lesson, then a problem they are good
                at solving, then a problem they want to improve at solving. At the
                end of the lesson the class collects a list of generally useful strategies
                for each step of the process to put on posters that will be used throughout
                the unit and year.
              description_teacher: This lesson introduces the formal problem solving
                process that students will use over the course of the year, Define
                - Prepare - Try - Reflect. The lesson begins by asking students to
                brainstorm all the different types of problems that they encounter
                in everyday life. Students are then shown the four steps of the problem
                solving process and work together to relate these abstract steps to
                their actual experiences solving problems. First students relate these
                steps to the aluminum boats problem from the previous lesson, then
                a problem they are good at solving, then a problem they want to improve
                at solving. At the end of the lesson the class collects a list of
                generally useful strategies for each step of the process to put on
                posters that will be used throughout the unit and year.
            Exploring Problem Solving:
              name: Exploring Problem Solving
              description_student: 'ამ გაკვეთილში კლასი იყენებს პრობლემის გადაწყვეტის
                პროცესს სამი პრობლემის გადასაწყვეტად: სიტყვის ძებნა, დაბადების დღის
                წვეულების დასაგეგმარებელი კრები და მოგზაურობის დაგეგმარება. ეს პრობლემები
                მიმდევრულად რთულდება და ცუდადაა აღწერილი, რათა ხაზი გავუსვათ იმას,
                თუ რამდენად არის პრობლემების გადაწყვეტის პროცესი გამოყენებადი ამ სახის
                პრობლემებთან მუშაობისას.'
              description_teacher: |-
                In this lesson students apply the problem solving process to three different problems in order to better understand the value of each step. They will solve a word search, arrange seating for a birthday party, and plan a trip. The problems grow increasingly complex and poorly defined to highlight how the problem solving process is particularly helpful when tackling these types of problems. The lesson concludes with students reflecting on their experience with the problem solving process. They will justify the inclusion of each step and will brainstorm questions or strategies that can help them better define open-ended problems, as this is often the most critical step.

                This lesson will likely take two class periods or more to complete. The first two problems may fit into a single class period but the third will need to be moved to a second day.
            What is a Computer?:
              name: რა არის კომპიუტერი?
              description_student: In this lesson the class develops a preliminary
                definition of a computer. After brainstorming the possible definitions
                for a computer, the class works in groups to sort pictures into “is
                a computer” or “is not a computer” on poster paper and explain their
                motivations for choosing some of the most difficult categorizations.  The
                teacher then introduces a definition of the computer and allows groups
                to revise their posters according to the new definition.
              description_teacher: 'In this lesson students develop a preliminary
                definition of a computer. To begin the lesson, the class will brainstorm
                possible definitions for a computer and place the results of this
                brainstorm on the board. Next, students will work in groups to sort
                pictures into “is a computer” or “is not a computer” on poster paper.
                Groups will place their posters around the room and briefly explain
                their motivations for choosing some of their most difficult categorizations.  The
                teacher will then introduce a definition of the computer and allow
                students to revise their posters according to the new definition.  '
            Representing Information:
              name: ინფორმაციის წარმოდგენა
            Processing with Bits:
              name: დამუშავება ბიტებით
            Human vs. Computer Processing:
              name: ადამიანი კომპიუტერული დამუშავების წინააღმდეგ
            Processing with Apps:
              name: დამუშავება აპლიკაციებით
            'Project: Apps and Problem Solving':
              name: 'პროექტი: აპლიკაციები და პრობლემების გადაჭრა'
            Human vs Computer Processing:
              name: ადამიანი კომპიუტერული დამუშავების წინააღმდეგ
            Input and Output:
              name: შეყვანილი და მიღებული ინფორმაცია
              description_student: In this the class students consider a number of
                computing devices to determine what types of inputs and outputs they
                use. Groups are assigned to a computing device and based on a teacher-provided
                definition of input and output, list the inputs and outputs of their
                device.  To conclude the lesson the class examines common activities
                they do on a computing device and select the inputs and outputs used
                for that activity from the chart.
              description_teacher: In this lesson students consider a number of computing
                devices to determine what types of inputs and outputs they use. Groups
                are assigned to a computing device and based on a teacher-provided
                definition of input and output, list the inputs and outputs of their
                device. Earlier in the activity students are prompted to focus on
                more obvious physical inputs and outputs (e.g. a keyboard as an input
                or a screen as an output) but later discussions lead students to consider
                less obvious examples (e.g. that a touch screen is both an input and
                output, or the fact that the Internet can serve as both input and
                output). Throughout the lesson the teacher records inputs and outputs
                that are identified on a T-Chart at the front of the room. To conclude
                the lesson students examine common activities they do on a computing
                device and select the inputs and outputs used for that activity from
                the chart.
            Processing:
              name: დამუშავება
              description_student: This lesson dives deeper into the concept of processing
                that was introduced as part of the definition of a computer.  Pairs
                work together to puta deck of cards in order, a form of processing
                information.  In the end, the class discusses what processing means
                within the context of solving information problems.
              description_teacher: Students complete two unplugged card sorting activities
                to explore the meaning of processing and its relationship to problem-solving.
                The first has few constraints and is used to introduce a high-level
                definition of processing. The next introduces more constraints that
                forces students to develop an algorithm that will always successfully
                process the cards. Students iteratively develop, test, and share their
                algorithms with classmates. A wrap-up discussion has students reflect
                on the different types of problem-solving they used in these activities
                and the value of producing an algorithm to solve a problem.
            Storage:
              name: საცავი
              description_student: This lesson focuses on the storage component of
                the definition of a computer, within the content of processing information.
                The class spends the majority of the lesson developing and sharing
                algorithms to process information, with an emphasis on how much storage
                is needed for any particular algorithm. The lesson concludes with
                a discussion of the importance of storage while processing information.
              description_teacher: Students explore the importance of storage within
                the Input-Storage-Processing-Output model of a computer. The warm-up
                activity asks students to reflect on the types of information they
                have seen computers store in the past, like documents, photographs,
                or videos. The unplugged main activity has students develop an algorithm
                to process a small pile of cards in search of specific cards within
                the deck. Constraints on how students can move the cards force them
                to consider the importance of storage even while they are processing
                the deck. The lesson concludes with a discussion of the two types
                of storage students saw in this lesson and the importance of storage
                while processing information.
            Apps and Problem Solving:
              name: აპლიკაციები და პრობლემების გადაჭრა
              description_student: 'This lesson covers the input and output aspects
                of computers in a context that is relevant and familiar to students:
                apps. The class evaluates various web applications to analyze the
                specific problems that they were designed to solve, the inputs that
                they need to work, and the outputs they provide to users. The class
                concludes with observations of these apps as well as a teacher led
                discussion about the impact of apps on society. '
              description_teacher: 'This lesson covers the input and output aspects
                of computers in a context that is relevant and familiar to students:
                apps. In pairs, students evaluate various web applications to analyze
                the specific problems that they were designed to solve, the inputs
                that they need to work, and the outputs they provide to users. The
                class concludes with observations of these apps as well as a teacher
                led discussion about the impact of apps on society. '
            Project - Propose an App:
              name: პროექტი - შემოგვთავაზეთ აპლიკაცია
              description_student: To conclude the study of the problem solving process
                and the input/output/store/process model of a computer, the class
                proposes apps designed to solve real world problems. This project
                is completed across multiple days and culminates in a poster presentation
                highlighting the features of each app. The project is designed to
                be completed in pairs though it can be completed individually.
              description_teacher: To conclude their study of the problem solving
                process and the input/output/store/process model of a computer, students
                will propose an app designed to solve a real world problem. This project
                will be completed across multiple days and will result in students
                creating a poster highlighting the features of their app that they
                will present to their classmates. A project guide provides step by
                step instructions for students and helps them organize their thoughts.
                The project is designed to be completed in pairs though it can be
                completed individually.
            CS Discoveries Pre-survey:
              name: CS Discoveries Pre-survey
            CS Discoveries Rapid Survey:
              name: CS Discoveries Rapid Survey
        csp-online-test:
          title: test space for csp online support
          description_short: This is a sample course for testing csp online pd
          description: This is a test space for online pd. Enrollment in this course
            does nothing.
          description_audience: ''
          stages:
            Unit 1 Overview:
              name: სექცია 1 - მიმოხილვა
            'Lessons 2-3: Binary Messages':
              name: 'გაკვეთილები 2-3: ორობითი წერილები'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            'Lessons 4-6: Encoding and Sending Numbers':
              name: 'გაკვეთილები 4-6: რიცხვების კოდირება და გაგზავნა'
            'Lesson 7: Encoding and Sending Text':
              name: 'გაკვეთილი 7: ტექსტის კოდირება და გაგზავნა'
            'lessons 9: Internet Addressing':
              name: 'გაკვეთილი 9: ინტერნეტ დამისამართება'
            'lessons 10: Routers and Redundancy':
              name: 'lessons 10: Routers and Redundancy'
            'lessons 11-12: Protocols and Abstraction':
              name: 'გაკვეთილები 11-12: პროტოკოლები და აბსტრაქცია'
            'Lessons 2 - 3: Binary Messages':
              name: 'გაკვეთილები 2-3: ორობითი წერილები'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'გაკვეთილები 4 - 6: რიცხვების კოდირება და გაგზავნა'
            'Lesson 9: Internet Addressing':
              name: 'გაკვეთილი 9: ინტერნეტ დამისამართება'
            'Lessons 10 - 11: Redundancy and Packets':
              name: 'Lessons 10 - 11: Redundancy and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'გაკვეთილები 1 - 2: ბაიტები, ფაილების ზომები და ტექსტის შეკუმშვა'
            'Lessons 3 - 4 : Encoding Images':
              name: 'გაკვეთილები 3 - 4 : სურათების კოდირება'
            'Lesson 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'გაკვეთილები 5 -6: შეკუმშვის ფორმატები და თქვენი საკუთარი კოდირების
                სქემის შემუშავება'
            'Lessons 7 - 11: Interpreting Visual Data':
              name: 'გაკვეთილები 7 - 11: ვიზუალური მონაცემების ინტერპრეტირება'
            'Lessons 12 - 15: Communicating with Visualizations':
              name: 'გაკვეთილები 12 - 15: კომუნიკაცია ვიზუალიზაციებთან'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'გაკვეთილები 7 - 10: ვიზუალური მონაცემების ინტერპრეტირება'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'გაკვეთილები 11 - 15: კომუნიკაცია ვიზუალიზაციებთან'
            Unit 2 Overview:
              name: სექცია 2 მიმოხილვა
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'გაკვეთილი 5 -6: შეკუმშვის ფორმატები და თქვენი საკუთარი კოდირების
                სქემის შემუშავება'
            Unit 3 Overview:
              name: სექცია 3 მიმოხილვა
            'Lessons 1 - 3: Algorithms':
              name: 'გაკვეთილები 1 - 3: ალგორითმები'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'გაკვეთილები 4 - 6: პროცედურული აბსტრაქცია და ზემოდან-ქვემოთ დიზაინი'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'გაკვეთილები 7 - 9: დოკუმენტაცია, მარტივი ციკლები და შემთხვევითი
                რიცხვები'
            Event Driven Programming:
              name: მოვლენებზე დაფუძნებული პროგრამირება
            Variables and Strings:
              name: ცვლადები და რიგები
            Conditionals and Boolean Logic:
              name: პირობითი ბრძანებები და ბულის ლოგიკა
            While Loops and Introduction to Arrays:
              name: While ციკლები და შესავალი მასივებში
            Processing Arrays and Functions with Return Values:
              name: მასივების დამუშავება და ფუნქციები დასაბრუნებელი მნიშვნელობებით
            Unit 5 Overview:
              name: სექცია 5 მიმოხილვა
        csp1-support:
          title: CSP Unit 1 Online Support
          description_short: TeacherSupports for CSP unit 1
          description: This is a set of online supports of CSP teachers preparing
            to teach Unit 1.
          description_audience: ''
          stages:
            Unit 1 Overview:
              name: სექცია 1 - მიმოხილვა
            'Lessons 2 - 3: Binary Messages':
              name: 'გაკვეთილები 2-3: ორობითი წერილები'
            'Lessons 4 - 6: Encoding and Sending Numbers':
              name: 'გაკვეთილები 4 - 6: რიცხვების კოდირება და გაგზავნა'
            'Lesson 7: Encoding and Sending Text':
              name: 'გაკვეთილი 7: ტექსტის კოდირება და გაგზავნა'
            'Lesson 9: Internet Addressing':
              name: 'გაკვეთილი 9: ინტერნეტ დამისამართება'
            'Lessons 10 - 11: Routers, Redundancy, and Packets':
              name: 'Lessons 10 - 11: Routers, Redundancy, and Packets'
            'Lessons 12 - 13: Abstraction on the Internet':
              name: 'Lessons 12 - 13: Abstraction on the Internet'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        basketball:
          title: აირჩიეთ თქვენი გუნდი და შექმენით კალათბურთის თამაში
          description_audience: ''
          description_short: აირჩიეთ თქვენი გუნდი და შექმენით კალათბურთის თამაში
          description: აირჩიეთ თქვენი გუნდი და შექმენით კალათბურთის თამაში
          stages:
            Bounce:
              name: Bounce
        sample-csp5:
          stages:
            Controlling Memory with Variables:
              name: მეხსიერების გაკონტროლება ცვლადებით
        hoc-encryption:
          title: 'Hour of Code: Simple Encryption'
          description_audience: ''
          description_short: In this lesson, students are introduced to the need for
            encryption and simple techniques for breaking (or cracking) secret messages.
          description: In this lesson, students are introduced to the need for encryption
            and simple techniques for breaking (or cracking) secret messages.
          stages:
            Simple Encryption:
              name: მარტივი შიფრირება
        fesbinary:
          title: ორობითი
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Binary Bracelets:
              name: ორობითი სამაჯურები
            Binary Images:
              name: ორობითი სურათები
            Binary Artist Puzzles:
              name: ორობითი მხატვრის თავსატეხები
            RGB Color:
              name: RGB ფერი
            Processing with Bits:
              name: დამუშავება ბიტებით
        csd2:
          title: 'CSD Unit 2 - The Internet: Web Development'
          description_audience: ''
          description_short: "  ისწავლეთ თქვენი საკუთარი საიტის აწყობა ვებ ლაბორატორიაში."
          description: " In Unit 2, you’ll learn how to create and share the content
            on your own web pages. After deciding what content you want to share with
            the world, you’ll learn how to structure and style your pages using HTML
            and CSS. You’ll also practice valuable programming skills such as debugging
            and commenting.  By the end of the unit, you’ll have a personal website
            that you can publish to the Internet."
          stages:
            new stage:
              name: ახალი დონე
            Quality Websites:
              name: ხარისხიანი ვებსაიტები
            Website Design:
              name: ვებსაიტის დიზაინი
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: ტექსტი ვებში
            Images on the Web:
              name: სურათები ვებში
            Clean Code and Debugging:
              name: Clean Code and Debugging
              description_student: ეს დონე მოიცავს პრობლემებს, რომლებიც ხშირად იჩენენ
                თავს HTML ვებ გვერდების დიზაინის დროს. კლასი შეასწორებს შეცდომებს
                მიმდევრობითად გართულებად ვებ გვერდებში, რომლებიც Code Studio-ზე არიან
                განთავსებულნი. კლასი ასევე შეისწავლის კომენტარების, ცარიელი ტექსტური
                სივრცეების და ინდენტაციის მნიშვნელობას და პრაქტიკულობას ვებ გვერდების
                წაკითხვადობის გასაუმჯობესებლად.
              description_teacher: In this lesson students will deal with common issues
                that arise when designing web pages in HTML. Students will correct
                errors in a sequence of increasingly complex web pages found on Code
                Studio. In the process they will learn the importance of comments,
                whitespace, and indentation as tools for making web pages easier to
                read. At the end of the lesson students create a list of strategies
                for debugging web pages and ensuring they are easy to read and maintain.
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            Multi-Page Websites:
              name: მრავალგვერდიანი ვებსაიტები
            Classes:
              name: კლასები
            External Style Sheets:
              name: External Style Sheets
            Peer Review:
              name: თანატოლის კომენტარი
            Box Model and Page Layout:
              name: Box Model and Page Layout
            Digital Footprint:
              name: ციფრული ნაკვალევი
              description_student: This lesson takes a step back from creating the
                personal website to talk about personal information people choose
                to share digitally.  The class begins by discussing what types of
                information are good to share with other people, then looks at several
                sample social media pages to see what types of personal information
                could be shared intentionally or unintentionally.  Finally, the class
                comes up with a set of guidelines to follow when putting information
                online.
              description_teacher: |-
                As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r
                \r
                Students begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r
                \r
                The ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web.
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
              description_student: After first completing a web search scavenger hunt,
                the class learns about the inner workings of search engines and has
                an opportunity to flex their analytical skills in a search for strange
                and unlikely animals.
              description_teacher: This lesson encourages students to think more critically
                about how web searches work and how to find relevant and trustworthy
                information online. After viewing and discussion a video about how
                search engines work, students will search for information about several
                unlikely animals. They'll need to analyze the sites they find for
                reliability in order to identify which of the animals is actually
                a hoax.
            Intellectual Property:
              name: ინტელექტუალური ქონება
            'Personal Website: Finalizing Site':
              name: 'Personal Website: Finalizing Site'
            'Project: Personal Portfolio Website':
              name: 'პროექტი: პირადი პორტფოლიოს ვებსაიტი'
            Images in HTML:
              name: სურათები HTML-ში
            Styling Text with CSS:
              name: ტექსტის გასტილვა CSS-ით
              description_student: ეს დონე წარმოგიდგენთ CSS-ს, როგორც გვერდის ელემენტების
                სტილის განსაზღვრის გზას. კლასი შეისწავლის CSS წესების საბაზისო სინტაქსს
                და გამოიკვლევს თვისებებს, რომლებიც ზემოქმედებენ HTML ტექსტური ელემენტებზე.
                საბოლოოდ, ყველა გამოიყენებს ტექსტურ სტილებს საკუთარ პირად ვებსაიტებზე.
              description_teacher: ეს დონე წარმოგიდგენთ CSS-ს, როგორც გვერდის ელემენტების
                სტილის განსაზღვრის გზას. კლასი შეისწავლის CSS წესების საბაზისო სინტაქსს
                და გამოიკვლევს თვისებებს, რომლებიც ზემოქმედებენ HTML ტექსტური ელემენტებზე.
                ისინი იმუშავებენ HTML გვერდზე, რომელიც გვიამბობს გინესის რეკორდების
                მფლობელებზე, კერძოდ კი დაამატებენ მოწოდებულ გვერდს თავის სტილებს.
                ბოლო დონეზე, მოსწავლეები გამოიყენებენ ახალ ინფორმაციას საკუთარ პირად
                ვებ გვერდზე ტექსტური ელემენტების სტილების განსასაზღვრად.
            Styling Elements with CSS:
              name: ელემენტების გასტილვა CSS-ით
              description_student: This lesson continues the introduction to CSS style
                properties, this time focusing more on non-text elements. The class
                begins by investigating and modifying the new CSS styles on a Desserts
                of the World page. Afterwards, everyone applies this new knowledge
                to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style
                properties, this time focusing more on non-text elements. Students
                begin this lesson by looking at a website about Desserts of the World.
                They investigate and modify the new CSS styles on this website, adding
                their own styles to the page. After working on the Desserts page,
                students apply their knowledge of new CSS properties to do more styling
                of their personal websites.
            Exploring Websites:
              name: ვებსაიტების გამოკვლევა
              description_student: This lesson covers the purposes that a website
                might serve, both for the users and the creators. The class explores
                a handful of the most-used websites in the United States and discusses
                how each of those sites is useful for users and how it might also
                serve its creators.
              description_teacher: ყოველ ვებსაიტს აქვს დანიშნულება, მიზანი რომლისთვისაც
                ის ვიღაცამ შექმნა და ვიღაცა იყენებს. ამ გაკვეთილში, მოსწავლეები დაიწყებენ
                საიტის შესაძლო დანიშნულებების გათვალისწინებას, როგორც მომხმარებლების,
                ასევე შემქნელების მხრიდან. მოსწავლეები გამოიკვლევენ რამდენიმე ამერიკის
                შეერთებულ შტატებში ყველაზე მეტად გამოყენებად ვებსაიტს და ეცდებიან
                გაიგონ თუ რა მხრივ არიან ისინი გამოყენებადი მომხარებლებისთვის და როგორ
                შეიძლება ემსახურონ თავიანთ შექმნელებს.
            'Websites for Expression ':
              name: 'ვებსაიტები გამოხატვისათვის '
              description_student: 'This lesson introduces websites as a means of
                personal expression.  The class first discusses different ways that
                people express and share their interests and ideas, then looks at
                a few exemplar websites made by students from a previous course. Finally
                everyone brainstorms and shares a list of topics and interests to
                include, creating a resource for developing a personal website in
                the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use
                websites as a means of personal expression and develop a list of topics
                and interests that they would want to include on a personal website.
                To begin the lesson students brainstorm different ways that people
                express and share their interests and ideas. Students then look at
                a few exemplar websites made by students from a previous CS Discoveries
                course to identify ways they are expressing their ideas. Finally students
                brainstorm and share a list of topics and interests they might want
                to include on a personal website which they can reference for ideas
                as they progress through the unit.
            Intro to HTML:
              name: შესავალი HTML-ში
              description_student: This lesson introduces to HTML as a solution to
                the problem of how to communicate both the content and structure of
                a website to a computer. The lesson begins with a brief unplugged
                activity demonstrating the challenges of effectively communicating
                the structure of a web page. The class looks at an HTML page in Web
                Lab and discusses how HTML tags help solve this problem, then uses
                HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as
                a solution to the problem of how to communicate both the content and
                structure of a website to a computer. The lesson begins with a brief
                unplugged activity demonstrating the challenges of effectively communicating
                the structure of a web page. Students then look at an exemplar HTML
                page in Web Lab and discuss with their classmates how HTML tags help
                solve this problem. Students then write their first HTML. A wrap-up
                discussion helps to solidify the understanding of content vs. structure
                that was developed throughout the lesson.
            Headers:
              name: ჰედერები
              description_student: This lesson continues the introduction to HTML
                tags, this time with headers.  The class practices using header tags
                to create page and section titles and learns how the different header
                elements are displayed by default.  Next, the class plans how to organize
                their content on the personal web pages that will be built across
                the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to
                structure text on web pages, this time with headers.  Students learn
                how the different header elements are displayed by default and practice
                using them to create page and section titles.  Students then start
                to decide how they will organize their content on their own personal
                web pages.  In the last level, students begin the project that they
                will continue to work on throughout the unit.
            Lists:
              name: სიები
              description_student: ეს დონე წარმოგვიდგენს დალაგებულ და დაულაგებელ სიებს
                და შესაბამის  &lt;ul&gt;, &lt;ol&gt;, და &lt;li&gt; HTML ტეგებს. კლასი
                ვარჯიშობს ტეგების გამოყენებაზე, შემდეგ კი უბრუნდება პირადი ვებ გვერდის
                პროექტს, რათა დაამატოთ ახალი HTML გვერდი, რომლებიც შეიცავს ახალ ტაგებს.
              description_teacher: Students are introduced to ordered and unordered
                lists in HTML and work through a few levels in which they use the
                &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; tags.  They then go back to
                their project, where they add a new HTML page.  Inside the new page,
                they write the HTML to display a recipe, top ten list, or any other
                content that uses the new tags that they have learned.
            Intellectual Property and Images:
              name: ინტელექტუალური საკუთრება და სურათები
              description_student: ეს გაკვეთილი მოიცავს სხვების მიერ შექმნილი მედიას
                ( სურათების, ვიდეოს ან მუსიკის) შემქნელების უფლებების პატივიცემით
                გამოყენებას. Creative Commons ლიცენზირების შესწავლის შემდეგ, კლასი
                ისწავლის ვებ გვერდზებზე სურათების დამატებას და ამავე დროს საავტორო
                უფლებების სწორად მითითებას.
              description_teacher: |-
                Starting with an discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. \r
                \r
                Finally, with a common understanding of the restrictions of various Creative Commons licenses, students learn how to add images to their web pages using the &lt;img&gt; tag.
            Project - Multi-Page Websites:
              name: პროექტი - მრავალგვერდიანი ვებსაიტები
              description_student: 'ეს დონე მოიცავს ჰიპერბმულებს, რომლებიც აძლევენ
                საშუალებას ვებ დეველოპერებს დაუკავშირონ ერთმანეთს გვერდები ერთიან
                ვებსაიტის შესაქმნელად. მთლიანი საიტის ვებში გამოქვეყნებამდე, კლასი
                ააწყობს ერთ პროექტს ყველა წინა გვერდის ერთმანეთთან დაკავშირებით და
                შექმნის სანავიგაციო პანელს ყოველი გვერდისთვის.  '
              description_teacher: |
                After learning about how to link web pages to one another, students are finally able to publish the website they have been working on.  In this lesson, they link together all the previous pages they have created into one project, create a new page, and add navigation between the pages before publishing the entire site to the Web.  \r
                \r
            RGB Colors and Classes:
              name: RGB ფერები და კლასები
              description_student: This lesson covers classes and custom colors. The
                class first learns how to specify custom colors using RGB (red, green,
                blue) values, then applies these colors to a new Four Seasons web
                page, which uses CSS classes.  Using classes, the class adds more
                styles to the Four Seasons web page, then use them to style their
                personal websites.
              description_teacher: In this lesson, students first learn how to specify
                custom colors using their RGB (red, green, blue) values.  They then
                apply these colors to a new Four Seasons web page, which uses CSS
                classes.  CSS classes allow web developers to treat groups of elements
                they want styled differently than other elements of the same type.
                Using classes, students add more styles to the Four Seasons web page,
                then use them to style their personal websites.
            Project - Personal Portfolio Website:
              name: პროექტი - პირადი პორტფოლიოს ვებსაიტი
              description_student: In the last few days of the unit, the class finalizes
                their personal websites, working with peers to get feedback, review
                the rubric, and put the finishing touches on the site. To cap off
                the unit, everyone shares their projects and how they were developed.
              description_teacher: 'Students have spent a lot of time throughout the
                unit working on their Personal Website. In the final couple of days
                students finalize their websites.  They work with peers to get feedback,
                put the finishing touches on the websites, review the rubric and reflect
                on their process. To cap off the unit, they will share their projects
                and also a overview of the process they took to get to that final
                design.\r

'
            Headings:
              name: სათაურები
              description_student: This lesson continues the introduction to HTML
                tags, this time with headers.  The class practices using header tags
                to create page and section titles and learns how the different header
                elements are displayed by default.  Next, the class plans how to organize
                their content on the personal web pages that will be built across
                the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to
                structure text on web pages, this time with headings.  Students learn
                how the different heading elements are displayed by default and practice
                using them to create page and section titles.  Students then start
                to decide how they will organize their content on their own personal
                web pages.  In the last level, students begin the project that they
                will continue to work on throughout the unit.
        csp2-support:
          title: CSP Unit 2 Online Support
          description_audience: ''
          description_short: Teacher Supports for CSP Unit 2
          description: 'This is a set of online supports of CSP teachers preparing
            to teach Unit 2. '
          stages:
            Unit 2 Overview:
              name: სექცია 2 მიმოხილვა
            'Lessons 1 - 2: Bytes, File Sizes, and Text Compression':
              name: 'გაკვეთილები 1 - 2: ბაიტები, ფაილების ზომები და ტექსტის შეკუმშვა'
            'Lessons 3 - 4 : Encoding Images':
              name: 'გაკვეთილები 3 - 4 : სურათების კოდირება'
            'Lessons 5 - 6: Compression Formats and Developing your own Encoding Scheme':
              name: 'გაკვეთილი 5 -6: შეკუმშვის ფორმატები და თქვენი საკუთარი კოდირების
                სქემის შემუშავება'
            'Lessons 7 - 10: Interpreting Visual Data':
              name: 'გაკვეთილები 7 - 10: ვიზუალური მონაცემების ინტერპრეტირება'
            'Lessons 11 - 15: Communicating with Visualizations':
              name: 'გაკვეთილები 11 - 15: კომუნიკაცია ვიზუალიზაციებთან'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        csd4:
          title: 'CSD Unit 4 - Problem Solving: The Design Process'
          description_audience: ''
          description_short: "  Learn how to design a program that meets the needs
            of your users."
          description: Unit 4 introduces the broader social impacts of computing.
            Through a series of design challenges, you will learn how to better understand
            the needs of others while developing a solution to a problem. The second
            half of the unit consists of an iterative team project, during which teams
            have the opportunity to identify a need that they care about, prototype
            solutions both on paper and in App Lab, and test solutions with real users
            to get feedback and drive further iteration.
          stages:
            Analysis of Design:
              name: დიზაინის ანალიზი
              description_student: To kick off a unit devoted to group problem solving
                and devloping products for other users, students will begin by investigating
                the design of various everyday items. By considering how each item
                might have been designed with needs of specific users in mind, students
                can begin to see how taking a user-centered approach to designing
                products (both physical and digital) can make those products more
                useful and usable.
              description_teacher: To kick off a unit devoted to group problem solving
                and devloping products for other users, students will begin by investigating
                the design of various everyday items. By considering how each item
                might have been designed with needs of specific users in mind, students
                can begin to see how taking a user-centered approach to designing
                products (both physical and digital) can make those products more
                useful and usable.
            Understanding Your User:
              name: Understanding Your User
              description_student: Designers need to understand their users’ needs.  This
                lesson starts students thinking about how to design for another person
                by role-playing a user profile and reacting to a series of products.  Students
                will each receive a user profile describing a person. They will use
                that user’s characteristics to choose appropriate products, critique
                product design, and suggest improvements to design.
              description_teacher: 'Designers need to understand their users’ needs
                in order to create useful products.  This lesson encourages students
                to think about how to design for another person by role-playing as
                someone else using a user profile and reacting as that user to a series
                of products.  Each student is assigned a user profile describing a
                person, which they then use to choose appropriate products, critique
                product design, and suggest improvements to design.\r

'
            Discovering Users:
              name: Discovering Users
            User-Centered Design Micro Activity:
              name: მომხმარებელზე გათვლილი დიზაინის მიკრო აქტიურობა
              description_student: This lesson guides students through an abbreviated
                version of the design process they will be seeing throughout this
                unit. Students will brainstorm a list of potential users of smart
                clothing. As a class they will then group these ideas into broad categories
                and each group will choose one category of user. Groups will repeat
                this process to brainstorm needs or concerns of their user, eventually
                categorizing these needs and choosing one to focus on. Students will
                then design a piece of smart clothing, using the specific needs and
                concerns they brainstormed to design their decision making. At the
                end of the class students will quickly share their decision-making
                process and get feedback on how well their product addresses the user
                need they selected.
              description_teacher: This lesson guides students through an abbreviated
                version of the design process they will be seeing throughout this
                unit. Students will brainstorm a list of potential users of smart
                clothing. As a class they will then group these ideas into broad categories
                and each group will choose one category of user. Groups will repeat
                this process to brainstorm needs or concerns of their user, eventually
                categorizing these needs and choosing one to focus on. Students will
                then design a piece of smart clothing, using the specific needs and
                concerns they brainstormed to design their decision making. At the
                end of the class students will quickly share their decision-making
                process and get feedback on how well their product addresses the user
                need they selected.
            Designing for Social Impact:
              name: Designing for Social Impact
            Conducting User-Centered Interviews:
              name: Conducting User-Centered Interviews
            Analyzing Interviews:
              name: Analyzing Interviews
            Redesigning a Space:
              name: Redesigning a Space
            Presenting Your Design:
              name: Presenting Your Design
            Designing Apps for Good:
              name: Designing Apps for Good
              description_student: To kick off the app design project that will take
                us through the end of the unit, students will first explore existing
                apps design for social impact that have been created by other students.
                They will then review the Define, Prepare, Try, and Reflect steps
                in our problem solving process as they develop an idea for an app
                of their own with social impact. Finally, students will form project
                teams and lay out a contract for how the team will function throughout
                the development of their app.
              description_teacher: To kick off the app design project that will take
                us through the end of the unit, students will first explore existing
                apps design for social impact that have been created by other students.
                They will then review the Define, Prepare, Try, and Reflect steps
                in our problem solving process as they develop an idea for an app
                of their own with social impact. Finally, students will form project
                teams and lay out a contract for how the team will function throughout
                the development of their app.
            Market Research:
              name: Market Research
              description_student: In this lesson students will research apps similar
                to the one they intend on creating to better understand the needs
                of their users. Students will work within their teams to search the
                Internet for other apps, then evaluate the ones they find interesting.
                By the end of the lesson, each team will have a clearer idea about
                the type of app they want to create and further refine who their target
                users are. Each team will maintain a list of citations for all the
                apps they examined for use in their final presentation.
              description_teacher: In this lesson students will research apps similar
                to the one they intend on creating to better understand the needs
                of their users. Students will work within their teams to search the
                Internet for other apps, then evaluate the ones they find interesting.
                By the end of the lesson, each team will have a clearer idea about
                the type of app they want to create and further refine who their target
                users are. Each team will maintain a list of citations for all the
                apps they examined for use in their final presentation.
            Paper Prototypes:
              name: ქაღალდის პროტოტიპები
              description_student: To better scope their own apps, teams start by
                looking through several example apps, choosing one (or more) as a
                basis for the type of app they will make. From there, teams will have
                some time to discuss the basic functionality of their app before using
                3x5 index cards to develop paper prototypes.
              description_teacher: 'Before starting to design apps, we need to help
                students to better scope their expectations. Because students will
                eventually be prototyping these apps in App Lab, they will be in better
                shape if their ideas align with the kinds of apps that are easily
                prototyped in App Lab. Teams start this scoping by looking through
                several example apps designed to demonstrate apps that can be created
                with App Lab. Teams then can chose one (or more) of the apps as a
                basis for their own. From there, teams have some time to discuss the
                basic functionality of their app before using 3x5 index cards to develop
                paper prototypes.\r

'
            Prototype Testing:
              name: პროტოტიპების ტესტირება
              description_student: Teams will develop a plan to test with users before
                running prototype tests with multiple other students in the class.
                In order to test the prototype with the users, the students will have
                to assign roles in the testing (the “narrator”, the “computer” and
                the “observers”) as well as have some questions prepared for the user
                to answer after the test is complete.
              description_teacher: Teams will develop a plan to test with users before
                running prototype tests with multiple other students in the class.
                In order to test the prototype with the users, the students will have
                to assign roles in the testing (the “narrator”, the “computer” and
                the “observers”) as well as have some questions prepared for the user
                to answer after the test is complete.
            Digital Design:
              name: ციფრული დიზაინი
              description_student: Having collaboratively developed a paper prototype
                for their apps, groups will now divide and conquer to begin implementing
                an interactive digital version of their prototype. Using the drag-and-drop
                design mode of App Lab, students will individually work through a
                progression of skill-building levels to learn how to build digital
                app wireframes. From there each group member will build out at least
                one page of their app in App Lab.
              description_teacher: Having collaboratively developed a paper prototype
                for their apps, groups will now divide and conquer to begin implementing
                an interactive digital version of their prototype. Using the drag-and-drop
                design mode of App Lab, students will individually work through a
                progression of skill-building levels to learn how to build digital
                app wireframes. From there each group member will build out at least
                one page of their app in App Lab.
            Event Driven Programming:
              name: მოვლენებზე დაფუძნებული პროგრამირება
              description_student: Students learn basic event driven programming by
                making several small apps that respond to users clicking buttons.
                Following that, group members share the screens they’ve developed
                and each group member imports all of the screens into their own copy
                of the app, which they will make interactive by connecting buttons
                to events.
              description_teacher: Students learn basic event driven programming by
                making several small apps that respond to users clicking buttons.
                Following that, group members share the screens they've developed
                and each group member imports all of the screens into their own copy
                of the app, which they will make interactive by connecting buttons
                to events.
            Basic App Functionality:
              name: აპლიკაციის საბაზისო ფუნქციონალი
              description_student: At this point in the development process, each
                student should have what is essentially a digital version of the paper
                prototype - static screens that are linked together with buttons.
                For many apps this is all you really need to start testing with users,
                but this lesson will give students a chance to explore simple ways
                to add a bit more functionality to their apps before moving into the
                testing phase.
              description_teacher: At this point in the development process, each
                student should have what is essentially a digital version of the paper
                prototype - static screens that are linked together with buttons.
                For many apps this is all you really need to start testing with users,
                but this lesson will give students a chance to explore simple ways
                to add a bit more functionality to their apps before moving into the
                testing phase.
            Testing the App:
              name: აპლიკაციების ტესტირება
              description_student: 'By the end of the last lesson the students should
                have a minimum viable prototype of their app. The primary purpose
                of this lesson is to have the team actually test the app with other
                people, preferably from the target audience the app is intended for,
                or from different teams in the class while observers from the team
                will record the results on the worksheets they used in the planning
                phase. As with testing the paper prototypes, teams will start by planning
                for the specific scenarios before running and observing tests. '
              description_teacher: 'By the end of the last lesson the students should
                have a minimum viable prototype of their app. The primary purpose
                of this lesson is to have the team actually test the app with other
                people, preferably from the target audience the app is intended for,
                or from different teams in the class while observers from the team
                will record the results on the worksheets they used in the planning
                phase. As with testing the paper prototypes, teams will start by planning
                for the specific scenarios before running and observing tests. '
            Improving and Iterating:
              name: Improving and Iterating
              description_student: Teams have at this point developed an app prototype
                that has gone through multiple iterations and rounds of user testing.
                With the information and guidance gained from the last round of user
                testing, each student will have the opportunity to plan for and implement
                improvements to the team app.
              description_teacher: 'Teams have at this point developed an app prototype
                that has gone through multiple iterations and rounds of user testing.
                With the information and guidance gained from the last round of user
                testing, each student will have the opportunity to plan for and implement
                improvements to the team app.\r

'
            App Presentation:
              name: აპლიკაციის პრეზენტაცია
              description_student: At this point teams have researched a topic of
                personal and social importance, developed and tested both a paper
                prototype and a digital prototype, and iterated on the initial app
                to incorporate new features and bug fixes. Now is the time for them
                to review what they have done and pull together a coherent presentation
                to demonstrate their process of creation.
              description_teacher: 'At this point teams have researched a topic of
                personal and social importance, developed and tested both a paper
                prototype and a digital prototype, and iterated on the initial app
                to incorporate new features and bug fixes. Now is the time for them
                to review what they have done and pull together a coherent presentation
                to demonstrate their process of creation.\r

'
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
              description_student: Following the mini design project, students look
                towards the next phase of design, prototyping a product that attempts
                to address user needs. In teams students will examine a paper prototype
                for an chat app. Through this examination students will get a chance
                to see how a simple paper prototype can be used to quickly test ideas
                and assumptions before we ever get to the computer. In "using" the
                provided prototype students will begin to identify ways to improve
                the next iteration.
              description_teacher: Following the mini design project, students look
                towards the next phase of design, prototyping a product that attempts
                to address user needs. In teams students will examine a paper prototype
                for an chat app. Through this examination students will get a chance
                to see how a simple paper prototype can be used to quickly test ideas
                and assumptions before we ever get to the computer. In "using" the
                provided prototype students will begin to identify ways to improve
                the next iteration.
            Feedback and Prototypes:
              name: Feedback and Prototypes
              description_student: In this lesson students will use feedback from
                users of the paper-prototyped app from the previous lesson in order
                to develop improvements to the user interface of that paper prototype.
                The lesson begins with a reflection on the fact that designers need
                to translate human needs with technology into changes to the user
                interface or experience. Students are then given a collection of feedback
                and requests from users of the app from the previous lesson. In groups
                students categorize the feedback and identify ways the needs expressed
                in the feedback could be met by changes to the interface of the app.
                Then in groups students will implement some of these changes to meet
                one of the needs they identified.
              description_teacher: In this lesson students will use feedback from
                users of the paper-prototyped app from the previous lesson in order
                to develop improvements to the user interface of that paper prototype.
                The lesson begins with a reflection on the fact that designers need
                to translate human needs with technology into changes to the user
                interface or experience. Students are then given a collection of feedback
                and requests from users of the app from the previous lesson. In groups
                students categorize the feedback and identify ways the needs expressed
                in the feedback could be met by changes to the interface of the app.
                Then in groups students will implement some of these changes to meet
                one of the needs they identified.
            Identifying User Needs:
              name: მომხმარებლის მოთხოვნილებების განსაზღვრა
              description_student: Up to this point we have focused on designing for
                users who are, to some degree, distanced from us. Whether through
                brainstorming, profiles, or text feedback, the connection to an end
                user has never been direct. In this lesson students pair up to become
                users for each other, allowing everyone to directly interview their
                end user and ask questions to better inform their design.
              description_teacher: Up to this point we have focused on designing for
                users who are, to some degree, distanced from us. Whether through
                brainstorming, profiles, or text feedback, the connection to an end
                user has never been direct. In this lesson students pair up to become
                users for each other, allowing everyone to directly interview their
                end user and ask questions to better inform their design.
            Project - Paper Prototype:
              name: Project - Paper Prototype
              description_student: Based on the peer interview from the previous lesson,
                each student will come up with an idea for an app that will solve
                a user's problem. Students will create their own paper-prototype of
                the app by creating "screens" on individual notecards. A project guide
                directs students through the process including building the app and
                testing it with their user to see if their assumptions about the user
                interfaces they created are accurate.
              description_teacher: Based on the peer interview from the previous lesson,
                each student will come up with an idea for an app that will solve
                a user's problem. Students will create their own paper-prototype of
                the app by creating "screens" on individual notecards. A project guide
                directs students through the process including building the app and
                testing it with their user to see if their assumptions about the user
                interfaces they created are accurate.
            Linking Screens:
              name: ეკრანების დაკავშირება
              description_student: Building on the screens that the class designed
                in the previous lesson, teams combine screens into a single app. Simple
                code can then be added to make button clicks change to the appropriate
                screen.
              description_teacher: In this lesson teams combine the screens that they
                designed in the previous lesson into a single app, which they can
                then link together using code. Students learn basic event driven programming
                by building up the model app that they started in the previous lesson.
                In addition to the screen that students designed yesterday, they'll
                learn how to create additional screens and even import screens made
                by others.
            User Interfaces:
              name: User Interfaces
              description_student: See how a paper prototype can be used to test and
                get feedback on software before writing any code. To help out a developer
                with their idea, the class tests and provides an app prototype made
                of paper.
              description_teacher: Following the mini design project, students look
                towards the next phase of design - prototyping a product that attempts
                to address user needs. In teams, students examine a paper prototype
                for a chat app called "Txt Ur Grndkdz". Through using this paper prototype,
                students get a chance to see how a simple paper prototype can be used
                to quickly test ideas and assumptions before we ever get to the computer.
                After "using" the provided prototype students begin to identify ways
                to improve the next iteration.
            Feedback and Testing:
              name: Feedback and Testing
              description_student: Users have been testing an app, and they have lots
                of feedback for the developer. The class needs to sort through all
                of this feedback, identify the common themes and needs, and start
                revising the prototype to make it better meet the users' needs.
              description_teacher: In this lesson students use feedback from "users"
                of the paper-prototyped app from the previous lesson in order to develop
                improvements to the user interface of that paper prototype. The lesson
                begins with a reflection on the fact that designers need to translate
                human needs with technology into changes to the user interface or
                experience. Students are then given a collection of feedback and requests
                from users of the app from the previous lesson. In groups students
                categorize the feedback and identify ways the needs expressed in the
                feedback could be met by changes to the interface of the app. Then
                in groups students will implement some of these changes to meet one
                of the needs they identified.
            Project - App Presentation:
              name: Project - App Presentation
              description_student: Each team prepares a presentation to "pitch" the
                app they've developed. This is the time to share struggles, triumphs,
                and plans for the future.
              description_teacher: At this point teams have researched a topic of
                personal and social importance, developed and tested both a paper
                prototype and a digital prototype, and iterated on the initial app
                to incorporate new features and bug fixes. Now is the time for them
                to review what they have done and pull together a coherent presentation
                to demonstrate their process of creation. Using the provided presentation
                template, teams prepare to present about their process of app development,
                including the problem they set out to solve, the ways in which they've
                incorporated feedback from testing, and their plans for the future.
        minecraft:
          title: 'მაინკრაფტის კოდის ერთი საათი: დიზაინერი'
          description_audience: ''
          description_short: დააპროგრამე ცხოველები და სხვა ქმნილებები მაინკრაფტის
            საკუთარ სამყაროში.
          description: დააპროგრამე ცხოველები და სხვა ქმნილებები მაინკრაფტის საკუთარ
            სამყაროში.
          stages:
            Minecraft Hour of Code Designer:
              name: 'მაინკრაფტის კოდის ერთი საათი: დიზაინერი'
        flappy-impact-study:
          title: Flappy Code with Survey
          description_audience: ''
          description_short: 'Write your own Flappy game in less than 10 minutes! '
          description: Want to write your own game in less than 10 minutes? Try our
            Flappy Code tutorial! This version includes pre and post surveys to help
            us continue to improve Hour of Code. Ask your class to skip ahead to the
            post survey 10 minutes before class ends.
          stages:
            Pre Hour of Code Survey:
              name: კოდირების საათის წინარეგამოკითხვა
            Flappy Code:
              name: Flappy კოდი
            Post Hour of Code Survey:
              name: კოდირების საათის შემდგომი გამოკითვა
        coursea-draft:
          title: 'CS Fundamentals: Course A'
          description_audience: ''
          description_short: შესავალი კომპიუტერულ მეცნიერებაში მათთვის, ვინც ეს-ესაა
            დაიწყო კითხვა.
          description: |-
            Course A is for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. \r
            Recommended for grade K.
          stages:
            'Debugging: Bugs in Codeville':
              name: 'დებაგირება: ხოჭოები კოდვილში'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Programming: Happy Maps':
              name: 'პროგრამირება: ბედნიერი რუკები'
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
            Being Safe Online:
              name: Being Safe Online
            'Loops: Happy Loops':
              name: 'ციკლები: ბედნიერი ციკლები'
            Loops in Collector:
              name: ციკლები შემგროვებელში
            Loops in Artist:
              name: ციკლები მხატვარში
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
            Fuzz Fiesta:
              name: Fuzz Fiesta
            Going Places Safely:
              name: უსაფრთხო მგზავრობა
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
        courseb-draft:
          title: 'CS Fundamentals: Course B'
          description_audience: ''
          description_short: შესავალი კომპიუტერულ მეცნიერებაში მათთვის, ვინც ეს-ესაა
            დაიწყო კითხვა.
          description: Course B is for early readers. Students will create computer
            programs that will help them learn to collaborate with others, develop
            problem-solving skills, and persist through difficult tasks. By the end
            of this course, students create their very own custom game or story that
            they can share. Recommended for 1st grade.
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            Sequence & Algorithms:
              name: მიმდევრობა და ალგორითმები
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Being Safe Online:
              name: Being Safe Online
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Collector:
              name: ციკლები შემგროვებელში
            Loops in Artist:
              name: ციკლები მხატვარში
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
            More Computer Science:
              name: More Computer Science
            Keep it Private:
              name: Keep it Private
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
            Your Digital Footprint:
              name: თქვენი ციფრული ნაკვალევი
        coursec-draft:
          title: 'CS Fundamentals: Course C'
          description_audience: ''
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: In this course students will create programs to solve problems
            and develop interactive games or stories they can share. Recommended for
            2nd grade.
          stages:
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
            'Real-life Algorithms: Paper Planes':
              name: 'ცხოვრებისეული ალგორითმები: ქაღალდის თვითმფრინავები'
            Programming in Collector:
              name: პროგრამირება შემგროვებელში
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: ციკლები ლაბირინთში
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Puppy Introduction:
              name: ლეკვის შესავალი
            Online Internet Safety:
              name: ონლაინ ინტერნეტ უსაფრთხოება
            Build a Flappy Game:
              name: ააწყვეთ მოფარფატე ჩიტის თამაში
            More CS with Run Marco:
              name: More CS with Run Marco
            Binary Bracelets:
              name: ორობითი სამაჯურები
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
            Your Digital Footprint:
              name: თქვენი ციფრული ნაკვალევი
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Screen Out the Mean:
              name: Screen Out the Mean
            Debugging in Maze:
              name: დებაგირება ლაბირინთში
            Loops in Harvester:
              name: Loops in Harvester
        coursed-draft:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: In this course students will create programs to solve problems
            and develop interactive games or stories they can share. Recommended for
            3rd grade.
          stages:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Events in Bounce:
              name: მოვლენები მხტუნავში
            Nested Loops in Maze:
              name: ჩადგმული ციკლები ლაბირინთში
            Nested Loops in Artist:
              name: ჩადგმული ციკლები მხატვარში
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Bee:
              name: დებაგირება ფუტკარში
            While Loops in Farmer:
              name: While ციკლები ფერმერში
            Conditionals with Cards:
              name: პირობები ბარათებით
            Conditionals with Bee:
              name: პირობითი წინადადებები ფუტკართან ერთად
            Conditionals & Loops in Maze:
              name: პირობითი წინადადებები და ციკლები ლაბირინთში
            Conditionals & Loops in Farmer:
              name: პირობითი წინადადებები და ციკლები ფერმერში
            Impacts of Computing:
              name: Impacts of Computing
            More Programming with CS4FN:
              name: მეტი პროგრამირება CS4FN-ით
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
            Conditionals in Bee:
              name: პირობითი ბრძანებები ფუტკარში
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            'Unplugged: Binary':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ორობითი სისტემა'
            Artist Binary:
              name: 'მხატვარი: ორობითი'
            Nested Loops in Bee:
              name: ჩადგმული ციკლები ფუტკარში
            Nested Loops:
              name: ჩასმული ციკლები
            Introduction:
              name: შესავალი
            Nested Loops Project in Artist:
              name: ჩადგმული ციკლების პროექტი მხატვარში
            Debugging in Collector:
              name: დებაგირება შემგროვებელში
        coursee-draft:
          title: 'CS Fundamentals: Course E'
          description_audience: ''
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: In this course students will create programs to solve problems
            and develop interactive games or stories they can share. The course culminates
            in a multi-day project. Recommended for 4th grade.
          stages:
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            Build a Star Wars Game:
              name: ააწყვეთ ვარსკვლავური ომების თამაში
            'Functions: Songwriting':
              name: 'ფუნქციები: სიმღერების დაწერა'
            Functions in Artist:
              name: ფუნქციები მხატვარში
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions in Farmer:
              name: ფუნქციები ფერმერში
            Determine the Concept in Bee:
              name: Determine the Concept in Bee
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
            More Programming with Scratch:
              name: მეტრი პროგრამირება Scratch-ით
            Private and Personal Information:
              name: კონფიდენციალური და პირადი ინფორმაცია
            Internet:
              name: ინტერნეტი
            Crowdsourcing:
              name: ქრაუდსორსინგი
            Determine the Concept:
              name: Determine the Concept
            Introduction:
              name: შესავალი
            Conditionals:
              name: პირობითი ბრძანებები
            'Algorithms: Dice Race':
              name: 'ალგორითმები: კამათლის შეჯიბრი'
        coursef-draft:
          title: 'CS Fundamentals: Course F'
          description_audience: ''
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: In this course students will create programs to solve problems
            and develop interactive games or stories they can share. The course culminates
            in a multi-day project. Recommended for 5th grade.
          stages:
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            Envelope Variables:
              name: ცვლადები კონვერტებში
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
            Variables in Artist:
              name: ცვლადები მხატვარში
            For Loop Fun:
              name: ხალისი "მიზნისთვის" ციკლით
            For Loops in Bee:
              name: For ციკლები ფუტკარში
            For Loops in Artist:
              name: For ციკლები მხატვარში
            'Functions with Parameters: Songwriting with Parameters':
              name: 'ფუნქციები პარამეტრებით: სიმღერის წერა პარამეტრებით'
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
            Presentation Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
            Try programming with Khan Academy:
              name: Try programming with Khan Academy
            The Power of Words:
              name: სიტყვების ძალა
            Songwriting with Parameters:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            Introduction:
              name: შესავალი
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
            Conditionals and Functions in Bee:
              name: პირობითი ოპერატორები და ფუნქციები ფუტკარში
            'Algorithms: Tangrams':
              name: 'ალგორითმები: ტანგრამები'
        classic-hoc-impact-study:
          title: Hour of Code with Survey
          description_audience: ''
          description_short: სცადეთ კომპიუტერული მეცნიერების საფუძვლები მრავალ სახალისო
            პერსონაჟთან ერთად!
          description: Try the basics of computer science with characters from Angry
            Birds and Plants vs. Zombies! This version includes pre and post surveys
            to help us continue to improve Hour of Code. Ask your class to skip ahead
            to the post survey 10 minutes before class ends.
          stages:
            Pre Hour of Code Survey:
              name: კოდირების საათის წინარეგამოკითხვა
            Hour of Code 2013:
              name: კოდის ერთი საათი 2013
            Post Hour of Code Survey:
              name: კოდირების საათის შემდგომი გამოკითვა
        hoc-impact-study:
          title: Classic Maze with Survey
          description_audience: ''
          description_short: სცადეთ კომპიუტერული მეცნიერების საფუძვლები მრავალ სახალისო
            პერსონაჟთან ერთად!
          description: Try the basics of computer science with characters from Angry
            Birds and Plants vs. Zombies! This version includes pre and post surveys
            to help us continue to improve Hour of Code. Ask your class to skip ahead
            to the post survey 10 minutes before class ends.
          stages:
            Pre Hour of Code Survey:
              name: კოდირების საათის წინარეგამოკითხვა
            Hour of Code 2013:
              name: კოდის ერთი საათი 2013
            Post Hour of Code Survey:
              name: კოდირების საათის შემდგომი გამოკითვა
        sports:
          title: შექმენით საკუთარი სპორტული თამაში
          description_audience: ''
          description_short: შეაერთეთ სხვადასხვა სპორტული თამაშები
          description: შეაერთეთ სხვადასხვა სპორტული თამაშები
          stages:
            Sports:
              name: სპორტი
        2016_sciencePD-phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: მოდულების მიმოხილვა
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: შეჯამება
        2016_sciencePD_phase2b:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Review StarLogo Nova:
              name: Review StarLogo Nova
            Reviewing the Modules:
              name: მოდულების მიმოხილვა
            Advanced StarLogo Nova:
              name: Advanced StarLogo Nova
            Remixing Phases 1 and 2:
              name: Remixing Phases 1 and 2
            Thinking Ahead to Implementation:
              name: Thinking Ahead to Implementation
            Wrap-Up:
              name: შეჯამება
        sciencepd3-2016:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome Back!:
              name: კეთილი იყოს თქვენი დაბრუნება!
            The TLO:
              name: The TLO
            Prep With Your Modules:
              name: Prep With Your Modules
        csp3-support:
          title: CSP Unit 3 Online Support
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Unit 3 Overview:
              name: სექცია 3 მიმოხილვა
            'Lessons 1 - 3: Algorithms':
              name: 'გაკვეთილები 1 - 3: ალგორითმები'
            'Lessons 4 - 6 : Procedural Abstraction and Top-Down Design':
              name: 'გაკვეთილები 4 - 6: პროცედურული აბსტრაქცია და ზემოდან-ქვემოთ დიზაინი'
            'Lessons 7 - 9: Documentation, Simple Loops, and Random Numbers':
              name: 'გაკვეთილები 7 - 9: დოკუმენტაცია, მარტივი ციკლები და შემთხვევითი
                რიცხვები'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            AP Preparation and Support:
              name: AP Preparation and Support
        csdgraveyard:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            new stage:
              name: ახალი დონე
            Introduction to Styling with CSS (2.7):
              name: შესავალი CSS-ით გასტილვაში (2.7)
            Introduction to Styling with CSS:
              name: Introduction to Styling with CSS
            External Style Sheets:
              name: External Style Sheets
        csp4-support:
          title: CSP Unit 4 Online Support
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Unit 3 Overview:
              name: სექცია 3 მიმოხილვა
            'Lessons 1 - 2: Data in the Real World':
              name: 'გაკვეთილები 1 - 2: მონაცემები რეალურ სამყაროში'
            'Lessons 1 - 4: Data in the Real World':
              name: 'გაკვეთილები 1 - 4: მონაცემები რეალურ სამყაროში'
            'Lessons 5 - 7: Security, Symmetric, and Asymmetric Encryption':
              name: 'გაკვეთილები 5 - 7: უსაფრთხოება, სიმეტრიალი და ასიმეტრიული ენკრიფცია'
            'Lessons 8 - 9: Practice PT':
              name: 'Lessons 8 - 9: Practice PT'
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
            Unit 4 Overview:
              name: სექცია 4 მიმოხილვა
        sciencepd4:
          title: 'CS in Science: Part 4'
          description_audience: ''
          description_short: 'Phase 3: Reflect on semester 1 workshop'
          description: 'Phase 3: Reflect on semester 1 workshop'
          stages:
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Revisiting Complex Adaptive Systems:
              name: Revisiting Complex Adaptive Systems
            Thinking About Implementation:
              name: Thinking About Implementation
            Wrap-Up:
              name: შეჯამება
        csp-ca-a:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Commutative Assessment A:
              name: Commutative Assessment A
        science-pd-ol-pt-5:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: ფიზიკის გამოწვევები
            Wrap-Up:
              name: შეჯამება
        csf2harvey:
          title: New Functions Puzzles
          description_audience: ''
          description_short: ''
          description: Testing for Mr. Harvey's class
          stages:
            'Functions: Songwriting':
              name: 'ფუნქციები: სიმღერების დაწერა'
            Functions in Artist:
              name: ფუნქციები მხატვარში
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions in Farmer:
              name: ფუნქციები ფერმერში
            Determine the Concept:
              name: Determine the Concept
            Prepare your snowflake for 3D printing:
              name: Prepare your snowflake for 3D printing
            Binary:
              name: ორობითი
            Snowflakes:
              name: ფიფქები
        sciencepd5:
          title: 'CS in Science: Part 5'
          description_audience: ''
          description_short: 'Phase 3: Prepare for semester 2 workshop'
          description: 'Phase 3: Prepare for semester 2 workshop'
          stages:
            Welcome!:
              name: კეთილი იყოს თქვენი მობრძანება!
            Earth Science Challenges:
              name: Earth Science Challenges
            Life Science Challenges:
              name: Life Science Challenges
            Physical Science Challenges:
              name: ფიზიკის გამოწვევები
            Wrap-Up:
              name: შეჯამება
        csp5-support:
          title: Unit 5 Online Professional Learning Course
          description_audience: ''
          description_short: Teacher Professional Learning Course for CSP Unit 1
          description: 'COMING SOON: In mid-February, this page will host the CSP
            Unit 5 Professional Learning Course. '
          stages:
            Unit 5 Overview:
              name: სექცია 5 მიმოხილვა
            Event Driven Programming:
              name: მოვლენებზე დაფუძნებული პროგრამირება
            Variables and Strings:
              name: ცვლადები და რიგები
            Conditionals and Boolean Logic:
              name: პირობითი ბრძანებები და ბულის ლოგიკა
            While Loops and Introduction to Arrays:
              name: While ციკლები და შესავალი მასივებში
            Processing Arrays and Functions with Return Values:
              name: მასივების დამუშავება და ფუნქციები დასაბრუნებელი მნიშვნელობებით
            Group Work and Peer Learning:
              name: Group Work and Peer Learning
            Balancing Teachers and Tools:
              name: Balancing Teachers and Tools
            Discovery Learning:
              name: Discovery Learning
            Measuring Student Learning:
              name: Measuring Student Learning
        csp6-support:
          stage: []
          title: AP Preparation and Resources for Teachers
          description_audience: ''
          description_short: ''
          description: 'COMING SOON: soon this page will host a set of resources for
            teachers preparing for the AP exam'
          stages: []
        csppostap:
          title: CSP Post-AP - Databases and Using Data in Your Apps
          description_audience: ''
          description_short: ისწავლეთ მონაცემთა შეგროვება და მათი გამოყენება აპლიკაციების
            ლაბორატორიაში.
          description: App Lab has a number of tools that allow you to collect and
            use data in your apps. The following material provides an overview of
            how these tools work, a sampling of example projects that can be built
            using these tools, and a space in which to build and submit a final project.
          stages:
            Creating Javascript Objects:
              name: ჯავასკრიპტ ობიექტების შექმნა
            Permanent Data Storage:
              name: Permanent Data Storage
            Reading Records:
              name: ჩანაწერთა წაკითხვა
            Deleting Records:
              name: ჩანაწერთა წაშლა
            Updating Records:
              name: ჩანაწერთა განახლება
            Importing and Exporting Data:
              name: მონაცემთა შემოტანა და გატანა
            Visualizing Data:
              name: მონაცემთა ვიზუალიზაცია
            Sample Apps:
              name: აპლიკაციების ნიმუშები
            Final Project:
              name: ფინალური პროექტი
        unit6-csd-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            '':
              name: ''
        gamelab-demo:
          stages:
            Simple Sprite Movement:
              name: სპრაიტების მარტივი მოძრაობა
        csd6-draft:
          title: Draft Unit 6
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            UI and Input:
              name: UI and Input
            Computing Innovations:
              name: Computing Innovations
            Input Uplugged:
              name: Input Uplugged
            The Circuit Playground:
              name: The Circuit Playground
            Foo:
              name: Foo
            Lists:
              name: სიები
            Lights:
              name: შუქები
            Event Types:
              name: ღონისძიების ტიპები
            Getters and Setters:
              name: Getters and Setters
            Input Unplugged:
              name: Input Unplugged
            Timed Loop:
              name: ციკლი ტაიმერით
            Timed Loops:
              name: ციკლები ტაიმერით
            For Loops:
              name: '"მიზნისთვის" ციკლები'
            Physical Input:
              name: ფიზიკურად შეყვანილი ინფორმაცია
            List and For Loops:
              name: სიის და For ციკლები
            'Project: Board Output':
              name: 'პროექტი: ინფორმაციის დაფაზე გამოყვანა'
            For Loops with UI and Board:
              name: For Loops with UI and Board
            Lists and For Loops:
              name: Lists and For Loops
            Analog Input:
              name: Analog Input
            Polling Events:
              name: Polling Events
            Sensor Applications:
              name: სენსორული აპლიკაციები
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
            Map:
              name: რუკა
            Board Events:
              name: Board Events
            'Project: Make a Game':
              name: 'Project: Make a Game'
            Getting and Setting Properties:
              name: Getting and Setting Properties
            The Program Design Process:
              name: The Program Design Process
            Getters:
              name: Getters
            Getting Properties:
              name: Getting Properties
            Designing Screens with Code:
              name: Designing Screens with Code
            Arrays:
              name: Arrays
            Making Music:
              name: მუსიკის შექმნა
            Arrays and For Loops:
              name: Arrays and For Loops
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
            Accelerometer:
              name: Accelerometer
            Functions with Parameters:
              name: ფუნქციები პარამეტრებით
        workshop-gamelab:
          title: Game Lab Workshop
          description_audience: Teachers attending an in-person Game Lab Workshop
          description_short: Level progression to accompany an in-person Game Lab
            Workshop
          description: This level progression is intended to accompany an in-person
            Game Lab Workshop. This is not intended to teach the tool or CS concepts,
            but rather to support a workshop facilitator in introducing attendees
            to the breadth of Game Lab.
          stages:
            Introduction:
              name: შესავალი
            Sprites:
              name: სპრაიტები
            Input:
              name: შემომავალი ინფორმაცია
            'Project: Interactive Card':
              name: 'პროექტი: ინტერაქტიული ბარათი'
        csd5-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            new stage:
              name: ახალი დონე
            Interpreting Data:
              name: მონაცემთა ინტერპრეტაცია
            Data in the Real World:
              name: მონაცემები რეალურ ცხოვრებაში
            Combining Representations:
              name: Combining Representations
            Representing Images:
              name: Representing Images
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Numbers Part 1:
              name: რიცხვების წარმოდგენა ნაწილი 1
            Representing Numbers Part 2:
              name: რიცხვების წარმოდგენა ნაწილი 2
            Project - Create a Representation:
              name: პროექტი - შექმენით წარმოდგენა
            Problem Solving and Data:
              name: პრობლემათა გადაჭრა და მონაცემები
            Making Decisions with Data:
              name: გადაწყვეტილების მიღება მონაცემებთან ერთად
            Automating Data Decisions:
              name: ავტომატური მონაცემთა გადაწყვეტილებები
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: პროექტი - გადაწყვიტეთ მონაცემთა პრობლემა
            Representing Numbers:
              name: რიცხვების წარმოდგენა
            8-bit Numbers:
              name: 8-ბიტიანი რიცხვები
            Encryption:
              name: დაშიფრვა
            Structuring Data:
              name: Structuring Data
        applab-1hour:
          title: აპლიკაციების ლაბორატორია 1 საათიანი სახელოსნო
          description_audience: საშუალო და უფროსი კლასების მოსწავლეები
          description_short: ''
          description: This workshop is designed to give students a basic introduction
            to app lab in 1 hour. Students should be able to come in with different
            backgrounds in computer science and have fun creating something.
          stages:
            App Lab Workshop:
              name: აპლიკაციების ლაბორატორიის სახელოსნო
            Digital Design:
              name: ციფრული დიზაინი
            Event Driven Programming:
              name: მოვლენებზე დაფუძნებული პროგრამირება
            Basic App Functionality:
              name: აპლიკაციის საბაზისო ფუნქციონალი
            Event Types:
              name: ღონისძიების ტიპები
            Getters and Setters:
              name: Getters and Setters
            Room Escape:
              name: ოთახიდან გაქცევა
            Extra:
              name: დამატებითი
        applab-2hour:
          title: აპლიკაციების ლაბორატორია 2 საათიანი სახელოსნო
          description_audience: საშუალო და უფროსი კლასების მოსწავლეები
          description_short: ''
          description: This workshop is designed to give students a basic introduction
            to app lab in 2 hours. Students should be able to come in with different
            backgrounds in computer science and have fun creating something.
          stages:
            new stage:
              name: ახალი დონე
            Digital Design:
              name: ციფრული დიზაინი
            Event Driven Programming:
              name: მოვლენებზე დაფუძნებული პროგრამირება
            Basic App Functionality:
              name: აპლიკაციის საბაზისო ფუნქციონალი
            Event Types:
              name: ღონისძიების ტიპები
            Getters and Setters:
              name: Getters and Setters
        coursed-ramp:
          title: 'CS Fundamentals: Course D'
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Introduction:
              name: შესავალი
        workshop-maker:
          title: შემქმნელის ინსტრუმენტების პანელის სამუშაო სივრცე
          description_audience: Teachers attending an in-person Maker Toolkit Workshop
          description_short: Level progression to accompany an in-person Maker Toolkit
            Workshop
          description: This level progression is intended to accompany an in-person
            Maker Toolkit Workshop. This is not intended to teach the tool or CS concepts,
            but rather to support a workshop facilitator in introducing attendees
            to the breadth of App Lab and the Maker Toolkit.
          stages:
            App Lab Basics:
              name: აპლიკაციების ლაბორატორიის საფუძვლები
            The Circuit Playground:
              name: The Circuit Playground
            Physical Input:
              name: ფიზიკურად შეყვანილი ინფორმაცია
            Analog Input:
              name: Analog Input
        coursee-ramp:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Introduction:
              name: შესავალი
            Conditionals:
              name: პირობითი ბრძანებები
            'Real Life Algorithms: Dice Race':
              name: 'ცხოვრებისეული ალგორითმები: კამათლების შეჯიბრი'
        csd6:
          title: CSD Unit 6 - Physical Computing
          description_audience: ''
          description_short: შეისწავლეთ პროგრამირება ფიზიკური მოწყობილობების საშუალებით.
          description: Unit 6 explores the role of hardware platforms in computing
            and how different sensors can provide more effective input and output
            than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s
            Circuit Playground, you’ll develop programs that utilize the same hardware
            inputs and outputs that you see in the smart devices, looking at how a
            simple rough prototype can lead to a finished product. The unit concludes
            with a design challenge to use the Circuit Playground as the basis for
            an innovation of your own design.
          stages:
            Computing Innovations:
              name: Computing Innovations
              description_student: Explore a wide variety of new and innovative computing
                platforms while expanding your understanding of what a computer can
                be.
              description_teacher: To kick off the final unit of this course, students
                will do some research into interesting innovations in computing. This
                lesson will expose students to wider variety of computing form factors
                (what a computer looks like) and fields that are impacted by computing.
                Later in this unit students will look back on the devices they encountered
                in this lesson as they develop their own physical computing devices.
            Input Unplugged:
              name: Input Unplugged
              description_student: Explore some of the different ways that an app
                can take input from a user, and learn more about the event-driven
                programming model used in App Lab.
              description_teacher: In preparation for delving deeper into programming
                with App Lab, students will explore how a handful of different programs
                written in both Game Lab and App Lab handle taking input from the
                user. After comparing and contrasting the approaches they saw in the
                example apps, students group up to act out the two different models
                for input (conditionals in an infinite and asynchronous events) to
                gain a better understanding of how they work.
            Event Types:
              name: ღონისძიების ტიპები
              description_student: გადახედეთ პროგრამირების საფუძვლებს აპლიკაციების
                ლაბორატორიაში და გამოიკვლიეთ რამდენიმე მოვლენის ტიპი, რომელთა გამოყენებას
                შეძლებთ თქვენს პროგრამებში.
              description_teacher: In this lesson students review the material they
                learned about creating apps in App Lab from Unit 4 in order to prepare
                for a return to App Lab in this unit. This review should be modified
                to best meet the needs of your students and their experience and familiarity
                with programming in App Lab. In addition to the review the students
                will also experiment with a variety of new event types that they likely
                have not seen before.
            Getters and Setters:
              name: Getters and Setters
              description_student: To expand the kinds of interactions that students
                can use in App Lab we introduce the concept of "getters" and "setters",
                commands which can get and set (or change) the content and properties
                of various design elements.
              description_teacher: მე-4-ე თავში მოსწავლეებმა შეისწავლეს ძალიან მარტივი
                მიდგომა აპლიკაციების შექმნისადმი აპლიკაციების ლაბორატორიაში, რომლის
                ურთიერთქმედებათა უმეტესობა საჭიროებდა ცალკეულ ეკრანს. იმისათვის, რომ
                გავაფართოვოთ იმ აპლიკაციების სია, რომელთა შექმნა შეუძლიათ მოსწავლეებს
                და იმისათვის, რომ წავაქეზოთ ისინი შეისწავლონ ის გზები, რომლებითაც
                მომხმარებლები ურთიერთქმედებენ აპლიკაციებთან, ჩვენ წარმოგიდგენთ "getter"-ების
                და "setter"-ების კონცეფციებს. ამ ბრძანებებს შეუძლიათ სხვადასხვა დიზაინის
                ელემენტების თვისებების ამოღება ან განსაზღვრა (შეცვლა). ამ გაკვეთილში
                მოსწავლეები შექმნიან მარტივ აპლიკაციებს, რომლებიც საჭიროებენ მხოლოდ
                ერთ ეკრანს და რომელთა შიგთავსი შეიცვლება getter-ების და setter-ების
                საშუალებით.
            The Circuit Playground:
              name: The Circuit Playground
              description_student: Students are introduced to the Circuit Playground,
                a microcomputer that will be the platform used throughout the rest
                of this unit.
              description_teacher: In this lesson students get their first opportunity
                to write programs that use the Circuit Playground for output. After
                first inspecting the board visually and hypothesizing possibly functionalities,
                students move online where they will learn to write applications that
                blink an LED and make noise with a buzzer.
            Lists:
              name: სიები
              description_student: შეისწავლეთ თუ როგორ შეიძლება სიების ერთ ცვლადში
                მრავალი მნიშვნელობის შესანახად.
              description_teacher: სია, რომელიც ასევე ცნობილია როგორც მასივი ცვლადის
                ტიპია, რომელსაც შეუძლია ერთდროულად მრავალი მნიშვნელობის შენახვა. ამ
                გაკვეთილში, მოსწავლეები ისწავლიან ისეთი სიების შექმნას, რომლებიც ერთ
                ცვლადში შეინახავენ მსგავსი მნიშვნელობების მიმდევობებს. საკუთარი სიების
                შექმნის შემდეგ, მოსწავლეები ისწავლიან ინდექსის გამოყენებით, კონკრეტული
                ან შემთხვევითი მნიშვნელობის სიიდან ამოღებას.
            Lights:
              name: შუქები
              description_student: 'Now that students have learned how lists can be
                used to deal with groups of related values, we''ll return to the board
                and look at the color LEDs, which are accessed through the list `colorLeds`. '
              description_teacher: Now that students have learned how lists can be
                used to deal with groups of related values, we'll return to the board
                and look at the color LEDs, which are accessed through the list `colorLeds`.
            For Loops:
              name: '"მიზნისთვის" ციკლები'
              description_student: Students are introduced to the for loop in this
                lesson as a way to repeat some code a certain numbers of times. They
                spend time practicing in an unplugged context with simple robot commands
                and then take their knowledge into App Lab.
              description_teacher: Students are introduced to the for loop in this
                lesson as a way to repeat some code a certain numbers of times. They
                spend time practicing in an unplugged context with simple robot commands
                and then take their knowledge into App Lab.
            Lists and For Loops:
              name: Lists and For Loops
              description_student: 'In this lesson students combine what they have
                learned about lists and for loops. Students use for loops to go through
                each element in a list one at a time without having to write code
                for each element. Towards the end of the lesson students will apply
                this with the colorLed list on the board. '
              description_teacher: 'In this lesson students combine what they have
                learned about lists and for loops. Students use for loops to go through
                each element in a list one at a time without having to write code
                for each element. Towards the end of the lesson students will apply
                this with the colorLed list on the board. '
            Timed Loops:
              name: ციკლები ტაიმერით
              description_student: In this lesson we build on students understanding
                of for loops to learn about a more sophisticated structure called
                a timed loop. Unlike for loops, you can control how quickly a timed
                loop repeats, and other code (such as event handlers) can be run between
                iterations of the loop. This allows us to create interesting animations
                that repeat infinitely, while still allowing other code to run alongside
                it.
              description_teacher: In this lesson we build on students understanding
                of `for loops` to learn about a more sophisticated structure called
                a _timed loop_. Unlike _for loops_, you can control how quickly a
                _timed loop_ repeats, and other code (such as event handlers) can
                be run between iterations of the loop. This allows us to create interesting
                animations that repeat infinitely, while still allowing other code
                to run alongside it.
            'Project: Board Output':
              name: 'პროექტი: ინფორმაციის დაფაზე გამოყვანა'
              description_student: Students take what they've learned through chapter
                one, and develop an app of their own design that uses the board to
                output information.
              description_teacher: Students take what they've learned through chapter
                one, and develop an app of their own design that uses the board to
                output information.
            Physical Input:
              name: ფიზიკურად შეყვანილი ინფორმაცია
              description_student: Using the hardware buttons and switch, students
                learn to use onBoardEvent(), analogously to onEvent(), in order to
                take input from their Circuit Playgrounds.
              description_teacher: Using the hardware buttons and switch, students
                learn to use `onBoardEvent()`, analogously to `onEvent()`, in order
                to take input from their Circuit Playgrounds.
            Analog Input:
              name: Analog Input
              description_student: Students explore the three analog sensors on the
                Circuit Playground which measure sound, light, and temperature.
              description_teacher: Students explore the three analog sensors on the
                Circuit Playground which measure sound, light, and temperature.
            Sensor Applications:
              name: სენსორული აპლიკაციები
              description_student: Following up on the sensor investigations from
                the previous day, students will work to develop three simple applications
                - one for each of the analog sensors.
              description_teacher: Following up on the sensor investigations from
                the previous day, students will work to develop three simple applications
                - one for each of the analog sensors.
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
              description_student: In this final project for the course, student team
                to develop and test a prototype for an innovative computing device
                based on the Circuit Playground. Using the inputs and outputs available
                on the board, groups will create programs that allow for interesting
                and unique user interactions.
              description_teacher: In this final project for the course, student team
                to develop and test a prototype for an innovative computing device
                based on the Circuit Playground. Using the inputs and outputs available
                on the board, groups will create programs that allow for interesting
                and unique user interactions.
            Designing Screens with Code:
              name: Designing Screens with Code
              description_student: By reading and changing the content on the screen
                of an app, the class starts to build apps that only need a single
                screen. Even with just one screen, these techniques allow for lots
                of user interaction and functionality.
              description_teacher: In Unit 4 students learned a very simple approach
                to app development in App Lab that required a separate screen for
                most interactions. To expand the kinds of apps that students can make,
                and to encourage them to think in new ways about how users interact
                with apps, we introduce the `setProperty()` block. This command can
                be used to set the content and properties of various UI elements,
                allowing students to write programs that update information on a single
                screen, instead of manually creating duplicate screens. In this lesson
                students build up simple apps that only require a single screen, the
                content of which is changed using `setProperty()`.
            Board Events:
              name: Board Events
              description_student: Using the hardware buttons and switch, the class
                develops programs that use the Circuit Playground as an input.
              description_teacher: This lesson transitions students from consider
                the Circuit Playground as strictly an output device towards using
                it as a tool for both input and output. Starting with the hardware
                buttons and switch,sing the hardware buttons and switch, students
                learn to use `onBoardEvent()`, analogously to `onEvent()`, in order
                to take input from their Circuit Playgrounds.
            Getting Properties:
              name: Getting Properties
              description_student: This lesson introduces students to the getProperty
                block, which allows them to access the properties of different elements
                with code.  Students first practice using the block to determine what
                the user has input in various user interface elements. Students later
                use getProperty and setProperty together with the counter patters
                to make elements move across the screen.  A new screen element, the
                slider, and a new event trigger, onChange, are also introduced.
              description_teacher: This lesson introduces students to the `getProperty`
                block, which allows them to access the properties of different elements
                with code.  Students first practice using the block to determine what
                the user has input in various user interface elements. Students later
                use `getProperty` and `setProperty` together with the counter patters
                to make elements move across the screen.  A new screen element, the
                slider, and a new event trigger, `onChange`, are also introduced.
            The Program Design Process:
              name: The Program Design Process
              description_student: This lesson introduces students to the process
                they will use to design programs of their own throughout this unit.
                This process is centered around a project guide which asks students
                to sketch out their screens, identify elements of the Circuit Playground
                to be used, define variables, and describe events before they begin
                programming. This process is similar to the Game Design Process that
                we used in Unit 3. In this lesson students begin by playing a tug
                o' war style game where the code is hidden. They discuss what they
                think the board components, events, and variables would need to be
                to make the program. They are then given a completed project guide
                which shows one way to implement the project. Students are then walked
                through this process through a series of levels. At the end of the
                lesson students have an opportunity to make improvements to the program
                to make it their own.
              description_teacher: This lesson introduces students to the process
                they will use to design programs of their own throughout this unit.
                This process is centered around a project guide which asks students
                to sketch out their screens, identify elements of the Circuit Playground
                to be used, define variables, and describe events before they begin
                programming. This process is similar to the Game Design Process that
                we used in Unit 3. In this lesson students begin by playing a tug
                o' war style game where the code is hidden. They discuss what they
                think the board components, events, and variables would need to be
                to make the program. They are then given a completed project guide
                which shows one way to implement the project. Students are then walked
                through this process through a series of levels. At the end of the
                lesson students have an opportunity to make improvements to the program
                to make it their own.
            'Project: Make a Game':
              name: 'Project: Make a Game'
              description_student: Students take what they've learned through chapter
                one, and develop an app of their own design that uses the board to
                output information.
              description_teacher: Students take what they've learned through chapter
                one, and develop an app of their own design that uses the board to
                output information.
            Arrays:
              name: Arrays
              description_student: შეისწავლეთ თუ როგორ შეიძლება სიების ერთ ცვლადში
                მრავალი მნიშვნელობის შესანახად.
              description_teacher: An array is an ordered collection of items, usually
                of the same type. In this lesson, students learn ways to access either
                a specific or random value from a list using its index.  They then
                learn how to access the colorLEDs array that controls the behavior
                of the color LEDs on the Circuit Playground.  Students will control
                the color and intensity of each LED, then use what they have learned
                to program light patterns to create a light show on their Circuit
                Playground.
            Making Music:
              name: მუსიკის შექმნა
              description_student: In this lesson students will use the buzzer to
                its full extent by producing sounds, notes, and songs with the buzzer.
                Students start with a short review of the buzzer's frequency and duration
                parameters, then move on to the concept of notes.  Notes allow students
                to constrain themselves to frequencies that are used in Western music
                and provide a layer of abstraction that helps them to understand which
                frequencies might sound good together.  Onces students are able to
                play notes on the buzzer, they use arrays to hold and play sequences
                of notes, forming simple songs.
              description_teacher: In this lesson students will use the buzzer to
                its full extent by producing sounds, notes, and songs with the buzzer.
                Students start with a short review of the buzzer's frequency and duration
                parameters, then move on to the concept of notes.  Notes allow students
                to constrain themselves to frequencies that are used in Western music
                and provide a layer of abstraction that helps them to understand which
                frequencies might sound good together.  Onces students are able to
                play notes on the buzzer, they use arrays to hold and play sequences
                of notes, forming simple songs.
            Arrays and For Loops:
              name: Arrays and For Loops
              description_student: Combining _lists_ and _for loops_ allows you to
                write code that impacts every element of a list, regardless of how
                long it is. The class uses this structure to write programs that process
                all of the elements in lists, include the list of color LEDs.
              description_teacher: Using a _for loop_ to iterate over all of the elements
                in an array is a really useful construct in most programming languages.
                In this lesson, students learn the basics of how a _for loop_ can
                be used to repeat code, and then combine it with what they've already
                learned about arrays to write programs that process all elements in
                an array. Students use for loops to go through each element in a list
                one at a time without having to write code for each element. Towards
                the end of the lesson students will apply this with the `colorLed`
                list on the board to create an app that changes all of the LEDs each
                time a button is clicked.
            Accelerometer:
              name: Accelerometer
              description_student: In this lesson, students will explore the accelerometer
                and its capabilities. They’ll become familiar with its events and
                properties, as well as create multiple programs utilizing the accelerometer
                similar to those they’ve likely come across in real world applications.
              description_teacher: In this lesson, students will explore the accelerometer
                and its capabilities. They’ll become familiar with its events and
                properties, as well as create multiple programs utilizing the accelerometer
                similar to those they’ve likely come across in real world applications.
            Functions with Parameters:
              name: ფუნქციები პარამეტრებით
              description_student: The lesson starts with a quick review of parameters,
                in the context of App Lab blocks that they students have seen recently.  Students
                then look at examples of parameters within user-created functions
                in App Lab and create and call functions with parameters for themselves,
                using them to control multiple elements on a screen.  Afterwards,
                students use for loops to iterate over an array, passing each element
                into a function.  Last, students use what they have learned to create
                a star catching game.
              description_teacher: The lesson starts with a quick review of parameters,
                in the context of App Lab blocks that they students have seen recently.  Students
                then look at examples of parameters within user-created functions
                in App Lab and create and call functions with parameters for themselves,
                using them to control multiple elements on a screen.  Afterwards,
                students use for loops to iterate over an array, passing each element
                into a function.  Last, students use what they have learned to create
                a star catching game.
            Circuits and Physical Prototypes:
              name: Circuits and Physical Prototypes
              description_student: Wire simple circuits to create a physical prototype
                using cheap and easily found materials.
              description_teacher: In preparation for this chapter's final project,
                students will learn how to develop a prototype of a physical object
                that includes a Circuit Playground. Using a modelled project planning
                guide, students will learn how to wire a couple of simple circuits
                and to build prototypes that can communicate the intended design of
                a product, using cheap and easily found materials such as cardboard
                and duct tape.
            Innovations in Computing:
              name: Innovations in Computing
            Arrays and Color LEDs:
              name: Arrays and Color LEDs
            Innovations in Computing_:
              name: Innovations in Computing
            Designing Screens with Code_:
              name: Designing Screens with Code
            The Circuit Playground_:
              name: The Circuit Playground
            Input Unplugged_:
              name: Input Unplugged
            Board Events_:
              name: Board Events
            Getting Properties_:
              name: Getting Properties
            Analog Input_:
              name: Analog Input
            The Program Design Process_:
              name: The Program Design Process
            Arrays and Color LEDs_:
              name: Arrays and Color LEDs
            'Project: Make a Game_':
              name: 'Project: Make a Game'
            Making Music_:
              name: მუსიკის შექმნა
            Arrays and For Loops_:
              name: Arrays and For Loops
            Accelerometer_:
              name: Accelerometer
            Functions with Parameters_:
              name: ფუნქციები პარამეტრებით
            Circuits and Physical Prototypes_:
              name: Circuits and Physical Prototypes
            'Project: Prototype an Innovation_':
              name: 'Project: Prototype an Innovation'
            'Project: Make a Game__':
              name: 'Project: Make a Game'
            Arrays and Color LEDs__:
              name: Arrays and Color LEDs
        csd3-draft:
          title: 'CSD Unit 3 - Programming: Animations and Games'
          description_audience: ''
          description_short: ანიმაციები და თამაშები
          description: ''
          stages:
            Shapes and Randomess:
              name: Shapes and Randomess
            Shapes and Randomness:
              name: ფიგურები და შემთხვევითობა
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
            Variables:
              name: ცვლადები
            Programming for Entertainment:
              name: პროგრამირება გართობისათვის
            Sprites:
              name: სპრაიტები
            Plotting Shapes:
              name: Plotting Shapes
            Sprite Movement:
              name: სპრაიტების მოძრაობა
            The Draw Loop:
              name: ხატვის ციკლი
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: პირობითი ბრძანებები
            Taking Input:
              name: შეყვანილი ინფორმაციის აღება
            Complex Conditionals:
              name: რთული პირობითი ბრძანებები
            'Project: Interactive Card':
              name: 'პროექტი: ინტერაქტიული ბარათი'
            Keyboard Input:
              name: კლავიატურიდან შეყვანილი ინფორმაცია
            Other Forms of Input:
              name: Other Forms of Input
            Velocity:
              name: სიჩქარე
            Collision Detection:
              name: შეჯახების აღმოჩენა
            Complex Sprite Movement:
              name: სპრაიტების რთული მოძრაობა
            Collisions:
              name: შეჯახებები
            Functions:
              name: ფუნქციები
            The Game Design Process:
              name: თამაშის დიზაინის პროცესი
            Using the Game Design Process:
              name: თამაშის დიზაინის პროცესის გამოყენება
            'Project: Design a Game':
              name: 'პროექტი: შექმენით თამაშის დიზაინი'
        csd5:
          title: 'CSD თავი 5: მონაცემები და საზოგადოება'
          description_audience: ''
          description_short: გაიგეთ, თუ როგორ იყენებენ ადამიანები კომპიუტერებს მონაცემებთან
            დაკავშირებული პრობლემების გადასაჭრელად.
          description: Unit 5 is about the importance of data in solving problems
            and highlights how computers can help in this process. The first chapter
            explores different systems used to represent information in a computer
            and the challenges and tradeoffs posed by using them. In the second chapter
            you’ll learn how collections of data are used to solve problems, and how
            computers help to automate the steps of this process. The chapter concludes
            by considering how the data problem solving process can be applied to
            an area of the your choosing.
          stages:
            Representation Matters:
              name: Representation Matters
              description_student: In the first lesson of the data unit, students
                will get an overview of what data is and how it is used to solve problems.  Students
                will start off with a brief discussion to come to a common understanding
                of data.  They then split into groups and use a data set to make a
                series of meal recommendations for people with various criteria.  Each
                group has the choices of meal represented in a different way (pictures,
                recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards,
                groups compare their responses and discuss how the different representations
                of the meal data affected how the students were able to solve the
                different problems.
              description_teacher: In the first lesson of the data unit, students
                will get an overview of what data is and how it is used to solve problems.  Students
                will start off with a brief discussion to come to a common understanding
                of data.  They then split into groups and use a data set to make a
                series of meal recommendations for people with various criteria.  Each
                group has the choices of meal represented in a different way (pictures,
                recipes, menu, nutrition) that gives an advantage for one of the recommendations.  Afterwards,
                groups compare their responses and discuss how the different representations
                of the meal data affected how the students were able to solve the
                different problems.
            Patterns and Representation:
              name: Patterns and Representation
              description_student: In this lesson students create their own system
                for representing information. They begin by brainstorming all the
                different systems they already use to represent yes-no responses.
                They then work in small groups to create a system that can represent
                any letter in the alphabet using only a single stack of cards. The
                cards used have one of 6 different possible drawings (6 animals, 6
                colors, etc.) and so to represent the entire alphabet students will
                need to use patterns of multiple cards to represent each letter. Students
                will create messages with their systems and exchange with other groups
                to ensure the system worked as intended. In the wrap-up discussion
                the class will review any pros and cons of the different systems.
                They will discuss commonalities between working systems and recognize
                that there are many possible solutions to this problem and what's
                important is that everyone use the same arbitrary system to communicate.
              description_teacher: In this lesson students create their own system
                for representing information. They begin by brainstorming all the
                different systems they already use to represent yes-no responses.
                They then work in small groups to create a system that can represent
                any letter in the alphabet using only a single stack of cards. The
                cards used have one of 6 different possible drawings (6 animals, 6
                colors, etc.) and so to represent the entire alphabet students will
                need to use patterns of multiple cards to represent each letter. Students
                will create messages with their systems and exchange with other groups
                to ensure the system worked as intended. In the wrap-up discussion
                the class will review any pros and cons of the different systems.
                They will discuss commonalities between working systems and recognize
                that there are many possible solutions to this problem and what's
                important is that everyone use the same arbitrary system to communicate.
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
              description_student: In this lesson students learn to use their first
                binary system for encoding information, the ASCII system for representing
                letters and other characters. At the beginning of the lesson the teacher
                introduces the fact that computers must represent information using
                either "on" or "off". Then students are introduced to the ASCII system
                for representing text using binary symbols. Students practice using
                this system before encoding their own message using ASCII. At the
                end of the lesson a debrief conversation helps synthesize the key
                learning objectives of the activity.
              description_teacher: In this lesson students learn to use their first
                binary system for encoding information, the ASCII system for representing
                letters and other characters. At the beginning of the lesson the teacher
                introduces the fact that computers must represent information using
                either "on" or "off". Then students are introduced to the ASCII system
                for representing text using binary symbols. Students practice using
                this system before encoding their own message using ASCII. At the
                end of the lesson a debrief conversation helps synthesize the key
                learning objectives of the activity.
            Representing Images:
              name: Representing Images
              description_student: In this lesson students learn how computers represent
                images. To begin the lesson they consider the challenge of turning
                all the complexity of vision into a binary pattern. Through a series
                of images showing how this transformation is made students are introduced
                to the concept of splitting images into squares or "pixels" which
                can then be turned on or off individually to make the entire image.
                Students then do a short set of challenges using the Pixelation Widget
                in order to draw black and white images. Puzzles are designed to call
                out some of the challenges of representing images in this way. In
                the wrap up students make connections between the system for representing
                images and the system for representing text they learned in the previous
                lesson.
              description_teacher: In this lesson students learn how computers represent
                images. To begin the lesson they consider the challenge of turning
                all the complexity of vision into a binary pattern. Through a series
                of images showing how this transformation is made students are introduced
                to the concept of splitting images into squares or "pixels" which
                can then be turned on or off individually to make the entire image.
                Students then do a short set of challenges using the Pixelation Widget
                in order to draw black and white images. Puzzles are designed to call
                out some of the challenges of representing images in this way. In
                the wrap up students make connections between the system for representing
                images and the system for representing text they learned in the previous
                lesson.
            Representing Numbers Part 1:
              name: რიცხვების წარმოდგენა ნაწილი 1
            Representing Numbers Part 2:
              name: რიცხვების წარმოდგენა ნაწილი 2
            Combining Representations:
              name: Combining Representations
              description_student: In this lesson, students use all three types of
                binary representation systems (ASCII characters, binary number, and
                images) to decode information in a record.  After seeing a series
                of bits and being asked to decode them, students are introduced to
                the idea that in order to understand binary information, they must
                understand both the system that is being used and the meaning of the
                information encoded.  They then decode a record representing a pet
                based on a given structure.
              description_teacher: In this lesson, students use all three types of
                binary representation systems (ASCII characters, binary number, and
                images) to decode information in a record.  After seeing a series
                of bits and being asked to decode them, students are introduced to
                the idea that in order to understand binary information, they must
                understand both the system that is being used and the meaning of the
                information encoded.  They then decode a record representing a pet
                based on a given structure.
            Project - Create a Representation:
              name: პროექტი - შექმენით წარმოდგენა
              description_student: In this lesson students design a structure to represent
                their perfect day using the binary representation systems they've
                learned in this chapter. Students will first write a short description
                of their perfect day and then review with a partner to identify the
                key pieces of information they think a computer could capture. As
                a class students will decide how a punch card of bytes of information
                will be interpreted to represent those pieces of information. Students
                will then use the ASCII, binary number, and image formats they have
                learned to represent their perfect days. Students then trade punch
                cards and try to decipher what the other student's perfect day is
                like. The lesson ends with a reflection.
              description_teacher: In this lesson students design a structure to represent
                their perfect day using the binary representation systems they've
                learned in this chapter. Students will first write a short description
                of their perfect day and then review with a partner to identify the
                key pieces of information they think a computer could capture. As
                a class students will decide how a punch card of bytes of information
                will be interpreted to represent those pieces of information. Students
                will then use the ASCII, binary number, and image formats they have
                learned to represent their perfect days. Students then trade punch
                cards and try to decipher what the other student's perfect day is
                like. The lesson ends with a reflection.
            Problem Solving and Data:
              name: პრობლემათა გადაჭრა და მონაცემები
              description_student: In this lesson, students use the problem solving
                process from earlier in the course to solve a data problem.
              description_teacher: In this lesson, students use the problem solving
                process from earlier in the course to solve a data problem.
            Making Decisions with Data:
              name: გადაწყვეტილების მიღება მონაცემებთან ერთად
              description_student: In this lesson students get practice making decisions
                with data based on some problems designed to be familiar to middle
                school students. Students work in groups discussing how they would
                use the data presented to make a decision before the class discusses
                their final choices. Not all questions have right answers and in some
                cases students can and should decide that they should collect more
                data. The lesson concludes with a discussion of how different people
                could draw different conclusions from the same data, or how collecting
                different data might have affected the decisions they made.
              description_teacher: In this lesson students get practice making decisions
                with data based on some problems designed to be familiar to middle
                school students. Students work in groups discussing how they would
                use the data presented to make a decision before the class discusses
                their final choices. Not all questions have right answers and in some
                cases students can and should decide that they should collect more
                data. The lesson concludes with a discussion of how different people
                could draw different conclusions from the same data, or how collecting
                different data might have affected the decisions they made.
            Interpreting Data:
              name: მონაცემთა ინტერპრეტაცია
              description_student: In this lesson, students go further into the interpretation
                of data, including cleaning and visualizing raw data sets.  Students
                first look at the how presenting data in different ways can help people
                to understand it better.  They then visualize their own raw data set,
                in the context of a pizza topping survey, deciding what to do with
                data that does not easily fit into the visualization scheme that they
                have chosen.  Last, students look at what parts of this process can
                be automated, and what need a human to make decisions.
              description_teacher: In this lesson, students go further into the interpretation
                of data, including cleaning and visualizing raw data sets.  Students
                first look at the how presenting data in different ways can help people
                to understand it better.  They then visualize their own raw data set,
                in the context of a pizza topping survey, deciding what to do with
                data that does not easily fit into the visualization scheme that they
                have chosen.  Last, students look at what parts of this process can
                be automated, and what need a human to make decisions.
            Automating Data Decisions:
              name: ავტომატური მონაცემთა გადაწყვეტილებები
              description_student: In this lesson students look at a simple example
                of how a computer could be used to complete essentially every step
                of the data problem solving process. To begin students are given the
                clean data they collected about their ice cream preferences. They
                use a spreadsheet to visualize this data using simple charts and discuss
                in groups the decision they would make with this data. Students then
                create rules, or an algorithm, that a computer could use to make this
                decision automatically. Groups share their rules and what choices
                their rules would make with the class data. They then use their rules
                on data from another class to reinforce the fact that the rules they
                create should be useful for any data set. The lesson concludes with
                a discussion about the benefits and drawbacks of using computers to
                automate the data problem solving process.
              description_teacher: In this lesson students look at a simple example
                of how a computer could be used to complete essentially every step
                of the data problem solving process. To begin students are given the
                clean data they collected about their ice cream preferences. They
                use a spreadsheet to visualize this data using simple charts and discuss
                in groups the decision they would make with this data. Students then
                create rules, or an algorithm, that a computer could use to make this
                decision automatically. Groups share their rules and what choices
                their rules would make with the class data. They then use their rules
                on data from another class to reinforce the fact that the rules they
                create should be useful for any data set. The lesson concludes with
                a discussion about the benefits and drawbacks of using computers to
                automate the data problem solving process.
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
              description_student: In this lesson, students look at how data is collected
                and used by a organizations to solve problems in the real world. The
                lesson begins with a quick review of the data problem solving process
                they have explored in this unit. Then students are presented three
                scenarios that could be solved using data and they brainstorm the
                types of data they would want to solve them and how they could collect
                the data. Each problem is designed to reflect a real-world service
                that exists. After brainstorming students will watch a video about
                a real-world service and will record notes about what data is collected
                by the real-world service and how it is used. At the end of the lesson
                students record whether data was provided actively by a user, was
                recorded passively, or is collected by sensors.
              description_teacher: In this lesson, students look at how data is collected
                and used by a organizations to solve problems in the real world. The
                lesson begins with a quick review of the data problem solving process
                they have explored in this unit. Then students are presented three
                scenarios that could be solved using data and they brainstorm the
                types of data they would want to solve them and how they could collect
                the data. Each problem is designed to reflect a real-world service
                that exists. After brainstorming students will watch a video about
                a real-world service and will record notes about what data is collected
                by the real-world service and how it is used. At the end of the lesson
                students record whether data was provided actively by a user, was
                recorded passively, or is collected by sensors.
            Project - Solve a Data Problem:
              name: პროექტი - გადაწყვიტეთ მონაცემთა პრობლემა
              description_student: To conclude this unit students will design a way
                to use data to make a recommendation or prediction to help solve a
                problem. Students will follow a project guide to complete this multi-day
                activity. In the first several steps students brainstorm problems,
                perform simple research, and define a problem of their choosing. They
                will then decide what kind of data they would want to collect, how
                it could be collected, and how it could be used. Students will perform
                a peer review and make any necessary updates to their project before
                preparing a presentation to their classmates.
              description_teacher: To conclude this unit students will design a way
                to use data to make a recommendation or prediction to help solve a
                problem. Students will follow a project guide to complete this multi-day
                activity. In the first several steps students brainstorm problems,
                perform simple research, and define a problem of their choosing. They
                will then decide what kind of data they would want to collect, how
                it could be collected, and how it could be used. Students will perform
                a peer review and make any necessary updates to their project before
                preparing a presentation to their classmates.
            Representing Numbers:
              name: რიცხვების წარმოდგენა
              description_student: In this lesson, students learn about the binary
                number system.  With a set of cards that represent the place values
                in a binary (base-2) number system by a collection of dots, students
                turn bits "on" or "off" by turning cards face up and face down, then
                observe the numbers that result from these different patterns.  Eventually,
                student extend the pattern to a generic 4-bit system.
              description_teacher: In this lesson, students learn about the binary
                number system.  With a set of cards that represent the place values
                in a binary (base-2) number system by a collection of dots, students
                turn bits "on" or "off" by turning cards face up and face down, then
                observe the numbers that result from these different patterns.  Eventually,
                student extend the pattern to a generic 4-bit system.
            8-bit Numbers:
              name: 8-ბიტიანი რიცხვები
              description_student: Students review the concept of binary numbers,
                and discuss that they need to know the bit-length of each number in
                order to decode a series of bits.  They then made a flippy-do, a paper
                manipulative that will help them to encode and decode 8-bit numbers
                (0-255).  After practicing with the flippy-do, students discuss how
                they could extend that standardization to the other types of data.
              description_teacher: Students review the concept of binary numbers,
                and discuss that they need to know the bit-length of each number in
                order to decode a series of bits.  They then made a flippy-do, a paper
                manipulative that will help them to encode and decode 8-bit numbers
                (0-255).  After practicing with the flippy-do, students discuss how
                they could extend that standardization to the other types of data.
            Encryption:
              name: დაშიფრვა
              description_student: Students have a discussion on the different levels
                of security they would like for personal data.  Once the class has
                developed an understanding of the importance of privacy, they learn
                about the process of encrypting information by enciphering a note
                for a partner and deciphering the partner's note.  The class concludes
                with a discussion about the importance of both physical and digital
                security.
              description_teacher: Students have a discussion on the different levels
                of security they would like for personal data.  Once the class has
                developed an understanding of the importance of privacy, they learn
                about the process of encrypting information by enciphering a note
                for a partner and deciphering the partner's note.  The class concludes
                with a discussion about the importance of both physical and digital
                security.
            Structuring Data:
              name: Structuring Data
              description_student: This lesson goes further into the interpretation
                of data, including cleaning and visualizing raw data sets.  The class
                first looks at the how presenting data in different ways can help
                people to understand it better.  After seeing how cleaning and visualization
                can help people make better decisions, the class looks at what parts
                of this process can be automated, and what need a human.
              description_teacher: In this lesson, students go further into the collection
                and interpretation of data, including cleaning and visualizing raw
                data sets.  Students first look at the how presenting data in different
                ways can help people to understand it better.  They then visualize
                their own raw data set, in the context of a pizza topping survey,
                deciding what to do with data that does not easily fit into the visualization
                scheme that they have chosen.  Last, students look at what parts of
                this process can be automated, and what need a human to make decisions.
            Keeping Data Secret:
              name: Keeping Data Secret
              description_student: Students have a discussion on the different levels
                of security they would like for personal data.  Once the class has
                developed an understanding of the importance of privacy, they learn
                about the process of encrypting information by enciphering a note
                for a partner and deciphering the partner's note.  The class concludes
                with a discussion about the importance of both physical and digital
                security.
              description_teacher: Students have a discussion on the different levels
                of security they would like for personal data.  Once the class has
                developed an understanding of the importance of privacy, they learn
                about the process of encrypting information by enciphering a note
                for a partner and deciphering the partner's note.  The class concludes
                with a discussion about the importance of both physical and digital
                security.
        csd3-old:
          title: CSD Unit 3 (DEPRECATED)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 3
          description: This is the original draft of CSD Unit 3, released in the fall
            of 2016. Unless you have students currently using this course, you should
            instead use the updated version of this unit at studio.code.org/s/csd3
            - this original draft will remain available until July 1, 2017.
          stages:
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
            Draw Loop and Randomization:
              name: ხატვის ციკლი და შემთხვევითობა
            Variables Unplugged:
              name: Variables Unplugged
            Variables and Animation:
              name: ცვლადები და ანიმაცია
            Sprites and Properties:
              name: სპრაიტები და თვისებები
            Sprites and Images:
              name: სპრაიტები და სურათები
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals and Keyboard Input:
              name: Conditionals and Keyboard Input
            Complex Conditionals:
              name: რთული პირობითი ბრძანებები
            'Project: Interactive Card':
              name: 'პროექტი: ინტერაქტიული ბარათი'
            Velocity:
              name: სიჩქარე
            Collision Detection:
              name: შეჯახების აღმოჩენა
            Complex Sprite Movement:
              name: სპრაიტების რთული მოძრაობა
            Collisions:
              name: შეჯახებები
            Functions:
              name: ფუნქციები
            The Game Design Process:
              name: თამაშის დიზაინის პროცესი
            Using the Game Design Process:
              name: თამაშის დიზაინის პროცესის გამოყენება
            'Project: Design a Game':
              name: 'პროექტი: შექმენით თამაშის დიზაინი'
        csd1-old:
          title: CSD თავი 1 (შემოკლებული)
          description_audience: ''
          description_short: 2016/2017 Draft of CSD Unit 1
          description: This is the original draft of CSD Unit 1, originally published
            in the fall of 2016. This version has been replaced with an updated unit
            at studio.code.org/s/csd1 and will only remain available until July 1,
            2017.
          stages:
            Intro to Problem Solving:
              name: შესავალი პრობლემების გადაწყვეტაში
            The Problem Solving Process:
              name: პროებლემების გადაჭრის პროცესი
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: რა არის კომპიუტერი?
            Representing Information:
              name: ინფორმაციის წარმოდგენა
            Processing with Bits:
              name: დამუშავება ბიტებით
            Human vs Computer Processing:
              name: ადამიანი კომპიუტერული დამუშავების წინააღმდეგ
            Processing with Apps:
              name: დამუშავება აპლიკაციებით
            'Project: Apps and Problem Solving':
              name: 'პროექტი: აპლიკაციები და პრობლემების გადაჭრა'
        csd2-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Text on the Web:
              name: ტექსტი ვებში
            Digital Footprint:
              name: ციფრული ნაკვალევი
            Images in HTML:
              name: სურათები HTML-ში
            Exploring Websites:
              name: ვებსაიტების გამოკვლევა
            'Websites for Expression ':
              name: 'ვებსაიტები გამოხატვისათვის '
            Intro to HTML:
              name: შესავალი HTML-ში
            Headers and Lists:
              name: სათაურები და სიები
            Intellectual Property:
              name: ინტელექტუალური ქონება
            Images:
              name: სურათები
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Project - Multi-Page Websites:
              name: პროექტი - მრავალგვერდიანი ვებსაიტები
            Styling Text with CSS:
              name: ტექსტის გასტილვა CSS-ით
            Styling Elements with CSS:
              name: ელემენტების გასტილვა CSS-ით
            Sources and Search Engines:
              name: Sources and Search Engines
            RGB Colors and Classes:
              name: RGB ფერები და კლასები
            Project - Personal Portfolio Website:
              name: პროექტი - პირადი პორტფოლიოს ვებსაიტი
            Headers:
              name: ჰედერები
            Intellectual Property and Images:
              name: ინტელექტუალური საკუთრება და სურათები
            Lists:
              name: სიები
        csd1-draft:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Intro to Problem Solving:
              name: შესავალი პრობლემების გადაწყვეტაში
            The Problem Solving Process:
              name: პროებლემების გადაჭრის პროცესი
            Exploring Problem Solving:
              name: Exploring Problem Solving
            What is a Computer?:
              name: რა არის კომპიუტერი?
            Inputs and Outputs:
              name: შეყვანილი და მიღებული ინფორმაცია
            Processing:
              name: დამუშავება
            Storage:
              name: საცავი
            Apps and Problem Solving:
              name: აპლიკაციები და პრობლემების გადაჭრა
            Project - Propose an App:
              name: პროექტი - შემოგვთავაზეთ აპლიკაცია
            Input and Output:
              name: შეყვანილი და მიღებული ინფორმაცია
        csd3-chapters:
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
          stages:
            Programming for Entertainment:
              name: პროგრამირება გართობისათვის
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
            Shapes and Randomness:
              name: ფიგურები და შემთხვევითობა
            Variables:
              name: ცვლადები
            Sprites:
              name: სპრაიტები
            The Draw Loop:
              name: ხატვის ციკლი
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: სპრაიტების მოძრაობა
            Booleans and Conditionals:
              name: Booleans and Conditionals
            Conditionals:
              name: პირობითი ბრძანებები
            Keyboard Input:
              name: კლავიატურიდან შეყვანილი ინფორმაცია
            Other Forms of Input:
              name: Other Forms of Input
            'Project: Interactive Card':
              name: 'პროექტი: ინტერაქტიული ბარათი'
            Velocity:
              name: სიჩქარე
            Collision Detection:
              name: შეჯახების აღმოჩენა
            Complex Sprite Movement:
              name: სპრაიტების რთული მოძრაობა
            Collisions:
              name: შეჯახებები
            Functions:
              name: ფუნქციები
            The Game Design Process:
              name: თამაშის დიზაინის პროცესი
            Using the Game Design Process:
              name: თამაშის დიზაინის პროცესის გამოყენება
            'Project: Design a Game':
              name: 'პროექტი: შექმენით თამაშის დიზაინი'
            'Chapter 1: Images and Animation':
              name: 'თავი 1: სურათები და ანიმაცია'
            'null':
              name: ნული
            temp:
              name: temp
        coursef-ramp:
          stages:
            'Algorithms: Tangrams':
              name: 'ალგორითმები: ტანგრამები'
            Introduction:
              name: შესავალი
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
            Functions in Farmer:
              name: ფუნქციები ფერმერში
            Conditionals and Functions in Bee:
              name: პირობითი ოპერატორები და ფუნქციები ფუტკარში
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csppostsurvey-staging:
          title: "[Deprecated] CSP post survey staging area"
          description_audience: ''
          description_short: ''
          description: Moved to /s/csp-post-survey.  Destory after 05.05.17
          stages:
            CSP Student Post Survey Staging:
              name: CSP Student Post Survey Staging
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
        fmscsd3preview:
          stages:
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
          title: CSD - Drawing in Game Lab
          description_audience: Falmouth Middle School (Mike Harvey)
          description_short: ''
          description: ''
        csppostsurvey:
          stages:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
          title: CSP Student Post-Course Survey
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: 'Welcome to the Code.org CS Principles Post-Course Survey.  This
            survey takes about 10 minutes to complete.  Your responses are private
            and anonymous.  '
        csp-post-survey:
          stages:
            CSP Student Post-Course Survey:
              name: CSP Student Post-Course Survey
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
            CSP Post-Course Survey:
              name: CSP Post-Course Survey
          title: CSP Student Post-Course Survey
          description_audience: CSP Students
          description_short: CSP Student Post Course Survey
          description: 'Welcome to the Code.org CS Principles Post-Course Survey.  This
            survey takes about 10 minutes to complete.  Your responses are private
            and anonymous.  '
        public-key-cryptography:
          stages:
            Public Key Crypto Widgets:
              name: Public Key Crypto Widgets
          title: Public Key Cryptography Widgets
          description_audience: ''
          description_short: ''
          description: ''
        csd2-old:
          stages:
            Quality Websites:
              name: ხარისხიანი ვებსაიტები
            Website Design:
              name: ვებსაიტის დიზაინი
            Describing Web pages:
              name: Describing Web pages
            Text on the Web:
              name: ტექსტი ვებში
            Images in HTML:
              name: სურათები HTML-ში
            Clean Code and Debugging:
              name: Clean Code and Debugging
            Styling Text with CSS:
              name: ტექსტის გასტილვა CSS-ით
            Styling Elements with CSS:
              name: ელემენტების გასტილვა CSS-ით
            Multi-Page Websites:
              name: მრავალგვერდიანი ვებსაიტები
            Classes:
              name: კლასები
            Peer Review:
              name: თანატოლის კომენტარი
            Digital Footprint:
              name: ციფრული ნაკვალევი
            Publishing a Website:
              name: Publishing a Website
            Sources and Search Engines:
              name: Sources and Search Engines
            Intellectual Property:
              name: ინტელექტუალური ქონება
            'Project: Personal Portfolio Website':
              name: 'პროექტი: პირადი პორტფოლიოს ვებსაიტი'
          title: CSD Unit 2 (DEPRECATED)
          description_audience: ''
          description_short: Web Development
          description: ''
        artist-and-bb8:
          stages:
            B8 New BB8:
              name: B8 New BB8
            c8 to BB8:
              name: c8 to BB8
            B8 BB8:
              name: B8 BB8
            C9 Artist Loops:
              name: C9 მხატვრის ციკლები
            C8 to BB8:
              name: C8 to BB8
            D7 to Laurel:
              name: D7 to Laurel
            D6 Frozen Artist:
              name: D6 Frozen Artist
            F7 add Conditionals:
              name: F7 add Conditionals
            F5 Minecraft:
              name: F5 მაინკრაფტი
            Programming with BB-8:
              name: პროგრამირება BB-8-სთან ერთად
            Loops with BB-8:
              name: ციკლები BB-8-სთან ერთად
            D13 no If/While:
              name: D13 no If/While
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
            Bounce:
              name: Bounce
            NewBounce:
              name: NewBounce
            F PlayLab Variables:
              name: F PlayLab Variables
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        coursea:
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
              description_student: ''
              description_teacher: 'This lesson will guide students through the steps
                of debugging.  Students will learn the mantra: "What happened?  What
                was supposed to happen? What does that tell you?"'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
              description_student: ''
              description_teacher: |-
                When students run into a barrier while answering a question or working on a project, it’s so easy for them to get frustrated and give up.  This lesson will introduce students to the idea that frustration can be an important part of learning. Here, frustration is presented as a step in the creative process, rather than a sign of failure.\r
                \r
                This lession can be done over one or two class sessions.  If you have more time, feel free to draw out the building and revising phase of the Marble Run activity.
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
              description_student: ''
              description_teacher: 'In this lesson, students will relate the concept
                of algorithms back to everyday, real-life activities by planting an
                actual seed. The goal here is to start building the skills to translate
                real-world situations to online scenarios and vice versa.\r

'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: ''
              description_teacher: ეს გაკვეთილი შეუქმნის მოსწავლეებს წარმოდგენას თუ
                რას უნდა ელოდონ, როდესაც გაემგზავრებიან კომპიუტერულ ლაბორატორიაში.
                ის იწყება მოკლე განხილვით და კომპიუტერულ ლაბორატორიაში ქცევის წესებით,
                შემდეგ მოსწავლეები გადავლენ კომპიუტერის საშუალებით ონლაინ თავსატეხების
                ამოხსნაზე.
            'Programming: Happy Maps':
              name: 'პროგრამირება: ბედნიერი რუკები'
              description_student: ''
              description_teacher: ხიდი, რომელიც აკავშირებს ალგორითმებს და პროგრამირებას
                შეიძლება იყო მოკლე, თუ მოსწავლეებს ესმით განსხვავება მიმდევრობის დაგეგმარებასა
                და ამ მიმდევრობის პროგრამირების ენაზე კოდირების შორის. ეს აქტივობა
                დაეხმარება მოსწავლეებს მიიღონ გამოცდილება ფსევდოკოდის წაკითხვასა და
                დაწერაში.
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
              description_student: ''
              description_teacher: In this series of online puzzles, students will
                build on the understanding of algorithms, debugging, and general computer
                literacy. Featuring characters from the game Angry Birds, students
                will develop sequential algorithms to get the bird to the pig without
                crashing into walls or TNT. Debugging puzzles have also been mixed
                into this stage for added practice with problem solving and critical
                thinking.
            Going Places Safely:
              name: უსაფრთხო მგზავრობა
              description_student: ''
              description_teacher: In collaboration with [r common-sense-media], this
                lesson helps students learn that many websites ask for information
                that is private and discusses how to responsibly handle such requests.
                Students also find out that they can go to exciting places online,
                but they need to follow certain rules to remain safe.
            'Loops: Happy Loops':
              name: 'ციკლები: ბედნიერი ციკლები'
              description_student: ''
              description_teacher: Loops are a very helpful and powerful tool in programming.
                To understand how helpful loops can be, students will need to be driven
                to want an easier way to solve mundane problems.
            Loops in Collector:
              name: ციკლები შემგროვებელში
              description_student: ''
              description_teacher: განმეორებადი ინსტრუქციების შესახებ, "ბედნიერი ციკლებიდან"
                მიღებული ცოდნის საფუძველზე, ამ ეტაპზე მოსწავლეები ციკლებს Code.org-ზე
                განძეულობის უფრო ეფექტურად შესაგროვებლად გამოიყენებენ.
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: Returning to loops, students learn to draw images
                by looping simple sequences of instructions. In the previous plugged
                lesson, loops were used to traverse a maze and collect treasure. Here,
                loops are creating patterns. At the end of this stage, students will
                be given the opportunity to create their own images using loops.
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
              description_student: ''
              description_teacher: Events are a great way to add variety to a pre-written
                algorithm. Sometimes you want your program to be able to respond to
                the user exactly when the user wants it to. That is what events are
                for.
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
              description_student: ''
              description_teacher: ამ ონლაინ აქტივობაში, მოსწავლეებს ექნებათ საშუალება
                შეისწავლონ სათამაშო ლაბორატორიაში მოვლენების გამოყენება და გამოიყენონ
                კოდის წერის უნარები, რათა შექმნან ანიმირებული თამაში. დროა გავხდეთ
                კრეატიულები და შევქმნათ ამბავი სათამაშო ლაბორატორიაში!
          title: კურსი A
          description_audience: 'ასაკი: 4-7'
          description_short: შესავალი კომპიუტერულ მეცნიერებაში მათთვის, ვინც ჯერ კითხვა
            არ იცის.
          description: შეისწავლეთ კომპიუტერული მეცნიერების და ინტერნეტ უსაფრთხოების
            საფუძვლები. კურსის ბოლოს შექმენით თქვენი საკუთარი თამაში ან ისტორია, რომლის
            გაზიარებას შეძლებთ.
        courseb:
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            Your Digital Footprint:
              name: 'ციფრული მოქალაქეობა: ჩემი ციფრული ფეხის ნაკვალევი'
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Collector:
              name: ციკლები შემგროვებელში
            Loops in Artist:
              name: ციკლები მხატვარში
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
            More Programming in Maze:
              name: მეტი პროგრამირება ლაბირინთში
            Programming with Rey and BB-8:
              name: პროგრამირება რეისთან და BB-8-სთან ერთად
          title: კურსი B
          description_audience: 'ასაკი: 5-8'
          description_short: შესავალი კომპიუტერულ მეცნიერებაში დამწყებ მკითხველთათვის.
            (A კურსის მსგავსი, მაგრამ უფრო მრავალფეროვანი უფრო მოსწავლეებისთვის.)
          description: შეისწავლეთ კომპიუტერული მეცნიერების და ინტერნეტ უსაფრთხოების
            საფუძვლები. კურსის ბოლოს შექმენით თქვენი საკუთარი თამაში ან ისტორია, რომლის
            გაზიარებას შეძლებთ.
        coursec:
          stages:
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
            Debugging in Maze:
              name: დებაგირება ლაბირინთში
            'Real-life Algorithms: Paper Planes':
              name: 'ცხოვრებისეული ალგორითმები: ქაღალდის თვითმფრინავები'
            Programming in Collector:
              name: პროგრამირება შემგროვებელში
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
            Loops in Maze:
              name: ციკლები ლაბირინთში
            Loops in Harvester:
              name: Loops in Harvester
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Build a Flappy Game:
              name: ააწყვეთ მოფარფატე ჩიტის თამაში
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
            Screen Out the Mean:
              name: Screen Out the Mean
            Binary Bracelets:
              name: 'პროგრამირების მიღმა: ორობითი სამაჯურები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Loops with Rey and BB-8:
              name: ციკლები რეისთან და BB-8-სთან ერთად
          title: კურსი C
          description_audience: 'ასაკი: 6-10'
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: შექმენით პროგრამები ციკლებით, მოვლენებით და პირობითი წინადადებებით.
            გადათარგმნეთ თქვენი ინიციალები ორობითში, გამოიკვლიეთ სხვადასხვა პრობლემის
            გადაჭრის ტექნიკა და ისწავლეთ თუ როგორ უნდა უპასუხოთ კიბერძალადობას. კურსის
            ბოლოს შექმენით თქვენი საკუთარი თამაში ან ამბავი, რომლის გაზიარებასაც შეძლებთ.
        coursed:
          stages:
            Introduction:
              name: შესავალი ონლაინ თავსატეხებში
              description_student: ეს გაკვეთილი გაგივარჯიშებთ იმ უნარებს, რომლებიც
                ამ კურსში დაგჭირდებათ.
              description_teacher: 'In this set of puzzles, students will begin with
                an introduction (or review depending on the experience of your class)
                of Code.org''s online workspace. There will be videos pointing out
                the basic functionality of the workspace including the `Run`, `Reset`,
                and `Step` buttons. Also discussed in these videos: dragging Blockly
                blocks, deleting Blockly blocks, and connecting Blockly blocks. Next,
                students will practice their _sequencing_ and _debugging_ skills in
                maze. From there, students will see new types of puzzles like Collector,
                Artist, and Harvester when they learn the very basics of _loops_.'
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
              description_student: ამ გაკვეთილში თქვენ დააპროგრამებთ თქვენს მეგობარს,
                რათა მან დახატოს სურათები!
              description_teacher: By "programming" one another to draw pictures,
                students will begin to understand what coding is really about. The
                class will begin by having students instruct each other to color squares
                on graph paper in an effort to reproduce an existing picture. If there’s
                time, the lesson can conclude with images that the students create
                themselves.
            Events in Bounce:
              name: მოვლენები მხტუნავში
              description_student: Ever wish you could play video games in school?
                In this lesson, you will get to make your own!
              description_teacher: In this online activity, students will learn what
                events are, and how computers use them in programs like video games.
                Students will work through puzzles making the program react to events
                (like arrow buttons being pressed.) At the end of the puzzle, students
                will have the opportunity to customize their game with different speeds
                and sounds.
            Nested Loops:
              name: ჩასმული ციკლები
              description_student: Loops inside loops inside loops. What does this
                mean? This lesson will teach you what happens when you place a loop
                inside another loop.
              description_teacher: In this online activity, students will have the
                opportunity to push their understanding of loops to a whole new level.
                Playing with the Bee and Plants vs Zombies, students will learn how
                to program a loop to be inside of another loop. They will also be
                encouraged to figure out how little changes in either loop will affect
                their program when they click `Run`.
            Nested Loops in Artist:
              name: ჩადგმული ციკლების პროექტი მხატვარში
              description_student: აქ თქვენ გამოიყენეთ ჩადგმულ ციკლებს, რათა შექმნათ
                მაგარი პროექტები, რომელთაც გაუზიარებთ თქვენს ოჯახს და მეგობრებს.
              description_teacher: ახლა, როდესაც მოსწავლეებმა იციან საკუთარი ციკლების
                ფენა-ფენა განლაგება, მათ შეეძლებათ მრავალს ლამაზი რამის შექმნა. ამ
                გაკვეთილში მოსწავლეები შეასრულებენ რიგ სავარჯიშოს, რომლებიც დაეხმარებიან
                მათ საკუთარი, პორფოლიოსთვის გამზადებული სურათების შექმნაში.
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
              description_student: გახსოვთ, კურსის დასაწყისში კოდის საშუალებით ნახატები
                შექმენით? ამ გაკვეთილში, თქვენ იმუშავებთ გუნდთან ერთად, რათა შექმნათ
                რაღაც ძალიან მსგავსი!
              description_teacher: ეს გაკვეთილი იწყება ქაღალდზე გრაფიკული პროგრამირების
                მოკლე მიმოხილვით და გრძელდება სისწრაფეში შეჯიბრით, რომელშიც სტუდენტები
                ჯგუფებად იყოფიან და პროგრამის დაწერაზე ერთობლივად მუშაობენ, პრინციპით
                ერთი ინსტრუქცია ერთ ჯერზე.
            Debugging in Bee:
              name: დებაგირება ფუტკარში
            While Loops in Farmer:
              name: While ციკლები ფერმერში
              description_student: 'ციკლები ძალიან გამოსადეგია კოდირებაში. ეს გაკვეთილი
                შეგასწავლით ახალ ციკლის სახეობებს: "სანამ" ციკლებს!'
              description_teacher: "By the time students reach this lesson, they should
                already have plenty of practice using `repeat` loops, so now it's
                time to mix things up. \n\n_While loops_ are loops that continue to
                repeat commands while a condition is met. While loops are used when
                the programmer doesn't know the exact number of times commands need
                to be repeated, but does know what condition needs to be true in order
                for the loop to continue repeating. For example, students will be
                working to fill holes and dig dirt in Farmer. They will not know the
                size of the holes or the height of the mountains of dirt, but the
                students will know they need to keep filling the holes and digging
                the dirt as long as the ground is not flat."
            Conditionals with Cards:
              name: 'თუ/სხვაგვარად: პიროდიბითი წინადადებები ბარათების გამოყენებით'
              description_student: დროა ვითამაშოთ თამაში, რომელშიც თქვენ დააგროვებთ
                ქულებს გარკვეული პირობების შესრულების შემთხვევაში!
              description_teacher: 'This lesson demonstrates how conditionals can
                be used to tailor a program to specific information. We don’t always
                have all of the information we need when writing a program. Sometimes
                you will want to do something different in one situation than in another,
                even if you don''t know what situation will be true when your code
                runs. That is where conditionals come in. Conditionals allow a computer
                to make a decision, based on the information that is true any time
                your code is run.

'
            Conditionals in Bee:
              name: პირობითი ბრძანებები ფუტკარში
              description_student: 'Now that you understand conditionals, it''s time
                to program Bee to use them when collecting honey and nectar. '
              description_teacher: Up until this point students have been writing
                code that executes exactly the same way each time it is run - reliable,
                but not very flexible. In this lesson, your class will begin to code
                with conditionals, allowing them to write code that functions differently
                depending on the specific conditions the program encounters.
            Conditionals & Loops in Maze:
              name: პირობითი წინადადებები და ციკლები ლაბირინთში
              description_student: You can do some amazing things when you use conditionals
                and loops together!
              description_teacher: 'In this lesson, students will be pairing together
                two key concepts: loops and conditionals. This set of puzzles bridges
                the gaps in understanding that occur when working on puzzles that
                use multiple kinds of blocks. By bringing two ideas together, students
                will create more complex code that shows both impressive creativity
                and critical thinking!'
            Conditionals & Loops in Farmer:
              name: პირობითი წინადადებები და ციკლები ფერმერში
              description_student: It's not always clear when to use each conditional.  This
                lesson will help you get practice deciding what to do.
              description_teacher: Students will practice `while` loops, `until` loops,
                and `if / else` statements. All of these blocks use conditionals.
                By practicing all three, students will learn to write complex and
                flexible code.
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
              description_student: Some information is not safe to share online. This
                lesson will help you learn the difference between safe and private
                information.
              description_teacher: |-
                In collaboration with Common Sense Education, this lesson helps students learn to think critically about the user information that some websites request or require. Students learn the difference between private information and personal information, distinguishing what is safe and unsafe to share online.

                Students will also explore what it means to be responsible and respectful to their offline and online communities as a step toward learning how to be good digital citizens.
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
              description_student: This lesson will guide you through making your
                very own video game.
              description_teacher: In this online activity, students will have the
                opportunity to learn how to use events in Play Lab and to apply all
                of the coding skills they've learned to create an animated game. It's
                time to get creative and make a game in Play Lab!
            'Unplugged: Binary':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ორობითი სისტემა'
              description_student: 'Learn how computers store pictures using simple
                ideas like on and off. '
              description_teacher: Though many people think of binary as strictly
                zeros and ones, students will be introduced to the idea that information
                can be represented in a variety of binary options. This lesson takes
                that concept one step further as it illustrates how a computer can
                store even more complex information (such as images and colors) in
                binary, as well.
            Artist Binary:
              name: 'მხატვარი: ორობითი'
              description_student: Direct your own artist to create a binary image
                using only commands to turn pixels on and off.
              description_teacher: ორობითი სისტემა ძალიან მნიშვნელოვანია კომპიუტერების
                სამყაროსთვის. თანამედროვე კომპიუტერების უმეტესობა ინახავს ყველა ტიპის
                ინფორმაციას ორობით მდგომარეობაში. ეს გაკვეთილი დაეხმარება მოსწავლეებს
                დაინახონ, თუ როგორ შეიძლება რეალური ცხოვრებიდან ნებისმიერი რამის გამოსახვა
                ჩართული და გამორთული მდგომარეობების მიმდევრობის სახით. მოსწავლეები
                შექმნიან ორობით სურათებს "მხატვარში". ამისათვის ისინი თარგმნიან 0-ებს
                და 1-ებს გამორთულ და ჩართულ მდგომარეობებში (ან შავსა და თეთრში).
            Nested Loops Project in Artist:
              name: Nested Loops Project in Artist
              description_student: მეტი ჩასმული ციკლი! ამჯერად, თქვენ შექმნით საოცარ
                ნახატს ჩადგმული ციკლების გამოყენებით.
              description_teacher: Now that students know how to layer their loops,
                they can create so many beautiful things.  This lesson will take students
                through a series of exercises to help them create their own portfolio-ready
                images.
            Debugging in Collector:
              name: დებაგირება შემგროვებელში
              description_student: Have you ever run into problems while coding? In
                this lesson, you will learn about the secrets of debugging. Debugging
                is the process of finding and fixing problems in your code.
              description_teacher: ამ ონლაინ აქტივობაში, მოსწავლეები "შემგროვებლის"
                გარემოში ივარჯიშებენ დებაგირებაში. მოსწავლეები ივარჯიშებენ კოდის კითხვასა
                და სახეცვლილებაში, რათა შეასწორონ თავსატეხები ალგორითმების, ციკლების
                და ჩადგმული ციკლების საშუალებით.
          title: კურსი D
          description_audience: 'ასაკი: 7-11'
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: |-
            Course D was created for students who read at roughly a third grade level. Angles and mathematical concepts are introduced with helpful videos and hints.\r
            \r
            The course begins with a review of the concepts found in Courses A, B, and C. This review helps introduce or refresh basic ideas such as repeat loops and events. Students will develop their understanding of algorithms, nested loops, while loops, conditionals, and events. Lessons on digital citizenship are also included. This course is crafted to build a strong foundation of basic concepts before opening up to a wide range of new and exciting topics.
        coursee:
          stages:
            'Algorithms: Tangrams':
              name: 'ალგორითმები: ტანგრამები'
            Introduction:
              name: შესავალი ონლაინ თავსატეხებში
              description_student: This fast-paced introduction will give you the
                chance to practice most of the skills that you will need to solve
                the puzzles in this course.
              description_teacher: In this progression, students will begin with an
                introduction (or review depending on the experience of your class)
                of Code.org's online workspace. Students will learn the basic functionality
                of the interface including the `Run`, `Reset`, and `Step` buttons.
                Dragging, deleting, and connecting Blockly blocks is also introduced
                in the beginning video. In the puzzles, students will practice their
                sequencing and debugging skills in Maze and Artist.
            The Power of Words:
              name: სიტყვების ძალა
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
            Envelope Variables:
              name: ცვლადები კონვერტებში
            Variables in Artist:
              name: ცვლადები მხატვარში
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
            For Loop Fun:
              name: ხალისი "მიზნისთვის" ციკლით
            For Loops in Bee:
              name: For ციკლები ფუტკარში
            For Loops in Artist:
              name: For ციკლები მხატვარში
            Songwriting with Parameters:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            Conditionals and Functions in Bee:
              name: პირობითი ოპერატორები და ფუნქციები ფუტკარში
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
              description_student: Here are several games and drawings. Play with
                each of them to get ideas for projects of your own!
              description_teacher: "The next four lessons provide an opportunity for
                students to put their coding skills to use in a capstone project.
                This project will help individuals gain experience with coding and
                produce an exemplar to share with peers and loved ones. Intended to
                be a multi-lesson or multi-week experience, students will spend time
                exploring brainstorming, learning about the design process, building,
                and presenting their final work. \n\nIn the explore stage, students
                will be able to view pre-built examples of projects in both Artist
                and Play Lab for inspiration. Next, students will learn about the
                design process and how to implement it in their own projects. They
                will then be given the space to create their own project in either
                Artist or Play Lab (this is likely the longest stage of the project).
                Finally, students will be able to present their finished work to their
                peers."
            The Design Process:
              name: დიზაინის პროცესი
              description_student: ასეთი დიდი პროექტები საჭიროებენ დიდ დროს და საკმაოდ
                გრძელ დაგეგმარებას. აქ, თქვენ შეისწავლით იმ დიზაინის პროცესის შესახებ,
                რომელსაც გამოიყენებთ თქვენი ქმნილების ასაწყობად.
              description_teacher: Over the course of four lessons, students will
                be building up to programming a project of their own design using
                either Play Lab or Artist as their programming environment. In this
                portion of the project, students will learn about the design process
                and how to implement it in their own projects. The lesson guide for
                all four stages of the process can be found in the first stage of
                this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
              description_student: მოემზადეთ ბევრი კოდის დასაწერად! დროა დაიწყოთ თქვენი
                პროექტის აწყობა.
              description_teacher: Over the course of four lessons, students will
                be building up to programming a project of their own design using
                either Play Lab or Artist as their programming environment. Now the
                students will be given their own space to create their project with
                either Artist or Play Lab. This is likely to be the longest stage
                of the project. The lesson guide for all four stages of the process
                can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
            Presentation Your Project:
              name: პრეზენტაცია თქვენი პროექტი
            'Algorithms: Dice Race':
              name: 'ალგორითმები: კამათლის შეჯიბრი'
              description_student: Learn how to describe a game from the computer's
                point of view in this lesson on algorithms.
              description_teacher: In this lesson, students will relate the concept
                of algorithms back to real-life activities by playing the Dice Race
                game. The goal here is to start building the skills to translate real-world
                situations to online scenarios and vice versa.
            Conditionals:
              name: პირობითი წინადადებები ფერმერში
              description_student: You will get to tell the computer what to do under
                certain conditions in this fun and challenging series.
              description_teacher: This lesson introduces students to `while` loops
                and `if / else` statements. _While loops_ are loops that continue
                to repeat commands as long as a condition is true. While loops are
                used when the programmer doesn't know the exact number of times the
                commands need to be repeated, but the programmer does know what condition
                needs to be true in order for the loop to continue looping. `If /
                Else` statements offer flexibility in programming by running entire
                sections of code only if something is true, otherwise it runs something
                else.
            Private and Personal Information:
              name: 'ციფრული მოქალაქეობა: კონფიდენციალური და პირადი ინფორმაცია'
              description_student: The internet is fun and exciting, but it's important
                to stay safe too. This lesson teaches you the difference between information
                that is safe to share and information that is private.
              description_teacher: |-
                Developed by Common Sense Education, this lesson is about the difference between information that is safe to share online and information that is not.

                As students visit sites that request information about their identities, they learn to adopt a critical inquiry process that empowers them to protect themselves and their families from identity theft. In this lesson, students learn to think critically about the user information that some websites request or require. They learn the difference between private information and personal information, as well as how to distinguish what is safe or unsafe to share online.
            Build a Star Wars Game:
              name: ააწყვეთ ვარსკვლავური ომების თამაში
              description_student: შეიგრძენით ძალა, როდესაც შექმნით თქვენს საკუთარ
                ვარსკვლავური ომების თამაშს ამ გაკვეთილში.
              description_teacher: ამ გაკვეთილში მოსწავლეები ივარჯიშებენ მოვლენების
                გამოყენებაზე. მოვლენების საშუალებით ისინი შეძლებენ ისეთი თამაშის აწყობას,
                რომელსაც შემდგომში გაუზიარებენ სხვებს ონლაინში. R2-D2 და სხვა ვარსკვლავური
                ომების პერსონაჟებთან ერთად, მოსწავლეებს შეასწავლიან მოვლენების მთავარ
                პრინციპებს, ხოლო შემდეგ მათ მიეცემათ საშუალება შექმნან საკუთარი თამაში.
            'Functions: Songwriting':
              name: 'ფუნქციები: სიმღერების დაწერა'
              description_student: როკ ვარსკვლავებსაც კი სჭირდებათ პროგრამირების უნარები.
                ეს დონე შეგასწავლით ყველაფერს ფუნქციების შესახებ სიმღერების ტექსტების
                გამოყენებით.
              description_teacher: One of the most magnificent structures in the computer
                science world is the function. Functions (sometimes called procedures)
                are mini programs that you can use over and over inside of your bigger
                program. This lesson will help students intuitively understand why
                combining chunks of code into functions can be such a helpful practice.
            Functions in Artist:
              name: ფუნქციები მხატვარში
              description_student: Make complex drawings more easily with functions!
              description_teacher: მოსწავლეები გაეცნობიან ფუნქციების გამოყენებას Code.org-ზე.
                ფუნქციების საშუალებით, "მხატვრის" პროგრამაში შეიქმნება და შესწორდება
                არაჩვეულებრივი ნახატები. უფრო რთული ნიმუშებისთვის, მოსწავლეები შეისწავლიან
                ფუნქციების ჩადგმის პრინციპებს ( ერთი ფუნქციიდან მეორის გამოძახებას).
            Functions in Bee:
              name: ფუნქციები ფუტკარში
              description_student: Don't write too much code to gather all of the
                nectar and honey. Use functions instead!
              description_teacher: In the second round of practice with online functions,
                students will navigate complex paths, collect plenty of nectar, and
                make lots of honey.
            Functions in Farmer:
              name: ფუნქციები ფერმერში
              description_student: Functions will save you lots of work as you help
                the farmer with her harvest!
              description_teacher: Students have practiced creating impressive designs
                in Artist and navigating mazes in Bee, but today they will use functions
                to harvest crops in Farmer. This lesson will push students to use
                functions in the new ways by combining them with `while` loops and
                `if / else` statements.
            Determine the Concept:
              name: Determine the Concept
              description_student: "We aren't giving away any secrets! \nThis lesson
                could use any of the skills you've learned so far."
              description_teacher: This lesson brings together concepts from the previous
                lessons and gives students a chance to think critically about how
                they would solve each problem, but without telling them which concept
                to apply. Students will review basic algorithms, debugging, `repeat`
                loops, conditionals, `while` loops, and functions.
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
              description_student: Practice making games to share with your friends
                and family.
              description_teacher: This lesson features Play Lab, a platform where
                students can create their own games and have interactions between
                characters and user input. Students will work with events to create
                keyboard controls. This set of puzzles will also loosely guide students
                through game development, but with freedom to add their own ideas.
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
              description_student: Get ready to show off! It's time to present your
                finished project to your peers.
              description_teacher: Over the course of four lessons, students will
                be building up to programming a project of their own design using
                either Play Lab or Artist as their programming environment. Finally,
                students will be able to present their finished work to their peers
                or share with their loved ones with a special link. The lesson guide
                for all four stages of the process can be found in the first stage
                of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Internet:
              name: 'პროგრამირების მიღმა: ინტერნეტი'
              description_student: Ever wondered how information travels across the
                internet? It's not magic! This lesson will teach you the basics of
                how the internet works.
              description_teacher: Even though many people use the internet daily,
                not very many know how it works. In this lesson, students will pretend
                to flow through the internet, all the while learning about connections,
                URLs, IP Addresses, and the DNS.
            Crowdsourcing:
              name: 'პროგრამირების მიღმა: მოხალისეების ჩართვა სამუშაო პროცესში'
              description_student: ეს გაკვეთილი შეგასწავლით მოხალისეების სამუშაო პროცესში
                ჩართვის შესახებ, ანუ გუნდთთან ერთად პროექტზე მუშაობის შესახებ.
              description_teacher: კომპიუტერულ მეცნიერებაში, ჩვენ ვხვდებით ძალიან
                დიდ, გამომწვევ პრობლემებს. თითქმის შეუძლებელია ერთმა ადამიანმა ხელსაწყოების
                გარეშე იპოვოს ძალიან დიდი მარტივი რიცხვი ან გამოითვალოს დნმ-ის მიმდევრობები.
                სხვა ადამიანების დახმარება რეალურს ხდის ამ დავალებების შესრულებას.
                ეს გაკვეთილი აჩვენებს მოსწავლეებს, თუ როგორი გამოსადეგარი შეიძლება
                იყოს ჯგუფური მუშაობა ისეთ სფეროში, როგორიცაა კომპიუტერული მეცნიერება.
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops in Bee/Zombie:
              name: ჩადგმული ციკლები ფუტკარში/ზომბიში
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Nested Loops:
              name: ჩასმული ციკლები
            Functions in Harvester:
              name: Functions in Harvester
          title: კურსი E
          description_audience: 'ასაკი: 8-12'
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: Created with fourth grade students in mind, this course begins
            with a brief review of concepts previously taught in courses C and D.
            This introduction is intended to inspire beginners and remind the experts
            of the wonders of computer science. Students will practice coding with
            algorithms, loops, conditionals, and events before they are introduced
            to functions. At the end of the course, students will have the opportunity
            to create a capstone project that they can proudly share with peers and
            loved ones.
        coursef:
          stages:
            'Algorithms: Tangrams':
              name: 'ალგორითმები: ტანგრამები'
              description_student: აქ თქვენ შეისწავლით ალგორითმებს თავსატეხების საშუალებით.
                ამ თავსატეხებს ტანგრამები ჰქვია!
              description_teacher: This lesson shows us something important about
                algorithms. As long as you keep an algorithm simple, there are lots
                of ways to use it. However, if you want to make sure everyone produces
                the same outcome, then your algorithm needs more detail. Students
                will learn the difference between a detailed and general algorithm
                while playing with tangrams.
            Introduction:
              name: შესავალი ონლაინ თავსატეხებში
              description_student: This lesson will give you a brief introduction
                to some of the amazing things you will learn in this course!
              description_teacher: 'In this lesson, students will be introduced to
                sequences, loops, and nested loops to prepare them for more complicated
                concepts in the later part of the course. This "ramp up" lesson equalizes
                the playing field between the experts and the beginners in your class. '
            The Power of Words:
              name: 'ციფრული მოქალაქეობა: სიტყვების ძალა'
              description_student: ძალადობა არასდროს არის კარგი. ეს გაკვეთილი გასწავლით
                თუ რისი გაკეთება შეიძლება და რისი არა ონლაინში ყოფნისას.
              description_teacher: "Students consider that while they are enjoying
                their favorite websites they may encounter messages from other kids
                that can make them feel angry, hurt, sad, or fearful. They explore
                ways to handle cyberbullying and how to respond in the face of upsetting
                language online.\n\nStudents discuss all the ways they use technology
                for communication and explore the similarities and differences between
                in-person and online communication. Students then brainstorm ways
                to respond to cyberbullying. "
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
              description_student: გაიფიქრეთ თქვენს საყვარელ ვიდეო თამაშზე. არასდროს
                გიფიქრიათ თუ როგორაა ის გაკეთებული? ამ თავსატეხებში, თქვენ შექმნით
                თქვენს საკუთარ ვიდეო თამაშს თქვენს მეგობრებთან, გამყინვარების პერიოდის
                გმირებთან ერთად!
              description_teacher: In this lesson, students are guided through a story
                featuring characters from Ice Age. Students will work with events
                and loops to make characters move on the screen, and will get the
                chance to create their own game or story after the guided levels.
            Envelope Variables:
              name: 'ცვლადები: ცვლადები კონვერტებში'
              description_student: 'Envelopes and variables have something in common:
                both can hold valuable things. Here you will learn what variables
                are and the awesome things they can do.'
              description_teacher: Variables are used as placeholders for values such
                as numbers or words. Variables allow for a lot of freedom in programming.
                Instead of having to type out a phrase many times or remember an obscure
                number, computer scientists can use variables to reference them. This
                lesson helps to explain what variables are and how we can use them
                in many different ways. The idea of variables isn't an easy concept
                to grasp, so we recommend allowing plenty of time for discussion at
                the end of the lesson.
            Variables in Artist:
              name: ცვლადები მხატვარში
              description_student: Don't forget to bring creativity to class! In these
                puzzles you will be making fantastic drawings using variables.
              description_teacher: In this lesson, students will explore the creation
                of repetitive designs using variables in the Artist environment. Students
                will learn how variables can be used to make code easier to write
                and easier to read. After guided puzzles, students will end in a freeplay
                level to show what they have learned and create their own designs.
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
              description_student: Soon you will learn about making characters interact
                in a game using variables!
              description_teacher: Students will get further practice with variables
                in this lesson by creating scenes in Play Lab. Students will work
                with user input to set the values of their variables, then get space
                to create their own mini-project with variables.
            For Loop Fun:
              name: 'For ციკლები: გართობა For ციკლებით'
              description_student: თქვენ ძალიან იხალისებთ, როდესაც შეისწავლით `for`
                ციკლებს!
              description_teacher: 'We know that loops allow us to do things over
                and over again, but now we’re going to learn how to use loops that
                have extra structures built right in. These new structures will allow
                students to create code that is more powerful and dynamic. '
            For Loops in Bee:
              name: For ციკლები ფუტკარში
              description_student: ბზზ ბზზ. ამ თავსატეხებში თქვენ უნდა მიიყვანოთ ფუტკარი
                ნექტართან და თაფლთან `for` ციკლების გამოყენებით!
              description_teacher: Featuring Bee, this lesson focuses on for loops
                and using an incrementing variable to solve more complicated puzzles.
                Students will begin by reviewing loops from previous lessons, then
                walked through using for loops to more effectively solve complicated
                problems.
            For Loops in Artist:
              name: For ციკლები მხატვარში
              description_student: Get ready to make your next masterpiece. Here you
                will be using `for` loops to make some jaw-dropping pictures.
              description_teacher: In this lesson, students continue to practice for
                loops, this time with Artist. Students will complete puzzles combining
                the ideas of variables, loops, and for loops to create complex designs.
                At the end, they will have a chance to create their own art in a freeplay
                level.
            Songwriting with Parameters:
              name: 'ფუნქციები: სიმღერების წერა პარამეტრებით'
              description_student: You just might release the next big hit single!
                In this lesson, you will be learning what parameters are and how they
                make some fantastic songs!
              description_teacher: One of the most magnificent structures in the computer
                science world is the function. Functions (sometimes called procedures)
                are mini programs that you can use over and over inside of your bigger
                program. This lesson will help students intuitively understand why
                combining chunks of code into functions is such a helpful practice,
                and how they can use those structures even when chunks of code are
                slightly different.
            Conditionals and Functions in Bee:
              name: პირობითი ოპერატორები და ფუნქციები ფუტკარში
              description_student: The bee needs your help again! Here you will be
                using functions to get nectar and make honey!
              description_teacher: 'This lesson teaches students how to create simple
                functions using our sophisticated “modal” function editor, preparing
                the way for them to incorporate parameters in future lessons. '
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
              description_student: Get your programming fingers ready. In these puzzles
                you will make impressive drawings in Artist using functions with parameters.
              description_teacher: In this lesson, students continue working with
                functions with and without parameters. Students will get the chance
                to create their own drawings with and without parameters, before modifying
                functions in a freeplay level.
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
              description_student: You've had a little practice using functions with
                parameters. This lesson will continue your practice with Bee!
              description_teacher: This lesson features the bee environment, and continues
                along the concept of functions with parameters from the previous Artist
                stage. Students will practice writing and using functions to follow
                complex paths and collect patterns of nectar and honey.
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
              description_student: Time to get some inspiration! These puzzles will
                show you a handful of pre-built games and illustrations to help develop
                your plan for your BIG project.
              description_teacher: "The next five lessons provide an opportunity for
                students to put their coding skills to use in a capstone project.
                This project will help individuals gain experience with coding and
                produce an exemplar to share with peers and loved ones. This is intended
                to be a multi-lesson or multi-week project where students spend time
                brainstorming, learning about the design process, building, and then
                presenting their final work. \n\nIn the explore stage, students will
                be able to view examples of projects in both Artist and Play Lab for
                inspiration. Next, students will learn about the design process and
                how to implement it in their own projects. They will then be given
                the space to create their own project in either Artist or Play Lab
                (this is most likely the longest stage of the project). Students will
                then revise their projects, after testing and extra thought. Finally,
                students will be able to present their finished work to their peers."
            The Design Process:
              name: დიზაინის პროცესი
              description_student: ასეთი დიდი პროექტები საჭიროებენ დიდ დროს და საკმაოდ
                გრძელ დაგეგმარებას. აქ, თქვენ შეისწავლით იმ დიზაინის პროცესის შესახებ,
                რომელსაც გამოიყენებთ თქვენი ქმნილების ასაწყობად.
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. In this portion
                of the project, students will learn about the design process and how
                to implement it in their own projects. The lesson guide overviewing
                all five stages of the process can be found in the beginning of the
                project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
              description_student: საბოლოოდ თქვენ შეგიძლიათ დაიწყოთ თქვენი პროექტის
                აწყობა!
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. Now the students
                will be given their own space to create their project with either
                Artist or Play Lab. This will be the longest portion of the project.
                The lesson guide overviewing all five stages of the process can be
                found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
              description_student: Rome wasn't built in a day and your project shouldn't
                be, either. Take time to edit and revise your project to make it the
                best it can be.
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. Now that the
                projects are built, students are given the opportunity to get feedback
                from peers and revise their projects. The lesson guide overviewing
                all five stages of the process can be found in the beginning of the
                project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Presentation Your Project:
              name: პრეზენტაცია თქვენი პროექტი
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
              description_student: Time to show your work! Here you will be presenting
                your awesome project to your peers.
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. Finally, students
                will be able to present their finished work to their peers or share
                with their loved ones with a special link. The lesson guide overviewing
                all five stages of the process can be found in the beginning of the
                project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Conditionals in Minecraft:
              name: პირობითი წინადადებები Minecraft-ში
              description_student: თავი აარიდეთ ლავას! აქ თქვენ შეისწავლით ყველაფერს
                პირობითი წინადადებების შესახებ მაინკრაფტის სამყაროში.
              description_teacher: This lesson gives students a chance to learn and
                practice conditionals. It features characters and settings from Minecraft,
                and students will complete tasks such as mining and building structures
                using their programs.
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops in Bee/Zombie:
              name: ჩადგმული ციკლები ფუტკარში/ზომბიში
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
          title: კურსი F
          description_audience: 'ასაკი: 9-13'
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description: |-
            The last course in CS Fundamentals was tailored to the needs students in the fifth grade.\r
            \r
            In these lessons, students will create programs with different kinds of loops, events, functions, and conditionals. They will also investigate different problem-solving techniques and discuss societal impacts of computing and the internet. By the end of the curriculum, students create interactive stories and games that they can share with their friends and family.
        csdnovice:
          stages:
            Tuesday:
              name: სამშაბათი
            Wednesday:
              name: ოთხშაბათი
            Thursday:
              name: ხუთშაბათი
            Welcome:
              name: კეთილი იყოს თქვენი მობრძანება
            Congrats:
              name: გილოცავთ
            Wrap Up:
              name: შეჯამება
          title: CS Discoveries TeacherCon Novice Facilitators
          description_audience: CSD Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as
            a novice facilitator. '
        csp-explore-task:
          stages:
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
          title: CSP Explore PT Prep
          description_audience: ''
          description_short: These lessons cover the preparation and completion of
            the CS Principles AP Explore Performance Task.
          description: These lessons cover the preparation and completion of the CS
            Principles AP Explore Performance Task.
        csp-create-task:
          stages:
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
          title: ''
          description_audience: ''
          description_short: These lessons cover the preparation and completion of
            the CS Principles AP Create Performance Task.
          description: These lessons cover the preparation and completion of the CS
            Principles AP Create Performance Task.
        csp-ap-tech-setup:
          stages:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
          title: CSP AP Digital Portfolio and Other Tools
          description_audience: ''
          description_short: ''
          description: Covers AP Digital Portfolio setup and other technical tools
            required for completing and submitting the AP Performance Tasks.
        csp-ap:
          stages:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Participate in a longitudinal study!:
              name: Participate in a longitudinal study!
          title: CSP AP Exam and Performance Tasks
          description_audience: ''
          description_short: Lessons guide students to prepare for and complete the
            AP exam and Performance Tasks.
          description: Lessons guide students to prepare for and complete the AP exam
            and Performance Tasks.
        cspnovice:
          stages:
            Welcome:
              name: კეთილი იყოს თქვენი მობრძანება
            Tuesday:
              name: სამშაბათი
            Wednesday:
              name: ოთხშაბათი
            Thursday:
              name: ხუთშაბათი
            Wrap Up:
              name: შეჯამება
          title: CS Principles TeacherCon Novice Facilitators
          description_audience: CSP Novice Facilitators
          description_short: Reflection questions for novice facilitators at TeacherCon.
          description: 'A place to keep track of your reflection from TeacherCon as
            a novice facilitator. '
        novice-view:
          stages:
            CSP Tuesday:
              name: CSP სამშაბათი
            CSP Wednesday:
              name: CSP ოთხშაბათი
            CSP Thursday:
              name: CSP ხუთშაბათი
            CSD Tuesday:
              name: CSD სამშაბათი
            CSD Wednesday:
              name: CSD ოთხშაბათი
            CSD Thursday:
              name: CSD ხუთშაბათი
          title: ახალბედების გამოხმარეუბების ნახვა
          description_audience: ბრუკი, დანი, მალი
          description_short: NA
          description: NA
        csp1-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete your Deeper Learning:
              name: Complete your Deeper Learning
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
          title: CSP თავი 1 გაღრმავებული სწავლა
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CSP
            facilitators in training. Here you will find reflection prompts and guidances
            for demonstrating proficiency of Unit 1 of the Code.org CSP Curriculum.
            Peer review items are available at the bottom of this page, once you''ve
            submitted your own reflections for the unit. '
        csp2-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning:
              name: Complete Unit 2 Deeper Learning
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
          title: CSP Unit 2 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 2 Deeper Learning materials for CSP facilitators
            in training '
          description: 'This is Unit 2 of the Deeper Learning Plan for Code.org CSP
            facilitators in training. Here you will find reflection prompts and guidances
            for demonstrating proficiency of Unit 2 of the Code.org CSP Curriculum.
            Peer review items are available at the bottom of this page, once you''ve
            submitted your own reflections for the unit. '
        csp3-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
          title: CSP Unit 3 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Unit 3 Deeper Learning materials for CSP facilitators
            in training '
          description: 'This is Unit 3 of the Deeper Learning Plan for Code.org CSP
            facilitators in training. Here you will find reflection prompts and guidances
            for demonstrating proficiency of Unit 3 of the Code.org CSP Curriculum.
            Peer review items are available at the bottom of this page, once you''ve
            submitted your own reflections for the unit. '
        csp4-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
          title: CSP Unit 4 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 4 of the Deeper Learning Plan for Code.org CSP
            facilitators in training. Here you will find reflection prompts and guidances
            for demonstrating proficiency of Unit 4 of the Code.org CSP Curriculum.
            Peer review items are available at the bottom of this page, once you''ve
            submitted your own reflections for the unit. '
        csp5-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
          title: CSP Unit 5 Deeper Learning
          description_audience: CS Principles Facilitators in Training
          description_short: 'Deeper Learning materials for CSP facilitators in training '
          description: 'This is Unit 5 of the Deeper Learning Plan for Code.org CSP
            facilitators in training. Here you will find reflection prompts and guidances
            for demonstrating proficiency of Unit 5 of the Code.org CSP Curriculum.
            Peer review items are available at the bottom of this page, once you''ve
            submitted your own reflections for the unit. '
        csd1-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 1 Deeper Learning Reflections:
              name: Complete Unit 1 Deeper Learning Reflections
          title: CS Discoveries Unit 1 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators
            in training '
          description: 'This is Unit 1 of the Deeper Learning Plan for Code.org CS
            Discoveries facilitators in training. Here you will find reflection prompts
            and guidances for demonstrating proficiency of Unit 1 of the Code.org
            CS Discoveries Curriculum. Peer review items are available at the bottom
            of this page, once you''ve submitted your own reflections for the unit. '
        csd6-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 6 Deeper Learning Reflections:
              name: Complete Unit 6 Deeper Learning Reflections
          title: CS Discoveries Unit 6 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators
            in training '
          description: This is Unit 6 of the Deeper Learning Plan for Code.org CS
            Discoveries facilitators in training. Here you will find reflection prompts
            and guidances for demonstrating proficiency of Unit 6 of the Code.org
            CS Discoveries Curriculum. Peer review items are available at the bottom
            of this page, once you've submitted your own reflections for the unit.
        csd5-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 5 Deeper Learning Reflections:
              name: Complete Unit 5 Deeper Learning Reflections
          title: CS Discoveries Unit 5 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators
            in training '
          description: This is Unit 5 of the Deeper Learning Plan for Code.org CS
            Discoveries facilitators in training. Here you will find reflection prompts
            and guidances for demonstrating proficiency of Unit 5 of the Code.org
            CS Discoveries Curriculum. Peer review items are available at the bottom
            of this page, once you've submitted your own reflections for the unit.
        csd4-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 4 Deeper Learning Reflections:
              name: Complete Unit 4 Deeper Learning Reflections
          title: CS Discoveries Unit 4 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators
            in training '
          description: This is Unit 4 of the Deeper Learning Plan for Code.org CS
            Discoveries facilitators in training. Here you will find reflection prompts
            and guidances for demonstrating proficiency of Unit 4 of the Code.org
            CS Discoveries Curriculum. Peer review items are available at the bottom
            of this page, once you've submitted your own reflections for the unit.
        csd3-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 3 Deeper Learning Reflections:
              name: Complete Unit 3 Deeper Learning Reflections
          title: CS Discoveries Unit 3 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators
            in training '
          description: This is Unit 3 of the Deeper Learning Plan for Code.org CS
            Discoveries facilitators in training. Here you will find reflection prompts
            and guidances for demonstrating proficiency of Unit 3 of the Code.org
            CS Discoveries Curriculum. Peer review items are available at the bottom
            of this page, once you've submitted your own reflections for the unit.
        csd2-dlp:
          stages:
            Deeper Learning Overview:
              name: Deeper Learning Overview
            Complete Unit 2 Deeper Learning Reflections:
              name: Complete Unit 2 Deeper Learning Reflections
          title: CS Discoveries Unit 2 Deeper Learning
          description_audience: CS Discoveries Facilitators in Training
          description_short: 'Deeper Learning materials for CS Discoveries facilitators
            in training '
          description: This is Unit 2 of the Deeper Learning Plan for Code.org CS
            Discoveries facilitators in training. Here you will find reflection prompts
            and guidances for demonstrating proficiency of Unit 2 of the Code.org
            CS Discoveries Curriculum. Peer review items are available at the bottom
            of this page, once you've submitted your own reflections for the unit.
        allthettsthings:
          stages:
            TTS:
              name: TTS
        express:
          stages:
            'Programming Unplugged: My Robotic Friends':
              name: 'Programming Unplugged: My Robotic Friends'
            Introduction:
              name: შესავალი
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Collector:
              name: დებაგირება შემგროვებელში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops Project in Artist:
              name: ჩადგმული ციკლების პროექტი მხატვარში
            Internet:
              name: ინტერნეტი
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            Screen Out the Mean:
              name: Screen Out the Mean
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Build a Star Wars Game:
              name: ააწყვეთ ვარსკვლავური ომების თამაში
            Events in Bounce:
              name: მოვლენები მხტუნავში
            Build a Flappy Game:
              name: ააწყვეთ მოფარფატე ჩიტის თამაში
            Conditionals with Cards:
              name: პირობები ბარათებით
            While Loops in Farmer:
              name: While ციკლები ფერმერში
            Conditionals & Loops in Maze:
              name: პირობითი წინადადებები და ციკლები ლაბირინთში
            Conditionals in Minecraft:
              name: პირობითი წინადადებები Minecraft-ში
            Conditionals & Loops in Farmer:
              name: პირობითი წინადადებები და ციკლები ფერმერში
            Envelope Variables:
              name: ცვლადები კონვერტებში
            Variables in Artist:
              name: ცვლადები მხატვარში
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
            For Loop Fun:
              name: ხალისი "მიზნისთვის" ციკლით
            For Loops in Bee:
              name: For ციკლები ფუტკარში
            For Loops in Artist:
              name: For ციკლები მხატვარში
            Songwriting with Parameters:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
            'How it Works: The Internet':
              name: 'პროგრამირების მიღმა: ინტერნეტი'
            'Common Sense Education: Digital Citizenship':
              name: 'Common Sense Education: Digital Citizenship'
            'Common Sense Education: Screen Out the Mean':
              name: 'Common Sense Education: Screen Out the Mean'
            Events in Star Wars:
              name: მოვლენები ვარსკვლავურ ომებში
            Events with Flappy:
              name: მოვლენები მოფარფატე ჩიტთან ერთად
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
            Conditional Loops in Maze:
              name: პირობითი წინადადებები და ციკლები ლაბირინთში
            'Variables: Envelope Variables':
              name: 'ცვლადები: ცვლადები კონვერტებში'
            'For Loops: For Loop Fun':
              name: 'For ციკლები: გართობა For ციკლებით'
            'Functions: Songwriting with Parameters':
              name: 'ფუნქციები: სიმღერების წერა პარამეტრებით'
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Nested Loops:
              name: ჩასმული ციკლები
            Conditionals & Loops in Harvester:
              name: პირობითი წინადადებები და ციკლები ფერმერში
          title: დაჩქარებული კურსი
          description_audience: 'ასაკი: 9-18'
          description_short: 'შესავალი კომპიუტერულ მეცნიერებაში: აერთიანებს დაწყებითი
            სკოლის პროგრამის საუკეთესო ელემენტებს უფროსი მოსწავლეებისთვის.'
          description: შეისწავლეთ კომპიუტერული მეცნიერების და ინტერნეტ უსაფრთხოების
            საფუძვლები. კურსის ბოლოს შექმენით თქვენი საკუთარი თამაში ან ისტორია, რომლის
            გაზიარებას შეძლებთ.
        pre-express:
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
            'Online Safety: Your Digital Footprint':
              name: 'ციფრული მოქალაქეობა: ჩემი ციფრული ფეხის ნაკვალევი'
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
            'Programming: Star Wars':
              name: 'პროგრამირება: ვარსკვლავური ომები'
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Collector:
              name: ციკლები შემგროვებელში
            Loops in Artist:
              name: ციკლები მხატვარში
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
            Spelling Bee:
              name: შეჯიბრი დამარცვლაში
          title: ''
          description_audience: 'ასაკი: 4-8'
          description_short: ''
          description: შეისწავლეთ კომპიუტერული მეცნიერების და ინტერნეტ უსაფრთხოების
            საფუძვლები. კურსის ბოლოს შექმენით თქვენი საკუთარი თამაში ან ისტორია, რომლის
            გაზიარებას შეძლებთ.
        subgoal-labels-opt-in:
          stages:
            Subgoal Labels Study Opt-In:
              name: Subgoal Labels Study Opt-In
            deprecated:
              name: deprecated
            other:
              name: სხვა
            Thanks:
              name: მადლობა
            '':
              name: ''
            " ":
              name: " "
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csp-pre-survey-test-2017:
          stages:
            new stage:
              name: ახალი დონე
            test satge:
              name: test satge
            CSP pre survey Test:
              name: CSP pre survey Test
            CSD pre survey test:
              name: CSD pre survey test
            CSD pulse check survey:
              name: CSD pulse check survey
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csp3-research-mxghyt:
          stages:
            new stage:
              name: ახალი დონე
            The Need For Programming Languages:
              name: პროგრამირების ენების საჭიროება
            The Need for Algorithms:
              name: ალგორითმების საჭიროება
            Creativity in Algorithms:
              name: შემოქმედებითობა ალგორითმებში
            Using Simple Commands:
              name: მარტივი ბრძანებების გამოყენება
            Creating Functions:
              name: ფუნქციების შექმნა
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: ციკლები და შემთხვევითი რიცხვები
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
            foo:
              name: foo
            CSP Mid-course survey:
              name: CSP Mid-course survey
            Please complete the CSP Mid-course survey:
              name: Please complete the CSP Mid-course survey
          title: ''
          description_audience: ''
          description_short: პროგრამირება
          description: ''
        csd4-draft:
          stages:
            Analysis of Design:
              name: დიზაინის ანალიზი
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: მომხმარებელზე გათვლილი დიზაინის მიკრო აქტიურობა
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
            Feedback and Prototypes:
              name: Feedback and Prototypes
            Identifying User Needs:
              name: მომხმარებლის მოთხოვნილებების განსაზღვრა
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: ქაღალდის პროტოტიპები
            Prototype Testing:
              name: პროტოტიპების ტესტირება
            Digital Design:
              name: ციფრული დიზაინი
            Event Driven Programming:
              name: მოვლენებზე დაფუძნებული პროგრამირება
            Basic App Functionality:
              name: აპლიკაციის საბაზისო ფუნქციონალი
            Testing the App:
              name: აპლიკაციების ტესტირება
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation:
              name: აპლიკაციის პრეზენტაცია
            Linking Screens:
              name: ეკრანების დაკავშირება
          title: CSD Unit 4 Revisions Draft
          description_audience: ''
          description_short: ''
          description: ''
        craft17:
          stages:
            craft17 stage:
              name: craft17 stage
          title: Craft17 Development Script
          description_audience: ''
          description_short: ''
          description: ''
        applab-intro:
          stages:
            Intro to AppLab - Choose Your Own Adventure:
              name: შესავალი აპლიკაციების ლაბორატორიაში - აირჩიეთ თქვენი საკუთარი
                თავგადასავალი
            Intro to AppLab - Choose Your Own Adventure 2:
              name: შესავალი აპლიკაციების ლაბორატორიაში - აირჩიეთ თქვენი საკუთარი
                თავგადასავალი 2
            Intro to AppLab - Your First App:
              name: შესავალი აპლიკაციების ლაბორატორიაში - თქვენი პირველი აპლიკაცია
            Intro to AppLab - Your First App 2:
              name: Intro to AppLab - Your First App 2
            Intro to AppLab - Your First App 3:
              name: Intro to AppLab - Your First App 3
            Intro to AppLab - Your First App 4:
              name: Intro to AppLab - Your First App 4
            Intro to AppLab - Getting Started:
              name: Intro to AppLab - Getting Started
            Intro to App Lab:
              name: შესავალი აპლიკაციების ლაბორატორიაში
            'Lesson 1: App Lab Intro':
              name: 'Lesson 1: App Lab Intro'
          title: შესავალი აპლიკაციების ლაბორატორიაში
          description_audience: ''
          description_short: ''
          description: ეს გაკვეთილები გაგაცნობენ აპლიკაციების ლაბორატორიას კრეატიული
            პროექტების მიმდევრობების საშუალებით.
        e-f-ramp:
          stages:
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Sequence and Preview in Maze:
              name: Sequence and Preview in Maze
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops:
              name: ჩასმული ციკლები
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            Intro to Conditionals with Farmer:
              name: Intro to Conditionals with Farmer
            'Algorithms: Dice Race':
              name: 'ალგორითმები: კამათლის შეჯიბრი'
            Course E Introduction:
              name: Course E Introduction
            Conditionals:
              name: პირობითი ბრძანებები
            Private and Personal Information:
              name: კონფიდენციალური და პირადი ინფორმაცია
            Build a Star Wars Game:
              name: ააწყვეთ ვარსკვლავური ომების თამაში
            'Functions: Songwriting':
              name: 'ფუნქციები: სიმღერების დაწერა'
            Functions in Artist:
              name: ფუნქციები მხატვარში
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions in Farmer:
              name: ფუნქციები ფერმერში
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
            Internet:
              name: ინტერნეტი
            Crowdsourcing:
              name: ქრაუდსორსინგი
            Nested Loops in Bee:
              name: ჩადგმული ციკლები ფუტკარში
            Nested Loops in Bee/Zombie:
              name: ჩადგმული ციკლები ფუტკარში/ზომბიში
            Sequence in Maze:
              name: Sequence in Maze
          title: Course E & F Ramp
          description_audience: ''
          description_short: ''
          description: ''
        new-d:
          stages:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Introduction:
              name: შესავალი
            Events in Bounce:
              name: მოვლენები მხტუნავში
            Nested Loops:
              name: ჩასმული ციკლები
            Nested Loops in Artist:
              name: ჩადგმული ციკლები მხატვარში
            Nested Loops Project in Artist:
              name: ჩადგმული ციკლების პროექტი მხატვარში
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Collector:
              name: დებაგირება შემგროვებელში
            While Loops in Farmer:
              name: While ციკლები ფერმერში
            Conditionals with Cards:
              name: პირობები ბარათებით
            Conditionals in Bee:
              name: პირობითი ბრძანებები ფუტკარში
            Conditionals & Loops in Maze:
              name: პირობითი წინადადებები და ციკლები ლაბირინთში
            Conditionals & Loops in Farmer:
              name: პირობითი წინადადებები და ციკლები ფერმერში
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
            'Unplugged: Binary':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ორობითი სისტემა'
            Artist Binary:
              name: 'მხატვარი: ორობითი'
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops in Bee:
              name: ჩადგმული ციკლები ფუტკარში
            Loops in Ice Age:
              name: Loops in Ice Age
          title: New Course D Script
          description_audience: ''
          description_short: ''
          description: ''
        csp3-a:
          stages:
            new stage:
              name: ახალი დონე
            'CSP3A: Using Simple Commands':
              name: 'CSP3A: Using Simple Commands'
          title: CSP Unit 3 - Subgoals Group A
          description_audience: ''
          description_short: Alternate version of CSP Unit 3 for subgoal labels experiment
            group A.
          description: This unit introduces the foundational concepts of computer
            programming, for students in Subgoals Group A.
        new-express:
          stages:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
            Introduction:
              name: შესავალი
            'Algorithms: Relay Programming':
              name: 'Algorithms: Relay Programming'
            Debugging in Collector:
              name: დებაგირება შემგროვებელში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
            'How it Works: The Internet':
              name: 'როგორ მუშაობს ეს: ინტერნეტი'
            'Common Sense Education: Digital Citizenship':
              name: 'Common Sense Education: Digital Citizenship'
            'Common Sense Education: Screen Out the Mean':
              name: 'Common Sense Education: Screen Out the Mean'
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
            Events in Star Wars:
              name: მოვლენები ვარსკვლავურ ომებში
            Events with Flappy:
              name: მოვლენები მოფარფატე ჩიტთან ერთად
            Events in Bounce:
              name: მოვლენები მხტუნავში
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
            While Loops in Farmer:
              name: While ციკლები ფერმერში
            Conditional Loops in Maze:
              name: პირობითი ციკლები ლაბირინთში
            Conditionals in Minecraft:
              name: პირობითი წინადადებები Minecraft-ში
            Conditionals & Loops in Farmer:
              name: პირობითი წინადადებები და ციკლები ფერმერში
            'Variables: Envelope Variables':
              name: 'ცვლადები: ცვლადები კონვერტებში'
            Variables in Artist:
              name: ცვლადები მხატვარში
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
            'For Loops: For Loop Fun':
              name: 'For ციკლები: გართობა For ციკლებით'
            For Loops in Bee:
              name: For ციკლები ფუტკარში
            For Loops in Artist:
              name: For ციკლები მხატვარში
            'Functions: Songwriting with Parameters':
              name: 'ფუნქციები: სიმღერების წერა პარამეტრებით'
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Nested Loops:
              name: ჩასმული ციკლები
            Loops in Artist (UPDATED!):
              name: Loops in Artist (UPDATED!)
            Sarah test stage:
              name: Sarah test stage
          title: New Express Script
          description_audience: ''
          description_short: ''
          description: ''
        new-stages-sept-2017:
          stages:
            Loops in Artist:
              name: ციკლები მხატვარში
            Sequences with Scrat:
              name: მიმდევრობები სკრეტთან ერთად
            Testing Template:
              name: Testing Template
          title: ახალი დონეები 9/17-სთვის
          description_audience: ''
          description_short: ''
          description: ''
        new-e:
          stages:
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops in Bee/Zombie:
              name: ჩადგმული ციკლები ფუტკარში/ზომბიში
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Dice Race':
              name: 'ალგორითმები: კამათლის შეჯიბრი'
            Course E Introduction:
              name: Course E Introduction
            Conditionals:
              name: პირობითი ბრძანებები
            Private and Personal Information:
              name: კონფიდენციალური და პირადი ინფორმაცია
            Build a Star Wars Game:
              name: ააწყვეთ ვარსკვლავური ომების თამაში
            'Functions: Songwriting':
              name: 'ფუნქციები: სიმღერების დაწერა'
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions in Artist:
              name: ფუნქციები მხატვარში
            Functions in Farmer:
              name: ფუნქციები ფერმერში
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
            Internet:
              name: ინტერნეტი
            Crowdsourcing:
              name: ქრაუდსორსინგი
          title: New Script for E
          description_audience: ''
          description_short: ''
          description: ''
        new-f:
          stages:
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops in Bee/Zombie:
              name: ჩადგმული ციკლები ფუტკარში/ზომბიში
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Tangrams':
              name: 'ალგორითმები: ტანგრამები'
            Course E Introduction:
              name: Course E Introduction
            The Power of Words:
              name: სიტყვების ძალა
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
            Conditionals in Minecraft:
              name: პირობითი წინადადებები Minecraft-ში
            Envelope Variables:
              name: ცვლადები კონვერტებში
            Variables in Artist:
              name: ცვლადები მხატვარში
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
            For Loop Fun:
              name: ხალისი "მიზნისთვის" ციკლით
            For Loops in Bee:
              name: For ციკლები ფუტკარში
            For Loops in Artist:
              name: For ციკლები მხატვარში
            Songwriting with Parameters:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
          title: New Script for F
          description_audience: ''
          description_short: ''
          description: ''
        csd5-old:
          stages:
            Representation Matters:
              name: Representation Matters
            Patterns and Representation:
              name: Patterns and Representation
            ASCII and Binary Representation:
              name: ASCII and Binary Representation
            Representing Images:
              name: Representing Images
            Representing Numbers:
              name: რიცხვების წარმოდგენა
            8-bit Numbers:
              name: 8-ბიტიანი რიცხვები
            Combining Representations:
              name: Combining Representations
            Project - Create a Representation:
              name: პროექტი - შექმენით წარმოდგენა
            Problem Solving and Data:
              name: პრობლემათა გადაჭრა და მონაცემები
            Making Decisions with Data:
              name: გადაწყვეტილების მიღება მონაცემებთან ერთად
            Interpreting Data:
              name: მონაცემთა ინტერპრეტაცია
            Automating Data Decisions:
              name: ავტომატური მონაცემთა გადაწყვეტილებები
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Project - Solve a Data Problem:
              name: პროექტი - გადაწყვიტეთ მონაცემთა პრობლემა
          title: 'CSD თავი 5: მონაცემები და საზოგადოება'
          description_audience: ''
          description_short: გაიგეთ, თუ როგორ იყენებენ ადამიანები კომპიუტერებს მონაცემებთან
            დაკავშირებული პრობლემების გადასაჭრელად.
          description: Unit 5 is about the importance of data in solving problems
            and highlights how computers can help in this process. The first chapter
            explores different systems used to represent information in a computer
            and the challenges and tradeoffs posed by using them. In the second chapter
            you’ll learn how collections of data are used to solve problems, and how
            computers help to automate the steps of this process. The chapter concludes
            by considering how the data problem solving process can be applied to
            an area of the your choosing.
        subgoals-assessment-staging:
          stages:
            subgoal assessments:
              name: subgoal assessments
            lg by itself:
              name: lg by itself
            test of single level lg:
              name: test of single level lg
            submittable question at end of lessson:
              name: submittable question at end of lessson
            all assessment items as standalone assessment levels:
              name: all assessment items as standalone assessment levels
            all assessment items clustered in levelgroup:
              name: all assessment items clustered in levelgroup
            submittable if last assessment item:
              name: submittable if last assessment item
            assessment sandwiched between app lab levels:
              name: assessment sandwiched between app lab levels
            all assessment items clustered in levelgroup as a single "test":
              name: all assessment items clustered in levelgroup as a single "test"
            dummy:
              name: dummy
            CSP 3 updates staging ground:
              name: CSP 3 updates staging ground
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        hocali:
          stages:
            new stage:
              name: ახალი დონე
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        colehoc2017:
          stages:
            colehoc2017 stage:
              name: colehoc2017 stage
          title: 'HoC 17 - Cole '
          description_audience: ''
          description_short: ''
          description: ''
        craft17-kiki:
          stages:
            craft17 stage:
              name: craft17 stage
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csd4-old:
          stages:
            Analysis of Design:
              name: დიზაინის ანალიზი
            Understanding Your User:
              name: Understanding Your User
            User-Centered Design Micro Activity:
              name: მომხმარებელზე გათვლილი დიზაინის მიკრო აქტიურობა
            User Interface and Prototype Testing:
              name: User Interface and Prototype Testing
            Feedback and Prototypes:
              name: Feedback and Prototypes
            Identifying User Needs:
              name: მომხმარებლის მოთხოვნილებების განსაზღვრა
            Project - Paper Prototype:
              name: Project - Paper Prototype
            Designing Apps for Good:
              name: Designing Apps for Good
            Market Research:
              name: Market Research
            Paper Prototypes:
              name: ქაღალდის პროტოტიპები
            Prototype Testing:
              name: პროტოტიპების ტესტირება
            Digital Design:
              name: ციფრული დიზაინი
            Event Driven Programming:
              name: მოვლენებზე დაფუძნებული პროგრამირება
            Basic App Functionality:
              name: აპლიკაციის საბაზისო ფუნქციონალი
            Testing the App:
              name: აპლიკაციების ტესტირება
            Improving and Iterating:
              name: Improving and Iterating
            App Presentation:
              name: აპლიკაციის პრეზენტაცია
          title: "(DEPRECATED) CSD Unit 4 - The Design Process"
          description_audience: ''
          description_short: 2016/17 Beta version of CSD Unit 4
          description: ''
        csp3-staging:
          stages:
            The Need For Programming Languages:
              name: პროგრამირების ენების საჭიროება
            The Need for Algorithms:
              name: ალგორითმების საჭიროება
            Creativity in Algorithms:
              name: შემოქმედებითობა ალგორითმებში
            Using Simple Commands:
              name: მარტივი ბრძანებების გამოყენება
            Creating Functions:
              name: ფუნქციების შექმნა
            Functions and Top-Down Design:
              name: Functions and Top-Down Design
            APIs and Function Parameters:
              name: APIs and Function Parameters
            Creating functions with Parameters:
              name: Creating functions with Parameters
            Looping and Random Numbers:
              name: ციკლები და შემთხვევითი რიცხვები
            Practice PT - Design a Digital Scene:
              name: Practice PT - Design a Digital Scene
            Unit 3 Chapter 1 Assessment:
              name: Unit 3 Chapter 1 Assessment
          title: CSP 3 Proposed Changes Temporary Staging Ground
          description_audience: ''
          description_short: Temporary staging ground for Oct. changes to csp3
          description: 'This is a replica of live levels in /s/csp3 with new and modified
            stages added.  DO NOT EDIT LIVE LEVELS.\r

'
        pwc:
          stages:
            new stage:
              name: ახალი დონე
            'Problem Solving: Personal Innovations':
              name: 'Problem Solving: Personal Innovations'
            'Technology Foundations: What is a Computer?':
              name: 'Technology Foundations: What is a Computer?'
            'Data Science: Problem Solving with Big Data':
              name: 'Data Science: Problem Solving with Big Data'
            Personal Innovations:
              name: პირადი ინოვაციები
            What is a Computer?:
              name: რა არის კომპიუტერი?
            Problem Solving with Big Data:
              name: Problem Solving with Big Data
            Programming - Hour of Code:
              name: Programming - Hour of Code
            Simple Encryption:
              name: მარტივი შიფრირება
            Web Development - Creating Webpages:
              name: Web Development - Creating Webpages
            App Development Unplugged - User Interfaces:
              name: App Development Unplugged - User Interfaces
            App Development - Intro to App Lab:
              name: App Development - Intro to App Lab
            Creating Webpages:
              name: Creating Webpages
            User Interfaces:
              name: User Interfaces
            Intro to App Lab:
              name: შესავალი აპლიკაციების ლაბორატორიაში
            Smart Clothing Design:
              name: Smart Clothing Design
            Intro to App Lab (13+):
              name: Intro to App Lab (13+)
          title: PwC Access Your Potential
          description_audience: ''
          description_short: ''
          description: ''
        allthesurveys:
          stages:
            CSP pre survey Test:
              name: CSP pre survey Test
            CSD pre survey test:
              name: CSD pre survey test
            CSD pulse check survey:
              name: CSD pulse check survey
            CSD mid-post survey staging:
              name: CSD mid-post survey staging
            CSP pre survey Test 2017:
              name: CSP pre survey Test 2017
            CSD mid-post survey 2017 staging:
              name: CSD mid-post survey 2017 staging
            CSP pre survey 2017 staging:
              name: CSP pre survey 2017 staging
            CSD pre survey 2017 staging:
              name: CSD pre survey 2017 staging
            CSD/P pulse check survey 2017:
              name: CSD/P pulse check survey 2017
            CSD mid and post survey 2017 staging:
              name: CSD mid and post survey 2017 staging
            CSP mid and post survey 2017 staging:
              name: CSP mid and post survey 2017 staging
          title: All the surveys
          description_audience: ''
          description_short: Place to stage and test Code.org surveys
          description: ''
        k1hoc2017:
          stages:
            Collector Hour of Code 2017:
              name: Collector Hour of Code 2017
          title: K-1 Hour of Code 2017
          description_audience: ''
          description_short: ''
          description: ''
        hero:
          stages:
            'Minecraft\: Hero''s Journey Hour of Code':
              name: 'Minecraft\: Hero''s Journey Hour of Code'
            Minecraft Hour of Code:
              name: მაინკრაფტის კოდის ერთი საათი
          title: 'Minecraft: Hero''s Journey'
          description_audience: ''
          description_short: ''
          description: ''
        applab-intro-staging:
          stages:
            Intro to AppLab - Choose Your Own Adventure:
              name: შესავალი აპლიკაციების ლაბორატორიაში - აირჩიეთ თქვენი საკუთარი
                თავგადასავალი
            Intro to AppLab - Choose Your Own Adventure 2:
              name: შესავალი აპლიკაციების ლაბორატორიაში - აირჩიეთ თქვენი საკუთარი
                თავგადასავალი 2
            Intro to AppLab - Your First App:
              name: შესავალი აპლიკაციების ლაბორატორიაში - თქვენი პირველი აპლიკაცია
            Intro to AppLab - Your First App 2:
              name: Intro to AppLab - Your First App 2
            Intro to AppLab - Your First App 3:
              name: Intro to AppLab - Your First App 3
            Intro to AppLab - Your First App 4:
              name: Intro to AppLab - Your First App 4
            Intro to AppLab - Getting Started:
              name: Intro to AppLab - Getting Started
            Intro to App Lab:
              name: შესავალი აპლიკაციების ლაბორატორიაში
          title: Intro to App Lab Staging
          description_audience: ''
          description_short: ''
          description: ''
        csp-explore:
          stages:
            new stage:
              name: ახალი დონე
            Explore PT Prep - Reviewing the Task:
              name: Explore PT Prep - Reviewing the Task
            Explore PT - Making a Plan:
              name: Explore PT - Making a Plan
            Explore PT - Complete the Task:
              name: Explore PT - Complete the Task
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            'Setup: Digital Portfolio and Other Tools':
              name: 'Setup: Digital Portfolio and Other Tools'
          title: Explore - AP Performance Task Prep
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and
            complete the AP Explore Performance Tasks.
          description: |-
            These lessons are here to help you understand, prepare for, and do the AP Explore Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the second item in the first lesson is not related to the Explore PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r
            \r
            This unit was last updated November, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates.
        csp-create:
          stages:
            Tech Setup - Your AP Digital Portfolio and Other Tools:
              name: Tech Setup - Your AP Digital Portfolio and Other Tools
            Create PT Prep - Reviewing the Task:
              name: Create PT Prep - Reviewing the Task
            Create PT Prep - Making a Plan:
              name: Create PT Prep - Making a Plan
            Create PT - Complete the Task:
              name: Create PT - Complete the Task
          title: Create - AP Performance Task Prep
          description_audience: ''
          description_short: Lessons and resources to help students prepare for and
            complete the AP Create Performance Tasks.
          description: |-
            These lessons are here to help you understand, prepare for, and do the AP Create Performance Task.  Each "lesson" contains links to helpful documents that your teacher can help walk you through. NOTE: the first item in the first lesson is not related to the Create PT directly, but covers general tech setup and tools you need to do various elements of both the Explore and Create tasks.\r
            \r
            This unit was last updated December, 2017. Read more about curriculum updates at forum.code.org/c/csp/updates.
        csp3-reovery:
          stages:
            Under the sea recovery:
              name: Under the sea recovery
          title: 'csp3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
        csp3-recovery:
          stages:
            Under the sea recovery:
              name: Under the sea recovery
            standalone template:
              name: standalone template
          title: 'CSP3 under the sea student work recovery '
          description_audience: ''
          description_short: ''
          description: ''
        aws-demo:
          stages:
            new stage:
              name: ახალი დონე
          title: AWS Demo
          description_audience: ''
          description_short: ''
          description: ''
        halloween:
          stages:
            Halloween Artist:
              name: Halloween Artist
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        valentine:
          stages:
            special valentine:
              name: special valentine
            Valentine Puzzles:
              name: Valentine Puzzles
          title: Valentine Special
          description_audience: ''
          description_short: Have fun creating valentines
          description: ''
        colehoc17:
          stages:
            new stage:
              name: ახალი დონე
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        course-e-2018:
          stages:
            courseB_unplugged_MRF_2018:
              name: courseB_unplugged_MRF_2018
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops:
              name: ჩასმული ციკლები
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Dice Race':
              name: 'ალგორითმები: კამათლის შეჯიბრი'
            Introduction:
              name: შესავალი
            Conditionals:
              name: პირობითი ბრძანებები
            Private and Personal Information:
              name: კონფიდენციალური და პირადი ინფორმაცია
            'Functions: Songwriting':
              name: 'ფუნქციები: სიმღერების დაწერა'
            MINECRAFT STAGE GOES HERE:
              name: MINECRAFT STAGE GOES HERE
            Functions in Artist:
              name: ფუნქციები მხატვარში
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions in Farmer:
              name: ფუნქციები ფერმერში
            Determine the Concept:
              name: Determine the Concept
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
            Internet:
              name: ინტერნეტი
            Crowdsourcing:
              name: ქრაუდსორსინგი
            Build a Star Wars Game:
              name: ააწყვეთ ვარსკვლავური ომების თამაში
            Functions in Harvester:
              name: Functions in Harvester
          title: Course E 2018
          description_audience: ''
          description_short: ''
          description: ''
        course-f-2018:
          stages:
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
            Sequence in Maze:
              name: Sequence in Maze
            Building a Foundation:
              name: ფუნდამენტის აშენება
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
            Programming in Artist:
              name: პროგრამირება მსახიობში
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
            Loops in Artist:
              name: ციკლები მხატვარში
            Nested Loops in Bee/Zombie:
              name: ჩადგმული ციკლები ფუტკარში/ზომბიში
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
            'Algorithms: Tangrams':
              name: 'ალგორითმები: ტანგრამები'
            Introduction:
              name: შესავალი
            The Power of Words:
              name: სიტყვების ძალა
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
            Conditionals in Minecraft:
              name: პირობითი წინადადებები Minecraft-ში
            Envelope Variables:
              name: ცვლადები კონვერტებში
            Variables in Artist:
              name: ცვლადები მხატვარში
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
            For Loop Fun:
              name: ხალისი "მიზნისთვის" ციკლით
            For Loops in Bee:
              name: For ციკლები ფუტკარში
            For Loops in Artist:
              name: For ციკლები მხატვარში
            Songwriting with Parameters:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
            Functions in Bee:
              name: ფუნქციები ფუტკარში
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
            The Design Process:
              name: დიზაინის პროცესი
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
          title: Course F 2018
          description_audience: ''
          description_short: ''
          description: ''
        csd6-old:
          stages:
            Computing Innovations:
              name: Computing Innovations
            Input Unplugged:
              name: Input Unplugged
            Event Types:
              name: ღონისძიების ტიპები
            Getters and Setters:
              name: Getters and Setters
            The Circuit Playground:
              name: The Circuit Playground
            Lists:
              name: სიები
            Lights:
              name: შუქები
            For Loops:
              name: '"მიზნისთვის" ციკლები'
            Lists and For Loops:
              name: Lists and For Loops
            Timed Loops:
              name: ციკლები ტაიმერით
            'Project: Board Output':
              name: 'პროექტი: ინფორმაციის დაფაზე გამოყვანა'
            Physical Input:
              name: ფიზიკურად შეყვანილი ინფორმაცია
            Analog Input:
              name: Analog Input
            Sensor Applications:
              name: სენსორული აპლიკაციები
            'Project: Prototype an Innovation':
              name: 'Project: Prototype an Innovation'
          title: "(DEPRECATED) CSD Unit 6 - Physical Computing"
          description_audience: ''
          description_short: ''
          description: ''
        unembeddedlevels:
          stages:
            CSD U3 Plotting Shapes Shape Lab - unembed:
              name: CSD U3 Plotting Shapes Shape Lab - unembed
            CSD U3 Entertainment Sample 1 - unembed:
              name: CSD U3 Entertainment Sample 1 - unembed
            Only Stage:
              name: Only Stage
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
        unembedded:
          stages:
            Only Stage:
              name: Only Stage
          title: Unembedded Levels
          description_audience: ''
          description_short: ''
          description: ''
        csd3-1819draft:
          stages:
            Programming for Entertainment:
              name: პროგრამირება გართობისათვის
            Plotting Shapes:
              name: Plotting Shapes
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
            Shapes and Randomization:
              name: Shapes and Randomization
            Variables:
              name: ცვლადები
            Sprites:
              name: სპრაიტები
            The Draw Loop:
              name: ხატვის ციკლი
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
            Sprite Movement:
              name: სპრაიტების მოძრაობა
            Booleans Unplugged:
              name: Booleans Unplugged
            Conditionals:
              name: პირობითი ბრძანებები
            Keyboard Input:
              name: კლავიატურიდან შეყვანილი ინფორმაცია
            Other Forms of Input:
              name: Other Forms of Input
            Project - Interactive Card:
              name: პროექტი - ინტერაქტიული ბარათი
            Velocity:
              name: სიჩქარე
            Collision Detection:
              name: შეჯახების აღმოჩენა
            Complex Sprite Movement:
              name: სპრაიტების რთული მოძრაობა
            Collisions:
              name: შეჯახებები
            Functions:
              name: ფუნქციები
            The Game Design Process:
              name: თამაშის დიზაინის პროცესი
            Using the Game Design Process:
              name: თამაშის დიზაინის პროცესის გამოყენება
            Project - Design a Game:
              name: პროექტი - შექმენით თამაშის დიზაინი
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
          title: CSD Unit 3 - Animations and Games
          description_audience: ''
          description_short: " შეისწავლეთ ანიმაციების, ინტერაქტიული ხელოვნების ნიმუშების
            და თამაშების დაპროგრამება თამაშების ლაბორატორიაში."
          description: " In Unit 3, you’ll build on your coding experience as you
            program animations, interactive art, and games in Game Lab. The unit starts
            off with simple shapes and builds up to more sophisticated sprite-based
            games, using the same programming concepts and the design process computer
            scientists use daily. In the final project, you’ll develop a personalized,
            interactive program."
        textbook:
          stages:
            Test Map Level:
              name: Test Map Level
            new stage:
              name: ახალი დონე
          title: CSF Textbook Pages
          description_audience: ''
          description_short: ''
          description: ''
        glj-behavior-test:
          stages:
            Cats and Dogs:
              name: Cats and Dogs
          title: Game Lab Jr. Test - Behavior
          description_audience: ''
          description_short: ''
          description: ''
        csd3-2018:
          title: CSD Unit 3 - Animations and Games
          description: " In Unit 3, you’ll build on your coding experience as you
            program animations, interactive art, and games in Game Lab. The unit starts
            off with simple shapes and builds up to more sophisticated sprite-based
            games, using the same programming concepts and the design process computer
            scientists use daily. In the final project, you’ll develop a personalized,
            interactive program."
          description_short: " შეისწავლეთ ანიმაციების, ინტერაქტიული ხელოვნების ნიმუშების
            და თამაშების დაპროგრამება თამაშების ლაბორატორიაში."
          description_audience: ''
          stages:
            Programming for Entertainment:
              name: პროგრამირება გართობისათვის
              description_student: The class is asked to consider the "problems" of
                boredom and self expression, and to reflect on how they approach those
                problems in their own lives. From there, they will explore how Computer
                Science in general, and programming specifically, plays a role in
                either a specific form of entertainment or as a vehicle for self expression.
              description_teacher: Students are asked to consider the "problems" of
                boredom and self expression, and to reflect on how they approach those
                problems in their own lives. From there, students will explore how
                Computer Science in general, and programming specifically, plays a
                role in either a specific form of entertainment or as a vehicle for
                self expression.
            Plotting Shapes:
              name: Plotting Shapes
              description_student: Students explore the challenges of communicating
                how to draw with shapes and use a tool that introduces how this problem
                is approached in Game Lab. The warm up activity quickly demonstrates
                the challenges of communicating position without some shared reference
                point. In the main activity students explore a Game Lab tool that
                allows students to interactively place shapes on Game Lab's 400 by
                400 grid. They then take turns instructing a partner how to draw a
                hidden image using this tool, accounting for many challenges students
                will encounter when programming in Game Lab. Students optionally create
                their own image to communicate before a debrief discussion.
              description_teacher: Students explore the challenges of communicating
                how to draw with shapes and use a tool that introduces how this problem
                is approached in Game Lab. The warm up activity quickly demonstrates
                the challenges of communicating position without some shared reference
                point. In the main activity students explore a Game Lab tool that
                allows students to interactively place shapes on Game Lab's 400 by
                400 grid. They then take turns instructing a partner how to draw a
                hidden image using this tool, accounting for many challenges students
                will encounter when programming in Game Lab. Students optionally create
                their own image to communicate before a debrief discussion.
            Drawing in Game Lab:
              name: ხატვა თამაშების ლაბორატორიაში
              description_student: კლასი ეცნობა თამაშების ლაბორატორიას, ამ თავისთვის
                საჭირო პროგრამირების გარემოს და იწყებს მის გამოყენებას, რათა განალაგოს
                ფიგურები ეკრანზე. ეს გაკვეთილი მოიცავს მიმდევრობების და დებაგირების
                საფუძვლებს, ასევე რამდენიმე მცირე ბრძანებას. გაკვეთილის ბოლო კლასი
                შექმნის წინა დონეზე მათ მიერ შექმნილი სურათის ონლაინ ვერსიას.
              description_teacher: მოსწავლეები ეცნობიან თამაშების ლაბორატორიას, ამ
                თავისთვის საჭირო პროგრამირების გარემოს და იწყებენ მის გამოყენებას,
                რათა განალაგონ ფიგურები ეკრანზე. ეს გაკვეთილი მოიცავს მიმდევრობების
                და დებაგირების საფუძვლებს, ასევე რამდენიმე მცირე ბრძანებას. გაკვეთილის
                ბოლოს მოსწავლეები შექმნიან წინა დონეზე მათ მიერ შექმნილი სურათის ონლაინ
                ვერსიას.
            Shapes and Randomization:
              name: Shapes and Randomization
              description_student: ''
              description_teacher: ''
            Variables:
              name: ცვლადები
              description_student: This lesson introduces variables as a way to label
                a number in a program or save a randomly generated value. The class
                begins the lesson with a very basic description of the purpose of
                a variable and practices using the new blocks.  Afterwards, the class
                uses variables to save a random number, allowing the programs to use
                the same random number multiple times.
              description_teacher: In this lesson students learn how to use variables
                to label a number in their program or save a randomly generated value.
                Students begin the lesson with a very basic description of the purpose
                of a variable. Students then complete a level progression that reinforces
                the model of a variable as a way to label or name a number. Students
                use variables to save a random number to see that variables actually
                store or save their values, allowing them to use the same random number
                multiple times in their programs.
            Sprites:
              name: სპრაიტები
              description_student: In order to create more interesting and detailed
                images, the class is introduced to the sprite object. Every sprite
                can be assigned an image to show, and sprites also keep track of multiple
                values about themselves, which will prove useful down the road when
                making animations.  At the end of the lesson, everyone creates a scene
                using sprites.
              description_teacher: In order to create more interesting and detailed
                images, students are introduced to the sprite object. Every sprite
                can be assigned an image to show, and sprites also keep track of multiple
                values about themselves, which will prove useful down the road when
                making animations.
            The Draw Loop:
              name: ხატვის ციკლი
              description_student: This lesson introduces the draw loop, one of the
                core programming paradigms in Game Lab.  The class combines the draw
                loop with random numbers to manipulate some simple animations with
                dots and then with sprites. Afterwards, everyone uses what they learned
                to update the sprite scene from the previous lesson.
              description_teacher: In this lesson students are introduced to the draw
                loop, one of the core programming paradigms in Game Lab. To begin
                the lesson students look at some physical flipbooks to see that having
                many frames with different images creates the impression of motion.
                Students then watch a video explaining how the draw loop in Game Lab
                helps to create this same impression in their programs. Students combine
                the draw loop with random numbers to manipulate some simple animations
                with dots and then with sprites. At the end of the lesson students
                use what they learned to update their sprite scene from the previous
                lesson.
            The Counter Pattern Unplugged:
              name: The Counter Pattern Unplugged
              description_student: This unplugged lesson explores the underlying behavior
                of variables. Using notecards and string to simulate variables within
                a program, the class implements a few short programs. Once comfortable
                with this syntax, the class uses the same process with sprite properties,
                tracking a sprite's progress across the screen.
              description_teacher: Students explore the underlying behavior of variables
                through an unplugged activity. Using notecards and string to simulate
                variables within a program, students implement a few short programs.
                Once comfortable with this syntax, students use the same process with
                sprite properties, tracking a sprite's progress across the screen.
            Sprite Movement:
              name: სპრაიტების მოძრაობა
              description_student: By combining the Draw Loop and the Counter Pattern,
                the class writes programs that move sprites across the screen, as
                well as animate other sprite properties.
              description_teacher: By combining the Draw Loop and the Counter Pattern,
                students write programs that move sprites across the screen, as well
                as animate other sprite properties.
            Booleans Unplugged:
              name: Booleans Unplugged
              description_student: This lesson introduces boolean values and logic,
                as well as conditional statements. The class starts by playing a simple
                game of Stand Up, Sit Down in which the boolean (true/false) statements
                describe personal properties (hair or eye color, clothing type, age,
                etc). The class then groups objects based on increasingly complex
                boolean statements, then looks at how conditionals can impact the
                flow of a program.
              description_teacher: |-
                In this lesson, students are introduced to boolean values and logic, as well as conditional statements. The class starts by playing a simple game of Stand Up, Sit Down in which the boolean (true/false) statements describe personal properties (hair or eye color, clothing type, age, etc). This gets students thinking about how they can frame a property with multiple potential values (such as age) with a binary question.

                From there students are provided a group of objects with similar, yet varying, physical properties. With a partner they group those objects based on increasingly complex boolean statements, including compound booleans with AND and OR.

                Finally we reveal Conditionals as a tool to make decisions or impact the flow of a program using boolean statements as input.
            Conditionals:
              name: პირობითი ბრძანებები
              description_student: The class starts by using booleans to compare the
                current value of a sprite property with a target value, using that
                comparison to determine when a sprite has reached a point on the screen,
                grown to a given size, or otherwise reached a value using the counter
                pattern. After using booleans directly to investigate the values or
                sprite properties, the class adds conditional if statements to write
                code that responds to those boolean comparisons.
              description_teacher: Students start by using booleans to compare the
                current value of a sprite property with a target value, using that
                comparison to determine when a sprite has reached a point on the screen,
                grown to a given size, or otherwise reached a value using the counter
                pattern. After using booleans directly to investigate the values or
                sprite properties, students add conditional _if_ statements to write
                code that responds to those boolean comparisons.
            Keyboard Input:
              name: კლავიატურიდან შეყვანილი ინფორმაცია
              description_student: Following the introduction to booleans and if statements
                in the previous lesson, students are introduced to a new block called
                keyDown() which returns a boolean and can be used in conditionals
                statements to move sprites around the screen. By the end of this lesson
                students will have written programs that take keyboard input from
                the user to control sprites on the screen.
              description_teacher: Following the introduction to booleans and _if_
                statements in the previous lesson, students are introduced to a new
                block called `keyDown()` which returns a boolean and can be used in
                conditionals statements to move sprites around the screen. By the
                end of this lesson students will have written programs that take keyboard
                input from the user to control sprites on the screen.
            Other Forms of Input:
              name: Other Forms of Input
              description_student: The class continues to explore ways to use conditional
                statements to take user input. In addition to the simple keyDown()
                command learned yesterday, the class learns about several other keyboard
                input commands as well as ways to take mouse input.
              description_teacher: In this lesson students continue to explore ways
                to use conditional statements to take user input. In addition to the
                simple `keyDown()` command learned yesterday, students will learn
                about several other keyboard input commands as well as ways to take
                mouse input.
            Project - Interactive Card:
              name: პროექტი - ინტერაქტიული ბარათი
              description_student: In this cumulative project for Chapter 1, the class
                plans for and develops an interactive greeting card using all of the
                programming techniques they've learned to this point.
              description_teacher: In this cumulative project for Chapter 1, students
                plan for and develop an interactive greeting card using all of the
                programming techniques they've learned to this point.
            Velocity:
              name: სიჩქარე
              description_student: მთვლელის ნიმუშის მუშაობის პრინციპის მოკლე განხილვის
                შემდეგ, კლასი გაეცნობა იმ თვისებებს, რომლებიც გამოიყენებიან სიჩქარის
                და მობრუნების სისწრაფის განსასაზღვრად. როგორც კი ისინი დაიწყებენ ამ
                თვისებების სხვადასხვაგვარად გამოყენებას, მოსწავლეები შეძლებენ საბაზისო
                side scroller ტიპის თამაშის შექმნას.
              description_teacher: მთვლელის ნიმუშის მუშაობის პრინციპის მოკლე განხილვის
                შემდეგ, მოსწავლეების გაეცნობიან იმ თვისებებს, რომლებიც გამოიყენებიან
                სიჩქარის და მობრუნების სისწრაფის განსასაზღვრად. როგორც კი ისინი დაიწყებენ
                ამ თვისებების სხვადასხვაგვარად გამოყენებას, მოსწავლეები შეძლებენ საბაზისო
                side scroller ტიპის თამაშის შექმნას.
            Collision Detection:
              name: შეჯახების აღმოჩენა
              description_student: The class learns about collision detection on the
                computer.  Pairs explore how a computer could use sprite location
                and size properties and math to detect whether two sprites are touching.  The
                class then uses the isTouching() block to create different effects
                when sprites collide, including playing sounds.  Last, they use their
                new skills to improve the sidescroller game that they started in the
                last lesson.
              description_teacher: Students learn about collision detection on the
                computer.  Working in pairs, they explore how a computer could use
                sprite location and size properties and math to detect whether two
                sprites are touching.  They then use the `isTouching()` block to create
                different effects when sprites collide, including playing sounds.  Last,
                they use their new skills to improve the sidescroller game that they
                started in the last lesson.
            Complex Sprite Movement:
              name: სპრაიტების რთული მოძრაობა
              description_student: 'The class learns to combine the velocity properties
                of sprites with the counter pattern to create more complex sprite
                movement, such as simulating gravity, making a sprite jump, and allowing
                a sprite to float left or right. In the final levels the class combine
                these movements to animate and control a single sprite and build a
                simple game in which a character flies around and collects coins. '
              description_teacher: Students learn to combine the velocity properties
                of sprites with the counter pattern to create more complex sprite
                movement. In particular students will learn how to simulate gravity,
                make a sprite jump, and allow a sprite to float left or right. In
                the final levels of the Code Studio progression students combine these
                movements to animate and control a single sprite and build a simple
                game in which a character flies around and collects a coin. Students
                are encouraged to make their own additions to the game in the final
                level.
            Collisions:
              name: შეჯახებები
              description_student: The class programs their sprites to interact in
                new ways.  After a brief review of how they used the isTouching block,
                the class brainstorms other ways that two sprites could interact.  They
                then use isTouching to make one sprite push another across the screen
                before practicing with the four collision blocks (collide, displace,
                bounce, and bounceOff).
              description_teacher: Students program their sprites to interact in new
                ways.  After a brief review of how they used the `isTouching` block,
                students brainstorm other ways that two sprites could interact.  They
                then use `isTouching` to make one sprite push another across the screen
                before practicing with the four collision blocks (`collide`, `displace`,
                `bounce`, and `bounceOff`).
            Functions:
              name: ფუნქციები
              description_student: This lesson covers functions as a way to organize
                their code, make it more readable, and remove repeated blocks of code.
                The class learns that higher level or more abstract steps make it
                easier to understand and reason about steps, then begins to create
                functions in Game Lab.  At the end of the lesson the class uses these
                skills to organize and add functionality to the final version of their
                side scroller game.
              description_teacher: Students learn how to create functions to organize
                their code, make it more readable, and remove repeated blocks of code.
                An unplugged warmup explores how directions at different levels of
                detail can be useful depending on context. Students learn that higher
                level or more abstract steps make it easier to understand and reason
                about steps. Afterwards students learn to create functions in Game
                Lab. They will use functions to remove long blocks of code from their
                draw loop and to replace repeated pieces of code with a single function.
                At the end of the lesson students use these skills to organize and
                add functionality to the final version of their side scroller game.
            The Game Design Process:
              name: თამაშის დიზაინის პროცესი
              description_student: This lesson introduces the process the class will
                use to design games for the remainder of the unit. The class walks
                through through this process in a series of levels. As part of this
                lesson the class also briefly learn to use multi-frame animations
                in Game Lab. At the end of the lesson they have an opportunity to
                make improvements to the game to make it their own.
              description_teacher: This lesson introduces students to the process
                they will use to design games for the remainder of the unit. This
                process is centered around a project guide which asks students to
                define their sprites, variables, and functions before they begin programming
                their game. In this lesson students begin by playing a game on Game
                Lab where the code is hidden. They discuss what they think the sprites,
                variables, and functions would need to be to make the game. They are
                then given a completed project guide which shows one way to implement
                the game. Students are then walked through this process through a
                series of levels. As part of this lesson students also briefly learn
                to use multi-frame animations in Game Lab. At the end of the lesson
                students have an opportunity to make improvements to the game to make
                it their own.
            Using the Game Design Process:
              name: თამაშის დიზაინის პროცესის გამოყენება
              description_student: In this multi-day lesson, the class uses the problem
                solving process from Unit 1 to create a platform jumper game.  After
                looking at a sample game, the class defines what their games will
                look like and uses a structured process to build them.  Finally, the
                class reflects on how the games could be improved, and implements
                those changes.
              description_teacher: In this multi-day lesson, students use the problem
                solving process from Unit 1 to create a platform jumper game.  They
                start by looking at an example of a platform jumper, then define what
                their games will look like.  Next, they use a structured process to
                plan the backgrounds, variables, sprites, and functions they will
                need to implement their game.  After writing the code for the game,
                students will reflect on how the game could be improved, and implement
                those changes.
            Project - Design a Game:
              name: პროექტი - შექმენით თამაშის დიზაინი
              description_student: The class plans and builds original games using
                the project guide from the previous two lessons. Working individually
                or in pairs, the class plans, develops, and gives feedback on the
                games.  After incorporating the peer feedback, the class shares out
                the completed games.
              description_teacher: Students will plan and build their own game using
                the project guide from the previous two lessons to guide their project.
                Working individually or in pairs, students will first decide on the
                type of game they'd like to build, taking as inspiration a set of
                sample games. They will then complete a blank project guide where
                they will describe the game's behavior and scope out the variables,
                sprites, and functions they'll need to build. In Code Studio, a series
                of levels prompts them on a general sequence they can use to implement
                this plan. Partway through the process, students will share their
                projects for peer review and will incorporate feedback as they finish
                their game. At the end of the lesson, students will share their completed
                games with their classmates. This project will span multiple classes
                and can easily take anywhere from 3-5 class periods.
            CS Discoveries End of Semester Survey:
              name: CS Discoveries End of Semester Survey
              description_student: ''
              description_teacher: ''
        csd2-2018:
          title: CSD Unit 2 - Web Development
          description: " In Unit 2, you’ll learn how to create and share the content
            on your own web pages. After deciding what content you want to share with
            the world, you’ll learn how to structure and style your pages using HTML
            and CSS. You’ll also practice valuable programming skills such as debugging
            and commenting.  By the end of the unit, you’ll have a personal website
            that you can publish to the Internet."
          description_short: "  ისწავლეთ თქვენი საკუთარი საიტის აწყობა ვებ ლაბორატორიაში."
          description_audience: ''
          stages:
            Exploring Websites:
              name: ვებსაიტების გამოკვლევა
              description_student: This lesson covers the purposes that a website
                might serve, both for the users and the creators. The class explores
                a handful of the most-used websites in the United States and discusses
                how each of those sites is useful for users and how it might also
                serve its creators.
              description_teacher: ყოველ ვებსაიტს აქვს დანიშნულება, მიზანი რომლისთვისაც
                ის ვიღაცამ შექმნა და ვიღაცა იყენებს. ამ გაკვეთილში, მოსწავლეები დაიწყებენ
                საიტის შესაძლო დანიშნულებების გათვალისწინებას, როგორც მომხმარებლების,
                ასევე შემქნელების მხრიდან. მოსწავლეები გამოიკვლევენ რამდენიმე ამერიკის
                შეერთებულ შტატებში ყველაზე მეტად გამოყენებად ვებსაიტს და ეცდებიან
                გაიგონ თუ რა მხრივ არიან ისინი გამოყენებადი მომხარებლებისთვის და როგორ
                შეიძლება ემსახურონ თავიანთ შექმნელებს.
            'Websites for Expression ':
              name: 'ვებსაიტები გამოხატვისათვის '
              description_student: 'This lesson introduces websites as a means of
                personal expression.  The class first discusses different ways that
                people express and share their interests and ideas, then looks at
                a few exemplar websites made by students from a previous course. Finally
                everyone brainstorms and shares a list of topics and interests to
                include, creating a resource for developing a personal website in
                the rest of the unit. '
              description_teacher: In this lesson students investigate ways to use
                websites as a means of personal expression and develop a list of topics
                and interests that they would want to include on a personal website.
                To begin the lesson students brainstorm different ways that people
                express and share their interests and ideas. Students then look at
                a few exemplar websites made by students from a previous CS Discoveries
                course to identify ways they are expressing their ideas. Finally students
                brainstorm and share a list of topics and interests they might want
                to include on a personal website which they can reference for ideas
                as they progress through the unit.
            Intro to HTML:
              name: შესავალი HTML-ში
              description_student: This lesson introduces to HTML as a solution to
                the problem of how to communicate both the content and structure of
                a website to a computer. The lesson begins with a brief unplugged
                activity demonstrating the challenges of effectively communicating
                the structure of a web page. The class looks at an HTML page in Web
                Lab and discusses how HTML tags help solve this problem, then uses
                HTML to write the first web pages of the unit.
              description_teacher: In this lesson students are introduced HTML as
                a solution to the problem of how to communicate both the content and
                structure of a website to a computer. The lesson begins with a brief
                unplugged activity demonstrating the challenges of effectively communicating
                the structure of a web page. Students then look at an exemplar HTML
                page in Web Lab and discuss with their classmates how HTML tags help
                solve this problem. Students then write their first HTML. A wrap-up
                discussion helps to solidify the understanding of content vs. structure
                that was developed throughout the lesson.
            Headings:
              name: სათაურები
              description_student: This lesson continues the introduction to HTML
                tags, this time with headers.  The class practices using header tags
                to create page and section titles and learns how the different header
                elements are displayed by default.  Next, the class plans how to organize
                their content on the personal web pages that will be built across
                the unit and begins the first page of the project.
              description_teacher: In this lesson, students continue to use HTML to
                structure text on web pages, this time with headings.  Students learn
                how the different heading elements are displayed by default and practice
                using them to create page and section titles.  Students then start
                to decide how they will organize their content on their own personal
                web pages.  In the last level, students begin the project that they
                will continue to work on throughout the unit.
            Digital Footprint:
              name: ციფრული ნაკვალევი
              description_student: This lesson takes a step back from creating the
                personal website to talk about personal information people choose
                to share digitally.  The class begins by discussing what types of
                information are good to share with other people, then looks at several
                sample social media pages to see what types of personal information
                could be shared intentionally or unintentionally.  Finally, the class
                comes up with a set of guidelines to follow when putting information
                online.
              description_teacher: |-
                As students have recently spent some time thinking about the actual content that will go into their personal website, this lesson takes a step back from the unit-long project (publication of a personal website) to help students articulate what personal information they choose to share digitally and with whom.  It also reinforces the notion that much of the information that they choose to share digitally falls largely out of their control the moment it is released.  \r
                \r
                Students begin by individually identifying appropriate audiences with whom they would be comfortable sharing given pieces of personal information.  They then look at several social media pages to determine what sorts of information people are sharing about themselves or one another.  Last, students reflect on what guidelines they think are appropriate for posting information online.\r
                \r
                The ultimate point of this lesson is not to scare students, but rather to experientially bring students to realizing precisely what level of control they don’t have in releasing information into the web.
            Lists:
              name: სიები
              description_student: ეს დონე წარმოგვიდგენს დალაგებულ და დაულაგებელ სიებს
                და შესაბამის  &lt;ul&gt;, &lt;ol&gt;, და &lt;li&gt; HTML ტეგებს. კლასი
                ვარჯიშობს ტეგების გამოყენებაზე, შემდეგ კი უბრუნდება პირადი ვებ გვერდის
                პროექტს, რათა დაამატოთ ახალი HTML გვერდი, რომლებიც შეიცავს ახალ ტაგებს.
              description_teacher: Students are introduced to ordered and unordered
                lists in HTML and work through a few levels in which they use the
                &lt;ul&gt;, &lt;ol&gt;, and &lt;li&gt; tags.  They then go back to
                their project, where they add a new HTML page.  Inside the new page,
                they write the HTML to display a recipe, top ten list, or any other
                content that uses the new tags that they have learned.
            Intellectual Property and Images:
              name: ინტელექტუალური საკუთრება და სურათები
              description_student: ეს გაკვეთილი მოიცავს სხვების მიერ შექმნილი მედიას
                ( სურათების, ვიდეოს ან მუსიკის) შემქნელების უფლებების პატივიცემით
                გამოყენებას. Creative Commons ლიცენზირების შესწავლის შემდეგ, კლასი
                ისწავლის ვებ გვერდზებზე სურათების დამატებას და ამავე დროს საავტორო
                უფლებების სწორად მითითებას.
              description_teacher: |-
                Starting with an discussion of their personal opinions on how others should be allowed to use their work, the class explores the purpose and role of copyright for both creators and users of creative content.  They then move on to an activity exploring the various Creative Commons licenses as a solution to the difficulty in dealing with copyright. \r
                \r
                Finally, with a common understanding of the restrictions of various Creative Commons licenses, students learn how to add images to their web pages using the &lt;img&gt; tag.
            Clean Code and Debugging:
              name: Clean Code and Debugging
              description_student: ეს დონე მოიცავს პრობლემებს, რომლებიც ხშირად იჩენენ
                თავს HTML ვებ გვერდების დიზაინის დროს. კლასი შეასწორებს შეცდომებს
                მიმდევრობითად გართულებად ვებ გვერდებში, რომლებიც Code Studio-ზე არიან
                განთავსებულნი. კლასი ასევე შეისწავლის კომენტარების, ცარიელი ტექსტური
                სივრცეების და ინდენტაციის მნიშვნელობას და პრაქტიკულობას ვებ გვერდების
                წაკითხვადობის გასაუმჯობესებლად.
              description_teacher: Students deal with common issues that arise when
                designing web pages in HTML. Students will correct errors in a sequence
                of increasingly complex web pages. In the process they will learn
                the importance of comments, whitespace, and indentation as tools for
                making web pages easier to read. At the end of the lesson students
                create a list of strategies for debugging web pages and ensuring they
                are easy to read and maintain.
            Project - Multi-Page Websites:
              name: პროექტი - მრავალგვერდიანი ვებსაიტები
              description_student: 'ეს დონე მოიცავს ჰიპერბმულებს, რომლებიც აძლევენ
                საშუალებას ვებ დეველოპერებს დაუკავშირონ ერთმანეთს გვერდები ერთიან
                ვებსაიტის შესაქმნელად. მთლიანი საიტის ვებში გამოქვეყნებამდე, კლასი
                ააწყობს ერთ პროექტს ყველა წინა გვერდის ერთმანეთთან დაკავშირებით და
                შექმნის სანავიგაციო პანელს ყოველი გვერდისთვის.  '
              description_teacher: |
                After learning about how to link web pages to one another, students are finally able to publish the website they have been working on.  In this lesson, they link together all the previous pages they have created into one project, create a new page, and add navigation between the pages before publishing the entire site to the Web.  \r
                \r
            Styling Text with CSS:
              name: ტექსტის გასტილვა CSS-ით
              description_student: ეს დონე წარმოგიდგენთ CSS-ს, როგორც გვერდის ელემენტების
                სტილის განსაზღვრის გზას. კლასი შეისწავლის CSS წესების საბაზისო სინტაქსს
                და გამოიკვლევს თვისებებს, რომლებიც ზემოქმედებენ HTML ტექსტური ელემენტებზე.
                საბოლოოდ, ყველა გამოიყენებს ტექსტურ სტილებს საკუთარ პირად ვებსაიტებზე.
              description_teacher: ეს დონე წარმოგიდგენთ CSS-ს, როგორც გვერდის ელემენტების
                სტილის განსაზღვრის გზას. კლასი შეისწავლის CSS წესების საბაზისო სინტაქსს
                და გამოიკვლევს თვისებებს, რომლებიც ზემოქმედებენ HTML ტექსტური ელემენტებზე.
                ისინი იმუშავებენ HTML გვერდზე, რომელიც გვიამბობს გინესის რეკორდების
                მფლობელებზე, კერძოდ კი დაამატებენ მოწოდებულ გვერდს თავის სტილებს.
                ბოლო დონეზე, მოსწავლეები გამოიყენებენ ახალ ინფორმაციას საკუთარ პირად
                ვებ გვერდზე ტექსტური ელემენტების სტილების განსასაზღვრად.
            Styling Elements with CSS:
              name: ელემენტების გასტილვა CSS-ით
              description_student: This lesson continues the introduction to CSS style
                properties, this time focusing more on non-text elements. The class
                begins by investigating and modifying the new CSS styles on a Desserts
                of the World page. Afterwards, everyone applies this new knowledge
                to their personal websites.
              description_teacher: This lesson continues the introduction to CSS style
                properties, this time focusing more on non-text elements. Students
                begin this lesson by looking at a website about Desserts of the World.
                They investigate and modify the new CSS styles on this website, adding
                their own styles to the page. After working on the Desserts page,
                students apply their knowledge of new CSS properties to do more styling
                of their personal websites.
            Sources and Search Engines:
              name: Sources and Search Engines
              description_student: After first completing a web search scavenger hunt,
                the class learns about the inner workings of search engines and has
                an opportunity to flex their analytical skills in a search for strange
                and unlikely animals.
              description_teacher: This lesson encourages students to think more critically
                about how web searches work and how to find relevant and trustworthy
                information online. After viewing and discussion a video about how
                search engines work, students will search for information about several
                unlikely animals. They'll need to analyze the sites they find for
                reliability in order to identify which of the animals is actually
                a hoax.
            RGB Colors and Classes:
              name: RGB ფერები და კლასები
              description_student: This lesson covers classes and custom colors. The
                class first learns how to specify custom colors using RGB (red, green,
                blue) values, then applies these colors to a new Four Seasons web
                page, which uses CSS classes.  Using classes, the class adds more
                styles to the Four Seasons web page, then use them to style their
                personal websites.
              description_teacher: In this lesson, students first learn how to specify
                custom colors using their RGB (red, green, blue) values.  They then
                apply these colors to a new Four Seasons web page, which uses CSS
                classes.  CSS classes allow web developers to treat groups of elements
                they want styled differently than other elements of the same type.
                Using classes, students add more styles to the Four Seasons web page,
                then use them to style their personal websites.
            Project - Personal Portfolio Website:
              name: პროექტი - პირადი პორტფოლიოს ვებსაიტი
              description_student: In the last few days of the unit, the class finalizes
                their personal websites, working with peers to get feedback, review
                the rubric, and put the finishing touches on the site. To cap off
                the unit, everyone shares their projects and how they were developed.
              description_teacher: 'Students have spent a lot of time throughout the
                unit working on their Personal Website. In the final couple of days
                students finalize their websites.  They work with peers to get feedback,
                put the finishing touches on the websites, review the rubric and reflect
                on their process. To cap off the unit, they will share their projects
                and also a overview of the process they took to get to that final
                design.\r

'
        coursea-2018:
          title: კურსი A
          description: შეისწავლეთ კომპიუტერული მეცნიერების და ინტერნეტ უსაფრთხოების
            საფუძვლები. კურსის ბოლოს შექმენით თქვენი საკუთარი თამაში ან ისტორია, რომლის
            გაზიარებას შეძლებთ.
          description_short: შესავალი კომპიუტერულ მეცნიერებაში მათთვის, ვინც ჯერ კითხვა
            არ იცის.
          description_audience: 'ასაკი: 4-7'
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
              description_student: ''
              description_teacher: 'This lesson will guide students through the steps
                of debugging.  Students will learn the mantra: "What happened?  What
                was supposed to happen? What does that tell you?"'
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
              description_student: ''
              description_teacher: |-
                When students run into a barrier while answering a question or working on a project, it’s so easy for them to get frustrated and give up.  This lesson will introduce students to the idea that frustration can be an important part of learning. Here, frustration is presented as a step in the creative process, rather than a sign of failure.\r
                \r
                This lession can be done over one or two class sessions.  If you have more time, feel free to draw out the building and revising phase of the Marble Run activity.
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
              description_student: ''
              description_teacher: 'In this lesson, students will relate the concept
                of algorithms back to everyday, real-life activities by planting an
                actual seed. The goal here is to start building the skills to translate
                real-world situations to online scenarios and vice versa.\r

'
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: ''
              description_teacher: ეს გაკვეთილი შეუქმნის მოსწავლეებს წარმოდგენას თუ
                რას უნდა ელოდონ, როდესაც გაემგზავრებიან კომპიუტერულ ლაბორატორიაში.
                ის იწყება მოკლე განხილვით და კომპიუტერულ ლაბორატორიაში ქცევის წესებით,
                შემდეგ მოსწავლეები გადავლენ კომპიუტერის საშუალებით ონლაინ თავსატეხების
                ამოხსნაზე.
            'Programming: Happy Maps':
              name: 'პროგრამირება: ბედნიერი რუკები'
              description_student: ''
              description_teacher: ხიდი, რომელიც აკავშირებს ალგორითმებს და პროგრამირებას
                შეიძლება იყო მოკლე, თუ მოსწავლეებს ესმით განსხვავება მიმდევრობის დაგეგმარებასა
                და ამ მიმდევრობის პროგრამირების ენაზე კოდირების შორის. ეს აქტივობა
                დაეხმარება მოსწავლეებს მიიღონ გამოცდილება ფსევდოკოდის წაკითხვასა და
                დაწერაში.
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
              description_student: ''
              description_teacher: In this series of online puzzles, students will
                build on the understanding of algorithms, debugging, and general computer
                literacy. Featuring characters from the game Angry Birds, students
                will develop sequential algorithms to get the bird to the pig without
                crashing into walls or TNT. Debugging puzzles have also been mixed
                into this stage for added practice with problem solving and critical
                thinking.
            Going Places Safely:
              name: უსაფრთხო მგზავრობა
              description_student: ''
              description_teacher: In collaboration with [r common-sense-media], this
                lesson helps students learn that many websites ask for information
                that is private and discusses how to responsibly handle such requests.
                Students also find out that they can go to exciting places online,
                but they need to follow certain rules to remain safe.
            'Loops: Happy Loops':
              name: 'ციკლები: ბედნიერი ციკლები'
              description_student: ''
              description_teacher: Loops are a very helpful and powerful tool in programming.
                To understand how helpful loops can be, students will need to be driven
                to want an easier way to solve mundane problems.
            Loops in Collector:
              name: ციკლები შემგროვებელში
              description_student: ''
              description_teacher: განმეორებადი ინსტრუქციების შესახებ, "ბედნიერი ციკლებიდან"
                მიღებული ცოდნის საფუძველზე, ამ ეტაპზე მოსწავლეები ციკლებს Code.org-ზე
                განძეულობის უფრო ეფექტურად შესაგროვებლად გამოიყენებენ.
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: Returning to loops, students learn to draw images
                by looping simple sequences of instructions. In the previous plugged
                lesson, loops were used to traverse a maze and collect treasure. Here,
                loops are creating patterns. At the end of this stage, students will
                be given the opportunity to create their own images using loops.
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
              description_student: ''
              description_teacher: Events are a great way to add variety to a pre-written
                algorithm. Sometimes you want your program to be able to respond to
                the user exactly when the user wants it to. That is what events are
                for.
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
              description_student: ''
              description_teacher: ამ ონლაინ აქტივობაში, მოსწავლეებს ექნებათ საშუალება
                შეისწავლონ სათამაშო ლაბორატორიაში მოვლენების გამოყენება და გამოიყენონ
                კოდის წერის უნარები, რათა შექმნან ანიმირებული თამაში. დროა გავხდეთ
                კრეატიულები და შევქმნათ ამბავი სათამაშო ლაბორატორიაში!
            Programming in Bee:
              name: Programming in Bee
            Programming in Harvester:
              name: Programming in Harvester
            Loops in Harvester:
              name: Loops in Harvester
            Sequencing in Maze:
              name: Sequencing in Maze
        express-2018:
          title: დაჩქარებული კურსი
          description: შეისწავლეთ კომპიუტერული მეცნიერების და ინტერნეტ უსაფრთხოების
            საფუძვლები. კურსის ბოლოს შექმენით თქვენი საკუთარი თამაში ან ისტორია, რომლის
            გაზიარებას შეძლებთ.
          description_short: 'შესავალი კომპიუტერულ მეცნიერებაში: აერთიანებს დაწყებითი
            სკოლის პროგრამის საუკეთესო ელემენტებს უფროსი მოსწავლეებისთვის.'
          description_audience: 'ასაკი: 9-18'
          stages:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
              description_student: ''
              description_teacher: ''
            Introduction:
              name: შესავალი
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: ფუნდამენტის აშენება
              description_student: ''
              description_teacher: ''
            Debugging in Collector:
              name: დებაგირება შემგროვებელში
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            Nested Loops:
              name: ჩასმული ციკლები
              description_student: ''
              description_teacher: ''
            Nested Loops Project in Frozen:
              name: Nested Loops Project in Frozen
              description_student: ''
              description_teacher: ''
            'How it Works: The Internet':
              name: 'როგორ მუშაობს ეს: ინტერნეტი'
              description_student: ''
              description_teacher: ''
            'Common Sense Education: Digital Citizenship':
              name: 'Common Sense Education: Digital Citizenship'
              description_student: ''
              description_teacher: ''
            'Common Sense Education: Screen Out the Mean':
              name: 'Common Sense Education: Screen Out the Mean'
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
              description_student: ''
              description_teacher: ''
            Events in Star Wars:
              name: მოვლენები ვარსკვლავურ ომებში
              description_student: ''
              description_teacher: ''
            Events with Flappy:
              name: მოვლენები მოფარფატე ჩიტთან ერთად
              description_student: ''
              description_teacher: ''
            Events in Bounce:
              name: მოვლენები მხტუნავში
              description_student: ''
              description_teacher: ''
            'Conditionals: Conditionals with Cards':
              name: 'Conditionals: Conditionals with Cards'
              description_student: ''
              description_teacher: ''
            While Loops in Farmer:
              name: While ციკლები ფერმერში
              description_student: ''
              description_teacher: ''
            Conditional Loops in Maze:
              name: პირობითი ციკლები ლაბირინთში
              description_student: ''
              description_teacher: ''
            Conditionals in Minecraft:
              name: პირობითი წინადადებები Minecraft-ში
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Farmer:
              name: პირობითი წინადადებები და ციკლები ფერმერში
              description_student: ''
              description_teacher: ''
            'Variables: Envelope Variables':
              name: 'ცვლადები: ცვლადები კონვერტებში'
              description_student: ''
              description_teacher: ''
            Variables in Artist:
              name: ცვლადები მხატვარში
              description_student: ''
              description_teacher: ''
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
              description_student: ''
              description_teacher: ''
            'For Loops: For Loop Fun':
              name: 'For ციკლები: გართობა For ციკლებით'
              description_student: ''
              description_teacher: ''
            For Loops in Bee:
              name: For ციკლები ფუტკარში
              description_student: ''
              description_teacher: ''
            For Loops in Artist:
              name: For ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            'Functions: Songwriting with Parameters':
              name: 'ფუნქციები: სიმღერების წერა პარამეტრებით'
              description_student: ''
              description_teacher: ''
            Functions in Bee:
              name: ფუნქციები ფუტკარში
              description_student: ''
              description_teacher: ''
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
              description_student: ''
              description_teacher: ''
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
              description_student: ''
              description_teacher: ''
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
              description_student: ''
              description_teacher: ''
            The Design Process:
              name: დიზაინის პროცესი
              description_student: ''
              description_teacher: ''
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
              description_student: ''
              description_teacher: ''
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
              description_student: ''
              description_teacher: ''
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
              description_student: ''
              description_teacher: ''
            Conditionals in Bee:
              name: პირობითი ბრძანებები ფუტკარში
            Until Loops in Maze:
              name: Until Loops in Maze
        courseb-2018:
          title: კურსი B
          description: შეისწავლეთ კომპიუტერული მეცნიერების და ინტერნეტ უსაფრთხოების
            საფუძვლები. კურსის ბოლოს შექმენით თქვენი საკუთარი თამაში ან ისტორია, რომლის
            გაზიარებას შეძლებთ.
          description_short: შესავალი კომპიუტერულ მეცნიერებაში დამწყებ მკითხველთათვის.
            (A კურსის მსგავსი, მაგრამ უფრო მრავალფეროვანი უფრო მოსწავლეებისთვის.)
          description_audience: 'ასაკი: 5-8'
          stages:
            'Debugging: Unspotted Bugs':
              name: 'Debugging: Unspotted Bugs'
              description_student: ''
              description_teacher: ''
            'Persistence & Frustration: Stevie and the Marbles':
              name: 'Persistence & Frustration: Stevie and the Marbles'
              description_student: ''
              description_teacher: ''
            'Real-life Algorithms: Plant a Seed':
              name: 'ცხოვრებისეული ალგორითმები: დათესე მცენარე'
              description_student: ''
              description_teacher: ''
            Learn to Drag and Drop:
              name: Learn to Drag and Drop
              description_student: ''
              description_teacher: ''
            Your Digital Footprint:
              name: თქვენი ციფრული ნაკვალევი
              description_student: ''
              description_teacher: ''
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
              description_student: ''
              description_teacher: ''
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
              description_student: ''
              description_teacher: ''
            Programming with Rey and BB-8:
              name: პროგრამირება რეისთან და BB-8-სთან ერთად
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
              description_student: ''
              description_teacher: ''
            Loops in Collector:
              name: ციკლები შემგროვებელში
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
              description_student: ''
              description_teacher: ''
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
              description_student: ''
              description_teacher: ''
            Programming in Ice Age:
              name: Programming in Ice Age
            Loops in Ice Age:
              name: Loops in Ice Age
            Sequencing with Scrat:
              name: Sequencing with Scrat
            Move It, Move It:
              name: ვისწავლოთ გადაადგილება
        coursed-2018:
          title: New Course D Script
          description: ''
          description_short: ''
          description_audience: ''
          stages:
            'Algorithms: Graph Paper Programming':
              name: 'Algorithms: Graph Paper Programming'
              description_student: ''
              description_teacher: ''
            Introduction:
              name: შესავალი
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: ფუნდამენტის აშენება
              description_student: ''
              description_teacher: ''
            Debugging in Collector:
              name: დებაგირება შემგროვებელში
              description_student: ''
              description_teacher: ''
            Events in Bounce:
              name: მოვლენები მხტუნავში
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            Nested Loops in Bee:
              name: ჩადგმული ციკლები ფუტკარში
              description_student: ''
              description_teacher: ''
            Nested Loops in Artist:
              name: ჩადგმული ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            While Loops in Farmer:
              name: While ციკლები ფერმერში
              description_student: ''
              description_teacher: ''
            Conditionals with Cards:
              name: პირობები ბარათებით
              description_student: ''
              description_teacher: ''
            Conditionals in Bee:
              name: პირობითი ბრძანებები ფუტკარში
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Maze:
              name: პირობითი წინადადებები და ციკლები ლაბირინთში
              description_student: ''
              description_teacher: ''
            Conditionals & Loops in Farmer:
              name: პირობითი წინადადებები და ციკლები ფერმერში
              description_student: ''
              description_teacher: ''
            Digital Citizenship:
              name: ციფრული მოქალაქეობა
              description_student: ''
              description_teacher: ''
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
              description_student: ''
              description_teacher: ''
            'Unplugged: Binary':
              name: 'გაკვეთილი კომპიუტერის გარეშე: ორობითი სისტემა'
              description_student: ''
              description_teacher: ''
            Artist Binary:
              name: 'მხატვარი: ორობითი'
              description_student: ''
              description_teacher: ''
            Loops in Ice Age:
              name: Loops in Ice Age
            Nested Loops in Frozen:
              name: Nested Loops in Frozen
            Until Loops in Maze:
              name: Until Loops in Maze
            Conditionals in Maze:
              name: Conditionals in Maze
        jr-test:
          stages:
            Programming with Behaviors:
              name: Programming with Behaviors
            Programming with Forever:
              name: Programming with Forever
            Using Behaviors:
              name: Using Behaviors
            Using Forever Loops:
              name: Using Forever Loops
            Virtual Pet - Behaviors:
              name: Virtual Pet - Behaviors
            Fish Tank:
              name: Fish Tank
            Virtual Pet - Forever:
              name: Virtual Pet - Forever
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        petgame:
          stages:
            pet game:
              name: pet game
          title: ''
          description_audience: ''
          description_short: ''
          description: ''
        csp-exam:
          stages:
            Unit 1 - Assessment 1:
              name: Unit 1 - Assessment 1
            Unit 1 - Assessment 2:
              name: Unit 1 - Assessment 2
            Unit 2 - Assessment 1:
              name: Unit 2 - Assessment 1
            Unit 2 - Assessment 2:
              name: Unit 2 - Assessment 2
            Unit 3 - Assessment 1:
              name: Unit 3 - Assessment 1
            Unit 4 - Assessment 1:
              name: Unit 4 - Assessment 1
            Unit 5 - Assessment 1:
              name: Unit 5 - Assessment 1
            Unit 5 - Assessment 2:
              name: Unit 5 - Assessment 2
            Unit 2 - Assessment 3:
              name: Unit 2 - Assessment 3
            Unit 2 - Assessment 4:
              name: Unit 2 - Assessment 4
            Unit 2 - Assessment 5 - Practice AP Pseudocode Questions:
              name: Unit 2 - Assessment 5 - Practice AP Pseudocode Questions
            'Unit 1.1 - Binary and Ascii ':
              name: 'Unit 1.1 - Binary and Ascii '
            Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.:
              name: Unit 1.2 - Internet Protocols, TCP/IP, DNS, HTTP, etc.
            Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2 - 1. Bits, Bytes, Hexadecimal and Compression
            Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2 - 2. Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction:
              name: Unit 3 - 1. Programming - Turtle, Loops, Functions, Abstraction
            Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction:
              name: Unit 3 - 1 Programming - Turtle, Loops, Functions, Abstraction
            'Unit 1 Assessment 1 - Binary and Ascii ':
              name: 'Unit 1 Assessment 1 - Binary and Ascii '
            Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc:
              name: Unit 1 Assessment 2 - Internet Protocols, TCP/IP, DNS, HTTP, etc
            Unit 2-1 - Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2-1 - Bits, Bytes, Hexadecimal and Compression
            Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2-2 - Interpreting Data & Charts, Big Data, Global Impacts
            Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: Unit 3 Quiz 1 - Turtle Programming, Loops, Functions, Abstraction
            Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression:
              name: Unit 2 Assessment 1 - Bits, Bytes, Hexadecimal and Compression
            Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global Impacts:
              name: Unit 2 Assessment 2 - Interpreting Data & Charts, Big Data, Global
                Impacts
            Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction:
              name: Unit 3 Assessment 1 - Turtle Programming, Loops, Functions, Abstraction
            Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption:
              name: Unit 4 Assessment 1 - Privacy, Cybersecurity, Encryption
            Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic, Turtle Review:
              name: Unit 5 Assessment 1 - Events, Variables, Debugging, Arithmetic,
                Turtle Review
            Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings:
              name: Unit 5 Assessment 2 - If Statements, Boolean Expressions, Strings
            Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays and Lists:
              name: Unit 5 Assessment 3 - While Loops, Boolean Expressions, Arrays
                and Lists
            Unit 5 Assessment 4 - List Algorithms, Functions with Return Values:
              name: Unit 5 Assessment 4 - List Algorithms, Functions with Return Values
            Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables, Procedures, Loops, Conditionals):
              name: Unit 5 Assessment 5 - Practice AP Pseudocode Questions (Variables,
                Procedures, Loops, Conditionals)
          title: CS Principles AP Exam Prep
          description_audience: ''
          description_short: CS Principles AP Exam Prep
          description: 'This page contains copies of all the multiple choice assessment
            questions that appeared in Units 1-5 in the course.  '
        coursec-2018:
          title: კურსი C
          description: შექმენით პროგრამები ციკლებით, მოვლენებით და პირობითი წინადადებებით.
            გადათარგმნეთ თქვენი ინიციალები ორობითში, გამოიკვლიეთ სხვადასხვა პრობლემის
            გადაჭრის ტექნიკა და ისწავლეთ თუ როგორ უნდა უპასუხოთ კიბერძალადობას. კურსის
            ბოლოს შექმენით თქვენი საკუთარი თამაში ან ამბავი, რომლის გაზიარებასაც შეძლებთ.
          description_short: Learn the basics of computer science and create your
            own art, stories, and games.
          description_audience: 'ასაკი: 6-10'
          stages:
            Building a Foundation:
              name: ფუნდამენტის აშენება
              description_student: ''
              description_teacher: ''
            Programming in Maze:
              name: პროგრამირება ლაბირინთში
              description_student: ''
              description_teacher: ''
            Debugging in Maze:
              name: დებაგირება ლაბირინთში
              description_student: ''
              description_teacher: ''
            'Real-life Algorithms: Paper Planes':
              name: 'ცხოვრებისეული ალგორითმები: ქაღალდის თვითმფრინავები'
              description_student: ''
              description_teacher: ''
            Programming in Collector:
              name: პროგრამირება შემგროვებელში
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: პროგრამირება მსახიობში
              description_student: ''
              description_teacher: ''
            'Loops: Getting Loopy':
              name: 'Loops: Getting Loopy'
              description_student: ''
              description_teacher: ''
            Loops with Rey and BB-8:
              name: ციკლები რეისთან და BB-8-სთან ერთად
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            Loops in Harvester:
              name: Loops in Harvester
              description_student: ''
              description_teacher: ''
            'Events: The Big Event':
              name: 'მოვლენები: დიდი მოვლენა'
              description_student: ''
              description_teacher: ''
            Build a Flappy Game:
              name: ააწყვეთ მოფარფატე ჩიტის თამაში
              description_student: ''
              description_teacher: ''
            Events in Play Lab:
              name: მოვლენები სათამაშო ლაბორატორიაში
              description_student: ''
              description_teacher: ''
            Screen Out the Mean:
              name: Screen Out the Mean
              description_student: ''
              description_teacher: ''
            Binary Bracelets:
              name: ორობითი სამაჯურები
              description_student: ''
              description_teacher: ''
            Looking Ahead:
              name: Looking Ahead
        csd6-2018:
          title: CSD Unit 6 - Physical Computing
          description: Unit 6 explores the role of hardware platforms in computing
            and how different sensors can provide more effective input and output
            than the traditional keyboard, mouse, and monitor. Using App Lab and Adafruit’s
            Circuit Playground, you’ll develop programs that utilize the same hardware
            inputs and outputs that you see in the smart devices, looking at how a
            simple rough prototype can lead to a finished product. The unit concludes
            with a design challenge to use the Circuit Playground as the basis for
            an innovation of your own design.
          description_short: შეისწავლეთ პროგრამირება ფიზიკური მოწყობილობების საშუალებით.
          description_audience: ''
          stages:
            Innovations in Computing_:
              name: Innovations in Computing_
              description_student: ''
              description_teacher: ''
            Designing Screens with Code_:
              name: Designing Screens with Code_
              description_student: ''
              description_teacher: ''
            The Circuit Playground_:
              name: The Circuit Playground_
              description_student: ''
              description_teacher: ''
            Input Unplugged_:
              name: Input Unplugged_
              description_student: ''
              description_teacher: ''
            Board Events_:
              name: Board Events_
              description_student: ''
              description_teacher: ''
            Getting Properties_:
              name: Getting Properties_
              description_student: ''
              description_teacher: ''
            Analog Input_:
              name: Analog Input_
              description_student: ''
              description_teacher: ''
            The Program Design Process_:
              name: The Program Design Process_
              description_student: ''
              description_teacher: ''
            'Project: Make a Game__':
              name: 'Project: Make a Game__'
              description_student: ''
              description_teacher: ''
            Arrays and Color LEDs__:
              name: Arrays and Color LEDs__
              description_student: ''
              description_teacher: ''
            Making Music_:
              name: Making Music_
              description_student: ''
              description_teacher: ''
            Arrays and For Loops_:
              name: Arrays and For Loops_
              description_student: ''
              description_teacher: ''
            Accelerometer_:
              name: Accelerometer_
              description_student: ''
              description_teacher: ''
            Functions with Parameters_:
              name: Functions with Parameters_
              description_student: ''
              description_teacher: ''
            Circuits and Physical Prototypes_:
              name: Circuits and Physical Prototypes_
              description_student: ''
              description_teacher: ''
            'Project: Prototype an Innovation_':
              name: 'Project: Prototype an Innovation_'
              description_student: ''
              description_teacher: ''
        coursee-2018:
          title: კურსი E
          description: Start coding with algorithms, loops, conditionals, and events
            and then you’ll move on functions. In the second part of this course,
            design and create a capstone project you can share with your friends and
            family.
          description_short: Quickly cover concepts in Course C & D and then go further
            with functions.
          description_audience: 'ასაკი: 8-12'
          stages:
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
              description_student: ''
              description_teacher: ''
            Sequence in Maze:
              name: Sequence in Maze
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: ფუნდამენტის აშენება
              description_student: ''
              description_teacher: ''
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: პროგრამირება მსახიობში
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            Nested Loops:
              name: ჩასმული ციკლები
              description_student: ''
              description_teacher: ''
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
              description_student: ''
              description_teacher: ''
            'Algorithms: Dice Race':
              name: 'ალგორითმები: კამათლის შეჯიბრი'
              description_student: Learn how to describe a game from the computer's
                point of view in this lesson on algorithms.
              description_teacher: In this lesson, students will relate the concept
                of algorithms back to real-life activities by playing the Dice Race
                game. The goal here is to start building the skills to translate real-world
                situations to online scenarios and vice versa.
            Introduction:
              name: შესავალი
              description_student: This fast-paced introduction will give you the
                chance to practice most of the skills that you will need to solve
                the puzzles in this course.
              description_teacher: In this progression, students will begin with an
                introduction (or review depending on the experience of your class)
                of Code.org's online workspace. Students will learn the basic functionality
                of the interface including the `Run`, `Reset`, and `Step` buttons.
                Dragging, deleting, and connecting Blockly blocks is also introduced
                in the beginning video. In the puzzles, students will practice their
                sequencing and debugging skills in Maze and Artist.
            Conditionals:
              name: პირობითი ბრძანებები
              description_student: You will get to tell the computer what to do under
                certain conditions in this fun and challenging series.
              description_teacher: This lesson introduces students to `while` loops
                and `if / else` statements. _While loops_ are loops that continue
                to repeat commands as long as a condition is true. While loops are
                used when the programmer doesn't know the exact number of times the
                commands need to be repeated, but the programmer does know what condition
                needs to be true in order for the loop to continue looping. `If /
                Else` statements offer flexibility in programming by running entire
                sections of code only if something is true, otherwise it runs something
                else.
            Private and Personal Information:
              name: კონფიდენციალური და პირადი ინფორმაცია
              description_student: The internet is fun and exciting, but it's important
                to stay safe too. This lesson teaches you the difference between information
                that is safe to share and information that is private.
              description_teacher: |-
                Developed by Common Sense Education, this lesson is about the difference between information that is safe to share online and information that is not.

                As students visit sites that request information about their identities, they learn to adopt a critical inquiry process that empowers them to protect themselves and their families from identity theft. In this lesson, students learn to think critically about the user information that some websites request or require. They learn the difference between private information and personal information, as well as how to distinguish what is safe or unsafe to share online.
            Build a Star Wars Game:
              name: ააწყვეთ ვარსკვლავური ომების თამაში
              description_student: შეიგრძენით ძალა, როდესაც შექმნით თქვენს საკუთარ
                ვარსკვლავური ომების თამაშს ამ გაკვეთილში.
              description_teacher: ამ გაკვეთილში მოსწავლეები ივარჯიშებენ მოვლენების
                გამოყენებაზე. მოვლენების საშუალებით ისინი შეძლებენ ისეთი თამაშის აწყობას,
                რომელსაც შემდგომში გაუზიარებენ სხვებს ონლაინში. R2-D2 და სხვა ვარსკვლავური
                ომების პერსონაჟებთან ერთად, მოსწავლეებს შეასწავლიან მოვლენების მთავარ
                პრინციპებს, ხოლო შემდეგ მათ მიეცემათ საშუალება შექმნან საკუთარი თამაში.
            'Functions: Songwriting':
              name: 'ფუნქციები: სიმღერების დაწერა'
              description_student: როკ ვარსკვლავებსაც კი სჭირდებათ პროგრამირების უნარები.
                ეს დონე შეგასწავლით ყველაფერს ფუნქციების შესახებ სიმღერების ტექსტების
                გამოყენებით.
              description_teacher: One of the most magnificent structures in the computer
                science world is the function. Functions (sometimes called procedures)
                are mini programs that you can use over and over inside of your bigger
                program. This lesson will help students intuitively understand why
                combining chunks of code into functions can be such a helpful practice.
            Functions in Artist:
              name: ფუნქციები მხატვარში
              description_student: Make complex drawings more easily with functions!
              description_teacher: მოსწავლეები გაეცნობიან ფუნქციების გამოყენებას Code.org-ზე.
                ფუნქციების საშუალებით, "მხატვრის" პროგრამაში შეიქმნება და შესწორდება
                არაჩვეულებრივი ნახატები. უფრო რთული ნიმუშებისთვის, მოსწავლეები შეისწავლიან
                ფუნქციების ჩადგმის პრინციპებს ( ერთი ფუნქციიდან მეორის გამოძახებას).
            Functions in Bee:
              name: ფუნქციები ფუტკარში
              description_student: Don't write too much code to gather all of the
                nectar and honey. Use functions instead!
              description_teacher: In the second round of practice with online functions,
                students will navigate complex paths, collect plenty of nectar, and
                make lots of honey.
            Functions in Harvester:
              name: Functions in Harvester
              description_student: ''
              description_teacher: ''
            Determine the Concept:
              name: Determine the Concept
              description_student: "We aren't giving away any secrets! \nThis lesson
                could use any of the skills you've learned so far."
              description_teacher: This lesson brings together concepts from the previous
                lessons and gives students a chance to think critically about how
                they would solve each problem, but without telling them which concept
                to apply. Students will review basic algorithms, debugging, `repeat`
                loops, conditionals, `while` loops, and functions.
            Build a Play Lab Game:
              name: შექმენით სათამაშო ლაბორატორიის თამაში
              description_student: Practice making games to share with your friends
                and family.
              description_teacher: This lesson features Play Lab, a platform where
                students can create their own games and have interactions between
                characters and user input. Students will work with events to create
                keyboard controls. This set of puzzles will also loosely guide students
                through game development, but with freedom to add their own ideas.
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
              description_student: Here are several games and drawings. Play with
                each of them to get ideas for projects of your own!
              description_teacher: "The next four lessons provide an opportunity for
                students to put their coding skills to use in a capstone project.
                This project will help individuals gain experience with coding and
                produce an exemplar to share with peers and loved ones. Intended to
                be a multi-lesson or multi-week experience, students will spend time
                exploring brainstorming, learning about the design process, building,
                and presenting their final work. \n\nIn the explore stage, students
                will be able to view pre-built examples of projects in both Artist
                and Play Lab for inspiration. Next, students will learn about the
                design process and how to implement it in their own projects. They
                will then be given the space to create their own project in either
                Artist or Play Lab (this is likely the longest stage of the project).
                Finally, students will be able to present their finished work to their
                peers."
            The Design Process:
              name: დიზაინის პროცესი
              description_student: ასეთი დიდი პროექტები საჭიროებენ დიდ დროს და საკმაოდ
                გრძელ დაგეგმარებას. აქ, თქვენ შეისწავლით იმ დიზაინის პროცესის შესახებ,
                რომელსაც გამოიყენებთ თქვენი ქმნილების ასაწყობად.
              description_teacher: Over the course of four lessons, students will
                be building up to programming a project of their own design using
                either Play Lab or Artist as their programming environment. In this
                portion of the project, students will learn about the design process
                and how to implement it in their own projects. The lesson guide for
                all four stages of the process can be found in the first stage of
                this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
              description_student: მოემზადეთ ბევრი კოდის დასაწერად! დროა დაიწყოთ თქვენი
                პროექტის აწყობა.
              description_teacher: Over the course of four lessons, students will
                be building up to programming a project of their own design using
                either Play Lab or Artist as their programming environment. Now the
                students will be given their own space to create their project with
                either Artist or Play Lab. This is likely to be the longest stage
                of the project. The lesson guide for all four stages of the process
                can be found in the first stage of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
              description_student: Get ready to show off! It's time to present your
                finished project to your peers.
              description_teacher: Over the course of four lessons, students will
                be building up to programming a project of their own design using
                either Play Lab or Artist as their programming environment. Finally,
                students will be able to present their finished work to their peers
                or share with their loved ones with a special link. The lesson guide
                for all four stages of the process can be found in the first stage
                of this project process [here](https://curriculum.code.org/csf/coursee/12/).
            Internet:
              name: ინტერნეტი
              description_student: Ever wondered how information travels across the
                internet? It's not magic! This lesson will teach you the basics of
                how the internet works.
              description_teacher: Even though many people use the internet daily,
                not very many know how it works. In this lesson, students will pretend
                to flow through the internet, all the while learning about connections,
                URLs, IP Addresses, and the DNS.
            Crowdsourcing:
              name: ქრაუდსორსინგი
              description_student: ეს გაკვეთილი შეგასწავლით მოხალისეების სამუშაო პროცესში
                ჩართვის შესახებ, ანუ გუნდთთან ერთად პროექტზე მუშაობის შესახებ.
              description_teacher: კომპიუტერულ მეცნიერებაში, ჩვენ ვხვდებით ძალიან
                დიდ, გამომწვევ პრობლემებს. თითქმის შეუძლებელია ერთმა ადამიანმა ხელსაწყოების
                გარეშე იპოვოს ძალიან დიდი მარტივი რიცხვი ან გამოითვალოს დნმ-ის მიმდევრობები.
                სხვა ადამიანების დახმარება რეალურს ხდის ამ დავალებების შესრულებას.
                ეს გაკვეთილი აჩვენებს მოსწავლეებს, თუ როგორი გამოსადეგარი შეიძლება
                იყოს ჯგუფური მუშაობა ისეთ სფეროში, როგორიცაა კომპიუტერული მეცნიერება.
            Conditionals with Cards:
              name: პირობები ბარათებით
        coursef-2018:
          title: კურსი F
          description: Learn to use different kinds of loops, events, functions, and
            conditionals. Investigate different problem-solving techniques and discuss
            societal impacts of computing and the internet. In the second part of
            this course, design and create a capstone project you can share with friends
            and family.
          description_short: Learn all the concepts in Computer Science Fundamentals
            and create your own art, story or game.
          description_audience: 'ასაკი: 9-13'
          stages:
            'Programming: My Robotic Friends':
              name: 'პროგრამირება: ჩემი რობოტისებრი მეგობრები'
              description_student: ''
              description_teacher: ''
            Sequence in Maze:
              name: Sequence in Maze
              description_student: ''
              description_teacher: ''
            Building a Foundation:
              name: ფუნდამენტის აშენება
              description_student: ''
              description_teacher: ''
            Debugging with Scrat:
              name: დებაგირება სკრეტთან ერთად
              description_student: ''
              description_teacher: ''
            Programming in Artist:
              name: პროგრამირება მსახიობში
              description_student: ''
              description_teacher: ''
            'Loops: My Loopy Robotic Friends':
              name: 'ციკლები: ჩემი ციკლური რობოტისებრი მეგობრები'
              description_student: ''
              description_teacher: ''
            Loops in Artist:
              name: ციკლები მხატვარში
              description_student: ''
              description_teacher: ''
            Nested Loops in Bee/Zombie:
              name: ჩადგმული ციკლები ფუტკარში/ზომბიში
              description_student: ''
              description_teacher: ''
            Nested Loops with Frozen:
              name: Nested Loops with Frozen
              description_student: ''
              description_teacher: ''
            'Algorithms: Tangrams':
              name: 'ალგორითმები: ტანგრამები'
              description_student: აქ თქვენ შეისწავლით ალგორითმებს თავსატეხების საშუალებით.
                ამ თავსატეხებს ტანგრამები ჰქვია!
              description_teacher: This lesson shows us something important about
                algorithms. As long as you keep an algorithm simple, there are lots
                of ways to use it. However, if you want to make sure everyone produces
                the same outcome, then your algorithm needs more detail. Students
                will learn the difference between a detailed and general algorithm
                while playing with tangrams.
            Introduction:
              name: შესავალი
              description_student: This lesson will give you a brief introduction
                to some of the amazing things you will learn in this course!
              description_teacher: 'In this lesson, students will be introduced to
                sequences, loops, and nested loops to prepare them for more complicated
                concepts in the later part of the course. This "ramp up" lesson equalizes
                the playing field between the experts and the beginners in your class. '
            The Power of Words:
              name: სიტყვების ძალა
              description_student: ძალადობა არასდროს არის კარგი. ეს გაკვეთილი გასწავლით
                თუ რისი გაკეთება შეიძლება და რისი არა ონლაინში ყოფნისას.
              description_teacher: "Students consider that while they are enjoying
                their favorite websites they may encounter messages from other kids
                that can make them feel angry, hurt, sad, or fearful. They explore
                ways to handle cyberbullying and how to respond in the face of upsetting
                language online.\n\nStudents discuss all the ways they use technology
                for communication and explore the similarities and differences between
                in-person and online communication. Students then brainstorm ways
                to respond to cyberbullying. "
            Ice Age Play Lab:
              name: გამყინვარების პერიოდი - თამაშების ლაბორატორია
              description_student: გაიფიქრეთ თქვენს საყვარელ ვიდეო თამაშზე. არასდროს
                გიფიქრიათ თუ როგორაა ის გაკეთებული? ამ თავსატეხებში, თქვენ შექმნით
                თქვენს საკუთარ ვიდეო თამაშს თქვენს მეგობრებთან, გამყინვარების პერიოდის
                გმირებთან ერთად!
              description_teacher: In this lesson, students are guided through a story
                featuring characters from Ice Age. Students will work with events
                and loops to make characters move on the screen, and will get the
                chance to create their own game or story after the guided levels.
            Conditionals in Minecraft:
              name: პირობითი წინადადებები Minecraft-ში
              description_student: თავი აარიდეთ ლავას! აქ თქვენ შეისწავლით ყველაფერს
                პირობითი წინადადებების შესახებ მაინკრაფტის სამყაროში.
              description_teacher: This lesson gives students a chance to learn and
                practice conditionals. It features characters and settings from Minecraft,
                and students will complete tasks such as mining and building structures
                using their programs.
            Envelope Variables:
              name: ცვლადები კონვერტებში
              description_student: 'Envelopes and variables have something in common:
                both can hold valuable things. Here you will learn what variables
                are and the awesome things they can do.'
              description_teacher: Variables are used as placeholders for values such
                as numbers or words. Variables allow for a lot of freedom in programming.
                Instead of having to type out a phrase many times or remember an obscure
                number, computer scientists can use variables to reference them. This
                lesson helps to explain what variables are and how we can use them
                in many different ways. The idea of variables isn't an easy concept
                to grasp, so we recommend allowing plenty of time for discussion at
                the end of the lesson.
            Variables in Artist:
              name: ცვლადები მხატვარში
              description_student: Don't forget to bring creativity to class! In these
                puzzles you will be making fantastic drawings using variables.
              description_teacher: In this lesson, students will explore the creation
                of repetitive designs using variables in the Artist environment. Students
                will learn how variables can be used to make code easier to write
                and easier to read. After guided puzzles, students will end in a freeplay
                level to show what they have learned and create their own designs.
            Variables in Play Lab:
              name: ცვლადები სათამაშო ლაბორატორიაში
              description_student: Soon you will learn about making characters interact
                in a game using variables!
              description_teacher: Students will get further practice with variables
                in this lesson by creating scenes in Play Lab. Students will work
                with user input to set the values of their variables, then get space
                to create their own mini-project with variables.
            For Loop Fun:
              name: ხალისი "მიზნისთვის" ციკლით
              description_student: თქვენ ძალიან იხალისებთ, როდესაც შეისწავლით `for`
                ციკლებს!
              description_teacher: 'We know that loops allow us to do things over
                and over again, but now we’re going to learn how to use loops that
                have extra structures built right in. These new structures will allow
                students to create code that is more powerful and dynamic. '
            For Loops in Bee:
              name: For ციკლები ფუტკარში
              description_student: ბზზ ბზზ. ამ თავსატეხებში თქვენ უნდა მიიყვანოთ ფუტკარი
                ნექტართან და თაფლთან `for` ციკლების გამოყენებით!
              description_teacher: Featuring Bee, this lesson focuses on for loops
                and using an incrementing variable to solve more complicated puzzles.
                Students will begin by reviewing loops from previous lessons, then
                walked through using for loops to more effectively solve complicated
                problems.
            For Loops in Artist:
              name: For ციკლები მხატვარში
              description_student: Get ready to make your next masterpiece. Here you
                will be using `for` loops to make some jaw-dropping pictures.
              description_teacher: In this lesson, students continue to practice for
                loops, this time with Artist. Students will complete puzzles combining
                the ideas of variables, loops, and for loops to create complex designs.
                At the end, they will have a chance to create their own art in a freeplay
                level.
            Songwriting with Parameters:
              name: სიმღერის დაწერა პარამეტრების გამოყენებით
              description_student: You just might release the next big hit single!
                In this lesson, you will be learning what parameters are and how they
                make some fantastic songs!
              description_teacher: One of the most magnificent structures in the computer
                science world is the function. Functions (sometimes called procedures)
                are mini programs that you can use over and over inside of your bigger
                program. This lesson will help students intuitively understand why
                combining chunks of code into functions is such a helpful practice,
                and how they can use those structures even when chunks of code are
                slightly different.
            Functions in Bee:
              name: ფუნქციები ფუტკარში
              description_student: ''
              description_teacher: ''
            Functions with Parameters in Artist:
              name: ფუნქციები პარამეტრებით მხატვარში
              description_student: Get your programming fingers ready. In these puzzles
                you will make impressive drawings in Artist using functions with parameters.
              description_teacher: In this lesson, students continue working with
                functions with and without parameters. Students will get the chance
                to create their own drawings with and without parameters, before modifying
                functions in a freeplay level.
            Functions with Parameters in Bee:
              name: ფუნქციები პარამეტრებით ფუტკარში
              description_student: You've had a little practice using functions with
                parameters. This lesson will continue your practice with Bee!
              description_teacher: This lesson features the bee environment, and continues
                along the concept of functions with parameters from the previous Artist
                stage. Students will practice writing and using functions to follow
                complex paths and collect patterns of nectar and honey.
            Explore Project Ideas:
              name: გამოიკვლიეთ პროექტების იდეები
              description_student: Time to get some inspiration! These puzzles will
                show you a handful of pre-built games and illustrations to help develop
                your plan for your BIG project.
              description_teacher: "The next five lessons provide an opportunity for
                students to put their coding skills to use in a capstone project.
                This project will help individuals gain experience with coding and
                produce an exemplar to share with peers and loved ones. This is intended
                to be a multi-lesson or multi-week project where students spend time
                brainstorming, learning about the design process, building, and then
                presenting their final work. \n\nIn the explore stage, students will
                be able to view examples of projects in both Artist and Play Lab for
                inspiration. Next, students will learn about the design process and
                how to implement it in their own projects. They will then be given
                the space to create their own project in either Artist or Play Lab
                (this is most likely the longest stage of the project). Students will
                then revise their projects, after testing and extra thought. Finally,
                students will be able to present their finished work to their peers."
            The Design Process:
              name: დიზაინის პროცესი
              description_student: ასეთი დიდი პროექტები საჭიროებენ დიდ დროს და საკმაოდ
                გრძელ დაგეგმარებას. აქ, თქვენ შეისწავლით იმ დიზაინის პროცესის შესახებ,
                რომელსაც გამოიყენებთ თქვენი ქმნილების ასაწყობად.
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. In this portion
                of the project, students will learn about the design process and how
                to implement it in their own projects. The lesson guide overviewing
                all five stages of the process can be found in the beginning of the
                project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Build Your Project:
              name: ააწყვეთ თქვენი პროექტი
              description_student: საბოლოოდ თქვენ შეგიძლიათ დაიწყოთ თქვენი პროექტის
                აწყობა!
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. Now the students
                will be given their own space to create their project with either
                Artist or Play Lab. This will be the longest portion of the project.
                The lesson guide overviewing all five stages of the process can be
                found in the beginning of the project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Revise Your Project:
              name: გადახედეთ თქვენს პროექტს
              description_student: Rome wasn't built in a day and your project shouldn't
                be, either. Take time to edit and revise your project to make it the
                best it can be.
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. Now that the
                projects are built, students are given the opportunity to get feedback
                from peers and revise their projects. The lesson guide overviewing
                all five stages of the process can be found in the beginning of the
                project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Present Your Project:
              name: წარმოადგინეთ თქვენი პროექტი
              description_student: Time to show your work! Here you will be presenting
                your awesome project to your peers.
              description_teacher: Over the course of five lessons, students will
                be building up to building a project of their own design using either
                Play Lab or Artist as their programming environment. Finally, students
                will be able to present their finished work to their peers or share
                with their loved ones with a special link. The lesson guide overviewing
                all five stages of the process can be found in the beginning of the
                project process, [here](https://curriculum.code.org/csf/coursef/15/).
            Conditionals with Cards:
              name: პირობები ბარათებით
            Conditionals:
              name: პირობითი ბრძანებები
        csp1-2018:
          title: CSP Unit 1 - The Internet
          description: This unit explores the technical challenges and questions that
            arise from the need to represent digital information in computers and
            transfer it between people and computational devices. The unit then explores
            the structure and design of the internet and the implications of those
            design decisions.
          description_short: Explore the challenges about representing information
            as bits and how to get those bits from one place to another.
          description_audience: ''
          stages:
            CS Principles Pre-survey:
              name: კომპიუტერული მეცნიერების საფუძვლების წინარეგამოკითხვა
              description_student: ''
              description_teacher: ''
            Personal Innovations:
              name: პირადი ინოვაციები
              description_student: ''
              description_teacher: ''
            Sending Binary Messages:
              name: ორობითი წერილების გაგზავნა
              description_student: ''
              description_teacher: ''
            Sending Binary Messages with the Internet Simulator:
              name: Sending Binary Messages with the Internet Simulator
              description_student: ''
              description_teacher: ''
            Number Systems:
              name: Number Systems
              description_student: ''
              description_teacher: ''
            Binary Numbers:
              name: ორობითი რიცხვები
              description_student: ''
              description_teacher: ''
            Sending Numbers:
              name: რიცხვების გაგზავნა
              description_student: ''
              description_teacher: ''
            Encoding and Sending Formatted Text:
              name: ფორმატირებული ტექსტის კოდირება და გაგზავნა
              description_student: ''
              description_teacher: ''
            Unit 1 Chapter 1 Assessment:
              name: Unit 1 Chapter 1 Assessment
              description_student: ''
              description_teacher: ''
            The Internet:
              name: ინტერნეტი
              description_student: ''
              description_teacher: ''
            The Need for Addressing:
              name: The Need for Addressing
              description_student: ''
              description_teacher: ''
            Routers and Redundancy:
              name: Routers and Redundancy
              description_student: ''
              description_teacher: ''
            Packets and Making a Reliable Internet:
              name: Packets and Making a Reliable Internet
              description_student: ''
              description_teacher: ''
            The Need for DNS:
              name: The Need for DNS
              description_student: ''
              description_teacher: ''
            HTTP and Abstraction:
              name: HTTP და აბსტრაქცია
              description_student: ''
              description_teacher: ''
            Practice PT - The Internet and Society:
              name: Practice PT - The Internet and Society
              description_student: ''
              description_teacher: ''
            Unit 1 Chapter 2 Assessment:
              name: Unit 1 Chapter 2 Assessment
              description_student: ''
              description_teacher: ''
