{
  "uk-UA": {
    "data": {
      "long_instructions": {
        "2-3 Artist 1 new": "Привіт, я - художник. Ви можете написати код, що змусить мене намалювати будь що. Використовуй кілька блоків, щоб малювати за сірими лініями на малюнку. (Кожна лінія має довжину 100 пікселів)",
        "2-3 Artist 11": "Дай знаку \"стоп\" форму, створивши восьмикутник з стороною в 100 пікселів. ",
        "2-3 Artist 12": "Створи коло, щоб закінчити око. Якщо художник повертає в кожному циклі на 1 градус, то скільки разів тобі потрібно повторити код, щоб намалювати коло? ",
        "2-3 Artist 2 new": "Цей будинок має напівзавершену стіну. Кожна стіна має довжину 100 пікселів, проте напівзавершена стіна - лише 50. Закінчіть стіну.",
        "2-3 Artist 3.4": "Блок стрибання переміщує художника без малювання. Намалюй пунктирну лінію, користуючись блоками \"стрибнути вперед\" та \"рухатись вперед\". Кожна лінія має довжину 50 пікселів.",
        "2-3 Artist 3new": "Червоний капелюх має висоту 100 пікселів. Заверши малювання чорного капелюха, який на 70 пікселів коротший.\n_(Замітка: Ширина кожного капелюха - 50 пікселів.)_",
        "2-3 Artist 4": "Допоможи мені завершити домівку для цього кота.",
        "2-3 Artist 6": "Цьому будинку потрібен дах! Намалюй трикутник.\nПідказка: всі три сторони мають однакову довжину.\n\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\" width=\"300\"/>",
        "2-3 Artist 7": "Заверши малювання решти вікон школи, щоб кожен з класу міг бачити вулицю. Довжина кожної сторони квадратного вікна дорівнює 25 пікселів. ",
        "2-3 Artist 8": "Час будувати комору!\n\nЗробіть кімнати для кожної тварини, розділивши сарай на 2 однакові за розміром квадрати.\n\nПідказка: прямокутник має ширину 200 пікселів і висоту 100 пікселів.\n\nІснує багато різних способів вирішити це завдання.",
        "2-3 Artist 9 NEW": "Заверши паперового змія",
        "2-3 Artist Assessment 1": "\\*\\*Оцінювання: Заверши малювання останнього зуба. Він 25 пікселів у ширину та 25 пікселів у висоту.",
        "2-3 Artist Free Play": "Гра без правил! Малюй усе що завгодно.",
        "2-3 Artist Functions 1": "\"Моя - зомбі художник. Моя подобається малювати!\"\n\nДопоможи зомбі намалювати квадратні окуляри. \n\nМісток між скельцями на 25 пікселів коротший, ніж довжина квадрата, що становить 100 пікселів.",
        "2-3 Artist Functions 10": "**Вільна гра:** Ось дві функції: одна для малювання великої шестірні, друга - для маленької. Використай їх, щоб намалювати середину механізму!",
        "2-3 Artist Functions 11": "Ми перейменували функцію `намалювати квадрат` у `намалювати шестикутник`, але вона все ще малює квадрати! \n\nМожеш змінити функцію `намалювати шестикутник`?\n\nНамалюй шестикутник зі сторонами по 50 пікселів за допомогою функції!",
        "2-3 Artist Functions 11.5": "Ось така ж функція `намалювати шестикутник`. \n\nЩо станеться, якщо зациклити основну програму 6 разів, повертаючи на 60 градусів кожен раз?",
        "2-3 Artist Functions 12": "Функції дійсно чудові для багаторазового малювання складних речей. \n\nЧи можете ви скористатися функцією `намалювати квітку`, щоб заповнити решту газону? \nУсі рослини розташовані на відстані 100 пікселів один від одного.",
        "2-3 Artist Functions 2": "Функції дозволяють визначити нові блоки! \n\nМи перенесли блоки малювання квадрату в функцію під назвою `намалювати квадрат`. Можеш використати функцію `намалювати квадрат`, щоб створити окуляри? \n\nКвадрати розміщені на відстані 75 пікселів один від одного.",
        "2-3 Artist Functions 3": "Відредагуй функцію, щоб намалювати квадрат зі стороною 115, щоб намалювати великі окуляри. \n\nКвадрати розміщені на відстані 45 пікселів один від одного.",
        "2-3 Artist Functions 4": "Використовуй блок `повторити`, щоб намалювати ці 3 квадрати.",
        "2-3 Artist Functions 9": "**Вільна гра:** Ось функція Сніжинка. Поекспериментуй з нею, щоб створити зимову сцену! Це рівень вільної гри, тому завдання тут немає. Розважайся!",
        "2-3 Artist Loops New 1": "Давай накреслимо голову цьому роботу! Можеш зробити квадрат зі сторонами 100 пікселів?\n\n<br/>",
        "2-3 Artist Loops New 10": "Тепер давай з'єднаємо декілька V разом за допомогою циклу.",
        "2-3 Artist Loops New 11": "Час зробити щось запаморочливе!\n\nПеребудуй код з минулого завдання, але в цей раз додай поворот вліво на 30 градусів всередині циклу. Тепер повтори його 24 рази замість восьми.",
        "2-3 Artist Loops New 12": "Намалюй ромб зі сторонами 100 пікселів. ",
        "2-3 Artist Loops New 13": "В нас є деякий код (сірого кольору), який малює один алмаз.\n\nПовторіть сірий код, щоб створити веселий візерунок!",
        "2-3 Artist Loops New 14": "Пограйтеся з кодом малювання алмаза і подивіться, які ще візерунки ви можете зробити.   \n\nСпробуйте змінити кут повороту та кількість повторів.",
        "2-3 Artist Loops New 15": "А тепер намалюйте все, що забажаєте!\n<br/><br/>",
        "2-3 Artist Loops New 2": "Це те саме завдання, яке ми щойно вирішили, але цього разу нам можна скористатися лише одним блоком «рухатися вперед» та одним блоком «поворот». \n\nЧи можете ви використати блок \"повторення\" для рішення цього завдання?",
        "2-3 Artist Loops New 9": "Просто накресли V (де обидві сторони довжиною 50 пікселів), щоб завершити стрілу.",
        "2-3 Artist Nested Loops 10": "Виконай цей код 12 разів, щоб завершити візерунок.",
        "2-3 Artist Nested Loops 12": "Повтори виконання цього коду 12 разів, щоб завершити завитки.",
        "2-3 Artist Nested Loops Free Play": "Вільна гра, намалюй щось цікаве за допомогою вкладених циклів.",
        "2-3 Bee Debugging 1": "Ці блоки не дають мені спокою!\n\nВиправте помилку(ки), щоб зібрати весь нектар.",
        "2-3 Bee Debugging 2": "Можете знайти тут проблему?\n\nВиправте помилку(ки), щоб зібрати весь нектар.",
        "2-3 Bee Debugging 3": "Ой, о це клопіт!\n\nВиправте помилку(ки), щоб зібрати весь нектар.",
        "2-3 Bee Functions 1": "Функції - це блоки коду, які виконують завдання. Використовуй функцію \"взяти 2 нектари\", щоб збирати нектар з кожної квітки.",
        "2-3 Bee Functions 10": "Фіолетові квіти змінюють кількість нектару між 1 або 0 щоразу, коли ви запускаєте головоломку. \n\nСтворіть функцію, яка збирає нектар лише з фіолетових квітів, які містять нектар.",
        "2-3 Bee Functions 2": "Функції - це блоки коду, які виконують завдання. \n\nВикористовуй функцію `взяти 5`, щоб зібрати 5 нектарів за раз. ",
        "2-3 Bee Functions 4": "Функція `рухатись та збирати нектар` змушує Бджілку повертатися, збирати нектар, а потім повертає її на стартове місце. \n\nВикористай функцію, щоб зібрати весь нектар.",
        "2-3 Bee Functions Assessment 1": "**Оцінювання:** Використай дану функцію, щоб зібрати нектар з усіх квітів.",
        "2-3 Bee Functions Assessment 2": "**Оцінювання:** Створіть функцію, щоб повернути, рухатися вперед і зробити 3 меду, потім повернути бджілку туди, звідки вона починала і повернути назад.",
        "2-3 Bee Loops 1": "Ці квіти виглядають смачно!\n\nЗберіть нектар з кожної квітки, використовуючи якомога менше блоків.",
        "2-3 Bee Loops 13": "**Оцінювання:** Зберіть весь нектар, використовуючи якомога менше блоків.",
        "2-3 Bee Loops 3A": "Можеш використати цикл для того, щоб зібрати весь нектар?",
        "2-3 Bee Loops 3B": "А тепер скористайтеся блоком \"повторення\", щоб зібрати весь нектар та зробити весь мед.",
        "2-3 Bee Loops 4": "Допоможіть Бджолі зібрати весь нектар і зробити весь мед з якомога меншою кількістю блоків.",
        "2-3 Bee Loops 4A": "Скільки разів цикли можуть допомогти вам у цьому завданні?\n\nЦикли - ваші друзі! Скористайтеся декількома з них, щоб виконати це завдання з якомога меншою кількістю блоків.",
        "2-3 Bee Loops 5": "Чи можете ви зібрати весь нектар, використовуючи якомога менше блоків?",
        "2-3 Bee Loops 7": "Яке прекрасне поле квітів!   \n\nДопоможіть бджолі відвідати кожну з них. \n\nЧи можете ви знайти спосіб зробити це менш ніж з 7 блоками?",
        "2-3 Bee Loops 8": "Ці фіолетові квітки мають невідому кількість нектару. \n\nВикористай цикл `поки нектар`, щоб зібрати весь нектар. \n\nЦей цикл триватиме доти, доки умова є істинною, в цьому випадку `нектар > 0`.",
        "2-3 Bee Loops Assessment 1": "**Оцінювання:** Використай цикл `поки`, щоб зібрати весь нектар з квітки.",
        "2-3 Maze 1": "Можеш допомогти мені спіймати лиху свиню?\nСклади кілька блоків \"рухатись вперед\" після блоку \"Якщо запустити\" і натисни \"Запустити\". ",
        "2-3 Maze 12": "Раптом з’являється магічний блок! За допомогою блоку \"Повторити\" ви можете циклічно повторювати код знову і знову.\n\nЧи можете ви дістатись до свині, створивши цикл, який використовує лише один блок \"Рух вперед\" всередині блоку \"Повтор\"?",
        "2-3 Maze 13": "Доведи мене до свині! Цього разу ти можеш використати блок \"Рух вперед\" лише один раз",
        "2-3 Maze 15": "В цьому завданні два цикли \"Повтор\" допоможуть тобі дістатися до свині за допомогую найменьшої кількості блоків!",
        "2-3 Maze Loops 18": "Доведи мене до соняшника, використовуючи найменьшу кількість блоків! \nСпробуй використувати один блок \"Повтор\" всередині іншого, щоб зменьшити кількість коду.",
        "2-3 Maze Loops 19": "Давай зробимо це ще краще! \n\nВикористай найменьшу кількість циклів, щоб довести мене до соняшника.",
        "2-3 Maze Loops Assessment 1": "**Оцінювання:** Доведи мене до соняшника, використовуючи лише п'ять блоків! ",
        "4-5 Artist 1": "Допоможи мені закінчити рисувати моє вікно. (Кожний рядок має довжину в 300 пікселів) ",
        "4-5 Artist 11": "Доповніть зелені лінії. \n\nЛінії мають довжину 300 пікселів та відстань 15 пікселів один від одного.",
        "4-5 Artist 2": "Занеси цей код у цикл блоку \"повторити\", щоб завершити малювання квадрата.",
        "4-5 Artist 3": "Цей прямокутний квітник має периметр 600. \nДовжина сторони - 200. \n\nНамалюй прямокутник, використавши якомога менше блоків.",
        "4-5 Artist 5": "Як ми можемо замінити \"???\", щоб зомбі завершив малювання з використанням поданого циклу?",
        "4-5 Artist 6": "Цей рівносторонній трикутник має кути 60, 60 та 60 градусів. Кожна сторона має 200 пікселів. Заверши ескіз.",
        "4-5 Artist 7": "Цей прямокутний трикутник має кути 30, 60 і 90 градусів. Довжина похиленої сторони (довжина гіпотенузи) становить 200 пікселів. \n\nЗавершіть малюнок.",
        "4-5 Artist 8": "Лінія посередині футбольного поля перпендикулярна до бічних ліній. Це поле має периметр 800 пікселів та 240 пікселів в довжину. Яка його ширина? \nНамалюй межі та середню лінію.",
        "4-5 Artist 9": "Намалюйте праву половину цього зображення, щоб дизайн був симетричним. \nТрикутники рівносторонні й мають сторони довжиною 50 пікселів.",
        "4-5 Artist Assessment 1": "**Оцінювання:** Використай цикл, щоб намалювати рівносторонній трикутник. Кожна сторона - 300 пікселів.",
        "4-5 Artist Free Draw 1": "Вільне малювання! Намалюй будь-що, на що маєш натхнення творити.",
        "4-5 Artist Patterns 1": "Намалюй цей квадрат, використавши цикл.\n\nКожна сторона має довжину 20 пікселів.",
        "4-5 Artist Patterns 10": "Цей код малює два ряди шестикутників - зацикли все для виконання 4 рази, щоб намалювати увесь стільник. \nПотрібно буде стрибати назад на 120 пікселів у зовнішньому циклі, щоб Художник не виходив за межі екрану.",
        "4-5 Artist Patterns 11": "Скільки разів потрібно виконати цикл, щоб намалювати половину кола?",
        "4-5 Artist Patterns 12": "Якщо створити ще один цикл і повернути ліворуч, а не праворуч, що відбувається? \n\nЗможеш повторити це, щоб намалювати хвилю?",
        "4-5 Artist Patterns 13": "Тепер зациклимо все на виконання 4 рази, щоб створити рамочку. Зважай на кути - не можна просто повертати на 90 градусів! \nЯкщо поворот на 3 градуси 60 разів утворює пів-коло, то які блоки коду створять додаткові чверть кола для кутика?",
        "4-5 Artist Patterns 2": "Якщо розмістити цикл квадрата всередині іншого циклу, це називається вкладеним циклом. \n\nЩо потрібно додати до зовнішнього циклу, щоб намалювати 15 квадратів у ряд один за одним?",
        "4-5 Artist Patterns 3": "А тепер на рівень далі! Ми розмістили цілий блок коду всередині циклу, але потрібно повертати Художника на місце, щоб малювати наступний рядок. Які блоки можна додати в кінець останнього (зовнішнього) циклу, щоб намалювати всю сітку?",
        "4-5 Artist Patterns 4": "Цей ромб має сторони по 50 пікселів і кути 120 та 60 градусів. \n\nНамалюй його за допомогою циклу.",
        "4-5 Artist Patterns 5": "Повторимо цей код для того, щоб намалювати ряд з 6 ромбів. \nЗауваж, що ми змінили код ромба, щоб повторювати 3 рази, а не 2 - як думаєш, чому?",
        "4-5 Artist Patterns 6": "Скільки разів потрібно повторити цей блок, щоб намалювати повну сітку ромбів?",
        "4-5 Artist Patterns 7": "Змінимо код останнього завдання, щоб створити цей складніший узор. Зауваж, як перекриваються ромби і спробуй змінити перший блок \"перескочити назад\" зі 100 на 50 (вполовину) - а тепер, на скільки повинен Художник перестрибувати вдруге в \"перескочити назад\"?",
        "4-5 Artist Patterns 8": "Використай цикл, щоб намалювати цей шестикутник зі сторонами 40 пікселів і кутами 60 градусів.",
        "4-5 Artist Patterns 9": "А тепер повтори цей код 3 рази, щоб намалювати весь ряд. \n\nКожен шестикутник має ширину 60 пікселів від найлівішої до найправішої точки.",
        "4-5 Artist Patterns 9.5": "Розмісти у циклі цей код, щоб намалювати два ряди шестикутників. \n\nЗауваж, що другий ряд зміщено вправо.",
        "4-5 Artist Patterns Free Play": "Вільна гра - спробуй створити власний візерунок!",
        "4-5 Bee Conditionals 1": "Ця хмарка блокує мені огляд!\\\nПеревірте чи там є квітка під хмарою та збирайте нектар, тільки якщо там квітка.\\\nБудьте обережні, все може змінитись!",
        "4-5 Bee Conditionals 2": "Більше хмар!\\\\\n\nБджола хоче збирати лише нектар. Спершу перевіряй чи є під хмаркою квітка, щоб збирати нектар тільки з квітів.\\\\\n\nПам'ятай: Не всі об'єкти під хмарками - квіти!",
        "4-5 Bee Conditionals 4": "Часом ця хмара вкриває квітку, а іноді — соти!\\\\\n\nВикористовуйте блок якщо/інакше, щоб збирати нектар якщо це квітка.\\\nІнакше робіть мед (бо це будуть соти)",
        "4-5 Bee Conditionals 5": "Під хмаринкою може бути квітка або соти. \n\nСкористайся блоком якщо/інакше, щоб зібрати нектар, якщо там квітка. \nАбо робити мед у протилежному випадку (бо тоді там соти).",
        "4-5 Bee Conditionals 6": "Я не впевнена, скільки нектару в цій квітці, але я знаю, що в ній є 1, 2 або 3 нектару. \n\nОб’єднайте умовні блоки (`якщо` та/або `якщо/інакше`), щоб отримати стільки нектару, скільки має квітка. \n\nПам’ятайте, що кількість нектару може змінюватися щоразу, коли ви запускаєте головоломку!",
        "4-5 Bee Conditionals 7": "Ці квіти можуть мати 3, 2 або 1 нектар. \n\nВиконайте функцію 'перевірити фіолетову квітку' та використайте її, щоб зібрати весь нектар з квітів.",
        "4-5 Bee Conditionals 8": "Напишіть функцію для `перевірити квітку зробити мед`. \n\nВаша функція повинна перевірити, чи є у фіолетовій квітці 3, 2 або 1 нектар, і отримати весь нектар. \nПотім рухайтеся вперед і робіть мед.",
        "4-5 Bee Conditionals Assessment 1": "**Оцінювання:** Ця хмара або ховає квітку з одним нектаром, або соти, які потребують одного меду. \n\nЗавершіть функцію `отримати нектар або зробити мед`, а потім викличте її, щоб зібрати нектар або мед.",
        "4-5 Bee Debugging 1": "Ці блоки не дають мені спокою. \n\nМожеш їх виправити?",
        "4-5 Bee Debugging 6": "Фіолетова квітка має невідому кількість нектару. \n\nВиправ блоки, щоб зібрати весь нектар з квітів.",
        "4-5 Bee Debugging Assessment 1": "**Оцінювання:** Виправ код.",
        "4-5 Bee Nested Loops 2": "Збери весь нектар з усіх квітів. \n\nВикористовуй вкладені цикли. ",
        "4-5 Bee Nested Loops 4": "Збери весь нектар з усіх квітів та зроби мед в усіх сотах. \n\nВикористовуй вкладені цикли. ",
        "4-5 Bee Nested Loops Assessment 1": "**Оцінювання:** Збери весь нектар і зроби весь мед, використавши цикли.",
        "4-5 Maze 7": "Приведи зомбі до соняшника! Чи зможеш виконати завдання менше, ніж за 11 блоків?",
        "4-5 Maze 9": "В нас з'явився блок \"повторювати доки...\" Він повторюватиме команди, доки зомбі не дійде до соняшника. Використай новий блок \"повторювати доки...\", щоб виконати загадку за якнайменшу кількість блоків.",
        "4-5 Maze Assessment 1": "Get to the sunflower using as few blocks as possible.",
        "4-5 Maze Conditionals 1": "Використовуй блок повторення, щоб провести зомбі до соняшника.",
        "4-5 Maze Conditionals 10": "Можеш додати ще лиш 3 блоки, щоб допомогти зомбі пройти складніший лабіринт? \n\nЯкщо все зробиш правильно, він зможе проходити довільний кривий шлях будь-якої довжини!",
        "4-5 Maze Conditionals 2": "Використовуй блок повторення, щоб провести зомбі до соняшника.",
        "4-5 Maze Conditionals 3": "Скористайся блоком \"якщо\", щоб допомогти мені вирішити, коли повертати. ",
        "4-5 Maze Conditionals 4": "Гаразд, спробуй розв'язати це завдання, схоже на попереднє, але потрібно подумати, як використати блоки \"якщо\" і \"повторити доки\" разом.",
        "4-5 Maze Conditionals 5": "Мені хочеться соняшника! \n\nВикористовуй блок \"якщо\", щоб скерувати мене туди найменшою кількістю блоків.",
        "4-5 Maze Conditionals 6": "Їсти соняшник! \n\nВикористовуй блок \"якщо\", щоб скерувати зомбі до соняшника найменшою кількістю блоків.",
        "4-5 Maze Conditionals 7": "Розв'язок цього завдання не дуже відрізняється, але стережись пожирачів!",
        "4-5 Maze Conditionals 8": "Блок \"якщо-інакше\" перевіряє умову, і виконує одну АБО іншу дію. \n\nЩоб скерувати мене до соняшника, використай цей новий блок.",
        "4-5 Maze Conditionals 9": "Ще трохи практики використання блоку \"якщо-інакше\". \n\nЗможеш зробити усе правильно з першої спроби?",
        "4-5 Maze Conditionals Assessment 1": "**Оцінювання:** Використай блоки \"повторити до\" і \"якщо/інакше\", щоб допомогти мені дістатись до соняшника за якомога меншу кількість блоків.",
        "4-5 Nested Loops 1": "Завершуй код, щоб намалювати ці трикутники. Перший вже намальовано. Підказка: 3 трикутники за 360 градусів обертання.",
        "4-5 Nested Loops 11": "Можна намалювати ці 10 квадратів на тротуарі, за допомогою вкладеного циклу? Кожен квадрат має розмір у 30 пікселів.",
        "4-5 Nested Loops 12": "Можеш побудувати ці 36 трикутники за допомогою вкладеного циклу?",
        "4-5 Nested Loops 2": "Тепер розмісти цей цикл всередині іншого циклу, щоб намалювати 10 трикутників.\\\nЦе називається вкладеним циклом. ",
        "4-5 Nested Loops 3": "Намалюй сонце, розміщуючи початковий код всередині іншого циклу. \nДля того, щоб цей крутий дизайн розміщувався по колу, потрібно перескакувати щоразу перед тим, як повертати між трикутниками.",
        "4-5 Nested Loops 5": "Зацикли поданий код, щоб створити вітряк.",
        "4-5 Nested Loops 6": "Можеш намалювати шестикутник розмістивши в циклі код малювання трикутника?",
        "4-5 Nested Loops 7": "Виконай цю конструкцію 10 разів. На скільки потрібно щоразу повертати у циклі? ",
        "4-5 Nested Loops 8": "Повторюй цей дизайн 6 разів. \nНа скільки потрібно щоразу повертати у циклі? ",
        "4-5 Nested Loops 9": "Намалюй зуби в роті алігатора!",
        "4-5 Nested Loops Assessment 1": "**Оцінювання:** побудуй цей дизайн за допомогою вкладеного циклу.",
        "4-5 While Loops 1": "Перемісти мене до ями й заповни її  двома відрами землі, використовуючи блок `заповнити`.",
        "4-5 While Loops 2": "Перемісти мене на купу землі та видали її 5 відрами, скориставшись блоком `видалити 1`.",
        "4-5 While Loops 3": "Використовуйте якомога менше блоків, щоб завершити цю головоломку! \n\nПеремістіть мене до купи й видаліть всю землю, потім перемістіть до ямки та заповніть її повністю.",
        "4-5 While Loops 4": "Ого, подивіться на це!\n\nЯ не знаю, скільки лопат землі потрібно на цю яму.\\\\ \n\nЧи можете ви написати програму, яка продовжує використовувати блок `заповнити`, поки земля не стане рівною?",
        "AppLab Intro 7 - Change Screen Color": "<div style=\"float:right\">\r\n\\t<img\nsrc=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54\nAM.png\" style=\"height:150px\"> \r\n</div>\r\n\r\n**Мета:** Зробити екран зеленим. \r\n\r\n**Як:** Перетягнути блок `setProperty()`.Використати випадне меню\nдля встановлення властивості `\"background-color\"` у значення`\"green\"`. Тоді клацнути \"Запустити\".\r\n\r\n**Застрягли?\nКлацніть тут:** ![expandable](https://images.code.org/3b5e70522b02867a1df1d5b5e481785e-image-1511279858395.gif)",
        "AppLab Intro 7 - Change Text 2": "<div style=\"float:right\">\r\n<img\nsrc=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29\nPM.png\" style=\"height:200px;\">\r\n</div>\r\n\r\n**Мета:** зробити текст більшим та синім.\r\n\r\n**Як:**  Потрібно два рядки коду. Надати елементу`\"label1\"`\nвластивість `\"font-size\"` значення`80` а властивість`\"text-color\"` значення`\"blue\"`.\r\n\r\n**Застрягли?\nКлацніть тут:** ![expandable](https://images.code.org/2d5d46a03082af3b01847aad6602e2ea-image-1511280140482.gif)",
        "AppLab Intro 7 - Full Text": "<div style=\"float:right\">\r\n<img\nsrc=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19\nAM.png\" style=\"height:200px\">\r\n</div>\r\n\r\n**Мета:** зробити кнопки\n`\"red\"` та`\"blue\"`. Тоді змінити текст у великому оранжевому написі.\r\n\r\n**Як:**\n\r\n* Якщо затримати мишку над елементом, можна дізнатись його `\"id\"`.\r\n* Встановити властивість `\"background-color\"` кнопок у значення `\"red\"` та `\"blue\"`.\r\n*\nВстановити властивість `\"text\"` напису на що завгодно, наприклад `\"Welcome\nto my app!\"`.\r\n\r\n**Stuck? Click here:** ![expandable](https://images.code.org/4bf99e7352e7c17a5bf73ced80171f6a-image-1511280628092.gif)",
        "AppLab Intro 7 - onEvent intro": "<img src=\"https://images.code.org/3d8c8487ea669563d3401c0009cd9462-image-1511281194897.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Мета:** Екран починає роботу синім. Додати код, щоб він змінив колір на зелений, коли клацнути кнопку \"Green-ify\".\\\r\n\\\r\n**Як:**\nДодати код всередину `onEvent()` , встановлюючи властивість `\"background-color\"`\nу значення`\"green\"`.\\\r\n\\\r\n**Stuck? Click here:** ![expandable](https://images.code.org/5ddf6b129bc04b79839b3661ccef788b-image-1511281012076.gif)",
        "AppLab Intro 7 - onEvent twoButtons": "<img src=\"https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Мета:** Завершити програмку ліхтарика. Кнопка \"On\" вже вмикає екран з білою заливкою. Запустіть програму і випробуйте її. Тоді напишіть код, щоб кнопка \"Off\" вимикала екран (чорна заливка).\\\r\n\\\r\n**Як:**\nДодати код всередину порожнього блоку `onEvent()` встановлюючи властивість `\"background-color\"`\nекрану в значення `\"black\"` а властивість`\"text-color\"` напису в значення `\"white\"`.\\\r\n\\\r\n**Stuck?\nClick here:** ![expandable](https://images.code.org/020b1d9b465aaf35967a528a92961c13-image-1511281772276.gif)",
        "AppLab Intro 7 - playSound": "<img src=\"https://images.code.org/28176329f15dea1a863564b069e72aab-image-1511282702534.44.52\nAM.png\" style=\"float:right;height:200px\">\\\r\n\\\r\n**Мета:** Ця звукова панель майже готова! Запустіть, щоб побачити, як вона працює. Тоді додайте зображення, текст та звук до останньої кнопки.\\\r\n\\\r\n**Як:** \\\r\n\n-   Додати блок `onEvent()` до програми і встановити \"id\" у значення`\"button4\"`. Перетягнути блок `playSound()` у `onEvent()` та обрати звук з бібліотеки. \\\r\n-   Додати `setProperty()` (за межами `onEvent()`) для зміни властивості кнопки `\"image\"` . Обрати зображення, використавши третє випадне меню.\\\r\n-   Додати ще один блок `setProperty()` для зміни тексту кнопки `\"text\"`.\\\r\n    \\\r\n    **Stuck? Click here:** ![expandable](https://images.code.org/a3fdcb8954c5e8d585bef64df1ec5b1a-image-1511285408512.gif)",
        "AppLab Intro 7 - thisOrThatAddButton": "<img src=\"https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00\nPM.png\" style=\"float:right;height:200px\">\\\r\n\\\r\n**Мета:** Додайте до екрану другу кнопку з написом \"Right!\" та ідентифікатором `\"id\"` рівним`\"rightButton\"`.\\\r\n\\\r\n**Як:**\nУ режимі Дизайну перетягнути нову кнопку. ЇЇ треба розмістити та змінити розмір. Тоді задати властивості `\"id\"`, `\"text\"`, `\"background color\"`, та`\"font size\"`.\\\r\n\\\r\n**Stuck?\nClick here:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)",
        "AppLab Intro 7 - thisOrThatAddScreen": "<img src=\"https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59\nPM.png\" style=\"float:right;height:200px\">\\\r\n\\\r\n**Мета:** Створити новий екран з назвою`\"rightScreen\"`. Додати текстовий напис з вмістом \"You went right!\".\\\r\n\\\r\n**Як:**\nУ режимі Дизайну перетягнути новий елемент екрану. Змінити його `\"id\"` на`\"rightScreen\"`.\nТоді перетягнути напис на екран і змінити його текст на \"You went right!\".\\\r\n\\\r\n**Stuck?\nClick here:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)",
        "AppLab Intro 7 - thisOrThatPersonalize": "<a href=\"https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ\"\ntarget=\"_blank\"><img src=\"https://images.code.org/ba6c0db48cc1c3c28c135f1c2f67f361-image-1511244802597.10.18\nPM.png\" style=\"float:right;height:200px\"></a>\\\r\n<a href=\"https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q\"\ntarget=\"_blank\"><img src=\"https://images.code.org/284b55697d786e0cd64350d0967c5dda-image-1511244806272.11.05\nPM.png\" style=\"float:right;height:200px\"></a>\\\r\n<a href=\"https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg\"\ntarget=\"_blank\"><img src=\"https://images.code.org/445181ff8d84861919512ba9b8e09586-image-1511244809994.12.40\nPM.png\" style=\"float:right;height:200px\"></a>\\\r\n\\\r\n**Мета:** Створити власну програму, розширюючи створений проект. А тоді \"поділитись\" ним!\\\r\n\\\r\n**Як:**\nВизначити, який тип програми Ви хочете створити. Виконати проект, додаючи екрани, кнопки, тексти, звуки та взаємодії. Є ще інші блоки, з якими можна поекспериментувати. По завершенню клацнути \"Поділитись\", щоб надіслати проект собі або другові!\n\\\r\n\\\r\n\n<details><summary><b>Обрати власні ідеї пригод</b></summary>\r\n\r\nСпробуйте цей <a href=\"https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg\"\ntarget=\"_blank\">приклад програми вибору ідей пригод</a>, щоб подивитись, як вона працює. Ось кілька ідей, які можуть допомогти визначитись з власною історією.\r\n\r\n<li>Створити пригоду улюбленого героя, справжнього чи уявного.</li>\r\n<li>Створити пригоду, яка відтворює сюжет улюбленої книги, фільму чи свою уявну.</li>\r\n<li>Створити пригоду, яка матиме багато несподіваних поворотів або складні моральні вибори.</li>\r\n<br>\r\n</details>\r\n\r\n<details><summary><b>Ідеї вітальних листівок</b></summary>\r\n\r\nСпробуйте цей <a href=\"https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q\"\ntarget=\"_blank\">приклад програми вітальної листівки</a>, щоб подивитись, як вона працює. Ось кілька ідей, які можуть допомогти визначитись з власною листівкою.\r\n\r\n<li>Подумайте, чи не наближається день народження, свято чи інший особливий день. Створіть листівку, щоб відсвяткувати!</li>\r\n<li>Створіть подячну листівку для дорогої людини.</li>\r\n<li>Створіть запрошення на подію, що наближається.</li>\r\n<br>\r\n</details>\r\n\r\n<details><summary><b>Ідеї психологічних тестів</b></summary>\r\n\r\nСпробуйте цей <a href=\"https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ\"\ntarget=\"_blank\">приклад програми психологічного тестування</a>, щоб подивитись, як вона працює. Ось кілька ідей, які можуть допомогти визначитись з власним тестом.\r\n\r\n<li>Створіть тест, який пропонує людині страву, команду, книгу чи місце.</li>\r\n<li>Створіть тест, який \"передбачає майбутнє\" на основі відповідей.</li>\r\n<li>Створіть тест, який допоможе людям прийняти складне рішення.</li>\r\n\r\n</details>",
        "AppLab Intro 7 - thisOrThatSetScreen": "<img src=\"https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop\n(1).gif\" style=\"float:right;height:200px\">\\\r\n\\\r\n**Мета:** Екран перемикається на`\"rightScreen\"` коли користувач клацає `\"rightButton\"`.\\\r\n\\\r\n**Як:**\nУ режимі Коду додати новий блок `onEvent()`для кнопки \"Right!\" \nВсередину додати блок `setScreen()` де відбуватиметься перемикання на `\"rightScreen\"`.\\\r\n\\\r\n**Stuck?\nClick here:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)",
        "Artist Autorun Test": "Використовуй блок `повторити`, щоб намалювати ці 3 квадрати.",
        "CSD Games bubble choice properties rotation_2021": "<img src=\"https://images.code.org/4cf2c2d2c61c5e4be4e1a0d47b131afe-image-1592417144547.png\" style=\"float: right;\" width=200/>\n\n# Обертання\n\nВластивість спрайта `.rotation` повертає зображення на кут від 0 до 360 градусів. Зображення обертається за годинниковою стрілкою. Наприклад, `mySprite.rotation = 90` поверне його на чверть оберту праворуч.\n\n# Завдання\n- Додавай блоки `.rotation` до коду, щоб зробити так, щоб всі автомобілі виглядали так, ніби вони правильно рухаються дорогами.",
        "CSD Games bubble choice properties rotation_2022": "<img src=\"https://images.code.org/4cf2c2d2c61c5e4be4e1a0d47b131afe-image-1592417144547.png\" style=\"float: right;\" width=200/>\n\n# Обертання\n\nВластивість спрайта `.rotation` повертає зображення на кут від 0 до 360 градусів. Зображення обертається за годинниковою стрілкою. Наприклад, `mySprite.rotation = 90` поверне його на чверть оберту праворуч.\n\n# Завдання\n- Додавай блоки `.rotation` до коду, щоб зробити так, щоб всі автомобілі виглядали так, ніби вони правильно рухаються дорогами.",
        "CSD Games bubble choice properties scale_2021": "<img src=\"https://images.code.org/3a1a5a54a3065e2467e80e71b9ed8732-image-1582072742157.png\" width=200 style=\"float: right;\">\n\n# Властивість масштабування\n\nВластивість `scale' змінює розмір спрайта. Масштаб `1` - це нормальний розмір, масштаб `2` - вдвічі більший, а масштаб `0.5` - вдвічі менший.\n\n# Завдання\n\n* Використай властивість `scale`, щоб твоя картинка була схожою на приклад.\n* Упевнись, що кожна тварина має відповідний розмір.\n* Упевнись, що риба поміститься у ставку.\n",
        "CSD Games bubble choice properties scale_2022": "<img src=\"https://images.code.org/3a1a5a54a3065e2467e80e71b9ed8732-image-1582072742157.png\" width=200 style=\"float: right;\">\n\n# Властивість масштабування\n\nВластивість `scale' змінює розмір спрайта. Масштаб `1` - це нормальний розмір, масштаб `2` - вдвічі більший, а масштаб `0.5` - вдвічі менший.\n\n# Завдання\n\n* Використай властивість `scale`, щоб твоя картинка була схожою на приклад.\n* Упевнись, що кожна тварина має відповідний розмір.\n* Упевнись, що риба поміститься у ставку.\n",
        "CSD Games properties assessment_2021": "# Зменшуємо розмір!\n\n<img src=\"https://images.code.org/3cc33de83a1dee34a3ce07f4d6c24c45-image-1566239215417.25.23 AM.png\" style=\"float: right; width: 150px;\">\n\nПродукти занадто великі, щоб поміститися на тарілці.  Використовуй свої знання про властивості спрайтів, щоб вони помістилася на тарілці.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, наскільки великі продукти.\n-   Використовуй властивості спрайтів, щоб зменшити всі спрайти їжі так, щоб вони помістилися на тарілці.",
        "CSD Games properties assessment_2022": "# Зменшуємо розмір!\n\n<img src=\"https://images.code.org/3cc33de83a1dee34a3ce07f4d6c24c45-image-1566239215417.25.23 AM.png\" style=\"float: right; width: 150px;\">\n\nПродукти занадто великі, щоб поміститися на тарілці.  Використовуй свої знання про властивості спрайтів, щоб вони помістилася на тарілці.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, наскільки великі продукти.\n-   Використовуй властивості спрайтів, щоб зменшити всі спрайти їжі так, щоб вони помістилися на тарілці.",
        "CSD Games properties new_2021": "# Нові властивості\n\nСпрайти мають багато властивостей.  Ознайомся з двома новими блоками у цій вправі та випробуй їх самостійно.  Зверни увагу, що різні спрайти можуть використовувати однакову анімацію, але виглядати по-різному завдяки своїм властивостям.\n\n# Завдання\n\n-   Запусти програму і подивися, як блоки 'rotation' і 'scale' змінюють вигляд перших двох нот.\n-   Використовуй блоки  'rotation'' і 'scale' на останніх двох нотах, щоб вони виглядали по-різному.",
        "CSD Games properties new_2022": "# Нові властивості\n\nСпрайти мають багато властивостей.  Ознайомся з двома новими блоками у цій вправі та випробуй їх самостійно.  Зверни увагу, що різні спрайти можуть використовувати однакову анімацію, але виглядати по-різному завдяки своїм властивостям.\n\n# Завдання\n\n-   Запусти програму і подивися, як блоки 'rotation' і 'scale' змінюють вигляд перших двох нот.\n-   Використовуй блоки  'rotation'' і 'scale' на останніх двох нотах, щоб вони виглядали по-різному.",
        "CSD Games properties xy_2021": "# Властивості спрайтів\n\nВластивості спрайтів зберігають усю інформацію, яку нашій програмі потрібно знати про спрайт, наприклад, його розмір та розташування.  Значення цих властивостей можна змінювати так само як і значення змінних, і бачити результати, коли спрайт буде намальований на екрані.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, де з'являться спрайти.\n-   Зміни властивості Х та У спрайта пензлика, щоб перемістити його на палітру.",
        "CSD Games properties xy_2022": "# Властивості спрайтів\n\nВластивості спрайтів зберігають усю інформацію, яку нашій програмі потрібно знати про спрайт, наприклад, його розмір та розташування.  Значення цих властивостей можна змінювати так само як і значення змінних, і бачити результати, коли спрайт буде намальований на екрані.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, де з'являться спрайти.\n-   Зміни властивості Х та У спрайта пензлика, щоб перемістити його на палітру.",
        "CSD Problem Solving Process Video": "## Запитання для розгляду\n\n-   Як ви стежили за процесом вирішення проблем на минулому уроці?\n-   Як ви могли б використовувати цей процес для вирішення проблеми у своєму повсякденному житті?",
        "CSD Problem Solving Process Video_2021": "## Питання для розгляду:\n\n-   Як Ви стежили за процесом розв'язання проблем на останньому уроці?\n-   Як Ви могли б використовувати цей процес для розв'язання проблеми у Вашому повсякденному житті?",
        "CSD Problem Solving Process Video_2022": "## Питання для розгляду:\n\n-   Як Ви стежили за процесом розв'язання проблем на останньому уроці?\n-   Як Ви могли б використовувати цей процес для розв'язання проблеми у Вашому повсякденному житті?",
        "CSD U1 IO Pet Chooser 2_2021": "# Покращений помічник з вибору домашнього улюбленця\n\nУ новій версії помічника з вибору домашнього улюбленця ви також дізнаєтесь, де можна знайти домашнього улюбленця.\n\n-   Які були вхідні дані?\n-   Які були результати?",
        "CSD U1 IO Pet Chooser 2_2022": "# Покращений помічник з вибору домашнього улюбленця\n\nУ новій версії помічника з вибору домашнього улюбленця ви також дізнаєтесь, де можна знайти домашнього улюбленця.\n\n-   Які були вхідні дані?\n-   Які були результати?",
        "CSD U1 IO Pet Chooser_2021": "# Помічник у виборі домашнього улюбленця\n\nЗіграйте у гру для вибору домашнього улюбленця кілька разів.\n\n-   Які були вхідні дані?\n-   Які були результати?\n\n* * *\n\n_Щоб почати, натисніть помаранчеву кнопку «Запустити»._",
        "CSD U1 IO Pet Chooser_2022": "# Помічник у виборі домашнього улюбленця\n\nЗіграйте у гру для вибору домашнього улюбленця кілька разів.\n\n-   Які були вхідні дані?\n-   Які були результати?\n\n* * *\n\n_Щоб почати, натисніть помаранчеву кнопку «Запустити»._",
        "CSD U1 IO Story_2021": "# Помічник зі створення історій\n\nВипробуйте цей додаток, який напише для Вас власну історію.\n\n-   Які були вхідні дані?\n-   Які були результати?",
        "CSD U1 IO Story_2022": "# Помічник зі створення історій\n\nВипробуйте цей додаток, який напише для Вас власну історію.\n\n-   Які були вхідні дані?\n-   Які були результати?",
        "CSD U1 processing bday_2021": "# Твій День народження сьогодні?\n\nСпробуй цю програму, яка покаже, чи сьогодні твій День народження.\n\n1.  Які вхідні дані використовує ця програма?\n\n2.  Які результати вона показує?\n\n3.  Як вона вирішує, яке вихідне повідомлення відображати?\n\n* * *\n\n_Щоб почати користуватися пограмою, натисни помаранчеву кнопку «Запустити»_",
        "CSD U1 processing bday_2022": "# Твій День народження сьогодні?\n\nСпробуй цю програму, яка покаже, чи сьогодні твій День народження.\n\n1.  Які вхідні дані використовує ця програма?\n\n2.  Які результати вона показує?\n\n3.  Як вона вирішує, яке вихідне повідомлення відображати?\n\n* * *\n\n_Щоб почати користуватися пограмою, натисни помаранчеву кнопку «Запустити»_",
        "CSD U1 processing countries_2021": "# Скільки країн?\n\nЦя програма розповість кілька цікавих фактів про різні країни.  Поставте запитання, і вона покаже, скільки країн відповідають вимогам.\n\n**Вхідні дані:**\n\n1.  Обране користувачем запитання (клік мишею)\n2.  Список країн та факти про них (Інтернет або збережено в програмі)\n\n**Результат:**\n\n1.  Кількість країн, які відповідають вимогам.\n\n**Обробка:**\n\n-   Які типи обробки потрібні для роботи цієї програми?",
        "CSD U1 processing countries_2022": "# Скільки країн?\n\nЦя програма розповість кілька цікавих фактів про різні країни.  Поставте запитання, і вона покаже, скільки країн відповідають вимогам.\n\n**Вхідні дані:**\n\n1.  Обране користувачем запитання (клік мишею)\n2.  Список країн та факти про них (Інтернет або збережено в програмі)\n\n**Результат:**\n\n1.  Кількість країн, які відповідають вимогам.\n\n**Обробка:**\n\n-   Які типи обробки потрібні для роботи цієї програми?",
        "CSD U1 processing fastest_2021": "# Найшвидший палець\n\nЦя програма покаже вам, який палець найшвидший — той, що натискає клавішу «s», чи той, що натискає клавішу «k».  Запустіть програму і натискайте кожну клавішу якомога більше разів.\n\n**Вхідні дані:**\n\n1.  Чи натиснута клавіша «s»  (користувач натискає клавішу)\n2.  Чи натиснута клавіша «k»  (користувач натискає клавішу)\n\n**Результат:**\n\n1.  Відображення кількості натискань клавіші «s»\n2.  Відображення кількості натискань клавіші «k»\n3.  Відображення того, яку клавішу було натиснуто найбільше, або нічийного результату\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, оберіть принаймні два і поясніть, як їх можна використовувати для перетворення вхідних даних у вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing fastest_2022": "# Найшвидший палець\n\nЦя програма покаже вам, який палець найшвидший — той, що натискає клавішу «s», чи той, що натискає клавішу «k».  Запустіть програму і натискайте кожну клавішу якомога більше разів.\n\n**Вхідні дані:**\n\n1.  Чи натиснута клавіша «s»  (користувач натискає клавішу)\n2.  Чи натиснута клавіша «k»  (користувач натискає клавішу)\n\n**Результат:**\n\n1.  Відображення кількості натискань клавіші «s»\n2.  Відображення кількості натискань клавіші «k»\n3.  Відображення того, яку клавішу було натиснуто найбільше, або нічийного результату\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, оберіть принаймні два і поясніть, як їх можна використовувати для перетворення вхідних даних у вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing guess_2021": "# Вгадай число\n\nУ цій програмі ви намагаєтеся вгадати число, загадане комп'ютером.\n\n**Вхідні дані:**\n\n1.  Число, яке ви вгадуєте (розкривний список для користувача)\n\n**Результати:**\n\n1.  Кількість спроб, що залишилися.\n2.  Інформація про те, що число завелике або замаленьке.\n3.  Інформація про те, що ви вгадали.\n4.  Інформація про кількість спроб, що залишилися.\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, оберіть принаймні два і поясніть, як їх можна використовувати для перетворення вхідних даних у вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing guess_2022": "# Вгадай число\n\nУ цій програмі ви намагаєтеся вгадати число, загадане комп'ютером.\n\n**Вхідні дані:**\n\n1.  Число, яке ви вгадуєте (розкривний список для користувача)\n\n**Результати:**\n\n1.  Кількість спроб, що залишилися.\n2.  Інформація про те, що число завелике або замаленьке.\n3.  Інформація про те, що ви вгадали.\n4.  Інформація про кількість спроб, що залишилися.\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, оберіть принаймні два і поясніть, як їх можна використовувати для перетворення вхідних даних у вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing live_2021": "# Де мені краще жити?\n\nЦя програма дає поради щодо місця проживання на основі ваших відповідей на кілька запитань.\n\n**Вхідні дані:**\n\n1.  Відповіді користувача на запитання (кліки користувача)\n\n**Результат:**\n\n1.  Поради щодо місця проживання користувачів\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, оберіть принаймні два і поясніть, як їх можна використовувати для перетворення вхідних даних у вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing live_2022": "# Де мені краще жити?\n\nЦя програма дає поради щодо місця проживання на основі ваших відповідей на кілька запитань.\n\n**Вхідні дані:**\n\n1.  Відповіді користувача на запитання (кліки користувача)\n\n**Результат:**\n\n1.  Поради щодо місця проживання користувачів\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, оберіть принаймні два і поясніть, як їх можна використовувати для перетворення вхідних даних у вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing notebook_2021": "# Блокнот для штампів\n\nУ цій програмі користувач може ставити у блокноті значки різних кольорів.  Оберіть значок, натиснувши на його зображення, а потім натисніть на зображення ще раз, щоб змінити колір..\n\n**Вхідні дані:**\n\n1.  На який значок клацнув користувач (кліки користувача)\n2.  Де на аркуші клацнув користувач (кліки користувача)\n\n**Результат:**\n\n1.  Зміна кольору значків внизу\n2.  Малювання значка на аркуші\n\n**Обробка:**\n\n-   З-поміж чотирьох типів обробки, про які ви дізналися, оберіть один і поясніть, як його можна використати для перетворення вхідних даних на вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing notebook_2022": "# Блокнот для штампів\n\nУ цій програмі користувач може ставити у блокноті значки різних кольорів.  Оберіть значок, натиснувши на його зображення, а потім натисніть на зображення ще раз, щоб змінити колір..\n\n**Вхідні дані:**\n\n1.  На який значок клацнув користувач (кліки користувача)\n2.  Де на аркуші клацнув користувач (кліки користувача)\n\n**Результат:**\n\n1.  Зміна кольору значків внизу\n2.  Малювання значка на аркуші\n\n**Обробка:**\n\n-   З-поміж чотирьох типів обробки, про які ви дізналися, оберіть один і поясніть, як його можна використати для перетворення вхідних даних на вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing npark_2021": "# Вікторина «Національні парки»\n\nСпробуйте цю вікторину про національні парки Америки.\n\n**Вхідні дані:**\n\n1.  Яку відповідь було обрано (клік мишею)\n2.  Правильна відповідь (Інтернет або збережена в програмі)\n\n**Результати:**\n\n1.  Повідомлення про те, що користувач правий\n2.  Повідомлення про те, що користувач помилився\n\n**Обробка:**\n\n-   Які типи обробки потрібні, щоб перетворити вхідні дані на результати?",
        "CSD U1 processing npark_2022": "# Вікторина «Національні парки»\n\nСпробуйте цю вікторину про національні парки Америки.\n\n**Вхідні дані:**\n\n1.  Яку відповідь було обрано (клік мишею)\n2.  Правильна відповідь (Інтернет або збережена в програмі)\n\n**Результати:**\n\n1.  Повідомлення про те, що користувач правий\n2.  Повідомлення про те, що користувач помилився\n\n**Обробка:**\n\n-   Які типи обробки потрібні, щоб перетворити вхідні дані на результати?",
        "CSD U1 processing writers_2021": "# Мій День народження і знаменитості\n\nЦя програма використовує вашу дату народження, щоб знайти відомого письменника, який народився в той самий день тижня.\n\n**Вхідні дані:**\n\n1.  День народження користувача (вводиться користувачем)\n2.  Календар дат, включно з днями тижня (Інтернет)\n3.  Список авторів та їхній День народження народження (Інтернет або збережений у програмі)\n\n**Результат:**\n\n1.  Автор, який народився в одинь день з користувачем\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, виберіть один і поясніть, як його можна використати для перетворення вхідних даних на вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 processing writers_2022": "# Мій День народження і знаменитості\n\nЦя програма використовує вашу дату народження, щоб знайти відомого письменника, який народився в той самий день тижня.\n\n**Вхідні дані:**\n\n1.  День народження користувача (вводиться користувачем)\n2.  Календар дат, включно з днями тижня (Інтернет)\n3.  Список авторів та їхній День народження народження (Інтернет або збережений у програмі)\n\n**Результат:**\n\n1.  Автор, який народився в одинь день з користувачем\n\n**Обробка:**\n\n-   З чотирьох типів обробки, про які ви дізналися, виберіть один і поясніть, як його можна використати для перетворення вхідних даних на вихідні.\n    -   якщо/то\n    -   підрахунок\n    -   пошук збігів\n    -   порівняння",
        "CSD U1 storage friends_2021": "# Помічник у пошуку друзів\n\n**Вхідні дані:**\n\n-   Список друзів\n-   Запити на дружбу\n-   Додавання у список друзів\n-   Видалення зі списку друзів\n\n**Результат:**\n\n-   Місцезнаходження друзів\n\n**Обробка:**\n\n-   ЯКЩО ця людина є другом, ТО знайти її місцезнаходження",
        "CSD U1 storage friends_2022": "# Помічник у пошуку друзів\n\n**Вхідні дані:**\n\n-   Список друзів\n-   Запити на дружбу\n-   Додавання у список друзів\n-   Видалення зі списку друзів\n\n**Результат:**\n\n-   Місцезнаходження друзів\n\n**Обробка:**\n\n-   ЯКЩО ця людина є другом, ТО знайти її місцезнаходження",
        "CSD U1 storage movies_2021": "# Порадник з дитячих фільмів\n\n**Вхідні дані:**\n\n-   Улюблений фільм\n-   Жанр\n-   Мультфільм чи ні?\n\n**Результат:**\n\n-   Рекомендація фільму\n\n**Обробка:**\n\n-   ЯКЩО користувач хоче мультфільм, ТО обирати з мультфільмів, ІНАКШЕ - з ігрових фільмів\n-   ПІДІБРАТИ жанр, якщо користувач шукає фільм у цьому жанрі",
        "CSD U1 storage movies_2022": "# Порадник з дитячих фільмів\n\n**Вхідні дані:**\n\n-   Улюблений фільм\n-   Жанр\n-   Мультфільм чи ні?\n\n**Результат:**\n\n-   Рекомендація фільму\n\n**Обробка:**\n\n-   ЯКЩО користувач хоче мультфільм, ТО обирати з мультфільмів, ІНАКШЕ - з ігрових фільмів\n-   ПІДІБРАТИ жанр, якщо користувач шукає фільм у цьому жанрі",
        "CSD U1 storage outfit_2021": "# Помічник з вибору одягу\n\n **Вхідні дані**\n\n-   Улюблений колір\n-   Сезон\n-   Погода\n\n**Результат**\n\n-   Сорочка.\n-   Штани\n-   Що взяти з собою (наприклад, парасольку)\n\n**Обробка**\n\n-   ЯКЩО йде дощ, ТО візьміть з собою парасольку.\n-   ЯКЩО зараз осінь або зима, ТО одягайте довгі штани.\n-   ПІДІБРАТИ улюблений колір до кольору сорочки.\n\n* * *\n\nЩоб почати користуватися програмою, натисніть помаранчеву кнопку «Запустити».",
        "CSD U1 storage outfit_2022": "# Помічник з вибору одягу\n\n **Вхідні дані**\n\n-   Улюблений колір\n-   Сезон\n-   Погода\n\n**Результат**\n\n-   Сорочка.\n-   Штани\n-   Що взяти з собою (наприклад, парасольку)\n\n**Обробка**\n\n-   ЯКЩО йде дощ, ТО візьміть з собою парасольку.\n-   ЯКЩО зараз осінь або зима, ТО одягайте довгі штани.\n-   ПІДІБРАТИ улюблений колір до кольору сорочки.\n\n* * *\n\nЩоб почати користуватися програмою, натисніть помаранчеву кнопку «Запустити».",
        "CSD U1 storage video_2021": "## Запитання для обмірковування:\n\n-   Подумайте про те, що ви робите на комп'ютері. Як відбувається введення, виведення, зберігання та обробка даних?",
        "CSD U1 storage video_2022": "## Запитання для обмірковування:\n\n-   Подумайте про те, що ви робите на комп'ютері. Як відбувається введення, виведення, зберігання та обробка даних?",
        "CSD U2 CSS explore CSS_2018": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>Як перемикатися між файлами?</strong></summary>\n\nНатисніть на назву файлу, який потрібно переглянути, у меню ліворуч на екрані.\n\n</details>\n</div>\n\n# Додавання стилю\n\nЦей проект Web Lab використовує нову мову для додавання стилю до сторінки. З партнером дослідіть обидва файли `index.html` і `style.css`. Будьте готовими обговорити наступні питання.\n\n-   Що змінює ця нова мова на сторінці?\n-   Чим ця мова відрізняється від HTML?\n-   Як пов'язані файли `index.html` та`style.css`?",
        "CSD U2 CSS explore CSS_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як перемикатися між файлами?**]\n\nКлацніть назву файлу, який ви хочете переглянути, в меню зліва на екрані.\n\n:::\n\n</div>\n\n# Додавання стилів\n\nУ цьому проєкті Веб Лабораторії використовується нова мова для додавання стилю до сторінки. Разом з партнером дослідіть файли `index.html` та `style.css`. Будьте готові обговорити вказані нижче питання.\n\n-   Які зміни вносить ця нова мова на сторінку?\n-   Чим ця мова відрізняється від HTML?\n-   Як пов'язані файли `index.html` і `style.css`?",
        "CSD U2 CSS explore CSS_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як перемикатися між файлами?**]\n\nКлацніть назву файлу, який ви хочете переглянути, в меню зліва на екрані.\n\n:::\n\n</div>\n\n# Додавання стилів\n\nУ цьому проєкті Веб Лабораторії використовується нова мова для додавання стилю до сторінки. Разом з партнером дослідіть файли `index.html` та `style.css`. Будьте готові обговорити вказані нижче питання.\n\n-   Які зміни вносить ця нова мова на сторінку?\n-   Чим ця мова відрізняється від HTML?\n-   Як пов'язані файли `index.html` і `style.css`?",
        "CSD U2 CSS_2021": "# Додавання стилів\n\nДалі змінюйте стилі сторінки відповідно до вашого плану.\n\n# Завдання\n\n-   У таблиці стилів додайте набори правил CSS для тегів.\n-   Перевірте, чи правильно виглядає сторінка, і внесіть необхідні корективи",
        "CSD U2 CSS_2022": "# Додавання стилів\n\nДалі змінюйте стилі сторінки відповідно до вашого плану.\n\n# Завдання\n\n-   У таблиці стилів додайте набори правил CSS для тегів.\n-   Перевірте, чи правильно виглядає сторінка, і внесіть необхідні корективи",
        "CSD U2 HTML Adding Paragraphs": "# Додати текст до тіла\n\nКоли ви запускаєте будь-який проект Web Lab, він автоматично додаватиме `<!DOCTYPE>`, `<html>`, `<head>`, і `<body>`  теги до вашого проекту. Коли ви додаєте вміст у свої проекти, вам потрібно це робити між `<body>` і `</body>` теги, оскільки вони мають бути частиною основного тексту вашої веб-сторінки.\n\n# Зроби це\n\n-   Напишіть три окремі речення на будь-яку тему, яка вам подобається, в тегах тексту вашої веб-сторінки.\n-   Натисніть \"Оновити та зберегти\", якщо ви не бачите змін у області попереднього перегляду.\n-   Порівняйте свою роботу з сусідом. Переконайтеся, що ви розміщуєте код у тому самому місці.",
        "CSD U2 HTML Adding Paragraphs pt 2_2018": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**Що таке елемент абзацу?**\n\n</summary>\n\nАбзаци позначаються відкриттям (`<p>`) та закриттям тегів (`</p>`). Абзаци в HTML можуть бути будь-якою довжиною тексту від одного слова до групи речень. Абзаци об’єднують набори речень і ставлять певний пробіл між цією групою тексту та наступною групою тексту.\n\n</details>\n<details>\n<summary>\n\n**Як створити кілька абзаців?**\n\n</summary>\n\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений у тілі вашої веб-сторінки.\n\n    <p>Це абзац. У ньому є два речення.</p>\n    <p>Це інший абзац.</p>\n\n</details>\n</div>\n\n# Використовуйте теги абзацу\n\nТеги `<p>` `</p>` чи теги \"paragraph\" початку та закінчення розміщуються навколо тексту, щоб вказати, що це частина абзацу.\nРозміщення тексту між початковим та кінцевим тегами абзацу дає комп’ютеру зрозуміти, що він повинен відображатися по-різному, як правило, просто за допомогою відступу від іншого тексту.\n\n# Зроби це\n\n-   Розмістіть текст, який ви щойно написали, щонайменше у двох окремих абзацах, оточивши його тегами `<p>` і `</p>`\n-   Порівняйте результати з сусідом. Що змінилося у способі відображення тексту?",
        "CSD U2 HTML Adding Paragraphs pt 2_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\n\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n\n:::\n\n::: details [**Як створити декілька обзаців?**]\n\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n\n:::\n\n</div>\n\n# Використання тегів абзацу\n\nТеги `<p>` `</p>` або початковий і кінцевий теги \"абзац\" ставляться навколо тексту щоб вказати, що він є частиною абзацу. Розміщення тексту між початковим і кінцевим тегами абзацу дає комп'ютеру зрозуміти, що з ним слід поводитися по-іншому, часто просто відокремлюючи його від іншого тексту.\n\n# Завдання\n\n-   Помістіть текст, який ви щойно написали, щонайменше у два окремі абзаци, оточивши його тегами `<p>` та `</p>`.\n-   Порівняйте результати з результатами вашого сусіда. Що змінилося у відображенні вашого тексту?",
        "CSD U2 HTML Adding Paragraphs pt 2_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\n\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n\n:::\n\n::: details [**Як створити декілька обзаців?**]\n\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n\n:::\n\n</div>\n\n# Використання тегів абзацу\n\nТеги `<p>` `</p>` або початковий і кінцевий теги \"абзац\" ставляться навколо тексту щоб вказати, що він є частиною абзацу. Розміщення тексту між початковим і кінцевим тегами абзацу дає комп'ютеру зрозуміти, що з ним слід поводитися по-іншому, часто просто відокремлюючи його від іншого тексту.\n\n# Завдання\n\n-   Помістіть текст, який ви щойно написали, щонайменше у два окремі абзаци, оточивши його тегами `<p>` та `</p>`.\n-   Порівняйте результати з результатами вашого сусіда. Що змінилося у відображенні вашого тексту?",
        "CSD U2 HTML Adding Paragraphs_2018": "# Додати текст до тіла\n\nКоли ви запускаєте будь-який проект Web Lab, він автоматично додаватиме `<!DOCTYPE>`, `<html>`, `<head>`, і `<body>`  теги до вашого проекту. Коли ви додаєте вміст у свої проекти, вам потрібно це робити між `<body>` і `</body>` теги, оскільки вони мають бути частиною основного тексту вашої веб-сторінки.\n\n# Зроби це\n\n-   Напишіть три окремі речення на будь-яку тему, яка вам подобається, в тегах тексту вашої веб-сторінки.\n-   Натисніть \"Оновити та зберегти\", якщо ви не бачите змін у області попереднього перегляду.\n-   Порівняйте свою роботу з сусідом. Переконайтеся, що ви розміщуєте код у тому самому місці.",
        "CSD U2 HTML Adding Paragraphs_2019": "# Додати текст до тіла\n\nКоли ви запускаєте будь-який проект Web Lab, він автоматично додаватиме `<!DOCTYPE>`, `<html>`, `<head>`, і `<body>`  теги до вашого проекту. Коли ви додаєте вміст у свої проекти, вам потрібно це робити між `<body>` і `</body>` теги, оскільки вони мають бути частиною основного тексту вашої веб-сторінки.\n\n# Зроби це\n\n-   Напишіть три окремі речення на будь-яку тему, яка вам подобається, в тегах тексту вашої веб-сторінки.\n-   Натисніть \"Оновити та зберегти\", якщо ви не бачите змін у області попереднього перегляду.\n-   Порівняйте свою роботу з сусідом. Переконайтеся, що ви розміщуєте код у тому самому місці.",
        "CSD U2 HTML Adding Paragraphs_2021": "# Додати текст до тіла сторінки\n\nКоли ми запускаємо будь-який проект у Веб Лабораторії, вона автоматично додаватиме теги  `<!DOCTYPE>`, `<html>`, `<head>`, та `<body>`  до нашого проекту. Коли ми додаємо вміст у свої проекти, нам потрібно це робити між тегами `<body>` і `</body>`, оскільки вони мають бути частиною основного тексту нашої веб-сторінки.\n\n# Завдання\n\n-   Напишіть три окремі речення на будь-яку тему, яка вам подобається, в тегах тексту вашої веб-сторінки.\n-   Натисніть \"Оновити та зберегти\", якщо ви не бачите змін у області попереднього перегляду.\n-   Порівняйте свою роботу з сусідом. Переконайтеся, що ви розміщуєте код у тому самому місці.",
        "CSD U2 HTML Adding Paragraphs_2022": "# Додати текст до тіла\n\nКоли ви запускаєте будь-який проект Web Lab, він автоматично додаватиме `<!DOCTYPE>`, `<html>`, `<head>`, і `<body>`  теги до вашого проекту. Коли ви додаєте вміст у свої проекти, вам потрібно це робити між `<body>` і `</body>` теги, оскільки вони мають бути частиною основного тексту вашої веб-сторінки.\n\n# Зроби це\n\n-   Напишіть три окремі речення на будь-яку тему, яка вам подобається, в тегах тексту вашої веб-сторінки.\n-   Натисніть \"Оновити та зберегти\", якщо ви не бачите змін у області попереднього перегляду.\n-   Порівняйте свою роботу з сусідом. Переконайтеся, що ви розміщуєте код у тому самому місці.",
        "CSD U2 HTML Debug Paragraphs_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\n\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n\n:::\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n</div>\n\n# Налагодження: Виправлення неправильних тегів\n\nНа цій простій вебсторінці є деякі проблеми, які перешкоджають правильному відображенню вмісту. Визначте і виправте ці проблеми. Ця практика також називається \"налагодженням\" вашого коду.\n\n# Завдання\n\n-   Виправте неправильний код, щоб сторінка відображалася коректно\n-   Порівняйте виправлені вами проблеми з сусідом",
        "CSD U2 HTML Debug Paragraphs_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\n\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n\n:::\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n</div>\n\n# Налагодження: Виправлення неправильних тегів\n\nНа цій простій вебсторінці є деякі проблеми, які перешкоджають правильному відображенню вмісту. Визначте і виправте ці проблеми. Ця практика також називається \"налагодженням\" вашого коду.\n\n# Завдання\n\n-   Виправте неправильний код, щоб сторінка відображалася коректно\n-   Порівняйте виправлені вами проблеми з сусідом",
        "CSD U2 Heading Demo_2021": "# Заголовки\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке заголовки?**]\nЗаголовки — це різні за розміром заголовки розділів на вебсторінці. Заголовки структурують вашу вебсторінку, розбиваючи її на частини, щоб користувачеві було легше читати.\n:::\n\n::: details [**Як робити заголовки різного  розміру?**]\nЗаголовки бувають 6 різних розмірів.  Найпоширенішим заголовком є \\<h1> Цифра 1 в HTML тегу означає, що це найбільший заголовок. Найменшим заголовком є \\<h6>. Також можете спробувати теги  \\<h2>, \\<h3>, \\<h4> і \\<h5>, які стають меншими із збільшенням числа.\n:::\n\n::: details [**Що таке HTML?**]\nHTML розшифровується як мова розмітки гіпертексту (Hypertext Markup Language). HTML використовується для додавання структури до вмісту вебсторінки. В HTML використовуються теги, щоб вказати, де починаються і де закінчуються певні структури. Ці теги є наборами символів, яких немає в англійській мові, щоб можна було розрізнити вміст і структуру. \n:::\n\n::: details [**Що таке елемент HTML?**]\n\nЕлемент HTML - це частина веб-сайту, яка позначена початковим тегом і іноді закривається кінцевим тегом. Елемент також включає в себе вміст всередині тегів. Наприклад: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**Що таке HTML тег?**]\n\nHTML тег - це спеціальний набір символів, який вказує комп'ютеру, де знаходиться початок або кінець елемента HTML і якого він типу.\n:::\n\n</div>\n\nДосі ми організовували вміст вебсторінки в абзаци.  Ще один спосіб, який дозволяє HTML організувати ваш код, - це використання **заголовків**.  Заголовок - це короткий фрагмент тексту, розміщений вгорі розділу контенту, наприклад, назва.\n\n# Завдання:\n\n-   Знайдіть заголовки на наведеній нижче вебсторінці та скористайтеся інструментом \"Інспектор\", щоб побачити код, який їх створює.\n-   Домовтеся з партнером про функції тегів.\n-   Змініть код так, щоб \"Малюнок\" і \"2 роки\" відповідали заголовкам на решті сторінки.",
        "CSD U2 Heading Demo_2022": "# Заголовки\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке заголовки?**]\nЗаголовки — це різні за розміром заголовки розділів на вебсторінці. Заголовки структурують вашу вебсторінку, розбиваючи її на частини, щоб користувачеві було легше читати.\n:::\n\n::: details [**Як робити заголовки різного  розміру?**]\nЗаголовки бувають 6 різних розмірів.  Найпоширенішим заголовком є \\<h1> Цифра 1 в HTML тегу означає, що це найбільший заголовок. Найменшим заголовком є \\<h6>. Також можете спробувати теги  \\<h2>, \\<h3>, \\<h4> і \\<h5>, які стають меншими із збільшенням числа.\n:::\n\n::: details [**Що таке HTML?**]\nHTML розшифровується як мова розмітки гіпертексту (Hypertext Markup Language). HTML використовується для додавання структури до вмісту вебсторінки. В HTML використовуються теги, щоб вказати, де починаються і де закінчуються певні структури. Ці теги є наборами символів, яких немає в англійській мові, щоб можна було розрізнити вміст і структуру. \n:::\n\n::: details [**Що таке елемент HTML?**]\n\nЕлемент HTML - це частина веб-сайту, яка позначена початковим тегом і іноді закривається кінцевим тегом. Елемент також включає в себе вміст всередині тегів. Наприклад: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**Що таке HTML тег?**]\n\nHTML тег - це спеціальний набір символів, який вказує комп'ютеру, де знаходиться початок або кінець елемента HTML і якого він типу.\n:::\n\n</div>\n\nДосі ми організовували вміст вебсторінки в абзаци.  Ще один спосіб, який дозволяє HTML організувати ваш код, - це використання **заголовків**.  Заголовок - це короткий фрагмент тексту, розміщений вгорі розділу контенту, наприклад, назва.\n\n# Завдання:\n\n-   Знайдіть заголовки на наведеній нижче вебсторінці та скористайтеся інструментом \"Інспектор\", щоб побачити код, який їх створює.\n-   Домовтеся з партнером про функції тегів.\n-   Змініть код так, щоб \"Малюнок\" і \"2 роки\" відповідали заголовкам на решті сторінки.",
        "CSD U2 Heading Sizes_2021": "# Розміри заголовків\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке заголовки?**]\n\nЗаголовки - це різні за розміром назви розділів на вебсторінці. Заголовки структурують вау вебсторінку, розбиваючи її на частини, щоб користувачеві було легше читати.\n:::\n\n::: details [**Як робити заголовки різного розміру?**]\nЗаголовки бувають 6 різних розмірів.  Найпоширеніший заголовок - `<h1>` Цифра 1 в  HTML тегу означає, що це найбільший заголовок. Найменший заголовок - `<h6>`. Ви також можете спробувати теги `<h2>`, `<h3>`, `<h4>` і `<h5>`, які зменшуються зі збільшенням числа.\n:::\n\n::: details [**Що таке HTML?**]\nHTML розшифровується як мова розмітки гіпертексту (Hypertext Markup Language). HTML використовується для додавання структури до вмісту вебсторінки. В HTML використовуються теги, щоб вказати, де починаються і де закінчуються певні структури. Ці теги є наборами символів, яких немає в англійській мові, щоб можна було розрізнити вміст і структуру. \n:::\n\n::: details [**Що таке елемент HTML?**]\n\nЕлемент HTML - це частина веб-сайту, яка позначена початковим тегом і іноді закривається кінцевим тегом. Елемент також включає в себе вміст всередині тегів. Наприклад: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**Що таке HTML тег?**]\n\nHTML-тег - це спеціальний набір символів, який вказує комп'ютеру, де знаходиться початок або кінець HTML елемента і якого він типу.\n:::\n\n</div>\n\nЗаголовки бувають різних розмірів.  На цій сторінці є шість заголовків різного розміру, але всі вони переплутані.  Чи зможете ви з партнером з'ясувати, як їх виправити?\n\nЗавдання:\n\n-   Використовуйте інструмент \"Інспектор\", щоб з'ясувати, чому заголовки мають різний розмір\n-   Домовтеся з партнером про призначення різних тегів заголовків.\n-   Змініть теги так, щоб заголовки йшли в порядку від найбільшого до найменшого, а в тексті був правильний розмір, як на малюнку нижче. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px; float:left\">",
        "CSD U2 Heading Sizes_2022": "# Розміри заголовків\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке заголовки?**]\n\nЗаголовки - це різні за розміром назви розділів на вебсторінці. Заголовки структурують вау вебсторінку, розбиваючи її на частини, щоб користувачеві було легше читати.\n:::\n\n::: details [**Як робити заголовки різного розміру?**]\nЗаголовки бувають 6 різних розмірів.  Найпоширеніший заголовок - `<h1>` Цифра 1 в  HTML тегу означає, що це найбільший заголовок. Найменший заголовок - `<h6>`. Ви також можете спробувати теги `<h2>`, `<h3>`, `<h4>` і `<h5>`, які зменшуються зі збільшенням числа.\n:::\n\n::: details [**Що таке HTML?**]\nHTML розшифровується як мова розмітки гіпертексту (Hypertext Markup Language). HTML використовується для додавання структури до вмісту вебсторінки. В HTML використовуються теги, щоб вказати, де починаються і де закінчуються певні структури. Ці теги є наборами символів, яких немає в англійській мові, щоб можна було розрізнити вміст і структуру. \n:::\n\n::: details [**Що таке елемент HTML?**]\n\nЕлемент HTML - це частина веб-сайту, яка позначена початковим тегом і іноді закривається кінцевим тегом. Елемент також включає в себе вміст всередині тегів. Наприклад: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**Що таке HTML тег?**]\n\nHTML-тег - це спеціальний набір символів, який вказує комп'ютеру, де знаходиться початок або кінець HTML елемента і якого він типу.\n:::\n\n</div>\n\nЗаголовки бувають різних розмірів.  На цій сторінці є шість заголовків різного розміру, але всі вони переплутані.  Чи зможете ви з партнером з'ясувати, як їх виправити?\n\nЗавдання:\n\n-   Використовуйте інструмент \"Інспектор\", щоб з'ясувати, чому заголовки мають різний розмір\n-   Домовтеся з партнером про призначення різних тегів заголовків.\n-   Змініть теги так, щоб заголовки йшли в порядку від найбільшого до найменшого, а в тексті був правильний розмір, як на малюнку нижче. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15 PM.png\" style=\"width:100px; float:left\">",
        "CSD U2 Heading Test_2021": "# Заголовки та абзаци\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n:::\n\n::: details [**Як створити декілька обзаців?**]\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n:::\n\n::: details [**Що таке заголовки?**]\nЗаголовки — це різні за розміром заголовки розділів на вебсторінці. Заголовки структурують вашу вебсторінку, розбиваючи її на частини, щоб користувачеві було легше читати.\n:::\n\n::: details [**Як робити заголовки різного  розміру?**]\nЗаголовки бувають 6 різних розмірів.  Найпоширенішим заголовком є \\<h1> Цифра 1 в HTML тегу означає, що це найбільший заголовок. Найменшим заголовком є \\<h6>. Також можете спробувати теги  \\<h2>, \\<h3>, \\<h4> і \\<h5>, які стають меншими із збільшенням числа.\n:::\n\n::: details [**Що таке HTML?**]\nHTML розшифровується як мова розмітки гіпертексту (Hypertext Markup Language). HTML використовується для додавання структури до вмісту вебсторінки. В HTML використовуються теги, щоб вказати, де починаються і де закінчуються певні структури. Ці теги є наборами символів, яких немає в англійській мові, щоб можна було розрізнити вміст і структуру. \n:::\n\n::: details [**Що таке елемент HTML?**]\nЕлемент HTML - це частина веб-сайту, яка позначена початковим тегом і іноді закривається кінцевим тегом. Елемент також включає в себе вміст всередині тегів. Наприклад: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**Що таке HTML тег?**]\nHTML тег - це спеціальний набір символів, який вказує комп'ютеру, де знаходиться початок або кінець елемента HTML і якого він типу.\n:::\n\n</div>\n\nАвтор цієї сторінки додав багато контенту, але не подумав про структуру.  Весь текст злитий докупи.\n\nЗавдання:\n\n-   Перегляньте контент разом з партнером і вирішіть, якою, на вашу думку, має бути найкраща структура.\n-   Використовуйте теги заголовків та абзаців, щоб закодувати структуру на сторінці.",
        "CSD U2 Heading Test_2022": "# Заголовки та абзаци\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n:::\n\n::: details [**Як створити декілька обзаців?**]\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n:::\n\n::: details [**Що таке заголовки?**]\nЗаголовки — це різні за розміром заголовки розділів на вебсторінці. Заголовки структурують вашу вебсторінку, розбиваючи її на частини, щоб користувачеві було легше читати.\n:::\n\n::: details [**Як робити заголовки різного  розміру?**]\nЗаголовки бувають 6 різних розмірів.  Найпоширенішим заголовком є \\<h1> Цифра 1 в HTML тегу означає, що це найбільший заголовок. Найменшим заголовком є \\<h6>. Також можете спробувати теги  \\<h2>, \\<h3>, \\<h4> і \\<h5>, які стають меншими із збільшенням числа.\n:::\n\n::: details [**Що таке HTML?**]\nHTML розшифровується як мова розмітки гіпертексту (Hypertext Markup Language). HTML використовується для додавання структури до вмісту вебсторінки. В HTML використовуються теги, щоб вказати, де починаються і де закінчуються певні структури. Ці теги є наборами символів, яких немає в англійській мові, щоб можна було розрізнити вміст і структуру. \n:::\n\n::: details [**Що таке елемент HTML?**]\nЕлемент HTML - це частина веб-сайту, яка позначена початковим тегом і іноді закривається кінцевим тегом. Елемент також включає в себе вміст всередині тегів. Наприклад: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\" style=\"width:500px\">\n:::\n\n::: details [**Що таке HTML тег?**]\nHTML тег - це спеціальний набір символів, який вказує комп'ютеру, де знаходиться початок або кінець елемента HTML і якого він типу.\n:::\n\n</div>\n\nАвтор цієї сторінки додав багато контенту, але не подумав про структуру.  Весь текст злитий докупи.\n\nЗавдання:\n\n-   Перегляньте контент разом з партнером і вирішіть, якою, на вашу думку, має бути найкраща структура.\n-   Використовуйте теги заголовків та абзаців, щоб закодувати структуру на сторінці.",
        "CSD U2 Heading debug_2021": "# Одна голова добре, а дві — краще!\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n\n</div>\n\nУ цьому HTML коді є баги, які роблять код рожевим.\n\nЗавдання:\n\n-   Попрацюйте з партнером над виправленням багів HTML, щоб код не був рожевим.\n-   Разом придумайте одну пораду щодо налагодження.",
        "CSD U2 Heading debug_2022": "# Одна голова добре, а дві — краще!\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n\n</div>\n\nУ цьому HTML коді є баги, які роблять код рожевим.\n\nЗавдання:\n\n-   Попрацюйте з партнером над виправленням багів HTML, щоб код не був рожевим.\n-   Разом придумайте одну пораду щодо налагодження.",
        "CSD U2 Headings challenge debug 1_2021": "# Налагодження: зниклий абзац\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось надіслав повідомлення про баг на цій вебсторінці.  Чи зможете ви виправити помилку?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nТри абзаци, по одному на тварину | Абзац про черепах зник\n про собак, черепах і птахів | \n \n \n# Завдання\n\n * Знайдіть і усуньте проблему, яка спричиняє баг",
        "CSD U2 Headings challenge debug 1_2022": "# Налагодження: зниклий абзац\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось надіслав повідомлення про баг на цій вебсторінці.  Чи зможете ви виправити помилку?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nТри абзаци, по одному на тварину | Абзац про черепах зник\n про собак, черепах і птахів | \n \n \n# Завдання\n\n * Знайдіть і усуньте проблему, яка спричиняє баг",
        "CSD U2 Headings challenge debug 2_2021": "# Налагодження: рожеві теги\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось надіслав повідомлення про баг на цій вебсторінці.  Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКод не має бути рожевим | Біля рядків 8 та 14 є рожевий код\n \n # Завдання\n\n * Знайдіть і усуньте проблему, яка спричиняє баг",
        "CSD U2 Headings challenge debug 2_2022": "# Налагодження: рожеві теги\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось надіслав повідомлення про баг на цій вебсторінці.  Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКод не має бути рожевим | Біля рядків 8 та 14 є рожевий код\n \n # Завдання\n\n * Знайдіть і усуньте проблему, яка спричиняє баг",
        "CSD U2 Headings challenge debug 3_2021": "# Налагодження: рожеві теги\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось надіслав повідомлення про баг на цій вебсторінці.  Чи зможете ви виправити помилку?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКод не має бути рожевим | Біля рядків 8 та 14 є рожевий код\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє баг.",
        "CSD U2 Headings challenge debug 3_2022": "# Налагодження: рожеві теги\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось надіслав повідомлення про баг на цій вебсторінці.  Чи зможете ви виправити помилку?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКод не має бути рожевим | Біля рядків 8 та 14 є рожевий код\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє баг.",
        "CSD U2 Headings challenge debug 4_2021": "# Додавання більшого заголовка\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nОсь чудова стаття про види транспорту. Чи зможете ви додати помітний, великий заголовок і дати їй назву?\n \n # Завдання\n * Додайте більший заголовок у верхній частині статті.",
        "CSD U2 Headings challenge debug 4_2022": "# Додавання більшого заголовка\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nОсь чудова стаття про види транспорту. Чи зможете ви додати помітний, великий заголовок і дати їй назву?\n \n # Завдання\n * Додайте більший заголовок у верхній частині статті.",
        "CSD U2 Image Credit_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Зазначення авторства\n\nКоли ви використовуєте чуже зображення, слід вказати його автора (це також називається _атрибуція_). Найпростіший спосіб зробити це - додати під зображенням текст, який ідентифікує автора і веб-сайт, з якого воно було взяте. Ви також можете додати інформацію про ліцензію на публікацію.\n\n# Завдання\n\n-   Додайте інформацію про те, звідки було взяте зображення, а також його ліцензію.\n\n*(Це зображення знайдене на pixabay, куди було завантажене користувачем \"Alexas\\_Fotos\", який використовував ліцензію \"безкоштовно для комерційного використання\" та \"посилання на джерело не вимагається\")*",
        "CSD U2 Image Credit_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Зазначення авторства\n\nКоли ви використовуєте чуже зображення, слід вказати його автора (це також називається _атрибуція_). Найпростіший спосіб зробити це - додати під зображенням текст, який ідентифікує автора і веб-сайт, з якого воно було взяте. Ви також можете додати інформацію про ліцензію на публікацію.\n\n# Завдання\n\n-   Додайте інформацію про те, звідки було взяте зображення, а також його ліцензію.\n\n*(Це зображення знайдене на pixabay, куди було завантажене користувачем \"Alexas\\_Fotos\", який використовував ліцензію \"безкоштовно для комерційного використання\" та \"посилання на джерело не вимагається\")*",
        "CSD U2 Image Tag 1_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Зображення\n\nДля вас створена вебсторінка \"Порівняння собаки і кота\". Зображення собаки вже додане на сторінку нижче. \n\n# Завдання\n\n-   Подивіться на код, який викликав появу зображення собаки\n-   Використовуйте тег зображення, щоб додати зображення `cat.jpeg` на сторінку під заголовком кота",
        "CSD U2 Image Tag 1_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Зображення\n\nДля вас створена вебсторінка \"Порівняння собаки і кота\". Зображення собаки вже додане на сторінку нижче. \n\n# Завдання\n\n-   Подивіться на код, який викликав появу зображення собаки\n-   Використовуйте тег зображення, щоб додати зображення `cat.jpeg` на сторінку під заголовком кота",
        "CSD U2 Image Tag 2_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Завантаження зображень\n\nВи можете завантажувати зображення, які ви знайшли деінде, за допомогою кнопки **Додати зображення**. Знайдіть зображення інших домашніх тварин, яке вам подобається, і завантажте його на свій комп'ютер (клацніть правою кнопкою миші \"Зберегти як\").\n\nОтримавши зображення, натисніть кнопку ![](<https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49 PM.png>) і завантажте зображення з вашого комп'ютера у ваш проєкт, де ви зможете використовувати його на вашій сторінці.\n\n# Завдання\n\n-   Знайдіть зображення, яке можна використовувати, і завантажте його в цей проєкт.\n-   Впевніться, що ім'я файлу відповідає вашим правилам іменування.\n-   Використовуйте тег `<img>` для відображення зображень на вашому сайті.\n    -   Обов'язково додайте атрибут \\`alt!\n-   Додайте інформацію про авторство під зображенням.",
        "CSD U2 Image Tag 2_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Завантаження зображень\n\nВи можете завантажувати зображення, які ви знайшли деінде, за допомогою кнопки **Додати зображення**. Знайдіть зображення інших домашніх тварин, яке вам подобається, і завантажте його на свій комп'ютер (клацніть правою кнопкою миші \"Зберегти як\").\n\nОтримавши зображення, натисніть кнопку ![](<https://images.code.org/c35789d00e59b0dbe42879390dabf925-image-1493240590385.01.49 PM.png>) і завантажте зображення з вашого комп'ютера у ваш проєкт, де ви зможете використовувати його на вашій сторінці.\n\n# Завдання\n\n-   Знайдіть зображення, яке можна використовувати, і завантажте його в цей проєкт.\n-   Впевніться, що ім'я файлу відповідає вашим правилам іменування.\n-   Використовуйте тег `<img>` для відображення зображень на вашому сайті.\n    -   Обов'язково додайте атрибут \\`alt!\n-   Додайте інформацію про авторство під зображенням.",
        "CSD U2 Image Tag Add Alt_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Додавання атрибуту alt до зображень на сторінці\n\nАтрибут `alt` - це скорочення від альтернативного тексту. Як ви могли бачити на вебсторінках, які не завантажуються належним чином, альтернативний текст описує зображення, що не відображається.\n\n# Завдання\n* Перегляньте код HTML і визначте, де використовуються зображення.\n* Додайте описовий атрибут `alt` до кожного зображення.",
        "CSD U2 Image Tag Add Alt_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Додавання атрибуту alt до зображень на сторінці\n\nАтрибут `alt` - це скорочення від альтернативного тексту. Як ви могли бачити на вебсторінках, які не завантажуються належним чином, альтернативний текст описує зображення, що не відображається.\n\n# Завдання\n* Перегляньте код HTML і визначте, де використовуються зображення.\n* Додайте описовий атрибут `alt` до кожного зображення.",
        "CSD U2 Image Tag Add Image Link_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Додавання посилання на зображення\n\nЗображення вже завантажене. Наступний крок - прив'язати його до вебсторінки.\n\n# Завдання\n* Додайте посилання на зображення \"gymnast.gif\".\n",
        "CSD U2 Image Tag Add Image Link_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Додавання посилання на зображення\n\nЗображення вже завантажене. Наступний крок - прив'язати його до вебсторінки.\n\n# Завдання\n* Додайте посилання на зображення \"gymnast.gif\".\n",
        "CSD U2 Image Tag Add Image_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Додавання зображень\n\nТут можна попрактикуватися в додаванні нового зображення на вебсторінку.\n\n# Завдання\n* Додайте зображення в кінець цього рецепта торта.\n* Не забудьте використати кнопку `Додати зображення` і включити тег зображення у свій код.\n",
        "CSD U2 Image Tag Add Image_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Додавання зображень\n\nТут можна попрактикуватися в додаванні нового зображення на вебсторінку.\n\n# Завдання\n* Додайте зображення в кінець цього рецепта торта.\n* Не забудьте використати кнопку `Додати зображення` і включити тег зображення у свій код.\n",
        "CSD U2 Image Tag Debug_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Деталі мають значення\n\nАтрибут `src` повинен вказувати на _точне_ ім'я файлу зображення, яке ви хочете використати. Це означає, що вам потрібно звернути увагу на правопис, великі літери та розширення файлу. Кожне з трьох зображень на цій сторінці не працює через неправильний атрибут `src`. \n\n# Завдання\n\n-   Використовуючи меню файлів для довідки, виправте кожен з тегів зображення.\n-   Коли ви закінчите, кожне зображення повинно коректно відображатися в попередньому перегляді вебсторінки.\n\n_Примітка: Навіть якщо зображення не завантажуються належним чином, наш сайт все одно показує описовий текст того, що там має бути, оскільки ми використали атрибути `alt`. Круто!_",
        "CSD U2 Image Tag Debug_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Деталі мають значення\n\nАтрибут `src` повинен вказувати на _точне_ ім'я файлу зображення, яке ви хочете використати. Це означає, що вам потрібно звернути увагу на правопис, великі літери та розширення файлу. Кожне з трьох зображень на цій сторінці не працює через неправильний атрибут `src`. \n\n# Завдання\n\n-   Використовуючи меню файлів для довідки, виправте кожен з тегів зображення.\n-   Коли ви закінчите, кожне зображення повинно коректно відображатися в попередньому перегляді вебсторінки.\n\n_Примітка: Навіть якщо зображення не завантажуються належним чином, наш сайт все одно показує описовий текст того, що там має бути, оскільки ми використали атрибути `alt`. Круто!_",
        "CSD U2 Image Tag Height Width Attributes_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Атрибути висоти та ширини\n\nРозмір зображень не завжди підходять для вебсторінки. На щастя, існують атрибути ширини та висоти, які дозволяють задати, скільки пікселів у висоту і ширину має зображення. Додайте атрибути у тег зображення, використовуючи `height=\"\"` і `width=\"\"`.\n\n# Завдання\n* Перегляньте HTML-код і подивіться, як використовуються атрибути ширини та висоти.\n* Додайте атрибути висоти та ширини, щоб зробити інші зображення меншими.",
        "CSD U2 Image Tag Height Width Attributes_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Атрибути висоти та ширини\n\nРозмір зображень не завжди підходять для вебсторінки. На щастя, існують атрибути ширини та висоти, які дозволяють задати, скільки пікселів у висоту і ширину має зображення. Додайте атрибути у тег зображення, використовуючи `height=\"\"` і `width=\"\"`.\n\n# Завдання\n* Перегляньте HTML-код і подивіться, як використовуються атрибути ширини та висоти.\n* Додайте атрибути висоти та ширини, щоб зробити інші зображення меншими.",
        "CSD U2 Image Tag How-To_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Створення посібника з інструкціями\n\nВикористовуємо свої нові вміння роботи з зображеннями, щоб поділитися з іншими навичками, якими ви володієте. Як додаткове завдання, додайте код з минулих уроків, наприклад, спеціальні символи та таблиці стилів.\n\n# Завдання\n* Створіть ілюстрований посібник, щоб допомогти іншим опанувати нову навичку.",
        "CSD U2 Image Tag How-To_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Створення посібника з інструкціями\n\nВикористовуємо свої нові вміння роботи з зображеннями, щоб поділитися з іншими навичками, якими ви володієте. Як додаткове завдання, додайте код з минулих уроків, наприклад, спеціальні символи та таблиці стилів.\n\n# Завдання\n* Створіть ілюстрований посібник, щоб допомогти іншим опанувати нову навичку.",
        "CSD U2 Image Tag Illustrated Story_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Створення ілюстрованої історії\n\nПеревірте свої нові навички роботи з тегами зображень і створіть ілюстровану історію. Як додаткове завдання, включіть код з попередніх уроків, наприклад, спеціальні символи та таблиці стилів.\n\n# Завдання\n* Створіть ілюстровану історію на свій вибір, використавши текст і зображення.\n",
        "CSD U2 Image Tag Illustrated Story_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Створення ілюстрованої історії\n\nПеревірте свої нові навички роботи з тегами зображень і створіть ілюстровану історію. Як додаткове завдання, включіть код з попередніх уроків, наприклад, спеціальні символи та таблиці стилів.\n\n# Завдання\n* Створіть ілюстровану історію на свій вибір, використавши текст і зображення.\n",
        "CSD U2 Image Tag Inconsistent Spelling_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Налагодження: відсутнє зображення\n\nХтось залишив повідомлення про баг на цій вебсторінці. Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------\nНа сторінці є друге зображення Пікачу | Є текст заміщення, але зображення відсутнє\n# Завдання\n* Знайди й усунь проблему, яка спричиняє цей баг.\n",
        "CSD U2 Image Tag Inconsistent Spelling_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Налагодження: відсутнє зображення\n\nХтось залишив повідомлення про баг на цій вебсторінці. Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------\nНа сторінці є друге зображення Пікачу | Є текст заміщення, але зображення відсутнє\n# Завдання\n* Знайди й усунь проблему, яка спричиняє цей баг.\n",
        "CSD U2 Image Tag Mispelled src_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Налагодження: відсутнє зображення\n\nХтось залишив повідомлення про баг на цій вебсторінці. Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------\nЗображення куполу Хаф-Доум | Є текст заміщення, але немає зображення\n# Завдання\n* Знайдіть і усуньте проблему, яка спричиняє цей баг.",
        "CSD U2 Image Tag Mispelled src_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Налагодження: відсутнє зображення\n\nХтось залишив повідомлення про баг на цій вебсторінці. Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------\nЗображення куполу Хаф-Доум | Є текст заміщення, але немає зображення\n# Завдання\n* Знайдіть і усуньте проблему, яка спричиняє цей баг.",
        "CSD U2 Image Tag No End Quote_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Налагодження: відсутнє зображення\n\nХтось залишив повідомлення про баг на цій вебсторінці. Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------\nЗображення повітряних кульок | Зображення відсутнє\n# Завдання\n* Знайдіть і усуньте проблему, яка спричиняє цей баг.",
        "CSD U2 Image Tag No End Quote_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n</div>\n\n# Налагодження: відсутнє зображення\n\nХтось залишив повідомлення про баг на цій вебсторінці. Чи зможете ви виправити баг?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------\nЗображення повітряних кульок | Зображення відсутнє\n# Завдання\n* Знайдіть і усуньте проблему, яка спричиняє цей баг.",
        "CSD U2 Image assessment_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Все у наших руках!\n\nМожна використовувати зображення, щоб зробити вебсторінку більш персоналізованою.\n\n# Завдання\n\n-   Додайте зображення на сторінку.\n-   Дотримуйтесь правил щодо авторських прав, іменування та використання правильних стилів кодування.",
        "CSD U2 Image assessment_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Все у наших руках!\n\nМожна використовувати зображення, щоб зробити вебсторінку більш персоналізованою.\n\n# Завдання\n\n-   Додайте зображення на сторінку.\n-   Дотримуйтесь правил щодо авторських прав, іменування та використання правильних стилів кодування.",
        "CSD U2 Image choose name_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Обираємо гарну назву\n\nВажливо, щоб зображення мали гарні назви, які легко зрозуміти, і щоб у назвах використовувася символи, які добре підходять для посилань.  У назвах зображень цього проєкту є деякі проблеми.\n\n# Завдання\n\n-   Виправте назву кожного зображення відповідно до таких правил:\n    -   Уникайте спеціальних символів, як-от `&`, `?`, `%`, `/`, `(`, etc.\n    -   Слідкуйте за тим, щоб назва мала конкретне значення, яке допоможе вам зрозуміти вміст зображення.\n    -   Використовуйте тире (`-`) або символи підкреслення (`_`) замість пробілів.\n    -   Назви повинні бути якомога коротшими, але водночас мати чітке значення.\n-   Оберіть вподобане зображення і додайте його на вебсторінку.\n    -   Не забувайте про авторство!\n\n| Image                                                                                 | Amphibian                       | Attribution                                                                              |\n| ------------------------------------------------------------------------------------- | ------------------------------- | ---------------------------------------------------------------------------------------- |\n| ![](https://images.code.org/31687e55efb5efae6bb9826261c7cd82-image-1565125236060.jpg) |    **чагарникова жаба кані**    | Rison Thumboor - Wikimedia Commons - CC-BY-SA                                            |\n| ![](https://images.code.org/8414d11eb143e3ef2a8fd3f67922774e-image-1565124534341.png) |    **карликова райка**          | Rittmeyer EN, Allison A, Gründler MC, Thompson DK, Austin CC - Wikimedia Commons - CC-BY |\n| ![](https://images.code.org/695749afb3107d506c340b2e6b215307-image-1565124851451.jpg) |    **райка червоноока**         | Carey James Balboa - Wikimedia Commons - Public Domain                                   |\n| ![](https://images.code.org/9ba9eee1e7eb7e706dcab14714401207-image-1565124855000.jpg) |    **саламандра вогняна**       | Cristo Vlahos - Wikimedia Commons - CC-BY                                                |\n| ![](https://images.code.org/512a972eb6d9ef431e648d01a0efc6cc-image-1565124857450.jpg) |    **аксолотль**                | th1098 - Wikimedia Commons - CC-BY-SA                                                    |",
        "CSD U2 Image choose name_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як додавати зображення?**]\nТег `<img>` дозволяє відображати зображення на вебсторінці. <br><br>\n\nПриклад:\n\n    <img src=\"dog.png\" alt=\"dog jumping\">\n\n<br><br>\n\nЩоб вказати браузеру, який файл використовувати, до тегу \\<img> в дужках додається додаткова інформація, яка називається **атрибут**. Атрибут `src` розшифровується як **s**ou**rc**e (джерело) і вказує на назву зображення. Назви файлів зображень містять розширення, які вказують комп'ютеру, з яким типом зображення він має справу. Найпоширенішими розширеннями є .jpg, .jpeg, .png. <br><br>\n\nОкрім атрибуту src, елементи зображень також мають атрибут `alt`, який описує зображення. Це важливо у випадку, якщо зображення не завантажується, або для людей, які мають проблеми із зором. <br><br>\n\nТег `<img>` є прикладом **самозакривного тегу**, оскільки він починається і закривається в одному тегу.\n:::\n\n::: details [**Чому тег зображення не має закривного тегу?**]\nТег зображення не потребує закривного тегу, оскільки він не містить текстового вмісту, який потрібно обгортати тегами. Вміст, який відображається на екрані, задається за допомогою атрибутів тегу.\n:::\n\n::: details [**Що таке атрибут?**]\nАтрибути - це додаткова інформація, що міститься в тегу. Атрибути мають назви та значення. Назва вказує на тип інформації, що надається, а значення надає конкретну інформацію для цього тегу.\n\nНаприклад, теги \\<img> мають два атрибути, src і alt. src вказує ім'я файлу зображення, а alt повідомляє браузеру читабельним текстом, що міститься на зображені.\n:::\n\n</div>\n\n# Обираємо гарну назву\n\nВажливо, щоб зображення мали гарні назви, які легко зрозуміти, і щоб у назвах використовувася символи, які добре підходять для посилань.  У назвах зображень цього проєкту є деякі проблеми.\n\n# Завдання\n\n-   Виправте назву кожного зображення відповідно до таких правил:\n    -   Уникайте спеціальних символів, як-от `&`, `?`, `%`, `/`, `(`, etc.\n    -   Слідкуйте за тим, щоб назва мала конкретне значення, яке допоможе вам зрозуміти вміст зображення.\n    -   Використовуйте тире (`-`) або символи підкреслення (`_`) замість пробілів.\n    -   Назви повинні бути якомога коротшими, але водночас мати чітке значення.\n-   Оберіть вподобане зображення і додайте його на вебсторінку.\n    -   Не забувайте про авторство!\n\n| Image                                                                                 | Amphibian                       | Attribution                                                                              |\n| ------------------------------------------------------------------------------------- | ------------------------------- | ---------------------------------------------------------------------------------------- |\n| ![](https://images.code.org/31687e55efb5efae6bb9826261c7cd82-image-1565125236060.jpg) |    **чагарникова жаба кані**    | Rison Thumboor - Wikimedia Commons - CC-BY-SA                                            |\n| ![](https://images.code.org/8414d11eb143e3ef2a8fd3f67922774e-image-1565124534341.png) |    **карликова райка**          | Rittmeyer EN, Allison A, Gründler MC, Thompson DK, Austin CC - Wikimedia Commons - CC-BY |\n| ![](https://images.code.org/695749afb3107d506c340b2e6b215307-image-1565124851451.jpg) |    **райка червоноока**         | Carey James Balboa - Wikimedia Commons - Public Domain                                   |\n| ![](https://images.code.org/9ba9eee1e7eb7e706dcab14714401207-image-1565124855000.jpg) |    **саламандра вогняна**       | Cristo Vlahos - Wikimedia Commons - CC-BY                                                |\n| ![](https://images.code.org/512a972eb6d9ef431e648d01a0efc6cc-image-1565124857450.jpg) |    **аксолотль**                | th1098 - Wikimedia Commons - CC-BY-SA                                                    |",
        "CSD U2 Inspector Warm Up_2018": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary>\n<strong><span> Як користуватися інструментом інспектор? </span></strong>\n</summary>\n\nІнструмент інспектор - це чудовий спосіб дізнатися більше про незнайомий код у Web Lab.Щоб увімкнути Інструмент інспектор, натисніть <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png\" style=\"width:100px\">.Ви дізнаєтеся, що Інструмент інспектор увімкнено, тому що кнопка стане білою і скаже \"Інспектор: Увімкнено\".Після того, як ви увімкнете Інструмент інспектор, ви можете навести курсор на будь-що в області попереднього перегляду, і Web Lab виділить код, який робить цю частину сторінки відображеною.\n\n</details>\n</div>\n\n# Дослідження HTML\n\nЦе веб-сторінка, написана HTML, мовою програмування.Ви дізнаєтесь більше про те, як він працює, але спочатку вивчіть його за допомогою Інстумента інспектор.\n\n# Зроби це\n\n-   Натисніть Порада \"Як користуватися Інструментом інспектор?\" праворуч, щоб дізнатися, як користуватися Ігструментом інспектор.\n-   Дотримуйтесь інструкцій на веб-сторінці, щоб її вивчити та обговорити з партнером, як вона працює.",
        "CSD U2 Inspector Warm Up_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як користуватися інструментом «Інспектор»?**]\n\nІнструмент «Інспектор» i— це чудовий спосіб дізнатися більше про незнайомий код у Веб лабораторії. Щоб запустити Інструмент «Інспектор», клацніть кнопку<img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png\" style=\"width:100px\">. Ви знатимете, що інструмент «Інспектор» увімкнений, коли кнопка стане білою і на ній з'явиться напис «Інспектор: Увімкнено». Увімкнувши інструмент «Інспектор», ви можете навести курсор миші на будь-яке місце в області попереднього перегляду, і Веб лабораторія виділить код, який забезпечує відображення цієї частини сторінки.\n\n:::\n\n</div>\n\n# Досліджуємо HTML\n\nЦе вебсторінка, написана мовою HTML, мовою вебу. Згодом ми дізнаємося більше про те, як вона працює, але спочатку дослідимо її за допомогою інструменту «Інспектор».\n\n# Завдання\n\n-   Натисніть на підказку «Як користуватися інструментом «Інспектор»?\" праворуч, щоб дізнатися, як користуватися інструментом «Інспектор».\n-   Дотримуйтеся інструкцій, щоб дослідити вебсторінку та обговорити з партнером, як вона працює.",
        "CSD U2 Inspector Warm Up_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як користуватися інструментом «Інспектор»?**]\n\nІнструмент «Інспектор» i— це чудовий спосіб дізнатися більше про незнайомий код у Веб лабораторії. Щоб запустити Інструмент «Інспектор», клацніть кнопку<img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png\" style=\"width:100px\">. Ви знатимете, що інструмент «Інспектор» увімкнений, коли кнопка стане білою і на ній з'явиться напис «Інспектор: Увімкнено». Увімкнувши інструмент «Інспектор», ви можете навести курсор миші на будь-яке місце в області попереднього перегляду, і Веб лабораторія виділить код, який забезпечує відображення цієї частини сторінки.\n\n:::\n\n</div>\n\n# Досліджуємо HTML\n\nЦе вебсторінка, написана мовою HTML, мовою вебу. Згодом ми дізнаємося більше про те, як вона працює, але спочатку дослідимо її за допомогою інструменту «Інспектор».\n\n# Завдання\n\n-   Натисніть на підказку «Як користуватися інструментом «Інспектор»?\" праворуч, щоб дізнатися, як користуватися інструментом «Інспектор».\n-   Дотримуйтеся інструкцій, щоб дослідити вебсторінку та обговорити з партнером, як вона працює.",
        "CSD U2 Pair Programming Video_2021": "## Запитання для обмірковування:\n\n-   Як ви думаєте, чому професійні програмісти використовують парне програмування?\n-   Як, на вашу думку, парне програмування допоможе вам програмувати краще?",
        "CSD U2 Pair Programming Video_2022": "## Запитання для обмірковування:\n\n-   Як ви думаєте, чому професійні програмісти використовують парне програмування?\n-   Як, на вашу думку, парне програмування допоможе вам програмувати краще?",
        "CSD U2 RGB intro_2021": "# Кольори RGB\n\nУсі кольори, незалежно від того, чи мають вони назву, чи ні, можна описати за рівнем червоного, зеленого та синього світла, який потрібен для їхнього створення. Це називається значенням RGB (скорочено від Red-Green-Blue - червоний-зелений-синій). Ви можете скористатися віджетом зліва, щоб спробувати різні значення RGB і подивитися, які кольори вони створюють.\n\n* Використовуйте повзунки для регулювання рівнів червоного, зеленого та синього світла.\n* Для кожного з наведених нижче кольорів знайдіть відповідність його RGB-значенню.\n\nA) червоний: 216, зелений: 191, синій: 216 - rgb(216,191,216)\n\nB) червоний: 255, зелений: 239, синій: 213 - rgb(255,239,213)\n\nC) червоний: 250, зелений: 128, синій: 114 - rgb(250,128,114)\n\nD) червоний: 70, зелений: 130, синій: 180 - rgb(70, 130, 180)\n\nE) червоний: 107, зелений: 142, синій: 35 - rgb(107,142,35)\n\n\n<div style=\"font-size: 16px\">\n\n::: details [**Чому червоний і зелений дають жовтий колір?**]\nКоли ми змішуємо фарби, червоний і зелений дають коричневий, але під час змішування кольорів RGB замість фарби використовується світло, тому кольори змішуються по-іншому. RGB використовує _адитивне змішування кольорів_. Під час адитивного змішування червоний і зелений дають жовтий, червоний і синій - пурпурний, а синій і зелений - блакитний. Коли ви змішуєте три основні кольори разом (червоний, зелений і синій), вони утворюють білий. Докладніше можна прочитати а посиланням <a href=\"https://en.wikipedia.org/wiki/Additive_color\" target=\"_new\">Wikipedia - Additive Color</a>\n:::\n\n::: details [**Скільки кольорів можна створити за допомогою змішування кольорів RGB?**]\nЗмішування кольорів RGB дозволяє створити понад шістнадцять мільйонів різних кольорів.\n:::\n</div>\n",
        "CSD U2 RGB intro_2022": "# Кольори RGB\n\nУсі кольори, незалежно від того, чи мають вони назву, чи ні, можна описати за рівнем червоного, зеленого та синього світла, який потрібен для їхнього створення. Це називається значенням RGB (скорочено від Red-Green-Blue - червоний-зелений-синій). Ви можете скористатися віджетом зліва, щоб спробувати різні значення RGB і подивитися, які кольори вони створюють.\n\n* Використовуйте повзунки для регулювання рівнів червоного, зеленого та синього світла.\n* Для кожного з наведених нижче кольорів знайдіть відповідність його RGB-значенню.\n\nA) червоний: 216, зелений: 191, синій: 216 - rgb(216,191,216)\n\nB) червоний: 255, зелений: 239, синій: 213 - rgb(255,239,213)\n\nC) червоний: 250, зелений: 128, синій: 114 - rgb(250,128,114)\n\nD) червоний: 70, зелений: 130, синій: 180 - rgb(70, 130, 180)\n\nE) червоний: 107, зелений: 142, синій: 35 - rgb(107,142,35)\n\n\n<div style=\"font-size: 16px\">\n\n::: details [**Чому червоний і зелений дають жовтий колір?**]\nКоли ми змішуємо фарби, червоний і зелений дають коричневий, але під час змішування кольорів RGB замість фарби використовується світло, тому кольори змішуються по-іншому. RGB використовує _адитивне змішування кольорів_. Під час адитивного змішування червоний і зелений дають жовтий, червоний і синій - пурпурний, а синій і зелений - блакитний. Коли ви змішуєте три основні кольори разом (червоний, зелений і синій), вони утворюють білий. Докладніше можна прочитати а посиланням <a href=\"https://en.wikipedia.org/wiki/Additive_color\" target=\"_new\">Wikipedia - Additive Color</a>\n:::\n\n::: details [**Скільки кольорів можна створити за допомогою змішування кольорів RGB?**]\nЗмішування кольорів RGB дозволяє створити понад шістнадцять мільйонів різних кольорів.\n:::\n</div>\n",
        "CSD U2 add content": "# Додати HTML\n\nДалі слід додати HTML на свої сторінки.\n\n# Зроби це\n\n-   Для кожної з нових сторінок, які ви створили, додайте HTML, щоб зробити сторінку, ескіз якої ви створили у вашому проектному посібнику.\n-   Ви також можете додати більше HTML до сторінок, які ви вже створили.",
        "CSD U2 add content_2018": "# Додати HTML\n\nДалі слід додати HTML на свої сторінки.\n\n# Зроби це\n\n-   Для кожної з нових сторінок, які ви створили, додайте HTML, щоб зробити сторінку, ескіз якої ви створили у вашому проектному посібнику.\n-   Ви також можете додати більше HTML до сторінок, які ви вже створили.",
        "CSD U2 add content_2019": "# Додати HTML\n\nДалі слід додати HTML на свої сторінки.\n\n# Зроби це\n\n-   Для кожної з нових сторінок, які ви створили, додайте HTML, щоб зробити сторінку, ескіз якої ви створили у вашому проектному посібнику.\n-   Ви також можете додати більше HTML до сторінок, які ви вже створили.",
        "CSD U2 add content_2021": "# Додавання HTML-коду\n\nДалі треба додати HTML-код до сторінки.\n\n# Завдання\n\n-   Додайте HTML, щоб створити сторінку за ескізом з плану проєкту.\n-   Перевірте, чи є на сторінці все, що хотілося б, і внесіть необхідні зміни.",
        "CSD U2 add content_2022": "# Додавання HTML-коду\n\nДалі треба додати HTML-код до сторінки.\n\n# Завдання\n\n-   Додайте HTML, щоб створити сторінку за ескізом з плану проєкту.\n-   Перевірте, чи є на сторінці все, що хотілося б, і внесіть необхідні зміни.",
        "CSD U2 add file_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, клацніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати мою таблицю стилів?**]\nВи можете назвати свою таблицю стилів як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл. Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як змінити ім'я файлу?**]\nЩоб перейменувати файл, ви можете клацнути правою кнопкою миші (або натиснути клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати пункт \"Перейменувати\". Це дозволить ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як прив'язати таблицю стилів до вебсторінки?**]\nЩоб прив'язати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте код `<link rel=\"stylesheet\" href=\"style.css\">`.  Після цього змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n\n</div>\n\n# Додавання нової таблиці стилів\n\nЦей розробник працював над стилями для сторінки, але забув додати таблицю стилів, тому жоден з них не працює!\n\n# Завдання\n\n-   Усередині HTML-сторінки додайте код, який прив'яже таблицю стилів до вебсторінки: `<link rel=\"stylesheet\" href=\"style.css\">`\n\n<img src=\"https://images.code.org/8547566ed80fc36c7184d1bf16578e99-image-1636648304895.png\" style=\" max-width:500px\">\n\n-   Переконайтеся, що веб-сайт оновлюється з урахуванням нових кольорів і шрифтів з файлу `style.css`.",
        "CSD U2 add file_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, клацніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати мою таблицю стилів?**]\nВи можете назвати свою таблицю стилів як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл. Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як змінити ім'я файлу?**]\nЩоб перейменувати файл, ви можете клацнути правою кнопкою миші (або натиснути клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати пункт \"Перейменувати\". Це дозволить ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як прив'язати таблицю стилів до вебсторінки?**]\nЩоб прив'язати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте код `<link rel=\"stylesheet\" href=\"style.css\">`.  Після цього змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n\n</div>\n\n# Додавання нової таблиці стилів\n\nЦей розробник працював над стилями для сторінки, але забув додати таблицю стилів, тому жоден з них не працює!\n\n# Завдання\n\n-   Усередині HTML-сторінки додайте код, який прив'яже таблицю стилів до вебсторінки: `<link rel=\"stylesheet\" href=\"style.css\">`\n\n<img src=\"https://images.code.org/8547566ed80fc36c7184d1bf16578e99-image-1636648304895.png\" style=\" max-width:500px\">\n\n-   Переконайтеся, що веб-сайт оновлюється з урахуванням нових кольорів і шрифтів з файлу `style.css`.",
        "CSD U2 add style_2021": "# Спробуйте самостійно!\n\nТепер, після ознайомлення з різними способами зміни стілів, настав час випробувати їх самостійно.  Ось вебсторінка, яку ми вже бачили раніше, але вона потребує певного стилю!\n\n# Завдання\n\n-   Додайте фоновий колір вебсторінки.\n-   Зробіть так, щоб усі зображення вирівнювалися за правим краєм сторінки.\n-   Змініть колір усього тексту.\n-   Додайте будь-які інші стилі за власним бажанням.",
        "CSD U2 add style_2022": "# Спробуйте самостійно!\n\nТепер, після ознайомлення з різними способами зміни стілів, настав час випробувати їх самостійно.  Ось вебсторінка, яку ми вже бачили раніше, але вона потребує певного стилю!\n\n# Завдання\n\n-   Додайте фоновий колір вебсторінки.\n-   Зробіть так, щоб усі зображення вирівнювалися за правим краєм сторінки.\n-   Змініть колір усього тексту.\n-   Додайте будь-які інші стилі за власним бажанням.",
        "CSD U2 adding pages_2021": "# Додавання нових сторінок\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nЩоб створити багатосторінковий вебсайт, потрібно буде додати кілька сторінок до свого проєкту. Щоб попрактикуватися, розділимо вміст цього прикладу на дві сторінки і зв'яжемо їх між собою.\n\n# Завдання\n\n-   Додайте новий HTML-файл, натиснувши кнопку ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38 PM.png>).  Новий файл з'явиться у списку файлів у лівій частині робочої області.\n-   Перейменуте файл, клацнувши на ньому правою кнопкою миші і обравши \"Перейменувати\", або клацнувши на ньому, коли він вже виділений.  **Впевніться, що ім'я є унікальним, описовим і закінчується на \".html \"**.\n-   Використовуйте HTML, щоб заповнити свою нову сторінку. (Можна використовувати вміст з головної сторінки).\n-   Додайте посилання на нову сторінку з файлу \"index.html\"\n-   Додайте посилання на індекс з нової сторінки.",
        "CSD U2 adding pages_2022": "# Додавання нових сторінок\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nЩоб створити багатосторінковий вебсайт, потрібно буде додати кілька сторінок до свого проєкту. Щоб попрактикуватися, розділимо вміст цього прикладу на дві сторінки і зв'яжемо їх між собою.\n\n# Завдання\n\n-   Додайте новий HTML-файл, натиснувши кнопку ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38 PM.png>).  Новий файл з'явиться у списку файлів у лівій частині робочої області.\n-   Перейменуте файл, клацнувши на ньому правою кнопкою миші і обравши \"Перейменувати\", або клацнувши на ньому, коли він вже виділений.  **Впевніться, що ім'я є унікальним, описовим і закінчується на \".html \"**.\n-   Використовуйте HTML, щоб заповнити свою нову сторінку. (Можна використовувати вміст з головної сторінки).\n-   Додайте посилання на нову сторінку з файлу \"index.html\"\n-   Додайте посилання на індекс з нової сторінки.",
        "CSD U2 classes haikus_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Хайку!\n\nНа цій сторінці є кілька різних хайку.\n\n# Завдання\n\n-   Оберіть одне хайку і надайте йому особливого вигляду, створивши клас для тегів абзацу та заголовка.  Використайте принаймні три властивості CSS.\n\n<details><summary>Що робить тег <strong>&lt;br&gt;</strong>?</summary>\n\nТег \\<br> використовується тут для початку нового рядка всередині одного абзацу. У коді нижче кожен вірш все ще розглядається як один великий абзац. Однак, тег \\<br> поміщає кожен рядок хайку в окремий рядок.  Теги \\<br>  не потребують додавання жодних CSS або класів.</em>\n\n</details>",
        "CSD U2 classes haikus_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Хайку!\n\nНа цій сторінці є кілька різних хайку.\n\n# Завдання\n\n-   Оберіть одне хайку і надайте йому особливого вигляду, створивши клас для тегів абзацу та заголовка.  Використайте принаймні три властивості CSS.\n\n<details><summary>Що робить тег <strong>&lt;br&gt;</strong>?</summary>\n\nТег \\<br> використовується тут для початку нового рядка всередині одного абзацу. У коді нижче кожен вірш все ще розглядається як один великий абзац. Однак, тег \\<br> поміщає кожен рядок хайку в окремий рядок.  Теги \\<br>  не потребують додавання жодних CSS або класів.</em>\n\n</details>",
        "CSD U2 classes humors_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Чотири темпераменти\n\nНа цій сторінці описані чотири типи температменту, але лише один з описів стилізований з використанням спеціального класу.\n\n# Завдання\n\n-   Перегляньте код, щоб побачити, як працює клас \"сангвінік\".\n-   Додайте новий клас для одного з інших типів температменту.\n    -   Додайте клас і набір правил у файл `style.css`.\n    -   Додайте елементи до класу у файлі `index.html`.",
        "CSD U2 classes humors_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Чотири темпераменти\n\nНа цій сторінці описані чотири типи температменту, але лише один з описів стилізований з використанням спеціального класу.\n\n# Завдання\n\n-   Перегляньте код, щоб побачити, як працює клас \"сангвінік\".\n-   Додайте новий клас для одного з інших типів температменту.\n    -   Додайте клас і набір правил у файл `style.css`.\n    -   Додайте елементи до класу у файлі `index.html`.",
        "CSD U2 classes months_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n```\n.top-img {\n  height: 50px;\n  border-radius: 5px;\n  margin: 10px;\n}\n```\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n</div>\n\n# Ваш улюблений місяць\n\nНа цій сторінці міститься інформація про різні місяці року.\n\n# Завдання\n\n* Створіть клас для свого  улюбленого місяця, щоб він відрізнявся від інших. Використайте принаймні три властивості в наборі правил CSS.\n",
        "CSD U2 classes months_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n```\n.top-img {\n  height: 50px;\n  border-radius: 5px;\n  margin: 10px;\n}\n```\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n</div>\n\n# Ваш улюблений місяць\n\nНа цій сторінці міститься інформація про різні місяці року.\n\n# Завдання\n\n* Створіть клас для свого  улюбленого місяця, щоб він відрізнявся від інших. Використайте принаймні три властивості в наборі правил CSS.\n",
        "CSD U2 classes music_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n```\n.top-img {\n  height: 50px;\n  border-radius: 5px;\n  margin: 10px;\n}\n```\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n</div>\n\n# Індивідуальні ідентифікатори\n\nЩоб виділити лише один елемент для набору правил, можна використовувати атрибут `id` .  \n\n# Завдання\n* Розгляньте елемент зображення з тегом `<img id=\"notes\" src=\"Raseone-Music.png\" alt=\"music notes\">` і зверніть увагу на атрибут `id`.\n* У файлі `style.css` перегляньте набір правил з селектором `#notes`. Зверніть увагу, що тут замість крапки використовується `#`.\n* Оберіть зображення з-поміж доступних файлів, додайте його на сторінку і надайте йому власний стиль.\n",
        "CSD U2 classes music_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n```\n.top-img {\n  height: 50px;\n  border-radius: 5px;\n  margin: 10px;\n}\n```\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n</div>\n\n# Індивідуальні ідентифікатори\n\nЩоб виділити лише один елемент для набору правил, можна використовувати атрибут `id` .  \n\n# Завдання\n* Розгляньте елемент зображення з тегом `<img id=\"notes\" src=\"Raseone-Music.png\" alt=\"music notes\">` і зверніть увагу на атрибут `id`.\n* У файлі `style.css` перегляньте набір правил з селектором `#notes`. Зверніть увагу, що тут замість крапки використовується `#`.\n* Оберіть зображення з-поміж доступних файлів, додайте його на сторінку і надайте йому власний стиль.\n",
        "CSD U2 classes seasons_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n```\n.top-img {\n  height: 50px;\n  border-radius: 5px;\n  margin: 10px;\n}\n```\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Налагодження: чотири пори року\n\nУ цій сторінці є окремий клас для кожної з чотирьох пір року, але клас для осені не працює.\n\n# Завдання\n\n* Знайдіть помилку в класі для осені і виправте код так, щоб клас робив текст темно-червоним.\n",
        "CSD U2 classes seasons_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n```\n.top-img {\n  height: 50px;\n  border-radius: 5px;\n  margin: 10px;\n}\n```\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів. Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\"> `.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Налагодження: чотири пори року\n\nУ цій сторінці є окремий клас для кожної з чотирьох пір року, але клас для осені не працює.\n\n# Завдання\n\n* Знайдіть помилку в класі для осені і виправте код так, щоб клас робив текст темно-червоним.\n",
        "CSD U2 classes waterfalls_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів.  Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора.  Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробник використовує класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Використання класів\n\nНа цій сторінці про водоспади використовуються класи, щоб зробити зображення у верхній частині сторінки відмінними за стилем від зображень в основній частині сторінки.\n\n# Завдання\n\n-   Знайдіть набір правил CSS у файлі `style.css`, який робить зображення у верхній частині сторінки меншими, ніж в основній частині сторінки.\n-   Додайте нове правило до одного з класів і впевніться, що воно впливає лише на зображення цього класу.",
        "CSD U2 classes waterfalls_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібен клас, набір правил і елементи, додані до класу.\n\nКлас img-top створюється в таблиці стилів і включає три правила класу в своєму наборі правил.\n\n    .top-img {\n      height: 50px;\n      border-radius: 5px;\n      margin: 10px;\n    }\n\nКод у HTML-файлі додає елементи до класів за допомогою атрибутів всередині тегів.  Наприклад, код для додавання зображення до класу `img-top` - це `<img class=\"top-img\" src=\"angelfalls.jpeg\" alt=\"Parakupá Vená / Angel Falls\">`.  Цей шаблон можна використовувати в більшості тегів.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора.  Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробники використовують класи?**]\nВеб-розробник використовує класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n</div>\n\n# Використання класів\n\nНа цій сторінці про водоспади використовуються класи, щоб зробити зображення у верхній частині сторінки відмінними за стилем від зображень в основній частині сторінки.\n\n# Завдання\n\n-   Знайдіть набір правил CSS у файлі `style.css`, який робить зображення у верхній частині сторінки меншими, ніж в основній частині сторінки.\n-   Додайте нове правило до одного з класів і впевніться, що воно впливає лише на зображення цього класу.",
        "CSD U2 external links_2021": "# Створення посилань на зовнішні сторінки\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n:::\n\n::: details [**Як знайти URL-адресу вебсайту?**]\nПерейдіть на вебсайт, на який хочете додати посилання, і скопіюйте текст з адресного рядка (наприклад, \"https://www.google.com\" для Google). Після цього можна використовувати цю адресу для власних посилань.\n:::\n\n::: details [**Як створювати зовнішні посилання?**]\nВставте усю URL-адресу (включно з \"http://\") в атрибут href тегу `<a>`, як показано нижче:\n```\n<a href=\"https://www.google.com\">Клацни, щоб перейти до Google </a>\n```\n:::\n</div>\n\nТакож можна створювати посилання, які ведуть на інші веб-сайти, як-от Google, використовуючи тег `<a>`..\n\n# Завдання:\n* Перегляньте код, який містить посилання на Google, і спробуйте зрозуміти, як він працює\n* Додайте посилання на свої улюблені веб-сайти і розкажіть, чому вони тобі подобаються!\n\n",
        "CSD U2 external links_2022": "# Створення посилань на зовнішні сторінки\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n:::\n\n::: details [**Як знайти URL-адресу вебсайту?**]\nПерейдіть на вебсайт, на який хочете додати посилання, і скопіюйте текст з адресного рядка (наприклад, \"https://www.google.com\" для Google). Після цього можна використовувати цю адресу для власних посилань.\n:::\n\n::: details [**Як створювати зовнішні посилання?**]\nВставте усю URL-адресу (включно з \"http://\") в атрибут href тегу `<a>`, як показано нижче:\n```\n<a href=\"https://www.google.com\">Клацни, щоб перейти до Google </a>\n```\n:::\n</div>\n\nТакож можна створювати посилання, які ведуть на інші веб-сайти, як-от Google, використовуючи тег `<a>`..\n\n# Завдання:\n* Перегляньте код, який містить посилання на Google, і спробуйте зрозуміти, як він працює\n* Додайте посилання на свої улюблені веб-сайти і розкажіть, чому вони тобі подобаються!\n\n",
        "CSD U2 header footer": "# Панель навігації та нижній колонтитул\n\nКожна ваша сторінка потребує навігаційної панелі і нижнього колонтитула.\n\n# Зроби це\n\n-   Переконайтеся, що для кожної сторінки є панель навігації, яка посилається на інші сторінки вашого сайту. Щоб переглянути навігаційну панель, перейдіть до <a href=\"4\" target=\"_new\"> уроку 9, рівень 4 </a>.\n-   Для кожної сторінки переконайтеся, що внизу вона має нижній колонтитул, що пояснює інформацію про авторські права для вашої сторінки. (Перейдіть до <a href=\"https://creativecommons.org/choose/\" target=\"_new\">Творчі спільноти</a>за допомогу у створенні цього HTML.)",
        "CSD U2 header footer_2018": "# Панель навігації та нижній колонтитул\n\nКожна ваша сторінка потребує навігаційної панелі і нижнього колонтитула.\n\n# Зроби це\n\n-   Переконайтеся, що для кожної сторінки є панель навігації, яка посилається на інші сторінки вашого сайту. Щоб переглянути навігаційну панель, перейдіть до <a href=\"4\" target=\"_new\"> уроку 9, рівень 4 </a>.\n-   Для кожної сторінки переконайтеся, що внизу вона має нижній колонтитул, що пояснює інформацію про авторські права для вашої сторінки. (Перейдіть до <a href=\"https://creativecommons.org/choose/\" target=\"_new\">Творчі спільноти</a>за допомогу у створенні цього HTML.)",
        "CSD U2 header footer_2019": "# Панель навігації та нижній колонтитул\n\nКожна ваша сторінка потребує навігаційної панелі і нижнього колонтитула.\n\n# Зроби це\n\n-   Переконайтеся, що для кожної сторінки є панель навігації, яка посилається на інші сторінки вашого сайту. Щоб переглянути навігаційну панель, перейдіть до <a href=\"4\" target=\"_new\"> уроку 9, рівень 4 </a>.\n-   Для кожної сторінки переконайтеся, що внизу вона має нижній колонтитул, що пояснює інформацію про авторські права для вашої сторінки. (Перейдіть до <a href=\"https://creativecommons.org/choose/\" target=\"_new\">Творчі спільноти</a>за допомогу у створенні цього HTML.)",
        "CSD U2 image links_2021": "# Зображення як посилання\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n:::\n\n::: details [**За якими правилами слід називати посилання?]\nТексти посилань повинні допомагати користувачеві легко зрозуміти, куди він переходить.  Деякі корисні правила:\n\n1.  Додайте гарний опис посилання, який має сенс навіть без прочитання всього тексту навколо нього. Наприклад, \"перейдіть сюди\" або \"дізнатися більше\" не говорять про те, куди перейде або про що дізнається користувач.\n2.  Вказуйте назву посилання звичайним текстом, а не просто повторюйте URL-адресу в тексті посилання. Наприклад, \"Головна\" або \"Домашня сторінка\" легше прочитати, ніж \"index.html\".\n3.  Не додавайте занадто багато тексту. Читачі не зрозуміють, про що конкретно йдеться у посиланні.\n:::\n\n::: details [**Як знайти URL-адресу вебсайту?**]\nПерейдіть на вебсайт, на який хочете додати посилання, і скопіюйте текст з адресного рядка (наприклад, \"https://www.google.com\" для Google). Після цього можна використовувати цю адресу для власних посилань.\n:::\n\n::: details [**Як створювати зовнішні посилання?**]\nВставте усю URL-адресу (включно з \"http://\") в атрибут href тегу `<a>`, як показано нижче:\n```\n<a href=\"https://www.google.com\">Клацни, щоб перейти до Google </a>\n```\n:::\n</div>\n\nВи вже знаєте, що текст, який ми вводимо між тегами `<a>` і `</a>`, - це те, що відвідувачі сторінки побачать, і на що вони клацатимуть, коли переходитимуть за посиланнями. Можна також додавати інші теги та вміст, наприклад, зображення, в цей простір коду.\n\n# Завдання:\n* Перегляньте код, який перетворює перші два зображення на сторінці `index.html` на посилання.\n* Використовуйте той самий шаблон коду, щоб перетворити два інших зображення на посилання.\n\n",
        "CSD U2 image links_2022": "# Зображення як посилання\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n:::\n\n::: details [**За якими правилами слід називати посилання?]\nТексти посилань повинні допомагати користувачеві легко зрозуміти, куди він переходить.  Деякі корисні правила:\n\n1.  Додайте гарний опис посилання, який має сенс навіть без прочитання всього тексту навколо нього. Наприклад, \"перейдіть сюди\" або \"дізнатися більше\" не говорять про те, куди перейде або про що дізнається користувач.\n2.  Вказуйте назву посилання звичайним текстом, а не просто повторюйте URL-адресу в тексті посилання. Наприклад, \"Головна\" або \"Домашня сторінка\" легше прочитати, ніж \"index.html\".\n3.  Не додавайте занадто багато тексту. Читачі не зрозуміють, про що конкретно йдеться у посиланні.\n:::\n\n::: details [**Як знайти URL-адресу вебсайту?**]\nПерейдіть на вебсайт, на який хочете додати посилання, і скопіюйте текст з адресного рядка (наприклад, \"https://www.google.com\" для Google). Після цього можна використовувати цю адресу для власних посилань.\n:::\n\n::: details [**Як створювати зовнішні посилання?**]\nВставте усю URL-адресу (включно з \"http://\") в атрибут href тегу `<a>`, як показано нижче:\n```\n<a href=\"https://www.google.com\">Клацни, щоб перейти до Google </a>\n```\n:::\n</div>\n\nВи вже знаєте, що текст, який ми вводимо між тегами `<a>` і `</a>`, - це те, що відвідувачі сторінки побачать, і на що вони клацатимуть, коли переходитимуть за посиланнями. Можна також додавати інші теги та вміст, наприклад, зображення, в цей простір коду.\n\n# Завдання:\n* Перегляньте код, який перетворює перші два зображення на сторінці `index.html` на посилання.\n* Використовуйте той самий шаблон коду, щоб перетворити два інших зображення на посилання.\n\n",
        "CSD U2 layout style animal challenge_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n</div>\n\n# Завдання:  Стиль вебсторінки про тварин\n\nНам надано базову вебсторінку про види тварин, що перебувають під загрозою зникнення. Виконайте ці завдання, щоб додати їй стилю:\n* Створіть фоновий колір або зображення для сторінки.\n* Зробіть так, щоб зображення мали однакову висоту або ширину.\n* Додайте унікальний стиль для кожного заголовка: сімейство шрифтів, колір, розмір, оформлення тощо.\n* Вирівняйте всі зображення за лівим краєм.\n* Додайте поля та зелену рамку навколо зображень.\n* Додайте будь-який інший стиль або вміст, щоб додати сторінці індивідуальності!",
        "CSD U2 layout style animal challenge_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n</div>\n\n# Завдання:  Стиль вебсторінки про тварин\n\nНам надано базову вебсторінку про види тварин, що перебувають під загрозою зникнення. Виконайте ці завдання, щоб додати їй стилю:\n* Створіть фоновий колір або зображення для сторінки.\n* Зробіть так, щоб зображення мали однакову висоту або ширину.\n* Додайте унікальний стиль для кожного заголовка: сімейство шрифтів, колір, розмір, оформлення тощо.\n* Вирівняйте всі зображення за лівим краєм.\n* Додайте поля та зелену рамку навколо зображень.\n* Додайте будь-який інший стиль або вміст, щоб додати сторінці індивідуальності!",
        "CSD U2 layout style background-url_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary>\n</summary>\n\n\n\n</details>\n</div>\n\n# Фонове зображення\n\nФоном елемента можна встановити будь-яке зображення за бажанням! Так само, як і для додавання фото, можна використовувати URL-адресу зображення.\n* Знайдіть в таблиці стилів властивість, яка керує фоновим зображенням.\n* Змініть зображення на будь-яке інше на власний вибір.\n",
        "CSD U2 layout style background-url_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary>\n</summary>\n\n\n\n</details>\n</div>\n\n# Фонове зображення\n\nФоном елемента можна встановити будь-яке зображення за бажанням! Так само, як і для додавання фото, можна використовувати URL-адресу зображення.\n* Знайдіть в таблиці стилів властивість, яка керує фоновим зображенням.\n* Змініть зображення на будь-яке інше на власний вибір.\n",
        "CSD U2 layout style border_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Які кольори можна використовувати в CSS?**]\nCSS включає найпоширеніші назви кольорів (червоний, синій, зелений і т.д.), а також багато рідкісних. Повний список назв кольорів CSS можна переглянути за посиланням <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  Можна також використовувати кольори, які не входять до названого списку, але у такому разі потрібно використовувати їхні RGB-значення. Більше про використання кольорів у CSS можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n:::\n\n::: details [**Як працює цей код?**]\nОсь код, який створює межі зображення:\n\n```\nimg {\n  border-color: saddlebrown;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 10px;\n}\n```\n\n* `img` - це _селектор_.  Він визначає, які елементи підкорятимуться правилам всередині фігурних дужок, в даному випадку - зображення.\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;` і `border-radius: 10px;` - це правила, за якими створюється межа.\n:::\n\n::: details [**Що робить властивість `border-style`?**]\nВластивість `border-style` визначає, яку межу (суцільну, пунктирну тощо) має елемент. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\n:::\n\n::: details [**Що робить властивість `border-radius`?]\nВластивість `border-radius` визначає радіус кривизни кутів елемента. Більший радіус створює більшу, м'якшу криву, а менший радіус - меншу, гострішу криву. Нульовий радіус утворює прямий кут. Детальніше про цю властивість можна прочитати за посиланням  <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\n:::\n\n::: details [**Що робить властивість float?**]\n\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється за лівим краєм, а елементи, що з'являться після нього, відображатимуться праворуч від нього. Якщо значення `float` дорівнює `right`, елемент вирівнюється за правим краєм, а елементи після нього відображатимуться ліворуч від нього. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n</div>\n\n# Межі\n\n* Знайдіть у таблиці стилів правила, які задають колір і ширину меж зображення.\n* Змініть колір і ширину меж.\n* Спробуйте різні стилі меж.\n  * Обирайте з-поміж from `dotted`, `dashed`, `solid`, і `double`\n* Додайте рамку до іншого типу елемента сторінки, наприклад, для одного із заголовків або абзаців.\n",
        "CSD U2 layout style border_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Які кольори можна використовувати в CSS?**]\nCSS включає найпоширеніші назви кольорів (червоний, синій, зелений і т.д.), а також багато рідкісних. Повний список назв кольорів CSS можна переглянути за посиланням <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  Можна також використовувати кольори, які не входять до названого списку, але у такому разі потрібно використовувати їхні RGB-значення. Більше про використання кольорів у CSS можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n:::\n\n::: details [**Як працює цей код?**]\nОсь код, який створює межі зображення:\n\n```\nimg {\n  border-color: saddlebrown;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 10px;\n}\n```\n\n* `img` - це _селектор_.  Він визначає, які елементи підкорятимуться правилам всередині фігурних дужок, в даному випадку - зображення.\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;` і `border-radius: 10px;` - це правила, за якими створюється межа.\n:::\n\n::: details [**Що робить властивість `border-style`?**]\nВластивість `border-style` визначає, яку межу (суцільну, пунктирну тощо) має елемент. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\n:::\n\n::: details [**Що робить властивість `border-radius`?]\nВластивість `border-radius` визначає радіус кривизни кутів елемента. Більший радіус створює більшу, м'якшу криву, а менший радіус - меншу, гострішу криву. Нульовий радіус утворює прямий кут. Детальніше про цю властивість можна прочитати за посиланням  <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\n:::\n\n::: details [**Що робить властивість float?**]\n\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється за лівим краєм, а елементи, що з'являться після нього, відображатимуться праворуч від нього. Якщо значення `float` дорівнює `right`, елемент вирівнюється за правим краєм, а елементи після нього відображатимуться ліворуч від нього. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n</div>\n\n# Межі\n\n* Знайдіть у таблиці стилів правила, які задають колір і ширину меж зображення.\n* Змініть колір і ширину меж.\n* Спробуйте різні стилі меж.\n  * Обирайте з-поміж from `dotted`, `dashed`, `solid`, і `double`\n* Додайте рамку до іншого типу елемента сторінки, наприклад, для одного із заголовків або абзаців.\n",
        "CSD U2 layout style borderradius_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nОсь код, який створює межі зображення:\n\n```\nimg {\n  border-color: saddlebrown;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 10px;\n}\n```\n\n* `img` - це _селектор_. Він визначає, які елементи підкорятимуться правилам всередині фігурних дужок, в даному випадку - зображення.\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;` і `border-radius: 10px;` - це правила, за якими створюється межа.\n:::\n\n::: details [**Що робить властивість `border-style`?**]\nВластивість `border-style` визначає, яку межу (суцільну, пунктирну тощо) має елемент. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\n:::\n\n::: details [**Що робить властивість `border-radius`?]\nВластивість `border-radius` визначає радіус кривизни кутів елемента. Більший радіус створює більшу, м'якшу криву, а менший радіус - меншу, гострішу криву. Нульовий радіус утворює прямий кут. Детальніше про цю властивість можна прочитати за посиланням  <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\n:::\n\n::: details [**Що робить властивість float?**]\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється за лівим краєм, а елементи, що з'являться після нього, відображатимуться праворуч від нього. Якщо значення `float` дорівнює `right`, елемент вирівнюється за правим краєм, а елементи після нього відображатимуться ліворуч від нього. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n</div>\n\n# Радіус межі\n\n* Погляньте на властивість `border-radius` у наборі правил `img`\n* Обговоріть з партнером, що, на вашу думку, робить ця властивість.\n* Спробуйте встановити різні значення радіуса межі й оберіть, яке з них вам подобається найбільше.",
        "CSD U2 layout style borderradius_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nОсь код, який створює межі зображення:\n\n```\nimg {\n  border-color: saddlebrown;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 10px;\n}\n```\n\n* `img` - це _селектор_. Він визначає, які елементи підкорятимуться правилам всередині фігурних дужок, в даному випадку - зображення.\n* `border-color: saddlebrown;`,`border-width: 4px;`,`border-style: solid;` і `border-radius: 10px;` - це правила, за якими створюється межа.\n:::\n\n::: details [**Що робить властивість `border-style`?**]\nВластивість `border-style` визначає, яку межу (суцільну, пунктирну тощо) має елемент. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\n:::\n\n::: details [**Що робить властивість `border-radius`?]\nВластивість `border-radius` визначає радіус кривизни кутів елемента. Більший радіус створює більшу, м'якшу криву, а менший радіус - меншу, гострішу криву. Нульовий радіус утворює прямий кут. Детальніше про цю властивість можна прочитати за посиланням  <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\n:::\n\n::: details [**Що робить властивість float?**]\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється за лівим краєм, а елементи, що з'являться після нього, відображатимуться праворуч від нього. Якщо значення `float` дорівнює `right`, елемент вирівнюється за правим краєм, а елементи після нього відображатимуться ліворуч від нього. Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n</div>\n\n# Радіус межі\n\n* Погляньте на властивість `border-radius` у наборі правил `img`\n* Обговоріть з партнером, що, на вашу думку, робить ця властивість.\n* Спробуйте встановити різні значення радіуса межі й оберіть, яке з них вам подобається найбільше.",
        "CSD U2 layout style debug heading_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n\n::: details [**Що робить тег `head`?**]\nТеги `<head></head>` містять інформацію про вебсторінку, яка називається метаданими. Метадані не відображаються на вебсторінці, і вміст, який ми хочемо розмістити на своїй сторінці, не повинен потрапляти сюди.\n:::\n\n\n::: details [**Що робить тег `body`?**]\nМіж тегами `<body></body>` міститься вміст вебсторінки. Він повинен містити тіло вебсторінки з усім текстом, медіа-файлами, посилання тощо, які ми хочемо показувати відвідувачам на своїй сторінці.\n:::\n\n</div>\n\n# Налагодження заголовків\n\nПопередній перегляд цієї сторінки виглядає добре, і всі елементи HTML і CSS відображаються правильно. Але якщо зазирнути в код, тут не все правильно, і це може спричинити проблеми в майбутньому. Зможете визначити, який код розміщено в неправильній області, і виправити його?\n\n*Примітка: Виправлення коду не призведе до змін у попередньому перегляді, але код стане краще організований*\n",
        "CSD U2 layout style debug heading_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n\n::: details [**Що робить тег `head`?**]\nТеги `<head></head>` містять інформацію про вебсторінку, яка називається метаданими. Метадані не відображаються на вебсторінці, і вміст, який ми хочемо розмістити на своїй сторінці, не повинен потрапляти сюди.\n:::\n\n\n::: details [**Що робить тег `body`?**]\nМіж тегами `<body></body>` міститься вміст вебсторінки. Він повинен містити тіло вебсторінки з усім текстом, медіа-файлами, посилання тощо, які ми хочемо показувати відвідувачам на своїй сторінці.\n:::\n\n</div>\n\n# Налагодження заголовків\n\nПопередній перегляд цієї сторінки виглядає добре, і всі елементи HTML і CSS відображаються правильно. Але якщо зазирнути в код, тут не все правильно, і це може спричинити проблеми в майбутньому. Зможете визначити, який код розміщено в неправильній області, і виправити його?\n\n*Примітка: Виправлення коду не призведе до змін у попередньому перегляді, але код стане краще організований*\n",
        "CSD U2 layout style debug link_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\n\nОсь код, який встановлює поточний розмір зображення:\n\n```\nimg {\n\twidth: 250px;\n}\n```\n\n* `img` - це _селектор_.  Він визначає, які елементи повинні дотримуватися правил всередині фігурних дужок, в даному випадку - зображення.\n* `width: 250px` це правило, яке встановлює ширину зображення 250 пікселів. Автоматично буде змінено висоту, щоб зображення не спотворювалось.\n:::\n\n::: details [**Що робить властивість `width`?**]\nВластивість `width` визначає ширину елемента. Найчастіше ширина визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення ширини також змінює висоту, щоб зображення не спотворювалось, якщо висота не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\n:::\n\n::: details [**Що робить властивість `height`?**]\nВластивість `height`визначає висоту елемента.  Найчастіше висота визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення висоти також змінює ширину, щоб зображення не спотворювалось, якщо ширина не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\" target=\"_new\">W3Schools - CSS height Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому одночасне використання правил ширини та висоти іноді спотворює зображення?**]\nКоли ширина зображення змінюється, висота повинна змінюватися на той самий відсоток, інакше зображення спотвориться.  Наприклад, якщо ми подвоїмо ширину зображення, також слід подвоїти висоту, інакше зображення розтягнеться по горизонталі.  Коли ж ми визначимо лише ширину або висоту, комп'ютер автоматично змінює інші властивості так, щоб зображення виглядало коректно.\n:::\n</div>\n\n# Налагодження стилю\n\nЖоден зі стилів на цій сторінці не працює. Налагодьте код, а потім змініть стилі на власний смак\n",
        "CSD U2 layout style debug link_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\n\nОсь код, який встановлює поточний розмір зображення:\n\n```\nimg {\n\twidth: 250px;\n}\n```\n\n* `img` - це _селектор_.  Він визначає, які елементи повинні дотримуватися правил всередині фігурних дужок, в даному випадку - зображення.\n* `width: 250px` це правило, яке встановлює ширину зображення 250 пікселів. Автоматично буде змінено висоту, щоб зображення не спотворювалось.\n:::\n\n::: details [**Що робить властивість `width`?**]\nВластивість `width` визначає ширину елемента. Найчастіше ширина визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення ширини також змінює висоту, щоб зображення не спотворювалось, якщо висота не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\n:::\n\n::: details [**Що робить властивість `height`?**]\nВластивість `height`визначає висоту елемента.  Найчастіше висота визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення висоти також змінює ширину, щоб зображення не спотворювалось, якщо ширина не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\" target=\"_new\">W3Schools - CSS height Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому одночасне використання правил ширини та висоти іноді спотворює зображення?**]\nКоли ширина зображення змінюється, висота повинна змінюватися на той самий відсоток, інакше зображення спотвориться.  Наприклад, якщо ми подвоїмо ширину зображення, також слід подвоїти висоту, інакше зображення розтягнеться по горизонталі.  Коли ж ми визначимо лише ширину або висоту, комп'ютер автоматично змінює інші властивості так, щоб зображення виглядало коректно.\n:::\n</div>\n\n# Налагодження стилю\n\nЖоден зі стилів на цій сторінці не працює. Налагодьте код, а потім змініть стилі на власний смак\n",
        "CSD U2 layout style debug spelling_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\n\nОсь код, який встановлює поточний розмір зображення:\n\n```\nimg {\n\twidth: 250px;\n}\n```\n\n* `img` - це _селектор_.  Він визначає, які елементи повинні дотримуватися правил всередині фігурних дужок, в даному випадку - зображення.\n* `width: 250px` це правило, яке встановлює ширину зображення 250 пікселів. Автоматично буде змінено висоту, щоб зображення не спотворювалось.\n:::\n\n::: details [**Що робить властивість `width`?**]\nВластивість `width` визначає ширину елемента. Найчастіше ширина визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення ширини також змінює висоту, щоб зображення не спотворювалось, якщо висота не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\n:::\n\n::: details [**Що робить властивість `height`?**]\nВластивість `height`визначає висоту елемента.  Найчастіше висота визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення висоти також змінює ширину, щоб зображення не спотворювалось, якщо ширина не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\" target=\"_new\">W3Schools - CSS height Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому одночасне використання правил ширини та висоти іноді спотворює зображення?**]\nКоли ширина зображення змінюється, висота повинна змінюватися на той самий відсоток, інакше зображення спотвориться.  Наприклад, якщо ми подвоїмо ширину зображення, також слід подвоїти висоту, інакше зображення розтягнеться по горизонталі.  Коли ж ми визначимо лише ширину або висоту, комп'ютер автоматично змінює інші властивості так, щоб зображення виглядало коректно.\n:::\n</div>\n\n# Налагодження зображень\n\nУсі ці зображення повинні мати висоту 100 пікселів, але властивість height не працює.  Знайдіть помилку і зробіть висоту всіх зображень однаковою.",
        "CSD U2 layout style debug spelling_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\n\nОсь код, який встановлює поточний розмір зображення:\n\n```\nimg {\n\twidth: 250px;\n}\n```\n\n* `img` - це _селектор_.  Він визначає, які елементи повинні дотримуватися правил всередині фігурних дужок, в даному випадку - зображення.\n* `width: 250px` це правило, яке встановлює ширину зображення 250 пікселів. Автоматично буде змінено висоту, щоб зображення не спотворювалось.\n:::\n\n::: details [**Що робить властивість `width`?**]\nВластивість `width` визначає ширину елемента. Найчастіше ширина визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення ширини також змінює висоту, щоб зображення не спотворювалось, якщо висота не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\n:::\n\n::: details [**Що робить властивість `height`?**]\nВластивість `height`визначає висоту елемента.  Найчастіше висота визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення висоти також змінює ширину, щоб зображення не спотворювалось, якщо ширина не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_height.asp\" target=\"_new\">W3Schools - CSS height Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому одночасне використання правил ширини та висоти іноді спотворює зображення?**]\nКоли ширина зображення змінюється, висота повинна змінюватися на той самий відсоток, інакше зображення спотвориться.  Наприклад, якщо ми подвоїмо ширину зображення, також слід подвоїти висоту, інакше зображення розтягнеться по горизонталі.  Коли ж ми визначимо лише ширину або висоту, комп'ютер автоматично змінює інші властивості так, щоб зображення виглядало коректно.\n:::\n</div>\n\n# Налагодження зображень\n\nУсі ці зображення повинні мати висоту 100 пікселів, але властивість height не працює.  Знайдіть помилку і зробіть висоту всіх зображень однаковою.",
        "CSD U2 layout style dessert challenge_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n</div>\n\n# Завдання: Стиль вебсторінки про десерти\n\nНам надано базову вебсторінку про десерти. Виконайте ці завдання, щоб додати їй стилю:\n* Створіть фоновий колір або зображення для сторінки.\n* Виправте розміри заголовків, щоб вони виглядали краще.\n* Додайте унікальний стиль для кожного заголовка: сімейство шрифтів, колір, розмір, оформлення тощо.\n* Зробіть краї зображень заокругленими.\n* Додайте ще один десерт з описом і зображенням (з відповідним посиланням!).\n* Додайте будь-який інший стиль або вміст, щоб додати сторінці індивідуальності!",
        "CSD U2 layout style dessert challenge_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n</div>\n\n# Завдання: Стиль вебсторінки про десерти\n\nНам надано базову вебсторінку про десерти. Виконайте ці завдання, щоб додати їй стилю:\n* Створіть фоновий колір або зображення для сторінки.\n* Виправте розміри заголовків, щоб вони виглядали краще.\n* Додайте унікальний стиль для кожного заголовка: сімейство шрифтів, колір, розмір, оформлення тощо.\n* Зробіть краї зображень заокругленими.\n* Додайте ще один десерт з описом і зображенням (з відповідним посиланням!).\n* Додайте будь-який інший стиль або вміст, щоб додати сторінці індивідуальності!",
        "CSD U2 layout style image float_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що робить властивість float?**]\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється за лівим краєм, а елементи, що з'являться після нього, відображатимуться праворуч від нього.  Якщо значення `float` дорівнює `right`, елемент вирівнюється за правим краєм, а елементи після нього відображатимуться ліворуч від нього. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n</div>\n\n# Зміна положення\nПеремістіть зображення за допомогою властивості `float` так, щоб вони були розташовані збоку від тексту, а не під ним.\n",
        "CSD U2 layout style image float_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що робить властивість float?**]\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється за лівим краєм, а елементи, що з'являться після нього, відображатимуться праворуч від нього.  Якщо значення `float` дорівнює `right`, елемент вирівнюється за правим краєм, а елементи після нього відображатимуться ліворуч від нього. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n</div>\n\n# Зміна положення\nПеремістіть зображення за допомогою властивості `float` так, щоб вони були розташовані збоку від тексту, а не під ним.\n",
        "CSD U2 layout style image width_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n\n::: details [**Що робить властивість `width`?**]\nВластивість `width` визначає ширину елемента. Найчастіше ширина визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення ширини також змінює висоту, щоб зображення не спотворювалось, якщо висота не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\n:::\n\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n</div>\n\n# Зміна ширини\nУсі зображення тут різного розміру, деякі з них занадто великі. Створіть правило, яке робить ширину всіх зображень однаковою і зменшує їхній розмір!\n",
        "CSD U2 layout style image width_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n\n::: details [**Що робить властивість `width`?**]\nВластивість `width` визначає ширину елемента. Найчастіше ширина визначається у пікселях, що дозволяє елементу займати точну кількість місця на екрані. Визначення ширини також змінює висоту, щоб зображення не спотворювалось, якщо висота не визначена користувачем. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_dim_width.asp\" target=\"_new\">W3Schools - CSS width Property</a>\n:::\n\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n</div>\n\n# Зміна ширини\nУсі зображення тут різного розміру, деякі з них занадто великі. Створіть правило, яке робить ширину всіх зображень однаковою і зменшує їхній розмір!\n",
        "CSD U2 layout style margin_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nОсь код, який збільшує простір навколо зображень:\n\n    img {\n        margin: 10px;\n    }\n\n* `img` - це _селектор_.  Він визначає, які елементи підкорятимуться правилам всередині фігурних дужок, в даному випадку - зображення.\n\n* `margin: 10px;` - це правило, яке додає 10 пікселів простору навколо зображення.\n:::\n\n::: details [**Що робить властивість `margin`?**]\nВластивість `margin` визначає поля, тобто скільки простору буде навколо зображення. Здебільшого поля визначаються у пікселях.  Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_margin.asp\" target=\"_new\">W3Schools - CSS margin Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n</div>\n\n# Поля\n\nПоля визначають, скільки простору має залишатися навколо елемента.\n\n* Знайдіть властивість `margin` у наборі правил `img`.\n* Змініть поле на більше і обговоріть результат з партнером.\n* Оберіть інший тип елемента і також додайте поля для нього.",
        "CSD U2 layout style margin_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nОсь код, який збільшує простір навколо зображень:\n\n    img {\n        margin: 10px;\n    }\n\n* `img` - це _селектор_.  Він визначає, які елементи підкорятимуться правилам всередині фігурних дужок, в даному випадку - зображення.\n\n* `margin: 10px;` - це правило, яке додає 10 пікселів простору навколо зображення.\n:::\n\n::: details [**Що робить властивість `margin`?**]\nВластивість `margin` визначає поля, тобто скільки простору буде навколо зображення. Здебільшого поля визначаються у пікселях.  Детальніше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_margin.asp\" target=\"_new\">W3Schools - CSS margin Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n</div>\n\n# Поля\n\nПоля визначають, скільки простору має залишатися навколо елемента.\n\n* Знайдіть властивість `margin` у наборі правил `img`.\n* Змініть поле на більше і обговоріть результат з партнером.\n* Оберіть інший тип елемента і також додайте поля для нього.",
        "CSD U2 layout style new body rules_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n\n</div>\n\n# Додавання нових правил\n\nЗараз правила для тіла сторінки не дуже цікаві. Додайте ще кілька, щоб сторінка виглядала круто! Також можна додавати або змінювати інші правила.\n",
        "CSD U2 layout style new body rules_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n\n</div>\n\n# Додавання нових правил\n\nЗараз правила для тіла сторінки не дуже цікаві. Додайте ще кілька, щоб сторінка виглядала круто! Також можна додавати або змінювати інші правила.\n",
        "CSD U2 layout style sample_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що робить селектор тіла сторінки?**]\nОскільки весь вміст вебсторінки знаходиться всередині тегу `body`, селектор тіла сторінки задає правила стилів для всього, що знаходиться на вебсторінці.\n:::\n\n::: details [**Що робить властивість `border-style`?**]\nВластивість `border-style` визначає тип рамки (суцільна, пунктирна, штрихова тощо), яку має елемент. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\n:::\n\n::: details [**Що робить властивість border-radius?**]\nВластивість `border-radius` визначає радіус кривизни кутів елемента. Більший радіус створює більшу, м'якшу криву, а менший радіус - меншу, гострішу криву. Нульовий радіус утворює прямий кут. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\n:::\n\n::: details [**Що робить властивість float?**]\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється по лівому краю, а елементи, що з'являться після нього, відображатимуться праворуч від нього. Якщо значення `float` дорівнює `right`, елемент вирівнюється по правому краю, а елементи після нього будуть відображатися ліворуч від нього. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n\n</div>\n\n# Структура і стиль\n\n-   Знайдіть нові стилі на себ-сторінці нижче.\n-   Відкрийте таблицю стилів\n-   Обговоріть зі своїм партнером, які частини коду CSS, на вашу думку, змушують сторінку виглядати по-іншому.\n    -   Що робить всю сторінку синьою?\n    -   Як зображення розташовуються ліворуч від усіх інших елементів?\n\nНа наступних рівнях ми будемо змінювати і додавати нові стилі на цій сторінці.",
        "CSD U2 layout style sample_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що робить селектор тіла сторінки?**]\nОскільки весь вміст вебсторінки знаходиться всередині тегу `body`, селектор тіла сторінки задає правила стилів для всього, що знаходиться на вебсторінці.\n:::\n\n::: details [**Що робить властивість `border-style`?**]\nВластивість `border-style` визначає тип рамки (суцільна, пунктирна, штрихова тощо), яку має елемент. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_border-style.asp\" target=\"_new\">W3Schools - CSS border-style Property</a>\n:::\n\n::: details [**Що робить властивість border-radius?**]\nВластивість `border-radius` визначає радіус кривизни кутів елемента. Більший радіус створює більшу, м'якшу криву, а менший радіус - меншу, гострішу криву. Нульовий радіус утворює прямий кут. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css3_pr_border-radius.asp\" target=\"_new\">W3Schools - CSS3 border-radius property</a>\n:::\n\n::: details [**Що робить властивість float?**]\nВластивість `float` робить елемент \"плавучим\", тобто елементи, що йдуть після нього, обтікають його. Якщо значення `float` дорівнює `left`, елемент вирівнюється по лівому краю, а елементи, що з'являться після нього, відображатимуться праворуч від нього. Якщо значення `float` дорівнює `right`, елемент вирівнюється по правому краю, а елементи після нього будуть відображатися ліворуч від нього. Більше про цю властивість можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_class_float.asp\" target=\"_new\">W3Schools - CSS float Property</a>\n:::\n\n</div>\n\n# Структура і стиль\n\n-   Знайдіть нові стилі на себ-сторінці нижче.\n-   Відкрийте таблицю стилів\n-   Обговоріть зі своїм партнером, які частини коду CSS, на вашу думку, змушують сторінку виглядати по-іншому.\n    -   Що робить всю сторінку синьою?\n    -   Як зображення розташовуються ліворуч від усіх інших елементів?\n\nНа наступних рівнях ми будемо змінювати і додавати нові стилі на цій сторінці.",
        "CSD U2 link demo_2021": "# Створення сайту з декількома сторінками\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nВебсайт повинен містити більше однієї вебсторінки, і вони повинні бути пов'язані одна з одною. Ось приклад проєкту з декількома сторінками, з'єднаними гіперпосиланнями (підкреслені синім кольором слова, натискання на які перенаправляє тебе на іншу сторінку).\n\n# Завдання\n\n-   Використовуйте інструмент «Інспектор», щоб переглянути код, який створює гіперпосилання у верхній частині index.html.\n-   Обговоріть з партнером, як, на вашу думку, працює цей код.",
        "CSD U2 link demo_2022": "# Створення сайту з декількома сторінками\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nВебсайт повинен містити більше однієї вебсторінки, і вони повинні бути пов'язані одна з одною. Ось приклад проєкту з декількома сторінками, з'єднаними гіперпосиланнями (підкреслені синім кольором слова, натискання на які перенаправляє тебе на іншу сторінку).\n\n# Завдання\n\n-   Використовуйте інструмент «Інспектор», щоб переглянути код, який створює гіперпосилання у верхній частині index.html.\n-   Обговоріть з партнером, як, на вашу думку, працює цей код.",
        "CSD U2 making links_2021": "# Додавання посилань\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nЦя сторінка працює майже як потрібно, але немає посилання на одну зі сторінок.\n\n# Завдання\n\n-   Перейдіть за робочими посиланнями і подивіться, як вони працюють.\n-   Додайте код, який буде посилатися з індексної сторінки на сторінку \"Карлів міст\".\n-   Додайте код, який зв'яже сторінку \"Карлів міст\" з індексною сторінкою.",
        "CSD U2 making links_2022": "# Додавання посилань\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nЦя сторінка працює майже як потрібно, але немає посилання на одну зі сторінок.\n\n# Завдання\n\n-   Перейдіть за робочими посиланнями і подивіться, як вони працюють.\n-   Додайте код, який буде посилатися з індексної сторінки на сторінку \"Карлів міст\".\n-   Додайте код, який зв'яже сторінку \"Карлів міст\" з індексною сторінкою.",
        "CSD U2 naming links_2021": "# Текст посилань\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n::: details [**За якими правилами слід називати посилання?]\nТексти посилань повинні допомагати користувачеві легко зрозуміти, куди він переходить.  Деякі корисні правила:\n\n1.  Додайте гарний опис посилання, який має сенс навіть без прочитання всього тексту навколо нього. Наприклад, \"перейдіть сюди\" або \"дізнатися більше\" не говорять про те, куди перейде або про що дізнається користувач.\n2.  Вказуйте назву посилання звичайним текстом, а не просто повторюйте URL-адресу в тексті посилання. Наприклад, \"Головна\" або \"Домашня сторінка\" легше прочитати, ніж \"index.html\".\n3.  Не додавайте занадто багато тексту. Читачі не зрозуміють, про що конкретно йдеться у посиланні.\n    :::\n\n</div>\n\nПодібно до зображень і файлів, посилання повинні мати чіткі назви, які допомагають зрозуміти, на яку сторінку вони посилаються.\n\n# Завдання\n\n-   Прочитайте код або клацніть на посилання, щоб побачити, куди вони ведуть.\n-   Змініть назви (тексти)  посилань, щоб було зрозуміло, куди вони ведуть.",
        "CSD U2 naming links_2022": "# Текст посилань\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n::: details [**За якими правилами слід називати посилання?]\nТексти посилань повинні допомагати користувачеві легко зрозуміти, куди він переходить.  Деякі корисні правила:\n\n1.  Додайте гарний опис посилання, який має сенс навіть без прочитання всього тексту навколо нього. Наприклад, \"перейдіть сюди\" або \"дізнатися більше\" не говорять про те, куди перейде або про що дізнається користувач.\n2.  Вказуйте назву посилання звичайним текстом, а не просто повторюйте URL-адресу в тексті посилання. Наприклад, \"Головна\" або \"Домашня сторінка\" легше прочитати, ніж \"index.html\".\n3.  Не додавайте занадто багато тексту. Читачі не зрозуміють, про що конкретно йдеться у посиланні.\n    :::\n\n</div>\n\nПодібно до зображень і файлів, посилання повинні мати чіткі назви, які допомагають зрозуміти, на яку сторінку вони посилаються.\n\n# Завдання\n\n-   Прочитайте код або клацніть на посилання, щоб побачити, куди вони ведуть.\n-   Змініть назви (тексти)  посилань, щоб було зрозуміло, куди вони ведуть.",
        "CSD U2 naming pages_2021": "# Іменування нових сторінок\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nДля іменування html-сторінок слід дотримуватися тих самих правил, що і для іменування зображень. На цій сторінці є проблеми, спричинені неправильними іменами HTML-файлів.\n\n# Завдання\n\n-   Клацніть на посилання в \"index.html\" і перевірте, які з них не працюють.\n-   Змініть назви файлів та атрибути посилань `href` так, щоб вони відповідали належним правилам іменування, а саме:\n    -   Уникайте спеціальних символів, як-от `&`, `?`, `%`, `/` тощо.\n    -   Упевніться, що ім'я має конкретне значення, яке допомагає зрозуміти, про що йдеться на сторінці\n    -   Використовуйте тире (`-`) або підкреслення (`_`) замість пробілів.\n    -   Імена повинні бути якомога коротшими, але водночас мати чітке значення.",
        "CSD U2 naming pages_2022": "# Іменування нових сторінок\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nДля іменування html-сторінок слід дотримуватися тих самих правил, що і для іменування зображень. На цій сторінці є проблеми, спричинені неправильними іменами HTML-файлів.\n\n# Завдання\n\n-   Клацніть на посилання в \"index.html\" і перевірте, які з них не працюють.\n-   Змініть назви файлів та атрибути посилань `href` так, щоб вони відповідали належним правилам іменування, а саме:\n    -   Уникайте спеціальних символів, як-от `&`, `?`, `%`, `/` тощо.\n    -   Упевніться, що ім'я має конкретне значення, яке допомагає зрозуміти, про що йдеться на сторінці\n    -   Використовуйте тире (`-`) або підкреслення (`_`) замість пробілів.\n    -   Імена повинні бути якомога коротшими, але водночас мати чітке значення.",
        "CSD U2 nav bar_2021": "# Панель навігації\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nУ більшості вебсайтів використовуються панелі навігації, щоб допомогти користувачам орієнтуватися на цьому сайті.  Панель навігації має бути однаковою на всіх сторінках.\n\n# Завдання\n\n-   Перегляньте панель навігації на \"index.html\".\n-   Додайте таку ж панель навігації на інші три сторінки.",
        "CSD U2 nav bar_2022": "# Панель навігації\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nУ більшості вебсайтів використовуються панелі навігації, щоб допомогти користувачам орієнтуватися на цьому сайті.  Панель навігації має бути однаковою на всіх сторінках.\n\n# Завдання\n\n-   Перегляньте панель навігації на \"index.html\".\n-   Додайте таку ж панель навігації на інші три сторінки.",
        "CSD U2 project review": "# Перегляньте свій проект\n\nВи майже готові до публікації свого проекту, але вам слід ще раз перевірити, чи ви виконали всі вимоги до цього проекту.\n\n# Зроби це\n\n-   Переконайтеся, що вам зручно ділитися всією інформацією, яка є на вашому сайті.\n-   Перевірте, чи всі ваші зображення правильно приписуються, і чи маєте ви право розмістити їх на своєму сайті.\n-   Перевірте, чи ваш проект містить все, що включено до рубрики проекту.\n-   Використовуйте коментарі та пробіли, щоб зробити ваш веб-сайт придатним для читання.\n-   Попросіть партнера допомогти вам знайти потенційні проблеми у вашому сайті.",
        "CSD U2 project review_2018": "# Перегляньте свій проект\n\nВи майже готові до публікації свого проекту, але вам слід ще раз перевірити, чи ви виконали всі вимоги до цього проекту.\n\n# Зроби це\n\n-   Переконайтеся, що вам зручно ділитися всією інформацією, яка є на вашому сайті.\n-   Перевірте, чи всі ваші зображення правильно приписуються, і чи маєте ви право розмістити їх на своєму сайті.\n-   Перевірте, чи ваш проект містить все, що включено до рубрики проекту.\n-   Використовуйте коментарі та пробіли, щоб зробити ваш веб-сайт придатним для читання.\n-   Попросіть партнера допомогти вам знайти потенційні проблеми у вашому сайті.",
        "CSD U2 project review_2019": "# Перегляньте свій проект\n\nВи майже готові до публікації свого проекту, але вам слід ще раз перевірити, чи ви виконали всі вимоги до цього проекту.\n\n# Зроби це\n\n-   Переконайтеся, що вам зручно ділитися всією інформацією, яка є на вашому сайті.\n-   Перевірте, чи всі ваші зображення правильно приписуються, і чи маєте ви право розмістити їх на своєму сайті.\n-   Перевірте, чи ваш проект містить все, що включено до рубрики проекту.\n-   Використовуйте коментарі та пробіли, щоб зробити ваш веб-сайт придатним для читання.\n-   Попросіть партнера допомогти вам знайти потенційні проблеми у вашому сайті.",
        "CSD U2 project review_2021": "# Перевірка проєкту\n\nПроєкт майже готовий до публікації, але треба ще раз перевірити, чи всі вимоги до цього проєкту були виконані.\n\n# Завдання\n\n-   Упевніться, що вам зручно ділитися всією інформацією, яка міститься на особистому сайті.\n-   Упевніться, що всі зображення  належним чином атрибутовані, і що ви маєте право розміщувати їх на своєму сайті.\n-   Упевніться, що проєкт включає все, що вказано в критеріях проєкту.\n-   Використовуйте коментарі та пробіли, щоб сайт було легше читати.\n-   Попросіть однокласників допомогти знайти будь-які потенційні проблеми з сайтом.",
        "CSD U2 project review_2022": "# Перевірка проєкту\n\nПроєкт майже готовий до публікації, але треба ще раз перевірити, чи всі вимоги до цього проєкту були виконані.\n\n# Завдання\n\n-   Упевніться, що вам зручно ділитися всією інформацією, яка міститься на особистому сайті.\n-   Упевніться, що всі зображення  належним чином атрибутовані, і що ви маєте право розміщувати їх на своєму сайті.\n-   Упевніться, що проєкт включає все, що вказано в критеріях проєкту.\n-   Використовуйте коментарі та пробіли, щоб сайт було легше читати.\n-   Попросіть однокласників допомогти знайти будь-які потенційні проблеми з сайтом.",
        "CSD U2 project share": "# Поширте ваш проект\n\nЧас ділитися вашим проектом зі світом!\n\n# Зроби це\n\n-   Натисни кнопку ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) у верхній частині цієї сторінки.\n-   Скопіюйте надану вам URL-адресу та надішліть її електронною поштою людям, яким ви хочете показати вашу сторінку.",
        "CSD U2 project share_2018": "# Поширте ваш проект\n\nЧас ділитися вашим проектом зі світом!\n\n# Зроби це\n\n-   Натисни кнопку ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) у верхній частині цієї сторінки.\n-   Скопіюйте надану вам URL-адресу та надішліть її електронною поштою людям, яким ви хочете показати вашу сторінку.",
        "CSD U2 project share_2019": "# Поширте ваш проект\n\nЧас ділитися вашим проектом зі світом!\n\n# Зроби це\n\n-   Натисни кнопку ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) у верхній частині цієї сторінки.\n-   Скопіюйте надану вам URL-адресу та надішліть її електронною поштою людям, яким ви хочете показати вашу сторінку.",
        "CSD U2 project share_2021": "# Поширте ваш проект\n\nЧас ділитися вашим проектом зі світом!\n\n# Зроби це\n\n-   Натисни кнопку ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) у верхній частині цієї сторінки.\n-   Скопіюйте надану вам URL-адресу та надішліть її електронною поштою людям, яким ви хочете показати вашу сторінку.",
        "CSD U2 project share_2022": "# Поширте ваш проект\n\nЧас ділитися вашим проектом зі світом!\n\n# Зроби це\n\n-   Натисни кнопку ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27 AM.png>) у верхній частині цієї сторінки.\n-   Скопіюйте надану вам URL-адресу та надішліть її електронною поштою людям, яким ви хочете показати вашу сторінку.",
        "CSD U2 rgb practice shades_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібно створити клас і додати до нього елементи.\n\nКлас створюється в таблиці стилів з описаним нижче кодом.\n\n```\n.red0 {\n  color: rgb(128,0,0);\n}\n```\n\nЦей код створює клас з назвою `red0` і робить все в цьому класі заданим темно-червоним кольором, який має значення RGB (128,0,0).\n\nКод, який додає елемент `p` до класу red0, має вигляд `<p class=\"red0\">`. Клас `class=\"red0\"` всередині відкривного тегу додає до класу все, що знаходиться всередині цього тегу.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробникам використовувати класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n::: details [**Я використовував інші значення RGB, але мої теж працюють.**]\nОскільки RGB створює мільйони різних кольорів, деякі з них настільки схожі, що людям важко їх відрізнити.  Це означає, що існує кілька значень RGB, які є досить близькими для нашого темно-червоного кольору.\n:::\n</div>\n\n# Використання RGB\n\nМожна використовувати значення RGB, щоб отримати саме той колір, який вам потрібен\n\n# Завдання\n* Знайдіть у таблиці стилів набір правил CSS, який надає червоним словам потрібного стилю.\n* Оновіть стилі для зелених і синіх слів, щоб спробувати різні кольори за допомогою кодів RGB.\n* Додайте будь-які інші правила для своєї сторінки за бажанням.\n",
        "CSD U2 rgb practice shades_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Як працює цей код?**]\nЩоб код працював, потрібно створити клас і додати до нього елементи.\n\nКлас створюється в таблиці стилів з описаним нижче кодом.\n\n```\n.red0 {\n  color: rgb(128,0,0);\n}\n```\n\nЦей код створює клас з назвою `red0` і робить все в цьому класі заданим темно-червоним кольором, який має значення RGB (128,0,0).\n\nКод, який додає елемент `p` до класу red0, має вигляд `<p class=\"red0\">`. Клас `class=\"red0\"` всередині відкривного тегу додає до класу все, що знаходиться всередині цього тегу.\n:::\n\n::: details [**Які правила можна додавати до набору правил класу?**]\nНабір правил для класу може містити ті самі правила, що і будь-який інший тип селектора. Якщо правило не застосовується до вмісту класу (наприклад, використання `font-size` для елемента без тексту), то комп'ютер проігнорує це правило, але все одно використовуватиме правила, які працюють.\n:::\n\n::: details [**Чому перед селектором стоїть крапка?**]\nУ CSS крапка перед селектором означає, що селектор - це ім'я класу.  Якщо крапка відсутня, це означає, що селектором є HTML-тег.\n:::\n\n::: details [**Навіщо веб-розробникам використовувати класи?**]\nВеб-розробники використовують класи, коли деякі елементи повинні бути оформлені інакше, ніж інші, навіть якщо вони мають однаковий тег.  Класи також можна використовувати для надання елементам з різними тегами однакового стилю.\n:::\n\n::: details [**Я використовував інші значення RGB, але мої теж працюють.**]\nОскільки RGB створює мільйони різних кольорів, деякі з них настільки схожі, що людям важко їх відрізнити.  Це означає, що існує кілька значень RGB, які є досить близькими для нашого темно-червоного кольору.\n:::\n</div>\n\n# Використання RGB\n\nМожна використовувати значення RGB, щоб отримати саме той колір, який вам потрібен\n\n# Завдання\n* Знайдіть у таблиці стилів набір правил CSS, який надає червоним словам потрібного стилю.\n* Оновіть стилі для зелених і синіх слів, щоб спробувати різні кольори за допомогою кодів RGB.\n* Додайте будь-які інші правила для своєї сторінки за бажанням.\n",
        "CSD U2 text style decoration_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\nОсь код, який робить елементи `h1` підкресленими:\n\n```\nh1 {\n  text-decoration: underline;\n}\n```\n\n* `h1` це _селектор_.  Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `text-decoration: underline;` - це правило, яке робить текст всередині тегу `h1` підкресленим.\n  * `text-decoration` - це _властивість_.  Вона пояснює, про що йдеться у правилі, у цьому випадку, де розміщується лінія.\n  * `underline` - це _значення_.  Воно пояснює, як слід застосовувати правило, у цьому випадку - робить тест підкресленим.\n:::\n\n::: details [**Які можливі значення для оформлення тексту?**]\nВи можете обирати з-поміж \"underline\" (підкреслений), \"overline\" (надкреслений), і \"line-through\" (закреслений).  Більше про властивість text-decoration можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\" target=\"_new\">W3Schools - CSS text-decoration Property</a>\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Підкреслення\n\n* Знайдіть у таблиці стилів код, який робить тег h4 подвійно підкресленим.\n* Змініть оформлення тексту на щось інше.\n  * Оберіть з-поміж \"underline\" (підкреслений), \"overline\" (надкреслений), і \"line-through\" (закреслений))\n* Додайте правило оформлення тексту для тегу абзацу, h1, h2 або h3.\n",
        "CSD U2 text style decoration_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\nОсь код, який робить елементи `h1` підкресленими:\n\n```\nh1 {\n  text-decoration: underline;\n}\n```\n\n* `h1` це _селектор_.  Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `text-decoration: underline;` - це правило, яке робить текст всередині тегу `h1` підкресленим.\n  * `text-decoration` - це _властивість_.  Вона пояснює, про що йдеться у правилі, у цьому випадку, де розміщується лінія.\n  * `underline` - це _значення_.  Воно пояснює, як слід застосовувати правило, у цьому випадку - робить тест підкресленим.\n:::\n\n::: details [**Які можливі значення для оформлення тексту?**]\nВи можете обирати з-поміж \"underline\" (підкреслений), \"overline\" (надкреслений), і \"line-through\" (закреслений).  Більше про властивість text-decoration можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_text_text-decoration.asp\" target=\"_new\">W3Schools - CSS text-decoration Property</a>\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Підкреслення\n\n* Знайдіть у таблиці стилів код, який робить тег h4 подвійно підкресленим.\n* Змініть оформлення тексту на щось інше.\n  * Оберіть з-поміж \"underline\" (підкреслений), \"overline\" (надкреслений), і \"line-through\" (закреслений))\n* Додайте правило оформлення тексту для тегу абзацу, h1, h2 або h3.\n",
        "CSD U2 text style font family_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює код?**]\n\nОсь код, який керує шрифтом абзацу:\n\n```\np {\n  font-family: cursive;\n}\n```\n\n* `p` - це _селектор_.  Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `font-family: cursive;` - це правило, яке вказує на первинний шрифт тексту всередині тегів `p`.\n  * `font-family` - це _властивість_.  Вона пояснює, про що йдеться у правилі, у цьому випадку про шрифт.\n  * `cursive` - це _значення_.  Воно пояснює, як слід застосовувати правило, у цьому випадку перетворюючи текст на курсивний.\n\n:::\n\n::: details [**Які можливі значення для сімейства шрифтів?**]\nВи можете обирати між \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", і \"monospace\".  Ви також можете спробувати більш своєрідні шрифти, описані за посиланям <a href=\"http://www.w3schools.com/cssref/css_websafe_fonts.asp\" target=\"_new\">W3Schools - CSS Web Safe Font Combinations</a>\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Зміна шрифту\n\n* Знайдіть у таблиці стилів набір правил CSS, який визначає стиль для тегу абзацу.\n* Змініть сімейство шрифтів і виберіть той, який вам найбільше подобається.\n  * Оберіть з-поміж \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", і \"monospace\"\n* Додайте правило сімейства шрифтів для тегів h1 або h3.",
        "CSD U2 text style font family_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює код?**]\n\nОсь код, який керує шрифтом абзацу:\n\n```\np {\n  font-family: cursive;\n}\n```\n\n* `p` - це _селектор_.  Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `font-family: cursive;` - це правило, яке вказує на первинний шрифт тексту всередині тегів `p`.\n  * `font-family` - це _властивість_.  Вона пояснює, про що йдеться у правилі, у цьому випадку про шрифт.\n  * `cursive` - це _значення_.  Воно пояснює, як слід застосовувати правило, у цьому випадку перетворюючи текст на курсивний.\n\n:::\n\n::: details [**Які можливі значення для сімейства шрифтів?**]\nВи можете обирати між \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", і \"monospace\".  Ви також можете спробувати більш своєрідні шрифти, описані за посиланям <a href=\"http://www.w3schools.com/cssref/css_websafe_fonts.asp\" target=\"_new\">W3Schools - CSS Web Safe Font Combinations</a>\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Зміна шрифту\n\n* Знайдіть у таблиці стилів набір правил CSS, який визначає стиль для тегу абзацу.\n* Змініть сімейство шрифтів і виберіть той, який вам найбільше подобається.\n  * Оберіть з-поміж \"serif\", \"sans-serif\", \"cursive\", \"fantasy\", і \"monospace\"\n* Додайте правило сімейства шрифтів для тегів h1 або h3.",
        "CSD U2 text style freeplay_2021": "# Довільні дії\n\nВикористовуйте свої нові знання, щоб створити нову сторінку з якомога більшою кількістю стилів.",
        "CSD U2 text style h1_2018": "<div style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n<strong>Які кольори я можу використати у CSS?</strong>\n</summary>\n\nCSS включає найпоширеніші назви кольорів (червоний, синій, зелений тощо) та багато незвичайних. Повний список назв кольорів CSS можна переглянути за адресою <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  Ви все ще можете використовувати кольори, які не включені до названого списку, але вам потрібно буде використовувати їх значення RGB.  Детальніше про використання кольорів у CSS можна прочитати за адресою <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n\n</details><details>\n<summary>\n<strong>Як працює код?</strong>\n</summary>\n\nОсь код, який робить заголовок \\`h1 'червоним:\n\n<pre>h1 {\n  color: red;\n}</pre>\n\n-   `h1`це _селектор_. Він визначає, які елементи повинні дотримуватися правил всередині фігурних дужок.\n-   `color: red;`це правило, яке робить текст всередині тегів `h1` червоним.\n    -   `color` є _власністю_. Він пояснює, про яке правило йдеться, у цьому випадку - колір тексту.\n    -   `red` це _значення_. Він пояснює, як слід застосовувати правило, в цьому випадку роблячи текст червоним.\n\n</details>\n<details>\n<summary>\n<strong>Навіщо мені всі розділові знаки?</strong>\n</summary>\n\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила таблиці стилів. Фігурні дужки містять усі правила для певного селектора. Кожне правило має закінчуватися крапкою з комою, а властивості та значення завжди розділяються двокрапкою.\n\n</details>\n<details>\n<summary>\n<strong>Що таке таблиця стилів?</strong>\n</summary>\n\nТаблиця стилів - це документ, який керує виглядом веб-сторінки. Зовнішні таблиці стилів - це окремі файли, пов’язані зі сторінкою HTML.\n\n</details>\n<details>\n<summary>\n<strong>Що таке CSS?</strong>\n</summary>\n\nCSS - це мова, яка контролює спосіб відображення вмісту на веб-сайті. \nВін використовує набори правил, щоб змінити вигляд сторінки. Кожен набір правил має селектор, який визначає, які елементи на сторінку впливатимуть, і правила, які пояснюють, як відображати елементи. Кожне правило складається з властивості та значення цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу \\`h2 'синім і курсивним:\n\n<pre>h2 {\n   color: blue;\n   font-family: cursive;\n}</pre>\n\nУ цьому прикладі `h2` - це селектор,`color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n\n</details>\n</div>\n\n# CSS і колір тексту\n\nЦей HTML-файл використовує таблицю стилів (\"style.css\"), щоб надати сторінці певний стиль. Таблиця стилів містить інформацію про те, як повинен виглядати кожен з елементів HTML.\n\n-   Знайдіть код у таблиці стилів (натисніть \"style.css\" у списку файлів), що робить заголовок h1 червоним.\n-   Змініть код кольору заголовка h1 з \"червоного\" на інший колір.",
        "CSD U2 text style h1_2021": "<div class=\"no-pullthrough\" \n style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Які кольори можна використовувати в CSS?**]\nCSS включає найпоширеніші назви кольорів (червоний, синій, зелений і т.д.), а також багато рідкісних. Повний список назв кольорів CSS можна переглянути за посиланням <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  Можна також використовувати кольори, які не входять до названого списку, але у такому разі потрібно використовувати їхні RGB-значення. Більше про використання кольорів у CSS можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n:::\n\n::: details [**Як працює код?**]\nОсь код, який робить заголовок `h1` червоним:\n\n    h1 {\n      color: red;\n    }\n\n-   `h1` - це _селектор_.  Він визначає, які елементи повинні слідувати правилам всередині фігурних дужок.\n-   `color: red;` - це правило, яке робить текст всередині тегів `h1` червоним.\n    -   `color` - це _властивість_.  Вона пояснює, про що йдеться в правилі, в даному випадку про колір тексту.\n    -   `red` - це _значення_.  Воно пояснює, як слід застосовувати правило, в даному випадку зробити текст червоним.\n        :::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# CSS і колір тексту\n\nЦей HTML-файл використовує таблицю стилів (\"style.css\"), щоб надати сторінці певного стилю.  Таблиця стилів містить інформацію про те, як повинен виглядати кожен з елементів HTML.\n\n# Завдання\n\n-   Знайдіть код у таблиці стилів (натисніть на \"style.css\" у списку файлів), який робить заголовок h1 червоним.\n-   Змініть код кольору заголовка h1 з `red` на інший колір.",
        "CSD U2 text style h1_2022": "<div class=\"no-pullthrough\" \n style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Які кольори можна використовувати в CSS?**]\nCSS включає найпоширеніші назви кольорів (червоний, синій, зелений і т.д.), а також багато рідкісних. Повний список назв кольорів CSS можна переглянути за посиланням <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  Можна також використовувати кольори, які не входять до названого списку, але у такому разі потрібно використовувати їхні RGB-значення. Більше про використання кольорів у CSS можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n:::\n\n::: details [**Як працює код?**]\nОсь код, який робить заголовок `h1` червоним:\n\n    h1 {\n      color: red;\n    }\n\n-   `h1` - це _селектор_.  Він визначає, які елементи повинні слідувати правилам всередині фігурних дужок.\n-   `color: red;` - це правило, яке робить текст всередині тегів `h1` червоним.\n    -   `color` - це _властивість_.  Вона пояснює, про що йдеться в правилі, в даному випадку про колір тексту.\n    -   `red` - це _значення_.  Воно пояснює, як слід застосовувати правило, в даному випадку зробити текст червоним.\n        :::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# CSS і колір тексту\n\nЦей HTML-файл використовує таблицю стилів (\"style.css\"), щоб надати сторінці певного стилю.  Таблиця стилів містить інформацію про те, як повинен виглядати кожен з елементів HTML.\n\n# Завдання\n\n-   Знайдіть код у таблиці стилів (натисніть на \"style.css\" у списку файлів), який робить заголовок h1 червоним.\n-   Змініть код кольору заголовка h1 з `red` на інший колір.",
        "CSD U2 text style h3_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Які кольори можна використовувати в CSS?**]\nCSS включає найпоширеніші назви кольорів (червоний, синій, зелений і т.д.), а також багато рідкісних. Повний список назв кольорів CSS можна переглянути за посиланням <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  Можна також використовувати кольори, які не входять до названого списку, але у такому разі потрібно використовувати їхні RGB-значення. Більше про використання кольорів у CSS можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n:::\n\n::: details [**Як працює код?**]\nОсь код, який робить заголовок `h1` червоним:\n\n    h1 {\n      color: red;\n    }\n\n-   `h1` - це _селектор_.  Він визначає, які елементи повинні слідувати правилам всередині фігурних дужок.\n-   `color: red;` - це правило, яке робить текст всередині тегів `h1` червоним.\n    -   `color` - це _властивість_.  Вона пояснює, про що йдеться в правилі, в даному випадку про колір тексту.\n    -   `red` - це _значення_.  Воно пояснює, як слід застосовувати правило, в даному випадку зробити текст червоним.\n        :::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Створення нового набору правил CSS\n\nБлок коду, який містить правила для певного тегу, називається _набором правил_.  Ви можете створити новий набір правил, скопіювавши шаблон, який ви бачите у наборі правил для тега `h1`.\n\n# Завдання\n\n-   Знайдіть у таблиці стилів набір правил CSS, який визначає стилі для тегу `h1`.\n-   Використовуючи той самий шаблон, напишіть новий набір правил CSS, який визначатиме стиль для тегу `h3`.\n-   Додайте код, щоб встановити інший колір для тегів `h3`.",
        "CSD U2 text style h3_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Які кольори можна використовувати в CSS?**]\nCSS включає найпоширеніші назви кольорів (червоний, синій, зелений і т.д.), а також багато рідкісних. Повний список назв кольорів CSS можна переглянути за посиланням <a href=\"http://www.w3schools.com/colors/colors_names.asp\" target=\"_new\">W3Schools - HTML Color Names</a>.  Можна також використовувати кольори, які не входять до названого списку, але у такому разі потрібно використовувати їхні RGB-значення. Більше про використання кольорів у CSS можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/css_colors_legal.asp\" target=\"_new\">W3Schools - CSS Legal Color Values</a>\n:::\n\n::: details [**Як працює код?**]\nОсь код, який робить заголовок `h1` червоним:\n\n    h1 {\n      color: red;\n    }\n\n-   `h1` - це _селектор_.  Він визначає, які елементи повинні слідувати правилам всередині фігурних дужок.\n-   `color: red;` - це правило, яке робить текст всередині тегів `h1` червоним.\n    -   `color` - це _властивість_.  Вона пояснює, про що йдеться в правилі, в даному випадку про колір тексту.\n    -   `red` - це _значення_.  Воно пояснює, як слід застосовувати правило, в даному випадку зробити текст червоним.\n        :::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Створення нового набору правил CSS\n\nБлок коду, який містить правила для певного тегу, називається _набором правил_.  Ви можете створити новий набір правил, скопіювавши шаблон, який ви бачите у наборі правил для тега `h1`.\n\n# Завдання\n\n-   Знайдіть у таблиці стилів набір правил CSS, який визначає стилі для тегу `h1`.\n-   Використовуючи той самий шаблон, напишіть новий набір правил CSS, який визначатиме стиль для тегу `h3`.\n-   Додайте код, щоб встановити інший колір для тегів `h3`.",
        "CSD U2 text style letter spacing_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\nОсь приклад коду, який керує вирівнюванням тексту абзацу:\n\n```\np {\n  letter-spacing: 5px;\n}\n```\n\n* `p` - це _селектор_.Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `letter-spacing: 5px;` - це правило, за яким символи всередині тегів `p` розділяються 5 пікселями.\n  * `letter-spacing` - це _властивість_. Вона пояснює, про що йдеться в правилі, в даному випадку про інтервал між символами.\n  * `5px` - це _значення_. Воно пояснює, як слід застосовувати правило, в даному випадку встановлює інтевал між символами у 5 пікселів.\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання елементів у CSS. Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому код `letter-spacing: 0px;` нічого не змінює?**]\nБільшість властивостей мають значення за замовчуванням.  Значення за замовчуванням - це стилі, які елемент матиме автоматично, до того, як ви додасте свою таблицю стилів.  Значенням за замовчуванням для коду `letter-spacing` є `0`, тому він не змінюєт текст.\n:::\n\n::: details [**Які можуть бути значення інтервалів між літерами?**]\nВи можете обирати між від'ємними та додатними числами. Від'ємні числа наближають літери одна до одної, а додатні - віддаляють..\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Інтервали між літерами\n\nВластивість `letter-spacing` задає інтервал між кожною літерою у текстових елементах.\n\n* Знайдіть код CSS, який змушує літери у слові \"Орхідеї!\" в тегу `h1` бути розташованими на більшій відстані одна від одної, ніж зазвичай.\n* Змініть тег `h2` так, щоб інтревал між літерами був два пікселі.\n* Також змініть міжлітерні інтервали в тегах абзацу та `h3`.",
        "CSD U2 text style letter spacing_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\nОсь приклад коду, який керує вирівнюванням тексту абзацу:\n\n```\np {\n  letter-spacing: 5px;\n}\n```\n\n* `p` - це _селектор_.Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `letter-spacing: 5px;` - це правило, за яким символи всередині тегів `p` розділяються 5 пікселями.\n  * `letter-spacing` - це _властивість_. Вона пояснює, про що йдеться в правилі, в даному випадку про інтервал між символами.\n  * `5px` - це _значення_. Воно пояснює, як слід застосовувати правило, в даному випадку встановлює інтевал між символами у 5 пікселів.\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання елементів у CSS. Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому код `letter-spacing: 0px;` нічого не змінює?**]\nБільшість властивостей мають значення за замовчуванням.  Значення за замовчуванням - це стилі, які елемент матиме автоматично, до того, як ви додасте свою таблицю стилів.  Значенням за замовчуванням для коду `letter-spacing` є `0`, тому він не змінюєт текст.\n:::\n\n::: details [**Які можуть бути значення інтервалів між літерами?**]\nВи можете обирати між від'ємними та додатними числами. Від'ємні числа наближають літери одна до одної, а додатні - віддаляють..\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Інтервали між літерами\n\nВластивість `letter-spacing` задає інтервал між кожною літерою у текстових елементах.\n\n* Знайдіть код CSS, який змушує літери у слові \"Орхідеї!\" в тегу `h1` бути розташованими на більшій відстані одна від одної, ніж зазвичай.\n* Змініть тег `h2` так, щоб інтревал між літерами був два пікселі.\n* Також змініть міжлітерні інтервали в тегах абзацу та `h3`.",
        "CSD U2 text style size_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює код?**]\nОсь код, який керує розміром тексту абзацу:\n\n    p {\n      font-size: 14px;\n    }\n\n-   `p` - це _селектор_.  Він визначає, які елементи мають дотримуватися правил всередині фігурних дужок `p` позначає абзац.\n-   `font-size: 14px;` - це правило, яке робить текст всередині тегів `p` певного розміру.\n    -   `font-size` - це _властивість_.  Вона пояснює, про що йдеться в правилі, в даному випадку про розмір тексту.\n    -   `14px` - це _значення_.  Воно пояснює, як слід застосовувати правило, в даному випадку змінюючи розмір тексту на 14 пікселів.\n        :::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, або скорочено `px`, - це спосіб вимірювання елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Зміна розміру тексту\n\nВи можете керувати іншими речами, окрім кольорів, за допомогою інших властивостей.\n\n# Завдання\n\n-   Знайдіть у таблиці стилів набір правил CSS, який визначає стиль для тегу абзацу.\n-   Змініть розмір тексту абзаців і заголовків.",
        "CSD U2 text style size_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює код?**]\nОсь код, який керує розміром тексту абзацу:\n\n    p {\n      font-size: 14px;\n    }\n\n-   `p` - це _селектор_.  Він визначає, які елементи мають дотримуватися правил всередині фігурних дужок `p` позначає абзац.\n-   `font-size: 14px;` - це правило, яке робить текст всередині тегів `p` певного розміру.\n    -   `font-size` - це _властивість_.  Вона пояснює, про що йдеться в правилі, в даному випадку про розмір тексту.\n    -   `14px` - це _значення_.  Воно пояснює, як слід застосовувати правило, в даному випадку змінюючи розмір тексту на 14 пікселів.\n        :::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, або скорочено `px`, - це спосіб вимірювання елементів у CSS.  Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Зміна розміру тексту\n\nВи можете керувати іншими речами, окрім кольорів, за допомогою інших властивостей.\n\n# Завдання\n\n-   Знайдіть у таблиці стилів набір правил CSS, який визначає стиль для тегу абзацу.\n-   Змініть розмір тексту абзаців і заголовків.",
        "CSD U2 text style text align_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\n\nОсь код, який керує вирівнюванням тексту абзацу:\n\n```\np {\n  text-align: left;\n}\n```\n\n* `p` - це _селектор_.  Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `text-align: left;` - це правило, за яким текст всередині тегів `p` вирівнюється по лівому краю абзацу.\n  * `text-align` - це _властивість_.  Вона пояснює, про що йдеться у правилі, у цьому випадку про вирівнювання тексту.\n  * `left` - це _значення_.  Воно пояснює, як слід застосовувати правило, у цьому випадку текст вирівнюється по лівому краю абзацу\n\n:::\n\n::: details [**Чому код `text-align: left;` нічого не змінює?**]\n\nБільшість властивостей мають значення за замовчуванням.  Значення за замовчуванням - це стилі, які елемент матиме автоматично, до того, як ви додасте свою таблицю стилів.  Значенням за замовчуванням для `text-align` є `left`, тому його вигляд не змінюється.\n\n:::\n\n::: details [**Які можуть бути значення для вирівнювання тексту?**]\n\nМожна обирати з-поміж \"left\" (за лівим краєм), \"right\" (за правим краєм), and \"center\" (за центром).  Більше про властивість вирівнювання тексту можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_text_text-align.asp\" target=\"_new\">W3Schools - CSS text-align Property</a>\n\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Вирівнювання тексту\n\nВластивість `text-align` задає горизонтальне (від краю до краю) положення тексту у кожному рядку.\n\n* Знайдіть код CSS, який вирівнює \"З Вікіпедії\" у тегу `h6` за правим краєм.\n* Змініть тег `h1` так, щоб він вирівнювався за центром сторінки.\n* Також змініть вирівнювання тегу абзацу.",
        "CSD U2 text style text align_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\n\nОсь код, який керує вирівнюванням тексту абзацу:\n\n```\np {\n  text-align: left;\n}\n```\n\n* `p` - це _селектор_.  Він вказує, які елементи підкорятимуться правилам всередині фігурних дужок. Символ `p` позначає абзац.\n* `text-align: left;` - це правило, за яким текст всередині тегів `p` вирівнюється по лівому краю абзацу.\n  * `text-align` - це _властивість_.  Вона пояснює, про що йдеться у правилі, у цьому випадку про вирівнювання тексту.\n  * `left` - це _значення_.  Воно пояснює, як слід застосовувати правило, у цьому випадку текст вирівнюється по лівому краю абзацу\n\n:::\n\n::: details [**Чому код `text-align: left;` нічого не змінює?**]\n\nБільшість властивостей мають значення за замовчуванням.  Значення за замовчуванням - це стилі, які елемент матиме автоматично, до того, як ви додасте свою таблицю стилів.  Значенням за замовчуванням для `text-align` є `left`, тому його вигляд не змінюється.\n\n:::\n\n::: details [**Які можуть бути значення для вирівнювання тексту?**]\n\nМожна обирати з-поміж \"left\" (за лівим краєм), \"right\" (за правим краєм), and \"center\" (за центром).  Більше про властивість вирівнювання тексту можна прочитати за посиланням <a href=\"http://www.w3schools.com/cssref/pr_text_text-align.asp\" target=\"_new\">W3Schools - CSS text-align Property</a>\n\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Вирівнювання тексту\n\nВластивість `text-align` задає горизонтальне (від краю до краю) положення тексту у кожному рядку.\n\n* Знайдіть код CSS, який вирівнює \"З Вікіпедії\" у тегу `h6` за правим краєм.\n* Змініть тег `h1` так, щоб він вирівнювався за центром сторінки.\n* Також змініть вирівнювання тегу абзацу.",
        "CSD U2 text style text shadow_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\nОсь код, який керує тінню тексту:\n\n```\np {\n  text-shadow: 5px 5px blue;\n}\n```\n\nВластивість `text-shadow` додає тексту \"тінь\", тобто створює дублікат тексту, але злегка зміщений так, щоб він виглядав як тінь. Перше значення вказує на те, наскільки тінь буде зміщена по горизонталі, а друге - наскільки тінь буде зміщена по вертикалі. І якщо ви хочете, ви можете змінити колір разом з іншими властивостями. Дізнатися більше можна за посиланням <a href=\"https://www.w3schools.com/cssref/css3_pr_text-shadow.asp\" target=\"_new\">W3Schools - CSS text-shadow Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS. Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому код <code>text-shadow: 0px 0px;</code> нічого не змінює?**]\nБільшість властивостей мають значення за замовчуванням.  Значення за замовчуванням - це стилі, які елемент отримає автоматично, до того, як ви додасте свою таблицю стилів.  Значення за замовчуванням для `text-shadow` - `0px 0px`, тому код не змінює текст.\n:::\n\n::: details [**Які можуть бути значення для тіні тексту??**]\nВи можете обирати між від'ємними та додатними числами. Від'ємні числа переміщують тінь вліво або вгору, а додатні числа переміщують тінь вправо або вниз.\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Текст із тінню\n\nВластивість `text-shadow` задає тінь для текстових елементів.\n\n* Знайдіть CSS код, який додає тінь до літер \"Скрипки Страдіварі\" у тегу `h1`.\n* Додайте тегу `h2` тінь, яка зміщена на 2 пікселі праворуч і вгшору від початкового тексту.\n* Також додайте тінь до тексту інших тегів.\n",
        "CSD U2 text style text shadow_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Як працює цей код?**]\nОсь код, який керує тінню тексту:\n\n```\np {\n  text-shadow: 5px 5px blue;\n}\n```\n\nВластивість `text-shadow` додає тексту \"тінь\", тобто створює дублікат тексту, але злегка зміщений так, щоб він виглядав як тінь. Перше значення вказує на те, наскільки тінь буде зміщена по горизонталі, а друге - наскільки тінь буде зміщена по вертикалі. І якщо ви хочете, ви можете змінити колір разом з іншими властивостями. Дізнатися більше можна за посиланням <a href=\"https://www.w3schools.com/cssref/css3_pr_text-shadow.asp\" target=\"_new\">W3Schools - CSS text-shadow Property</a>\n:::\n\n::: details [**Що означає `px` / Що таке піксель?**]\nПіксель, скорочено `px`, - це одиниця вимірювання розмірів елементів у CSS. Це розмір однієї світлової точки на екрані.\n:::\n\n::: details [**Чому код <code>text-shadow: 0px 0px;</code> нічого не змінює?**]\nБільшість властивостей мають значення за замовчуванням.  Значення за замовчуванням - це стилі, які елемент отримає автоматично, до того, як ви додасте свою таблицю стилів.  Значення за замовчуванням для `text-shadow` - `0px 0px`, тому код не змінює текст.\n:::\n\n::: details [**Які можуть бути значення для тіні тексту??**]\nВи можете обирати між від'ємними та додатними числами. Від'ємні числа переміщують тінь вліво або вгору, а додатні числа переміщують тінь вправо або вниз.\n:::\n\n::: details [**Навіщо потрібні всі ці розділові знаки?**]\nРозділові знаки, такі як фігурні дужки `{}`, двокрапка `:` і крапка з комою `;`, допомагають комп'ютеру зрозуміти правила в таблиці стилів.  Фігурні дужки містять усі правила для певного селектора.  Кожне правило повинно закінчуватися крапкою з комою, а властивості та значення завжди відокремлюються двокрапкою.\n:::\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n</div>\n\n# Текст із тінню\n\nВластивість `text-shadow` задає тінь для текстових елементів.\n\n* Знайдіть CSS код, який додає тінь до літер \"Скрипки Страдіварі\" у тегу `h1`.\n* Додайте тегу `h2` тінь, яка зміщена на 2 пікселі праворуч і вгшору від початкового тексту.\n* Також додайте тінь до тексту інших тегів.\n",
        "CSD U2 upload images_2021": "# Завантаження зображень\n\nДалі нам потрібно завантажити всі зображення у проєкт.\n\n# Завдання\n\n-   Завантажте у проєкт всі зображення, перелічені в плані проєкту.\n-   Впевніться, що всі імена файлів зображень відповідають правилам іменування",
        "CSD U2 upload images_2022": "# Завантаження зображень\n\nДалі нам потрібно завантажити всі зображення у проєкт.\n\n# Завдання\n\n-   Завантажте у проєкт всі зображення, перелічені в плані проєкту.\n-   Впевніться, що всі імена файлів зображень відповідають правилам іменування",
        "CSD U3 - Booleans Video_2019": "## Питання для обговорення\n\n-   Що таке логічний вираз?\n-   Який вираз буде вважатися істинним?\n-   Який вираз буде вважатися хибним?",
        "CSD U3 - Booleans Video_2021": "## Питання для обговорення\n\n-   Що таке логічний вираз?\n-   Який вираз буде вважатися істинним?\n-   Який вираз буде вважатися хибним?",
        "CSD U3 - Booleans Video_2022": "## Питання для обговорення\n\n-   Що таке логічний вираз?\n-   Який вираз буде вважатися істинним?\n-   Який вираз буде вважатися хибним?",
        "CSD U3 - Conditionals Video_2019": "## Питання для обговорення\n\n-   Наведи приклад ситуацій, у якій нам знадобиться оператор «if/else»",
        "CSD U3 - Conditionals Video_2021": "## Питання для обговорення\n\n-   Наведи приклад ситуацій, у якій нам знадобиться оператор «if/else»",
        "CSD U3 - Conditionals Video_2022": "## Питання для обговорення\n\n-   Наведи приклад ситуацій, у якій нам знадобиться оператор «if/else»",
        "CSD U3 - Simple Counter Predict": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 - Simple Counter Predict_2018": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 - Simple Counter Predict_2019": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 - Simple Counter Predict_2021": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 - Simple Counter Predict_2022": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 - complex - key up and down_2021": "# Реакція на одне натискання\n\nЦя гра рахує, скільки разів натиснуто пробіл, але продовжує зараховувати бали, коли пробіл залишається натиснутим, навіть якщо це не нове натискання.\n\nБлок `keyWentDown` додає бал лише за нові натискання, тому він найкраще підійде для цієї програми.\n\n# Завдання\n\n* Запусти програму, щоб побачити, як вона працює.\n* Зміни код для використання блоку `keyWentDown`, щоб програма нараховувала бали лише за нові натискання.",
        "CSD U3 - complex - key up and down_2022": "# Реакція на одне натискання\n\nЦя гра рахує, скільки разів натиснуто пробіл, але продовжує зараховувати бали, коли пробіл залишається натиснутим, навіть якщо це не нове натискання.\n\nБлок `keyWentDown` додає бал лише за нові натискання, тому він найкраще підійде для цієї програми.\n\n# Завдання\n\n* Запусти програму, щоб побачити, як вона працює.\n* Зміни код для використання блоку `keyWentDown`, щоб програма нараховувала бали лише за нові натискання.",
        "CSD U3 - complex - mouse down_2021": "# Клацання мишею\n\nЦе програма, яка опускає кульку на екрані.  Зроби так, щоб кулька підіймалась і опускалась в залежності від того, чи клацає користувач мишею.\n\n# Завдання\n\n-   Додай код, який перевіряє, чи натиснута кнопка миші.\n-   Перемісти кульку вгору, якщо курсор миші знизу. В іншому випадку, перемісти кульку вниз.",
        "CSD U3 - complex - mouse down_2022": "# Клацання мишею\n\nЦе програма, яка опускає кульку на екрані.  Зроби так, щоб кулька підіймалась і опускалась в залежності від того, чи клацає користувач мишею.\n\n# Завдання\n\n-   Додай код, який перевіряє, чи натиснута кнопка миші.\n-   Перемісти кульку вгору, якщо курсор миші знизу. В іншому випадку, перемісти кульку вниз.",
        "CSD U3 - complex - mouse move_2021": "<img src=\"https://images.code.org/2dc7f2b3aaf8020d94985a62ba81817c-image-1585767324011.gif\" style=\"float:right\">\n\n# mouseDidMove\n\nМи можемо використовувати логічні вирази для перевірки того, чи рухалася миша. Блок `mouseDidMove` дасть значення `ні`, якщо миша нерухома, і значення `так`, якщо миша рухалася.\n\n# Завдання\nНаразі ця програма просто показує спрайт сільнички. Нам потрібно використовувати `mouseDidMove`, щоб ми могли \"трусити\" сільничку, рухаючи мишею туди-сюди.\n\n* Додай умову, яка перевіряє, чи `mouseDidMove`.\n* Якщо умова істинна, поверни спрайт сільнички випадковим чином вліво або вправо.\n\n_Додаткове завдання: Чи можеш ти відстежити, скільки разів команда `mouseDidMove` струшує сільничку, а потім повернути її правим боком догори після 100 струшувань?_\n\n",
        "CSD U3 - complex - mouse move_2022": "<img src=\"https://images.code.org/2dc7f2b3aaf8020d94985a62ba81817c-image-1585767324011.gif\" style=\"float:right\">\n\n# mouseDidMove\n\nМи можемо використовувати логічні вирази для перевірки того, чи рухалася миша. Блок `mouseDidMove` дасть значення `ні`, якщо миша нерухома, і значення `так`, якщо миша рухалася.\n\n# Завдання\nНаразі ця програма просто показує спрайт сільнички. Нам потрібно використовувати `mouseDidMove`, щоб ми могли \"трусити\" сільничку, рухаючи мишею туди-сюди.\n\n* Додай умову, яка перевіряє, чи `mouseDidMove`.\n* Якщо умова істинна, поверни спрайт сільнички випадковим чином вліво або вправо.\n\n_Додаткове завдання: Чи можеш ти відстежити, скільки разів команда `mouseDidMove` струшує сільничку, а потім повернути її правим боком догори після 100 струшувань?_\n\n",
        "CSD U3 - conditionals - first conditional 2_2021": "<img src=\"https://images.code.org/abd459d8d1477ac2f582417f4334cdaa-image-1466107090414.gif\" style=\"width:200px;float:right\">\n\n# Видимий\n\nІноді корисно приховати зображення на деякий час, а потім показати його знову. Це можна зробити за допомогою властивості `visible`. Ця властивість дещо відрізняється від інших властивостей, з якими ми зустрічалися раніше: Це логічне значення, або `так` (спрайт є видимим), або `ні` (спрайт **не** є видимим). За замовчуванням для властивості \"видимий\" встановлене значення `так`.\n\n# Завдання\nЗроби так, щоб кулька лускала, коли вона доторкнеться до краю ігрового поля!!\n\n* Додай умову, яка перевіряє, чи досягла кулька краю.\n\t* Використовуй спостерігач за значенням `balloon.scale` для допомоги.\n* Створи луснутий спрайт, який використовує ефект \"pop\" на вкладці анімації.\n* Використовуй властивість `visible`, щоб зробити спрайт \"луснутий\" прихованим на початку.\n* Всередині оператора `if` додай два оператори.\n\t* Той, що встановлює властивість 'visible', щоб приховати спрайт кульки.\n    * Той, що встановлює властивість `visible` для показу луснутого спрайта.\n",
        "CSD U3 - conditionals - first conditional 2_2022": "<img src=\"https://images.code.org/abd459d8d1477ac2f582417f4334cdaa-image-1466107090414.gif\" style=\"width:200px;float:right\">\n\n# Видимий\n\nІноді корисно приховати зображення на деякий час, а потім показати його знову. Це можна зробити за допомогою властивості `visible`. Ця властивість дещо відрізняється від інших властивостей, з якими ми зустрічалися раніше: Це логічне значення, або `так` (спрайт є видимим), або `ні` (спрайт **не** є видимим). За замовчуванням для властивості \"видимий\" встановлене значення `так`.\n\n# Завдання\nЗроби так, щоб кулька лускала, коли вона доторкнеться до краю ігрового поля!!\n\n* Додай умову, яка перевіряє, чи досягла кулька краю.\n\t* Використовуй спостерігач за значенням `balloon.scale` для допомоги.\n* Створи луснутий спрайт, який використовує ефект \"pop\" на вкладці анімації.\n* Використовуй властивість `visible`, щоб зробити спрайт \"луснутий\" прихованим на початку.\n* Всередині оператора `if` додай два оператори.\n\t* Той, що встановлює властивість 'visible', щоб приховати спрайт кульки.\n    * Той, що встановлює властивість `visible` для показу луснутого спрайта.\n",
        "CSD U3 - conditionals - transition_2021": "# Логічні вирази\n\nПрограма малює гоночний автомобіль і фінішну лінію. Ми збираємося з'ясувати, коли гоночний автомобіль перетне фінішну лінію. Всі спрайти вже налаштовані.\n\n# Завдання\n\n-   Додай оператор `console.log` всередині циклу малювання. ( [Де саме](#triggercallout=callout) )\n-   Додай логічний вираз у блок `console.log`, який запитує \"Чи є позиція Х гоночного автомобіля меншою за позицію Х фінішної лінії?\"\n-   Переглянь вихідні дані програми під час руху автомобіля. Коли вихідні дані змінюються? Чому?",
        "CSD U3 - conditionals - transition_2022": "# Логічні вирази\n\nПрограма малює гоночний автомобіль і фінішну лінію. Ми збираємося з'ясувати, коли гоночний автомобіль перетне фінішну лінію. Всі спрайти вже налаштовані.\n\n# Завдання\n\n-   Додай оператор `console.log` всередині циклу малювання. ( [Де саме](#triggercallout=callout) )\n-   Додай логічний вираз у блок `console.log`, який запитує \"Чи є позиція Х гоночного автомобіля меншою за позицію Х фінішної лінії?\"\n-   Переглянь вихідні дані програми під час руху автомобіля. Коли вихідні дані змінюються? Чому?",
        "CSD U3 AnimationsMulti Play Defender_2021": "# Захищай торт!\n\nЦе приклад гри, яку ми створимо впродовж цього уроку. Щоб захистити свій торт, переміщуй прибульця за допомогою клавіш зі стрілками, щоб заблокувати сонечка і зіштовхнути їх у воду.\n\n# Завдання\n\nЗвернися до однокласника і склади список наступної інформації.\n\nЯкби тобі було потрібно створити таку програму…\n\n-   Які спрайти тобі знадобляться?\n-   Які змінні тобі знадобляться?\n-   Які функції тобі знадобляться?",
        "CSD U3 AnimationsMulti Play Defender_2022": "# Захищай торт!\n\nЦе приклад гри, яку ми створимо впродовж цього уроку. Щоб захистити свій торт, переміщуй прибульця за допомогою клавіш зі стрілками, щоб заблокувати сонечка і зіштовхнути їх у воду.\n\n# Завдання\n\nЗвернися до однокласника і склади список наступної інформації.\n\nЯкби тобі було потрібно створити таку програму…\n\n-   Які спрайти тобі знадобляться?\n-   Які змінні тобі знадобляться?\n-   Які функції тобі знадобляться?",
        "CSD U3 AnimationsMulti defender animate cake enemies_2021": "# Початок роботи: Налаштування анімації\n\nПерш ніж почати, нам знадобляться кращі анімації для кожного зі спрайтів.\n\n# Завдання\n\n-   На вкладці Анімація можна знайти анімації для кожного зі спрайтів. Подивися, які вони бувають.\n-   У твоєму коді задай кожному спрайту відповідну анімацію. **Наразі використовуй ті, що надані**, але пізніше ти зможеш змінити їх.",
        "CSD U3 AnimationsMulti defender animate cake enemies_2022": "# Початок роботи: Налаштування анімації\n\nПерш ніж почати, нам знадобляться кращі анімації для кожного зі спрайтів.\n\n# Завдання\n\n-   На вкладці Анімація можна знайти анімації для кожного зі спрайтів. Подивися, які вони бувають.\n-   У твоєму коді задай кожному спрайту відповідну анімацію. **Наразі використовуй ті, що надані**, але пізніше ти зможеш змінити їх.",
        "CSD U3 AnimationsMulti defender animate player_2021": "# Зміна анімації гравця\n\nАнімацію можна змінювати, коли гравець змінює напрямок руху.\n\n# Завдання\n\n-   Скопіюй анімацію спрайта гравця на вкладці \"Анімація\".\n-   Перевертай кожен кадр нової анімації так, щоб спрайт був спрямований у протилежний бік.\n-   Перейменуй нову анімацію.\n-   У функції `movePlayer` налаштуй анімацію спрайта так, щоб гравець змінював напрямок руху коли натискаються стрілки \"вліво\" та \"вправо\".",
        "CSD U3 AnimationsMulti defender animate player_2022": "# Зміна анімації гравця\n\nАнімацію можна змінювати, коли гравець змінює напрямок руху.\n\n# Завдання\n\n-   Скопіюй анімацію спрайта гравця на вкладці \"Анімація\".\n-   Перевертай кожен кадр нової анімації так, щоб спрайт був спрямований у протилежний бік.\n-   Перейменуй нову анімацію.\n-   У функції `movePlayer` налаштуй анімацію спрайта так, щоб гравець змінював напрямок руху коли натискаються стрілки \"вліво\" та \"вправо\".",
        "CSD U3 AnimationsMulti defender background_2021": "# Тло для найвищого рахунку\n\nСтвори довільне нове тло, яке з'являтиметься, коли гравець набирає хороший результат (наприклад, зроби тло рожевим, коли гравець набирає понад 10 балів)\n\n# Завдання\n* Під час малювання тла додай інструкцію якщо/інакше, щоб перевірити, чи результат перевищує якесь число, наприклад, 10\n* Додай звичайне тло у гілку \"інакше\"\n* Намалюй інше тло, якщо результат вище цього числа",
        "CSD U3 AnimationsMulti defender background_2022": "# Тло для найвищого рахунку\n\nСтвори довільне нове тло, яке з'являтиметься, коли гравець набирає хороший результат (наприклад, зроби тло рожевим, коли гравець набирає понад 10 балів)\n\n# Завдання\n* Під час малювання тла додай інструкцію якщо/інакше, щоб перевірити, чи результат перевищує якесь число, наприклад, 10\n* Додай звичайне тло у гілку \"інакше\"\n* Намалюй інше тло, якщо результат вище цього числа",
        "CSD U3 AnimationsMulti defender changevisuals_2021": "# Зміна візуальних ефектів\n\nЗміни візуальне оформлення гри так, щоб твій гравець, вороги або торт виглядали по-іншому.\n\n# Завдання\n\n* Зміни спрайт гравця\n* Зміни спрайт ворога\n* Зміни спрайт торта",
        "CSD U3 AnimationsMulti defender changevisuals_2022": "# Зміна візуальних ефектів\n\nЗміни візуальне оформлення гри так, щоб твій гравець, вороги або торт виглядали по-іншому.\n\n# Завдання\n\n* Зміни спрайт гравця\n* Зміни спрайт ворога\n* Зміни спрайт торта",
        "CSD U3 AnimationsMulti defender create set enemies": "# Створення функцій\n\n<img src=\"https://images.code.org/126982cbde9ae62e9a77ca1e53c92024-image-1476291567280.58.00 AM.png\" style=\"float:right; height:90px\">\n\nНаша програма у двох місцях містить код  для розміщення ворогів у лівій частині екрана у випадковому місці. Можна створити функції для скидання кожного з двох ворогів, щоб видалити повтори з нашої програми. Це полегшить читання програми, дозволить нам легше її змінювати та дозволить швидко скинути спрайти в інших точках програми, якщо це буде необхідно.\n\n# Завдання\n\n<img src=\"https://images.code.org/01a2f4d9725162482fda9f74734c992c-image-1476461412974.09.52 AM.png\" style=\"\nfloat:right; height:70px\">\n\n-   У нижній частині вашої програми створи дві нові функції, `setEnemy1` і `setEnemy2`.\n-   Усередині кожної з цих функцій розмісти код, який розміщує ворогів у лівій частині екрана та надає їм випадкову позицію Y.\n-   Усюди, де у програмі з’являється код для `setEnemy1` і `setEnemy2`, заміни його викликом функцій, які ми щойно створили.",
        "CSD U3 AnimationsMulti defender create set enemies_2018": "# Створення функцій\n\n<img src=\"https://images.code.org/126982cbde9ae62e9a77ca1e53c92024-image-1476291567280.58.00 AM.png\" style=\"float:right; height:90px\">\n\nНаша програма у двох місцях містить код  для розміщення ворогів у лівій частині екрана у випадковому місці. Можна створити функції для скидання кожного з двох ворогів, щоб видалити повтори з нашої програми. Це полегшить читання програми, дозволить нам легше її змінювати та дозволить швидко скинути спрайти в інших точках програми, якщо це буде необхідно.\n\n# Завдання\n\n<img src=\"https://images.code.org/01a2f4d9725162482fda9f74734c992c-image-1476461412974.09.52 AM.png\" style=\"\nfloat:right; height:70px\">\n\n-   У нижній частині вашої програми створи дві нові функції, `setEnemy1` і `setEnemy2`.\n-   Усередині кожної з цих функцій розмісти код, який розміщує ворогів у лівій частині екрана та надає їм випадкову позицію Y.\n-   Усюди, де у програмі з’являється код для `setEnemy1` і `setEnemy2`, заміни його викликом функцій, які ми щойно створили.",
        "CSD U3 AnimationsMulti defender create set enemies_2019": "# Створення функцій\n\n<img src=\"https://images.code.org/126982cbde9ae62e9a77ca1e53c92024-image-1476291567280.58.00 AM.png\" style=\"float:right; height:90px\">\n\nНаша програма у двох місцях містить код  для розміщення ворогів у лівій частині екрана у випадковому місці. Можна створити функції для скидання кожного з двох ворогів, щоб видалити повтори з нашої програми. Це полегшить читання програми, дозволить нам легше її змінювати та дозволить швидко скинути спрайти в інших точках програми, якщо це буде необхідно.\n\n# Завдання\n\n<img src=\"https://images.code.org/01a2f4d9725162482fda9f74734c992c-image-1476461412974.09.52 AM.png\" style=\"\nfloat:right; height:70px\">\n\n-   У нижній частині вашої програми створи дві нові функції, `setEnemy1` і `setEnemy2`.\n-   Усередині кожної з цих функцій розмісти код, який розміщує ворогів у лівій частині екрана та надає їм випадкову позицію Y.\n-   Усюди, де у програмі з’являється код для `setEnemy1` і `setEnemy2`, заміни його викликом функцій, які ми щойно створили.",
        "CSD U3 AnimationsMulti defender create set enemies_2021": "# Створення функцій\n\n<img src=\"https://images.code.org/126982cbde9ae62e9a77ca1e53c92024-image-1476291567280.58.00 AM.png\" style=\"float:right; height:90px\">\n\nНаша програма у двох місцях містить код  для розміщення ворогів у лівій частині екрана у випадковому місці. Можна створити функції для скидання кожного з двох ворогів, щоб видалити повтори з нашої програми. Це полегшить читання програми, дозволить нам легше її змінювати та дозволить швидко скинути спрайти в інших точках програми, якщо це буде необхідно.\n\n# Завдання\n\n<img src=\"https://images.code.org/01a2f4d9725162482fda9f74734c992c-image-1476461412974.09.52 AM.png\" style=\"\nfloat:right; height:70px\">\n\n-   У нижній частині вашої програми створи дві нові функції, `setEnemy1` і `setEnemy2`.\n-   Усередині кожної з цих функцій розмісти код, який розміщує ворогів у лівій частині екрана та надає їм випадкову позицію Y.\n-   Усюди, де у програмі з’являється код для `setEnemy1` і `setEnemy2`, заміни його викликом функцій, які ми щойно створили.",
        "CSD U3 AnimationsMulti defender create set enemies_2022": "# Створення функцій\n\n<img src=\"https://images.code.org/126982cbde9ae62e9a77ca1e53c92024-image-1476291567280.58.00 AM.png\" style=\"float:right; height:90px\">\n\nНаша програма у двох місцях містить код  для розміщення ворогів у лівій частині екрана у випадковому місці. Можна створити функції для скидання кожного з двох ворогів, щоб видалити повтори з нашої програми. Це полегшить читання програми, дозволить нам легше її змінювати та дозволить швидко скинути спрайти в інших точках програми, якщо це буде необхідно.\n\n# Завдання\n\n<img src=\"https://images.code.org/01a2f4d9725162482fda9f74734c992c-image-1476461412974.09.52 AM.png\" style=\"\nfloat:right; height:70px\">\n\n-   У нижній частині вашої програми створи дві нові функції, `setEnemy1` і `setEnemy2`.\n-   Усередині кожної з цих функцій розмісти код, який розміщує ворогів у лівій частині екрана та надає їм випадкову позицію Y.\n-   Усюди, де у програмі з’являється код для `setEnemy1` і `setEnemy2`, заміни його викликом функцій, які ми щойно створили.",
        "CSD U3 AnimationsMulti defender displace enemies": "# Переміщення ворогів\n\nНастав час написати код для взаємодії зі спрайтами. Спрайт гравця повинен витісняти ворожі спрайти.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `displaceEnemies`.\n\n-   Напиши код, який змусить гравця витіснити обидва ворожі спрайти.\n-   Перевір свою програму, щоб переконатися, що гравець зміщує ворогів, але вони продовжують рухатися одразу після того, як гравець віддаляється.\n\n_Підказка: можна використовувати `sprite.debug`, щоб побачити колайдери своїх спрайтів, якщо потрібно налагодити програму._",
        "CSD U3 AnimationsMulti defender displace enemies_2018": "# Переміщення ворогів\n\nНастав час написати код для взаємодії зі спрайтами. Спрайт гравця повинен витісняти ворожі спрайти.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `displaceEnemies`.\n\n-   Напиши код, який змусить гравця витіснити обидва ворожі спрайти.\n-   Перевір свою програму, щоб переконатися, що гравець зміщує ворогів, але вони продовжують рухатися одразу після того, як гравець віддаляється.\n\n_Підказка: можна використовувати `sprite.debug`, щоб побачити колайдери своїх спрайтів, якщо потрібно налагодити програму._",
        "CSD U3 AnimationsMulti defender displace enemies_2019": "# Переміщення ворогів\n\nНастав час написати код для взаємодії зі спрайтами. Спрайт гравця повинен витісняти ворожі спрайти.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `displaceEnemies`.\n\n-   Напиши код, який змусить гравця витіснити обидва ворожі спрайти.\n-   Перевір свою програму, щоб переконатися, що гравець зміщує ворогів, але вони продовжують рухатися одразу після того, як гравець віддаляється.\n\n_Підказка: можна використовувати `sprite.debug`, щоб побачити колайдери своїх спрайтів, якщо потрібно налагодити програму._",
        "CSD U3 AnimationsMulti defender displace enemies_2021": "# Переміщення ворогів\n\nНастав час написати код для взаємодії зі спрайтами. Спрайт гравця повинен витісняти ворожі спрайти.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `displaceEnemies`.\n\n-   Напиши код, який змусить гравця витіснити обидва ворожі спрайти.\n-   Перевір свою програму, щоб переконатися, що гравець зміщує ворогів, але вони продовжують рухатися одразу після того, як гравець віддаляється.\n\n_Підказка: можна використовувати `sprite.debug`, щоб побачити колайдери своїх спрайтів, якщо потрібно налагодити програму._",
        "CSD U3 AnimationsMulti defender displace enemies_2022": "# Переміщення ворогів\n\nНастав час написати код для взаємодії зі спрайтами. Спрайт гравця повинен витісняти ворожі спрайти.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `displaceEnemies`.\n\n-   Напиши код, який змусить гравця витіснити обидва ворожі спрайти.\n-   Перевір свою програму, щоб переконатися, що гравець зміщує ворогів, але вони продовжують рухатися одразу після того, як гравець віддаляється.\n\n_Підказка: можна використовувати `sprite.debug`, щоб побачити колайдери своїх спрайтів, якщо потрібно налагодити програму._",
        "CSD U3 AnimationsMulti defender endgame_2021": "#Завершення гри\n\nЗапрограмуй завершення гри після того, як троє ворогів дістануться до торта і роздрукуй рахунок.\n\n# Завдання\n\n* Створи змінну, яка відстежує, скільки ворогів дісталося до торта.\n* Використовуй умовний оператор, щоб перевірити, чи дістався ворог до торта.\n   * Якщо так, збільш значення змінної.\n* Використовуй умову, щоб перевірити, чи досягло значення змінної трьох.\n   * Якщо це сталося, заверши гру кінцевим екраном, який показує остаточний рахунок.\n",
        "CSD U3 AnimationsMulti defender endgame_2022": "#Завершення гри\n\nЗапрограмуй завершення гри після того, як троє ворогів дістануться до торта і роздрукуй рахунок.\n\n# Завдання\n\n* Створи змінну, яка відстежує, скільки ворогів дісталося до торта.\n* Використовуй умовний оператор, щоб перевірити, чи дістався ворог до торта.\n   * Якщо так, збільш значення змінної.\n* Використовуй умову, щоб перевірити, чи досягло значення змінної трьох.\n   * Якщо це сталося, заверши гру кінцевим екраном, який показує остаточний рахунок.\n",
        "CSD U3 AnimationsMulti defender enemies move_2021": "# Переміщення ворогів\n\nНам потрібно буде розмістити спрайти ворогів у випадкових положеннях і переміщувати їх по екрану.\n\n# Завдання\n\n-   Після створення кожного спрайту ворога...\n    -   Встанови його позицію Х рівною 0.\n    -   Встанови його позицію Y як випадкове число в діапазоні від 150 до 250.\n    -   Встанови його швидкість по Х рівною 2.\n-   Протестуй свою програму. Ворожі спрайти повинні рухатися по мосту.",
        "CSD U3 AnimationsMulti defender enemies move_2022": "# Переміщення ворогів\n\nНам потрібно буде розмістити спрайти ворогів у випадкових положеннях і переміщувати їх по екрану.\n\n# Завдання\n\n-   Після створення кожного спрайту ворога...\n    -   Встанови його позицію Х рівною 0.\n    -   Встанови його позицію Y як випадкове число в діапазоні від 150 до 250.\n    -   Встанови його швидкість по Х рівною 2.\n-   Протестуй свою програму. Ворожі спрайти повинні рухатися по мосту.",
        "CSD U3 AnimationsMulti defender enemies touch cake sprite2": "# Торкання торта: Друге сонечко\n\nНаш перший ворожий спрайт має скидатися, коли він потрапляє на торт. Тепер потрібно, щоб інше сонечко також скидалося.\n\n# Завдання\n\nУсередині функції `enemiesTouchCake` ми мали написати код, який скидає `enemy1`.\n\n-   Скопіюй весь оператор if, який ми написали на останньому рівні (Ctrl-C).\n-   Встав код у функцію `enemiesTouchCake` трохи нижче останнього рядка (Ctrl-V).\n-   Зміни ім'я спрайта в цьому коді з `enemy1` на `enemy2`.\n\nПеревір свій код. Тепер обидві комашки повинні скидатися, коли вони торкнуться торта.",
        "CSD U3 AnimationsMulti defender enemies touch cake sprite2_2018": "# Торкання торта: Друге сонечко\n\nНаш перший ворожий спрайт має скидатися, коли він потрапляє на торт. Тепер потрібно, щоб інше сонечко також скидалося.\n\n# Завдання\n\nУсередині функції `enemiesTouchCake` ми мали написати код, який скидає `enemy1`.\n\n-   Скопіюй весь оператор if, який ми написали на останньому рівні (Ctrl-C).\n-   Встав код у функцію `enemiesTouchCake` трохи нижче останнього рядка (Ctrl-V).\n-   Зміни ім'я спрайта в цьому коді з `enemy1` на `enemy2`.\n\nПеревір свій код. Тепер обидві комашки повинні скидатися, коли вони торкнуться торта.",
        "CSD U3 AnimationsMulti defender enemies touch cake sprite2_2019": "# Торкання торта: Друге сонечко\n\nНаш перший ворожий спрайт має скидатися, коли він потрапляє на торт. Тепер потрібно, щоб інше сонечко також скидалося.\n\n# Завдання\n\nУсередині функції `enemiesTouchCake` ми мали написати код, який скидає `enemy1`.\n\n-   Скопіюй весь оператор if, який ми написали на останньому рівні (Ctrl-C).\n-   Встав код у функцію `enemiesTouchCake` трохи нижче останнього рядка (Ctrl-V).\n-   Зміни ім'я спрайта в цьому коді з `enemy1` на `enemy2`.\n\nПеревір свій код. Тепер обидві комашки повинні скидатися, коли вони торкнуться торта.",
        "CSD U3 AnimationsMulti defender enemies touch cake sprite2_2021": "# Торкання торта: Друге сонечко\n\nНаш перший ворожий спрайт має скидатися, коли він потрапляє на торт. Тепер потрібно, щоб інше сонечко також скидалося.\n\n# Завдання\n\nУсередині функції `enemiesTouchCake` ми мали написати код, який скидає `enemy1`.\n\n-   Скопіюй весь оператор if, який ми написали на останньому рівні (Ctrl-C).\n-   Встав код у функцію `enemiesTouchCake` трохи нижче останнього рядка (Ctrl-V).\n-   Зміни ім'я спрайта в цьому коді з `enemy1` на `enemy2`.\n\nПеревір свій код. Тепер обидві комашки повинні скидатися, коли вони торкнуться торта.",
        "CSD U3 AnimationsMulti defender enemies touch cake sprite2_2022": "# Торкання торта: Друге сонечко\n\nНаш перший ворожий спрайт має скидатися, коли він потрапляє на торт. Тепер потрібно, щоб інше сонечко також скидалося.\n\n# Завдання\n\nУсередині функції `enemiesTouchCake` ми мали написати код, який скидає `enemy1`.\n\n-   Скопіюй весь оператор if, який ми написали на останньому рівні (Ctrl-C).\n-   Встав код у функцію `enemiesTouchCake` трохи нижче останнього рядка (Ctrl-V).\n-   Зміни ім'я спрайта в цьому коді з `enemy1` на `enemy2`.\n\nПеревір свій код. Тепер обидві комашки повинні скидатися, коли вони торкнуться торта.",
        "CSD U3 AnimationsMulti defender enemies touch cake_2021": "# Торкання торта\n\nЯкщо вороги дійдуть до торта, треба перемістити їх назад у ліву частину екрана і зменшити рахунок. Для початку тобі потрібно **написати код лише для одного з ворогів**.\n\n# Завдання\n\n-   Всередині функції `enemiesTouchCake` використай умовний оператор для визначення того, чи доторкнувся ворог1 до торта.\n-   Якщо доторкнувся...\n    -   Запрограмуй цикл для ворога, щоб він переміщувався назад у ліву частину екрана\n    -   Встанови його позицію Y як випадкове число в діапазоні від 150 до 250. \n    -   Використовуй шаблон лічильника, щоб зменшити рахунок на 2.\n-   Протестуй свій код. Одне з сонечок має почати з початку, коли дістанеться до торта, а рахунок має зменшитись на 2.",
        "CSD U3 AnimationsMulti defender enemies touch cake_2022": "# Торкання торта\n\nЯкщо вороги дійдуть до торта, треба перемістити їх назад у ліву частину екрана і зменшити рахунок. Для початку тобі потрібно **написати код лише для одного з ворогів**.\n\n# Завдання\n\n-   Всередині функції `enemiesTouchCake` використай умовний оператор для визначення того, чи доторкнувся ворог1 до торта.\n-   Якщо доторкнувся...\n    -   Запрограмуй цикл для ворога, щоб він переміщувався назад у ліву частину екрана\n    -   Встанови його позицію Y як випадкове число в діапазоні від 150 до 250. \n    -   Використовуй шаблон лічильника, щоб зменшити рахунок на 2.\n-   Протестуй свій код. Одне з сонечок має почати з початку, коли дістанеться до торта, а рахунок має зменшитись на 2.",
        "CSD U3 AnimationsMulti defender move player_2021": "# Рух вліво та вправо\n\nТепер нам потрібно змусити персонажа рухатися вліво і вправо та змінити його анімацію.\n\n# Завдання\n\n-   Всередині функції `movePlayer`...\n    -   Використовуй умовний оператор, щоб визначити, коли натискається стрілка \"вправо\".\n    -   Якщо так, перемісти спрайт гравця праворуч на 3.\n    -   Використай інший умовний оператор, щоб перемістити гравця вліво коли натискається стрілка \"вліво\".\n-   Протестуй свою гру. Тепер спрайт твого персонажа повинен рухатися вліво і вправо, коли ти натискаєш стрілки вліво і вправо.",
        "CSD U3 AnimationsMulti defender move player_2022": "# Рух вліво та вправо\n\nТепер нам потрібно змусити персонажа рухатися вліво і вправо та змінити його анімацію.\n\n# Завдання\n\n-   Всередині функції `movePlayer`...\n    -   Використовуй умовний оператор, щоб визначити, коли натискається стрілка \"вправо\".\n    -   Якщо так, перемісти спрайт гравця праворуч на 3.\n    -   Використай інший умовний оператор, щоб перемістити гравця вліво коли натискається стрілка \"вліво\".\n-   Протестуй свою гру. Тепер спрайт твого персонажа повинен рухатися вліво і вправо, коли ти натискаєш стрілки вліво і вправо.",
        "CSD U3 AnimationsMulti defender move up down_2021": "# Рух вгору і вниз\n\nСпрайт персонажа також має рухатися вгору і вниз.\n\n# Завдання\n\n-   Всередині функції `movePlayer`...\n    -   Використовуй умовний оператор, щоб визначити, коли натискається стрілка \"вгору\".\n    -   Якщо так, перемістити спрайт гравця вгору на 3.\n    -   Використай інший умовний оператор, щоб перемістити гравця вниз, коли натискається стрілка \"вниз\".\n-   Протестуй свій код. Тепер твій персонаж повинен рухатися в усіх чотирьох напрямках.",
        "CSD U3 AnimationsMulti defender move up down_2022": "# Рух вгору і вниз\n\nСпрайт персонажа також має рухатися вгору і вниз.\n\n# Завдання\n\n-   Всередині функції `movePlayer`...\n    -   Використовуй умовний оператор, щоб визначити, коли натискається стрілка \"вгору\".\n    -   Якщо так, перемістити спрайт гравця вгору на 3.\n    -   Використай інший умовний оператор, щоб перемістити гравця вниз, коли натискається стрілка \"вниз\".\n-   Протестуй свій код. Тепер твій персонаж повинен рухатися в усіх чотирьох напрямках.",
        "CSD U3 AnimationsMulti defender randomizespeed_2021": "# Випадкова швидкість ворогів\n\nВикористовуй випадкові числа, щоб зробити деяких ворогів швидшими або повільнішими\n\n# Завдання\n\n* Створи дві змінні для зберігання швидкості `enemy1` та `enemy2`\n* Встанови швидкість двох ворогів за допомогою двох змінних швидкості\n* Коли ти створюєш кожного ворога, генеруй випадкову швидкість",
        "CSD U3 AnimationsMulti defender randomizespeed_2022": "# Випадкова швидкість ворогів\n\nВикористовуй випадкові числа, щоб зробити деяких ворогів швидшими або повільнішими\n\n# Завдання\n\n* Створи дві змінні для зберігання швидкості `enemy1` та `enemy2`\n* Встанови швидкість двох ворогів за допомогою двох змінних швидкості\n* Коли ти створюєш кожного ворога, генеруй випадкову швидкість",
        "CSD U3 AnimationsMulti defender touch water": "# Торкання до води\n\nОстання частина гри, яку нам потрібно буде написати - це код для скидання спрайтів, коли вони торкаються води. На щастя, ми вже мали б написати функції, які скидають кожен спрайт, тому нам просто потрібно дізнатися, коли будь-який спрайт залишає міст. Почни із написання коду для одного ворога, а потім скопіюй, встав та внеси невеликі зміни, щоб створити код для другого ворога.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `enemiesTouchWater`.\n\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на вершині мосту, перевіривши, чи його значення Y менше 140. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на нижній частині мосту, перевіривши, чи його значення Y перевищує 260. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Перевір свою програму для першого ворожого спрайту. Переконайся, що спрайт скидається і рахунок зростає.\n-   Коли він запрацює, скопіюй та встав написаний код, щоб створити таку саму поведінку для `enemy2`. Тобі потрібно буде змінити назву спрайту та назву функції, які ти використовуєш.",
        "CSD U3 AnimationsMulti defender touch water_2018": "# Торкання до води\n\nОстання частина гри, яку нам потрібно буде написати - це код для скидання спрайтів, коли вони торкаються води. На щастя, ми вже мали б написати функції, які скидають кожен спрайт, тому нам просто потрібно дізнатися, коли будь-який спрайт залишає міст. Почни із написання коду для одного ворога, а потім скопіюй, встав та внеси невеликі зміни, щоб створити код для другого ворога.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `enemiesTouchWater`.\n\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на вершині мосту, перевіривши, чи його значення Y менше 140. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на нижній частині мосту, перевіривши, чи його значення Y перевищує 260. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Перевір свою програму для першого ворожого спрайту. Переконайся, що спрайт скидається і рахунок зростає.\n-   Коли він запрацює, скопіюй та встав написаний код, щоб створити таку саму поведінку для `enemy2`. Тобі потрібно буде змінити назву спрайту та назву функції, які ти використовуєш.",
        "CSD U3 AnimationsMulti defender touch water_2019": "# Торкання до води\n\nОстання частина гри, яку нам потрібно буде написати - це код для скидання спрайтів, коли вони торкаються води. На щастя, ми вже мали б написати функції, які скидають кожен спрайт, тому нам просто потрібно дізнатися, коли будь-який спрайт залишає міст. Почни із написання коду для одного ворога, а потім скопіюй, встав та внеси невеликі зміни, щоб створити код для другого ворога.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `enemiesTouchWater`.\n\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на вершині мосту, перевіривши, чи його значення Y менше 140. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на нижній частині мосту, перевіривши, чи його значення Y перевищує 260. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Перевір свою програму для першого ворожого спрайту. Переконайся, що спрайт скидається і рахунок зростає.\n-   Коли він запрацює, скопіюй та встав написаний код, щоб створити таку саму поведінку для `enemy2`. Тобі потрібно буде змінити назву спрайту та назву функції, які ти використовуєш.",
        "CSD U3 AnimationsMulti defender touch water_2021": "# Торкання до води\n\nОстання частина гри, яку нам потрібно буде написати - це код для скидання спрайтів, коли вони торкаються води. На щастя, ми вже мали б написати функції, які скидають кожен спрайт, тому нам просто потрібно дізнатися, коли будь-який спрайт залишає міст. Почни із написання коду для одного ворога, а потім скопіюй, встав та внеси невеликі зміни, щоб створити код для другого ворога.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `enemiesTouchWater`.\n\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на вершині мосту, перевіривши, чи його значення Y менше 140. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на нижній частині мосту, перевіривши, чи його значення Y перевищує 260. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Перевір свою програму для першого ворожого спрайту. Переконайся, що спрайт скидається і рахунок зростає.\n-   Коли він запрацює, скопіюй та встав написаний код, щоб створити таку саму поведінку для `enemy2`. Тобі потрібно буде змінити назву спрайту та назву функції, які ти використовуєш.",
        "CSD U3 AnimationsMulti defender touch water_2022": "# Торкання до води\n\nОстання частина гри, яку нам потрібно буде написати - це код для скидання спрайтів, коли вони торкаються води. На щастя, ми вже мали б написати функції, які скидають кожен спрайт, тому нам просто потрібно дізнатися, коли будь-який спрайт залишає міст. Почни із написання коду для одного ворога, а потім скопіюй, встав та внеси невеликі зміни, щоб створити код для другого ворога.\n\n# Завдання\n\nДля цього рівня ми будемо писати код у функції `enemiesTouchWater`.\n\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на вершині мосту, перевіривши, чи його значення Y менше 140. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Використовуй оператор if, щоб перевірити, чи ворог1 знаходиться на нижній частині мосту, перевіривши, чи його значення Y перевищує 260. В операторі if:\n    -   використовуй функцію setEnemy1, щоб скинути спрайт.\n    -   додавай 1 до рахунку.\n-   Перевір свою програму для першого ворожого спрайту. Переконайся, що спрайт скидається і рахунок зростає.\n-   Коли він запрацює, скопіюй та встав написаний код, щоб створити таку саму поведінку для `enemy2`. Тобі потрібно буде змінити назву спрайту та назву функції, які ти використовуєш.",
        "CSD U3 Boolean Modify_2021": "# Логічні вирази\n\nНайпростіші логічні вирази - це питання, на які комп'ютер може відповісти істиною або хибністю. \nІншими словами, обчислення логічних виразів дає значення \"істина\" або \"хибність\".\n\n# Завдання\nЧи зможеш ти змінити значення властивостей спрайта так, щоб кожен з логічних виразів набував значення 'Так' або `true`?\n\n- Переглянь всю програму, щоб побачити, як створюються `sprite1` та `sprite2` і які властивості порівнюються.\n- Визнач властивості спрайтів, які порівнюються, для кожного з логічних виразів.\n- Зміни код _лише у перших **11** рядках_ так, щоб кожен з операторів `console.log()` давав значення `так` або `true`.\n",
        "CSD U3 Boolean Modify_2022": "# Логічні вирази\n\nНайпростіші логічні вирази - це питання, на які комп'ютер може відповісти істиною або хибністю. \nІншими словами, обчислення логічних виразів дає значення \"істина\" або \"хибність\".\n\n# Завдання\nЧи зможеш ти змінити значення властивостей спрайта так, щоб кожен з логічних виразів набував значення 'Так' або `true`?\n\n- Переглянь всю програму, щоб побачити, як створюються `sprite1` та `sprite2` і які властивості порівнюються.\n- Визнач властивості спрайтів, які порівнюються, для кожного з логічних виразів.\n- Зміни код _лише у перших **11** рядках_ так, щоб кожен з операторів `console.log()` давав значення `так` або `true`.\n",
        "CSD U3 Complex Movement counter prediction": "# Швидкість і шаблон лічильника\n\nВикористання шаблону лічильника з властивостями спрайту X та Y дозволяє переміщувати спрайт плавним рухом по екрану. Натомість у цій програмі **шаблон лічильника використовується з властивістю `sprite.velocityX`**.\n\n# Прогнозування\n\nЯк ти думаєш, що станеться після запуску коду? Чому? Запустити код, щоб перевірити.",
        "CSD U3 Complex Movement counter prediction_2018": "# Швидкість і шаблон лічильника\n\nВикористання шаблону лічильника з властивостями спрайту X та Y дозволяє переміщувати спрайт плавним рухом по екрану. Натомість у цій програмі **шаблон лічильника використовується з властивістю `sprite.velocityX`**.\n\n# Прогнозування\n\nЯк ти думаєш, що станеться після запуску коду? Чому? Запустити код, щоб перевірити.",
        "CSD U3 Complex Movement counter prediction_2019": "# Швидкість і шаблон лічильника\n\nВикористання шаблону лічильника з властивостями спрайту X та Y дозволяє переміщувати спрайт плавним рухом по екрану. Натомість у цій програмі **шаблон лічильника використовується з властивістю `sprite.velocityX`**.\n\n# Прогнозування\n\nЯк ти думаєш, що станеться після запуску коду? Чому? Запустити код, щоб перевірити.",
        "CSD U3 Complex Movement counter prediction_2021": "# Швидкість і шаблон лічильника\n\nВикористання шаблону лічильника з властивостями спрайту X та Y дозволяє переміщувати спрайт плавним рухом по екрану. Натомість у цій програмі **шаблон лічильника використовується з властивістю `sprite.velocityX`**.\n\n# Прогнозування\n\nЯк ти думаєш, що станеться після запуску коду? Чому? Запустити код, щоб перевірити.",
        "CSD U3 Complex Movement counter prediction_2022": "# Швидкість і шаблон лічильника\n\nВикористання шаблону лічильника з властивостями спрайту X та Y дозволяє переміщувати спрайт плавним рухом по екрану. Натомість у цій програмі **шаблон лічильника використовується з властивістю `sprite.velocityX`**.\n\n# Прогнозування\n\nЯк ти думаєш, що станеться після запуску коду? Чому? Запустити код, щоб перевірити.",
        "CSD U3 Conditionals Apple 2_2021": "# Змінюємо фрукти\n\nТепер, коли ми знаємо, як використовувати оператори _if_, ми можемо зробити більше, ніж просто перевірити, чи досягло яблуко масштабу 2. Щойно це станеться, його потрібно перетворити на грушу.\n\n# Завдання\n\nВикористовуй команду умови в циклі малювання, щоб перевірити, чи `fruit.scale` більше 2. Якщо це так, зміни анімацію фрукта на \"pear\".",
        "CSD U3 Conditionals Apple 2_2022": "# Змінюємо фрукти\n\nТепер, коли ми знаємо, як використовувати оператори _if_, ми можемо зробити більше, ніж просто перевірити, чи досягло яблуко масштабу 2. Щойно це станеться, його потрібно перетворити на грушу.\n\n# Завдання\n\nВикористовуй команду умови в циклі малювання, щоб перевірити, чи `fruit.scale` більше 2. Якщо це так, зміни анімацію фрукта на \"pear\".",
        "CSD U3 Counters explaining counters contained 2": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 Counters explaining counters contained 2_2018": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 Counters explaining counters contained 2_2019": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 Counters explaining counters contained 2_2021": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 Counters explaining counters contained 2_2022": "# Шаблон лічильника\n\nЦей шаблон є одним із найважливіших у всьому програмуванні.\n\n![](<https://images.code.org/83af2e40443ab294ba635f2a01a48ac7-image-1465506512065.06.56 PM.png>)\n\nВін використовується для збільшення значення змінної на 1. Його можна назвати **шаблоном лічильника**, оскільки його можна використовувати для створення змінної, яка перелічує. Ми будемо часто використовувати цей шаблон, особливо з малюванням в циклах. Подивимось, як це виглядає.\n\n# Завдання\n\nЦя програма створює змінну `counter`, а потім використовує **шаблон лічильника**, щоб перелічити її значення. Коли ми запустимо програму, що, на твою думку, ми побачимо на екрані?\n\n-   **Переглянь програму** та спрогнозуй, яким буде результат.\n-   **Запусти програму**, щоб перевірити свій прогноз.\n-   **Поговори з сусідом**. Чи можете ви пояснити, що ви побачили?",
        "CSD U3 Diagonal Movement_2021": "<img src=\"https://images.code.org/72b0e98c58a18f70774c1c565510ebdd-image-1589817494729.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Рух по діагоналі\n\n<img src=\"https://images.code.org/d0db80b8f5d486c85c0f1c259f2f5b32-image-1588350637669.29.55 AM.png\" style=\"float: right; margin-left: 20px; width: 150;\">\n\nОновлення обох властивостей спрайта `X` або `Y` може змусити його рухатися по діагоналі.  Можна використати панель Стеження під областю коду, щоб побачити, як змінюється кожна з властивостей.\n\n# Завдання\n\n-   Переглянь код, який змушує мишку опускатися вниз.\n-   Запусти програму і прослідкуй у Стеженні, що відбувається з властивостями `mouse.x` і `mouse.y`.\n-   Додай ще один рядок коду, який змушує мишу рухатися по діагоналі.\n-   Запусти код ще раз і слідкуй за областю Стеження.\n\n**Додаткове завдання:** Встанови властивість `rotation` спрайта так, щоб він дивився у бік, у якому рухається.",
        "CSD U3 Diagonal Movement_2022": "<img src=\"https://images.code.org/72b0e98c58a18f70774c1c565510ebdd-image-1589817494729.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Рух по діагоналі\n\n<img src=\"https://images.code.org/d0db80b8f5d486c85c0f1c259f2f5b32-image-1588350637669.29.55 AM.png\" style=\"float: right; margin-left: 20px; width: 150;\">\n\nОновлення обох властивостей спрайта `X` або `Y` може змусити його рухатися по діагоналі.  Можна використати панель Стеження під областю коду, щоб побачити, як змінюється кожна з властивостей.\n\n# Завдання\n\n-   Переглянь код, який змушує мишку опускатися вниз.\n-   Запусти програму і прослідкуй у Стеженні, що відбувається з властивостями `mouse.x` і `mouse.y`.\n-   Додай ще один рядок коду, який змушує мишу рухатися по діагоналі.\n-   Запусти код ще раз і слідкуй за областю Стеження.\n\n**Додаткове завдання:** Встанови властивість `rotation` спрайта так, щоб він дивився у бік, у якому рухається.",
        "CSD U3 Direction Animations_2021": "<img src=\"https://images.code.org/0e99dbaf3d16b944fd3352fcb8ccda16-image-1585766511652.gif\" style=\"float: right\">\n\n# Зміна зображень під час руху\nНаразі ці умовні оператори роблять лише одну річ (змінюють положення спрайта за осями X або Y), але насправді в умовний оператор можна додати скільки завгодно коду. В іграх часто зустрічається необхідність змінювати зображення персонажа в залежності від того, в якому напрямку він рухається. Ми намалюємо зробити жучка, який завжди дивиться у той бік, в який рухається.\n\n# Завдання\nВикористовуючи надану програму та зображення:\n\n- Продублюй обране зображення жучка чотири рази.\n- Відредагуй кожне з твоїх зображень, щоб воно вказувало в одному з чотирьох напрямків.\n- Напиши код, який використовує `sprite.setAnimation()` для зміни зображення на спрайті жучка у разі натискання різних клавіш зі стрілками.\n",
        "CSD U3 Direction Animations_2022": "<img src=\"https://images.code.org/0e99dbaf3d16b944fd3352fcb8ccda16-image-1585766511652.gif\" style=\"float: right\">\n\n# Зміна зображень під час руху\nНаразі ці умовні оператори роблять лише одну річ (змінюють положення спрайта за осями X або Y), але насправді в умовний оператор можна додати скільки завгодно коду. В іграх часто зустрічається необхідність змінювати зображення персонажа в залежності від того, в якому напрямку він рухається. Ми намалюємо зробити жучка, який завжди дивиться у той бік, в який рухається.\n\n# Завдання\nВикористовуючи надану програму та зображення:\n\n- Продублюй обране зображення жучка чотири рази.\n- Відредагуй кожне з твоїх зображень, щоб воно вказувало в одному з чотирьох напрямків.\n- Напиши код, який використовує `sprite.setAnimation()` для зміни зображення на спрайті жучка у разі натискання різних клавіш зі стрілками.\n",
        "CSD U3 Direction Arrows_2021": "# Рух у всіх напрямках\n\nТи можеш створити просту гру, яка переміщує спрайт по екрану.\n\n# Завдання\n\n-   Додай чотири окремі умовні оператори, які змушують крилатого бота рухатися в усіх напрямках.",
        "CSD U3 Direction Arrows_2022": "# Рух у всіх напрямках\n\nТи можеш створити просту гру, яка переміщує спрайт по екрану.\n\n# Завдання\n\n-   Додай чотири окремі умовні оператори, які змушують крилатого бота рухатися в усіх напрямках.",
        "CSD U3 Draw Loop Plugged orange and green_2021": "<img src=\"https://images.code.org/09e7f584150124833884d434ea620531-image-1589575201865.2020-05-15 16_39_52.gif\" style=\"float:right;width:150px\">\n\n# Використання циклу малювання\n\nТепер час попрацювати з циклом малювання. Пам'ятай, що код всередині циклу малювання виконується Ігровою Лабораторією знову і знову.\n\n# Завдання\n\n-   Додай код до цієї програми, щоб на твоєму малюнку також малювалися помаранчеві кола.\n-   Коли твоя програма буде виглядати, як на малюнку праворуч, переходь до наступного завдання.",
        "CSD U3 Draw Loop Plugged orange and green_2022": "<img src=\"https://images.code.org/09e7f584150124833884d434ea620531-image-1589575201865.2020-05-15 16_39_52.gif\" style=\"float:right;width:150px\">\n\n# Використання циклу малювання\n\nТепер час попрацювати з циклом малювання. Пам'ятай, що код всередині циклу малювання виконується Ігровою Лабораторією знову і знову.\n\n# Завдання\n\n-   Додай код до цієї програми, щоб на твоєму малюнку також малювалися помаранчеві кола.\n-   Коли твоя програма буде виглядати, як на малюнку праворуч, переходь до наступного завдання.",
        "CSD U3 Draw Loop Plugged predict 1": "# Цикл малювання\n\nОсь приклад роботи циклу малювання.\n\n# Завдання\n\n-   Запусти код і подивись, як він працює.\n-   Обговори зі своїм партнером, чи схоже це на книжку, яку ви бачили на відео. Чому так або чому ні?",
        "CSD U3 Draw Loop Plugged predict 1_2018": "# Цикл малювання\n\nОсь приклад роботи циклу малювання.\n\n# Завдання\n\n-   Запусти код і подивись, як він працює.\n-   Обговори зі своїм партнером, чи схоже це на книжку, яку ви бачили на відео. Чому так або чому ні?",
        "CSD U3 Draw Loop Plugged predict 1_2019": "# Цикл малювання\n\nОсь приклад роботи циклу малювання.\n\n# Завдання\n\n-   Запусти код і подивись, як він працює.\n-   Обговори зі своїм партнером, чи схоже це на книжку, яку ви бачили на відео. Чому так або чому ні?",
        "CSD U3 Draw Loop Plugged predict 1_2021": "# Цикл малювання\n\nОсь приклад роботи циклу малювання.\n\n# Завдання\n\n-   Запусти код і подивись, як він працює.\n-   Обговори зі своїм партнером, чи схоже це на книжку, яку ви бачили на відео. Чому так або чому ні?",
        "CSD U3 Draw Loop Plugged predict 1_2022": "# Цикл малювання\n\nОсь приклад роботи циклу малювання.\n\n# Завдання\n\n-   Запусти код і подивись, як він працює.\n-   Обговори зі своїм партнером, чи схоже це на книжку, яку ви бачили на відео. Чому так або чому ні?",
        "CSD U3 Draw Loop Plugged predict 2 embed_2021": "# Прогнозування\n\nЦя програма має одну невелику відмінність, яка змусить її працювати трохи по-іншому. Знову ж таки, пам’ятай:\n\n-   Весь наш код поза циклом малювання виконується спочатку, лише один раз\n-   Весь наш код у циклі малювання виконується знову і знову\n\nЩо буде робити ця програма? Напиши свій прогноз нижче.",
        "CSD U3 Draw Loop Plugged update your scene_2021": "# Розширюємо свою сцену\n\nЦе сцена зі спрайтами, яку ми створили на минулому уроці. Зараз ми її трохи оновимо, щоб використовувати цикл малювання та властивості спрайтів.\n\n<img src=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29 PM.png\" style=\"float:right;height:100px\">\n\n# Завдання\n\n* Додай цикл малювання до своєї програми (тут має бути лише один).\n* Використовуй інструмент виділення \"ласо\" (клацни утримуй і перетягни), щоб обрати код, який оновлюватиметься щоразу, і помісти його всередину циклу малювання. Ctrl-Z дозволить виправити можливі помилки.\n* Додай до програми код, який оновлює властивості спрайтів `sprite.x`, `sprite.y` або `sprite.rotation` так, щоб вони рухалися. Їх потрібно оновити за допомогою функції `randomNumber()`.\n",
        "CSD U3 Draw Loop Plugged update your scene_2022": "# Розширюємо свою сцену\n\nЦе сцена зі спрайтами, яку ми створили на минулому уроці. Зараз ми її трохи оновимо, щоб використовувати цикл малювання та властивості спрайтів.\n\n<img src=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29 PM.png\" style=\"float:right;height:100px\">\n\n# Завдання\n\n* Додай цикл малювання до своєї програми (тут має бути лише один).\n* Використовуй інструмент виділення \"ласо\" (клацни утримуй і перетягни), щоб обрати код, який оновлюватиметься щоразу, і помісти його всередину циклу малювання. Ctrl-Z дозволить виправити можливі помилки.\n* Додай до програми код, який оновлює властивості спрайтів `sprite.x`, `sprite.y` або `sprite.rotation` так, щоб вони рухалися. Їх потрібно оновити за допомогою функції `randomNumber()`.\n",
        "CSD U3 Draw Loop Plugged wiggle sprite rotation_2021": "<img src=\"https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦей рівень поєднує в собі деякі з навичок, які ми вже бачили. Це малювання еліпсів на тлі, а також оновлення властивостей спрайтів. Цього разу змінюється властивість спрайта `sprite.rotation`.\n\n# Завдання\n\nЦя анімація вже оновлює властивість обертання одного спрайта, щоб створити враження, ніби він тремтить\n\n* Запусти програму, щоб побачити, як вона працює.\n* Додай до цієї програми код, який змусить другого прибульця трястися так само як і першого.\n* Коли твоя програма виглядатиме, як на малюнку праворуч, переходь до наступного завдання.",
        "CSD U3 Draw Loop Plugged wiggle sprite rotation_2022": "<img src=\"https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦей рівень поєднує в собі деякі з навичок, які ми вже бачили. Це малювання еліпсів на тлі, а також оновлення властивостей спрайтів. Цього разу змінюється властивість спрайта `sprite.rotation`.\n\n# Завдання\n\nЦя анімація вже оновлює властивість обертання одного спрайта, щоб створити враження, ніби він тремтить\n\n* Запусти програму, щоб побачити, як вона працює.\n* Додай до цієї програми код, який змусить другого прибульця трястися так само як і першого.\n* Коли твоя програма виглядатиме, як на малюнку праворуч, переходь до наступного завдання.",
        "CSD U3 Draw Loop Plugged wiggle sprite x_2021": "<img src=\"https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦя анімація вже оновлює властивість Х одного спрайта, щоб створити враження, ніби він тремтить.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, як вона працює.\n-   Відредагуй код у цій програмі так, щоб другий спрайт тремтів так само як і перший.\n-   Коли твоя програма виглядатиме, як на малюнку праворуч, переходь до наступного завдання.",
        "CSD U3 Draw Loop Plugged wiggle sprite x_2022": "<img src=\"https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦя анімація вже оновлює властивість Х одного спрайта, щоб створити враження, ніби він тремтить.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, як вона працює.\n-   Відредагуй код у цій програмі так, щоб другий спрайт тремтів так само як і перший.\n-   Коли твоя програма виглядатиме, як на малюнку праворуч, переходь до наступного завдання.",
        "CSD U3 Draw Loop Plugged wiggle sprite y": "<img src=\"https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦей рівень дуже схожий на попередній, але цього разу потрібно додати цикл малювання.\n\n# Завдання\n\n-   Додай блок циклу малювання в нижню частину цієї програми.\n-   Перемісти будь-які блоки, які повинні бути всередині циклу малювання.\n-   Рухайся далі, коли програма буде виглядати так, як на малюнку праворуч.",
        "CSD U3 Draw Loop Plugged wiggle sprite y_2018": "<img src=\"https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦей рівень дуже схожий на попередній, але цього разу потрібно додати цикл малювання.\n\n# Завдання\n\n-   Додай блок циклу малювання в нижню частину цієї програми.\n-   Перемісти будь-які блоки, які повинні бути всередині циклу малювання.\n-   Рухайся далі, коли програма буде виглядати так, як на малюнку праворуч.",
        "CSD U3 Draw Loop Plugged wiggle sprite y_2019": "<img src=\"https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦей рівень дуже схожий на попередній, але цього разу потрібно додати цикл малювання.\n\n# Завдання\n\n-   Додай блок циклу малювання в нижню частину цієї програми.\n-   Перемісти будь-які блоки, які повинні бути всередині циклу малювання.\n-   Рухайся далі, коли програма буде виглядати так, як на малюнку праворуч.",
        "CSD U3 Draw Loop Plugged wiggle sprite y_2021": "<img src=\"https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦей рівень дуже схожий на попередній, але цього разу потрібно додати цикл малювання.\n\n# Завдання\n\n-   Додай блок циклу малювання в нижню частину цієї програми.\n-   Перемісти будь-які блоки, які повинні бути всередині циклу малювання.\n-   Рухайся далі, коли програма буде виглядати так, як на малюнку праворуч.",
        "CSD U3 Draw Loop Plugged wiggle sprite y_2022": "<img src=\"https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\" style=\"float:right;height:150px\">\n\n# Оновлення властивостей\n\nЦей рівень дуже схожий на попередній, але цього разу потрібно додати цикл малювання.\n\n# Завдання\n\n-   Додай блок циклу малювання в нижню частину цієї програми.\n-   Перемісти будь-які блоки, які повинні бути всередині циклу малювання.\n-   Рухайся далі, коли програма буде виглядати так, як на малюнку праворуч.",
        "CSD U3 Drawing Squares to Corners_2018": "<img src=\"https://images.code.org/716209ce879925f89bf661f337946509-image-1529019186051.32.48 PM.png\" style=\"float:right;width:150px\">\n\n# Розміщення квадратів у кутах\n\nЗначною частиною використання Ігрової Лабораторії є розуміння позиції розташування. Пам’ятай, що завжди можна увімкнути сітку або навести вказівник миші, щоб знайти потрібне положення x і y.\n\n# Завдання\n\n-   Розмісти два прямокутники рівно в кутах екрана, як на малюнку.",
        "CSD U3 Drawing Squares to Corners_2019": "<img src=\"https://images.code.org/716209ce879925f89bf661f337946509-image-1529019186051.32.48 PM.png\" style=\"float:right;width:150px\">\n\n# Розміщення квадратів у кутах\n\nЗначною частиною використання Ігрової Лабораторії є розуміння позиції розташування. Пам’ятай, що завжди можна увімкнути сітку або навести вказівник миші, щоб знайти потрібне положення x і y.\n\n# Завдання\n\n-   Розмісти два прямокутники рівно в кутах екрана, як на малюнку.",
        "CSD U3 Drawing Squares to Corners_2021": "<img src=\"https://images.code.org/716209ce879925f89bf661f337946509-image-1529019186051.32.48 PM.png\" style=\"float:right;width:150px\">\n\n# Розміщення квадратів у кутах\n\nЗначною частиною використання Ігрової Лабораторії є розуміння позиції розташування. Пам’ятай, що завжди можна увімкнути сітку або навести вказівник миші, щоб знайти потрібне положення x і y.\n\n# Завдання\n\n-   Розмісти два прямокутники рівно в кутах екрана, як на малюнку.",
        "CSD U3 Drawing Squares to Corners_2022": "<img src=\"https://images.code.org/716209ce879925f89bf661f337946509-image-1529019186051.32.48 PM.png\" style=\"float:right;width:150px\">\n\n# Розміщення квадратів у кутах\n\nЗначною частиною використання Ігрової Лабораторії є розуміння позиції розташування. Пам’ятай, що завжди можна увімкнути сітку або навести вказівник миші, щоб знайти потрібне положення x і y.\n\n# Завдання\n\n-   Розмісти два прямокутники рівно в кутах екрана, як на малюнку.",
        "CSD U3 Else_2021": "# Зміна напрямку обертання шестерень\n\nЦі шестерні вже обертаються в одному напрямку, коли ми натискаємо клавішу пробіл, а тепер потрібно, щоб вони оберталися в іншому напрямку, коли клавішу пробіл не натиснуто.\n\n# Завдання\n\n-   Зроби так, щоб шестерні оберталися в протилежному напрямку, коли клавіша пробілу **не натиснута**.",
        "CSD U3 Else_2022": "# Зміна напрямку обертання шестерень\n\nЦі шестерні вже обертаються в одному напрямку, коли ми натискаємо клавішу пробіл, а тепер потрібно, щоб вони оберталися в іншому напрямку, коли клавішу пробіл не натиснуто.\n\n# Завдання\n\n-   Зроби так, щоб шестерні оберталися в протилежному напрямку, коли клавіша пробілу **не натиснута**.",
        "CSD U3 Functions Add Change Background_2018": "# Змінимо фон за допомогою балів\n\nКоли зловлено 10 монет, настав час святкувати. Потрібно змінити фон на щось веселе.\n\n# Завдання\n\n-   Використовуй команду **if** і дві окремі функції, щоб намалювати фони.\n-   Тоді напиши свої функції поза циклом малювання. Ти можеш вирішити, що таке «простий» або «веселий» фон. Розважайся!",
        "CSD U3 Functions Add Change Background_2019": "# Змінимо фон за допомогою балів\n\nКоли зловлено 10 монет, настав час святкувати. Потрібно змінити фон на щось веселе.\n\n# Завдання\n\n-   Використовуй команду **if** і дві окремі функції, щоб намалювати фони.\n-   Тоді напиши свої функції поза циклом малювання. Ти можеш вирішити, що таке «простий» або «веселий» фон. Розважайся!",
        "CSD U3 Functions Add Change Background_2021": "# Змінимо фон за допомогою балів\n\nКоли зловлено 10 монет, настав час святкувати. Потрібно змінити фон на щось веселе.\n\n# Завдання\n\n-   Використовуй команду **if** і дві окремі функції, щоб намалювати фони.\n-   Тоді напиши свої функції поза циклом малювання. Ти можеш вирішити, що таке «простий» або «веселий» фон. Розважайся!",
        "CSD U3 Functions Add Change Background_2022": "# Змінимо фон за допомогою балів\n\nКоли зловлено 10 монет, настав час святкувати. Потрібно змінити фон на щось веселе.\n\n# Завдання\n\n-   Використовуй команду **if** і дві окремі функції, щоб намалювати фони.\n-   Тоді напиши свої функції поза циклом малювання. Ти можеш вирішити, що таке «простий» або «веселий» фон. Розважайся!",
        "CSD U3 Functions Add IsTouching": "# Лови монету, збільшуй рахунок\n\nДавай зараз також змінимо рахунок, щоб завершити гру. Потрібно визначити, коли кролик торкається монети, а потім скинути її.\n\n# Завдання\n\n-   Використовуй команду **умови** і блок **isTouching**, щоб збільшити рахунок, коли кролик ловить монету.\n-   Переконайся, що ти **викликаєш свою функцію**, щоб скинути монету, коли її було спіймано.\n-   Пограй в гру та **довільно змінюй швидкість монети** до діапазону, який, на твою думку, буде цікавим.",
        "CSD U3 Functions Add IsTouching_2018": "# Лови монету, збільшуй рахунок\n\nДавай зараз також змінимо рахунок, щоб завершити гру. Потрібно визначити, коли кролик торкається монети, а потім скинути її.\n\n# Завдання\n\n-   Використовуй команду **умови** і блок **isTouching**, щоб збільшити рахунок, коли кролик ловить монету.\n-   Переконайся, що ти **викликаєш свою функцію**, щоб скинути монету, коли її було спіймано.\n-   Пограй в гру та **довільно змінюй швидкість монети** до діапазону, який, на твою думку, буде цікавим.",
        "CSD U3 Functions Add IsTouching_2019": "# Лови монету, збільшуй рахунок\n\nДавай зараз також змінимо рахунок, щоб завершити гру. Потрібно визначити, коли кролик торкається монети, а потім скинути її.\n\n# Завдання\n\n-   Використовуй команду **умови** і блок **isTouching**, щоб збільшити рахунок, коли кролик ловить монету.\n-   Переконайся, що ти **викликаєш свою функцію**, щоб скинути монету, коли її було спіймано.\n-   Пограй в гру та **довільно змінюй швидкість монети** до діапазону, який, на твою думку, буде цікавим.",
        "CSD U3 Functions Add IsTouching_2021": "# Лови монету, збільшуй рахунок\n\nДавай зараз також змінимо рахунок, щоб завершити гру. Потрібно визначити, коли кролик торкається монети, а потім скинути її.\n\n# Завдання\n\n-   Використовуй команду **умови** і блок **isTouching**, щоб збільшити рахунок, коли кролик ловить монету.\n-   Переконайся, що ти **викликаєш свою функцію**, щоб скинути монету, коли її було спіймано.\n-   Пограй в гру та **довільно змінюй швидкість монети** до діапазону, який, на твою думку, буде цікавим.",
        "CSD U3 Functions Add IsTouching_2022": "# Лови монету, збільшуй рахунок\n\nДавай зараз також змінимо рахунок, щоб завершити гру. Потрібно визначити, коли кролик торкається монети, а потім скинути її.\n\n# Завдання\n\n-   Використовуй команду **умови** і блок **isTouching**, щоб збільшити рахунок, коли кролик ловить монету.\n-   Переконайся, що ти **викликаєш свою функцію**, щоб скинути монету, коли її було спіймано.\n-   Пограй в гру та **довільно змінюй швидкість монети** до діапазону, який, на твою думку, буде цікавим.",
        "CSD U3 Functions Call Draw Loop_2021": "# Виклик функцій в циклі малювання\n\nМи можемо викликати функцію всередині циклу малювання, так само як і в будь-якому іншому місці свого коду.\n\n# Завдання\n\nДля тебе вже створена функція, яка намалює фон. Також створений спрайт для переміщення по фону.\n\n* **Виклич функцію всередині циклу малювання** так, щоб спрайт з'явився поверх фону.\n* **Примітка:** Не створюй функції всередині циклу малювання. Розміщуй їх внизу коду.",
        "CSD U3 Functions Call Draw Loop_2022": "# Виклик функцій в циклі малювання\n\nМи можемо викликати функцію всередині циклу малювання, так само як і в будь-якому іншому місці свого коду.\n\n# Завдання\n\nДля тебе вже створена функція, яка намалює фон. Також створений спрайт для переміщення по фону.\n\n* **Виклич функцію всередині циклу малювання** так, щоб спрайт з'явився поверх фону.\n* **Примітка:** Не створюй функції всередині циклу малювання. Розміщуй їх внизу коду.",
        "CSD U3 Functions Call Function_2019": "# Виклик функцій\n\nФункції дають змогу створювати власні блоки та вирішувати, який код у них буде. У цій програмі вже створено дві функції, але викликається лише одна з них.\n\n# Завдання\n\n-   **Виклич другу функцію**, щоб відкрити повне зображення. Використовуй функцію, яка викликається, як підказку.\n-   **Порада:** Так само, як і в усіх інших блоках, тут важливі правопис і вживання великих літер.",
        "CSD U3 Functions Call Function_2021": "# Виклик функцій\n\nФункції дають змогу створювати власні блоки та вирішувати, який код у них буде. У цій програмі вже створено дві функції, але викликається лише одна з них.\n\n# Завдання\n\n-   **Виклич другу функцію**, щоб відкрити повне зображення. Використовуй функцію, яка викликається, як підказку.\n-   **Порада:** Так само, як і в усіх інших блоках, тут важливі правопис і вживання великих літер.",
        "CSD U3 Functions Call Function_2022": "# Виклик функцій\n\nФункції дають змогу створювати власні блоки та вирішувати, який код у них буде. У цій програмі вже створено дві функції, але викликається лише одна з них.\n\n# Завдання\n\n-   **Виклич другу функцію**, щоб відкрити повне зображення. Використовуй функцію, яка викликається, як підказку.\n-   **Порада:** Так само, як і в усіх інших блоках, тут важливі правопис і вживання великих літер.",
        "CSD U3 Functions Create Function_2021": "# Створення функцій для організації коду\n\nУ Ігровій Лабораторії вся дія відбувається в циклі малювання, але занадто складний код робить його дуже заплутаним для читання. Щоб зробити цикл малювання легким для читання, використовуй функції для великих фрагментів коду. Їх можна викликати всередині циклу та описати нижче. Це дійсно гарний приклад використання **абстракції** для того, щоб думати про проблеми на високому рівні, а про деталі турбуватися пізніше.\n\n<img src=\"https://images.code.org/1a5beeaad6e55c5b27a43604be4f039a-image-1475199750468.42.07 PM.png\" style=\"float:right;width:150px\">\n\n# Завдання\n\nЦя програма повинна малювати денну або нічну сцену, залежно від положення миші. Цикл малювання описує, що має відбуватися, але одна з функцій ще не написана.\n\n* **Напиши функцію `drawNight`, яка була створена, але поки що є пустою.\n* Підказка: Подивися на картинку праворуч, щоб побачити, як має виглядати нічне зображення. Чи може тобі допомогти використання функції `drawDay`?",
        "CSD U3 Functions Create Function_2022": "# Створення функцій для організації коду\n\nУ Ігровій Лабораторії вся дія відбувається в циклі малювання, але занадто складний код робить його дуже заплутаним для читання. Щоб зробити цикл малювання легким для читання, використовуй функції для великих фрагментів коду. Їх можна викликати всередині циклу та описати нижче. Це дійсно гарний приклад використання **абстракції** для того, щоб думати про проблеми на високому рівні, а про деталі турбуватися пізніше.\n\n<img src=\"https://images.code.org/1a5beeaad6e55c5b27a43604be4f039a-image-1475199750468.42.07 PM.png\" style=\"float:right;width:150px\">\n\n# Завдання\n\nЦя програма повинна малювати денну або нічну сцену, залежно від положення миші. Цикл малювання описує, що має відбуватися, але одна з функцій ще не написана.\n\n* **Напиши функцію `drawNight`, яка була створена, але поки що є пустою.\n* Підказка: Подивися на картинку праворуч, щоб побачити, як має виглядати нічне зображення. Чи може тобі допомогти використання функції `drawDay`?",
        "CSD U3 Functions Order Functions": "# Переупорядкування коду\n\nРозміщення коду всередині функцій полегшує його читання та внесення змін. Гарні назви функцій вказують читачеві на те, що робить наша програма. Функції можна викликати в іншому порядку, щоб швидко внести значні зміни в роботу вашої програми.\n\n# Завдання\n\nУ цій програмі вже створено 4 функції, які малюють частини сцени. На жаль, щось йде не так.\n\n-   **Переглянь 4 функції**, щоб розібратись, що вони роблять\n-   **Викликай функції** в такому порядку, який намалює сцену так, як тобі здається найкращим",
        "CSD U3 Functions Order Functions_2018": "# Переупорядкування коду\n\nРозміщення коду всередині функцій полегшує його читання та внесення змін. Гарні назви функцій вказують читачеві на те, що робить наша програма. Функції можна викликати в іншому порядку, щоб швидко внести значні зміни в роботу вашої програми.\n\n# Завдання\n\nУ цій програмі вже створено 4 функції, які малюють частини сцени. На жаль, щось йде не так.\n\n-   **Переглянь 4 функції**, щоб розібратись, що вони роблять\n-   **Викликай функції** в такому порядку, який намалює сцену так, як тобі здається найкращим",
        "CSD U3 Functions Order Functions_2019": "# Переупорядкування коду\n\nРозміщення коду всередині функцій полегшує його читання та внесення змін. Гарні назви функцій вказують читачеві на те, що робить наша програма. Функції можна викликати в іншому порядку, щоб швидко внести значні зміни в роботу вашої програми.\n\n# Завдання\n\nУ цій програмі вже створено 4 функції, які малюють частини сцени. На жаль, щось йде не так.\n\n-   **Переглянь 4 функції**, щоб розібратись, що вони роблять\n-   **Викликай функції** в такому порядку, який намалює сцену так, як тобі здається найкращим",
        "CSD U3 Functions Order Functions_2021": "# Переупорядкування коду\n\nРозміщення коду всередині функцій полегшує його читання та внесення змін. Гарні назви функцій вказують читачеві на те, що робить наша програма. Функції можна викликати в іншому порядку, щоб швидко внести значні зміни в роботу вашої програми.\n\n# Завдання\n\nУ цій програмі вже створено 4 функції, які малюють частини сцени. На жаль, щось йде не так.\n\n-   **Переглянь 4 функції**, щоб розібратись, що вони роблять\n-   **Викликай функції** в такому порядку, який намалює сцену так, як тобі здається найкращим",
        "CSD U3 Functions Order Functions_2022": "# Переупорядкування коду\n\nРозміщення коду всередині функцій полегшує його читання та внесення змін. Гарні назви функцій вказують читачеві на те, що робить наша програма. Функції можна викликати в іншому порядку, щоб швидко внести значні зміни в роботу вашої програми.\n\n# Завдання\n\nУ цій програмі вже створено 4 функції, які малюють частини сцени. На жаль, щось йде не так.\n\n-   **Переглянь 4 функції**, щоб розібратись, що вони роблять\n-   **Викликай функції** в такому порядку, який намалює сцену так, як тобі здається найкращим",
        "CSD U3 Functions Randomize Sprite_2021": "# Внесення змін до функцій\n\nПриємною перевагою використання функцій для повторюваного видалення коду, є те, що тепер ми можемо легко вносити зміни одразу до багатьох місць у нашому коді. Просто потрібно змінити визначення функції, і програма використовуватиме новий код скрізь, де вона викликається.\n\n# Завдання\n\nВнеси зміни до функції `setFlyer`, щоб Літун починав гру у випадковому місці Y між 0 і 400, і рухався з випадковою швидкістю після кожного запуску.",
        "CSD U3 Functions Randomize Sprite_2022": "# Внесення змін до функцій\n\nПриємною перевагою використання функцій для повторюваного видалення коду, є те, що тепер ми можемо легко вносити зміни одразу до багатьох місць у нашому коді. Просто потрібно змінити визначення функції, і програма використовуватиме новий код скрізь, де вона викликається.\n\n# Завдання\n\nВнеси зміни до функції `setFlyer`, щоб Літун починав гру у випадковому місці Y між 0 і 400, і рухався з випадковою швидкістю після кожного запуску.",
        "CSD U3 Functions Reset Sprite_2021": "# Багаторазовий виклик функцій\n\nНам часто потрібно буде використовувати один і той самий код у багатьох місцях нашої програми. Створивши функцію, ти можеш викликати її необмежену кількість разів.\n\n# Завдання\n\nЦей код створює спрайт, який рухається по екрану один раз. Як зробити так, щоб він повертався назад по екрану?\n\n* **Примітка:** Функція вже викликається один раз на початку твоєї програми\n* Переглянь умову **команди умови** всередині циклу малювання. Чому, на твою думку, вона там розташована?\n* Використовуй цю команду умови та написану для тебе функцію, щоб змусити спрайт рухатися по екрану кілька разів.",
        "CSD U3 Functions Reset Sprite_2022": "# Багаторазовий виклик функцій\n\nНам часто потрібно буде використовувати один і той самий код у багатьох місцях нашої програми. Створивши функцію, ти можеш викликати її необмежену кількість разів.\n\n# Завдання\n\nЦей код створює спрайт, який рухається по екрану один раз. Як зробити так, щоб він повертався назад по екрану?\n\n* **Примітка:** Функція вже викликається один раз на початку твоєї програми\n* Переглянь умову **команди умови** всередині циклу малювання. Чому, на твою думку, вона там розташована?\n* Використовуй цю команду умови та написану для тебе функцію, щоб змусити спрайт рухатися по екрану кілька разів.",
        "CSD U3 Functions Write Reset_2021": "# Пишемо власну функцію\n\nЧас попрактикуватись у написанні власних функцій. Це дуже проста гра, в якій з неба падають монети, а кролик намагається їх зловити. Все, що нам потрібно зробити, це написати функцію, яка встановлює монету.\n\n# Завдання\n\n-   **Переглянь та запусти код**, який вже існує, щоб упевнитися, що ти розумієш, як він працює.\n-   **Напиши код функції `setCoin`**, яка виконує наступне:\n    -   Встановлює швидкість руху монети вниз.\n    -   Встановлює положення монети за віссю Y у верхній частині екрана\n    -   Встановлює випадкове розташування монети Х\n-   Якщо тобі потрібна допомога, можна переглянути деякі з попередніх рівнів.",
        "CSD U3 Functions Write Reset_2022": "# Пишемо власну функцію\n\nЧас попрактикуватись у написанні власних функцій. Це дуже проста гра, в якій з неба падають монети, а кролик намагається їх зловити. Все, що нам потрібно зробити, це написати функцію, яка встановлює монету.\n\n# Завдання\n\n-   **Переглянь та запусти код**, який вже існує, щоб упевнитися, що ти розумієш, як він працює.\n-   **Напиши код функції `setCoin`**, яка виконує наступне:\n    -   Встановлює швидкість руху монети вниз.\n    -   Встановлює положення монети за віссю Y у верхній частині екрана\n    -   Встановлює випадкове розташування монети Х\n-   Якщо тобі потрібна допомога, можна переглянути деякі з попередніх рівнів.",
        "CSD U3 Functions challenge drawscene_2021": "<img src=\"https://images.code.org/0b70fff7d9395197d2ba3a351aa32eeb-image-1591297781924.gif\" style=\"float:right;width:200px;\"/>\n\n# Створення функцій для малювання сцен\n\nНаведений код малює одну з двох різних сцен залежно від того, де перебуває вказівник миші на екрані. Він викликає або функцію `drawScene1()`, або функцію `drawScene2()`. Однак, цих функцій ще не існує! \n\nВикористовуй уяву і намалюй будь-які дві сцени.\n\n# Завдання\n\n- Створи функції `drawScene1` та `drawScene2`\n- Заповни їх кодом, щоб намалювати дві різні сцени\n",
        "CSD U3 Functions challenge drawscene_2022": "<img src=\"https://images.code.org/0b70fff7d9395197d2ba3a351aa32eeb-image-1591297781924.gif\" style=\"float:right;width:200px;\"/>\n\n# Створення функцій для малювання сцен\n\nНаведений код малює одну з двох різних сцен залежно від того, де перебуває вказівник миші на екрані. Він викликає або функцію `drawScene1()`, або функцію `drawScene2()`. Однак, цих функцій ще не існує! \n\nВикористовуй уяву і намалюй будь-які дві сцени.\n\n# Завдання\n\n- Створи функції `drawScene1` та `drawScene2`\n- Заповни їх кодом, щоб намалювати дві різні сцени\n",
        "CSD U3 If Else predict question": "# Прогнозування If/Else\n\nПереглянь наведену нижче програму, звернувши особливу увагу на блок if/else у рядку 10. Після обговорення наступних питань зі своїм партнером запишіть свої передбачення та запустіть код, щоб побачити, що робить програма.\n\n-   Що відбувається, коли ти натискаєш пробіл?\n-   Що станеться, якщо **не** натиснути пробіл?",
        "CSD U3 If Else predict question_2021": "# Прогнозування If/Else\n\nПереглянь наведену нижче програму, звернувши особливу увагу на блок if/else у рядку 10. Після обговорення наступних питань зі своїм партнером запишіть свої передбачення та запустіть код, щоб побачити, що робить програма.\n\n-   Що відбувається, коли ти натискаєш пробіл?\n-   Що станеться, якщо **не** натиснути пробіл?",
        "CSD U3 If Else predict question_2022": "# Прогнозування If/Else\n\nПереглянь наведену нижче програму, звернувши особливу увагу на блок if/else у рядку 10. Після обговорення наступних питань зі своїм партнером запишіть свої передбачення та запустіть код, щоб побачити, що робить програма.\n\n-   Що відбувається, коли ти натискаєш пробіл?\n-   Що станеться, якщо **не** натиснути пробіл?",
        "CSD U3 If Else_2021": "<img src=\"https://images.code.org/6b0df2eb4a2b61ae12ded3249a4ed1ab-image-1585766972590.gif\" style=\"float:right\">\n\n# World.mouseX\n\nЦя програма використовує блок `if`, щоб потрясти блендер, коли курсор миші пребуває в лівій частині екрана.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, як вона працює.\n-   Додай блок `else`, щоб змусити блендер трястися, коли курсор миші перебуває в іншій частині екрана.",
        "CSD U3 If Else_2022": "<img src=\"https://images.code.org/6b0df2eb4a2b61ae12ded3249a4ed1ab-image-1585766972590.gif\" style=\"float:right\">\n\n# World.mouseX\n\nЦя програма використовує блок `if`, щоб потрясти блендер, коли курсор миші пребуває в лівій частині екрана.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, як вона працює.\n-   Додай блок `else`, щоб змусити блендер трястися, коли курсор миші перебуває в іншій частині екрана.",
        "CSD U3 Input Fish_2021": "# Рибки зі стрілками\n\nРибки повернулися. Чи можна зробити так, щоб рибки рухалися ліворуч лише коли натиснута клавіша зі стрілкою вліво?\n\n# Завдання\n\n* Додай команду умови для перевірки, чи натиснута клавіша зі стрілкою вліво.\n* Перемісти команди для переміщення рибок всередину команди умови.\n",
        "CSD U3 Input Fish_2022": "# Рибки зі стрілками\n\nРибки повернулися. Чи можна зробити так, щоб рибки рухалися ліворуч лише коли натиснута клавіша зі стрілкою вліво?\n\n# Завдання\n\n* Додай команду умови для перевірки, чи натиснута клавіша зі стрілкою вліво.\n* Перемісти команди для переміщення рибок всередину команди умови.\n",
        "CSD U3 Input Gears_2021": "# Шестерні з умовними операторами\n\nЗробімо так, щоб шестерні оберталися тільки коли клавіша пробіл натиснута.\n\n# Завдання\n\n-   Додай код, який перевіряє, чи натиснута клавіша пробіл.\n-   Перемісти код, який змушує шестерні обертатися так, щоб вони оберталися лише якщо клавіша натиснута.",
        "CSD U3 Input Gears_2022": "# Шестерні з умовними операторами\n\nЗробімо так, щоб шестерні оберталися тільки коли клавіша пробіл натиснута.\n\n# Завдання\n\n-   Додай код, який перевіряє, чи натиснута клавіша пробіл.\n-   Перемісти код, який змушує шестерні обертатися так, щоб вони оберталися лише якщо клавіша натиснута.",
        "CSD U3 Interactive Card Background": "# Розміщення тла\n\nПеред початком цього проекту ми вже завершили вправу з планування інтерактивної листівки, і варто мати цей документ із собою під час розробки нашої програми. Підготовка є одним із **найважливіших** елементів успішного створення програми!\n\n# Завдання\n\nЗвернись до свого аркуша планування, щоб розкласти фігури, які стануть тлом нашої картки.\n\n-   Спочатку визнач, що таке найнижчий шар у нашому зображенні (для цього слід використовувати блок `background()`) і додати його до самого верху циклу малювання.\n-   Далі розташуй кожен додатковий блок малювання в тому порядку, у якому ти хочеш, щоб вони з’явилися в стосі.\n-   Нарешті, додай коментар до верхньої частини цього розділу коду, щоб описати, що він робить, і якщо у тебе є якісь особливо складні фрагменти коду (наприклад, код для малювання дерева чи будинку), так само додай до нього описовий коментар .\n\n**Завдання:** Зможеш використати змінні або `randomNumber()`, щоб додати легку анімацію до фонового шару?",
        "CSD U3 Interactive Card Background_2018": "# Розміщення тла\n\nПеред початком цього проекту ми вже завершили вправу з планування інтерактивної листівки, і варто мати цей документ із собою під час розробки нашої програми. Підготовка є одним із **найважливіших** елементів успішного створення програми!\n\n# Завдання\n\nЗвернись до свого аркуша планування, щоб розкласти фігури, які стануть тлом нашої картки.\n\n-   Спочатку визнач, що таке найнижчий шар у нашому зображенні (для цього слід використовувати блок `background()`) і додати його до самого верху циклу малювання.\n-   Далі розташуй кожен додатковий блок малювання в тому порядку, у якому ти хочеш, щоб вони з’явилися в стосі.\n-   Нарешті, додай коментар до верхньої частини цього розділу коду, щоб описати, що він робить, і якщо у тебе є якісь особливо складні фрагменти коду (наприклад, код для малювання дерева чи будинку), так само додай до нього описовий коментар .\n\n**Завдання:** Зможеш використати змінні або `randomNumber()`, щоб додати легку анімацію до фонового шару?",
        "CSD U3 Interactive Card Background_2019": "# Розміщення тла\n\nПеред початком цього проекту ми вже завершили вправу з планування інтерактивної листівки, і варто мати цей документ із собою під час розробки нашої програми. Підготовка є одним із **найважливіших** елементів успішного створення програми!\n\n# Завдання\n\nЗвернись до свого аркуша планування, щоб розкласти фігури, які стануть тлом нашої картки.\n\n-   Спочатку визнач, що таке найнижчий шар у нашому зображенні (для цього слід використовувати блок `background()`) і додати його до самого верху циклу малювання.\n-   Далі розташуй кожен додатковий блок малювання в тому порядку, у якому ти хочеш, щоб вони з’явилися в стосі.\n-   Нарешті, додай коментар до верхньої частини цього розділу коду, щоб описати, що він робить, і якщо у тебе є якісь особливо складні фрагменти коду (наприклад, код для малювання дерева чи будинку), так само додай до нього описовий коментар .\n\n**Завдання:** Зможеш використати змінні або `randomNumber()`, щоб додати легку анімацію до фонового шару?",
        "CSD U3 Interactive Card Background_2021": "# Розміщення тла\n\nПеред початком цього проекту ми вже завершили вправу з планування інтерактивної листівки, і варто мати цей документ із собою під час розробки нашої програми. Підготовка є одним із **найважливіших** елементів успішного створення програми!\n\n# Завдання\n\nЗвернись до свого аркуша планування, щоб розкласти фігури, які стануть тлом нашої картки.\n\n-   Спочатку визнач, що таке найнижчий шар у нашому зображенні (для цього слід використовувати блок `background()`) і додати його до самого верху циклу малювання.\n-   Далі розташуй кожен додатковий блок малювання в тому порядку, у якому ти хочеш, щоб вони з’явилися в стосі.\n-   Нарешті, додай коментар до верхньої частини цього розділу коду, щоб описати, що він робить, і якщо у тебе є якісь особливо складні фрагменти коду (наприклад, код для малювання дерева чи будинку), так само додай до нього описовий коментар .\n\n**Завдання:** Зможеш використати змінні або `randomNumber()`, щоб додати легку анімацію до фонового шару?",
        "CSD U3 Interactive Card Background_2022": "# Розміщення тла\n\nПеред початком цього проекту ми вже завершили вправу з планування інтерактивної листівки, і варто мати цей документ із собою під час розробки нашої програми. Підготовка є одним із **найважливіших** елементів успішного створення програми!\n\n# Завдання\n\nЗвернись до свого аркуша планування, щоб розкласти фігури, які стануть тлом нашої картки.\n\n-   Спочатку визнач, що таке найнижчий шар у нашому зображенні (для цього слід використовувати блок `background()`) і додати його до самого верху циклу малювання.\n-   Далі розташуй кожен додатковий блок малювання в тому порядку, у якому ти хочеш, щоб вони з’явилися в стосі.\n-   Нарешті, додай коментар до верхньої частини цього розділу коду, щоб описати, що він робить, і якщо у тебе є якісь особливо складні фрагменти коду (наприклад, код для малювання дерева чи будинку), так само додай до нього описовий коментар .\n\n**Завдання:** Зможеш використати змінні або `randomNumber()`, щоб додати легку анімацію до фонового шару?",
        "CSD U3 Interactive Card Exemplar_2021": "# Приклад проєкту\n\nЗапусти програму кілька разів і дай відповіді на такі запитання:\n\n1.  Які елементи використовують команди малювання?\n\n2.  Які елементи виглядають як спрайти?\n\n3.  Які властивості оновлюються для кожного спрайта?\n\n4.  Де ми бачимо використання умовних речень?\n\n5.  Чи є елементи, яких ти не розумієш?",
        "CSD U3 Interactive Card Exemplar_2022": "# Приклад проєкту\n\nЗапусти програму кілька разів і дай відповіді на такі запитання:\n\n1.  Які елементи використовують команди малювання?\n\n2.  Які елементи виглядають як спрайти?\n\n3.  Які властивості оновлюються для кожного спрайта?\n\n4.  Де ми бачимо використання умовних речень?\n\n5.  Чи є елементи, яких ти не розумієш?",
        "CSD U3 Interactive Card Final_2018": "# Останні штрихи\n\nТепер у нас є шанс додати останні штрихи до своєї листівки. Ми включили кілька нових блоків, яких раніше не було, тому знайди час, щоб спробувати їх.\n\n# Завдання\n\nСпробуй додати щось із наведеного нижче, щоб завершити свою листівку:\n\n-   Текст\n-   Додаткові зображення для спрайтів\n-   Тонка анімація у фоновому режимі\n-   Звукові ефекти (Здогадаєшся, як це зробити?)\n-   Більше способів для користувача взаємодіяти з листівкою",
        "CSD U3 Interactive Card Final_2019": "# Останні штрихи\n\nТепер у нас є шанс додати останні штрихи до своєї листівки. Ми включили кілька нових блоків, яких раніше не було, тому знайди час, щоб спробувати їх.\n\n# Завдання\n\nСпробуй додати щось із наведеного нижче, щоб завершити свою листівку:\n\n-   Текст\n-   Додаткові зображення для спрайтів\n-   Тонка анімація у фоновому режимі\n-   Звукові ефекти (Здогадаєшся, як це зробити?)\n-   Більше способів для користувача взаємодіяти з листівкою",
        "CSD U3 Interactive Card Final_2021": "# Останні штрихи\n\nТепер у нас є шанс додати останні штрихи до своєї листівки. Ми включили кілька нових блоків, яких раніше не було, тому знайди час, щоб спробувати їх.\n\n# Завдання\n\nСпробуй додати щось із наведеного нижче, щоб завершити свою листівку:\n\n-   Текст\n-   Додаткові зображення для спрайтів\n-   Тонка анімація у фоновому режимі\n-   Звукові ефекти (Здогадаєшся, як це зробити?)\n-   Більше способів для користувача взаємодіяти з листівкою",
        "CSD U3 Interactive Card Final_2022": "# Останні штрихи\n\nТепер у нас є шанс додати останні штрихи до своєї листівки. Ми включили кілька нових блоків, яких раніше не було, тому знайди час, щоб спробувати їх.\n\n# Завдання\n\nСпробуй додати щось із наведеного нижче, щоб завершити свою листівку:\n\n-   Текст\n-   Додаткові зображення для спрайтів\n-   Тонка анімація у фоновому режимі\n-   Звукові ефекти (Здогадаєшся, як це зробити?)\n-   Більше способів для користувача взаємодіяти з листівкою",
        "CSD U3 Interactive Card Other Conditionals": "# Інші умови\n\n_Сюрприз_ у нашій листівці походить від умовних конструкцій, які безпосередньо відповідають не на введення користувача, а на якийсь інший елемент листівки. Це може бути викликано змінною, яка оновлюється, коли користувач взаємодіє з нашою карткою, або спрайтом, який переміщується в певну частину екрана.\n\n# Завдання\n\nДля кожного елемента, що залишився у твоїй таблиці взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу малювання.\n-   Додай до умови відповідний логічний блок порівняння (наприклад, `<`, `>` або `==`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card Other Conditionals_2018": "# Інші умови\n\n_Сюрприз_ у нашій листівці походить від умовних конструкцій, які безпосередньо відповідають не на введення користувача, а на якийсь інший елемент листівки. Це може бути викликано змінною, яка оновлюється, коли користувач взаємодіє з нашою карткою, або спрайтом, який переміщується в певну частину екрана.\n\n# Завдання\n\nДля кожного елемента, що залишився у твоїй таблиці взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу малювання.\n-   Додай до умови відповідний логічний блок порівняння (наприклад, `<`, `>` або `==`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card Other Conditionals_2019": "# Інші умови\n\n_Сюрприз_ у нашій листівці походить від умовних конструкцій, які безпосередньо відповідають не на введення користувача, а на якийсь інший елемент листівки. Це може бути викликано змінною, яка оновлюється, коли користувач взаємодіє з нашою карткою, або спрайтом, який переміщується в певну частину екрана.\n\n# Завдання\n\nДля кожного елемента, що залишився у твоїй таблиці взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу малювання.\n-   Додай до умови відповідний логічний блок порівняння (наприклад, `<`, `>` або `==`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card Other Conditionals_2021": "# Інші умови\n\n_Сюрприз_ у нашій листівці походить від умовних конструкцій, які безпосередньо відповідають не на введення користувача, а на якийсь інший елемент листівки. Це може бути викликано змінною, яка оновлюється, коли користувач взаємодіє з нашою карткою, або спрайтом, який переміщується в певну частину екрана.\n\n# Завдання\n\nДля кожного елемента, що залишився у твоїй таблиці взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу малювання.\n-   Додай до умови відповідний логічний блок порівняння (наприклад, `<`, `>` або `==`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card Other Conditionals_2022": "# Інші умови\n\n_Сюрприз_ у нашій листівці походить від умовних конструкцій, які безпосередньо відповідають не на введення користувача, а на якийсь інший елемент листівки. Це може бути викликано змінною, яка оновлюється, коли користувач взаємодіє з нашою карткою, або спрайтом, який переміщується в певну частину екрана.\n\n# Завдання\n\nДля кожного елемента, що залишився у твоїй таблиці взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу малювання.\n-   Додай до умови відповідний логічний блок порівняння (наприклад, `<`, `>` або `==`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card Sprites": "# Додавання спрайтів\n\nТепер, коли у нас є більш статичні елементи листівки, настав час додати спрайти. Вони мають забезпечувати основну анімацію та взаємодію для нашої листівки, тож не соромся проявляти творчість і розважатися.\n\n# Завдання\n\nПереглянь таблицю спрайтів на звороті аркуша планування. Для кожного спрайту у своїй таблиці:\n\n-   Ініціалізуй спрайт у верхній частині програми за допомогою `createSprite()`.\n-   Знайди або створи зображення для спрайту та встанови його за допомогою `setAnimation()`.\n-   Усередині циклу `draw()` онови будь-які властивості Sprite, які ми будемо постійно анімувати (ми розберемося з умовами за хвилину).",
        "CSD U3 Interactive Card Sprites_2018": "# Додавання спрайтів\n\nТепер, коли у нас є більш статичні елементи листівки, настав час додати спрайти. Вони мають забезпечувати основну анімацію та взаємодію для нашої листівки, тож не соромся проявляти творчість і розважатися.\n\n# Завдання\n\nПереглянь таблицю спрайтів на звороті аркуша планування. Для кожного спрайту у своїй таблиці:\n\n-   Ініціалізуй спрайт у верхній частині програми за допомогою `createSprite()`.\n-   Знайди або створи зображення для спрайту та встанови його за допомогою `setAnimation()`.\n-   Усередині циклу `draw()` онови будь-які властивості Sprite, які ми будемо постійно анімувати (ми розберемося з умовами за хвилину).",
        "CSD U3 Interactive Card Sprites_2019": "# Додавання спрайтів\n\nТепер, коли у нас є більш статичні елементи листівки, настав час додати спрайти. Вони мають забезпечувати основну анімацію та взаємодію для нашої листівки, тож не соромся проявляти творчість і розважатися.\n\n# Завдання\n\nПереглянь таблицю спрайтів на звороті аркуша планування. Для кожного спрайту у своїй таблиці:\n\n-   Ініціалізуй спрайт у верхній частині програми за допомогою `createSprite()`.\n-   Знайди або створи зображення для спрайту та встанови його за допомогою `setAnimation()`.\n-   Усередині циклу `draw()` онови будь-які властивості Sprite, які ми будемо постійно анімувати (ми розберемося з умовами за хвилину).",
        "CSD U3 Interactive Card Sprites_2021": "# Додавання спрайтів\n\nТепер, коли у нас є більш статичні елементи листівки, настав час додати спрайти. Вони мають забезпечувати основну анімацію та взаємодію для нашої листівки, тож не соромся проявляти творчість і розважатися.\n\n# Завдання\n\nПереглянь таблицю спрайтів на звороті аркуша планування. Для кожного спрайту у своїй таблиці:\n\n-   Ініціалізуй спрайт у верхній частині програми за допомогою `createSprite()`.\n-   Знайди або створи зображення для спрайту та встанови його за допомогою `setAnimation()`.\n-   Усередині циклу `draw()` онови будь-які властивості Sprite, які ми будемо постійно анімувати (ми розберемося з умовами за хвилину).",
        "CSD U3 Interactive Card User Input": "# Введення користувача\n\nУ нас є тло, спрайти, тепер настав час дати нашому користувачеві щось робити!\n\n# Завдання\n\nУ таблиці взаємодій на аркуші планування знайди усі взаємодії, які залежать від введення користувача (натискання клавіш і рухи миші). Для кожної з цих взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу «draw()».\n-   Додай відповідний блок введення для своєї умови (наприклад, `keyDown()` або `mouseDown()`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card User Input_2018": "# Введення користувача\n\nУ нас є тло, спрайти, тепер настав час дати нашому користувачеві щось робити!\n\n# Завдання\n\nУ таблиці взаємодій на аркуші планування знайди усі взаємодії, які залежать від введення користувача (натискання клавіш і рухи миші). Для кожної з цих взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу «draw()».\n-   Додай відповідний блок введення для своєї умови (наприклад, `keyDown()` або `mouseDown()`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card User Input_2019": "# Введення користувача\n\nУ нас є тло, спрайти, тепер настав час дати нашому користувачеві щось робити!\n\n# Завдання\n\nУ таблиці взаємодій на аркуші планування знайди усі взаємодії, які залежать від введення користувача (натискання клавіш і рухи миші). Для кожної з цих взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу «draw()».\n-   Додай відповідний блок введення для своєї умови (наприклад, `keyDown()` або `mouseDown()`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card User Input_2021": "# Введення користувача\n\nУ нас є тло, спрайти, тепер настав час дати нашому користувачеві щось робити!\n\n# Завдання\n\nУ таблиці взаємодій на аркуші планування знайди усі взаємодії, які залежать від введення користувача (натискання клавіш і рухи миші). Для кожної з цих взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу «draw()».\n-   Додай відповідний блок введення для своєї умови (наприклад, `keyDown()` або `mouseDown()`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Interactive Card User Input_2022": "# Введення користувача\n\nУ нас є тло, спрайти, тепер настав час дати нашому користувачеві щось робити!\n\n# Завдання\n\nУ таблиці взаємодій на аркуші планування знайди усі взаємодії, які залежать від введення користувача (натискання клавіш і рухи миші). Для кожної з цих взаємодій:\n\n-   Додай блок «if» (або блок «if-else», якщо потрібна альтернативна дія) всередину циклу «draw()».\n-   Додай відповідний блок введення для своєї умови (наприклад, `keyDown()` або `mouseDown()`).\n-   Додай необхідні дії всередину блоку if.\n\n**Завдання:** Зможеш створити складніші умови, вкладаючи їх або використовуючи складені логічні значення?",
        "CSD U3 Keypress Boolean embed-2018_2021": "# Прогнозування - клавішаНатиснута()\n\nСпробуй спрогнозувати, як працює блок `keyDown()`. Ти **не писатимеш ніякого коду**.\n\n# Завдання\n\n-   Уважно переглянь програму.\n-   **Зроби прогноз того, що станеться, коли ти натиснеш клавішу пробіл**, і запиши його в клітинку нижче. Прогноз має бути конкретним!\n-   Запусти програму.\n-   Поки програма виконується, натисни клавішу пробіл на клавіатурі.\n-   Прогноз справдився? Тебе щось здивувало? Обговори з однокласником.",
        "CSD U3 Keypress Boolean embed_2022": "# Прогнозування - клавішаНатиснута()\n\nСпробуй спрогнозувати, як працює блок `keyDown()`. Ти **не писатимеш ніякого коду**.\n\n# Завдання\n\n-   Уважно переглянь програму.\n-   **Зроби прогноз того, що станеться, коли ти натиснеш клавішу пробіл**, і запиши його в клітинку нижче. Прогноз має бути конкретним!\n-   Запусти програму.\n-   Поки програма виконується, натисни клавішу пробіл на клавіатурі.\n-   Прогноз справдився? Тебе щось здивувало? Обговори з однокласником.",
        "CSD U3 L11 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L11 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L12 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L12 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L13 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L13 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L15 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L15 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L16 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L16 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L17 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L17 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L18 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L18 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L19 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок друзям, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб зберегти його у твоїй Галереї проєктів.\n",
        "CSD U3 L19 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок друзям, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб зберегти його у твоїй Галереї проєктів.\n",
        "CSD U3 L3 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L3 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до cвоєї Галереї проєктів.\n",
        "CSD U3 L5 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок друзям, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до своєї Галереї проєктів.\n\n\n",
        "CSD U3 L5 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок друзям, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до своєї Галереї проєктів.\n\n\n",
        "CSD U3 L7 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L7 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L9 Freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 L9 Freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD U3 Mouse Input Bee 1_2021": "<img src=\"https://images.code.org/d2092b4f2debc336f963d48bd6cf4973-image-1477681020928.gif\" style=\"float:right\">\n\n# Миша X та Y\n\nОдин з найпростіших способів отримати вхідні дані - це просто змусити спрайт слідувати за положенням миші користувача. **Координати X та Y миші можна отримати за допомогою блоку `World.mouseX` та `World.mouseY`.** Це відбувається за схемою, яку ми вивчили з властивостями спрайтів. `World` - це ім'я об'єкта. `mouseX` і `mouseY` - назви властивостей.\n\n# Завдання\n\nНам потрібно створити спрайт бджоли, який буде слідувати за мишкою по ігровому полю.\n\n* Зображення бджоли вже завантажене на вкладці анімації.\n* Створи спрайт бджоли в центрі вікна.\n* Усередині циклу малювання онови позицію спрайта відповідно до позиції миші:\n\t* Встанови для позиції X спрайту значення `World.mouseX`.\n    * Встанови для позиції спрайта за віссю Y  значення `World.mouseY`.\n* Запусти програму, щоб перевірити, чи вона працює.\n",
        "CSD U3 Mouse Input Bee 1_2022": "<img src=\"https://images.code.org/d2092b4f2debc336f963d48bd6cf4973-image-1477681020928.gif\" style=\"float:right\">\n\n# Миша X та Y\n\nОдин з найпростіших способів отримати вхідні дані - це просто змусити спрайт слідувати за положенням миші користувача. **Координати X та Y миші можна отримати за допомогою блоку `World.mouseX` та `World.mouseY`.** Це відбувається за схемою, яку ми вивчили з властивостями спрайтів. `World` - це ім'я об'єкта. `mouseX` і `mouseY` - назви властивостей.\n\n# Завдання\n\nНам потрібно створити спрайт бджоли, який буде слідувати за мишкою по ігровому полю.\n\n* Зображення бджоли вже завантажене на вкладці анімації.\n* Створи спрайт бджоли в центрі вікна.\n* Усередині циклу малювання онови позицію спрайта відповідно до позиції миші:\n\t* Встанови для позиції X спрайту значення `World.mouseX`.\n    * Встанови для позиції спрайта за віссю Y  значення `World.mouseY`.\n* Запусти програму, щоб перевірити, чи вона працює.\n",
        "CSD U3 Mouse Input Bee 2_2021": "# Випадковий рух навколо точки\n\n<img src=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\" style=\"float:right\">\n\nТепер, коли ми можемо змусити бджолу слідувати за вказівником миші, спробуймо зробити так, щоб бджола літала навколо вказівника миші, як показано на малюнку праворуч.  Для цього нам потрібно **додати випадкове число від -50 до 50 до `mouseX` або `mouseY`.**\n\n# Завдання\nУ тебе вже є спрайт бджоли, який слідує за вказівником миші.\n\n* Онови розташування X та Y, щоб вони були випадковим чином наближені до миші.\n\t* Додайте випадкове число від -50 до 50 до `World.mouseX` та `World.mouseY`.\n* Якщо потрібно, використовуй блок `World.frameRate`, щоб сповільнити анімацію і знайти найкращу частоту кадрів.\n\n_Додаткове завдання: **Додай ще 3 бджілки** які слідують за вказівником миші так само, як бджолиний рій._",
        "CSD U3 Mouse Input Bee 2_2022": "# Випадковий рух навколо точки\n\n<img src=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\" style=\"float:right\">\n\nТепер, коли ми можемо змусити бджолу слідувати за вказівником миші, спробуймо зробити так, щоб бджола літала навколо вказівника миші, як показано на малюнку праворуч.  Для цього нам потрібно **додати випадкове число від -50 до 50 до `mouseX` або `mouseY`.**\n\n# Завдання\nУ тебе вже є спрайт бджоли, який слідує за вказівником миші.\n\n* Онови розташування X та Y, щоб вони були випадковим чином наближені до миші.\n\t* Додайте випадкове число від -50 до 50 до `World.mouseX` та `World.mouseY`.\n* Якщо потрібно, використовуй блок `World.frameRate`, щоб сповільнити анімацію і знайти найкращу частоту кадрів.\n\n_Додаткове завдання: **Додай ще 3 бджілки** які слідують за вказівником миші так само, як бджолиний рій._",
        "CSD U3 Movement Fish challenge2_2021": "# Бульбашки\n\nМожна використовувати шаблон лічильника для анімації фігур, таких як прямокутники та еліпси. Оскільки це підводна сцена, спробуймо створити бульбашку, яка підніметься у верхню частину екрана за допомогою еліпса. Якщо ми використаємо шаблон лічильника для оновлення значення `Y` еліпса, то зможемо створити враження, що бульбашка підіймається у верхню частину екрана!\n\n## Завдання:\n* Створи принаймні одну нову змінну, щоб відстежувати зміну *позиції y* бульбашок.\n* Встанови значення 400 або інше число внизу сітки.\n* Використовуй команди `noFill()`, `stroke()`, `strokeWeight()`, і `ellipse()`, щоб намалювати принаймні одну бульбашку.\n* Використовуй створену тобою змінну, щоб вказати позицію *Y* еліпса.\n* Використовуй шаблон лічильника з відніманням і змінну, щоб  еліпс повільно підіймався.\n\n<details><summary>Який код розташований над циклом малювання?</summary>\n\nТільки змінна, яку ти створюєш. \n\nНаприклад: `var bubble = 400;`\n</details>\n\n<details><summary>Який код розташований всередину циклу малювання?</summary>\n\nБлоки, що використовуються для малювання бульбашки та шаблон лічильника.\n\nНаприклад: \n```\nellipse(200, bubble, 25, 25);\nbubble = bubble - 2;\n```\n\n</details>",
        "CSD U3 Movement Fish challenge2_2022": "# Бульбашки\n\nМожна використовувати шаблон лічильника для анімації фігур, таких як прямокутники та еліпси. Оскільки це підводна сцена, спробуймо створити бульбашку, яка підніметься у верхню частину екрана за допомогою еліпса. Якщо ми використаємо шаблон лічильника для оновлення значення `Y` еліпса, то зможемо створити враження, що бульбашка підіймається у верхню частину екрана!\n\n## Завдання:\n* Створи принаймні одну нову змінну, щоб відстежувати зміну *позиції y* бульбашок.\n* Встанови значення 400 або інше число внизу сітки.\n* Використовуй команди `noFill()`, `stroke()`, `strokeWeight()`, і `ellipse()`, щоб намалювати принаймні одну бульбашку.\n* Використовуй створену тобою змінну, щоб вказати позицію *Y* еліпса.\n* Використовуй шаблон лічильника з відніманням і змінну, щоб  еліпс повільно підіймався.\n\n<details><summary>Який код розташований над циклом малювання?</summary>\n\nТільки змінна, яку ти створюєш. \n\nНаприклад: `var bubble = 400;`\n</details>\n\n<details><summary>Який код розташований всередину циклу малювання?</summary>\n\nБлоки, що використовуються для малювання бульбашки та шаблон лічильника.\n\nНаприклад: \n```\nellipse(200, bubble, 25, 25);\nbubble = bubble - 2;\n```\n\n</details>",
        "CSD U3 Movement Fish challenge_2021": "# Більше рибок!\n\nПерш ніж вивчити шаблон лічильника, ми навчилися встановлювати властивості спрайтів, такі як обертання, на випадкові значення, щоб анімувати їх. Встановивши обертання рибок на випадкове число, ти можеш зробити так, щоб вони злегка ворушилися. Це зробить анімацію їхнього руху більш реалістичною!\n\n## Завдання:\n* Задай обертання для кожної рибки всередині циклу малювання випадковим чином.\n  * Щоб це виглядало максимально реалістично, обирай невеликий діапазон від'ємних і додатних значень.",
        "CSD U3 Movement Fish challenge_2022": "# Більше рибок!\n\nПерш ніж вивчити шаблон лічильника, ми навчилися встановлювати властивості спрайтів, такі як обертання, на випадкові значення, щоб анімувати їх. Встановивши обертання рибок на випадкове число, ти можеш зробити так, щоб вони злегка ворушилися. Це зробить анімацію їхнього руху більш реалістичною!\n\n## Завдання:\n* Задай обертання для кожної рибки всередині циклу малювання випадковим чином.\n  * Щоб це виглядало максимально реалістично, обирай невеликий діапазон від'ємних і додатних значень.",
        "CSD U3 Movement Fish_2018": "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Анімація риб\n\nВикористовуючи шаблон лічильника, змусь всіх трьох рибок рухатися, як на зображенні праворуч. Синя рибка повинна рухатися найшвидше, а зелена – найповільніше.",
        "CSD U3 Movement Fish_2019": "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Анімація риб\n\nВикористовуючи шаблон лічильника, змусь всіх трьох рибок рухатися, як на зображенні праворуч. Синя рибка повинна рухатися найшвидше, а зелена – найповільніше.",
        "CSD U3 Movement Fish_2021": "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Анімація риб\n\nВикористовуючи шаблон лічильника, змусь всіх трьох рибок рухатися, як на зображенні праворуч. Синя рибка повинна рухатися найшвидше, а зелена – найповільніше.",
        "CSD U3 Movement Fish_2022": "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Анімація риб\n\nВикористовуючи шаблон лічильника, змусь всіх трьох рибок рухатися, як на зображенні праворуч. Синя рибка повинна рухатися найшвидше, а зелена – найповільніше.",
        "CSD U3 Movement Gears_2021": "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\" style=\"width:200px; float:right; margin-left: 20px;\">\n\n# Напрямок обертання\n\nКоли ми використовуємо шаблон лічильника з додаванням для властивості `rotation`, об'єкт завжди обертатиметься за годинниковою стрілкою. Однак іноді може знадобитися, щоб спрайт обертався у протилежному напрямку. Для цього слід скористатися відніманням!\n\n# Завдання\n\nПеред тобою три шестерні. Потрібно зробити так, щоб всі шестерні виглядали так, ніби вони обертаються синхронно одна з одною.\n\n* Закодуй шестерні обертатися так, щоб виглядало, ніби вони працюють як одна система.\n* **Підказка: не всі шестерні обертатимуться в одному напрямку**.",
        "CSD U3 Movement Gears_2022": "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\" style=\"width:200px; float:right; margin-left: 20px;\">\n\n# Напрямок обертання\n\nКоли ми використовуємо шаблон лічильника з додаванням для властивості `rotation`, об'єкт завжди обертатиметься за годинниковою стрілкою. Однак іноді може знадобитися, щоб спрайт обертався у протилежному напрямку. Для цього слід скористатися відніманням!\n\n# Завдання\n\nПеред тобою три шестерні. Потрібно зробити так, щоб всі шестерні виглядали так, ніби вони обертаються синхронно одна з одною.\n\n* Закодуй шестерні обертатися так, щоб виглядало, ніби вони працюють як одна система.\n* **Підказка: не всі шестерні обертатимуться в одному напрямку**.",
        "CSD U3 Plotting Shapes Shape Lab_2021": "# Малюємо фігури\n\nВипробуй цей інструмент, який дозволяє малювати різні кольорові фігури. \n\n-   Обери колір, щоб змінити колір фігури\n-   Клацай на фігуру щоразу, коли хочеш намалювати нову фігуру\n-   Спробуй увімкнути сітку, поставивши галочку біля кнопки \"Запустити\".\n\nНе забудь натиснути \"Запустити\", щоб програма почала працювати.",
        "CSD U3 Plotting Shapes Shape Lab_2022": "# Малюємо фігури\n\nВипробуй цей інструмент, який дозволяє малювати різні кольорові фігури. \n\n-   Обери колір, щоб змінити колір фігури\n-   Клацай на фігуру щоразу, коли хочеш намалювати нову фігуру\n-   Спробуй увімкнути сітку, поставивши галочку біля кнопки \"Запустити\".\n\nНе забудь натиснути \"Запустити\", щоб програма почала працювати.",
        "CSD U3 Random add_2021": "# Симетрія\n\nМи вже навчилися випадковим чином змінювати речі, але що, якщо нам потрібно, щоб дві випадкові фігури були певним чином пов'язані між собою? Використовуючи змінну та експериментуючи з математичними операціями (+, -, *, /), можна створити ефект симетрії у своїй роботі. Візерунки крил метеликів природно симетричні. Червоні плями на цьому малюнку розміщені випадковим чином, але друга пляма завжди знаходиться на тій самій відстані від правого краю екрана, що й перша пляма від лівого.\n\n# Завдання\n\n* Подивися, як намальовані червоні плями (лінії 23-24). Зверни увагу, як використовується віднімання.\n* Використай цей візерунок ще раз, щоб створити другу жовту пляму, щоб надати метелику більшої симетрії.\n* Створи змінну точка3, а потім додай ще два еліпси до крил метелика.",
        "CSD U3 Random add_2022": "# Симетрія\n\nМи вже навчилися випадковим чином змінювати речі, але що, якщо нам потрібно, щоб дві випадкові фігури були певним чином пов'язані між собою? Використовуючи змінну та експериментуючи з математичними операціями (+, -, *, /), можна створити ефект симетрії у своїй роботі. Візерунки крил метеликів природно симетричні. Червоні плями на цьому малюнку розміщені випадковим чином, але друга пляма завжди знаходиться на тій самій відстані від правого краю екрана, що й перша пляма від лівого.\n\n# Завдання\n\n* Подивися, як намальовані червоні плями (лінії 23-24). Зверни увагу, як використовується віднімання.\n* Використай цей візерунок ще раз, щоб створити другу жовту пляму, щоб надати метелику більшої симетрії.\n* Створи змінну точка3, а потім додай ще два еліпси до крил метелика.",
        "CSD U3 Random arc_2021": "# Випадкові дуги\n\nУ цій сцені маємо просто кілька дуг, які виглядають однаково. Не дуже захопливо.\n# Завдання\n\n* Зроби цю сцену цікавішою! Ти вже знаєш, як рандомізувати такі речі, як положення і кут, але не забувай про колір заливки, колір контуру і товщину. Розважайся!\n\n",
        "CSD U3 Random arc_2022": "# Випадкові дуги\n\nУ цій сцені маємо просто кілька дуг, які виглядають однаково. Не дуже захопливо.\n# Завдання\n\n* Зроби цю сцену цікавішою! Ти вже знаєш, як рандомізувати такі речі, як положення і кут, але не забувай про колір заливки, колір контуру і товщину. Розважайся!\n\n",
        "CSD U3 Random free play_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок друзям, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до своєї Галереї проєктів.\n\n\n",
        "CSD U3 Random free play_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок друзям, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до своєї Галереї проєктів.\n\n\n",
        "CSD U3 Random line_2021": "# Випадкові лінії\n\nУ цій сцені маємо просто набір прямих ліній. Не дуже захопливо.\n# Завдання\n\n* Зроби цю сцену цікавішою! Ти вже знаєш, як рандомізувати такі речі, як місце розташування, але не забувай про такі речі, як колір та товщина. Бажаємо успіхів!\n",
        "CSD U3 Random line_2022": "# Випадкові лінії\n\nУ цій сцені маємо просто набір прямих ліній. Не дуже захопливо.\n# Завдання\n\n* Зроби цю сцену цікавішою! Ти вже знаєш, як рандомізувати такі речі, як місце розташування, але не забувай про такі речі, як колір та товщина. Бажаємо успіхів!\n",
        "CSD U3 Random multiply_2021": "# Рандомізуємо дві фігури разом\n\nІноді нам потрібно рандомізувати частини малюнка, але при цьому фігури мають змінювалися разом. Часто це можна зробити за допомогою змінних та математичних операцій (+, -, *, /). У цьому малюнку дерева використовується змінна `height` для керування висотою стовбура і вертикальним положенням крони. Змінна `width` використовується для встановлення ширини стовбура. Інша змінна `leavesWidth` контролює розмір крони.\n\n# Завдання\n\n* Зверни увагу на діапазони змінних `width` і `leavesWidth`. Чим вони відрізняються?\n* Запускай програму кілька разів, доки не побачиш, що саме іноді йде не так.\n<details><summary>Що йде не так?</summary><em>Іноді значення `leavesWidth` менше за значення `width`, що робить еліпс занадто малим.</em></details>\n* Відредагуй код так, щоб ширина крони завжди була рівно вдвічі більшою за ширину стовбура дерева.",
        "CSD U3 Random multiply_2022": "# Рандомізуємо дві фігури разом\n\nІноді нам потрібно рандомізувати частини малюнка, але при цьому фігури мають змінювалися разом. Часто це можна зробити за допомогою змінних та математичних операцій (+, -, *, /). У цьому малюнку дерева використовується змінна `height` для керування висотою стовбура і вертикальним положенням крони. Змінна `width` використовується для встановлення ширини стовбура. Інша змінна `leavesWidth` контролює розмір крони.\n\n# Завдання\n\n* Зверни увагу на діапазони змінних `width` і `leavesWidth`. Чим вони відрізняються?\n* Запускай програму кілька разів, доки не побачиш, що саме іноді йде не так.\n<details><summary>Що йде не так?</summary><em>Іноді значення `leavesWidth` менше за значення `width`, що робить еліпс занадто малим.</em></details>\n* Відредагуй код так, щоб ширина крони завжди була рівно вдвічі більшою за ширину стовбура дерева.",
        "CSD U3 Random planets_2021": "# Змінюємо планети\n\nМи навчилися створювати випадкові речі, тож настав час застосувати всі знання в цій сцені!\n\n# Завдання\n\n* Зроби цю сцену веселішою! Надай планетам випадкові розміри, щоб вони постійно змінювалися. А для більшої забави, трохи зміни їхнє розташування!",
        "CSD U3 Random planets_2022": "# Змінюємо планети\n\nМи навчилися створювати випадкові речі, тож настав час застосувати всі знання в цій сцені!\n\n# Завдання\n\n* Зроби цю сцену веселішою! Надай планетам випадкові розміри, щоб вони постійно змінювалися. А для більшої забави, трохи зміни їхнє розташування!",
        "CSD U3 Random rainbow snake_2021": "<img src=\"https://images.code.org/6af643f712b042e5b076f06cc2f902e2-image-1520404404645.32.58 PM.png\" style=\"float:right;height:150px\">\n\n# Веселкова змійка.\n\nЦя програма малює веселкову змійку. Щоб змійка кожного разу малювалася по-різному, потрібно використовувати випадкові числа.\n\n# Завдання\n\n-   Запусти програму кілька разів, щоб побачити, як працює початковий код.\n-   Додай до веселкової змійки принаймні три нових різнокольорових кола.\n-   Використовуй команду `randomNumber()`, щоб змусити решту тіла змійки рухатися вгору і вниз, як у перших трьох випадках.\n\nВипробування: Зможеш зробити розмір деяких кругів випадковим?\\_",
        "CSD U3 Random rainbow snake_2022": "<img src=\"https://images.code.org/6af643f712b042e5b076f06cc2f902e2-image-1520404404645.32.58 PM.png\" style=\"float:right;height:150px\">\n\n# Веселкова змійка.\n\nЦя програма малює веселкову змійку. Щоб змійка кожного разу малювалася по-різному, потрібно використовувати випадкові числа.\n\n# Завдання\n\n-   Запусти програму кілька разів, щоб побачити, як працює початковий код.\n-   Додай до веселкової змійки принаймні три нових різнокольорових кола.\n-   Використовуй команду `randomNumber()`, щоб змусити решту тіла змійки рухатися вгору і вниз, як у перших трьох випадках.\n\nВипробування: Зможеш зробити розмір деяких кругів випадковим?\\_",
        "CSD U3 Random random ellipse2_2018": "<img src=\"https://images.code.org/8306a9fd01470ac8582cf4374dde7033-image-1520403513967.17.40 PM.png\" style=\"float:right;height:150px\">\n\n# Випадкові числа\n\nБачимо сонце з попереднього завдання. Наразі випадковою є лише координата X, але можна також зробити випадковою координату Y.\n\n# Завдання\n\n-   Використай `randomNumber()` для параметра Y еліпса, щоб коло було намальовано і у випадковій позиції по Y.\n-   Коли коло буде з’являтись на випадкових позиціях X і Y, можна рухатися далі.",
        "CSD U3 Random random ellipse2_2018_2019": "<img src=\"https://images.code.org/8306a9fd01470ac8582cf4374dde7033-image-1520403513967.17.40 PM.png\" style=\"float:right;height:150px\">\n\n# Випадкові числа\n\nБачимо сонце з попереднього завдання. Наразі випадковою є лише координата X, але можна також зробити випадковою координату Y.\n\n# Завдання\n\n-   Використай `randomNumber()` для параметра Y еліпса, щоб коло було намальовано і у випадковій позиції по Y.\n-   Коли коло буде з’являтись на випадкових позиціях X і Y, можна рухатися далі.",
        "CSD U3 Random random ellipse2_2021": "<img src=\"https://images.code.org/8306a9fd01470ac8582cf4374dde7033-image-1520403513967.17.40 PM.png\" style=\"float:right;height:150px\">\n\n# Випадкові числа\n\nБачимо сонце з попереднього завдання. Наразі випадковою є лише координата X, але можна також зробити випадковою координату Y.\n\n# Завдання\n\n-   Використай `randomNumber()` для параметра Y еліпса, щоб коло було намальовано і у випадковій позиції по Y.\n-   Коли коло буде з’являтись на випадкових позиціях X і Y, можна рухатися далі.",
        "CSD U3 Random random ellipse2_2022": "<img src=\"https://images.code.org/8306a9fd01470ac8582cf4374dde7033-image-1520403513967.17.40 PM.png\" style=\"float:right;height:150px\">\n\n# Випадкові числа\n\nБачимо сонце з попереднього завдання. Наразі випадковою є лише координата X, але можна також зробити випадковою координату Y.\n\n# Завдання\n\n-   Використай `randomNumber()` для параметра Y еліпса, щоб коло було намальовано і у випадковій позиції по Y.\n-   Коли коло буде з’являтись на випадкових позиціях X і Y, можна рухатися далі.",
        "CSD U3 Random random ellipse_2021": "# Випадкові числа\n\nУ вас з'явився новий блок у скриньці `математика`, який називається `randomNumber()`. Коли ми створюємо малюнки за допомогою випадкових чисел, вони виглядатимуть по-різному кожного разу, коли запускатиметься програма. Інформацію про цей блок можна отримати навівши на нього курсор на панелі інструментів і обравши  пункт \"Переглянути приклади \"\\*\\*..\n\n![](https://images.code.org/d6c8db7bca962b69c289a223f63dcb08-image-1589486337822.png)\n\n# Завдання\n\n-   Запусти програму кілька разів, щоб побачити, як вона працює.\n-   Змінюй числа всередині `randomNumber()` і запусти код ще кілька разів, щоб побачити, що змінилося.",
        "CSD U3 Random random ellipse_2022": "# Випадкові числа\n\nУ вас з'явився новий блок у скриньці `математика`, який називається `randomNumber()`. Коли ми створюємо малюнки за допомогою випадкових чисел, вони виглядатимуть по-різному кожного разу, коли запускатиметься програма. Інформацію про цей блок можна отримати навівши на нього курсор на панелі інструментів і обравши  пункт \"Переглянути приклади \"\\*\\*..\n\n![](https://images.code.org/d6c8db7bca962b69c289a223f63dcb08-image-1589486337822.png)\n\n# Завдання\n\n-   Запусти програму кілька разів, щоб побачити, як вона працює.\n-   Змінюй числа всередині `randomNumber()` і запусти код ще кілька разів, щоб побачити, що змінилося.",
        "CSD U3 Random rgb_2021": "# Випадкові кольори RGB\n\nМи навчилися змінювати речі у випадковому порядку, тож настав час застосувати всі знання в цій сцені!\n\n# Завдання\n\n* Наразі всі кольори у цій сцені задані. Використовуючи кольори RGB та випадковість, зміни кольори у цій сцені!\n",
        "CSD U3 Random rgb_2022": "# Випадкові кольори RGB\n\nМи навчилися змінювати речі у випадковому порядку, тож настав час застосувати всі знання в цій сцені!\n\n# Завдання\n\n* Наразі всі кольори у цій сцені задані. Використовуючи кольори RGB та випадковість, зміни кольори у цій сцені!\n",
        "CSD U3 Random shape position_2021": "<img src=\"https://images.code.org/982d42328e2a44db4f1643df805a37ff-image-1569352188898.gif\" style=\"width:200px;float:right;\">\n\n# Налагодження: Випадковий рух фігури\n\nЗараз у цій програмі кожен прямокутник має своє власне випадкове положення. Чи зможеш ти зробити так, щоб прямокутники завжди розташовувались один над одним, але весь стос розміщувався випадковим чином?\n\n# Завдання\n\n* Запусти цю програму, щоб побачити, як вона працює.\n* Використовуй змінну `xPosition` для малювання двох нижніх прямокутників у тому самому *положенні Х*, що й верхній рожевий прямокутник.\n",
        "CSD U3 Random shape position_2022": "<img src=\"https://images.code.org/982d42328e2a44db4f1643df805a37ff-image-1569352188898.gif\" style=\"width:200px;float:right;\">\n\n# Налагодження: Випадковий рух фігури\n\nЗараз у цій програмі кожен прямокутник має своє власне випадкове положення. Чи зможеш ти зробити так, щоб прямокутники завжди розташовувались один над одним, але весь стос розміщувався випадковим чином?\n\n# Завдання\n\n* Запусти цю програму, щоб побачити, як вона працює.\n* Використовуй змінну `xPosition` для малювання двох нижніх прямокутників у тому самому *положенні Х*, що й верхній рожевий прямокутник.\n",
        "CSD U3 Scene Example_2021": "# Сцени зі спрайтами\n\nНастав час зібрати все разом і створити веселу сценку.  Поглянь на цей приклад і подумай, що тобі хотілось би створити.\n\n# Створюємо ескіз\n\nПерш ніж рухатися далі, створи ескіз сцени, яку хочеш створити наприкінці цього уроку. Подумай про прості фігури, які ми використовували раніше, спрайти для персонажів і будь-який текст, який можна було б розмістити на екрані. Коли ідея буде сформована, ти дізнаєшся, як скласти твою сцену.\n\n**Чи є ще щось, що ти не знаєш як робити?**\n\n**Чи хочеш ти повторити якісь навички?**",
        "CSD U3 Scene Example_2022": "# Сцени зі спрайтами\n\nНастав час зібрати все разом і створити веселу сценку.  Поглянь на цей приклад і подумай, що тобі хотілось би створити.\n\n# Створюємо ескіз\n\nПерш ніж рухатися далі, створи ескіз сцени, яку хочеш створити наприкінці цього уроку. Подумай про прості фігури, які ми використовували раніше, спрайти для персонажів і будь-який текст, який можна було б розмістити на екрані. Коли ідея буде сформована, ти дізнаєшся, як скласти твою сцену.\n\n**Чи є ще щось, що ти не знаєш як робити?**\n\n**Чи хочеш ти повторити якісь навички?**",
        "CSD U3 Sprite Movement Left": "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\" style=\"float: right; margin-left: 20px\">\n\n# Рух ліворуч\n\nЯкщо збільшення координати X спрайта змушує його рухатися праворуч, як можна змусити його рухатися ліворуч?\n\n# Завдання\n\nЗроби свою програму анімованою, як на зображенні праворуч. Онови `fly.x` всередині циклу малювання, щоб у кожному кадрі муха малювалася трохи ліворуч.\n\n_Порада. Можна пришвидшити рух спрайтів, додаючи або віднімаючи більші числа. Муха в нашому прикладі рухається приблизно вдвічі швидше, ніж літак на останньому рівні._",
        "CSD U3 Sprite Movement Left_2018": "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\" style=\"float: right; margin-left: 20px\">\n\n# Рух ліворуч\n\nЯкщо збільшення координати X спрайта змушує його рухатися праворуч, як можна змусити його рухатися ліворуч?\n\n# Завдання\n\nЗроби свою програму анімованою, як на зображенні праворуч. Онови `fly.x` всередині циклу малювання, щоб у кожному кадрі муха малювалася трохи ліворуч.\n\n_Порада. Можна пришвидшити рух спрайтів, додаючи або віднімаючи більші числа. Муха в нашому прикладі рухається приблизно вдвічі швидше, ніж літак на останньому рівні._",
        "CSD U3 Sprite Movement Left_2019": "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\" style=\"float: right; margin-left: 20px\">\n\n# Рух ліворуч\n\nЯкщо збільшення координати X спрайта змушує його рухатися праворуч, як можна змусити його рухатися ліворуч?\n\n# Завдання\n\nЗроби свою програму анімованою, як на зображенні праворуч. Онови `fly.x` всередині циклу малювання, щоб у кожному кадрі муха малювалася трохи ліворуч.\n\n_Порада. Можна пришвидшити рух спрайтів, додаючи або віднімаючи більші числа. Муха в нашому прикладі рухається приблизно вдвічі швидше, ніж літак на останньому рівні._",
        "CSD U3 Sprite Movement Left_2021": "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\" style=\"float: right; margin-left: 20px\">\n\n# Рух ліворуч\n\nЯкщо збільшення координати X спрайта змушує його рухатися праворуч, як можна змусити його рухатися ліворуч?\n\n# Завдання\n\nЗроби свою програму анімованою, як на зображенні праворуч. Онови `fly.x` всередині циклу малювання, щоб у кожному кадрі муха малювалася трохи ліворуч.\n\n_Порада. Можна пришвидшити рух спрайтів, додаючи або віднімаючи більші числа. Муха в нашому прикладі рухається приблизно вдвічі швидше, ніж літак на останньому рівні._",
        "CSD U3 Sprite Movement Left_2022": "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\" style=\"float: right; margin-left: 20px\">\n\n# Рух ліворуч\n\nЯкщо збільшення координати X спрайта змушує його рухатися праворуч, як можна змусити його рухатися ліворуч?\n\n# Завдання\n\nЗроби свою програму анімованою, як на зображенні праворуч. Онови `fly.x` всередині циклу малювання, щоб у кожному кадрі муха малювалася трохи ліворуч.\n\n_Порада. Можна пришвидшити рух спрайтів, додаючи або віднімаючи більші числа. Муха в нашому прикладі рухається приблизно вдвічі швидше, ніж літак на останньому рівні._",
        "CSD U3 Sprite Movement Right_2021": "<img src=\"https://images.code.org/cdf7115bbd6e9c91838cc6c8a78d6607-image-1588350244303.gif\" style=\"float: right; margin-left: 20px\">\n\n# Переміщення спрайтів\n\nВикористовуючи шаблон лічильника, можна писати програми, які плавно анімують спрайти. Додавання або вилучення властивості `X` або `Y` спрайта у циклі малювання змушує спрайт трохи рухатися щоразу, коли він перемальовується.\n\n# Завдання\n\n-   Переглянь код, який змушує реактивний літак підійматися вгору по екрану.\n-   Додай код, який змушує літак рухатися праворуч, як на прикладі зображення.",
        "CSD U3 Sprite Movement Right_2022": "<img src=\"https://images.code.org/cdf7115bbd6e9c91838cc6c8a78d6607-image-1588350244303.gif\" style=\"float: right; margin-left: 20px\">\n\n# Переміщення спрайтів\n\nВикористовуючи шаблон лічильника, можна писати програми, які плавно анімують спрайти. Додавання або вилучення властивості `X` або `Y` спрайта у циклі малювання змушує спрайт трохи рухатися щоразу, коли він перемальовується.\n\n# Завдання\n\n-   Переглянь код, який змушує реактивний літак підійматися вгору по екрану.\n-   Додай код, який змушує літак рухатися праворуч, як на прикладі зображення.",
        "CSD U3 Sprites Exploration_2021": "# Знайомство зі спрайтами\n\nУ цій програмі використовуються деякі нові блоки, яких ми раніше не бачили.\n\n# Завдання\n\nРазом з партнером прочитайте код і обговоріть, як, на вашу думку, він працює.  Зміни кілька рядків і подивись, що станеться.  Як ти думаєтш, що робить кожен рядок?",
        "CSD U3 Sprites Exploration_2022": "# Знайомство зі спрайтами\n\nУ цій програмі використовуються деякі нові блоки, яких ми раніше не бачили.\n\n# Завдання\n\nРазом з партнером прочитайте код і обговоріть, як, на вашу думку, він працює.  Зміни кілька рядків і подивись, що станеться.  Як ти думаєтш, що робить кожен рядок?",
        "CSD U3 Sprites anitab 1_2021": "# Додаємо анімацію\n\nЦя програма малює на екрані чотири спрайти, і один з них містить анімацію з вкладки Анімація!\n\n# Завдання\n\n-   Запусти код і подивися що станеться.\n-   Перейди на вкладку \"Анімація\", щоб побачити, які анімації нам доступні. [(Показати, де саме.)](#triggercallout=animation)\n    -   Не бійся змінювати анімацію або обирати нову.\n-   Використовуй команду `setAnimation` для зміни вигляду інших спрайтів.",
        "CSD U3 Sprites anitab 1_2022": "# Додаємо анімацію\n\nЦя програма малює на екрані чотири спрайти, і один з них містить анімацію з вкладки Анімація!\n\n# Завдання\n\n-   Запусти код і подивися що станеться.\n-   Перейди на вкладку \"Анімація\", щоб побачити, які анімації нам доступні. [(Показати, де саме.)](#triggercallout=animation)\n    -   Не бійся змінювати анімацію або обирати нову.\n-   Використовуй команду `setAnimation` для зміни вигляду інших спрайтів.",
        "CSD U3 Sprites anitab 2_2021": "# Завантаження зображень\n\nНа вкладці \"Анімація\" можна завантажити анімацію! Ти малюватимеш повітряного змія. Зображення можна знайти в Інтернеті.\n\n# Завдання\n* Пошукай в інтернеті зображення повітряного змія. Найкраще підійдуть невеликі зображення з прозорим тлом.\n* Завантаж своє зображення повітряного змія. \n* Відкрий вкладку \"Анімація\".\n* Клацни <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05 PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16 PM.png\" style=\"width:50px\"> щоб завантажити зображення.\n* Вибери файл на комп'ютері.\n* Перейменуй своє зображення так, щоб його було легко запам'ятати. Щоб перейменувати його, клацни на текст під зображенням.\n* Повернувшись у режим коду, використай команду  `sprite.setAnimation()`, щоб змусити спрайт `kite` показувати нову анімацію.\n\nНе хвилюйся, якщо зображення повітряного змія занадто велике! Ти дізнаєшся як це виправити на наступному рівні.",
        "CSD U3 Sprites anitab 2_2022": "# Завантаження зображень\n\nНа вкладці \"Анімація\" можна завантажити анімацію! Ти малюватимеш повітряного змія. Зображення можна знайти в Інтернеті.\n\n# Завдання\n* Пошукай в інтернеті зображення повітряного змія. Найкраще підійдуть невеликі зображення з прозорим тлом.\n* Завантаж своє зображення повітряного змія. \n* Відкрий вкладку \"Анімація\".\n* Клацни <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05 PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16 PM.png\" style=\"width:50px\"> щоб завантажити зображення.\n* Вибери файл на комп'ютері.\n* Перейменуй своє зображення так, щоб його було легко запам'ятати. Щоб перейменувати його, клацни на текст під зображенням.\n* Повернувшись у режим коду, використай команду  `sprite.setAnimation()`, щоб змусити спрайт `kite` показувати нову анімацію.\n\nНе хвилюйся, якщо зображення повітряного змія занадто велике! Ти дізнаєшся як це виправити на наступному рівні.",
        "CSD U3 Sprites assessment_2021": "# Створюємо власні спрайти\n\n<img src=\"https://images.code.org/d823ca4327740a53df3600a0d9bc55b8-image-1566234132679.59.40 AM.png\" style=\"float: right; width: 150px;\">\n\nВикористовуй нові знання для створення власних спрайтів.  У прикладі наведений лише один зі способів завершення рівня.  Виріши для себе, повинні виглядати твої спрайти.\n\n# Завдання\n\n-   Перейди на вкладку Анімації та додай принаймні дві анімації до свого проєкту.\n-   На вкладці Коду створи принаймні два спрайти у двох різних місцях на екрані.\n-   Признач кожному спрайту окрему анімацію.\n-   Намалюй свої спрайти на екрані.",
        "CSD U3 Sprites assessment_2022": "# Створюємо власні спрайти\n\n<img src=\"https://images.code.org/d823ca4327740a53df3600a0d9bc55b8-image-1566234132679.59.40 AM.png\" style=\"float: right; width: 150px;\">\n\nВикористовуй нові знання для створення власних спрайтів.  У прикладі наведений лише один зі способів завершення рівня.  Виріши для себе, повинні виглядати твої спрайти.\n\n# Завдання\n\n-   Перейди на вкладку Анімації та додай принаймні дві анімації до свого проєкту.\n-   На вкладці Коду створи принаймні два спрайти у двох різних місцях на екрані.\n-   Признач кожному спрайту окрему анімацію.\n-   Намалюй свої спрайти на екрані.",
        "CSD U3 Sprites combine_2021": "# Поєднуємо ідеї\n\nНастав час об'єднати всі різні способи створення спрайтів і розважитися!\n\n# Завдання\nВикористовуй спрайти, які ми надаємо, або завантаж зображення або навалюй власні спрайти, щоб створити веселу сцену з різними типами спрайтів! Дай волю креативності!\n\n",
        "CSD U3 Sprites combine_2022": "# Поєднуємо ідеї\n\nНастав час об'єднати всі різні способи створення спрайтів і розважитися!\n\n# Завдання\nВикористовуй спрайти, які ми надаємо, або завантаж зображення або навалюй власні спрайти, щоб створити веселу сцену з різними типами спрайтів! Дай волю креативності!\n\n",
        "CSD U3 Sprites draw animation_2021": "# Малюємо власне зображення\n\nВкладкою \"Анімація\" можна скористатися, щоб намалювати власне зображення. Ти створюватимеш власного персонажа, намалювавши його.\n\n# Завдання\n* Відкрий вкладку \"Анімація\".\n* Клацни <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05 PM.png\" style=\"width:50px\">, а потім  <img src=\"https://images.code.org/78890d644bbc4baef876a9eb8b6ea436-image-1567790745754.PNG\" style=\"width:50px\">, щоб намалювати власне зображення для використання в якості спрайта.\n* Перейменуй своє зображення так, щоб його було легко запам'ятати. Щоб перейменувати його, клацни на текст під зображенням.\n* Повернувшись у режим коду, використовуй `sprite.setAnimation()`, щоб змусити спрайт персонажа показувати нову анімацію.\n\nПоки що не хвилюйся, якщо зображення персонажа занадто велике або занадто маленьке. Ти навчишся змінювати розмір спрайтів на наступному уроці.\n",
        "CSD U3 Sprites draw animation_2022": "# Малюємо власне зображення\n\nВкладкою \"Анімація\" можна скористатися, щоб намалювати власне зображення. Ти створюватимеш власного персонажа, намалювавши його.\n\n# Завдання\n* Відкрий вкладку \"Анімація\".\n* Клацни <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05 PM.png\" style=\"width:50px\">, а потім  <img src=\"https://images.code.org/78890d644bbc4baef876a9eb8b6ea436-image-1567790745754.PNG\" style=\"width:50px\">, щоб намалювати власне зображення для використання в якості спрайта.\n* Перейменуй своє зображення так, щоб його було легко запам'ятати. Щоб перейменувати його, клацни на текст під зображенням.\n* Повернувшись у режим коду, використовуй `sprite.setAnimation()`, щоб змусити спрайт персонажа показувати нову анімацію.\n\nПоки що не хвилюйся, якщо зображення персонажа занадто велике або занадто маленьке. Ти навчишся змінювати розмір спрайтів на наступному уроці.\n",
        "CSD U3 Sprites fish_2021": "# Створення сцени\n\nМи почали сцену з трьома різнима спрайтами риб. Використовуючи все, що завгодно, наприклад, малюнки або інші спрайти, налаштуй спрайти риб, щоб створити веселу сцену!\n\n",
        "CSD U3 Sprites fish_2022": "# Створення сцени\n\nМи почали сцену з трьома різнима спрайтами риб. Використовуючи все, що завгодно, наприклад, малюнки або інші спрайти, налаштуй спрайти риб, щоб створити веселу сцену!\n\n",
        "CSD U3 Sprites intro debug": "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\" style=\"width: 150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\n\n# Налагодження\n\nЦя програма повинна створити два нових спрайти, один ліворуч і один праворуч, але вона малює лише один. **Код додавати не потрібно**, просто перестав наявний код, щоб переконатися, що обидва спрайти відображаються так, як показано на малюнку праворуч.",
        "CSD U3 Sprites intro debug_2018": "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\" style=\"width: 150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\n\n# Налагодження\n\nЦя програма повинна створити два нових спрайти, один ліворуч і один праворуч, але вона малює лише один. **Код додавати не потрібно**, просто перестав наявний код, щоб переконатися, що обидва спрайти відображаються так, як показано на малюнку праворуч.",
        "CSD U3 Sprites intro debug_2019": "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\" style=\"width: 150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\n\n# Налагодження\n\nЦя програма повинна створити два нових спрайти, один ліворуч і один праворуч, але вона малює лише один. **Код додавати не потрібно**, просто перестав наявний код, щоб переконатися, що обидва спрайти відображаються так, як показано на малюнку праворуч.",
        "CSD U3 Sprites intro debug_2021": "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\" style=\"width: 150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\n\n# Налагодження\n\nЦя програма повинна створити два нових спрайти, один ліворуч і один праворуч, але вона малює лише один. **Код додавати не потрібно**, просто перестав наявний код, щоб переконатися, що обидва спрайти відображаються так, як показано на малюнку праворуч.",
        "CSD U3 Sprites intro debug_2022": "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\" style=\"width: 150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\n\n# Налагодження\n\nЦя програма повинна створити два нових спрайти, один ліворуч і один праворуч, але вона малює лише один. **Код додавати не потрібно**, просто перестав наявний код, щоб переконатися, що обидва спрайти відображаються так, як показано на малюнку праворуч.",
        "CSD U3 Sprites intro sprites_2021": "# Спрайти\n\n**Створення спрайтів:** <img src = \"https://images.code.org/92e06cddc5355dc37aa2c6a033793dd0-image-1466027030772.43.41 PM.png\" style = \"height:30px\"> створює новий спрайт і зберігає його у змінну. Назва за замовчуванням – `sprite`, тому краще змінити її на щось більш значуще.\n\n**Малювання спрайтів:** спрайти з’являються на екрані лише тоді, коли ми їх там малюємо. Виклик команди ![](<https://images.code.org/82a18afda6463323529acaa3dc326d55-image-1466004008638.19.16 AM.png>) відобразить усі створені нами спрайти на екрані.\n\n<img src=\"https://images.code.org/fe5905d6b89c14dca525865f4e579104-image-1491254588895.png\" style=\"width: 150px; float: right; border: 1px solid #f2f2f2; margin-left: 20px\">\n\n# Завдання\n\nЦя програма містить коментарі, які вказують, де розмістити код, але поза тим вона порожня. Ваша програма має виглядати як на зображенні праворуч.\n\n-   Додай команду `var sprite = createSprite(200, 200)` під коментарем `Створення спрайтів`.\n    -   Поки що можна ігнорувати попередження про жовтий трикутник. Це просто вказує на те, що ми ще не використали свій спрайт.\n-   Додай `drawSprites()` під коментарем `Малюнок`.\n-   **Запусти код**, щоб намалювати свій перший спрайт на екрані.\n\n_Підказка: спрайти малюються з центру, що означає, що центр квадрата (а не верхній лівий кут) знаходиться в координатах (200, 200)._",
        "CSD U3 Sprites missing_2021": "# Налагодження: відсутні спрайти\n\nДивлячись на код нижче, ми бачимо, що створюється багато спрайтів, але коли ми запускаємо програму, нічого не з'являється. Зможеш це виправити?\n",
        "CSD U3 Sprites missing_2022": "# Налагодження: відсутні спрайти\n\nДивлячись на код нижче, ми бачимо, що створюється багато спрайтів, але коли ми запускаємо програму, нічого не з'являється. Зможеш це виправити?\n",
        "CSD U3 Sprites name sprite_2021": "# Налагодження: ім'я спрайта\n\nПрограма нижче намагається намалювати один і той самий спрайт у трьох різних положеннях, але відображається лише один з них. Що тут відбувається і чи можна це виправити?\n",
        "CSD U3 Sprites name sprite_2022": "# Налагодження: ім'я спрайта\n\nПрограма нижче намагається намалювати один і той самий спрайт у трьох різних положеннях, але відображається лише один з них. Що тут відбувається і чи можна це виправити?\n",
        "CSD U3 Sprites names_2021": "# Налагодження: помилка анімації спрайтів\n\nЩоразу, коли ми намагаємося запустити нашу програму, виникають помилки! Схоже, щось не так з нашими анімаціями. Можеш спробувати виправити це?\n",
        "CSD U3 Sprites names_2022": "# Налагодження: помилка анімації спрайтів\n\nЩоразу, коли ми намагаємося запустити нашу програму, виникають помилки! Схоже, щось не так з нашими анімаціями. Можеш спробувати виправити це?\n",
        "CSD U3 Sprites order_2021": "<img src=\"https://images.code.org/737cffe346564b62b9714e9d2c878a99-image-1591294163233.png\" style=\"float:right;\"/>\n\n# Налагодження: порядок спрайтів\n\nЩось не так зі сценою нижче. Деякі спрайти знаходяться позаду інших спрайтів, коли вони мають бути перед ними. Можеш це виправити?\n",
        "CSD U3 Sprites order_2022": "<img src=\"https://images.code.org/737cffe346564b62b9714e9d2c878a99-image-1591294163233.png\" style=\"float:right;\"/>\n\n# Налагодження: порядок спрайтів\n\nЩось не так зі сценою нижче. Деякі спрайти знаходяться позаду інших спрайтів, коли вони мають бути перед ними. Можеш це виправити?\n",
        "CSD U3 Sprites scene challenge_2021": "# Перевірка проєкту\n\nПереглянь сцену востаннє, щоб переконатися, що все потрібне було додане.\n\n# Завдання\n\n-   Порівняй намальовану тобою сцену зі своїм планом.\n-   Внеси останні зміни.\n-   Чим ти пишаєшся найбільше?",
        "CSD U3 Sprites scene challenge_2022": "# Перевірка проєкту\n\nПереглянь сцену востаннє, щоб переконатися, що все потрібне було додане.\n\n# Завдання\n\n-   Порівняй намальовану тобою сцену зі своїм планом.\n-   Внеси останні зміни.\n-   Чим ти пишаєшся найбільше?",
        "CSD U3 Sprites scene drawing_2021": "# Створюємо власну сцену - Тло\n\nСпочатку створи тло своєї сцени за допомогою команд фігур або спрайтів.\n\n# Завдання\n\n-   Використовуй команду `background()`, щоб заповнити екран кольором.\n-   Додавай будь-які необхідні команди фігур або спрайтів, щоб намалювати тло своєї сцени.",
        "CSD U3 Sprites scene drawing_2022": "# Створюємо власну сцену - Тло\n\nСпочатку створи тло своєї сцени за допомогою команд фігур або спрайтів.\n\n# Завдання\n\n-   Використовуй команду `background()`, щоб заповнити екран кольором.\n-   Додавай будь-які необхідні команди фігур або спрайтів, щоб намалювати тло своєї сцени.",
        "CSD U3 Sprites scene sprites_2021": "# Створюємо власну сцену - Спрайти\n\nКоли тло готове, настав час додати спрайти.\n\n# Завдання\n\n-   Додай або створи всі свої анімації для спрайтів на вкладці \"Анімація\".\n-   Створи кожен спрайт і признач йому анімацію.\n-   Встанови значення для будь-яких властивостей спрайтів, які ти використовуватимеш.\n-   Намалюй всі свої спрайти на екрані.",
        "CSD U3 Sprites scene sprites_2022": "# Створюємо власну сцену - Спрайти\n\nКоли тло готове, настав час додати спрайти.\n\n# Завдання\n\n-   Додай або створи всі свої анімації для спрайтів на вкладці \"Анімація\".\n-   Створи кожен спрайт і признач йому анімацію.\n-   Встанови значення для будь-яких властивостей спрайтів, які ти використовуватимеш.\n-   Намалюй всі свої спрайти на екрані.",
        "CSD U3 Sprites scene text_2021": "# Створюємо власну сцену - Текст\n\nОстанньою частиною твоєї сцени є додавання тексту.\n\n# Завдання\n\n-   Додай текст до свого проєкту.\n-   Використовуй будь-які інші команди, щоб змінити вигляд тексту.",
        "CSD U3 Sprites scene text_2022": "# Створюємо власну сцену - Текст\n\nОстанньою частиною твоєї сцени є додавання тексту.\n\n# Завдання\n\n-   Додай текст до свого проєкту.\n-   Використовуй будь-які інші команди, щоб змінити вигляд тексту.",
        "CSD U3 Sprites sequencing_2021": "# Налагодження спрайтів\n\n<img src=\"https://images.code.org/9e62ba920102879979acb2a7f6c216d8-image-1566234200067.36.46 AM.png\" style=\"float: right; width: 150px;\">\n\nЦя програма має малювати три спрайти на екрані, але вона поки що не працює.  Попереду розташований не той спрайт, що потрібно, а анімація іншого спрайта не відображається.\n\n# Завдання\n\n-   Запусти код і подивися, що станеться.\n-   Виправ дві проблеми у коді.\n\nПідказка: Так само, як і фігури, спрайти малюються в порядку їх створення.\\_",
        "CSD U3 Sprites sequencing_2022": "# Налагодження спрайтів\n\n<img src=\"https://images.code.org/9e62ba920102879979acb2a7f6c216d8-image-1566234200067.36.46 AM.png\" style=\"float: right; width: 150px;\">\n\nЦя програма має малювати три спрайти на екрані, але вона поки що не працює.  Попереду розташований не той спрайт, що потрібно, а анімація іншого спрайта не відображається.\n\n# Завдання\n\n-   Запусти код і подивися, що станеться.\n-   Виправ дві проблеми у коді.\n\nПідказка: Так само, як і фігури, спрайти малюються в порядку їх створення.\\_",
        "CSD U3 Sprites sprite draw_2021": "# Поєднуємо ідеї\n\nТепер ми навчилися малювати зображення, а також створювати спрайти в Ігровій Лабораторії. Тож використовуючи обидві ці техніки, створи веселу сцену!",
        "CSD U3 Sprites sprite draw_2022": "# Поєднуємо ідеї\n\nТепер ми навчилися малювати зображення, а також створювати спрайти в Ігровій Лабораторії. Тож використовуючи обидві ці техніки, створи веселу сцену!",
        "CSD U3 Sprites text debug_2021": "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\" style=\"float: right; width: 200px; margin-left: 20px;\">\n\n# Налагодження\n\nКод для цієї сцени написаний правильно, але команди розташовані у неправильному порядку. Сцена повинна виглядати як на зображенні праворуч.  Спробуй змінити порядок блоків так, щоб кожна частина сцени була намальована у правильному порядку.\n\n\nПідказка: Часто краще викликати `drawSprites()` у самому кінці програми, щоб спрайти були поверх тла, але для деяких малюнків слід викликати `drawSprites()` раніше, щоб спрайти були поверх одних фігур, але під іншими._.",
        "CSD U3 Sprites text debug_2022": "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\" style=\"float: right; width: 200px; margin-left: 20px;\">\n\n# Налагодження\n\nКод для цієї сцени написаний правильно, але команди розташовані у неправильному порядку. Сцена повинна виглядати як на зображенні праворуч.  Спробуй змінити порядок блоків так, щоб кожна частина сцени була намальована у правильному порядку.\n\n\nПідказка: Часто краще викликати `drawSprites()` у самому кінці програми, щоб спрайти були поверх тла, але для деяких малюнків слід викликати `drawSprites()` раніше, щоб спрайти були поверх одних фігур, але під іншими._.",
        "CSD U3 Sprites text_2021": "# Текст\n\nТекст можна розмістити будь-де на екрані за допомогою команди `text`.  **Прочитай документацію, клацнувши на блок на панелі інструментів**, щоб дізнатися, як змінювати розмір і колір тексту.\n\n# Завдання\n\n-   Зміни відображуваний текст у наданому коді.\n-   Додай другий блок `text`, щоб писати в іншій частині екрана.",
        "CSD U3 Sprites text_2022": "# Текст\n\nТекст можна розмістити будь-де на екрані за допомогою команди `text`.  **Прочитай документацію, клацнувши на блок на панелі інструментів**, щоб дізнатися, як змінювати розмір і колір тексту.\n\n# Завдання\n\n-   Зміни відображуваний текст у наданому коді.\n-   Додай другий блок `text`, щоб писати в іншій частині екрана.",
        "CSD U3 Test parameter FR": "Такі блоки, як `rect` та `velocityX` мають параметри, які дозволяють тобі надати конкретну інформацію про те, що вони можуть робити.  Обери функцію зі своєї програми, яку можна покращити за допомогою параметра, і поясни, як саме.",
        "CSD U3 Test parameter FR_2021": "Такі блоки, як `rect` та `velocityX` мають параметри, які дозволяють тобі надати конкретну інформацію про те, що вони можуть робити.  Обери функцію зі своєї програми, яку можна покращити за допомогою параметра, і поясни, як саме.",
        "CSD U3 UP_ARROW_2018": "# Переміщення спрайтів\n\nМожна змінити положення свого спрайту при натисненні клавіш так само, як ми змінювали його анімацію.\n\n# Завдання\n\n-   Додай оператор `if` у свій цикл малювання.\n-   Перевір, чи була натиснута клавіша зі стрілкою вниз.\n-   Додай код всередину умови, щоб перемістити спрайт праворуч, якщо стрілка вправо спрямована вниз.\n\n_Чи потрібно змінити властивості X або Y спрайту, щоб правильно його перемістити ?_",
        "CSD U3 UP_ARROW_2018_2019": "# Переміщення спрайтів\n\nМожна змінити положення свого спрайту при натисненні клавіш так само, як ми змінювали його анімацію.\n\n# Завдання\n\n-   Додай оператор `if` у свій цикл малювання.\n-   Перевір, чи була натиснута клавіша зі стрілкою вниз.\n-   Додай код всередину умови, щоб перемістити спрайт праворуч, якщо стрілка вправо спрямована вниз.\n\n_Чи потрібно змінити властивості X або Y спрайту, щоб правильно його перемістити ?_",
        "CSD U3 UP_ARROW_2021": "# Переміщення спрайтів\n\nМожна змінити положення свого спрайту при натисненні клавіш так само, як ми змінювали його анімацію.\n\n# Завдання\n\n-   Додай оператор `if` у свій цикл малювання.\n-   Перевір, чи була натиснута клавіша зі стрілкою вниз.\n-   Додай код всередину умови, щоб перемістити спрайт праворуч, якщо стрілка вправо спрямована вниз.\n\n_Чи потрібно змінити властивості X або Y спрайту, щоб правильно його перемістити ?_",
        "CSD U3 UP_ARROW_2022": "# Переміщення спрайтів\n\nМожна змінити положення свого спрайту при натисненні клавіш так само, як ми змінювали його анімацію.\n\n# Завдання\n\n-   Додай оператор `if` у свій цикл малювання.\n-   Перевір, чи була натиснута клавіша зі стрілкою вниз.\n-   Додай код всередину умови, щоб перемістити спрайт праворуч, якщо стрілка вправо спрямована вниз.\n\n_Чи потрібно змінити властивості X або Y спрайту, щоб правильно його перемістити ?_",
        "CSD U3 Variables Challenge_2021": "# Завдання: оновлення змінних\n\nДосі ми присвоювали значення змінній лише один раз, але чи знаєш ти, що змінну можна оновлювати під час виконання програми?  Переглянь приклад програми, який ми надали, запусти її кілька разів, щоб зрозуміти, як вона працює, а потім спробуй змінити програму так, щоб вона намалювала одне із наведених нижче зображень.\n\n\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\" style=\"width:150px; border: 1px solid grey; margin:20px;\">\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\" style=\"width:150px; border: 1px solid grey; margin:20px;\">\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\" style=\"width:150px; border: 1px solid grey; margin:20px;\">",
        "CSD U3 Variables Challenge_2022": "# Завдання: оновлення змінних\n\nДосі ми присвоювали значення змінній лише один раз, але чи знаєш ти, що змінну можна оновлювати під час виконання програми?  Переглянь приклад програми, який ми надали, запусти її кілька разів, щоб зрозуміти, як вона працює, а потім спробуй змінити програму так, щоб вона намалювала одне із наведених нижче зображень.\n\n\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\" style=\"width:150px; border: 1px solid grey; margin:20px;\">\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\" style=\"width:150px; border: 1px solid grey; margin:20px;\">\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\" style=\"width:150px; border: 1px solid grey; margin:20px;\">",
        "CSD U3 Variables Draw Challenge_2021": "# Завдання: намалюй зображення\n\nВикористовуючи змінні, намалюй ображення, де багато елементів залежать від загальної змінної розміру або розташування. Наприклад, намалюй обличчя зі змінними, що контролюють розмір та/або розташування очей, вух і ніздрів. Коли завершиш малюнок, спробуй змінити значення змінних, щоб упевнитися, що все зображення змінюється разом з ними.\n",
        "CSD U3 Variables Draw Challenge_2022": "# Завдання: намалюй зображення\n\nВикористовуючи змінні, намалюй ображення, де багато елементів залежать від загальної змінної розміру або розташування. Наприклад, намалюй обличчя зі змінними, що контролюють розмір та/або розташування очей, вух і ніздрів. Коли завершиш малюнок, спробуй змінити значення змінних, щоб упевнитися, що все зображення змінюється разом з ними.\n",
        "CSD U3 Variables Draw Poppy": "# Багаторазове використання змінної\n\nУ цій програмі є лише одна змінна під назвою `petalSize`, але ми використовуємо її 8 разів. Це спрощує одночасне внесення змін у  малювання нашого зображення.\n\n# Завдання\n\n-   Зміни число, вказане у`petalSize`, щоб червоні пелюстки торкалися одна одної.\n-   Спробуй знайти найбільш доцільний розмір. Порівняй свою відповідь з відповідями однокласників.",
        "CSD U3 Variables Draw Poppy_2018": "# Багаторазове використання змінної\n\nУ цій програмі є лише одна змінна під назвою `petalSize`, але ми використовуємо її 8 разів. Це спрощує одночасне внесення змін у  малювання нашого зображення.\n\n# Завдання\n\n-   Зміни число, вказане у`petalSize`, щоб червоні пелюстки торкалися одна одної.\n-   Спробуй знайти найбільш доцільний розмір. Порівняй свою відповідь з відповідями однокласників.",
        "CSD U3 Variables Draw Poppy_2019": "# Багаторазове використання змінної\n\nУ цій програмі є лише одна змінна під назвою `petalSize`, але ми використовуємо її 8 разів. Це спрощує одночасне внесення змін у  малювання нашого зображення.\n\n# Завдання\n\n-   Зміни число, вказане у`petalSize`, щоб червоні пелюстки торкалися одна одної.\n-   Спробуй знайти найбільш доцільний розмір. Порівняй свою відповідь з відповідями однокласників.",
        "CSD U3 Variables Draw Poppy_2021": "# Багаторазове використання змінної\n\nУ цій програмі є лише одна змінна під назвою `petalSize`, але ми використовуємо її 8 разів. Це спрощує одночасне внесення змін у  малювання нашого зображення.\n\n# Завдання\n\n-   Зміни число, вказане у`petalSize`, щоб червоні пелюстки торкалися одна одної.\n-   Спробуй знайти найбільш доцільний розмір. Порівняй свою відповідь з відповідями однокласників.",
        "CSD U3 Variables Draw Poppy_2022": "# Багаторазове використання змінної\n\nУ цій програмі є лише одна змінна під назвою `petalSize`, але ми використовуємо її 8 разів. Це спрощує одночасне внесення змін у  малювання нашого зображення.\n\n# Завдання\n\n-   Зміни число, вказане у`petalSize`, щоб червоні пелюстки торкалися одна одної.\n-   Спробуй знайти найбільш доцільний розмір. Порівняй свою відповідь з відповідями однокласників.",
        "CSD U3 Variables Predict Where XY Embed": "# Прогнозування\n\nУ якому куті екрана буде намальовано коло?\n\n_Підказка: Клацни прапорець \"Показати сітку\"  щоб отримати допомогу з координатами._",
        "CSD U3 Variables Predict Where XY Embed_2018": "# Прогнозування\n\nУ якому куті екрана буде намальовано коло?\n\n_Підказка: Клацни прапорець \"Показати сітку\"  щоб отримати допомогу з координатами._",
        "CSD U3 Variables Predict Where XY Embed_2019": "# Прогнозування\n\nУ якому куті екрана буде намальовано коло?\n\n_Підказка: Клацни прапорець \"Показати сітку\"  щоб отримати допомогу з координатами._",
        "CSD U3 Variables Predict Where XY Embed_2021": "# Прогнозування\n\nУ якому куті екрана буде намальовано коло?\n\n_Підказка: Клацни прапорець \"Показати сітку\"  щоб отримати допомогу з координатами._",
        "CSD U3 Variables Predict Where XY Embed_2022": "# Прогнозування\n\nУ якому куті екрана буде намальовано коло?\n\n_Підказка: Клацни прапорець \"Показати сітку\"  щоб отримати допомогу з координатами._",
        "CSD U3 Variables String Challenge_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary>\n<strong>Які кольори я можу використовувати?</strong>\n</summary>\n\nПовний список можливих кольорів, які можна використовувати, можна знайти за посиланням <a href=\"https://www.w3schools.com/cssref/css_colors.asp\" target=\"_new\">W3Schools - CSS Colors</a>.\n</details>\n</div>\n\n# Виклик: рядкові змінні\n\nДосі ми присвоювали змінній лише числові значення, але чи знаєш ти, що змінній можна присвоювати рядкові значення?  Переглянь приклад програми, який ми надали, а потім зміни його, щоб створити нові зображення з різними кольорами.\n",
        "CSD U3 Variables String Challenge_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary>\n<strong>Які кольори я можу використовувати?</strong>\n</summary>\n\nПовний список можливих кольорів, які можна використовувати, можна знайти за посиланням <a href=\"https://www.w3schools.com/cssref/css_colors.asp\" target=\"_new\">W3Schools - CSS Colors</a>.\n</details>\n</div>\n\n# Виклик: рядкові змінні\n\nДосі ми присвоювали змінній лише числові значення, але чи знаєш ти, що змінній можна присвоювати рядкові значення?  Переглянь приклад програми, який ми надали, а потім зміни його, щоб створити нові зображення з різними кольорами.\n",
        "CSD U3 Variables assessment_2021": "<img src=\"https://images.code.org/ac772ebf1fe670e3792a898e387b9e65-image-1589486509676.png\" style=\"float:right;height:150px\">\n\n# Використання змінних\n\nНаразі програма малює обличчя, але очі мають різні розміри.  Зміни програму так, щоб вона використовувала змінну для розміру обох очей, і запусти код, щоб переконатися, що обидва ока намальовані однакового розміру.\n\n# Завдання\n\n-   **Запусти програму**, щоб побачити, як вона працює.\n-   **Зміни програму** для використання змінної `eyeSize`.\n-   **Запусти програму** з різними значеннями параметра `eyeSize` і обери розмір, який тобі подобається найбільше.",
        "CSD U3 Variables assessment_2022": "<img src=\"https://images.code.org/ac772ebf1fe670e3792a898e387b9e65-image-1589486509676.png\" style=\"float:right;height:150px\">\n\n# Використання змінних\n\nНаразі програма малює обличчя, але очі мають різні розміри.  Зміни програму так, щоб вона використовувала змінну для розміру обох очей, і запусти код, щоб переконатися, що обидва ока намальовані однакового розміру.\n\n# Завдання\n\n-   **Запусти програму**, щоб побачити, як вона працює.\n-   **Зміни програму** для використання змінної `eyeSize`.\n-   **Запусти програму** з різними значеннями параметра `eyeSize` і обери розмір, який тобі подобається найбільше.",
        "CSD U3 Variables change circle size_2021": "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01 AM.png\" style=\"float:right; height:150px\">\n\n# Налагодження: використання змінних\n\nВ цій програмі використовується змінна `circleSize` для керування шириною та висотою кола.  Якщо зробити коло достатньо великим, воно заповнить весь екран, як на малюнку праворуч.\n\n# Завдання\n\n* Зміни значення параметра `circleSize` так, щоб коло заповнило весь екран.",
        "CSD U3 Variables change circle size_2022": "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01 AM.png\" style=\"float:right; height:150px\">\n\n# Налагодження: використання змінних\n\nВ цій програмі використовується змінна `circleSize` для керування шириною та висотою кола.  Якщо зробити коло достатньо великим, воно заповнить весь екран, як на малюнку праворуч.\n\n# Завдання\n\n* Зміни значення параметра `circleSize` так, щоб коло заповнило весь екран.",
        "CSD U3 Variables forbidden names_2021": "# Налагодження: неправильне іменування\n\nЗмінна не може бути використана через неправильне ім'я. Виправ ім'я, щоб ви могли запустити програму!\n\n::: details [*Підказка: клацни на стрілку для швидкого ознайомлення з правилами.*]\n* Імена змінних не можуть містити пробілів.\n* Імена змінних не можуть починатися з числа.\n* Вживання великих літер та спосіб написання повинні бути однаковими.\n:::\n",
        "CSD U3 Variables forbidden names_2022": "# Налагодження: неправильне іменування\n\nЗмінна не може бути використана через неправильне ім'я. Виправ ім'я, щоб ви могли запустити програму!\n\n::: details [*Підказка: клацни на стрілку для швидкого ознайомлення з правилами.*]\n* Імена змінних не можуть містити пробілів.\n* Імена змінних не можуть починатися з числа.\n* Вживання великих літер та спосіб написання повинні бути однаковими.\n:::\n",
        "CSD U3 Variables names_2021": "<img src=\"https://images.code.org/9acea1199be35dc50df699f0cfe00994-image-1566926202226.PNG\" style=\"float:right; height:120px\">\n\n#  Налагодження: імена змінних\n\nЩось не так з програмою нижче, вона не створює зображення праворуч. Зможеш це виправити?\n\n::: details [*Підказка: клацни на стрілку для швидкого ознайомлення з правилами.*]\n* Імена змінних не можуть містити пробілів.\n* Імена змінних не можуть починатися з числа.\n* Вживання великих літер та спосіб написання повинні бути однаковими.\n:::\n",
        "CSD U3 Variables names_2022": "<img src=\"https://images.code.org/9acea1199be35dc50df699f0cfe00994-image-1566926202226.PNG\" style=\"float:right; height:120px\">\n\n#  Налагодження: імена змінних\n\nЩось не так з програмою нижче, вона не створює зображення праворуч. Зможеш це виправити?\n\n::: details [*Підказка: клацни на стрілку для швидкого ознайомлення з правилами.*]\n* Імена змінних не можуть містити пробілів.\n* Імена змінних не можуть починатися з числа.\n* Вживання великих літер та спосіб написання повинні бути однаковими.\n:::\n",
        "CSD U3 Variables naming rules v2_2021": "<img style=\"float: right\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38 AM.png\">\n\n# Налагодження: іменування змінних\n\nЦя програма містить численні помилки, спричинені невдалими назвами змінних.  Ці помилки не дозволяють переглядати програму у блочному режимі, тому код поданий у вигляді тексту. Нижче наведено кілька правил для іменування змінних. Натисни **\"Допомога та підказки \"** вище, щоб прочитати більше.\n\n-   У назвах змінних не повинно бути пробілів.\n-   Назви не можуть починатися з цифри.\n-   Вживання великих літер та спосіб написання повинні бути однаковими.\n\n# Завдання\n\n-   Знайди правило, яке порушується у кожній назві змінної.\n-   **Виправ помилки, вибравши нові назви, які відповідають наведеним вище правилам.**\n\nЯкщо твоя програма працює належним чином, вона повинна намалювати зображення праворуч. Також повинна з'явитися можливість перемикнутися назад у режим блоків.",
        "CSD U3 Variables naming rules v2_2022": "<img style=\"float: right\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38 AM.png\">\n\n# Налагодження: іменування змінних\n\nЦя програма містить численні помилки, спричинені невдалими назвами змінних.  Ці помилки не дозволяють переглядати програму у блочному режимі, тому код поданий у вигляді тексту. Нижче наведено кілька правил для іменування змінних. Натисни **\"Допомога та підказки \"** вище, щоб прочитати більше.\n\n-   У назвах змінних не повинно бути пробілів.\n-   Назви не можуть починатися з цифри.\n-   Вживання великих літер та спосіб написання повинні бути однаковими.\n\n# Завдання\n\n-   Знайди правило, яке порушується у кожній назві змінної.\n-   **Виправ помилки, вибравши нові назви, які відповідають наведеним вище правилам.**\n\nЯкщо твоя програма працює належним чином, вона повинна намалювати зображення праворуч. Також повинна з'явитися можливість перемикнутися назад у режим блоків.",
        "CSD U3 Variables random reassign_2021": "# Зміна значень змінних\n\n<img src=\"https://images.code.org/d6ba52ebdc60eabdd2a76e5d9f9971ac-image-1566250367449.gif\" style=\"float:right; width:150px;\">\n\nЦі дві квітки використовують одну змінну для зберігання розміру пелюсток, але значення, що зберігається у змінній, змінюється в середині програми.\n\n# Завдання\n\n-   Запусти програму кілька разів, щоб побачити, як вона працює.\n-   Обговори код з партнером.\n-   Зміни програму так, щоб квіти мали випадкові розміри пелюсток, як на зображенні.",
        "CSD U3 Variables random reassign_2022": "# Зміна значень змінних\n\n<img src=\"https://images.code.org/d6ba52ebdc60eabdd2a76e5d9f9971ac-image-1566250367449.gif\" style=\"float:right; width:150px;\">\n\nЦі дві квітки використовують одну змінну для зберігання розміру пелюсток, але значення, що зберігається у змінній, змінюється в середині програми.\n\n# Завдання\n\n-   Запусти програму кілька разів, щоб побачити, як вона працює.\n-   Обговори код з партнером.\n-   Зміни програму так, щоб квіти мали випадкові розміри пелюсток, як на зображенні.",
        "CSD U3 Variables random with assignment_2021": "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\" style=\"float:right;height:150px\">\n\n# Змінні та випадкові числа\n\nЗмінним також можна присвоювати випадкові значення. Це дозволить зберегти це випадкове значення, щоб використати його у програмі скільки завгодно разів.\n\n# Завдання\n\n-   Признач випадкове число змінній `eyeSize`, щоб очі автоматично змінювали розмір після кожного запуску програми.  Пам'ятай, що ліве і праве око завжди повинні бути однакові!\n\n<details><summary>Показати як...</summary>\n\n`var eyeSize = randomNumber(10,50);`\n\n</details>",
        "CSD U3 Variables random with assignment_2022": "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\" style=\"float:right;height:150px\">\n\n# Змінні та випадкові числа\n\nЗмінним також можна присвоювати випадкові значення. Це дозволить зберегти це випадкове значення, щоб використати його у програмі скільки завгодно разів.\n\n# Завдання\n\n-   Признач випадкове число змінній `eyeSize`, щоб очі автоматично змінювали розмір після кожного запуску програми.  Пам'ятай, що ліве і праве око завжди повинні бути однакові!\n\n<details><summary>Показати як...</summary>\n\n`var eyeSize = randomNumber(10,50);`\n\n</details>",
        "CSD U3 Variables unused_2021": "# Налагодження: невикористані змінні\n\nУ наведеному нижче коді створені змінні, але жодна з них не використовується. Спробуй знайти місця, де вони можуть бути використані.\n",
        "CSD U3 Variables unused_2022": "# Налагодження: невикористані змінні\n\nУ наведеному нижче коді створені змінні, але жодна з них не використовується. Спробуй знайти місця, де вони можуть бути використані.\n",
        "CSD U3 Watcher Debug_2021": "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Налагодження: Спостереження за шаблоном лічильника\n\nЦя програма повинна переміщати мотоцикл з лівого нижнього кута у правий верхній, як на зображенні праворуч. Однак мотоцикл рухається за межами екрана занадто швидко, щоб зрозуміти, що відбувається не так.\n\n# Завдання\n\n* Знайди `cycle.x` в області Стеження.\n* Додай спостерігач для `cycle.y`.\n* Запусти програму, щоб побачити, що відбувається з властивостями та чому зникає мотоцикл..\n* Налагодь код так, щоб програма працювала, як показано на зображенні праворуч.\n",
        "CSD U3 Watcher Debug_2022": "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Налагодження: Спостереження за шаблоном лічильника\n\nЦя програма повинна переміщати мотоцикл з лівого нижнього кута у правий верхній, як на зображенні праворуч. Однак мотоцикл рухається за межами екрана занадто швидко, щоб зрозуміти, що відбувається не так.\n\n# Завдання\n\n* Знайди `cycle.x` в області Стеження.\n* Додай спостерігач для `cycle.y`.\n* Запусти програму, щоб побачити, що відбувається з властивостями та чому зникає мотоцикл..\n* Налагодь код так, щоб програма працювала, як показано на зображенні праворуч.\n",
        "CSD U3 Watcher Predict_2021": "<img src=\"https://images.code.org/c99222106238ae67ca38801ba986f61a-image-1588351042690.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Поворот і обертання\n\nШаблон лічильника у властивості повороту спрайта може змусити його обертатися.\n\n# Завдання\n\n* Використовуй шаблон лічильника з властивістю обертання спрайта панорами, щоб змусити його обертатися, як на зображенні праворуч.\n",
        "CSD U3 Watcher Predict_2022": "<img src=\"https://images.code.org/c99222106238ae67ca38801ba986f61a-image-1588351042690.gif\" style=\"float: right; margin-left: 20px;\">\n\n# Поворот і обертання\n\nШаблон лічильника у властивості повороту спрайта може змусити його обертатися.\n\n# Завдання\n\n* Використовуй шаблон лічильника з властивістю обертання спрайта панорами, щоб змусити його обертатися, як на зображенні праворуч.\n",
        "CSD U3 abstraction accelerateX_2021": "# Швидкість і шаблон лічильника\n\nЦя програма вже змушує автомобіль рухатися по екрану, але дуже повільно.  Використовуючи властивість `sprite.velocityX` із шаблоном лічильника, можна змінювати швидкість спрайта під час виконання програми. \n\n# Завдання\n\n-   Використовуй шаблон лічильника з властивістю спрайта velocityX , щоб змусити машину прискоритися. ( [Де саме](#triggercallout=code_triggered) )",
        "CSD U3 abstraction accelerateX_2022": "# Швидкість і шаблон лічильника\n\nЦя програма вже змушує автомобіль рухатися по екрану, але дуже повільно.  Використовуючи властивість `sprite.velocityX` із шаблоном лічильника, можна змінювати швидкість спрайта під час виконання програми. \n\n# Завдання\n\n-   Використовуй шаблон лічильника з властивістю спрайта velocityX , щоб змусити машину прискоритися. ( [Де саме](#triggercallout=code_triggered) )",
        "CSD U3 abstraction accelerateY up_2021": "# Підіймання бульбашки\n\nЦя програма змушує бульбашку підійматися вгору по воді. Чи можеш ти зробити так, щоб вона підіймалася швидше?\n\n# Завдання\n\n* Використовуй шаблон лічильника і швидкість спрайта по осі Y, щоб змусити бульбашку рухатися вгору швидше.\n",
        "CSD U3 abstraction accelerateY up_2022": "# Підіймання бульбашки\n\nЦя програма змушує бульбашку підійматися вгору по воді. Чи можеш ти зробити так, щоб вона підіймалася швидше?\n\n# Завдання\n\n* Використовуй шаблон лічильника і швидкість спрайта по осі Y, щоб змусити бульбашку рухатися вгору швидше.\n",
        "CSD U3 abstraction accelerateY_2021": "# Падіння каменя\n\nКамінь повинен прискорюватися, коли падає по екрану.\n\n# Завдання\n\n-   Використовуй шаблон лічильника зі швидкістю спрайта по Y , щоб змусити камінь прискорюватися під час падіння.  ( [Де саме](#triggercallout=code_triggered) )",
        "CSD U3 abstraction accelerateY_2022": "# Падіння каменя\n\nКамінь повинен прискорюватися, коли падає по екрану.\n\n# Завдання\n\n-   Використовуй шаблон лічильника зі швидкістю спрайта по Y , щоб змусити камінь прискорюватися під час падіння.  ( [Де саме](#triggercallout=code_triggered) )",
        "CSD U3 abstraction add coin_2021": "<img src=\"https://images.code.org/67d00c99c3715022542ba3ea4a6bd8cf-image-1585726110948.gif\" style=\"float:right\">\n\n# Створюємо власних спрайтів\n\nСпочатку створи спрайти, які ти використовуватимеш у своїй програмі. У нас вже є спрайт гравця, але ти можеш змінити його анімацію.\n\nНам знадобиться гравець (літун), мішень (монета) і дві перешкоди (камені). Ти можеш намалювати їх будь-якими.\n\n# Завдання\n\n-   Перейди на вкладку Анімації та упевнись, що у тебе є потрібні зображення.\n    -   Літун, монета і камінь вже є, але ти можеш використовувати будь-які інші зображення, які тобі подобаються.\n-   Знайди коментар до коду  `//GAME SETUP`.\n-   Створи ще три спрайти: мішень і дві перешкоди.\n-   Встанови для кожного спрайта обрану анімацію.\n-   Масштабуй кожен зі спрайтів до потрібного розміру.\n-   Розмісти їх там, де ти хочеш, щоб вони були на екрані (або поза ним).\n    -   У цій грі перешкоди та монети були розміщені випадковим чином, але тобі поки що не потрібно цього робити.\n-   Встанови початкові швидкості перешкод. Використовуй швидкість Х для руху вліво та вправо, або швидкість Y для руху вгору та вниз.\n-   Протестуй програму. Гравець і мішень повинні бути на екрані, а перешкоди повинні починати рух за межами екрана і рухатися по екрану зліва направо і зверху вниз.",
        "CSD U3 abstraction add coin_2022": "<img src=\"https://images.code.org/67d00c99c3715022542ba3ea4a6bd8cf-image-1585726110948.gif\" style=\"float:right\">\n\n# Створюємо власних спрайтів\n\nСпочатку створи спрайти, які ти використовуватимеш у своїй програмі. У нас вже є спрайт гравця, але ти можеш змінити його анімацію.\n\nНам знадобиться гравець (літун), мішень (монета) і дві перешкоди (камені). Ти можеш намалювати їх будь-якими.\n\n# Завдання\n\n-   Перейди на вкладку Анімації та упевнись, що у тебе є потрібні зображення.\n    -   Літун, монета і камінь вже є, але ти можеш використовувати будь-які інші зображення, які тобі подобаються.\n-   Знайди коментар до коду  `//GAME SETUP`.\n-   Створи ще три спрайти: мішень і дві перешкоди.\n-   Встанови для кожного спрайта обрану анімацію.\n-   Масштабуй кожен зі спрайтів до потрібного розміру.\n-   Розмісти їх там, де ти хочеш, щоб вони були на екрані (або поза ним).\n    -   У цій грі перешкоди та монети були розміщені випадковим чином, але тобі поки що не потрібно цього робити.\n-   Встанови початкові швидкості перешкод. Використовуй швидкість Х для руху вліво та вправо, або швидкість Y для руху вгору та вниз.\n-   Протестуй програму. Гравець і мішень повинні бути на екрані, а перешкоди повинні починати рух за межами екрана і рухатися по екрану зліва направо і зверху вниз.",
        "CSD U3 abstraction decelerateX_2021": "# Уповільнення\n\nАвтомобіль заїде у воду! Тобі потрібно буде використати шаблон лічильника, щоб загальмувати його.\n\n# Завдання\n\n-   Використовуй блок `sprite.velocityX` з шаблоном лічильника, щоб сповільнити автомобіль на 0.25, коли він рухається по екрану.  \n-   Обговори з партнером: Що, на вашу думку, станеться, коли машина нарешті зупиниться?",
        "CSD U3 abstraction decelerateX_2022": "# Уповільнення\n\nАвтомобіль заїде у воду! Тобі потрібно буде використати шаблон лічильника, щоб загальмувати його.\n\n# Завдання\n\n-   Використовуй блок `sprite.velocityX` з шаблоном лічильника, щоб сповільнити автомобіль на 0.25, коли він рухається по екрану.  \n-   Обговори з партнером: Що, на вашу думку, станеться, коли машина нарешті зупиниться?",
        "CSD U3 abstraction decelerateY_2021": "# Схоже на гравітацію\n\nКамінь підкидають у повітря, але він ніколи не падає назад.\n\n# Завдання\n\n-   Використовуй код, яким ми вже працювали, щоб змусити камінь сповільнитися, а потім впасти.\n-   Спробуй використати різні числа в шаблоні лічильника, щоб побачити, який результат тобі подобається найбільше.",
        "CSD U3 abstraction decelerateY_2022": "# Схоже на гравітацію\n\nКамінь підкидають у повітря, але він ніколи не падає назад.\n\n# Завдання\n\n-   Використовуй код, яким ми вже працювали, щоб змусити камінь сповільнитися, а потім впасти.\n-   Спробуй використати різні числа в шаблоні лічильника, щоб побачити, який результат тобі подобається найбільше.",
        "CSD U3 abstraction jump_2021": "# Керування гравцем\n\nСтрілка вгору має змусити гравця підстрибнути.  Стрибки складаються з трьох частин: стрибнути вгору, коли натиснута клавіша, спуститися вниз, коли персонаж достатньо високо, і не провалитися крізь землю!\n\n# Завдання\n\n-   Знайди коментар до коду //СТРИБНУТИ\\` і прочитай три коментарі в цьому розмірі.\n-   Додай умовний оператор, який перевіряє, чи натиснув гравець клавішу \"вгору\".\n    -   Якщо  клавіша \"вгору\" натиснута, використовуй властивість швидкістьY, щоб спрайт гравця (жаба) почав рухатися вгору.\n    -   Протестуй свій код, щоб побачити, чи спрайт підійматися вгору, коли ти натискаєш стрілку вгору.\n-   Додай умову, яка використовує властивість y спрайта, щоб перевірити, чи він достатньо високо.\n    -   Якщо спрайт перебуває досить високо на екрані, почни рух спрайта назад вниз.\n    -   Протестуй свій  код, щоб побачити, чи буде спрайт повертатися назад, коли він досягає максимальної висоти стрибка.\n-   Додай умовний оператор, який перевіряє, чи перебуває спрайт достатньо низько на екрані, щоб опинитися на землі.\n    -   Якщо він перебуває достатньо низько, зупини спрайт.\n    -   Перевір, чи не проходить спрайт крізь землю в кінці стрибка.",
        "CSD U3 abstraction jump_2022": "# Керування гравцем\n\nСтрілка вгору має змусити гравця підстрибнути.  Стрибки складаються з трьох частин: стрибнути вгору, коли натиснута клавіша, спуститися вниз, коли персонаж достатньо високо, і не провалитися крізь землю!\n\n# Завдання\n\n-   Знайди коментар до коду //СТРИБНУТИ\\` і прочитай три коментарі в цьому розмірі.\n-   Додай умовний оператор, який перевіряє, чи натиснув гравець клавішу \"вгору\".\n    -   Якщо  клавіша \"вгору\" натиснута, використовуй властивість швидкістьY, щоб спрайт гравця (жаба) почав рухатися вгору.\n    -   Протестуй свій код, щоб побачити, чи спрайт підійматися вгору, коли ти натискаєш стрілку вгору.\n-   Додай умову, яка використовує властивість y спрайта, щоб перевірити, чи він достатньо високо.\n    -   Якщо спрайт перебуває досить високо на екрані, почни рух спрайта назад вниз.\n    -   Протестуй свій  код, щоб побачити, чи буде спрайт повертатися назад, коли він досягає максимальної висоти стрибка.\n-   Додай умовний оператор, який перевіряє, чи перебуває спрайт достатньо низько на екрані, щоб опинитися на землі.\n    -   Якщо він перебуває достатньо низько, зупини спрайт.\n    -   Перевір, чи не проходить спрайт крізь землю в кінці стрибка.",
        "CSD U3 abstraction jumping_2021": "<img src=\"https://images.code.org/cdddf2fa838574cd428d51a4716b4277-image-1585726786629.gif\" style=\"float:right\">\n\n# Падіння\n\nЯкщо користувач нічого не робить, спрайт гравця повинен впасти.\n\n# Завдання\n\n-   Знайди коментар до коду `// FALLING`.\n-   Використовуй шаблон лічильника, щоб змусити Літуна впасти зі velocityY спрайта гравця.\n-   Протестуй свій код, щоб переконатися, що він працює. Спрайт повинен падати швидше, коли він опускається вниз по екрану.",
        "CSD U3 abstraction jumping_2022": "<img src=\"https://images.code.org/cdddf2fa838574cd428d51a4716b4277-image-1585726786629.gif\" style=\"float:right\">\n\n# Падіння\n\nЯкщо користувач нічого не робить, спрайт гравця повинен впасти.\n\n# Завдання\n\n-   Знайди коментар до коду `// FALLING`.\n-   Використовуй шаблон лічильника, щоб змусити Літуна впасти зі velocityY спрайта гравця.\n-   Протестуй свій код, щоб переконатися, що він працює. Спрайт повинен падати швидше, коли він опускається вниз по екрану.",
        "CSD U3 abstraction left right counter 2_2021": "<img src=\"https://images.code.org/2e264edbb971f8fd66acb4ddf0a5b907-image-1585727616296.gif\" style=\"float:right\">\n\n# Літання ліворуч і праворуч\n\nЛітун також повинен мати можливість літати ліворуч і праворуч.  \n\n# Завдання\n\n-   Знайди коментар до коду `//PLAYER CONTROL`\n-   Додай умову, яка знижує швидкість спрайта за віссю Х, коли натискається стрілка \"вліво\".\n-   Додай умову, яка підвищує швидкість Х спрайта коли натискається стрілка \"вправо\".\n    -   Підказка: Твій код повинен використовувати шаблон лічильника **і** блок `velocityX`.\n-   Протестуй свій код, щоб переконатися, що він працює.",
        "CSD U3 abstraction left right counter 2_2022": "<img src=\"https://images.code.org/2e264edbb971f8fd66acb4ddf0a5b907-image-1585727616296.gif\" style=\"float:right\">\n\n# Літання ліворуч і праворуч\n\nЛітун також повинен мати можливість літати ліворуч і праворуч.  \n\n# Завдання\n\n-   Знайди коментар до коду `//PLAYER CONTROL`\n-   Додай умову, яка знижує швидкість спрайта за віссю Х, коли натискається стрілка \"вліво\".\n-   Додай умову, яка підвищує швидкість Х спрайта коли натискається стрілка \"вправо\".\n    -   Підказка: Твій код повинен використовувати шаблон лічильника **і** блок `velocityX`.\n-   Протестуй свій код, щоб переконатися, що він працює.",
        "CSD U3 abstraction left right counter_2021": "<img src=\"https://images.code.org/0a7336d6b5107c50e304a4e3cb88b912-image-1585727046118.gif\" style=\"float:right\">\n\n# Стрибки\n\nДалі спрайт гравця повинен стрибати, коли користувач натискає стрілку \"вгору\".\n\n# Завдання\n\n-   Знайди коментар до коду  `// PLAYER CONTROLS`\n-   Додай блок умови (блок `if`), який перевіряє, чи натискає користувач стрілку \"вгору\".\n-   Додай код всередині умови, який змінить швидкість спрайта, щоб він рухався вгору, якщо натиснути стрілку \"вгору\".\n-   Перевір свій код, щоб побачити, чи він працює.",
        "CSD U3 abstraction left right counter_2022": "<img src=\"https://images.code.org/0a7336d6b5107c50e304a4e3cb88b912-image-1585727046118.gif\" style=\"float:right\">\n\n# Стрибки\n\nДалі спрайт гравця повинен стрибати, коли користувач натискає стрілку \"вгору\".\n\n# Завдання\n\n-   Знайди коментар до коду  `// PLAYER CONTROLS`\n-   Додай блок умови (блок `if`), який перевіряє, чи натискає користувач стрілку \"вгору\".\n-   Додай код всередині умови, який змінить швидкість спрайта, щоб він рухався вгору, якщо натиснути стрілку \"вгору\".\n-   Перевір свій код, щоб побачити, чи він працює.",
        "CSD U3 abstraction looping_2021": "# Цикли\n\nПерешкода (гриб) і ціль (муха) повинні повернутися назад в праву частину екрана, якщо вони зайшли занадто далеко.\n\n# Завдання\n\n-   Знайди коментар коду, в якому написано // LOOPING\\`.\n-   Додай умовний оператор, який використовує властивість X спрайта перешкоди для перевірки того, чи перемістився він за межі екрана.\n    -   Якщо він перемістився за межі екрана, використовуй його властивість X, щоб повернути його у правий бік екрана.\n    -   Протестуй свій код, щоб побачити, чи запрограмована перешкода циклічно.\n-   Додай умову, яка перевіряє, чи перемістилася ціль за межі екрана.\n    -   Якщо вона перемістилась за межі екрана, використовуй її властивість X, щоб повернути її у правий бік екрана.\n    -   Протестуй свій код, щоб побачити, чи запрограмована ціль циклічно.",
        "CSD U3 abstraction looping_2022": "# Цикли\n\nПерешкода (гриб) і ціль (муха) повинні повернутися назад в праву частину екрана, якщо вони зайшли занадто далеко.\n\n# Завдання\n\n-   Знайди коментар коду, в якому написано // LOOPING\\`.\n-   Додай умовний оператор, який використовує властивість X спрайта перешкоди для перевірки того, чи перемістився він за межі екрана.\n    -   Якщо він перемістився за межі екрана, використовуй його властивість X, щоб повернути його у правий бік екрана.\n    -   Протестуй свій код, щоб побачити, чи запрограмована перешкода циклічно.\n-   Додай умову, яка перевіряє, чи перемістилася ціль за межі екрана.\n    -   Якщо вона перемістилась за межі екрана, використовуй її властивість X, щоб повернути її у правий бік екрана.\n    -   Протестуй свій код, щоб побачити, чи запрограмована ціль циклічно.",
        "CSD U3 abstraction reset coin_2021": "<img src=\"https://images.code.org/f4c78598af1ce2fa3d368bcd9498a0d2-image-1585729468198.gif\" style=\"float: right;\">\n\n# Взаємодія спрайтів\n\nКоли персонаж торкається монети, він повинен почати гру десь на екрані, а перешкоди повинні штовхати гравця по екрану.\n\n# Завдання\n\n-   Знайди коментар до коду `SPRITE INTERACTIONS` і прочитай коментарі у цьому розділі.\n-   Створи умовний оператор, який перевіряє, чи торкається гравець мішені, і переміщує мішень у випадкове місце, якщо це так.\n-   Створи два нових зіткнення, які змусять дві перешкоди штовхати гравця по екрану.\n-   Перевір свій код, щоб переконатися, що він працює.",
        "CSD U3 abstraction reset coin_2022": "<img src=\"https://images.code.org/f4c78598af1ce2fa3d368bcd9498a0d2-image-1585729468198.gif\" style=\"float: right;\">\n\n# Взаємодія спрайтів\n\nКоли персонаж торкається монети, він повинен почати гру десь на екрані, а перешкоди повинні штовхати гравця по екрану.\n\n# Завдання\n\n-   Знайди коментар до коду `SPRITE INTERACTIONS` і прочитай коментарі у цьому розділі.\n-   Створи умовний оператор, який перевіряє, чи торкається гравець мішені, і переміщує мішень у випадкове місце, якщо це так.\n-   Створи два нових зіткнення, які змусять дві перешкоди штовхати гравця по екрану.\n-   Перевір свій код, щоб переконатися, що він працює.",
        "CSD U3 abstraction rotation control_2019": "# Контроль швидкості\n\nМи використали `rotationSpeed` поза циклом малювання, щоб спрайт обертався при запуску програми. Також можна використовувати `rotationSpeed` **всередині** циклу малювання, щоб змінити швидкість спрайту під час гри. Наприклад, спрайт може почати обертатися, коли користувач натискає клавішу пробілу, і він продовжуватиме обертатися, поки йому не буде сказано зупинитися.\n\n# Завдання\n\n-   Поглянь на оператор if всередині циклу малювання, який перевіряє, чи була натиснута клавіша пробілу. ( [Покажи мені де](#triggercallout=code_triggered1) )\n-   Використай блок `rotationSpeed`, щоб колірне коло починало обертатися, коли користувач натискає пробіл.",
        "CSD U3 abstraction rotation control_2021": "# Контроль швидкості\n\nМи використали `rotationSpeed` поза циклом малювання, щоб спрайт обертався при запуску програми. Також можна використовувати `rotationSpeed` **всередині** циклу малювання, щоб змінити швидкість спрайту під час гри. Наприклад, спрайт може почати обертатися, коли користувач натискає клавішу пробілу, і він продовжуватиме обертатися, поки йому не буде сказано зупинитися.\n\n# Завдання\n\n-   Поглянь на оператор if всередині циклу малювання, який перевіряє, чи була натиснута клавіша пробілу. ( [Покажи мені де](#triggercallout=code_triggered1) )\n-   Використай блок `rotationSpeed`, щоб колірне коло починало обертатися, коли користувач натискає пробіл.",
        "CSD U3 abstraction rotation control_2022": "# Контроль швидкості\n\nМи використали `rotationSpeed` поза циклом малювання, щоб спрайт обертався при запуску програми. Також можна використовувати `rotationSpeed` **всередині** циклу малювання, щоб змінити швидкість спрайту під час гри. Наприклад, спрайт може почати обертатися, коли користувач натискає клавішу пробілу, і він продовжуватиме обертатися, поки йому не буде сказано зупинитися.\n\n# Завдання\n\n-   Поглянь на оператор if всередині циклу малювання, який перевіряє, чи була натиснута клавіша пробілу. ( [Покажи мені де](#triggercallout=code_triggered1) )\n-   Використай блок `rotationSpeed`, щоб колірне коло починало обертатися, коли користувач натискає пробіл.",
        "CSD U3 abstraction rotation_2021": "# Швидкість обертання\n\nМожна використати `rotationSpeed`, щоб змусити спрайт обертатися. Якщо ти хочеш, щоб сонце поверталося на два градуси щоразу, коли воно малюється, можеш використати `sun.rotationSpeed = 2` перед циклом малювання, після створення спрайта.\n\n# Завдання\n\nЗроби так, щоб сонце щоразу поверталося на 3 градуси за допомогою блоку `rotationSpeed`. ( [Де саме](#triggercallout=callout1) )",
        "CSD U3 abstraction rotation_2022": "# Швидкість обертання\n\nМожна використати `rotationSpeed`, щоб змусити спрайт обертатися. Якщо ти хочеш, щоб сонце поверталося на два градуси щоразу, коли воно малюється, можеш використати `sun.rotationSpeed = 2` перед циклом малювання, після створення спрайта.\n\n# Завдання\n\nЗроби так, щоб сонце щоразу поверталося на 3 градуси за допомогою блоку `rotationSpeed`. ( [Де саме](#triggercallout=callout1) )",
        "CSD U3 abstraction tumbleweed_2021": "# Створюємо власних спрайтів\n\nДалі треба створити спрайти, які ти використовуватимеш у своїй програмі.  Тобі знадобиться гравець (жаба), мішень (муха) і перешкода (гриб).  Ти можеш намалювати їх якими завгодно.\n\n# Завдання\n\n-   Перейди на вкладку Анімації та упевнись, що у тебе є потрібні зображення.\n-   Жаба, гриб і муха вже є, але ти можеш використовувати будь-які зображення за бажанням.\n-   Знайди коментар до коду `//GAME SETUP`.\n-   Створи три спрайти: гравця, мішень і перешкоду.\n-   Налаштуй для кожного з них анімацію.\n-   Масштабуй кожен з них до потрібного розміру.\n-   Розмісти їх там, де ти хочеш, щоб вони були на екрані (або поза ним).\n-   Встанови початкову швидкість цілі та перешкоди по осі X.\n-   Протестуй свою програму.  Гравець повинен бути на екрані, а мішень і перешкода повинні починати рух за межами екрана і рухатися по екрану справа наліво.\n\n_Підказка: спрайт перешкоди та мішені завжди повинен рухатися з однаковою швидкістю. Потрібно лише один раз задати швидкість для кожного спрайта. Ти можеш зробити це поза циклом малювання._",
        "CSD U3 abstraction tumbleweed_2022": "# Створюємо власних спрайтів\n\nДалі треба створити спрайти, які ти використовуватимеш у своїй програмі.  Тобі знадобиться гравець (жаба), мішень (муха) і перешкода (гриб).  Ти можеш намалювати їх якими завгодно.\n\n# Завдання\n\n-   Перейди на вкладку Анімації та упевнись, що у тебе є потрібні зображення.\n-   Жаба, гриб і муха вже є, але ти можеш використовувати будь-які зображення за бажанням.\n-   Знайди коментар до коду `//GAME SETUP`.\n-   Створи три спрайти: гравця, мішень і перешкоду.\n-   Налаштуй для кожного з них анімацію.\n-   Масштабуй кожен з них до потрібного розміру.\n-   Розмісти їх там, де ти хочеш, щоб вони були на екрані (або поза ним).\n-   Встанови початкову швидкість цілі та перешкоди по осі X.\n-   Протестуй свою програму.  Гравець повинен бути на екрані, а мішень і перешкода повинні починати рух за межами екрана і рухатися по екрану справа наліво.\n\n_Підказка: спрайт перешкоди та мішені завжди повинен рухатися з однаковою швидкістю. Потрібно лише один раз задати швидкість для кожного спрайта. Ти можеш зробити це поза циклом малювання._",
        "CSD U3 abstraction velocityX": "# velocityX\n\nОдин із способів переміщення спрайтів Ігрової Лабораторії – шаблон лічильника. Наприклад, команда `sprite1.x = sprite1.x + 1` переміщує спрайт на 1 піксель у кожному кадрі циклу малювання. Цей шаблон настільки поширений, що спрайти мають властивість velocityX, яка робить це за нас.\n\n# Завдання\n\n-   Перетягни блок `sprite.velocityX` безпосередньо під місце створення спрайту. ( [Покажи мені де](#triggercallout=code_triggered) )\n-   Запиши назву свого спрайту в блок.\n-   Признач властивості `velocityX` значення 1.\n-   Запусти код. Що сталося?\n-   Повторно запусти код, надавши властивості `velocityX` інше значення. Що змінюється?",
        "CSD U3 abstraction velocityX control_2021": "# Плавання праворуч і ліворуч\n\nНаведений нижче код повинен змусити рибку почати рухатися праворуч щойно натискається стрілка вправо, а потім вона повинна постійно плавати туди-сюди. Щоб змусити рибку плавати, слід використовувати умовні оператори та блок `.velocity`.\n\n# Завдання\n\n-   Подивися на три команди умови всередині циклу малювання.\n\n-   Використай блок `sprite.velocityX` всередині кожної команди умови, щоб виконати три такі дії:\n    -   Якщо користувач натискає клавішу зі стрілкою вправо, рибка рухається вправо.\n    -   Якщо рибка опинилася в правій частині екрана, перемістити її ліворуч.\n    -   Якщо рибка опинилася в лівій частині екрана, перемістити її праворуч.\n\n-   Рибка завжди має бути повернута обличчям у тому ж напрямку, в якому вона рухається, тому тобі потрібно буде оновити анімацію рибки на `fishL` або `fishR` залежно від напрямку, в якому вона повернута.",
        "CSD U3 abstraction velocityX control_2022": "# Плавання праворуч і ліворуч\n\nНаведений нижче код повинен змусити рибку почати рухатися праворуч щойно натискається стрілка вправо, а потім вона повинна постійно плавати туди-сюди. Щоб змусити рибку плавати, слід використовувати умовні оператори та блок `.velocity`.\n\n# Завдання\n\n-   Подивися на три команди умови всередині циклу малювання.\n\n-   Використай блок `sprite.velocityX` всередині кожної команди умови, щоб виконати три такі дії:\n    -   Якщо користувач натискає клавішу зі стрілкою вправо, рибка рухається вправо.\n    -   Якщо рибка опинилася в правій частині екрана, перемістити її ліворуч.\n    -   Якщо рибка опинилася в лівій частині екрана, перемістити її праворуч.\n\n-   Рибка завжди має бути повернута обличчям у тому ж напрямку, в якому вона рухається, тому тобі потрібно буде оновити анімацію рибки на `fishL` або `fishR` залежно від напрямку, в якому вона повернута.",
        "CSD U3 abstraction velocityX if-statements predict_2021": "# Зміна швидкості з положенням\n\nОднією з переваг використання блоків швидкості всередині блоків умов (блоків `if`) є те, що спрайт продовжує рухатися навіть після того, як умова перестає бути істинною.  Наприклад, нам потрібно було лише один раз натиснути клавішу, щоб запустити обертання кольорового колеса, і воно продовжувало обертатися вічно. У наведеному нижче коді використовуються команди умови, щоб змусити спрайт риби рухатися у різних напрямках.\n\n# Завдання\n\n-   Подивися на команди умови, які перевіряють позицію спрайта і встановлюють його швидкість.\n-   Обговори з партнером, що, на вашу думку, буде робити код, і напиши свою відповідь нижче.\n-   Коли дасте відповідь, запусти код.",
        "CSD U3 abstraction velocityX if-statements predict_2022": "# Зміна швидкості з положенням\n\nОднією з переваг використання блоків швидкості всередині блоків умов (блоків `if`) є те, що спрайт продовжує рухатися навіть після того, як умова перестає бути істинною.  Наприклад, нам потрібно було лише один раз натиснути клавішу, щоб запустити обертання кольорового колеса, і воно продовжувало обертатися вічно. У наведеному нижче коді використовуються команди умови, щоб змусити спрайт риби рухатися у різних напрямках.\n\n# Завдання\n\n-   Подивися на команди умови, які перевіряють позицію спрайта і встановлюють його швидкість.\n-   Обговори з партнером, що, на вашу думку, буде робити код, і напиши свою відповідь нижче.\n-   Коли дасте відповідь, запусти код.",
        "CSD U3 abstraction velocityX_2018": "# velocityX\n\nОдин із способів переміщення спрайтів Ігрової Лабораторії – шаблон лічильника. Наприклад, команда `sprite1.x = sprite1.x + 1` переміщує спрайт на 1 піксель у кожному кадрі циклу малювання. Цей шаблон настільки поширений, що спрайти мають властивість velocityX, яка робить це за нас.\n\n# Завдання\n\n-   Перетягни блок `sprite.velocityX` безпосередньо під місце створення спрайту. ( [Покажи мені де](#triggercallout=code_triggered) )\n-   Запиши назву свого спрайту в блок.\n-   Признач властивості `velocityX` значення 1.\n-   Запусти код. Що сталося?\n-   Повторно запусти код, надавши властивості `velocityX` інше значення. Що змінюється?",
        "CSD U3 abstraction velocityX_2019": "# velocityX\n\nОдин із способів переміщення спрайтів Ігрової Лабораторії – шаблон лічильника. Наприклад, команда `sprite1.x = sprite1.x + 1` переміщує спрайт на 1 піксель у кожному кадрі циклу малювання. Цей шаблон настільки поширений, що спрайти мають властивість velocityX, яка робить це за нас.\n\n# Завдання\n\n-   Перетягни блок `sprite.velocityX` безпосередньо під місце створення спрайту. ( [Покажи мені де](#triggercallout=code_triggered) )\n-   Запиши назву свого спрайту в блок.\n-   Признач властивості `velocityX` значення 1.\n-   Запусти код. Що сталося?\n-   Повторно запусти код, надавши властивості `velocityX` інше значення. Що змінюється?",
        "CSD U3 abstraction velocityX_2021": "# velocityX\n\nОдин із способів переміщення спрайтів Ігрової Лабораторії – шаблон лічильника. Наприклад, команда `sprite1.x = sprite1.x + 1` переміщує спрайт на 1 піксель у кожному кадрі циклу малювання. Цей шаблон настільки поширений, що спрайти мають властивість velocityX, яка робить це за нас.\n\n# Завдання\n\n-   Перетягни блок `sprite.velocityX` безпосередньо під місце створення спрайту. ( [Покажи мені де](#triggercallout=code_triggered) )\n-   Запиши назву свого спрайту в блок.\n-   Признач властивості `velocityX` значення 1.\n-   Запусти код. Що сталося?\n-   Повторно запусти код, надавши властивості `velocityX` інше значення. Що змінюється?",
        "CSD U3 abstraction velocityX_2022": "# velocityX\n\nОдин із способів переміщення спрайтів Ігрової Лабораторії – шаблон лічильника. Наприклад, команда `sprite1.x = sprite1.x + 1` переміщує спрайт на 1 піксель у кожному кадрі циклу малювання. Цей шаблон настільки поширений, що спрайти мають властивість velocityX, яка робить це за нас.\n\n# Завдання\n\n-   Перетягни блок `sprite.velocityX` безпосередньо під місце створення спрайту. ( [Покажи мені де](#triggercallout=code_triggered) )\n-   Запиши назву свого спрайту в блок.\n-   Признач властивості `velocityX` значення 1.\n-   Запусти код. Що сталося?\n-   Повторно запусти код, надавши властивості `velocityX` інше значення. Що змінюється?",
        "CSD U3 abstraction velocityY": "# Рух вниз\n\nОсь спрайт пір'їни, яка має опуститись по екрану. Якщо `velocityX` змушує спрайт рухатися вправо, чи зможеш знайти блок, який змусить перо рухатися вниз?\n\n# Завдання\n\nЗнайди блок, який змусить спрайт пір'їни опуститися вниз по екрану, і використай його поза циклом малювання. ( [Покажи мені де](#triggercallout=code_triggered) )",
        "CSD U3 abstraction velocityY control_2021": "# Контроль швидкості\n\nУ цій анімації ми допоможемо Флайботу злетіти. Він повинен почати рухатися вгору, коли натискається клавіша пробіл, і повинен продовжувати рухатися вгору навіть після того, як клавіша пробіл буде відпущена.\n\n# Завдання\n\n* Використовуй команду умови всередині циклу малювання для перевірки натискання клавіші пробілу.\n* Використовуй блок `velocityY`, щоб змусити спрайт рухатися вгору, коли користувач натискає клавішу пробіл.\n* Переконайся, що твоя анімація працює так, як задумано.",
        "CSD U3 abstraction velocityY control_2022": "# Контроль швидкості\n\nУ цій анімації ми допоможемо Флайботу злетіти. Він повинен почати рухатися вгору, коли натискається клавіша пробіл, і повинен продовжувати рухатися вгору навіть після того, як клавіша пробіл буде відпущена.\n\n# Завдання\n\n* Використовуй команду умови всередині циклу малювання для перевірки натискання клавіші пробілу.\n* Використовуй блок `velocityY`, щоб змусити спрайт рухатися вгору, коли користувач натискає клавішу пробіл.\n* Переконайся, що твоя анімація працює так, як задумано.",
        "CSD U3 abstraction velocityY_2018": "# Рух вниз\n\nОсь спрайт пір'їни, яка має опуститись по екрану. Якщо `velocityX` змушує спрайт рухатися вправо, чи зможеш знайти блок, який змусить перо рухатися вниз?\n\n# Завдання\n\nЗнайди блок, який змусить спрайт пір'їни опуститися вниз по екрану, і використай його поза циклом малювання. ( [Покажи мені де](#triggercallout=code_triggered) )",
        "CSD U3 abstraction velocityY_2019": "# Рух вниз\n\nОсь спрайт пір'їни, яка має опуститись по екрану. Якщо `velocityX` змушує спрайт рухатися вправо, чи зможеш знайти блок, який змусить перо рухатися вниз?\n\n# Завдання\n\nЗнайди блок, який змусить спрайт пір'їни опуститися вниз по екрану, і використай його поза циклом малювання. ( [Покажи мені де](#triggercallout=code_triggered) )",
        "CSD U3 abstraction velocityY_2021": "# Рух вниз\n\nОсь спрайт пір'їни, яка має опуститись по екрану. Якщо `velocityX` змушує спрайт рухатися вправо, чи зможеш знайти блок, який змусить перо рухатися вниз?\n\n# Завдання\n\nЗнайди блок, який змусить спрайт пір'їни опуститися вниз по екрану, і використай його поза циклом малювання. ( [Покажи мені де](#triggercallout=code_triggered) )",
        "CSD U3 abstraction velocityY_2022": "# Рух вниз\n\nОсь спрайт пір'їни, яка має опуститись по екрану. Якщо `velocityX` змушує спрайт рухатися вправо, чи зможеш знайти блок, який змусить перо рухатися вниз?\n\n# Завдання\n\nЗнайди блок, який змусить спрайт пір'їни опуститися вниз по екрану, і використай його поза циклом малювання. ( [Покажи мені де](#triggercallout=code_triggered) )",
        "CSD U3 challenge face_2021": "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\" style=\"float: right; max-width: 200px; border: 1px solid grey\">\n\n# Завдання: обличчя\n\nНапиши програму, яка використовує блоки `rect`, `ellipse` та `fill` для створення обличчя справа. Використай такі кольори: \"lightblue\", \"red\" і \"lightgreen\".\nЗакінчивши роботу, додай до зображення свої власні елементи.\n",
        "CSD U3 challenge face_2022": "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\" style=\"float: right; max-width: 200px; border: 1px solid grey\">\n\n# Завдання: обличчя\n\nНапиши програму, яка використовує блоки `rect`, `ellipse` та `fill` для створення обличчя справа. Використай такі кольори: \"lightblue\", \"red\" і \"lightgreen\".\nЗакінчивши роботу, додай до зображення свої власні елементи.\n",
        "CSD U3 challenge new shape_2021": "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\" style=\"float: right; max-width: 200px; border: 1px solid grey\">\n\n# Завдання: фігура з фігур\n\nЧи можна намалювати нову фігуру, наприклад, такий трикутник з кіл, використовуючи лише команди `rect` та `ellipse`?\n",
        "CSD U3 challenge new shape_2022": "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\" style=\"float: right; max-width: 200px; border: 1px solid grey\">\n\n# Завдання: фігура з фігур\n\nЧи можна намалювати нову фігуру, наприклад, такий трикутник з кіл, використовуючи лише команди `rect` та `ellipse`?\n",
        "CSD U3 collision detection challenge collider angle_2021": "# Кутове зіткнення\n\nНахили колайдер так, щоб він відповідав качалці.\n\n## .setCollider() з кількома параметрами\n\n`.setCollider()` може містити більше параметрів, ніж просто форма. Також можна задати параметри для визначення зсуву по осях X, Y, ширини та висоти, а також кута. Переглянь [документацію](https://studio.code.org/docs/gamelab/setCollider/) для прикладу.\n\n# Завдання\n\n* Використай `.setCollider()` з 6 параметрами, щоб встановити для качалки відповідний колайдер.\n\n**Підказка:** Наведи курсор на блок `setCollider()` на панелі інструментів, щоб побачити приклад, як це зробити.\n",
        "CSD U3 collision detection challenge collider angle_2022": "# Кутове зіткнення\n\nНахили колайдер так, щоб він відповідав качалці.\n\n## .setCollider() з кількома параметрами\n\n`.setCollider()` може містити більше параметрів, ніж просто форма. Також можна задати параметри для визначення зсуву по осях X, Y, ширини та висоти, а також кута. Переглянь [документацію](https://studio.code.org/docs/gamelab/setCollider/) для прикладу.\n\n# Завдання\n\n* Використай `.setCollider()` з 6 параметрами, щоб встановити для качалки відповідний колайдер.\n\n**Підказка:** Наведи курсор на блок `setCollider()` на панелі інструментів, щоб побачити приклад, як це зробити.\n",
        "CSD U3 collision detection challenge collider circle_2021": "# Кругове зіткнення\n\nЦі монети повинні зупинятися після дотику, але їх колайдери мають неправильну форму. Зміни коллайдер кожної монети на коло.\n\n# Завдання\n\n* Використай `.setCollider()`, щоб змінити колайдер кожного спрайта на коло.\n\n![](https://images.code.org/a42ba3dcc666047d26145a7832493f70-image-1589906306820.2020-05-19 12_37_36.gif)",
        "CSD U3 collision detection challenge collider circle_2022": "# Кругове зіткнення\n\nЦі монети повинні зупинятися після дотику, але їх колайдери мають неправильну форму. Зміни коллайдер кожної монети на коло.\n\n# Завдання\n\n* Використай `.setCollider()`, щоб змінити колайдер кожного спрайта на коло.\n\n![](https://images.code.org/a42ba3dcc666047d26145a7832493f70-image-1589906306820.2020-05-19 12_37_36.gif)",
        "CSD U3 collision detection practice debugistouching_2021": "# Налагодження: торкання\n\nСпрайт кролика повинен змінювати анімацію, коли він торкається спрайта сонця. З'ясуй, чому кролик не реагує на зіткнення.\n\n# Завдання\n- Зміни код так, щоб зіткнення виявлялося всередині циклу малювання.",
        "CSD U3 collision detection practice debugistouching_2022": "# Налагодження: торкання\n\nСпрайт кролика повинен змінювати анімацію, коли він торкається спрайта сонця. З'ясуй, чому кролик не реагує на зіткнення.\n\n# Завдання\n- Зміни код так, щоб зіткнення виявлялося всередині циклу малювання.",
        "CSD U3 collision detection practice debugpoints_2021": "# Налагодження: додавання балів за зіткнення\n\nВ іграх часто нараховуються бали, коли два спрайти торкаються один одного. Ця програма робить те саме, але зверни увагу, що відбувається з балами, коли спрайти продовжують торкатися один одного. Твоє завдання - зробити так, щоб зараховувався лише один бал. Існує кілька способів зробити це, але найпростіший - перемістити один або обидва спрайти в інше місце саме тоді, коли рахунок збільшується.\n\n# Завдання\n- Переглянь і запусти код, щоб зрозуміти, як він працює і що йде не так.\n- Визнач рядок коду, який збільшує кількість балів.\n- Додай додатковий рядок коду, щоб принаймні один спрайт перемістився на нове (випадкове) місце.\n",
        "CSD U3 collision detection practice debugpoints_2022": "# Налагодження: додавання балів за зіткнення\n\nВ іграх часто нараховуються бали, коли два спрайти торкаються один одного. Ця програма робить те саме, але зверни увагу, що відбувається з балами, коли спрайти продовжують торкатися один одного. Твоє завдання - зробити так, щоб зараховувався лише один бал. Існує кілька способів зробити це, але найпростіший - перемістити один або обидва спрайти в інше місце саме тоді, коли рахунок збільшується.\n\n# Завдання\n- Переглянь і запусти код, щоб зрозуміти, як він працює і що йде не так.\n- Визнач рядок коду, який збільшує кількість балів.\n- Додай додатковий рядок коду, щоб принаймні один спрайт перемістився на нове (випадкове) місце.\n",
        "CSD U3 collisions bounciness_2021": "<img src=\"https://images.code.org/5976aca3356455b4882d2e5d0a62a26f-image-1585825944588.gif\" style=\"float:right\">\n\n# Пружинистість\n\nДотепер блок 'bounceOff' змушував спрайти відскакувати від інших об'єктів так само швидко, як вони в них вдарялися.  У реальному світі майже все трохи сповільнюється, коли відскакує від чогось іншого.  Ти можеш використовувати блок `пружинистість bounciness`, щоб вказати спрайту, наскільки сповільнитися або прискоритися, коли він відскакує від чогось іншого.\n\n# Завдання\n\n* Переглянь код нижче та натисни \"Запустити\", щоб порівняти поведінку баскетбольного та більярдного м'яча.\n* Використовуй блок 'bounciness', щоб налаштувати пружність футбольного м'яча.\n* Запусти код ще раз, щоб побачити, як спрайти відскакують від підлоги.\n\n\n[//]: #  (https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png)\n\n[//]: #  (https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png)\n\n[//]: #  (https://images.code.org/0e4e9c26bed0d31d14f6b3f8f8bb4c27-image-1475786966986.png)\n\n",
        "CSD U3 collisions bounciness_2022": "<img src=\"https://images.code.org/5976aca3356455b4882d2e5d0a62a26f-image-1585825944588.gif\" style=\"float:right\">\n\n# Пружинистість\n\nДотепер блок 'bounceOff' змушував спрайти відскакувати від інших об'єктів так само швидко, як вони в них вдарялися.  У реальному світі майже все трохи сповільнюється, коли відскакує від чогось іншого.  Ти можеш використовувати блок `пружинистість bounciness`, щоб вказати спрайту, наскільки сповільнитися або прискоритися, коли він відскакує від чогось іншого.\n\n# Завдання\n\n* Переглянь код нижче та натисни \"Запустити\", щоб порівняти поведінку баскетбольного та більярдного м'яча.\n* Використовуй блок 'bounciness', щоб налаштувати пружність футбольного м'яча.\n* Запусти код ще раз, щоб побачити, як спрайти відскакують від підлоги.\n\n\n[//]: #  (https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png)\n\n[//]: #  (https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png)\n\n[//]: #  (https://images.code.org/0e4e9c26bed0d31d14f6b3f8f8bb4c27-image-1475786966986.png)\n\n",
        "CSD U3 collisions build isTouching_2021": "# Використовуємо математику, щоб знайти відповідь\n\nКомп'ютери використовують математику, щоб з'ясувати, чи торкаються два предмети.  Подивися на математичні дії у цій програмі, щоб побачити, як властивості спрайтів порівнюються з їхньою шириною, щоб визначити, чи торкаються вони один одного.\n\n# Завдання\n\n-   Переглянь команди умов всередині циклу малювання та знайди різні властивості спрайтів і те, як вони порівнюються.\n-   Обговоріть код з партнером.\n-   Чому в коді використовуються тільки властивості ширина і X, а не властивості висота і Y?\n-   Чи хотілось би тобі писати цей код щоразу, коли перевіряєш, чи торкаються якісь об'єкти?",
        "CSD U3 collisions build isTouching_2022": "# Використовуємо математику, щоб знайти відповідь\n\nКомп'ютери використовують математику, щоб з'ясувати, чи торкаються два предмети.  Подивися на математичні дії у цій програмі, щоб побачити, як властивості спрайтів порівнюються з їхньою шириною, щоб визначити, чи торкаються вони один одного.\n\n# Завдання\n\n-   Переглянь команди умов всередині циклу малювання та знайди різні властивості спрайтів і те, як вони порівнюються.\n-   Обговоріть код з партнером.\n-   Чому в коді використовуються тільки властивості ширина і X, а не властивості висота і Y?\n-   Чи хотілось би тобі писати цей код щоразу, коли перевіряєш, чи торкаються якісь об'єкти?",
        "CSD U3 collisions car intro_2021": "# Час обідати!\n\nЗапусти програму, щоб побачити, як робот приносить кролику обід.  Коли кролик добігає до миски, вони обидва перестають йти, і миска стає порожньою.  Як ти думаєш, який код допоможе комп'ютеру дізнатися, що два спрайти торкаються?",
        "CSD U3 collisions car intro_2022": "# Час обідати!\n\nЗапусти програму, щоб побачити, як робот приносить кролику обід.  Коли кролик добігає до миски, вони обидва перестають йти, і миска стає порожньою.  Як ти думаєш, який код допоможе комп'ютеру дізнатися, що два спрайти торкаються?",
        "CSD U3 collisions debug isTouching_2021": "# Налагодження зіткнень\n\nКулька лопається ще до того, як кнопка торкнеться її.  Спробуй скористатися блоком `debug`, щоб отримати більше інформації про помилку у програмі.\n\n# Завдання\n\n-   Запусти код і використовуй клавіші зі стрілками, щоб перемістити кнопку і лопнути кульку.\n-   У коді нижче зміни `balloon.debug = false` на `balloon.debug = true`.\n-   Додай до коду новий блок `debug` і встанови властивість \"налагодження\" спрайта у значення `так`.\n-   Запусти код ще раз, а потім обговоріть з партнером, чому кулька лопається раніше.",
        "CSD U3 collisions debug isTouching_2022": "# Налагодження зіткнень\n\nКулька лопається ще до того, як кнопка торкнеться її.  Спробуй скористатися блоком `debug`, щоб отримати більше інформації про помилку у програмі.\n\n# Завдання\n\n-   Запусти код і використовуй клавіші зі стрілками, щоб перемістити кнопку і лопнути кульку.\n-   У коді нижче зміни `balloon.debug = false` на `balloon.debug = true`.\n-   Додай до коду новий блок `debug` і встанови властивість \"налагодження\" спрайта у значення `так`.\n-   Запусти код ще раз, а потім обговоріть з партнером, чому кулька лопається раніше.",
        "CSD U3 collisions debug_2021": "# Налагодження\n\nІноді спрайти поводяться несподівано. Існує спеціальна властивість `sprite.debug`, яка допоможе тобі розібратись, чому спрайти взаємодіють саме так.\n\n# Завдання\n\nЦі дві монети круглі, тож можна було б очікувати, що вони відскочать певним чином. Але відбувається щось дивне!\n\n* Запусти код і спостерігай за тим, як взаємодіють монети.\n* Використовуй блок `sprite.debug`, щоб його значення було 'так' для обох спрайтів і запусти код знову.\n* Зміни початкову позицію Х золотої монети на 51 і запусти код ще раз.\n* Обговори з партнером: Як ти вважаєш, чому монети так дивно відскакують?\n",
        "CSD U3 collisions debug_2022": "# Налагодження\n\nІноді спрайти поводяться несподівано. Існує спеціальна властивість `sprite.debug`, яка допоможе тобі розібратись, чому спрайти взаємодіють саме так.\n\n# Завдання\n\nЦі дві монети круглі, тож можна було б очікувати, що вони відскочать певним чином. Але відбувається щось дивне!\n\n* Запусти код і спостерігай за тим, як взаємодіють монети.\n* Використовуй блок `sprite.debug`, щоб його значення було 'так' для обох спрайтів і запусти код знову.\n* Зміни початкову позицію Х золотої монети на 51 і запусти код ще раз.\n* Обговори з партнером: Як ти вважаєш, чому монети так дивно відскакують?\n",
        "CSD U3 collisions displace intro_2021": "# Заміщення\n\nЦей тип взаємодії спрайтів настільки поширений, що для нього існує окремий блок: `sprite.displace()`.  Хтось намагався використати блок `sprite.displace()`, щоб змусити **слона витовхати бегемота**, але десь виникла помилка.\n\n# Завдання\n\n-   Знайди рядок коду, де використовується блок `sprite.displace()` і виправ помилку.",
        "CSD U3 collisions displace intro_2022": "# Заміщення\n\nЦей тип взаємодії спрайтів настільки поширений, що для нього існує окремий блок: `sprite.displace()`.  Хтось намагався використати блок `sprite.displace()`, щоб змусити **слона витовхати бегемота**, але десь виникла помилка.\n\n# Завдання\n\n-   Знайди рядок коду, де використовується блок `sprite.displace()` і виправ помилку.",
        "CSD U3 collisions displace x_2021": "# Програмуємо взаємодію спрайтів\n\nОсь схожа програма, але вона поки що не працює.\n\n# Завдання\n\n-   Використовуй свій план, щоб запрограмувати жирафу виштовхнути мавпу з екрана.",
        "CSD U3 collisions displace x_2022": "# Програмуємо взаємодію спрайтів\n\nОсь схожа програма, але вона поки що не працює.\n\n# Завдання\n\n-   Використовуй свій план, щоб запрограмувати жирафу виштовхнути мавпу з екрана.",
        "CSD U3 collisions displace y_2021": "# Пишемо власний код взаємодії спрайтів\n\nТепер слон повинен **виштовхнути бегемота з екрана**. Зверни увагу, що слон рухається з випадковою швидкістю по Y після кожного запуску програми.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, як вона працює.\n-   Використовуючи закономірності з попереднього рівня, напиши код, який програмує слона виштовхувати бегемота за межі екрана.",
        "CSD U3 collisions displace y_2022": "# Пишемо власний код взаємодії спрайтів\n\nТепер слон повинен **виштовхнути бегемота з екрана**. Зверни увагу, що слон рухається з випадковою швидкістю по Y після кожного запуску програми.\n\n# Завдання\n\n-   Запусти програму, щоб побачити, як вона працює.\n-   Використовуючи закономірності з попереднього рівня, напиши код, який програмує слона виштовхувати бегемота за межі екрана.",
        "CSD U3 collisions egg_2021": "<img src=\"https://images.code.org/5bba6a59ca6ac44e190f0a56d2c31752-image-1585767709528.gif\" style=\"float:right\">\n\n# Яблучне пюре\n\nБлендер повинен увімкнутися лише тоді, коли його торкнеться яблуко.\n\n# Завдання\n\n-   Використовуй новий код, який ми вивчили, щоб перевірити, чи торкається блендер яблука.\n-   Використовуй умовний оператор, щоб трусити блендер тільки тоді, коли яблуко торкається його.\n\n_Підказка: Тобі потрібно перетягнути два блоки в робочу область._",
        "CSD U3 collisions egg_2022": "<img src=\"https://images.code.org/5bba6a59ca6ac44e190f0a56d2c31752-image-1585767709528.gif\" style=\"float:right\">\n\n# Яблучне пюре\n\nБлендер повинен увімкнутися лише тоді, коли його торкнеться яблуко.\n\n# Завдання\n\n-   Використовуй новий код, який ми вивчили, щоб перевірити, чи торкається блендер яблука.\n-   Використовуй умовний оператор, щоб трусити блендер тільки тоді, коли яблуко торкається його.\n\n_Підказка: Тобі потрібно перетягнути два блоки в робочу область._",
        "CSD U3 collisions flyman add obstacles_2021": "<img src=\"https://images.code.org/3d7349f8509b280e3607bbc83545f63c-image-1585728699723.gif\" style=\"float:right\">\n\n# Цикли\n\nКоли перешкоди виходять за межі екрана, вони повинні повернутися на інший бік у довільній позиції.\n\n# Завдання\n\n-   Знайди коментар до коду `// LOOPING`\n-   Додай умовний оператор, який перевіряє властивість Х горизонтальної перешкоди, щоб побачити, чи перемістилася вона за межі екрана.\n-   Якщо вона вийшла за межі екрана...\n    -   Скинь властивість перешкоди \"Х\", щоб \"зациклити\" її назад на інший бік екрана\n    -   Встанови властивість перешкоди \"Y\" як випадкове число від 50 до 350.\n-   Протестуй свій код, щоб переконатися, що перша перешкода працює за циклом.\n-   Додай умовний оператор, який перевіряє властивість \"Y\" вертикальної перешкоди, щоб побачити, чи перемістилася вона за межі екрана.\n-   Якщо вона вийшла за межі екрана...\n    -   Скинь властивість \"Y\", щоб \"зациклити\" її назад на інший бік екрана\n    -   Встанови її властивість \"X\" як випадкове число від 50 до 350.",
        "CSD U3 collisions flyman bounceOff_2021": "# Перевіряємо свою гру\n\nПротестуй свою гру, щоб переконатися, що в ній є все необхідне.\n\n# Завдання\n\n-   Зіграй свою гру кілька разів.\n-   Перечитай свій план проєкту та перевір, чи виконано цей план.\n-   Внеси останні зміни.",
        "CSD U3 collisions flyman bounceOff_2022": "# Перевіряємо свою гру\n\nПротестуй свою гру, щоб переконатися, що в ній є все необхідне.\n\n# Завдання\n\n-   Зіграй свою гру кілька разів.\n-   Перечитай свій план проєкту та перевір, чи виконано цей план.\n-   Внеси останні зміни.",
        "CSD U3 collisions horse_2021": "# Веселковий коник\n\nКоли веселка торкнеться коника, він має перетворитися на єдинорога.\n\n# Завдання\n\n-   Додай код, який змінює вигляд спрайта коника на єдинорога, коли веселка торкається його.",
        "CSD U3 collisions horse_2022": "# Веселковий коник\n\nКоли веселка торкнеться коника, він має перетворитися на єдинорога.\n\n# Завдання\n\n-   Додай код, який змінює вигляд спрайта коника на єдинорога, коли веселка торкається його.",
        "CSD U3 collisions isTouching intro_2021": "# isTouching()\n\nНаписання математичних операцій кожного разу, коли ми хочемо перевірити, чи торкаються два спрайти, може зайняти деякий час, тому програміст створив блок `isTouching`, який може перевірити, чи торкається один спрайт іншого спрайта (_цілі target_).  Комп'ютер все ще виконує ті самі обчислення, що й у попередній програмі, але нам не потрібно про це турбуватися, тому що інший програміст вже зробив цю роботу.\n\n# Завдання\n\n-   Усередині циклу малювання перетягни блок `isTouching` у блок \\`якщо'.     ( [Де саме](#triggercallout=code_triggered) )\n-   _Підказка: не забудь змінити \"sprite\" на \"bunny\", а \"target\" на \"dinner\"._",
        "CSD U3 collisions isTouching intro_2022": "# isTouching()\n\nНаписання математичних операцій кожного разу, коли ми хочемо перевірити, чи торкаються два спрайти, може зайняти деякий час, тому програміст створив блок `isTouching`, який може перевірити, чи торкається один спрайт іншого спрайта (_цілі target_).  Комп'ютер все ще виконує ті самі обчислення, що й у попередній програмі, але нам не потрібно про це турбуватися, тому що інший програміст вже зробив цю роботу.\n\n# Завдання\n\n-   Усередині циклу малювання перетягни блок `isTouching` у блок \\`якщо'.     ( [Де саме](#triggercallout=code_triggered) )\n-   _Підказка: не забудь змінити \"sprite\" на \"bunny\", а \"target\" на \"dinner\"._",
        "CSD U3 collisions predict set velocity code": "# Взаємодії спрайтів\n\nДосі ми могли створювати прості взаємодії зі спрайтами за допомогою блоку `sprite.isTouching()`. Наприклад, монета переміщувалась в інше місце на екрані, коли персонаж її торкнувся. Тепер настав час почати створювати складніші взаємодії спрайтів.\n\n# Завдання\n\n-   Запусти програму та спостерігай за взаємодією між двома спрайтами.\n-   Обговори із сусідом: використовуючи лише команди, які ми вже знаємо, як можна створити такий вид взаємодії? Є багато способів зробити це, але ось деякі блоки, які варто розглянути:\n    -   `sprite.isTouching()`\n    -   `sprite.velocityX`\n    -   `sprite.velocityY`\n    -   `sprite.x`\n    -   `sprite.y`\n\nПідготуйся поділитися своїми ідеями з однокласниками.",
        "CSD U3 collisions predict set velocity code_2018": "# Взаємодії спрайтів\n\nДосі ми могли створювати прості взаємодії зі спрайтами за допомогою блоку `sprite.isTouching()`. Наприклад, монета переміщувалась в інше місце на екрані, коли персонаж її торкнувся. Тепер настав час почати створювати складніші взаємодії спрайтів.\n\n# Завдання\n\n-   Запусти програму та спостерігай за взаємодією між двома спрайтами.\n-   Обговори із сусідом: використовуючи лише команди, які ми вже знаємо, як можна створити такий вид взаємодії? Є багато способів зробити це, але ось деякі блоки, які варто розглянути:\n    -   `sprite.isTouching()`\n    -   `sprite.velocityX`\n    -   `sprite.velocityY`\n    -   `sprite.x`\n    -   `sprite.y`\n\nПідготуйся поділитися своїми ідеями з однокласниками.",
        "CSD U3 collisions predict set velocity code_2019": "# Взаємодії спрайтів\n\nДосі ми могли створювати прості взаємодії зі спрайтами за допомогою блоку `sprite.isTouching()`. Наприклад, монета переміщувалась в інше місце на екрані, коли персонаж її торкнувся. Тепер настав час почати створювати складніші взаємодії спрайтів.\n\n# Завдання\n\n-   Запусти програму та спостерігай за взаємодією між двома спрайтами.\n-   Обговори із сусідом: використовуючи лише команди, які ми вже знаємо, як можна створити такий вид взаємодії? Є багато способів зробити це, але ось деякі блоки, які варто розглянути:\n    -   `sprite.isTouching()`\n    -   `sprite.velocityX`\n    -   `sprite.velocityY`\n    -   `sprite.x`\n    -   `sprite.y`\n\nПідготуйся поділитися своїми ідеями з однокласниками.",
        "CSD U3 collisions predict set velocity code_2021": "# Взаємодії спрайтів\n\nДосі ми могли створювати прості взаємодії зі спрайтами за допомогою блоку `sprite.isTouching()`. Наприклад, монета переміщувалась в інше місце на екрані, коли персонаж її торкнувся. Тепер настав час почати створювати складніші взаємодії спрайтів.\n\n# Завдання\n\n-   Запусти програму та спостерігай за взаємодією між двома спрайтами.\n-   Обговори із сусідом: використовуючи лише команди, які ми вже знаємо, як можна створити такий вид взаємодії? Є багато способів зробити це, але ось деякі блоки, які варто розглянути:\n    -   `sprite.isTouching()`\n    -   `sprite.velocityX`\n    -   `sprite.velocityY`\n    -   `sprite.x`\n    -   `sprite.y`\n\nПідготуйся поділитися своїми ідеями з однокласниками.",
        "CSD U3 collisions predict set velocity code_2022": "# Взаємодії спрайтів\n\nДосі ми могли створювати прості взаємодії зі спрайтами за допомогою блоку `sprite.isTouching()`. Наприклад, монета переміщувалась в інше місце на екрані, коли персонаж її торкнувся. Тепер настав час почати створювати складніші взаємодії спрайтів.\n\n# Завдання\n\n-   Запусти програму та спостерігай за взаємодією між двома спрайтами.\n-   Обговори із сусідом: використовуючи лише команди, які ми вже знаємо, як можна створити такий вид взаємодії? Є багато способів зробити це, але ось деякі блоки, які варто розглянути:\n    -   `sprite.isTouching()`\n    -   `sprite.velocityX`\n    -   `sprite.velocityY`\n    -   `sprite.x`\n    -   `sprite.y`\n\nПідготуйся поділитися своїми ідеями з однокласниками.",
        "CSD U3 collisions scoreboard_2021": "# Бали і табло\n\nЗараз стан здоров'я відображається, а рахунок - ні.\n\n# Завдання\n\n-   Знайди коментар до коду `// SCOREBOARD` і переглянь код, який відображає інформацію про стан здоров'я.\n-   Додай код для створення табло.\n-   Запусти програму, щоб перевірити свій код.",
        "CSD U3 collisions scoreboard_2022": "# Бали і табло\n\nЗараз стан здоров'я відображається, а рахунок - ні.\n\n# Завдання\n\n-   Знайди коментар до коду `// SCOREBOARD` і переглянь код, який відображає інформацію про стан здоров'я.\n-   Додай код для створення табло.\n-   Запусти програму, щоб перевірити свій код.",
        "CSD U3 collisions setCollider_2021": "# Встановити колайдер setCollider\n\nСпрайти взаємодіють на основі розміру та форми свого колайдера, а не зображень, які їм призначені. Побачити колайдер можна лише у режимі налагодження. Ти можеш змінити форму колайдера за допомогою блоку `sprite.setCollider()`, який дозволяє вибрати між \"прямокутником\" і \"колом\".  За замовчуванням всі колайдери мають форму \"прямокутник\".\n\n# Завдання\n\n* Знайди блок `sprite.setCollider()` для золотої монети та зміни його з \"прямокутника\" на \"коло\".\n* Додай новий блок `sprite.setCollider()` для срібної монети та обери \"коло\" для форми колайдера.\n* Запусти код ще раз, щоб побачити, як спрайти відбиваються один від одного.\n\n\n[//]: #  (https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png)\n\n[//]: #  (https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png)\n",
        "CSD U3 collisions setCollider_2022": "# Встановити колайдер setCollider\n\nСпрайти взаємодіють на основі розміру та форми свого колайдера, а не зображень, які їм призначені. Побачити колайдер можна лише у режимі налагодження. Ти можеш змінити форму колайдера за допомогою блоку `sprite.setCollider()`, який дозволяє вибрати між \"прямокутником\" і \"колом\".  За замовчуванням всі колайдери мають форму \"прямокутник\".\n\n# Завдання\n\n* Знайди блок `sprite.setCollider()` для золотої монети та зміни його з \"прямокутника\" на \"коло\".\n* Додай новий блок `sprite.setCollider()` для срібної монети та обери \"коло\" для форми колайдера.\n* Запусти код ще раз, щоб побачити, як спрайти відбиваються один від одного.\n\n\n[//]: #  (https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png)\n\n[//]: #  (https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png)\n",
        "CSD U3 collisions sidescroll2_2021": "# Взаємодія спрайтів\n\nУ прикладі гри перешкода (гриб) оберталася, і здоров'я гравця (жаби) зменшувалося, коли він торкався її.  Коли гравець (жаба) торкався мішені (мухи), рахунок збільшувався, а мішень (муха) переміщалася назад у праву частину екрана.\n\n# Завдання\n\n-   Знайди коментар коду `// SPRITE INTERACTIONS` і прочитай коментарі в цьому розділі.\n-   Створи умовний оператор, який перевіряє, чи торкається спрайт гравця спрайта перешкоди.\n    -   Якщо вони торкаються, потрібно зменшити здоров'я і змінити спрайт перешкоди певним чином.\n    -   Запусти програму для тестування коду.\n-   Створи умовний оператор, який перевіряє, чи торкається спрайт гравця до спрайта цілі.\n    -   Якщо вони торкаються, потрібно збільшити рахунок і перемістити мішень назад у праву частину екрана.\n    -   Запусти програму для тестування свого коду. \n\n_Ти можеш використовувати спостерігачі, щоб відстежувати свій результат і стан здоров'я._",
        "CSD U3 collisions sidescroll2_2022": "# Взаємодія спрайтів\n\nУ прикладі гри перешкода (гриб) оберталася, і здоров'я гравця (жаби) зменшувалося, коли він торкався її.  Коли гравець (жаба) торкався мішені (мухи), рахунок збільшувався, а мішень (муха) переміщалася назад у праву частину екрана.\n\n# Завдання\n\n-   Знайди коментар коду `// SPRITE INTERACTIONS` і прочитай коментарі в цьому розділі.\n-   Створи умовний оператор, який перевіряє, чи торкається спрайт гравця спрайта перешкоди.\n    -   Якщо вони торкаються, потрібно зменшити здоров'я і змінити спрайт перешкоди певним чином.\n    -   Запусти програму для тестування коду.\n-   Створи умовний оператор, який перевіряє, чи торкається спрайт гравця до спрайта цілі.\n    -   Якщо вони торкаються, потрібно збільшити рахунок і перемістити мішень назад у праву частину екрана.\n    -   Запусти програму для тестування свого коду. \n\n_Ти можеш використовувати спостерігачі, щоб відстежувати свій результат і стан здоров'я._",
        "CSD U3 collisions try blocks": "# Більше блоків зіткнень\n\nДо панелі інструментів додано три нові типи взаємодії зі спрайтами: `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. Як думаєш, як вони вплинуть на спрайти?\n\n# Завдання\n\n-   Вимкни блок displace для блоків `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. ( [Покажи мені де](#triggercallout=code_triggered) )\n    -   _Підказка: якщо виникли проблеми з цими блоками, перейди у текстовий режим._\n-   Обговори із сусідом: у чому різниця між чотирма різними взаємодіями спрайтів? Як думаєш, яке призначення кожного блоку?\n\n[//]: # \"https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png\"\n\n[//]: # \"https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png\"",
        "CSD U3 collisions try blocks_2018": "# Більше блоків зіткнень\n\nДо панелі інструментів додано три нові типи взаємодії зі спрайтами: `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. Як думаєш, як вони вплинуть на спрайти?\n\n# Завдання\n\n-   Вимкни блок displace для блоків `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. ( [Покажи мені де](#triggercallout=code_triggered) )\n    -   _Підказка: якщо виникли проблеми з цими блоками, перейди у текстовий режим._\n-   Обговори із сусідом: у чому різниця між чотирма різними взаємодіями спрайтів? Як думаєш, яке призначення кожного блоку?\n\n[//]: # \"https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png\"\n\n[//]: # \"https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png\"",
        "CSD U3 collisions try blocks_2019": "# Більше блоків зіткнень\n\nДо панелі інструментів додано три нові типи взаємодії зі спрайтами: `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. Як думаєш, як вони вплинуть на спрайти?\n\n# Завдання\n\n-   Вимкни блок displace для блоків `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. ( [Покажи мені де](#triggercallout=code_triggered) )\n    -   _Підказка: якщо виникли проблеми з цими блоками, перейди у текстовий режим._\n-   Обговори із сусідом: у чому різниця між чотирма різними взаємодіями спрайтів? Як думаєш, яке призначення кожного блоку?\n\n[//]: # \"https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png\"\n\n[//]: # \"https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png\"",
        "CSD U3 collisions try blocks_2021": "# Більше блоків зіткнень\n\nДо панелі інструментів додано три нові типи взаємодії зі спрайтами: `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. Як думаєш, як вони вплинуть на спрайти?\n\n# Завдання\n\n-   Вимкни блок displace для блоків `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. ( [Покажи мені де](#triggercallout=code_triggered) )\n    -   _Підказка: якщо виникли проблеми з цими блоками, перейди у текстовий режим._\n-   Обговори із сусідом: у чому різниця між чотирма різними взаємодіями спрайтів? Як думаєш, яке призначення кожного блоку?\n\n[//]: # \"https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png\"\n\n[//]: # \"https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png\"",
        "CSD U3 collisions try blocks_2022": "# Більше блоків зіткнень\n\nДо панелі інструментів додано три нові типи взаємодії зі спрайтами: `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. Як думаєш, як вони вплинуть на спрайти?\n\n# Завдання\n\n-   Вимкни блок displace для блоків `sprite.collide()`, `sprite.bounce()` і `sprite.bounceOff()`. ( [Покажи мені де](#triggercallout=code_triggered) )\n    -   _Підказка: якщо виникли проблеми з цими блоками, перейди у текстовий режим._\n-   Обговори із сусідом: у чому різниця між чотирма різними взаємодіями спрайтів? Як думаєш, яке призначення кожного блоку?\n\n[//]: # \"https://images.code.org/8b7730146eaa9d439e6af34c0a21e802-image-1470321391887.png\"\n\n[//]: # \"https://images.code.org/eca470a686b01c19981152fdab808804-image-1470321391888.png\"",
        "CSD U3 collisions types2_2021": "# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери  найкращий блок, щоб стрілка зупинилася, коли досягне яблука. ( [Де саме](#triggercallout=code_triggered) ). ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\".",
        "CSD U3 collisions types2_2022": "# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери  найкращий блок, щоб стрілка зупинилася, коли досягне яблука. ( [Де саме](#triggercallout=code_triggered) ). ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\".",
        "CSD U3 collisions types3_2021": "<img src=\"https://images.code.org/15e2ef8c71f9f194115523cea1305cae-image-1592927136250.2020-06-23 11_45_27.gif\" style=\"float:right\">\n\n# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери  найкращий блок, щоб сірий візок зупинився і штовхнув другий візок. ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\"*.",
        "CSD U3 collisions types3_2022": "<img src=\"https://images.code.org/15e2ef8c71f9f194115523cea1305cae-image-1592927136250.2020-06-23 11_45_27.gif\" style=\"float:right\">\n\n# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери  найкращий блок, щоб сірий візок зупинився і штовхнув другий візок. ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\"*.",
        "CSD U3 collisions types4_2021": "<img src=\"https://images.code.org/7429509e250d36baaceb6d1a6ce89f3b-image-1592934922226.2020-06-23 13_54_13.gif\" style=\"float:right\">\n\n# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери найкращий блок, щоб запрограмувати дитину штовхати валізу.  ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\"*.",
        "CSD U3 collisions types4_2022": "<img src=\"https://images.code.org/7429509e250d36baaceb6d1a6ce89f3b-image-1592934922226.2020-06-23 13_54_13.gif\" style=\"float:right\">\n\n# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери найкращий блок, щоб запрограмувати дитину штовхати валізу.  ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\"*.",
        "CSD U3 collisions types_2021": "# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери найкращий блок для моделювання взаємодії баскетбольного м'яча з підлогою. ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\".",
        "CSD U3 collisions types_2022": "# Типи зіткнень\n\nІснує чотири типи зіткнень, які ми використовуємо в Ігровій Лабораторії: `displace` (заміщення), `collide` (зіткнення), `bounce` (відскок) та `bounceOff` (відскок обох).  Ці блоки спричиняють певний тип взаємодії між _спрайтом_ та його _ціллю_.\n\n# Завдання\n\n* Обери найкращий блок для моделювання взаємодії баскетбольного м'яча з підлогою. ( [Де саме](#triggercallout=code_triggered) )\n\n*Підказка: Ти можеш випробувати різні блоки або прочитати більше про них у вкладці \"Допомога та поради\".",
        "CSD U3 complex sprite movement practice deceleration_2021": "# Уповільнення\n\nЗапрограмуй автомобіль сповільнитися до зупинки, перш ніж він виїде за верхню межу екрана.\n\n# Завдання\n- Зміни швидкість автомобіля за віссю Y у циклі малювання так, щоб він сповільнився.\n- Використай умовний оператор, щоб запобігти руху автомобіля назад після зупинки.",
        "CSD U3 complex sprite movement practice deceleration_2022": "# Уповільнення\n\nЗапрограмуй автомобіль сповільнитися до зупинки, перш ніж він виїде за верхню межу екрана.\n\n# Завдання\n- Зміни швидкість автомобіля за віссю Y у циклі малювання так, щоб він сповільнився.\n- Використай умовний оператор, щоб запобігти руху автомобіля назад після зупинки.",
        "CSD U3 complex sprite movement practice parabola_2021": "# Крива\n\nЛітак підіймається вгору, щоб уникнути першого піку, але вилітає за межі екрана. У циклі малювання зміни його швидкість за віссю Y так, щоб він опустився, щоб уникнути другого піку.\n\n# Завдання\n- Онови швидкість за віссю Y у циклі малювання так, щоб вона рухала літак вниз.\n  - Підказка: Швидкість починається з від'ємного значення і літак підіймається. Щоб літак опускався, у якому напрямку має бути швидкість?\n- Ти можеш змінювати початкові швидкості літака за осями X та Y, але це не обов'язково.",
        "CSD U3 complex sprite movement practice parabola_2022": "# Крива\n\nЛітак підіймається вгору, щоб уникнути першого піку, але вилітає за межі екрана. У циклі малювання зміни його швидкість за віссю Y так, щоб він опустився, щоб уникнути другого піку.\n\n# Завдання\n- Онови швидкість за віссю Y у циклі малювання так, щоб вона рухала літак вниз.\n  - Підказка: Швидкість починається з від'ємного значення і літак підіймається. Щоб літак опускався, у якому напрямку має бути швидкість?\n- Ти можеш змінювати початкові швидкості літака за осями X та Y, але це не обов'язково.",
        "CSD U3 dancing alien_2021": "# Спрайти в циклі малювання\n\nЗмінюючи властивості спрайтів у циклі малювання, ти можеш анімувати своїх персонажів.\n\n# Завдання\n\n-   Запусти код, щоб побачити, як він працює.\n-   Обговоріть з партнером, чому частина коду знаходиться всередині циклу малювання, а частина - зовні.\n-   Спробуй змінити числа у блоці випадкових чисел і запусти програму ще раз.",
        "CSD U3 dancing alien_2022": "# Спрайти в циклі малювання\n\nЗмінюючи властивості спрайтів у циклі малювання, ти можеш анімувати своїх персонажів.\n\n# Завдання\n\n-   Запусти код, щоб побачити, як він працює.\n-   Обговоріть з партнером, чому частина коду знаходиться всередині циклу малювання, а частина - зовні.\n-   Спробуй змінити числа у блоці випадкових чисел і запусти програму ще раз.",
        "CSD U3 debug": "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50 AM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження\n\nЧасто код не працює під час першого запуску, і програмістам доводиться його налагоджувати. Наведений нижче код мав створити картинку праворуч, але програміст заплутався, у якому порядку має бути код, а також як розмістити квадрат у потрібному місці на екрані.\n\n# Завдання\n\n-   Переглянь код у робочій області.\n-   Зміни цей код, щоб він створив зображенням праворуч.\n    -   (потрібно буде перемістити один рядок коду І змінити координати квадрата.)",
        "CSD U3 debug_2018": "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50 AM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження\n\nЧасто код не працює під час першого запуску, і програмістам доводиться його налагоджувати. Наведений нижче код мав створити картинку праворуч, але програміст заплутався, у якому порядку має бути код, а також як розмістити квадрат у потрібному місці на екрані.\n\n# Завдання\n\n-   Переглянь код у робочій області.\n-   Зміни цей код, щоб він створив зображенням праворуч.\n    -   (потрібно буде перемістити один рядок коду І змінити координати квадрата.)",
        "CSD U3 debug_2019": "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50 AM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження\n\nЧасто код не працює під час першого запуску, і програмістам доводиться його налагоджувати. Наведений нижче код мав створити картинку праворуч, але програміст заплутався, у якому порядку має бути код, а також як розмістити квадрат у потрібному місці на екрані.\n\n# Завдання\n\n-   Переглянь код у робочій області.\n-   Зміни цей код, щоб він створив зображенням праворуч.\n    -   (потрібно буде перемістити один рядок коду І змінити координати квадрата.)",
        "CSD U3 debug_2021": "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50 AM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження\n\nЧасто код не працює під час першого запуску, і програмістам доводиться його налагоджувати. Наведений нижче код мав створити картинку праворуч, але програміст заплутався, у якому порядку має бути код, а також як розмістити квадрат у потрібному місці на екрані.\n\n# Завдання\n\n-   Переглянь код у робочій області.\n-   Зміни цей код, щоб він створив зображенням праворуч.\n    -   (потрібно буде перемістити один рядок коду І змінити координати квадрата.)",
        "CSD U3 debug_2022": "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50 AM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження\n\nЧасто код не працює під час першого запуску, і програмістам доводиться його налагоджувати. Наведений нижче код мав створити картинку праворуч, але програміст заплутався, у якому порядку має бути код, а також як розмістити квадрат у потрібному місці на екрані.\n\n# Завдання\n\n-   Переглянь код у робочій області.\n-   Зміни цей код, щоб він створив зображенням праворуч.\n    -   (потрібно буде перемістити один рядок коду І змінити координати квадрата.)",
        "CSD U3 drawing challenge 2_2021": "<img src=\"https://images.code.org/cb344be4730b2a4925891adc1989ee01-image-1560899864102.JPG\" style=\"float:right;width:150px;\">\n\n# Точки!\n\nТут в нас є новий блок, який дозволяє малювати одну точку на екрані. (`strokeWeight` контролює розмір точки).\n\n# Завдання\n\n* Переглянь код, який створює це зображення.\n* Використовуй блок `point`, щоб завершити код так, щоб він відповідав зображенню.",
        "CSD U3 drawing challenge 2_2022": "<img src=\"https://images.code.org/cb344be4730b2a4925891adc1989ee01-image-1560899864102.JPG\" style=\"float:right;width:150px;\">\n\n# Точки!\n\nТут в нас є новий блок, який дозволяє малювати одну точку на екрані. (`strokeWeight` контролює розмір точки).\n\n# Завдання\n\n* Переглянь код, який створює це зображення.\n* Використовуй блок `point`, щоб завершити код так, щоб він відповідав зображенню.",
        "CSD U3 drawing challenge 3_2021": "<img src=\"https://images.code.org/d4a374335300d43e25fd903cfbdec7ff-image-1561834319250.51.40 AM.png\" style=\"float:right;width:150px;\">\n\n# Точки та товщина\n\nБлок `strokeWeight` визначає розмір точки. Можна використати цей блок для створення кубика.\n\n# Завдання\n\n* Переглянь код, який створює це зображення.\n* Використовуй блок `strokeWeight` для завершення коду, щоб він відповідав зображенню.\n\n*Підказка: Блок `strokeWeight` має стояти перед блоками `point`?",
        "CSD U3 drawing challenge 3_2022": "<img src=\"https://images.code.org/d4a374335300d43e25fd903cfbdec7ff-image-1561834319250.51.40 AM.png\" style=\"float:right;width:150px;\">\n\n# Точки та товщина\n\nБлок `strokeWeight` визначає розмір точки. Можна використати цей блок для створення кубика.\n\n# Завдання\n\n* Переглянь код, який створює це зображення.\n* Використовуй блок `strokeWeight` для завершення коду, щоб він відповідав зображенню.\n\n*Підказка: Блок `strokeWeight` має стояти перед блоками `point`?",
        "CSD U3 drawing challenge no fill_2021": "<img src=\"https://images.code.org/5293d165d4a9161b75df43128863f315-image-1566856378596.PNG\" style=\"float:right;width:200px;\">\n\n# Без заливки\n\nБлок `noFill` робить так, що створені фігури не мають заливки. Це можна використати для створення крутих візерунків.\n\n# Завдання\n\n* Переглянь код, який створює це зображення.\n* Використовуй блок `noFill`, щоб завершити код так, щоб він відповідав зображенню.\n",
        "CSD U3 drawing challenge no fill_2022": "<img src=\"https://images.code.org/5293d165d4a9161b75df43128863f315-image-1566856378596.PNG\" style=\"float:right;width:200px;\">\n\n# Без заливки\n\nБлок `noFill` робить так, що створені фігури не мають заливки. Це можна використати для створення крутих візерунків.\n\n# Завдання\n\n* Переглянь код, який створює це зображення.\n* Використовуй блок `noFill`, щоб завершити код так, щоб він відповідав зображенню.\n",
        "CSD U3 drawing practice 1_2021": "<img src=\"https://images.code.org/6edeebac96c298ad4accb05eb7598dc9-image-1560891281318.54.19 PM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження: відремонтуй машину.\n\nОй, червона частина автомобіля закриває колесо!  Виправ програму так, щоб вона відповідала зображенню праворуч.\n\n# Завдання\n\n* Переглянь код, яким намальована ця машина.\n* Зміни код так, щоб було видно колеса.\n",
        "CSD U3 drawing practice 1_2022": "<img src=\"https://images.code.org/6edeebac96c298ad4accb05eb7598dc9-image-1560891281318.54.19 PM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження: відремонтуй машину.\n\nОй, червона частина автомобіля закриває колесо!  Виправ програму так, щоб вона відповідала зображенню праворуч.\n\n# Завдання\n\n* Переглянь код, яким намальована ця машина.\n* Зміни код так, щоб було видно колеса.\n",
        "CSD U3 drawing practice 2_2021": "<img src=\"https://images.code.org/14f4099599200795902b0623d013b41c-image-1560890438689.JPG\" style=\"float:right;width:150px;\">\n\n# Налагодження: приєднай пелюстки\n\n\nОй, у квітки не вистачає пелюсток. З'єднай їх з центром квітки, щоб відтворити малюнок праворуч. \n\n# Завдання\n\n* Переглянь код, який створює квітку.\n* Зміни код так, щоб усі пелюстки були прикріплені до центру квітки.\n* *Підказка: використовуй сітку, щоб визначити, де мають бути пелюстки*.",
        "CSD U3 drawing practice 2_2022": "<img src=\"https://images.code.org/14f4099599200795902b0623d013b41c-image-1560890438689.JPG\" style=\"float:right;width:150px;\">\n\n# Налагодження: приєднай пелюстки\n\n\nОй, у квітки не вистачає пелюсток. З'єднай їх з центром квітки, щоб відтворити малюнок праворуч. \n\n# Завдання\n\n* Переглянь код, який створює квітку.\n* Зміни код так, щоб усі пелюстки були прикріплені до центру квітки.\n* *Підказка: використовуй сітку, щоб визначити, де мають бути пелюстки*.",
        "CSD U3 drawing practice 3_2021": "<img src=\"https://images.code.org/a4bc7d3dbd2ea2fd744ec64a9ee5ac76-image-1560890596053.42.55 PM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження: ремонтуємо світлофор\n\nЦей світлофор працює неправильно.  Виправ його так, щоб він виглядав, як на картинці праворуч.\n\n# Завдання\n\n* Переглянь код нижче. Він призначений для створення світлофора, але кольори неправильні.\n* Зміни код так, щоб кольори були правильними.",
        "CSD U3 drawing practice 3_2022": "<img src=\"https://images.code.org/a4bc7d3dbd2ea2fd744ec64a9ee5ac76-image-1560890596053.42.55 PM.png\" style=\"float:right;width:150px;\">\n\n# Налагодження: ремонтуємо світлофор\n\nЦей світлофор працює неправильно.  Виправ його так, щоб він виглядав, як на картинці праворуч.\n\n# Завдання\n\n* Переглянь код нижче. Він призначений для створення світлофора, але кольори неправильні.\n* Зміни код так, щоб кольори були правильними.",
        "CSD U3 ellipse": "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44 PM.png\" style=\"float:right;width:150px;\">\n\n# ellipse еліпс\n\nДля побудови кола можна скористатись командою `ellipse`.\n\n# Завдання\n\n-   Переглянь код, який створює еліпс.\n-   Додай новий еліпс іншого кольору.",
        "CSD U3 ellipse_2018": "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44 PM.png\" style=\"float:right;width:150px;\">\n\n# ellipse еліпс\n\nДля побудови кола можна скористатись командою `ellipse`.\n\n# Завдання\n\n-   Переглянь код, який створює еліпс.\n-   Додай новий еліпс іншого кольору.",
        "CSD U3 ellipse_2019": "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44 PM.png\" style=\"float:right;width:150px;\">\n\n# ellipse еліпс\n\nДля побудови кола можна скористатись командою `ellipse`.\n\n# Завдання\n\n-   Переглянь код, який створює еліпс.\n-   Додай новий еліпс іншого кольору.",
        "CSD U3 ellipse_2021": "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44 PM.png\" style=\"float:right;width:150px;\">\n\n# ellipse еліпс\n\nДля побудови кола можна скористатись командою `ellipse`.\n\n# Завдання\n\n-   Переглянь код, який створює еліпс.\n-   Додай новий еліпс іншого кольору.",
        "CSD U3 ellipse_2022": "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44 PM.png\" style=\"float:right;width:150px;\">\n\n# ellipse еліпс\n\nДля побудови кола можна скористатись командою `ellipse`.\n\n# Завдання\n\n-   Переглянь код, який створює еліпс.\n-   Додай новий еліпс іншого кольору.",
        "CSD U3 fill": "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19 PM.png\" style=\"float:right;width:200px;\">\n\n# fill(колір)\n\nМожете зафарбувати прямокутники різними кольорами за допомогою «заливки» командою fill. Вона встановить колір для всіх фігур, які йдуть після неї в коді.\n\n# Завдання\n\n-   Переглянь код, який задає колір. ( [Покажи мені де](#triggercallout=fill) )\n-   Зміни колір із синього на жовтий.\n-   Додай новий квадрат, перетягнувши блок `rect` в область коду під командою заповнення ( [Покажи мені де](#triggercallout=rect_block) ). Новий квадрат може розміщуватися в будь-якому місці на екрані, яке тобі до вподоби.",
        "CSD U3 fill_2018": "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19 PM.png\" style=\"float:right;width:200px;\">\n\n# fill(колір)\n\nМожете зафарбувати прямокутники різними кольорами за допомогою «заливки» командою fill. Вона встановить колір для всіх фігур, які йдуть після неї в коді.\n\n# Завдання\n\n-   Переглянь код, який задає колір. ( [Покажи мені де](#triggercallout=fill) )\n-   Зміни колір із синього на жовтий.\n-   Додай новий квадрат, перетягнувши блок `rect` в область коду під командою заповнення ( [Покажи мені де](#triggercallout=rect_block) ). Новий квадрат може розміщуватися в будь-якому місці на екрані, яке тобі до вподоби.",
        "CSD U3 fill_2019": "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19 PM.png\" style=\"float:right;width:200px;\">\n\n# fill(колір)\n\nМожете зафарбувати прямокутники різними кольорами за допомогою «заливки» командою fill. Вона встановить колір для всіх фігур, які йдуть після неї в коді.\n\n# Завдання\n\n-   Переглянь код, який задає колір. ( [Покажи мені де](#triggercallout=fill) )\n-   Зміни колір із синього на жовтий.\n-   Додай новий квадрат, перетягнувши блок `rect` в область коду під командою заповнення ( [Покажи мені де](#triggercallout=rect_block) ). Новий квадрат може розміщуватися в будь-якому місці на екрані, яке тобі до вподоби.",
        "CSD U3 fill_2021": "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19 PM.png\" style=\"float:right;width:200px;\">\n\n# fill(колір)\n\nМожете зафарбувати прямокутники різними кольорами за допомогою «заливки» командою fill. Вона встановить колір для всіх фігур, які йдуть після неї в коді.\n\n# Завдання\n\n-   Переглянь код, який задає колір. ( [Покажи мені де](#triggercallout=fill) )\n-   Зміни колір із синього на жовтий.\n-   Додай новий квадрат, перетягнувши блок `rect` в область коду під командою заповнення ( [Покажи мені де](#triggercallout=rect_block) ). Новий квадрат може розміщуватися в будь-якому місці на екрані, яке тобі до вподоби.",
        "CSD U3 fill_2022": "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19 PM.png\" style=\"float:right;width:200px;\">\n\n# fill(колір)\n\nМожете зафарбувати прямокутники різними кольорами за допомогою «заливки» командою fill. Вона встановить колір для всіх фігур, які йдуть після неї в коді.\n\n# Завдання\n\n-   Переглянь код, який задає колір. ( [Покажи мені де](#triggercallout=fill) )\n-   Зміни колір із синього на жовтий.\n-   Додай новий квадрат, перетягнувши блок `rect` в область коду під командою заповнення ( [Покажи мені де](#triggercallout=rect_block) ). Новий квадрат може розміщуватися в будь-якому місці на екрані, яке тобі до вподоби.",
        "CSD U3 function video": "## Питання для обговорення\n\n-   Згадай ситуацію, коли функція могла б допомогти нам написати програму.\n    -   Який код увійшов би у **визначення** функції?\n    -   Коли б ми **викликали** цю функцію?\n    -   Як ми її назвали?",
        "CSD U3 function video_2021": "## Питання для обговорення\n\n-   Згадай ситуацію, коли функція могла б допомогти нам написати програму.\n    -   Який код увійшов би у **визначення** функції?\n    -   Коли б ми **викликали** цю функцію?\n    -   Як ми її назвали?",
        "CSD U3 function video_2022": "## Питання для обговорення\n\n-   Згадай ситуацію, коли функція могла б допомогти нам написати програму.\n    -   Який код увійшов би у **визначення** функції?\n    -   Коли б ми **викликали** цю функцію?\n    -   Як ми її назвали?",
        "CSD U3 game animations": "# Створення анімацій\n\nДалі ти створиш свої анімації на відповідній вкладці. Не забудь створити кілька анімацій, якщо хочеш, щоб спрайт змінював вигляд відповідно до того, як він рухається.",
        "CSD U3 game animations_2018": "# Створення анімацій\n\nДалі ти створиш свої анімації на відповідній вкладці. Не забудь створити кілька анімацій, якщо хочеш, щоб спрайт змінював вигляд відповідно до того, як він рухається.",
        "CSD U3 game animations_2019": "# Створення анімацій\n\nДалі ти створиш свої анімації на відповідній вкладці. Не забудь створити кілька анімацій, якщо хочеш, щоб спрайт змінював вигляд відповідно до того, як він рухається.",
        "CSD U3 game animations_2021": "# Створення анімацій\n\nДалі ти створиш свої анімації на відповідній вкладці. Не забудь створити кілька анімацій, якщо хочеш, щоб спрайт змінював вигляд відповідно до того, як він рухається.",
        "CSD U3 game animations_2022": "# Створення анімацій\n\nДалі ти створиш свої анімації на відповідній вкладці. Не забудь створити кілька анімацій, якщо хочеш, щоб спрайт змінював вигляд відповідно до того, як він рухається.",
        "CSD U3 game backgrounds": "# Створення тла\n\nДалі ми створимо всі функції для тла, необхідного для гри. Деякі ігри мають лише один фон, а інші мають більше ніж один, який вибирається відповідно до результатів користувача або іншого аспекту ігрового процесу. Тобі потрібно створити функцію для кожного окремого тла своєї грі. Ти напишеш код, щоб вибирати відповідний фон на наступному рівні.\n\n-   [Покажи мені блок для створення нової функції](#triggercallout=callout1)\n-   [Покажи мені область у коді, щоб розмістити мою функцію](#triggercallout=callout2)\n\nПісля того, як ти створиш функції, протестуй їх, викликавши їх у циклі малювання, по одному фону на тест.\n\n-   [Покажи мені блок для виклику моєї функції](#triggercallout=callout3)",
        "CSD U3 game backgrounds_2018": "# Створення тла\n\nДалі ми створимо всі функції для тла, необхідного для гри. Деякі ігри мають лише один фон, а інші мають більше ніж один, який вибирається відповідно до результатів користувача або іншого аспекту ігрового процесу. Тобі потрібно створити функцію для кожного окремого тла своєї грі. Ти напишеш код, щоб вибирати відповідний фон на наступному рівні.\n\n-   [Покажи мені блок для створення нової функції](#triggercallout=callout1)\n-   [Покажи мені область у коді, щоб розмістити мою функцію](#triggercallout=callout2)\n\nПісля того, як ти створиш функції, протестуй їх, викликавши їх у циклі малювання, по одному фону на тест.\n\n-   [Покажи мені блок для виклику моєї функції](#triggercallout=callout3)",
        "CSD U3 game backgrounds_2019": "# Створення тла\n\nДалі ми створимо всі функції для тла, необхідного для гри. Деякі ігри мають лише один фон, а інші мають більше ніж один, який вибирається відповідно до результатів користувача або іншого аспекту ігрового процесу. Тобі потрібно створити функцію для кожного окремого тла своєї грі. Ти напишеш код, щоб вибирати відповідний фон на наступному рівні.\n\n-   [Покажи мені блок для створення нової функції](#triggercallout=callout1)\n-   [Покажи мені область у коді, щоб розмістити мою функцію](#triggercallout=callout2)\n\nПісля того, як ти створиш функції, протестуй їх, викликавши їх у циклі малювання, по одному фону на тест.\n\n-   [Покажи мені блок для виклику моєї функції](#triggercallout=callout3)",
        "CSD U3 game backgrounds_2021": "# Створення тла\n\nДалі ми створимо всі функції для тла, необхідного для гри. Деякі ігри мають лише один фон, а інші мають більше ніж один, який вибирається відповідно до результатів користувача або іншого аспекту ігрового процесу. Тобі потрібно створити функцію для кожного окремого тла своєї грі. Ти напишеш код, щоб вибирати відповідний фон на наступному рівні.\n\n-   [Покажи мені блок для створення нової функції](#triggercallout=callout1)\n-   [Покажи мені область у коді, щоб розмістити мою функцію](#triggercallout=callout2)\n\nПісля того, як ти створиш функції, протестуй їх, викликавши їх у циклі малювання, по одному фону на тест.\n\n-   [Покажи мені блок для виклику моєї функції](#triggercallout=callout3)",
        "CSD U3 game backgrounds_2022": "# Створення тла\n\nДалі ми створимо всі функції для тла, необхідного для гри. Деякі ігри мають лише один фон, а інші мають більше ніж один, який вибирається відповідно до результатів користувача або іншого аспекту ігрового процесу. Тобі потрібно створити функцію для кожного окремого тла своєї грі. Ти напишеш код, щоб вибирати відповідний фон на наступному рівні.\n\n-   [Покажи мені блок для створення нової функції](#triggercallout=callout1)\n-   [Покажи мені область у коді, щоб розмістити мою функцію](#triggercallout=callout2)\n\nПісля того, як ти створиш функції, протестуй їх, викликавши їх у циклі малювання, по одному фону на тест.\n\n-   [Покажи мені блок для виклику моєї функції](#triggercallout=callout3)",
        "CSD U3 game choose background_2021": "# Обираємо варіанти тла\n\nТепер, коли у тебе є потрібні варіанти тла, ти напишеш код для вибору правильного варіанта. Ми бачили, як це робиться в [Урок 24 Рівень 9](../../24/levels/9).\n\nПісля написання коду протестуй  його, змінивши початкові значення змінних і переконавшись, що відображається правильне тло.",
        "CSD U3 game choose background_2022": "# Обираємо варіанти тла\n\nТепер, коли у тебе є потрібні варіанти тла, ти напишеш код для вибору правильного варіанта. Ми бачили, як це робиться в [Урок 24 Рівень 9](../../24/levels/9).\n\nПісля написання коду протестуй  його, змінивши початкові значення змінних і переконавшись, що відображається правильне тло.",
        "CSD U3 game create sprites_2018": "# Створення спрайтів\n\nДалі ти створиш свої спрайти та задаси їм початкові властивості в області «Create Sprites» вашого коду. Для кожного спрайту потрібно:\n\n-   Створити спрайт у відповідному місці на екрані\n-   Задати його анімацію (або колір і розмір)\n-   Задати його швидкість і швидкість обертання, якщо потрібно\n-   Задати його колайдер і відскок, якщо потрібно\n\nСтворивши кожен спрайт, перевір його перед створенням наступного. Якщо спрайт починає рух поза екраном, спочатку розмісти його на екрані, щоб перевірити, а потім перемісти його назад, коли переконаєшся, що він працює правильно.\n\nЯкщо позицію спрайту потрібно буде скинути пізніше у грі, гарною ідеєю буде створити функцію, яка встановлює позицію цього спрайту, і використати її пізніше.",
        "CSD U3 game create sprites_2019": "# Створення спрайтів\n\nДалі ти створиш свої спрайти та задаси їм початкові властивості в області «Create Sprites» вашого коду. Для кожного спрайту потрібно:\n\n-   Створити спрайт у відповідному місці на екрані\n-   Задати його анімацію (або колір і розмір)\n-   Задати його швидкість і швидкість обертання, якщо потрібно\n-   Задати його колайдер і відскок, якщо потрібно\n\nСтворивши кожен спрайт, перевір його перед створенням наступного. Якщо спрайт починає рух поза екраном, спочатку розмісти його на екрані, щоб перевірити, а потім перемісти його назад, коли переконаєшся, що він працює правильно.\n\nЯкщо позицію спрайту потрібно буде скинути пізніше у грі, гарною ідеєю буде створити функцію, яка встановлює позицію цього спрайту, і використати її пізніше.",
        "CSD U3 game create sprites_2021": "# Створення спрайтів\n\nДалі ти створиш свої спрайти та задаси їм початкові властивості в області «Create Sprites» вашого коду. Для кожного спрайту потрібно:\n\n-   Створити спрайт у відповідному місці на екрані\n-   Задати його анімацію (або колір і розмір)\n-   Задати його швидкість і швидкість обертання, якщо потрібно\n-   Задати його колайдер і відскок, якщо потрібно\n\nСтворивши кожен спрайт, перевір його перед створенням наступного. Якщо спрайт починає рух поза екраном, спочатку розмісти його на екрані, щоб перевірити, а потім перемісти його назад, коли переконаєшся, що він працює правильно.\n\nЯкщо позицію спрайту потрібно буде скинути пізніше у грі, гарною ідеєю буде створити функцію, яка встановлює позицію цього спрайту, і використати її пізніше.",
        "CSD U3 game create sprites_2022": "# Створення спрайтів\n\nДалі ти створиш свої спрайти та задаси їм початкові властивості в області «Create Sprites» вашого коду. Для кожного спрайту потрібно:\n\n-   Створити спрайт у відповідному місці на екрані\n-   Задати його анімацію (або колір і розмір)\n-   Задати його швидкість і швидкість обертання, якщо потрібно\n-   Задати його колайдер і відскок, якщо потрібно\n\nСтворивши кожен спрайт, перевір його перед створенням наступного. Якщо спрайт починає рух поза екраном, спочатку розмісти його на екрані, щоб перевірити, а потім перемісти його назад, коли переконаєшся, що він працює правильно.\n\nЯкщо позицію спрайту потрібно буде скинути пізніше у грі, гарною ідеєю буде створити функцію, яка встановлює позицію цього спрайту, і використати її пізніше.",
        "CSD U3 game display boards_2021": "# Інформаційне табло\n\nТепер, коли наші варіанти тла працюють, ти можеш додати табло. У більшості ігор є табло з результатами, але можна також відображати інформацію про рівень гравця або кількість життів, що залишилися. Щоб дізнатися, як створити табло, дивись [Урок 24, Рівень 9](../../24/levels/9).\n\nДля кожного табло:\n\n-   Створи функцію для відображення інформації\n-   Виклич функцію всередині циклу малювання\n\nОбов'язково протестуй свої табло, змінивши початкове значення змінних і переконавшись, що табло змінюється, коли ти запускаєш код.",
        "CSD U3 game display boards_2022": "# Інформаційне табло\n\nТепер, коли наші варіанти тла працюють, ти можеш додати табло. У більшості ігор є табло з результатами, але можна також відображати інформацію про рівень гравця або кількість життів, що залишилися. Щоб дізнатися, як створити табло, дивись [Урок 24, Рівень 9](../../24/levels/9).\n\nДля кожного табло:\n\n-   Створи функцію для відображення інформації\n-   Виклич функцію всередині циклу малювання\n\nОбов'язково протестуй свої табло, змінивши початкове значення змінних і переконавшись, що табло змінюється, коли ти запускаєш код.",
        "CSD U3 game interactions_2021": "# Взаємодія спрайтів\n\nОстанній крок - створення функцій, які змусять твої спрайти взаємодіяти у потрібний спосіб. Тобі знадобиться функція для кожного типу взаємодії спрайтів. Ти можеш використати функції `collectItems` з [Урок 26 Завдання 17](../../26/levels/17) і  `displaceEnemies` у [Урок 25 Завдання 12](../../25/levels/12) як приклади.\n\nДля кожної взаємодії:\n\n-   Створи функцію в області функцій свого коду\n-   Виклич функцію всередині циклу малювання\n\nПісля того, як ти створиш кожну функцію, запусти код, щоб протестувати її, перш ніж створювати іншу.",
        "CSD U3 game interactions_2022": "# Взаємодія спрайтів\n\nОстанній крок - створення функцій, які змусять твої спрайти взаємодіяти у потрібний спосіб. Тобі знадобиться функція для кожного типу взаємодії спрайтів. Ти можеш використати функції `collectItems` з [Урок 26 Завдання 17](../../26/levels/17) і  `displaceEnemies` у [Урок 25 Завдання 12](../../25/levels/12) як приклади.\n\nДля кожної взаємодії:\n\n-   Створи функцію в області функцій свого коду\n-   Виклич функцію всередині циклу малювання\n\nПісля того, як ти створиш кожну функцію, запусти код, щоб протестувати її, перш ніж створювати іншу.",
        "CSD U3 game sprite movement_2021": "# Функції руху спрайтів\n\nТепер ти напишеш функції, які змушують спрайт рухатися по-різному під час гри.  Деякі приклади функцій, які ми вже писали: `loopPlatforms` у [Урок 26 Завдання 9](../../26/levels/9) та `playerFall` у [Урок 26 Завдання 14](../../26/levels/14).\n\nДля кожного руху:\n\n-   Створи функцію, яка змусить спрайт рухатися таким чином\n-   Виклич функцію всередині циклу малювання",
        "CSD U3 game sprite movement_2022": "# Функції руху спрайтів\n\nТепер ти напишеш функції, які змушують спрайт рухатися по-різному під час гри.  Деякі приклади функцій, які ми вже писали: `loopPlatforms` у [Урок 26 Завдання 9](../../26/levels/9) та `playerFall` у [Урок 26 Завдання 14](../../26/levels/14).\n\nДля кожного руху:\n\n-   Створи функцію, яка змусить спрайт рухатися таким чином\n-   Виклич функцію всередині циклу малювання",
        "CSD U3 game user controls_2021": "# Елементи керування\n\nДалі потрібно переконатися, що елементи керування працюють. Створи функцію, яка змусить спрайти реагувати на елементи керування користувача, як визначено в плані проєкту. Можна використати функцію з [Урок 26 Завдання 13](../../26/levels/13) як приклад.",
        "CSD U3 game user controls_2022": "# Елементи керування\n\nДалі потрібно переконатися, що елементи керування працюють. Створи функцію, яка змусить спрайти реагувати на елементи керування користувача, як визначено в плані проєкту. Можна використати функцію з [Урок 26 Завдання 13](../../26/levels/13) як приклад.",
        "CSD U3 game variables": "# Створення змінних\n\nПо-перше, потрібно буде створити всі змінні та помістити їх у область змінних свого коду.\n\n-   [Покажи мені цей блок](#triggercallout=callout1)\n-   [Покажи мені цю область у коді](#triggercallout=callout2)\n\nНе забувай, що кожна змінна потребує назви та початкового значення. Змінити значення змінної можна пізніше у коді.",
        "CSD U3 game variables_2018": "# Створення змінних\n\nПо-перше, потрібно буде створити всі змінні та помістити їх у область змінних свого коду.\n\n-   [Покажи мені цей блок](#triggercallout=callout1)\n-   [Покажи мені цю область у коді](#triggercallout=callout2)\n\nНе забувай, що кожна змінна потребує назви та початкового значення. Змінити значення змінної можна пізніше у коді.",
        "CSD U3 game variables_2019": "# Створення змінних\n\nПо-перше, потрібно буде створити всі змінні та помістити їх у область змінних свого коду.\n\n-   [Покажи мені цей блок](#triggercallout=callout1)\n-   [Покажи мені цю область у коді](#triggercallout=callout2)\n\nНе забувай, що кожна змінна потребує назви та початкового значення. Змінити значення змінної можна пізніше у коді.",
        "CSD U3 game variables_2021": "# Створення змінних\n\nПо-перше, потрібно буде створити всі змінні та помістити їх у область змінних свого коду.\n\n-   [Покажи мені цей блок](#triggercallout=callout1)\n-   [Покажи мені цю область у коді](#triggercallout=callout2)\n\nНе забувай, що кожна змінна потребує назви та початкового значення. Змінити значення змінної можна пізніше у коді.",
        "CSD U3 game variables_2022": "# Створення змінних\n\nПо-перше, потрібно буде створити всі змінні та помістити їх у область змінних свого коду.\n\n-   [Покажи мені цей блок](#triggercallout=callout1)\n-   [Покажи мені цю область у коді](#triggercallout=callout2)\n\nНе забувай, що кожна змінна потребує назви та початкового значення. Змінити значення змінної можна пізніше у коді.",
        "CSD U3 keydown conditional_2021": "# Зміна спрайтів\n\nЦя програма використовує блок `keyDown` для визначення натискання певної клавіші.\n\n# Завдання\n\n-   Запусти код і спробуй натиснути клавіші \"p\" і \"h\".\n-   Подивися на команду умови, щоб побачити, як працює код.\n-   Додай блок всередину третього оператора `if`, щоб змінити анімацію на іншу тварину.",
        "CSD U3 keydown conditional_2022": "# Зміна спрайтів\n\nЦя програма використовує блок `keyDown` для визначення натискання певної клавіші.\n\n# Завдання\n\n-   Запусти код і спробуй натиснути клавіші \"p\" і \"h\".\n-   Подивися на команду умови, щоб побачити, як працює код.\n-   Додай блок всередину третього оператора `if`, щоб змінити анімацію на іншу тварину.",
        "CSD U3 parameters shape scene_2021": "# Намалюй сцену з фігур\n\nТепер, коли у тебе є кілька нових блоків, вирішуй, що ти хочеш ними намалювати.\n\n# Завдання\n\n* Намалюй сцену.  Для натхнення можеш використати сцени, наведені нижче.\n\n<img src=\"https://images.code.org/c4f937728760a22079fc1c38ac300984-image-1566088819489.39.48 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/d8bbcfd08bd76090903eb1eeadab53a9-image-1566088832981.24.42 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/e424ac937fbd5d6a219b1f1744a30084-image-1566088839042.16.14 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/28e9f2963706078d80a8f06e84eaa2fb-image-1566095034917.18.19 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/4d966b1ce5450d2cbcea8ac40ffd1988-image-1566095039922.23.16 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">",
        "CSD U3 parameters shape scene_2022": "# Намалюй сцену з фігур\n\nТепер, коли у тебе є кілька нових блоків, вирішуй, що ти хочеш ними намалювати.\n\n# Завдання\n\n* Намалюй сцену.  Для натхнення можеш використати сцени, наведені нижче.\n\n<img src=\"https://images.code.org/c4f937728760a22079fc1c38ac300984-image-1566088819489.39.48 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/d8bbcfd08bd76090903eb1eeadab53a9-image-1566088832981.24.42 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/e424ac937fbd5d6a219b1f1744a30084-image-1566088839042.16.14 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/28e9f2963706078d80a8f06e84eaa2fb-image-1566095034917.18.19 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">\n\n<img src=\"https://images.code.org/4d966b1ce5450d2cbcea8ac40ffd1988-image-1566095039922.23.16 PM.png\" style=\"float:left; height: 200px; margin: 15px;\">",
        "CSD U3 picture_2021": "# Завдання: намалюй зображення\n\nНа попередньому уроці ви з партнером створили кілька цікавих зображень. Спробуй відтворити одне з них за допомогою коду.  Ти можеш обрати будь-яке зі створених вами зображень!\n",
        "CSD U3 picture_2022": "# Завдання: намалюй зображення\n\nНа попередньому уроці ви з партнером створили кілька цікавих зображень. Спробуй відтворити одне з них за допомогою коду.  Ти можеш обрати будь-яке зі створених вами зображень!\n",
        "CSD U3 platform background1": "# Тло\n\nПерше, що ми створимо для своєї гри, це тло. Зразок гри мав два різних фони, які вибиралися відповідно до результатів користувача. Перший фон вже створено. Переглянь функцію `background1` у коді нижче, щоб побачити, як вона працює. ([Покажи мені де](#triggercallout=code_triggered1))\n\nДля того, щоб фонова функція щось робила, потрібно викликати її всередині циклу малювання. ([Покажи мені де](#triggercallout=code_triggered2))\n\nІснує також порожня функція під назвою `background2`. ([Покажи мені де](#triggercallout=code_triggered3)) Потрібно буде заповнити цю функцію новим кодом, щоб створити інший фон, а потім викликати цю функцію всередині циклу малювання.\n\n# Завдання\n\n-   Переглянь код для `background1`.\n-   Заповни функцію `background2` новим кодом для другого фону.\n-   Перевір свою функцію `background2`, викликавши її всередині циклу малювання.\n\n_Підказка: у текстовому режимі набагато простіше копіювати, вставляти та вносити невеликі зміни до коду._",
        "CSD U3 platform background1_2018": "# Тло\n\nПерше, що ми створимо для своєї гри, це тло. Зразок гри мав два різних фони, які вибиралися відповідно до результатів користувача. Перший фон вже створено. Переглянь функцію `background1` у коді нижче, щоб побачити, як вона працює. ([Покажи мені де](#triggercallout=code_triggered1))\n\nДля того, щоб фонова функція щось робила, потрібно викликати її всередині циклу малювання. ([Покажи мені де](#triggercallout=code_triggered2))\n\nІснує також порожня функція під назвою `background2`. ([Покажи мені де](#triggercallout=code_triggered3)) Потрібно буде заповнити цю функцію новим кодом, щоб створити інший фон, а потім викликати цю функцію всередині циклу малювання.\n\n# Завдання\n\n-   Переглянь код для `background1`.\n-   Заповни функцію `background2` новим кодом для другого фону.\n-   Перевір свою функцію `background2`, викликавши її всередині циклу малювання.\n\n_Підказка: у текстовому режимі набагато простіше копіювати, вставляти та вносити невеликі зміни до коду._",
        "CSD U3 platform background1_2019": "# Тло\n\nПерше, що ми створимо для своєї гри, це тло. Зразок гри мав два різних фони, які вибиралися відповідно до результатів користувача. Перший фон вже створено. Переглянь функцію `background1` у коді нижче, щоб побачити, як вона працює. ([Покажи мені де](#triggercallout=code_triggered1))\n\nДля того, щоб фонова функція щось робила, потрібно викликати її всередині циклу малювання. ([Покажи мені де](#triggercallout=code_triggered2))\n\nІснує також порожня функція під назвою `background2`. ([Покажи мені де](#triggercallout=code_triggered3)) Потрібно буде заповнити цю функцію новим кодом, щоб створити інший фон, а потім викликати цю функцію всередині циклу малювання.\n\n# Завдання\n\n-   Переглянь код для `background1`.\n-   Заповни функцію `background2` новим кодом для другого фону.\n-   Перевір свою функцію `background2`, викликавши її всередині циклу малювання.\n\n_Підказка: у текстовому режимі набагато простіше копіювати, вставляти та вносити невеликі зміни до коду._",
        "CSD U3 platform background1_2021": "# Тло\n\nПерше, що ми створимо для своєї гри, це тло. Зразок гри мав два різних фони, які вибиралися відповідно до результатів користувача. Перший фон вже створено. Переглянь функцію `background1` у коді нижче, щоб побачити, як вона працює. ([Покажи мені де](#triggercallout=code_triggered1))\n\nДля того, щоб фонова функція щось робила, потрібно викликати її всередині циклу малювання. ([Покажи мені де](#triggercallout=code_triggered2))\n\nІснує також порожня функція під назвою `background2`. ([Покажи мені де](#triggercallout=code_triggered3)) Потрібно буде заповнити цю функцію новим кодом, щоб створити інший фон, а потім викликати цю функцію всередині циклу малювання.\n\n# Завдання\n\n-   Переглянь код для `background1`.\n-   Заповни функцію `background2` новим кодом для другого фону.\n-   Перевір свою функцію `background2`, викликавши її всередині циклу малювання.\n\n_Підказка: у текстовому режимі набагато простіше копіювати, вставляти та вносити невеликі зміни до коду._",
        "CSD U3 platform background1_2022": "# Тло\n\nПерше, що ми створимо для своєї гри, це тло. Зразок гри мав два різних фони, які вибиралися відповідно до результатів користувача. Перший фон вже створено. Переглянь функцію `background1` у коді нижче, щоб побачити, як вона працює. ([Покажи мені де](#triggercallout=code_triggered1))\n\nДля того, щоб фонова функція щось робила, потрібно викликати її всередині циклу малювання. ([Покажи мені де](#triggercallout=code_triggered2))\n\nІснує також порожня функція під назвою `background2`. ([Покажи мені де](#triggercallout=code_triggered3)) Потрібно буде заповнити цю функцію новим кодом, щоб створити інший фон, а потім викликати цю функцію всередині циклу малювання.\n\n# Завдання\n\n-   Переглянь код для `background1`.\n-   Заповни функцію `background2` новим кодом для другого фону.\n-   Перевір свою функцію `background2`, викликавши її всередині циклу малювання.\n\n_Підказка: у текстовому режимі набагато простіше копіювати, вставляти та вносити невеликі зміни до коду._",
        "CSD U3 platform background2_2021": "# Обираємо тло\n\nТепер, коли у нас є змінна рахунку, можна використовувати її для вибору правильного тла для своєї гри.  Приклад зміни фону відповідно до значення рахунку можна подивитися в [Урок 24 Рівень 9](../../24/levels/9)\n\n# Завдання\n\n-   Усередині циклу малювання використовуй команду `якщо` та дві функції тла, щоб намалювати тло відповідно до рахунку.\n-   Протестуй свій код, змінивши початкову кількість балів на 100, а потім запусти код, щоб побачити, чи зміниться фон.\n\nДодаткове завдання:  Якщо у тебе є третє тло, ти можеш натиснути знак \"плюс\" внизу блоку \"якщо\".  З'явиться ще одне місце для третьої функції тла, а також місце для повторної перевірки результату.\\_",
        "CSD U3 platform background2_2022": "# Обираємо тло\n\nТепер, коли у нас є змінна рахунку, можна використовувати її для вибору правильного тла для своєї гри.  Приклад зміни фону відповідно до значення рахунку можна подивитися в [Урок 24 Рівень 9](../../24/levels/9)\n\n# Завдання\n\n-   Усередині циклу малювання використовуй команду `якщо` та дві функції тла, щоб намалювати тло відповідно до рахунку.\n-   Протестуй свій код, змінивши початкову кількість балів на 100, а потім запусти код, щоб побачити, чи зміниться фон.\n\nДодаткове завдання:  Якщо у тебе є третє тло, ти можеш натиснути знак \"плюс\" внизу блоку \"якщо\".  З'явиться ще одне місце для третьої функції тла, а також місце для повторної перевірки результату.\\_",
        "CSD U3 platform challenge animationfacing_2021": "<img style=\"float: right\" src=\"https://images.code.org/ffa1fc4ceadb146f2054bb0d36fb62fd-image-1589999874975.16.18 PM.png\" width=\"75\">\n<img style=\"float: right\" src=\"https://images.code.org/5ee1e16f1d5434da20814f179cfadce2-image-1589999867082.16.07 PM.png\" width=\"100\">\n\n# Зміна напрямку анімації\n\nВкладка Анімація дозволяє дублювати анімацію спрайтів і вносити зміни, наприклад, перевертати зображення по горизонталі. Знайди та поекспериментуй з наведеними тут опціями самостійно.\n\nТи можеш запрограмувати анімацію гравця змінювати напрямок під час руху гравця зліва направо.\n\n# Завдання\n- Підготуй анімацію для повороту гравця ліворуч і праворуч. Назви  кожну анімацію так, як вважаєш за потрібне.\n- У нашій функції `controlPlayer` додай код для:\n  - Переходу до \"лівої\" анімації, коли натискається клавіша вліво.\n  - Переходу до \"правої\" анімації, коли натискається клавіша вправо.",
        "CSD U3 platform challenge animationfacing_2022": "<img style=\"float: right\" src=\"https://images.code.org/ffa1fc4ceadb146f2054bb0d36fb62fd-image-1589999874975.16.18 PM.png\" width=\"75\">\n<img style=\"float: right\" src=\"https://images.code.org/5ee1e16f1d5434da20814f179cfadce2-image-1589999867082.16.07 PM.png\" width=\"100\">\n\n# Зміна напрямку анімації\n\nВкладка Анімація дозволяє дублювати анімацію спрайтів і вносити зміни, наприклад, перевертати зображення по горизонталі. Знайди та поекспериментуй з наведеними тут опціями самостійно.\n\nТи можеш запрограмувати анімацію гравця змінювати напрямок під час руху гравця зліва направо.\n\n# Завдання\n- Підготуй анімацію для повороту гравця ліворуч і праворуч. Назви  кожну анімацію так, як вважаєш за потрібне.\n- У нашій функції `controlPlayer` додай код для:\n  - Переходу до \"лівої\" анімації, коли натискається клавіша вліво.\n  - Переходу до \"правої\" анімації, коли натискається клавіша вправо.",
        "CSD U3 platform challenge animations_2021": "# Додавання нових анімацій\n\nЗроби свою гру тематичною, надавши спрайтам нову анімацію. Ти можеш намалювати власну анімацію або обрати одну з тих, що є в Ігрова Лабораторія.\n\n# Завдання\n- Встанови нову анімацію персонажа.\n  - Ти навіть можеш створити анімацію для руху ліворуч і праворуч.\n- Зміни анімацію платформ.\n- Зміни анімацію для предметів, які збирає персонаж.",
        "CSD U3 platform challenge animations_2022": "# Додавання нових анімацій\n\nЗроби свою гру тематичною, надавши спрайтам нову анімацію. Ти можеш намалювати власну анімацію або обрати одну з тих, що є в Ігрова Лабораторія.\n\n# Завдання\n- Встанови нову анімацію персонажа.\n  - Ти навіть можеш створити анімацію для руху ліворуч і праворуч.\n- Зміни анімацію платформ.\n- Зміни анімацію для предметів, які збирає персонаж.",
        "CSD U3 platform challenge differentitem_2021": "# Інші типи предметів\n\nТи можеш додати різні типи предметів, щоб гравець міг їх збирати або уникати.\n\n# Завдання\n- Намалюй або знайди нову анімацію для предмета.\n- Створи новий спрайт з анімацією. Він повинен з'являтись у випадковому місці.\n- Відрегулюй швидкість предмета, щоб змусити його рухатися.\n- Запрограмуй нову взаємодію всередині функції `collectItems`.",
        "CSD U3 platform challenge differentitem_2022": "# Інші типи предметів\n\nТи можеш додати різні типи предметів, щоб гравець міг їх збирати або уникати.\n\n# Завдання\n- Намалюй або знайди нову анімацію для предмета.\n- Створи новий спрайт з анімацією. Він повинен з'являтись у випадковому місці.\n- Відрегулюй швидкість предмета, щоб змусити його рухатися.\n- Запрограмуй нову взаємодію всередині функції `collectItems`.",
        "CSD U3 platform challenge lives_2021": "# Додавання життів\n\nТи можеш додати змінну, яка відстежує, скільки життів залишилося у гравця, і завершує гру, якщо вони закінчуються.\n\n# Завдання\n- Створи змінну типу `lives` і встанови для неї початкове значення, наприклад, 3.\n- Намалюй на екрані текст, який показує напис `\"Життя: \"` та значення змінної `lives`.\n- Перевір, чи позиція гравця за віссю Y перебуває за межами екрана (`player.y  > 400`) і якщо так - відніми одиницю від результату.\n- Додаткове завдання: Перевір, чи залишилося 0 життів, і зміни спрайти або фон, щоб показати, що гра закінчилася.",
        "CSD U3 platform challenge lives_2022": "# Додавання життів\n\nТи можеш додати змінну, яка відстежує, скільки життів залишилося у гравця, і завершує гру, якщо вони закінчуються.\n\n# Завдання\n- Створи змінну типу `lives` і встанови для неї початкове значення, наприклад, 3.\n- Намалюй на екрані текст, який показує напис `\"Життя: \"` та значення змінної `lives`.\n- Перевір, чи позиція гравця за віссю Y перебуває за межами екрана (`player.y  > 400`) і якщо так - відніми одиницю від результату.\n- Додаткове завдання: Перевір, чи залишилося 0 життів, і зміни спрайти або фон, щоб показати, що гра закінчилася.",
        "CSD U3 platform challenge sidewalls_2021": "# Спрайти країв\n\nСпеціальна команда `createEdgeSprites();` створює чотири великі спрайти по краях екрана, приховані з поля зору. Після створення цих спрайтів ти можеш запрограмувати інші спрайти на зіткнення з ними, що є простим способом запобігти переміщенню об'єктів за межі екрана!\n\n![](https://images.code.org/54a4a0d9d8168cd5363316a67d7a6e23-image-1589992067763.gif)![](https://images.code.org/14d133db384e5e45ee7f25dfad3c1241-image-1589991471283.gif)\n\n*Крайні спрайти (ліворуч) і зіткнення з крайніми спрайтами (праворуч)*\n# Завдання\n- Використай команду `createEdgeSprites();` в основній частині твоєї програми, де ти створюєш інші спрайти.\n- Створи нову функцію `sideWalls();` яка повинна:\n  - Зробити так, щоб спрайт гравця **зіштовхувався** зі спеціальним прихованим спрайтом з ім'ям `leftEdge`.\n  - Зробити так, щоб спрайт гравця **зіштовхувався** зі спеціальним прихованим спрайтом з ім'ям `rightEdge`.\n- Виклич функцію `sideWalls();` десь всередині свого **циклу малювання**.\n\n\n\n",
        "CSD U3 platform challenge sidewalls_2022": "# Спрайти країв\n\nСпеціальна команда `createEdgeSprites();` створює чотири великі спрайти по краях екрана, приховані з поля зору. Після створення цих спрайтів ти можеш запрограмувати інші спрайти на зіткнення з ними, що є простим способом запобігти переміщенню об'єктів за межі екрана!\n\n![](https://images.code.org/54a4a0d9d8168cd5363316a67d7a6e23-image-1589992067763.gif)![](https://images.code.org/14d133db384e5e45ee7f25dfad3c1241-image-1589991471283.gif)\n\n*Крайні спрайти (ліворуч) і зіткнення з крайніми спрайтами (праворуч)*\n# Завдання\n- Використай команду `createEdgeSprites();` в основній частині твоєї програми, де ти створюєш інші спрайти.\n- Створи нову функцію `sideWalls();` яка повинна:\n  - Зробити так, щоб спрайт гравця **зіштовхувався** зі спеціальним прихованим спрайтом з ім'ям `leftEdge`.\n  - Зробити так, щоб спрайт гравця **зіштовхувався** зі спеціальним прихованим спрайтом з ім'ям `rightEdge`.\n- Виклич функцію `sideWalls();` десь всередині свого **циклу малювання**.\n\n\n\n",
        "CSD U3 platform items1": "# Створення предметів\n\n<img src=\"https://images.code.org/2cdb64a2e23e68c8a86296240642cd13-image-1476211650103.gif\" style=\"float:right;\">\n\nДалі нам потрібно додати предмети, які падають з верхньої частини екрана. Вони рухаються так само, як платформи, але швидше. Щоб зробити гру цікавішою, предмети починають рух у випадковому місці над екраном. У прикладі гри позиція Х предмета є випадковим числом від 50 до 350, а позиція Y є випадковим числом від -30 до -60.\n\n# Завдання\n\n-   Використовуй блок `createSprite`, щоб створити спрайт предмета в розділі \"create sprites\".\n-   Використовуй блок `randomNumber` у блоці `createSprite`, щоб розмістити елемент у випадковій позиції X та Y.\n-   Використовуй `setAnimation` і `velocityY`, щоб надати своєму спрайту правильне зображення та змусити його падати з верхньої частини екрана.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items1_2018": "# Створення предметів\n\n<img src=\"https://images.code.org/2cdb64a2e23e68c8a86296240642cd13-image-1476211650103.gif\" style=\"float:right;\">\n\nДалі нам потрібно додати предмети, які падають з верхньої частини екрана. Вони рухаються так само, як платформи, але швидше. Щоб зробити гру цікавішою, предмети починають рух у випадковому місці над екраном. У прикладі гри позиція Х предмета є випадковим числом від 50 до 350, а позиція Y є випадковим числом від -30 до -60.\n\n# Завдання\n\n-   Використовуй блок `createSprite`, щоб створити спрайт предмета в розділі \"create sprites\".\n-   Використовуй блок `randomNumber` у блоці `createSprite`, щоб розмістити елемент у випадковій позиції X та Y.\n-   Використовуй `setAnimation` і `velocityY`, щоб надати своєму спрайту правильне зображення та змусити його падати з верхньої частини екрана.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items1_2019": "# Створення предметів\n\n<img src=\"https://images.code.org/2cdb64a2e23e68c8a86296240642cd13-image-1476211650103.gif\" style=\"float:right;\">\n\nДалі нам потрібно додати предмети, які падають з верхньої частини екрана. Вони рухаються так само, як платформи, але швидше. Щоб зробити гру цікавішою, предмети починають рух у випадковому місці над екраном. У прикладі гри позиція Х предмета є випадковим числом від 50 до 350, а позиція Y є випадковим числом від -30 до -60.\n\n# Завдання\n\n-   Використовуй блок `createSprite`, щоб створити спрайт предмета в розділі \"create sprites\".\n-   Використовуй блок `randomNumber` у блоці `createSprite`, щоб розмістити елемент у випадковій позиції X та Y.\n-   Використовуй `setAnimation` і `velocityY`, щоб надати своєму спрайту правильне зображення та змусити його падати з верхньої частини екрана.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items1_2021": "# Створення предметів\n\n<img src=\"https://images.code.org/2cdb64a2e23e68c8a86296240642cd13-image-1476211650103.gif\" style=\"float:right;\">\n\nДалі нам потрібно додати предмети, які падають з верхньої частини екрана. Вони рухаються так само, як платформи, але швидше. Щоб зробити гру цікавішою, предмети починають рух у випадковому місці над екраном. У прикладі гри позиція Х предмета є випадковим числом від 50 до 350, а позиція Y є випадковим числом від -30 до -60.\n\n# Завдання\n\n-   Використовуй блок `createSprite`, щоб створити спрайт предмета в розділі \"create sprites\".\n-   Використовуй блок `randomNumber` у блоці `createSprite`, щоб розмістити елемент у випадковій позиції X та Y.\n-   Використовуй `setAnimation` і `velocityY`, щоб надати своєму спрайту правильне зображення та змусити його падати з верхньої частини екрана.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items1_2022": "# Створення предметів\n\n<img src=\"https://images.code.org/2cdb64a2e23e68c8a86296240642cd13-image-1476211650103.gif\" style=\"float:right;\">\n\nДалі нам потрібно додати предмети, які падають з верхньої частини екрана. Вони рухаються так само, як платформи, але швидше. Щоб зробити гру цікавішою, предмети починають рух у випадковому місці над екраном. У прикладі гри позиція Х предмета є випадковим числом від 50 до 350, а позиція Y є випадковим числом від -30 до -60.\n\n# Завдання\n\n-   Використовуй блок `createSprite`, щоб створити спрайт предмета в розділі \"create sprites\".\n-   Використовуй блок `randomNumber` у блоці `createSprite`, щоб розмістити елемент у випадковій позиції X та Y.\n-   Використовуй `setAnimation` і `velocityY`, щоб надати своєму спрайту правильне зображення та змусити його падати з верхньої частини екрана.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items2": "# Зациклюємо предмет\n\n<img src=\"https://images.code.org/bf06ad06acbba65dfd48b63608a08c90-image-1476212006882.gif\" style=\"float:right\">\nТепер, коли наш предмет падає, можна додати код, щоб зациклити його переміщення назад угору. Це подібно до того, що ми робили для спрайту платформи, але спрайт предмета повертатиметься до випадкового розташування X та Y, коли він перейде у верхню частину екрана.\n\n# Завдання\n\n-   Створи функцію `loopItems`, яка використовує блок `if`, щоб перевірити, чи спрайт предмета знаходиться поза межами нижньої частини екрана, а потім надсилає елемент назад у випадкову позицію X та Y, як це було під час першого створення спрайту.\n-   Виклич цю функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items2_2018": "# Зациклюємо предмет\n\n<img src=\"https://images.code.org/bf06ad06acbba65dfd48b63608a08c90-image-1476212006882.gif\" style=\"float:right\">\nТепер, коли наш предмет падає, можна додати код, щоб зациклити його переміщення назад угору. Це подібно до того, що ми робили для спрайту платформи, але спрайт предмета повертатиметься до випадкового розташування X та Y, коли він перейде у верхню частину екрана.\n\n# Завдання\n\n-   Створи функцію `loopItems`, яка використовує блок `if`, щоб перевірити, чи спрайт предмета знаходиться поза межами нижньої частини екрана, а потім надсилає елемент назад у випадкову позицію X та Y, як це було під час першого створення спрайту.\n-   Виклич цю функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items2_2019": "# Зациклюємо предмет\n\n<img src=\"https://images.code.org/bf06ad06acbba65dfd48b63608a08c90-image-1476212006882.gif\" style=\"float:right\">\nТепер, коли наш предмет падає, можна додати код, щоб зациклити його переміщення назад угору. Це подібно до того, що ми робили для спрайту платформи, але спрайт предмета повертатиметься до випадкового розташування X та Y, коли він перейде у верхню частину екрана.\n\n# Завдання\n\n-   Створи функцію `loopItems`, яка використовує блок `if`, щоб перевірити, чи спрайт предмета знаходиться поза межами нижньої частини екрана, а потім надсилає елемент назад у випадкову позицію X та Y, як це було під час першого створення спрайту.\n-   Виклич цю функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items2_2021": "# Зациклюємо предмет\n\n<img src=\"https://images.code.org/bf06ad06acbba65dfd48b63608a08c90-image-1476212006882.gif\" style=\"float:right\">\nТепер, коли наш предмет падає, можна додати код, щоб зациклити його переміщення назад угору. Це подібно до того, що ми робили для спрайту платформи, але спрайт предмета повертатиметься до випадкового розташування X та Y, коли він перейде у верхню частину екрана.\n\n# Завдання\n\n-   Створи функцію `loopItems`, яка використовує блок `if`, щоб перевірити, чи спрайт предмета знаходиться поза межами нижньої частини екрана, а потім надсилає елемент назад у випадкову позицію X та Y, як це було під час першого створення спрайту.\n-   Виклич цю функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items2_2022": "# Зациклюємо предмет\n\n<img src=\"https://images.code.org/bf06ad06acbba65dfd48b63608a08c90-image-1476212006882.gif\" style=\"float:right\">\nТепер, коли наш предмет падає, можна додати код, щоб зациклити його переміщення назад угору. Це подібно до того, що ми робили для спрайту платформи, але спрайт предмета повертатиметься до випадкового розташування X та Y, коли він перейде у верхню частину екрана.\n\n# Завдання\n\n-   Створи функцію `loopItems`, яка використовує блок `if`, щоб перевірити, чи спрайт предмета знаходиться поза межами нижньої частини екрана, а потім надсилає елемент назад у випадкову позицію X та Y, як це було під час першого створення спрайту.\n-   Виклич цю функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свій спрайт.",
        "CSD U3 platform items3": "# Створення другого предмета\n\n<img src=\"https://images.code.org/dfd53f2ea4b4380c126dde8035bcdc45-image-1476212495388.gif\" style=\"float: right\">\n\nДалі ми скопіюємо та вставимо код першого предмета, щоб створити другий. Пам’ятайте, що це набагато легше робити в **текстовому режимі**, тому обов’язково спробуйте його.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили предмет, і частину функції `loopItem`, де ми його зациклили повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який ми використали для створення першого спрайту елемента (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «star», цей можна назвати «star2».\n-   Усередині функції `loopItems` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.",
        "CSD U3 platform items3_2018": "# Створення другого предмета\n\n<img src=\"https://images.code.org/dfd53f2ea4b4380c126dde8035bcdc45-image-1476212495388.gif\" style=\"float: right\">\n\nДалі ми скопіюємо та вставимо код першого предмета, щоб створити другий. Пам’ятайте, що це набагато легше робити в **текстовому режимі**, тому обов’язково спробуйте його.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили предмет, і частину функції `loopItem`, де ми його зациклили повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який ми використали для створення першого спрайту елемента (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «star», цей можна назвати «star2».\n-   Усередині функції `loopItems` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.",
        "CSD U3 platform items3_2019": "# Створення другого предмета\n\n<img src=\"https://images.code.org/dfd53f2ea4b4380c126dde8035bcdc45-image-1476212495388.gif\" style=\"float: right\">\n\nДалі ми скопіюємо та вставимо код першого предмета, щоб створити другий. Пам’ятайте, що це набагато легше робити в **текстовому режимі**, тому обов’язково спробуйте його.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили предмет, і частину функції `loopItem`, де ми його зациклили повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який ми використали для створення першого спрайту елемента (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «star», цей можна назвати «star2».\n-   Усередині функції `loopItems` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.",
        "CSD U3 platform items3_2021": "# Створення другого предмета\n\n<img src=\"https://images.code.org/dfd53f2ea4b4380c126dde8035bcdc45-image-1476212495388.gif\" style=\"float: right\">\n\nДалі ми скопіюємо та вставимо код першого предмета, щоб створити другий. Пам’ятайте, що це набагато легше робити в **текстовому режимі**, тому обов’язково спробуйте його.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили предмет, і частину функції `loopItem`, де ми його зациклили повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який ми використали для створення першого спрайту елемента (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «star», цей можна назвати «star2».\n-   Усередині функції `loopItems` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.",
        "CSD U3 platform items3_2022": "# Створення другого предмета\n\n<img src=\"https://images.code.org/dfd53f2ea4b4380c126dde8035bcdc45-image-1476212495388.gif\" style=\"float: right\">\n\nДалі ми скопіюємо та вставимо код першого предмета, щоб створити другий. Пам’ятайте, що це набагато легше робити в **текстовому режимі**, тому обов’язково спробуйте його.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили предмет, і частину функції `loopItem`, де ми його зациклили повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який ми використали для створення першого спрайту елемента (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «star», цей можна назвати «star2».\n-   Усередині функції `loopItems` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.",
        "CSD U3 platform platform1": "# Створи спрайт платформи\n\n<img src=\"https://images.code.org/6e5aa80eb72809d761a695fae1b42b81-image-1476210749306.gif\" style=\"float: right;\">\n\nТепер, коли у нас є фон і змінні, настав час створити спрайти. Зазвичай найпростіше почати зі спрайтів, які є частиною середовища, наприклад, наших платформ. У прикладі гри було два спрайти платформи, але спочатку ми створимо лише один, і протестуємо його, перш ніж копіювати та вставляти код для створення другого.\n\n# Завдання\n\n-   Переглянь свій робочий аркуш і вибери спрайт для платформи.\n-   В області «Створення спрайтів» у верхній частині коду створи новий спрайт за допомогою блоку `createSprite`, вказавши йому відповідну позицію та назву. ([Покажи мені блок](#triggercallout=callout))\n-   Використовуй блоки `setAnimation` і `velocityY`, щоб задати своєму спрайту зображення та швидкість руху вниз.\n-   Перевір спрайт, щоб переконатися, що він рухається правильно. Може знадобитися відрегулювати його швидкість.\n\n_Підказка: спрайт зникне з екрана та не повернеться. Ми повернемо його назад на наступному рівні._",
        "CSD U3 platform platform1_2018": "# Створи спрайт платформи\n\n<img src=\"https://images.code.org/6e5aa80eb72809d761a695fae1b42b81-image-1476210749306.gif\" style=\"float: right;\">\n\nТепер, коли у нас є фон і змінні, настав час створити спрайти. Зазвичай найпростіше почати зі спрайтів, які є частиною середовища, наприклад, наших платформ. У прикладі гри було два спрайти платформи, але спочатку ми створимо лише один, і протестуємо його, перш ніж копіювати та вставляти код для створення другого.\n\n# Завдання\n\n-   Переглянь свій робочий аркуш і вибери спрайт для платформи.\n-   В області «Створення спрайтів» у верхній частині коду створи новий спрайт за допомогою блоку `createSprite`, вказавши йому відповідну позицію та назву. ([Покажи мені блок](#triggercallout=callout))\n-   Використовуй блоки `setAnimation` і `velocityY`, щоб задати своєму спрайту зображення та швидкість руху вниз.\n-   Перевір спрайт, щоб переконатися, що він рухається правильно. Може знадобитися відрегулювати його швидкість.\n\n_Підказка: спрайт зникне з екрана та не повернеться. Ми повернемо його назад на наступному рівні._",
        "CSD U3 platform platform1_2019": "# Створи спрайт платформи\n\n<img src=\"https://images.code.org/6e5aa80eb72809d761a695fae1b42b81-image-1476210749306.gif\" style=\"float: right;\">\n\nТепер, коли у нас є фон і змінні, настав час створити спрайти. Зазвичай найпростіше почати зі спрайтів, які є частиною середовища, наприклад, наших платформ. У прикладі гри було два спрайти платформи, але спочатку ми створимо лише один, і протестуємо його, перш ніж копіювати та вставляти код для створення другого.\n\n# Завдання\n\n-   Переглянь свій робочий аркуш і вибери спрайт для платформи.\n-   В області «Створення спрайтів» у верхній частині коду створи новий спрайт за допомогою блоку `createSprite`, вказавши йому відповідну позицію та назву. ([Покажи мені блок](#triggercallout=callout))\n-   Використовуй блоки `setAnimation` і `velocityY`, щоб задати своєму спрайту зображення та швидкість руху вниз.\n-   Перевір спрайт, щоб переконатися, що він рухається правильно. Може знадобитися відрегулювати його швидкість.\n\n_Підказка: спрайт зникне з екрана та не повернеться. Ми повернемо його назад на наступному рівні._",
        "CSD U3 platform platform1_2021": "# Створи спрайт платформи\n\n<img src=\"https://images.code.org/6e5aa80eb72809d761a695fae1b42b81-image-1476210749306.gif\" style=\"float: right;\">\n\nТепер, коли у нас є фон і змінні, настав час створити спрайти. Зазвичай найпростіше почати зі спрайтів, які є частиною середовища, наприклад, наших платформ. У прикладі гри було два спрайти платформи, але спочатку ми створимо лише один, і протестуємо його, перш ніж копіювати та вставляти код для створення другого.\n\n# Завдання\n\n-   Переглянь свій робочий аркуш і вибери спрайт для платформи.\n-   В області «Створення спрайтів» у верхній частині коду створи новий спрайт за допомогою блоку `createSprite`, вказавши йому відповідну позицію та назву. ([Покажи мені блок](#triggercallout=callout))\n-   Використовуй блоки `setAnimation` і `velocityY`, щоб задати своєму спрайту зображення та швидкість руху вниз.\n-   Перевір спрайт, щоб переконатися, що він рухається правильно. Може знадобитися відрегулювати його швидкість.\n\n_Підказка: спрайт зникне з екрана та не повернеться. Ми повернемо його назад на наступному рівні._",
        "CSD U3 platform platform1_2022": "# Створи спрайт платформи\n\n<img src=\"https://images.code.org/6e5aa80eb72809d761a695fae1b42b81-image-1476210749306.gif\" style=\"float: right;\">\n\nТепер, коли у нас є фон і змінні, настав час створити спрайти. Зазвичай найпростіше почати зі спрайтів, які є частиною середовища, наприклад, наших платформ. У прикладі гри було два спрайти платформи, але спочатку ми створимо лише один, і протестуємо його, перш ніж копіювати та вставляти код для створення другого.\n\n# Завдання\n\n-   Переглянь свій робочий аркуш і вибери спрайт для платформи.\n-   В області «Створення спрайтів» у верхній частині коду створи новий спрайт за допомогою блоку `createSprite`, вказавши йому відповідну позицію та назву. ([Покажи мені блок](#triggercallout=callout))\n-   Використовуй блоки `setAnimation` і `velocityY`, щоб задати своєму спрайту зображення та швидкість руху вниз.\n-   Перевір спрайт, щоб переконатися, що він рухається правильно. Може знадобитися відрегулювати його швидкість.\n\n_Підказка: спрайт зникне з екрана та не повернеться. Ми повернемо його назад на наступному рівні._",
        "CSD U3 platform platform2_2021": "# Програмуємо цикл для спрайта платформи\n\n<img src=\"https://images.code.org/6bfe6dd078b2022315a7f54a38c90826-image-1476211068588.gif\" style=\"float: right;\">\n\nЗараз спрайт платформи рухається вниз, але не повертається назад у верхню частину екрана. Переглянь [Урок 20, Рівень 6](../../20/levels/6), щоб побачити приклад спрайта, який рухається по екрану циклічно.\n\n# Завдання\n\n-   Використай блок `function` для створення функції `loopPlatforms` в самому кінці коду.\n-   Використай блок `if` всередині функції, щоб перевірити, чи вийшла платформа за межі нижньої частини екрана, і, якщо це сталося, перемістити її назад у верхню частину екрана.\n-   Виклич функцію всередині циклу малювання, в області \"update sprites\".\n-   Запусти код, щоб протестувати спрайт.\n\n_Підказка: Яким буде значення platform.y коли спрайт виходить за нижню межу екрана?  Яким має бути значення platform.y, коли вона повертається назад у верхню частину екрана?_",
        "CSD U3 platform platform2_2022": "# Програмуємо цикл для спрайта платформи\n\n<img src=\"https://images.code.org/6bfe6dd078b2022315a7f54a38c90826-image-1476211068588.gif\" style=\"float: right;\">\n\nЗараз спрайт платформи рухається вниз, але не повертається назад у верхню частину екрана. Переглянь [Урок 20, Рівень 6](../../20/levels/6), щоб побачити приклад спрайта, який рухається по екрану циклічно.\n\n# Завдання\n\n-   Використай блок `function` для створення функції `loopPlatforms` в самому кінці коду.\n-   Використай блок `if` всередині функції, щоб перевірити, чи вийшла платформа за межі нижньої частини екрана, і, якщо це сталося, перемістити її назад у верхню частину екрана.\n-   Виклич функцію всередині циклу малювання, в області \"update sprites\".\n-   Запусти код, щоб протестувати спрайт.\n\n_Підказка: Яким буде значення platform.y коли спрайт виходить за нижню межу екрана?  Яким має бути значення platform.y, коли вона повертається назад у верхню частину екрана?_",
        "CSD U3 platform platform3": "# Створюємо другу платформу\n\n<img src=\"https://images.code.org/94abf92949a82f6ba18a8cfafb9231b1-image-1476211447371.gif\" style=\"float:right;\">\n\nСтворити другу платформу буде легше, ніж першу, оскільки можна скопіювати та вставити багато коду, а потім внести кілька невеликих змін. Це набагато простіше робити в _текстовому режимі_, тож обов’язково спробуй використати його, якщо ще не було нагоди спробувати раніше.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили платформу, і частину функції `loopPlatforms`, де ми зациклили платформу повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який вми використали для створення першого спрайту платформи (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «platform», другий можна назвати «platform2».\n-   Зміни початкову позицію нового спрайту платформи.\n-   Усередині функції `loopPlatforms` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.\n\n_Завдання: можна зробити так, щоб платформи відображалися у випадкових Х позиціях, коли вони повертаються до верхньої частини екрана._",
        "CSD U3 platform platform3_2018": "# Створюємо другу платформу\n\n<img src=\"https://images.code.org/94abf92949a82f6ba18a8cfafb9231b1-image-1476211447371.gif\" style=\"float:right;\">\n\nСтворити другу платформу буде легше, ніж першу, оскільки можна скопіювати та вставити багато коду, а потім внести кілька невеликих змін. Це набагато простіше робити в _текстовому режимі_, тож обов’язково спробуй використати його, якщо ще не було нагоди спробувати раніше.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили платформу, і частину функції `loopPlatforms`, де ми зациклили платформу повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який вми використали для створення першого спрайту платформи (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «platform», другий можна назвати «platform2».\n-   Зміни початкову позицію нового спрайту платформи.\n-   Усередині функції `loopPlatforms` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.\n\n_Завдання: можна зробити так, щоб платформи відображалися у випадкових Х позиціях, коли вони повертаються до верхньої частини екрана._",
        "CSD U3 platform platform3_2019": "# Створюємо другу платформу\n\n<img src=\"https://images.code.org/94abf92949a82f6ba18a8cfafb9231b1-image-1476211447371.gif\" style=\"float:right;\">\n\nСтворити другу платформу буде легше, ніж першу, оскільки можна скопіювати та вставити багато коду, а потім внести кілька невеликих змін. Це набагато простіше робити в _текстовому режимі_, тож обов’язково спробуй використати його, якщо ще не було нагоди спробувати раніше.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили платформу, і частину функції `loopPlatforms`, де ми зациклили платформу повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який вми використали для створення першого спрайту платформи (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «platform», другий можна назвати «platform2».\n-   Зміни початкову позицію нового спрайту платформи.\n-   Усередині функції `loopPlatforms` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.\n\n_Завдання: можна зробити так, щоб платформи відображалися у випадкових Х позиціях, коли вони повертаються до верхньої частини екрана._",
        "CSD U3 platform platform3_2021": "# Створюємо другу платформу\n\n<img src=\"https://images.code.org/94abf92949a82f6ba18a8cfafb9231b1-image-1476211447371.gif\" style=\"float:right;\">\n\nСтворити другу платформу буде легше, ніж першу, оскільки можна скопіювати та вставити багато коду, а потім внести кілька невеликих змін. Це набагато простіше робити в _текстовому режимі_, тож обов’язково спробуй використати його, якщо ще не було нагоди спробувати раніше.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили платформу, і частину функції `loopPlatforms`, де ми зациклили платформу повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який вми використали для створення першого спрайту платформи (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «platform», другий можна назвати «platform2».\n-   Зміни початкову позицію нового спрайту платформи.\n-   Усередині функції `loopPlatforms` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.\n\n_Завдання: можна зробити так, щоб платформи відображалися у випадкових Х позиціях, коли вони повертаються до верхньої частини екрана._",
        "CSD U3 platform platform3_2022": "# Створюємо другу платформу\n\n<img src=\"https://images.code.org/94abf92949a82f6ba18a8cfafb9231b1-image-1476211447371.gif\" style=\"float:right;\">\n\nСтворити другу платформу буде легше, ніж першу, оскільки можна скопіювати та вставити багато коду, а потім внести кілька невеликих змін. Це набагато простіше робити в _текстовому режимі_, тож обов’язково спробуй використати його, якщо ще не було нагоди спробувати раніше.\n\nНам потрібно буде скопіювати дві частини коду: частину на початку, де ми створили платформу, і частину функції `loopPlatforms`, де ми зациклили платформу повертатись назад у верхню частину екрана.\n\n# Завдання\n\n-   Скопіюй код, який вми використали для створення першого спрайту платформи (`createSprite`, `setAnimation` і `velocityY`), і встав його безпосередньо під оригінальним кодом.\n-   Зміни імена спрайтів у нових рядках. Наприклад, якщо оригінальний спрайт називався «platform», другий можна назвати «platform2».\n-   Зміни початкову позицію нового спрайту платформи.\n-   Усередині функції `loopPlatforms` скопіюй оператор if, а потім встав його безпосередньо під оригінальним кодом у функції.\n-   Зміни назву спрайту в нових рядках коду.\n-   Запусти свій код, щоб перевірити його.\n\n_Завдання: можна зробити так, щоб платформи відображалися у випадкових Х позиціях, коли вони повертаються до верхньої частини екрана._",
        "CSD U3 platform player1_2021": "# Створюємо гравця\n\n<img src=\"https://images.code.org/8358b8d2eef2461e113e0b3093da7403-image-1476212944204.gif\" style=\"float:right\">\n\nТепер ми можемо створити спрайт гравця. Так само як і спрайти предметів, спрайт гравця падатиме з верхньої частини екрана.  На відміну від предметів, спрайт гравця прискорюватиметься під час падіння, як і реальні об'єкти, якіпадають. Це дозволить йому підстрибувати вгору і падати назад.\n\n# Завдання\n\n-   Використовуй блок `createSprite`, щоб створити спрайт гравця з назвою та початковою позицією, як було заплановано на робочому аркуші.\n-   Використай блок `setAnimation`, щоб задати правильне зображення спрайта.\n-   Створи функцію `playerFall`, яка змушує спрайт падати з верхньої частини екрана. Код всередині функції повинен використовувати `velocityY` у шаблоні лічильника так само, як ми робили для падіння каменя в [Урок 21 Рівень 3](../../21/levels/3).\n-   Виклич функції `playerFall` всередині циклу малювання.\n-   Запусти код, щоб протестувати спрайт.",
        "CSD U3 platform player1_2022": "# Створюємо гравця\n\n<img src=\"https://images.code.org/8358b8d2eef2461e113e0b3093da7403-image-1476212944204.gif\" style=\"float:right\">\n\nТепер ми можемо створити спрайт гравця. Так само як і спрайти предметів, спрайт гравця падатиме з верхньої частини екрана.  На відміну від предметів, спрайт гравця прискорюватиметься під час падіння, як і реальні об'єкти, якіпадають. Це дозволить йому підстрибувати вгору і падати назад.\n\n# Завдання\n\n-   Використовуй блок `createSprite`, щоб створити спрайт гравця з назвою та початковою позицією, як було заплановано на робочому аркуші.\n-   Використай блок `setAnimation`, щоб задати правильне зображення спрайта.\n-   Створи функцію `playerFall`, яка змушує спрайт падати з верхньої частини екрана. Код всередині функції повинен використовувати `velocityY` у шаблоні лічильника так само, як ми робили для падіння каменя в [Урок 21 Рівень 3](../../21/levels/3).\n-   Виклич функції `playerFall` всередині циклу малювання.\n-   Запусти код, щоб протестувати спрайт.",
        "CSD U3 platform player2_2021": "# Елементи керування\n\nДалі слід додати елементи керування, щоб можна було переміщати гравця. Гравець повинен рухатися ліворуч, коли натиснута клавіша зі стрілкою ліворуч, і праворуч, коли натиснута клавіша зі стрілкою праворуч, а також стрибати, коли натиснута клавіша пробіл.\n\n# Завдання\n\n-   Створи нову функцію `controlPlayer` в області \"функції\" свого коду.\n-   Всередині функції `controlPlayer` використовуй блоки `if`, `keyDown` та `sprite.x`, щоб змусити гравця рухатися вліво та вправо відповідно до клавіш зі стрілками. Дивись приклад в [Урок 15 Рівень 7](../../15/levels/7).\n-   Всередині функції `controlPlayer` використовуй блоки `if`, `keyDown` та `velocityY`, щоб змусити гравця стрибати, коли натискається стрілка вгору. Дивись приклади в [Урок 20, рівень 5](../../20/levels/5).\n-   Виклич функцію `controlPlayer` всередині циклу малювання.\n-   Запусти гру і протестуй свій код.",
        "CSD U3 platform player3": "# Взаємодія гравців\n\nОстанньою частиною створення гри є програмування взаємодії гравця з іншими спрайтами. По-перше, гравець повинен приземлятися на платформи.\n\n# Завдання\n\n-   Створи функцію `playerLands` і додай її до області \"функції\" вашого коду.\n-   Усередині функції використай блок `collide`, щоб гравець міг приземлитися на обидві платформи.\n-   Викликай функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свою функцію.",
        "CSD U3 platform player3_2018": "# Взаємодія гравців\n\nОстанньою частиною створення гри є програмування взаємодії гравця з іншими спрайтами. По-перше, гравець повинен приземлятися на платформи.\n\n# Завдання\n\n-   Створи функцію `playerLands` і додай її до області \"функції\" вашого коду.\n-   Усередині функції використай блок `collide`, щоб гравець міг приземлитися на обидві платформи.\n-   Викликай функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свою функцію.",
        "CSD U3 platform player3_2019": "# Взаємодія гравців\n\nОстанньою частиною створення гри є програмування взаємодії гравця з іншими спрайтами. По-перше, гравець повинен приземлятися на платформи.\n\n# Завдання\n\n-   Створи функцію `playerLands` і додай її до області \"функції\" вашого коду.\n-   Усередині функції використай блок `collide`, щоб гравець міг приземлитися на обидві платформи.\n-   Викликай функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свою функцію.",
        "CSD U3 platform player3_2021": "# Взаємодія гравців\n\nОстанньою частиною створення гри є програмування взаємодії гравця з іншими спрайтами. По-перше, гравець повинен приземлятися на платформи.\n\n# Завдання\n\n-   Створи функцію `playerLands` і додай її до області \"функції\" вашого коду.\n-   Усередині функції використай блок `collide`, щоб гравець міг приземлитися на обидві платформи.\n-   Викликай функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свою функцію.",
        "CSD U3 platform player3_2022": "# Взаємодія гравців\n\nОстанньою частиною створення гри є програмування взаємодії гравця з іншими спрайтами. По-перше, гравець повинен приземлятися на платформи.\n\n# Завдання\n\n-   Створи функцію `playerLands` і додай її до області \"функції\" вашого коду.\n-   Усередині функції використай блок `collide`, щоб гравець міг приземлитися на обидві платформи.\n-   Викликай функцію всередині циклу малювання.\n-   Запусти код, щоб перевірити свою функцію.",
        "CSD U3 platform player4_2021": "# Збирання предметів\n\nІ нарешті, нам треба, щоб наш гравець збирав предмети, які падають з верхньої частини екрана.\n\n# Завдання\n\n-   Створи функцію `collectItems` і додай її в область \"functions\" свого коду.\n-   Використовуй блоки `if` та `isTouching` для зміни позиції X та Y елементів, коли гравець торкається їх. Переглянь функцію `loopItem`, щоб дізнатися, як скинути позицію предмета.\n-   Усередині команди умови додай шаблон лічильника, який збільшуватиме кількість балів щоразу, коли гравець торкнеться предмета.  Для прикладу дивись [Урок 24 Завдання 10](../../24/levels/10).\n-   Виклич функцію всередині циклу малювання, в області \"update sprites\".\n-   Запусти код, щоб протестувати свою функцію.",
        "CSD U3 platform player4_2022": "# Збирання предметів\n\nІ нарешті, нам треба, щоб наш гравець збирав предмети, які падають з верхньої частини екрана.\n\n# Завдання\n\n-   Створи функцію `collectItems` і додай її в область \"functions\" свого коду.\n-   Використовуй блоки `if` та `isTouching` для зміни позиції X та Y елементів, коли гравець торкається їх. Переглянь функцію `loopItem`, щоб дізнатися, як скинути позицію предмета.\n-   Усередині команди умови додай шаблон лічильника, який збільшуватиме кількість балів щоразу, коли гравець торкнеться предмета.  Для прикладу дивись [Урок 24 Завдання 10](../../24/levels/10).\n-   Виклич функцію всередині циклу малювання, в області \"update sprites\".\n-   Запусти код, щоб протестувати свою функцію.",
        "CSD U3 platform review_2021": "# Перевірка своєї гри\n\nПереглянь свій план проєкту і зіграй у гру кілька разів, щоб переконатися, що все зроблено правильно.\n\n-   Чи рухається спрайт гравця так, як він має рухатися?\n-   Чи всі взаємодії працюють?\n-   Чи правильно рухаються платформи?\n-   Чи працює табло?",
        "CSD U3 platform review_2022": "# Перевірка своєї гри\n\nПереглянь свій план проєкту і зіграй у гру кілька разів, щоб переконатися, що все зроблено правильно.\n\n-   Чи рухається спрайт гравця так, як він має рухатися?\n-   Чи всі взаємодії працюють?\n-   Чи правильно рухаються платформи?\n-   Чи працює табло?",
        "CSD U3 platform sample1": "# Гра \"Стрибунець\"\n\nГра ліворуч є прикладом стрибків на платформі. Натисни «Запустити», щоб спробувати пограти. Інопланетянина можна змусити стрибати стрілкою вгору, а також переміщати його вліво і вправо за допомогою клавіш зі стрілками. Гравець отримує очки, збираючи зірки, і якщо набереш достатньо високих балів, фон зміниться.\n\nМи вже знаємо, як використовувати всі блоки, необхідні для створення такої гри, тож на цьому уроці ти створиш свій власний платформер.",
        "CSD U3 platform sample1_2018": "# Гра \"Стрибунець\"\n\nГра ліворуч є прикладом стрибків на платформі. Натисни «Запустити», щоб спробувати пограти. Інопланетянина можна змусити стрибати стрілкою вгору, а також переміщати його вліво і вправо за допомогою клавіш зі стрілками. Гравець отримує очки, збираючи зірки, і якщо набереш достатньо високих балів, фон зміниться.\n\nМи вже знаємо, як використовувати всі блоки, необхідні для створення такої гри, тож на цьому уроці ти створиш свій власний платформер.",
        "CSD U3 platform sample1_2019": "# Гра \"Стрибунець\"\n\nГра ліворуч є прикладом стрибків на платформі. Натисни «Запустити», щоб спробувати пограти. Інопланетянина можна змусити стрибати стрілкою вгору, а також переміщати його вліво і вправо за допомогою клавіш зі стрілками. Гравець отримує очки, збираючи зірки, і якщо набереш достатньо високих балів, фон зміниться.\n\nМи вже знаємо, як використовувати всі блоки, необхідні для створення такої гри, тож на цьому уроці ти створиш свій власний платформер.",
        "CSD U3 platform sample1_2021": "# Гра \"Стрибунець\"\n\nГра ліворуч є прикладом стрибків на платформі. Натисни «Запустити», щоб спробувати пограти. Інопланетянина можна змусити стрибати стрілкою вгору, а також переміщати його вліво і вправо за допомогою клавіш зі стрілками. Гравець отримує очки, збираючи зірки, і якщо набереш достатньо високих балів, фон зміниться.\n\nМи вже знаємо, як використовувати всі блоки, необхідні для створення такої гри, тож на цьому уроці ти створиш свій власний платформер.",
        "CSD U3 platform sample1_2022": "# Гра \"Стрибунець\"\n\nГра ліворуч є прикладом стрибків на платформі. Натисни «Запустити», щоб спробувати пограти. Інопланетянина можна змусити стрибати стрілкою вгору, а також переміщати його вліво і вправо за допомогою клавіш зі стрілками. Гравець отримує очки, збираючи зірки, і якщо набереш достатньо високих балів, фон зміниться.\n\nМи вже знаємо, як використовувати всі блоки, необхідні для створення такої гри, тож на цьому уроці ти створиш свій власний платформер.",
        "CSD U3 platform sample2": "# Літачок-стрибунець\n\nОсь ще один приклад стрибунця платформами, але він має ще кілька особливостей. Можна його використати, щоб отримати ідеї для покращення власної гри. Наприклад, бачимо монетний спрайт, який дає гравцеві додаткове життя.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Вибери нові анімації для свого гравця, платформи та предметів.\n-   Зроби неможливим вихід гравця за межі лівого або правого краю екрана.\n-   Додай різні типи предметів, які гравець може збирати або уникати.\n-   Додай змінну, яка відстежує кількість життів у гравця, і завершуй гру, коли гравець грограє.",
        "CSD U3 platform sample2_2018": "# Літачок-стрибунець\n\nОсь ще один приклад стрибунця платформами, але він має ще кілька особливостей. Можна його використати, щоб отримати ідеї для покращення власної гри. Наприклад, бачимо монетний спрайт, який дає гравцеві додаткове життя.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Вибери нові анімації для свого гравця, платформи та предметів.\n-   Зроби неможливим вихід гравця за межі лівого або правого краю екрана.\n-   Додай різні типи предметів, які гравець може збирати або уникати.\n-   Додай змінну, яка відстежує кількість життів у гравця, і завершуй гру, коли гравець грограє.",
        "CSD U3 platform sample2_2019": "# Літачок-стрибунець\n\nОсь ще один приклад стрибунця платформами, але він має ще кілька особливостей. Можна його використати, щоб отримати ідеї для покращення власної гри. Наприклад, бачимо монетний спрайт, який дає гравцеві додаткове життя.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Вибери нові анімації для свого гравця, платформи та предметів.\n-   Зроби неможливим вихід гравця за межі лівого або правого краю екрана.\n-   Додай різні типи предметів, які гравець може збирати або уникати.\n-   Додай змінну, яка відстежує кількість життів у гравця, і завершуй гру, коли гравець грограє.",
        "CSD U3 platform sample2_2021": "# Літачок-стрибунець\n\nОсь ще один приклад стрибунця платформами, але він має ще кілька особливостей. Можна його використати, щоб отримати ідеї для покращення власної гри. Наприклад, бачимо монетний спрайт, який дає гравцеві додаткове життя.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Вибери нові анімації для свого гравця, платформи та предметів.\n-   Зроби неможливим вихід гравця за межі лівого або правого краю екрана.\n-   Додай різні типи предметів, які гравець може збирати або уникати.\n-   Додай змінну, яка відстежує кількість життів у гравця, і завершуй гру, коли гравець грограє.",
        "CSD U3 platform sample3": "# Зайчик-стрибунець\n\nОсь ще один приклад стрибьунця. У цьому випадку предмети стають швидшими, коли падають, і відскакують від платформ.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Зроби так, щоб анімація гравця змінювала напрямок, коли гравець змінює напрямок.\n-   Додай інший фон і зроби так, щоб він з’явився, коли рахунок стане ще вищим.\n-   Зроби так, щоб предмети певним чином взаємодіяли з платформами.",
        "CSD U3 platform sample3_2018": "# Зайчик-стрибунець\n\nОсь ще один приклад стрибьунця. У цьому випадку предмети стають швидшими, коли падають, і відскакують від платформ.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Зроби так, щоб анімація гравця змінювала напрямок, коли гравець змінює напрямок.\n-   Додай інший фон і зроби так, щоб він з’явився, коли рахунок стане ще вищим.\n-   Зроби так, щоб предмети певним чином взаємодіяли з платформами.",
        "CSD U3 platform sample3_2019": "# Зайчик-стрибунець\n\nОсь ще один приклад стрибьунця. У цьому випадку предмети стають швидшими, коли падають, і відскакують від платформ.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Зроби так, щоб анімація гравця змінювала напрямок, коли гравець змінює напрямок.\n-   Додай інший фон і зроби так, щоб він з’явився, коли рахунок стане ще вищим.\n-   Зроби так, щоб предмети певним чином взаємодіяли з платформами.",
        "CSD U3 platform sample3_2021": "# Зайчик-стрибунець\n\nОсь ще один приклад стрибьунця. У цьому випадку предмети стають швидшими, коли падають, і відскакують від платформ.\n\nВибери одну чи кілька із наведених нижче змін і додай їх до своєї гри.\n\n-   Зроби так, щоб анімація гравця змінювала напрямок, коли гравець змінює напрямок.\n-   Додай інший фон і зроби так, щоб він з’явився, коли рахунок стане ще вищим.\n-   Зроби так, щоб предмети певним чином взаємодіяли з платформами.",
        "CSD U3 platform scoreboard_2021": "# Створюємо табло з рахунком\n\n<img src=\"https://images.code.org/ea490a1915a70676fd3a783adce93cdd-image-1476142534609.png\" style=\"float:right;\">\n\nНам знадобиться табло, щоб гравець міг стежити за рахунком. Функція  `showScore` вже написана, але вона показує лише текст \"Рахунок\", а не фактичний рахунок. ([Де саме](#triggercallout=code_triggered)) Приклад робочого табло можна подивитися в [Урок 24 Рівень 9](../../24/levels/9).\n\n# Завдання\n\n-   Переглянь код у функції `showScore`.\n-   Виклич цю функцію всередині циклу малювання, одразу після того, як  намалюєш тло.\n-   Використовуй блок `text` для відображення результату у верхній частині екрана.",
        "CSD U3 platform scoreboard_2022": "# Створюємо табло з рахунком\n\n<img src=\"https://images.code.org/ea490a1915a70676fd3a783adce93cdd-image-1476142534609.png\" style=\"float:right;\">\n\nНам знадобиться табло, щоб гравець міг стежити за рахунком. Функція  `showScore` вже написана, але вона показує лише текст \"Рахунок\", а не фактичний рахунок. ([Де саме](#triggercallout=code_triggered)) Приклад робочого табло можна подивитися в [Урок 24 Рівень 9](../../24/levels/9).\n\n# Завдання\n\n-   Переглянь код у функції `showScore`.\n-   Виклич цю функцію всередині циклу малювання, одразу після того, як  намалюєш тло.\n-   Використовуй блок `text` для відображення результату у верхній частині екрана.",
        "CSD U3 platform variable1": "# Змінна для балів\n\nТепер, коли ми створили тло, нам потрібно визначитись, коли кожен з цих фонів буде показано. Для цього нам знадобиться змінна рахунку, щоб зберігати інформацію про рахунок гравця.\n\nЗавжди потрібно надавати своїм змінним початкове значення на самому початку програми. Таким чином, вони будуть доступні для використання в подальшому коді.\n\n# Завдання\n\n-   Створи змінну рахунок на початку своєї програми. ( [Покажи мені цей блок](#triggercallout=callout) )\n-   Встанови рахунок рівним 0.",
        "CSD U3 platform variable1_2018": "# Змінна для балів\n\nТепер, коли ми створили тло, нам потрібно визначитись, коли кожен з цих фонів буде показано. Для цього нам знадобиться змінна рахунку, щоб зберігати інформацію про рахунок гравця.\n\nЗавжди потрібно надавати своїм змінним початкове значення на самому початку програми. Таким чином, вони будуть доступні для використання в подальшому коді.\n\n# Завдання\n\n-   Створи змінну рахунок на початку своєї програми. ( [Покажи мені цей блок](#triggercallout=callout) )\n-   Встанови рахунок рівним 0.",
        "CSD U3 platform variable1_2019": "# Змінна для балів\n\nТепер, коли ми створили тло, нам потрібно визначитись, коли кожен з цих фонів буде показано. Для цього нам знадобиться змінна рахунку, щоб зберігати інформацію про рахунок гравця.\n\nЗавжди потрібно надавати своїм змінним початкове значення на самому початку програми. Таким чином, вони будуть доступні для використання в подальшому коді.\n\n# Завдання\n\n-   Створи змінну рахунок на початку своєї програми. ( [Покажи мені цей блок](#triggercallout=callout) )\n-   Встанови рахунок рівним 0.",
        "CSD U3 platform variable1_2021": "# Змінна для балів\n\nТепер, коли ми створили тло, нам потрібно визначитись, коли кожен з цих фонів буде показано. Для цього нам знадобиться змінна рахунку, щоб зберігати інформацію про рахунок гравця.\n\nЗавжди потрібно надавати своїм змінним початкове значення на самому початку програми. Таким чином, вони будуть доступні для використання в подальшому коді.\n\n# Завдання\n\n-   Створи змінну рахунок на початку своєї програми. ( [Покажи мені цей блок](#triggercallout=callout) )\n-   Встанови рахунок рівним 0.",
        "CSD U3 platform variable1_2022": "# Змінна для балів\n\nТепер, коли ми створили тло, нам потрібно визначитись, коли кожен з цих фонів буде показано. Для цього нам знадобиться змінна рахунку, щоб зберігати інформацію про рахунок гравця.\n\nЗавжди потрібно надавати своїм змінним початкове значення на самому початку програми. Таким чином, вони будуть доступні для використання в подальшому коді.\n\n# Завдання\n\n-   Створи змінну рахунок на початку своєї програми. ( [Покажи мені цей блок](#triggercallout=callout) )\n-   Встанови рахунок рівним 0.",
        "CSD U3 practice deceleration_2021": "<img src=\"https://images.code.org/6851c208594b84d47dd15401a8d4ae8c-image-1592923375590.2020-06-23 10_42_38.gif\" style=\"float:right\">\n\n# Сповільнення і рух назад\n\nУ цій анімації миша біжить повз кота. Спробуймо змінити її так, щоб миша сповільнилася, зупинилася, не добігши до кота, а потім змінила напрямок, як показано на рисунку праворуч.\n\n# Завдання\n\n* Зверни увагу на поточну *швидкість по осі X* спрайта миші.\n* Використовуй шаблон лічильника, щоб змінити швидкість так, щоб вона наближалася до 0, а потім миша змінювала напрямок.\n  * Підказка: Оскільки миша починає рух з **від'ємною** швидкістю, нам потрібно **збільшити** її, щоб сповільнити рух.\n",
        "CSD U3 practice deceleration_2022": "<img src=\"https://images.code.org/6851c208594b84d47dd15401a8d4ae8c-image-1592923375590.2020-06-23 10_42_38.gif\" style=\"float:right\">\n\n# Сповільнення і рух назад\n\nУ цій анімації миша біжить повз кота. Спробуймо змінити її так, щоб миша сповільнилася, зупинилася, не добігши до кота, а потім змінила напрямок, як показано на рисунку праворуч.\n\n# Завдання\n\n* Зверни увагу на поточну *швидкість по осі X* спрайта миші.\n* Використовуй шаблон лічильника, щоб змінити швидкість так, щоб вона наближалася до 0, а потім миша змінювала напрямок.\n  * Підказка: Оскільки миша починає рух з **від'ємною** швидкістю, нам потрібно **збільшити** її, щоб сповільнити рух.\n",
        "CSD U3 properties depth_2021": "# Висота і ширина\n\nМи дізналися про властивість масштабування, яка збільшує або зменшує спрайт, зберігаючи незмінним співвідношення висоти до ширини. Але іншими властивостями можна змінювати лише висоту або ширину спрайта!\n\n## Завдання:\n\nВикористовуючи вже створений спрайт або будь-який інший спрайт на твій вибір, поекспериментуй  з властивостями висоти та ширини та подумай, де краще використовувати ці властивості, і де - властивість масштабу. \n\n",
        "CSD U3 properties depth_2022": "# Висота і ширина\n\nМи дізналися про властивість масштабування, яка збільшує або зменшує спрайт, зберігаючи незмінним співвідношення висоти до ширини. Але іншими властивостями можна змінювати лише висоту або ширину спрайта!\n\n## Завдання:\n\nВикористовуючи вже створений спрайт або будь-який інший спрайт на твій вибір, поекспериментуй  з властивостями висоти та ширини та подумай, де краще використовувати ці властивості, і де - властивість масштабу. \n\n",
        "CSD U3 properties tint_2021": "# Відтінок\n\nВідтінок - це властивість, яка накладає колір поверх спрайта, щоб відтінити його. Цей відтінок не змінює існуючі кольори спрайта, але більше схожий на накладання кольорового скла поверх нього.\n\n## Завдання:\n\nВикористовуючи вже створений спрайт або будь-які інші спрайти на твій вибір, поекспериментуй з властивістю відтінку і подивися, як вона працює і як змінюється на різних кольорових спрайтах!\n",
        "CSD U3 rect_2018": "# Досліджуємо Ігрову Лабораторію\n\nЛаскаво просимо до Ігрової Лабораторії, де можна створювати інтерактивні анімації та ігри!\n\nМи вже вивчили основи нанесення фігур на сітку. В Ігровій Лабораторії ми зробите те саме з областю відображення ліворуч.\n\n# Завдання\n\n-   Переглянь рядок коду в робочій області під цими інструкціями ( [Покажи мені де](#triggercallout=block_trigger) ) і обговори зі своїм партнером, де, на вашу думку, буде намальована фігура на сітці.\n-   Натисни <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20 PM.png\" width=100>, щоб запустити програму та подивитися, що станеться.\n-   Зміни числа всередині блоку, потім спробуй запустити програму ще раз.\n-   Спробуй розташувати прямокутник біля правого нижнього кута екрана.",
        "CSD U3 rect_2019": "# Досліджуємо Ігрову Лабораторію\n\nЛаскаво просимо до Ігрової Лабораторії, де можна створювати інтерактивні анімації та ігри!\n\nМи вже вивчили основи нанесення фігур на сітку. В Ігровій Лабораторії ми зробите те саме з областю відображення ліворуч.\n\n# Завдання\n\n-   Переглянь рядок коду в робочій області під цими інструкціями ( [Покажи мені де](#triggercallout=block_trigger) ) і обговори зі своїм партнером, де, на вашу думку, буде намальована фігура на сітці.\n-   Натисни <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20 PM.png\" width=100>, щоб запустити програму та подивитися, що станеться.\n-   Зміни числа всередині блоку, потім спробуй запустити програму ще раз.\n-   Спробуй розташувати прямокутник біля правого нижнього кута екрана.",
        "CSD U3 rect_2021": "# Досліджуємо Ігрову Лабораторію\n\nЛаскаво просимо до Ігрової Лабораторії, де можна створювати інтерактивні анімації та ігри!\n\nМи вже вивчили основи нанесення фігур на сітку. В Ігровій Лабораторії ми зробите те саме з областю відображення ліворуч.\n\n# Завдання\n\n-   Переглянь рядок коду в робочій області під цими інструкціями ( [Покажи мені де](#triggercallout=block_trigger) ) і обговори зі своїм партнером, де, на вашу думку, буде намальована фігура на сітці.\n-   Натисни <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20 PM.png\" width=100>, щоб запустити програму та подивитися, що станеться.\n-   Зміни числа всередині блоку, потім спробуй запустити програму ще раз.\n-   Спробуй розташувати прямокутник біля правого нижнього кута екрана.",
        "CSD U3 rect_2022": "# Досліджуємо Ігрову Лабораторію\n\nЛаскаво просимо до Ігрової Лабораторії, де можна створювати інтерактивні анімації та ігри!\n\nМи вже вивчили основи нанесення фігур на сітку. В Ігровій Лабораторії ми зробите те саме з областю відображення ліворуч.\n\n# Завдання\n\n-   Переглянь рядок коду в робочій області під цими інструкціями ( [Покажи мені де](#triggercallout=block_trigger) ) і обговори зі своїм партнером, де, на вашу думку, буде намальована фігура на сітці.\n-   Натисни <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20 PM.png\" width=100>, щоб запустити програму та подивитися, що станеться.\n-   Зміни числа всередині блоку, потім спробуй запустити програму ще раз.\n-   Спробуй розташувати прямокутник біля правого нижнього кута екрана.",
        "CSD U3 sequence": "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05 PM.png\" style=\"float:right\">\n\n# Порядок має значення\n\nВ Ігровій Лабораторії важливо, у якому порядку записаний код. Нові фігури малюються поверх тих, що з’явилися раніше, перекриваючи фігури, які малюються першими. Різницю можна побачити, якщо використати більше одного кольору для побудов.\n\n# Завдання\n\n-   Переглянь код, який малює два прямокутники. Перший намальований червоним, а другий синім.\n-   Зміни колір червоного прямокутника на зелений.\n-   Зміни порядок написаного коду, щоб зелений прямокутник з’явився зверху.",
        "CSD U3 sequence_2018": "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05 PM.png\" style=\"float:right\">\n\n# Порядок має значення\n\nВ Ігровій Лабораторії важливо, у якому порядку записаний код. Нові фігури малюються поверх тих, що з’явилися раніше, перекриваючи фігури, які малюються першими. Різницю можна побачити, якщо використати більше одного кольору для побудов.\n\n# Завдання\n\n-   Переглянь код, який малює два прямокутники. Перший намальований червоним, а другий синім.\n-   Зміни колір червоного прямокутника на зелений.\n-   Зміни порядок написаного коду, щоб зелений прямокутник з’явився зверху.",
        "CSD U3 sequence_2019": "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05 PM.png\" style=\"float:right\">\n\n# Порядок має значення\n\nВ Ігровій Лабораторії важливо, у якому порядку записаний код. Нові фігури малюються поверх тих, що з’явилися раніше, перекриваючи фігури, які малюються першими. Різницю можна побачити, якщо використати більше одного кольору для побудов.\n\n# Завдання\n\n-   Переглянь код, який малює два прямокутники. Перший намальований червоним, а другий синім.\n-   Зміни колір червоного прямокутника на зелений.\n-   Зміни порядок написаного коду, щоб зелений прямокутник з’явився зверху.",
        "CSD U3 sequence_2021": "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05 PM.png\" style=\"float:right\">\n\n# Порядок має значення\n\nВ Ігровій Лабораторії важливо, у якому порядку записаний код. Нові фігури малюються поверх тих, що з’явилися раніше, перекриваючи фігури, які малюються першими. Різницю можна побачити, якщо використати більше одного кольору для побудов.\n\n# Завдання\n\n-   Переглянь код, який малює два прямокутники. Перший намальований червоним, а другий синім.\n-   Зміни колір червоного прямокутника на зелений.\n-   Зміни порядок написаного коду, щоб зелений прямокутник з’явився зверху.",
        "CSD U3 sequence_2022": "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05 PM.png\" style=\"float:right\">\n\n# Порядок має значення\n\nВ Ігровій Лабораторії важливо, у якому порядку записаний код. Нові фігури малюються поверх тих, що з’явилися раніше, перекриваючи фігури, які малюються першими. Різницю можна побачити, якщо використати більше одного кольору для побудов.\n\n# Завдання\n\n-   Переглянь код, який малює два прямокутники. Перший намальований червоним, а другий синім.\n-   Зміни колір червоного прямокутника на зелений.\n-   Зміни порядок написаного коду, щоб зелений прямокутник з’явився зверху.",
        "CSD U3 shapes arc_2021": "# Новий блок: дуга\n\nКоманда `arc()` працює так само, як і `ellipse()`, за винятком двох додаткових параметрів. Ці параметри визначають два кути, які використовуються для створення дуги. \n\n# Завдання\n\n* Переглянь код і подивися, як працює блок 'arc'. Зверни увагу на **останні два параметри** у кожній команді `arc()`.\n* Коли зрозумієш, як працює блок 'arc', спробуй його використати!\n\n**Підказки:**\n* Для обох кутів 0 градусів - це праворуч. 90 градусів - вниз. 180 градусів - ліворуч. 270 градусів - вгору.\n* Дуга завжди малюється за годинниковою стрілкою від початкової до кінцевої точки на еліпсі. \n",
        "CSD U3 shapes arc_2022": "# Новий блок: дуга\n\nКоманда `arc()` працює так само, як і `ellipse()`, за винятком двох додаткових параметрів. Ці параметри визначають два кути, які використовуються для створення дуги. \n\n# Завдання\n\n* Переглянь код і подивися, як працює блок 'arc'. Зверни увагу на **останні два параметри** у кожній команді `arc()`.\n* Коли зрозумієш, як працює блок 'arc', спробуй його використати!\n\n**Підказки:**\n* Для обох кутів 0 градусів - це праворуч. 90 градусів - вниз. 180 градусів - ліворуч. 270 градусів - вгору.\n* Дуга завжди малюється за годинниковою стрілкою від початкової до кінцевої точки на еліпсі. \n",
        "CSD U3 shapes behind_2021": "<img src=\"https://images.code.org/c634f6594ea775e93346e152fe98b5a9-image-1586412462396.05.57 PM.png\" style=\"float:right; width: 150px;\">\n\n# Налагодження: приховані фігури\n\nКод нижче повинен створити гарну картинку, але зараз відображається лише один еліпс.  \n\n# Завдання\n\n* Налагодь цей код, щоб побачити картинку, таку як праворуч.",
        "CSD U3 shapes behind_2022": "<img src=\"https://images.code.org/c634f6594ea775e93346e152fe98b5a9-image-1586412462396.05.57 PM.png\" style=\"float:right; width: 150px;\">\n\n# Налагодження: приховані фігури\n\nКод нижче повинен створити гарну картинку, але зараз відображається лише один еліпс.  \n\n# Завдання\n\n* Налагодь цей код, щоб побачити картинку, таку як праворуч.",
        "CSD U3 shapes line_2021": "# Новий блок: лінія\n\nДосі ми малювали лише еліпси та прямокутники. Але тепер з'явився новий блок, який допоможе малювати самі лінії!\n<img src=\"https://images.code.org/095a9251e533c63411f87f4e57ebe919-image-1567026036725.PNG\" style=\"float:right;width:150px;\">\n\n# Завдання\n\n* Переглянь код, який створює картинку.\n* Використай блок `line`, щоб завершити код так, щоб він відповідав зображенню (використовуються лише прямі лінії!).\n* Попрацюй ще трохи з блоком `line` і подивися, що у тебе вийде.\n",
        "CSD U3 shapes line_2022": "# Новий блок: лінія\n\nДосі ми малювали лише еліпси та прямокутники. Але тепер з'явився новий блок, який допоможе малювати самі лінії!\n<img src=\"https://images.code.org/095a9251e533c63411f87f4e57ebe919-image-1567026036725.PNG\" style=\"float:right;width:150px;\">\n\n# Завдання\n\n* Переглянь код, який створює картинку.\n* Використай блок `line`, щоб завершити код так, щоб він відповідав зображенню (використовуються лише прямі лінії!).\n* Попрацюй ще трохи з блоком `line` і подивися, що у тебе вийде.\n",
        "CSD U3 shapes missing_2021": "<img src=\"https://images.code.org/122ae9e48210f88c7e1a403ac49e6481-image-1586412828471.11.56 PM.png\" style=\"float: right; width: 150px;\">\n\n# Налагодження: відсутні фігури\n\nКоли запускається код нижче, нічого не відображається. \n\n# Завдання\n\n* Налагодь код так, щоб відображалося зображення.\n",
        "CSD U3 shapes missing_2022": "<img src=\"https://images.code.org/122ae9e48210f88c7e1a403ac49e6481-image-1586412828471.11.56 PM.png\" style=\"float: right; width: 150px;\">\n\n# Налагодження: відсутні фігури\n\nКоли запускається код нижче, нічого не відображається. \n\n# Завдання\n\n* Налагодь код так, щоб відображалося зображення.\n",
        "CSD U3 shapes polygon_2021": "\n# Правильні багатокутники\n\nДосі ми малювали лише еліпси та прямокутники. Але тепер з'явився новий блок, який допоможе малювати інші фігури!\n<img src=\"https://images.code.org/d1a93722806f1dab50a897dee280b107-image-1566945343071.PNG\" style=\"float:right;width:150px;\">\n\n# Завдання\n\n* Переглянь код, який створює поточне зображення.\n* Використай блок `regularPolygon`, щоб завершити код так, щоб він відповідав зображенню праворуч.\n\n",
        "CSD U3 shapes polygon_2022": "\n# Правильні багатокутники\n\nДосі ми малювали лише еліпси та прямокутники. Але тепер з'явився новий блок, який допоможе малювати інші фігури!\n<img src=\"https://images.code.org/d1a93722806f1dab50a897dee280b107-image-1566945343071.PNG\" style=\"float:right;width:150px;\">\n\n# Завдання\n\n* Переглянь код, який створює поточне зображення.\n* Використай блок `regularPolygon`, щоб завершити код так, щоб він відповідав зображенню праворуч.\n\n",
        "CSD U3 shapes scene_2021": "# Домалюй сцену\n\nСцена нижче здається незавершеною. Прояви творчі здібності та домалюй зображення так, як тобі хочеться!\n",
        "CSD U3 shapes scene_2022": "# Домалюй сцену\n\nСцена нижче здається незавершеною. Прояви творчі здібності та домалюй зображення так, як тобі хочеться!\n",
        "CSD U3 shapes_2021": "# Форма\n\nДосі ми малювали лише еліпси та прямокутники. Але тепер з'явився новий блок, який допоможе малювати інші фігури!\n<img src=\"https://images.code.org/030e1530fb996ae1c0c1662ec4e3440a-image-1567014400477.PNG\" style=\"float:right;width:150px;\">\n\n# Завдання\n\n* Переглянь код, який створює картинку.\n* Використовуй блок `shape`, щоб завершити код так, щоб він відповідав зображенню.\n* Попрацюй ще трохи з блоком `shape` і подивися, що у тебе вийде\n",
        "CSD U3 shapes_2022": "# Форма\n\nДосі ми малювали лише еліпси та прямокутники. Але тепер з'явився новий блок, який допоможе малювати інші фігури!\n<img src=\"https://images.code.org/030e1530fb996ae1c0c1662ec4e3440a-image-1567014400477.PNG\" style=\"float:right;width:150px;\">\n\n# Завдання\n\n* Переглянь код, який створює картинку.\n* Використовуй блок `shape`, щоб завершити код так, щоб він відповідав зображенню.\n* Попрацюй ще трохи з блоком `shape` і подивися, що у тебе вийде\n",
        "CSD U4 test bug FR": "Обери одну помилку або додаткову функцію, яку виявили під час тестування користувачі, але яку ваша команда вирішила НЕ виправляти або не додавати.  Опиши помилку або функцію та поясни, чому ви не виправили або не додали її.",
        "CSD U4 test bug FR_2021": "Обери одну помилку або додаткову функцію, яку виявили під час тестування користувачі, але яку ваша команда вирішила НЕ виправляти або не додавати.  Опиши помилку або функцію та поясни, чому ви не виправили або не додали її.",
        "CSD U4 test bug FR_2022": "Обери одну помилку або додаткову функцію, яку виявили під час тестування користувачі, але яку ваша команда вирішила НЕ виправляти або не додавати.  Опиши помилку або функцію та поясни, чому ви не виправили або не додали її.",
        "CSD U4 test empathy FR": "Обери один приклад того, в чому ви та ваш користувач маєте різні потреби.  Опиши різницю і поясни, як ваш застосунок задовольняє потреби користувача, а не ваші власні.",
        "CSD U4 test empathy FR_2021": "Обери один приклад того, в чому ви та ваш користувач маєте різні потреби.  Опиши різницю і поясни, як ваш застосунок задовольняє потреби користувача, а не ваші власні.",
        "CSD U4 test empathy FR_2022": "Обери один приклад того, в чому ви та ваш користувач маєте різні потреби.  Опиши різницю і поясни, як ваш застосунок задовольняє потреби користувача, а не ваші власні.",
        "CSD U4 test prototype FR": "У своєму проєкті ви використовували як паперові, так і цифрові прототипи.  Поясни одну перевагу паперового прототипа та одну перевагу цифрового прототипа.",
        "CSD U4 test prototype FR_2021": "У своєму проєкті ви використовували як паперові, так і цифрові прототипи.  Поясни одну перевагу паперового прототипа та одну перевагу цифрового прототипа.",
        "CSD U4 test prototype FR_2022": "У своєму проєкті ви використовували як паперові, так і цифрові прототипи.  Поясни одну перевагу паперового прототипа та одну перевагу цифрового прототипа.",
        "CSD U5 Pizza_2021": "# Піца-вечірка\n\nДані про вечірку з піцою були введені в програму, і до них були додані відповіді з іншого класу.  Оскільки це програма, ми можемо автоматизувати створення гістограми на основі даних.",
        "CSD U5 Pizza_2022": "# Піца-вечірка\n\nДані про вечірку з піцою були введені в програму, і до них були додані відповіді з іншого класу.  Оскільки це програма, ми можемо автоматизувати створення гістограми на основі даних.",
        "CSD U5 binary 8 bits-2021": "# 8-розрядні двійкові числа\n\nВикористовуй цей віджет для декодування 8-бітових двійкових чисел",
        "CSD U5 binary 8 bits_2022": "# 8-розрядні двійкові числа\n\nВикористовуй цей віджет для декодування 8-бітових двійкових чисел",
        "CSD U5 binary widget_2021": "# Двійковий віджет\n\nЦей віджет допоможе тобі обчислювати 6-розрядні двійкові числа. Використовуй  його, щоб відповісти на запитання до вправ цього уроку.",
        "CSD U5 binary widget_2022": "# Двійковий віджет\n\nЦей віджет допоможе тобі обчислювати 6-розрядні двійкові числа. Використовуй  його, щоб відповісти на запитання до вправ цього уроку.",
        "CSD U5 test automate FR": "У чому полягає один з недоліків автоматизації процесу прийняття рішень?",
        "CSD U5 test automate FR_2021": "У чому полягає один з недоліків автоматизації процесу прийняття рішень?",
        "CSD U5 test automate FR_2022": "У чому полягає один з недоліків автоматизації процесу прийняття рішень?",
        "CSD U5 test big data FR": "Назви вебсайт або програму, яка збирає дані користувачів.  Як ці дані допомагають розв'язувати проблеми для творців вебсайту або користувачів?",
        "CSD U5 test big data FR_2021": "Назви вебсайт або програму, яка збирає дані користувачів.  Як ці дані допомагають розв'язувати проблеми для творців вебсайту або користувачів?",
        "CSD U5 test big data FR_2022": "Назви вебсайт або програму, яка збирає дані користувачів.  Як ці дані допомагають розв'язувати проблеми для творців вебсайту або користувачів?",
        "CSD U5 test surprise FR": "Який взаємозв'язок ви виявили у своїх даних, який вас здивував?  Чому він вас здивував?\n",
        "CSD U5 test surprise FR_2021": "Який взаємозв'язок ви виявили у своїх даних, який вас здивував?  Чому він вас здивував?\n",
        "CSD U5 test surprise FR_2022": "Який взаємозв'язок ви виявили у своїх даних, який вас здивував?  Чому він вас здивував?\n",
        "CSD U6 Driver pt1_2021": "# Кермо\n\nЦя гра схожа на гру у воротаря, в яку ми щойно грали, але дещо відрізняється. Використовуй плату як кермо від автомобіля (рухай з боку в бік). Тобі потрібно дістатися до картатого прапорця внизу, уникаючи червоних прапорців по дорозі!\n\n# Завдання\n\n-   Запрограмуй автомобіль рухатися вниз по екрану коли програма запущена.\n-   Запрограмуй можливість автомобіля повертати з боку в бік.\n\nЗгадай програми, які ми створювали до цього моменту, і подумай, як ти можеш оновити ці значення?",
        "CSD U6 LEDbutton predict embed_2021": "# Використання подій\n\nПодивіться на код разом з партнером і обговоріть, що, на вашу думку, код буде робити. Після того, як ви відповісте на питання, натисніть \"Запустити\", щоб побачити результат роботи програми. Переконайтеся, що ваша плата Circuit Playground під'єднана до електромережі",
        "CSD U6 LEDbutton predict embed_2222": "# Використання подій\n\nПодивіться на код разом з партнером і обговоріть, що, на вашу думку, код буде робити. Після того, як ви відповісте на питання, натисніть \"Запустити\", щоб побачити результат роботи програми. Переконайтеся, що ваша плата Circuit Playground під'єднана до електромережі",
        "CSD U6 airplane predict markdown_2021": "# Акселерометр\n\nУ наведеному нижче коді використовується новий датчик **акселерометр**, який може визначати положення та обертання плати Circuit Playground. Поглянь на код нижче, а потім спрогнозуй, що відбуватиметься на екрані, коли плата Circuit Playground переміщуватиметься або обертатиметься.",
        "CSD U6 airplane predict markdown_2222": "# Акселерометр\n\nУ наведеному нижче коді використовується новий датчик **акселерометр**, який може визначати положення та обертання плати Circuit Playground. Поглянь на код нижче, а потім спрогнозуй, що відбуватиметься на екрані, коли плата Circuit Playground переміщуватиметься або обертатиметься.",
        "CSD U6 circuit createLed_2021": "# Створення об'єктів плати\n\nТи міг помітити, що нові блоки, які ми використовуємо, розташовані в іншій шухляді набору інструментів. У панелі **Схема** містяться всі об'єкти плати, вбудовані у середовище Circuit Playground, але коли ти почнеш створювати власні схеми, Maker Toolkit більше не знає, де що лежить.\n\nНова панель **Конструктор** містить команди загального призначення, а не ті, що призначені для середовища Circuit Playground. На додаток до команд `pinMode()` і `digitalWrite()`, які ми вже бачили, вона містить команди для створення нових об'єктів на платі, які можна програмувати так само як і блоки у вікні **Схема**. Наприклад, команда `var myLed = createLed()` створює новий об'єкт LED, який поводиться так само як блоки `led`, які ми використовували.\n\n# Завдання\n\nТепер, коли ми створюємо нові об'єкти плати, для яких у нас немає блоків, нам доведеться працювати в текстовому режимі. Ми все ще можемо перетягувати знайомі вам блоки зі скриньки **Схема**, нам просто потрібно буде змінити назву об'єкта.\n\n-   Під'єднай світлодіод так само як і раніше (до контакту A5)\n-   Упевнись, що ти перейшов в текстовий режим з блочного режиму.\n-   Перетягни блок `led.блимання()` під коментарем `// Blink myLed`.\n-   Замініть текст `led` на `мійLed`.\n-   Перевір свій код.",
        "CSD U6 circuit multi led_2021": "# Під'єднання декількох світлодіодів\n\nЗа допомогою блоку `створитиLed()` можна під'єднати та керувати такою кількістю світлодіодів, для якої є місце на нашій платі. Кожен світлодіод повинен бути під'єднаний до окремого пронумерованого контакту, але всі вони можуть мати спільний контакт заземлення.\n\n# Завдання\n\nЗалиш поточний світлодіод під'єднаним до контакту A5, але додай ще один світлодіод до пронумерованого контакту на свій вибір. Для твого нового світлодіода:\n\n-   Додай блок `var мійLed = створитиLed()`.\n-   Заміни змінну label `мійLed` на унікальну мітку.\n-   Упевнись, що ти працюєш в текстовому режимі, а не у блочному.\n-   Додай команду `led.блимати()`.\n-   Заміни текст `led` на твою нову змінну LED.\n-   Перевір свій код.\n\nДодаткове завдання: Спробуй додати третій світлодіод і змусити всі три світлодіоди блимати з різними інтервалами.\\_",
        "CSD U6 circuit pinMode_2021": "# Wire a Circuit\n\nТи можеш використовувати будь-який з пронумерованих контактних майданчиків для додавання додаткових схем на плату. Спробуймо використати контакт A5 для додавання ще одного світлодіода.\n\n# Завдання\n\n-   За допомогою дроту з'єднай контакт A5 з позитивним (+) контактом світлодіода\n-   Іншим дротом з'єднай негативний (-) полюс світлодіода з контактом заземлення (GND) (не має значення, з яким саме).\n-   Запусти цю програму для тестування твоєї схеми. Якщо вона спрацювала, світлодіод повинен увімкнутися.\n\n_Порада з налагодження: Світлодіоди працюють лише тоді, коли електричний струм протікає від позитивного до негативного полюса. Якщо твій світлодіод не світиться, перевір, чи правильно він зорієнтований._",
        "CSD U6 colorLeds predict embed_2021": "# кольорові світлодіоди\n\nУ цій програмі використовується новий блок `кольоровіLED`, який дозволяє керувати кольоровими світлодіодами на платі Circuit Playground. Зверни увагу, що у деяких блоках числа у квадратних дужках відрізняються \\[] від інших блоків.\n\nЩо, на твою думку, зробить цей код?  Напиши своє передбачення у полі нижче, а потім запусти код, щоб побачити, що станеться.",
        "CSD U6 params modify clouds_2021": "# Хмари\n\nЦя програма змушує хмари рухатися, коли ти дмухаєш на звуковий датчик. Вона має дві основні дії: _переміщуватиХмару()_ та _циелХмари()_. Спочатку для кожної хмаринки потрібно було створити окрему функцію. Однак ми можемо спростити нашу програму і написати одну функцію, яка використовує параметр, щоб вирішити, яку хмару рухати. \n\n_циклХмари()_ вже оновлена для використання параметрів. Однак, переміщуватиХмару()\\_ все одно потрібно оновити, виконавши наведені нижче дії.\n\n# Завдання\n\n-   Створіть нову функцію `переміщуватиХмару(ім'я)`, яка буде переміщувати будь-яку хмару.\n    -   (Підказка: ти =використовуватимеш майже той самий код, що і функція `переміщуватиХмару0`)\n-   Виклич свою нову функцію `переміщуватиХмару(ім'я)` всередині блоку подій, один раз для кожного імені хмари.\n    -   (Підказка: це схоже на багаторазовий виклик функції `циклХмари(ім'я)`).",
        "CSD U6 sensor experiment embedded_2021": "# Експеримент з датчиками\n\nЗапустіть програму зліва і поекспериментуй зі своєю платою. Спробуй взаємодіяти з платою різними способами, щоб зрозуміти, яким може бути кожен датчик. Під час експериментів із датчиками, обговоріть з сусідом:\n\n-   Що вимірює цей датчик?\n-   Яке його максимальне значення?\n-   Яке його мінімальне значення?",
        "CSD U6 setProperty Text": "# Зміна тексту\n\nБлок `setProperty` можна використовувати для зміни багатьох елементів дизайну, включаючи текст, який вони містять.\n\n# Завдання\n\n-   Перетягни блок `setProperty`\n-   Для першого параметра вибери «name» (ідентифікатор елемента)\n-   Для другого параметра вибери «текст» (властивість, яку будемо встановлювати)\n-   Для третього параметра напиши своє ім'я в лапках (значення для встановлення)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з `setProperty`, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD U6 setProperty Text_2018": "# Зміна тексту\n\nБлок `setProperty` можна використовувати для зміни багатьох елементів дизайну, включаючи текст, який вони містять.\n\n# Завдання\n\n-   Перетягни блок `setProperty`\n-   Для першого параметра вибери «name» (ідентифікатор елемента)\n-   Для другого параметра вибери «текст» (властивість, яку будемо встановлювати)\n-   Для третього параметра напиши своє ім'я в лапках (значення для встановлення)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з `setProperty`, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD U6 setProperty Text_2019": "# Зміна тексту\n\nБлок `setProperty` можна використовувати для зміни багатьох елементів дизайну, включаючи текст, який вони містять.\n\n# Завдання\n\n-   Перетягни блок `setProperty`\n-   Для першого параметра вибери «name» (ідентифікатор елемента)\n-   Для другого параметра вибери «текст» (властивість, яку будемо встановлювати)\n-   Для третього параметра напиши своє ім'я в лапках (значення для встановлення)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з `setProperty`, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD U6 setProperty Text_2021": "# Зміна тексту\n\nБлок `setProperty` можна використовувати для зміни багатьох елементів дизайну, включаючи текст, який вони містять.\n\n# Завдання\n\n-   Перетягни блок `setProperty`\n-   Для першого параметра вибери «name» (ідентифікатор елемента)\n-   Для другого параметра вибери «текст» (властивість, яку будемо встановлювати)\n-   Для третього параметра напиши своє ім'я в лапках (значення для встановлення)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з `setProperty`, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD U6 setProperty xy": "# Зміна позиції\n\nКожен елемент дизайну (крім екрана) має властивості «x» і «y», які контролюють його положення.\n\n# Завдання\n\n<div markdown=\"1\" style=\"float:right\">\n\n![розгортається](https://images.code.org/3a67642609071cf6766c296b8ca5a68e-image-1526944857178.png)\n\n</div>\n\nЗа допомогою блоку `setProperty` перемісти \"red\\_button\" так, щоб він відповідав зображенню праворуч. (Натисни на зображення, щоб побачити повний розмір.)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з setProperty, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD U6 setProperty xy click": "# Зміна клацанням\n\nНе дуже корисно встановлювати властивість лише під час першого запуску програми. Зрештою, можна просто робити все це в режимі дизайну. Але коли ми використаємо блок `onEvent` із `setProperty`, можна робити речі, які не могли б зробити лише в режимі дизайну.\n\n# Завдання\n\nМи надали порожній блок `onEvent`, який спостерігає за зображенням \"смайлика\". Усередині блоку `onEvent` використовуй два блоки `setProperty`, щоб перемістити смайлик в інше місце (наразі це не має значення, куди). Перевір свою програму, запустивши її та натиснувши на смайлик.",
        "CSD U6 setProperty xy click_2018": "# Зміна клацанням\n\nНе дуже корисно встановлювати властивість лише під час першого запуску програми. Зрештою, можна просто робити все це в режимі дизайну. Але коли ми використаємо блок `onEvent` із `setProperty`, можна робити речі, які не могли б зробити лише в режимі дизайну.\n\n# Завдання\n\nМи надали порожній блок `onEvent`, який спостерігає за зображенням \"смайлика\". Усередині блоку `onEvent` використовуй два блоки `setProperty`, щоб перемістити смайлик в інше місце (наразі це не має значення, куди). Перевір свою програму, запустивши її та натиснувши на смайлик.",
        "CSD U6 setProperty xy click_2019": "# Зміна клацанням\n\nНе дуже корисно встановлювати властивість лише під час першого запуску програми. Зрештою, можна просто робити все це в режимі дизайну. Але коли ми використаємо блок `onEvent` із `setProperty`, можна робити речі, які не могли б зробити лише в режимі дизайну.\n\n# Завдання\n\nМи надали порожній блок `onEvent`, який спостерігає за зображенням \"смайлика\". Усередині блоку `onEvent` використовуй два блоки `setProperty`, щоб перемістити смайлик в інше місце (наразі це не має значення, куди). Перевір свою програму, запустивши її та натиснувши на смайлик.",
        "CSD U6 setProperty xy click_2021": "# Зміна клацанням\n\nНе дуже корисно встановлювати властивість лише під час першого запуску програми. Зрештою, можна просто робити все це в режимі дизайну. Але коли ми використаємо блок `onEvent` із `setProperty`, можна робити речі, які не могли б зробити лише в режимі дизайну.\n\n# Завдання\n\nМи надали порожній блок `onEvent`, який спостерігає за зображенням \"смайлика\". Усередині блоку `onEvent` використовуй два блоки `setProperty`, щоб перемістити смайлик в інше місце (наразі це не має значення, куди). Перевір свою програму, запустивши її та натиснувши на смайлик.",
        "CSD U6 setProperty xy_2018": "# Зміна позиції\n\nКожен елемент дизайну (крім екрана) має властивості «x» і «y», які контролюють його положення.\n\n# Завдання\n\n<div markdown=\"1\" style=\"float:right\">\n\n![розгортається](https://images.code.org/3a67642609071cf6766c296b8ca5a68e-image-1526944857178.png)\n\n</div>\n\nЗа допомогою блоку `setProperty` перемісти \"red\\_button\" так, щоб він відповідав зображенню праворуч. (Натисни на зображення, щоб побачити повний розмір.)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з setProperty, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD U6 setProperty xy_2019": "# Зміна позиції\n\nКожен елемент дизайну (крім екрана) має властивості «x» і «y», які контролюють його положення.\n\n# Завдання\n\n<div markdown=\"1\" style=\"float:right\">\n\n![розгортається](https://images.code.org/3a67642609071cf6766c296b8ca5a68e-image-1526944857178.png)\n\n</div>\n\nЗа допомогою блоку `setProperty` перемісти \"red\\_button\" так, щоб він відповідав зображенню праворуч. (Натисни на зображення, щоб побачити повний розмір.)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з setProperty, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD U6 setProperty xy_2021": "# Зміна позиції\n\nКожен елемент дизайну (крім екрана) має властивості «x» і «y», які контролюють його положення.\n\n# Завдання\n\n<div markdown=\"1\" style=\"float:right\">\n\n![розгортається](https://images.code.org/3a67642609071cf6766c296b8ca5a68e-image-1526944857178.png)\n\n</div>\n\nЗа допомогою блоку `setProperty` перемісти \"red\\_button\" так, щоб він відповідав зображенню праворуч. (Натисни на зображення, щоб побачити повний розмір.)\n\n_Примітка. Наразі ми видалили вкладку Design Mode, щоб можна було попрактикуватися в роботі з setProperty, але вона повернеться пізніше, коли ми будемо створювати власні програми._",
        "CSD Web CSS Assessment_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати мою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або натиснути клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати пункт \"Перейменувати\".  Це дозволить ввести нове ім'я файлу.  Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\n\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки.  Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n\n:::\n\n</div>\n\n# Змініть стилі цієї сторінки!\n\nЦе можливість проявити творчість і трохи повеселитися зі стилями.\n\n# Завдання\n\n-   Прив'яжіть таблицю стилів до вебсторінки.\n-   Змініть розмір тексту абзацу.\n-   Змініть колір тексту абзацу.",
        "CSD Web CSS Assessment_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати мою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або натиснути клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати пункт \"Перейменувати\".  Це дозволить ввести нове ім'я файлу.  Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\n\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки.  Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n\n:::\n\n</div>\n\n# Змініть стилі цієї сторінки!\n\nЦе можливість проявити творчість і трохи повеселитися зі стилями.\n\n# Завдання\n\n-   Прив'яжіть таблицю стилів до вебсторінки.\n-   Змініть розмір тексту абзацу.\n-   Змініть колір тексту абзацу.",
        "CSD Web Debugging_2021": "## Запитання для розмірковування:\n\n-   Що таке налагодження?\n-   Які чотири кроки налагодження ти знаєш?",
        "CSD Web Debugging_2022": "## Запитання для розмірковування:\n\n-   Що таке налагодження?\n-   Які чотири кроки налагодження ти знаєш?",
        "CSD Web Dev bubble choice br tag_2021": "# Розрив рядка\n\nУ деяких випадках, наприклад, у віршах або списках, потрібно почати новий рядок у межах одного абзацу, як це робиться у віршах. Для цього можна використовувати тег розриву рядка `<br>`.\n\n# Завдання\n* Прочитайте код HTML і знайдіть, де використовується код розриву рядка `<br>` для розділення рядків у вірші.\n* Додайте ще два розриви рядка, щоб відокремити інші рядки у вірші.\n\n**Підказка:** Тег `<br>` буле корисним для написання адрес або віршів. Він не потребує закривного тегу!\n\n**Примітка:** Використовуйте тег `<br>` для введення розриву рядка, а не для розділення абзаців. Завжди відокремлюйте кожен абзац власним набором тегів `<p>` і `</p>`!\n\n# Завдання\n\n* Відокремлюйте кожен рядок тегами `<br>`.",
        "CSD Web Dev bubble choice br tag_2022": "# Розрив рядка\n\nУ деяких випадках, наприклад, у віршах або списках, потрібно почати новий рядок у межах одного абзацу, як це робиться у віршах. Для цього можна використовувати тег розриву рядка `<br>`.\n\n# Завдання\n* Прочитайте код HTML і знайдіть, де використовується код розриву рядка `<br>` для розділення рядків у вірші.\n* Додайте ще два розриви рядка, щоб відокремити інші рядки у вірші.\n\n**Підказка:** Тег `<br>` буле корисним для написання адрес або віршів. Він не потребує закривного тегу!\n\n**Примітка:** Використовуйте тег `<br>` для введення розриву рядка, а не для розділення абзаців. Завжди відокремлюйте кожен абзац власним набором тегів `<p>` і `</p>`!\n\n# Завдання\n\n* Відокремлюйте кожен рядок тегами `<br>`.",
        "CSD Web Dev bubble choice p tag 2_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n:::\n\n::: details [**Як створити декілька обзаців?**]\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n:::\n\n</div>\n\n# Використання тегів абзацу\n\nТеги `<p>` `</p>` або початковий і кінцевий теги \"абзац\" ставляться навколо тексту щоб вказати, що він є частиною абзацу. Розміщення тексту між початковим і кінцевим тегами абзацу дає комп'ютеру зрозуміти, що з ним слід поводитися по-іншому, часто просто відокремлюючи його від іншого тексту.\n\n# Завдання\n\n-   Виправте код так, щоб жоден з тегів не був рожевим.",
        "CSD Web Dev bubble choice p tag 2_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n:::\n\n::: details [**Як створити декілька обзаців?**]\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n:::\n\n</div>\n\n# Використання тегів абзацу\n\nТеги `<p>` `</p>` або початковий і кінцевий теги \"абзац\" ставляться навколо тексту щоб вказати, що він є частиною абзацу. Розміщення тексту між початковим і кінцевим тегами абзацу дає комп'ютеру зрозуміти, що з ним слід поводитися по-іншому, часто просто відокремлюючи його від іншого тексту.\n\n# Завдання\n\n-   Виправте код так, щоб жоден з тегів не був рожевим.",
        "CSD Web Dev bubble choice p tag_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n:::\n\n::: details [**Як створити декілька обзаців?**]\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n:::\n\n</div>\n\n# Використання тегів абзацу\n\nТеги `<p>` `</p>` або початковий і кінцевий теги \"абзац\" ставляться навколо тексту щоб вказати, що він є частиною абзацу. Розміщення тексту між початковим і кінцевим тегами абзацу дає комп'ютеру зрозуміти, що з ним слід поводитися по-іншому, часто просто відокремлюючи його від іншого тексту.\n\n# Завдання\n\n-   Використовуйте теги `<p>` для розділення вмісту на абзаци.",
        "CSD Web Dev bubble choice p tag_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке елемент абзацу?**]\nАбзаци позначаються відкривними (`<p>`) і закривними (`</p>`) тегами . Абзаци в HTML можуть бути будь-якої довжини— від одного слова до кількох речень. Абзаци об'єднують набори речень і залишають певний пробіл між однією групою тексту і наступною групою тексту.\n:::\n\n::: details [**Як створити декілька обзаців?**]\nОсь приклад кількох тегів абзацу поспіль. Цей код буде розміщений всередині тексту вашої вебсторінки.\n    <p>Це абзац. Він містить два речення.</p>\n    <p>Це інший абзац.</p>\n:::\n\n</div>\n\n# Використання тегів абзацу\n\nТеги `<p>` `</p>` або початковий і кінцевий теги \"абзац\" ставляться навколо тексту щоб вказати, що він є частиною абзацу. Розміщення тексту між початковим і кінцевим тегами абзацу дає комп'ютеру зрозуміти, що з ним слід поводитися по-іншому, часто просто відокремлюючи його від іншого тексту.\n\n# Завдання\n\n-   Використовуйте теги `<p>` для розділення вмісту на абзаци.",
        "CSD Web Dev choice level add rule_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Додавання правила для заголовка\nУ вас є можливість проявити творчість і змінити заголовок.\n\n \n # Завдання\n * Додайте набір правил для заголовка.",
        "CSD Web Dev choice level add rule_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Додавання правила для заголовка\nУ вас є можливість проявити творчість і змінити заголовок.\n\n \n # Завдання\n * Додайте набір правил для заголовка.",
        "CSD Web Dev choice level color_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Зміна кольору тексту\n\nЗмініть колір заголовка і тексту.\n \n# Завдання\n* Додайте набір правил для заголовка, щоб змінити його колір.\n* Додайте набір правил для абзаців, щоб змінити їхній колір.\n",
        "CSD Web Dev choice level color_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Зміна кольору тексту\n\nЗмініть колір заголовка і тексту.\n \n# Завдання\n* Додайте набір правил для заголовка, щоб змінити його колір.\n* Додайте набір правил для абзаців, щоб змінити їхній колір.\n",
        "CSD Web Dev choice level font-family_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Зміна розміру шрифту\n\nЗмініть розмір шрифту заголовка і тексту. Ви можете вказати розмір шрифту у вигляді `px` (наприклад, `16px`).\n\n# Завдання\n* Додайте набір правил для заголовка, щоб змінити розмір його шрифту.\n* Додайте набір правил для абзаців, щоб змінити розмір їхніх шрифтів.",
        "CSD Web Dev choice level font-family_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Зміна розміру шрифту\n\nЗмініть розмір шрифту заголовка і тексту. Ви можете вказати розмір шрифту у вигляді `px` (наприклад, `16px`).\n\n# Завдання\n* Додайте набір правил для заголовка, щоб змінити розмір його шрифту.\n* Додайте набір правил для абзаців, щоб змінити розмір їхніх шрифтів.",
        "CSD Web Dev choice level font-size_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Зміна сімейства шрифтів\n\nЗмініть сімейство шрифтів як для заголовка, так і для тексту. Доступні декілька сімейств шрифтів, зокрема `cursive`, `fantasy`, `serif`, і `monospace`.\n\n# Завдання\n* Додайте набір правил для абзаців, щоб вони були написані іншим сімейством шрифтів.\n* Додайте набір правил для одного з типів заголовків, щоб він був написаний іншим сімейством шрифтів.",
        "CSD Web Dev choice level font-size_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Зміна сімейства шрифтів\n\nЗмініть сімейство шрифтів як для заголовка, так і для тексту. Доступні декілька сімейств шрифтів, зокрема `cursive`, `fantasy`, `serif`, і `monospace`.\n\n# Завдання\n* Додайте набір правил для абзаців, щоб вони були написані іншим сімейством шрифтів.\n* Додайте набір правил для одного з типів заголовків, щоб він був написаний іншим сімейством шрифтів.",
        "CSD Web Dev choice level headings 1_2021": "# Налагодження: Заголовки\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nІз заголовками цієї сторінки є кілька проблем. Чи зможете ви їх виправити?\n\n# Завдання\n- Виправте всі рожеві помилки.\n- Якщо потрібно, відрегулюйте теги заголовків до відповідного розміру.\n",
        "CSD Web Dev choice level headings 1_2022": "# Налагодження: Заголовки\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nІз заголовками цієї сторінки є кілька проблем. Чи зможете ви їх виправити?\n\n# Завдання\n- Виправте всі рожеві помилки.\n- Якщо потрібно, відрегулюйте теги заголовків до відповідного розміру.\n",
        "CSD Web Dev choice level headings 2_2021": "# Додавання більших заголовків\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nОсь сторінка про морських тварин. Чи зможете ви додати придумати і додати помітний, великий заголовок?\n \n# Завдання\n * Додайте більший заголовок у верхній частині сторінки.",
        "CSD Web Dev choice level headings 2_2022": "# Додавання більших заголовків\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nОсь сторінка про морських тварин. Чи зможете ви додати придумати і додати помітний, великий заголовок?\n \n# Завдання\n * Додайте більший заголовок у верхній частині сторінки.",
        "CSD Web Dev choice level ol 1_2021": "# Впорядковані списки\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Які два типи списків існують?**]\n В HTML існує два типи списків: впорядковані та невпорядковані.\n:::\n\n::: details [**Що таке впорядкований список?**]\nВпорядкований список - це набір маркованих елементів, які пронумеровані.\n<br /><br />\nЕлемент впорядкованого списку має тег `<ol>` . Це аьревіатура від <strong>O</strong>rdered <strong>L</strong>ist (впорядкований список). Кожен елемент списку позначається елементом списку `<li>`;. Це абревіатура <strong>L</strong>ist <strong>I</strong>tem (елемент списку).  Елемент списку є дочірнім елементом, що означає, що він знаходиться всередині свого батьківського елемента, впорядкованого списку (`<ol>`).\n:::\n\n\n::: details [**Як створити впорядкований список?**]\nСтворення впорядкованого списку складається з двох кроків: створення списку та додавання елементів списку.  Щоб створити впорядкований список, напишіть теги впорядкованого списку `<ol></ol>`.  Після цього додайте елементи списку **всередину** тегів впорядкованого списку.  Щоб створити кожен елемент списку, використовуйте теги елементів списку `<li></li>` і вписуйте елемент списку всередину тегів.\n\nМоже бути корисно зробити відступ у тегах `<li>`, щоб було зрозуміло, що вони містяться в тегу `<ol>`.\n:::\n\n\n\n</div>\n\nВпорядкований список схожий на невпорядкований (маркований), але в ньому є номери. Просто використовуйте тег `<ol>` замість `<ul>`.\n\n# Завдання\n\n* Використовуйте теги `<ol>` і `<li>`, щоб структурувати цей вміст у впорядкований список.\n\n::: details [**Приклад робочого коду.**]\n\n<table border=\"1\">\n<tr>\n<td>Приклад</td>\n<td>Результат</td>\n</tr>\n<tr>\n<td>\n\n```\n<ol>\n  <li>Крок 1 </li>\n  <li>Крок 2 </li>\n  <li>Крок 3 </li>\n</ol>\n```\n</td>\n<td><img src=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n\n:::",
        "CSD Web Dev choice level ol 1_2022": "# Впорядковані списки\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Які два типи списків існують?**]\n В HTML існує два типи списків: впорядковані та невпорядковані.\n:::\n\n::: details [**Що таке впорядкований список?**]\nВпорядкований список - це набір маркованих елементів, які пронумеровані.\n<br /><br />\nЕлемент впорядкованого списку має тег `<ol>` . Це аьревіатура від <strong>O</strong>rdered <strong>L</strong>ist (впорядкований список). Кожен елемент списку позначається елементом списку `<li>`;. Це абревіатура <strong>L</strong>ist <strong>I</strong>tem (елемент списку).  Елемент списку є дочірнім елементом, що означає, що він знаходиться всередині свого батьківського елемента, впорядкованого списку (`<ol>`).\n:::\n\n\n::: details [**Як створити впорядкований список?**]\nСтворення впорядкованого списку складається з двох кроків: створення списку та додавання елементів списку.  Щоб створити впорядкований список, напишіть теги впорядкованого списку `<ol></ol>`.  Після цього додайте елементи списку **всередину** тегів впорядкованого списку.  Щоб створити кожен елемент списку, використовуйте теги елементів списку `<li></li>` і вписуйте елемент списку всередину тегів.\n\nМоже бути корисно зробити відступ у тегах `<li>`, щоб було зрозуміло, що вони містяться в тегу `<ol>`.\n:::\n\n\n\n</div>\n\nВпорядкований список схожий на невпорядкований (маркований), але в ньому є номери. Просто використовуйте тег `<ol>` замість `<ul>`.\n\n# Завдання\n\n* Використовуйте теги `<ol>` і `<li>`, щоб структурувати цей вміст у впорядкований список.\n\n::: details [**Приклад робочого коду.**]\n\n<table border=\"1\">\n<tr>\n<td>Приклад</td>\n<td>Результат</td>\n</tr>\n<tr>\n<td>\n\n```\n<ol>\n  <li>Крок 1 </li>\n  <li>Крок 2 </li>\n  <li>Крок 3 </li>\n</ol>\n```\n</td>\n<td><img src=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n\n:::",
        "CSD Web Dev choice level p tag 3_2021": "# Налагодження: Відсутній абзац\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nСхоже, що другий абзац відсутній. Чи зможете ви виправити помилку? \n \n# Завдання\n\n * Знайдіть і усуньте проблему, яка спричиняє баг.",
        "CSD Web Dev choice level p tag 3_2022": "# Налагодження: Відсутній абзац\n\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nСхоже, що другий абзац відсутній. Чи зможете ви виправити помилку? \n \n# Завдання\n\n * Знайдіть і усуньте проблему, яка спричиняє баг.",
        "CSD Web Dev choice level text-align_2021": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Вирівнювання тексту\n\nМи хочемо, щоб імена авторів вирівнялися за правим краєм сторінки.\n \n# Завдання\n* З'ясуйте, який тег містить імена авторів.\n* Додайте набір правил для цього тегу, щоб перемістити його в праву частину екрана.\n\n<img src = \"https://images.code.org/bca0fa67b636689b10f8f8af0d6f80e5-image-1591386436072.46.30 PM.png\"  width=\"40%\" align=\"right\">",
        "CSD Web Dev choice level text-align_2022": "<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке таблиця стилів?**]\nТаблиця стилів - це документ, який керує тим, як буде виглядати вебсторінка. Зовнішні таблиці стилів - це окремі файли, які пов'язані з HTML-сторінкою.\n:::\n\n::: details [**Що таке CSS?**]\nCSS - це мова, яка керує тим, як відображається вміст на веб-сайті. В ній використовуються набори правил для зміни вигляду сторінки.  Кожен набір правил має селектор, який визначає, які елементи на сторінці будуть змінені, і правила, які пояснюють, як відображати ці елементи. Кожне правило складається з властивості та значення для цієї властивості.\n\nОсь приклад набору правил, який робить текст у тегу `h2` синім і курсивним:\n\n    h2 {\n       color: blue;\n       font-family: cursive;\n    }\n\nУ цьому прикладі `h2` - це селектор, `color` і `font-family` - властивості, а `blue` і `cursive` - значення цих властивостей.\n:::\n\n::: details [**Як створити нову таблицю стилів?**]\nЩоб створити нову таблицю стилів, натисніть кнопку \"Додати CSS\" над областю коду.\n:::\n\n::: details [**Як назвати свою таблицю стилів?**]\nНазвати свою таблицю стилів можна як завгодно, але краще вибрати відповідну назву, наприклад, \"style.css\" або \"aboutmestyles.css\", щоб було зрозуміло, що це за файл.  Ваш файл завжди повинен закінчуватися розширенням \".css\".\n:::\n\n::: details [**Як перейменувати файл?**]\nЩоб перейменувати файл, можна клацнути правою кнопкою миші (або утримувати клавішу Ctrl і клацнути лівою кнопкою миші) на назві файлу і вибрати опцію \"Перейменувати\". Це дозволить вам ввести нове ім'я файлу. Клацання на імені файлу після того, як його вже виділено, також дозволить вам перейменувати файл.\n:::\n\n::: details [**Як додати таблицю стилів до вебсторінки?**]\nЩоб додати таблицю стилів до вебсторінки, відкрийте код вебсторінки. Всередині тегу head додайте наступний код `<link rel=\"stylesheet\" href=\"style.css\">`.  Потім змініть \"style.css\" на назву вашої таблиці стилів.\n:::\n</div>\n\n# Вирівнювання тексту\n\nМи хочемо, щоб імена авторів вирівнялися за правим краєм сторінки.\n \n# Завдання\n* З'ясуйте, який тег містить імена авторів.\n* Додайте набір правил для цього тегу, щоб перемістити його в праву частину екрана.\n\n<img src = \"https://images.code.org/bca0fa67b636689b10f8f8af0d6f80e5-image-1591386436072.46.30 PM.png\"  width=\"40%\" align=\"right\">",
        "CSD Web Dev choice level ul 1_2021": "# Невпорядковані списки\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Які два типи списків існують?**]\nВ HTML існує два типи списків: впорядковані та невпорядковані\n:::\n\n::: details [**Що таке невпорядкований список?**]\nНевпорядкований список - це просто набір маркованих елементів.\n<br /><br />Невпорядкований елемент списку кодується тегом `<ul>`. Це абревіатура від is <strong>U</strong>nordered <strong>L</strong>ist (невпорядкований список). Кожен елемент списку позначається елементом списку`<li>`. Це абревіатура від i <strong>L</strong>ist <strong>I</strong>tem (елемент списку).  Елемент списку є дочірнім елементом, що означає, що він знаходиться всередині свого батьківського елемента, невпорядкованого списку  (`<ul>`).\n:::\n\n::: details [**Як створити невпорядкований список?**]\nСтворення невпорядкованого списку складається з двох кроків: створення списку і додавання елементів списку.  Щоб створити невпорядкований список, напишіть теги невпорядкованого списку `<ul></ul>`.  Далі додайте елементи списку **всередину** тегів невпорядкованого списку.  Щоб створити кожен елемент списку, скористайтеся тегами елементів списку `<li></li>`  і запишіть елемент списку всередині тегів.\n<br /><br />\nМоже бути корисно зробити відступ у тегах `<li>`, щоб було зрозуміло, що вони містяться в тегу`<ul>`..\n:::\n\n</div>\n\nПодивіться, як наведений код створює невпорядкований список, а потім створіть свій власний список десертів.\n\n# Завдання\n\n* Подивіться, як використовуються теги `<ul>` і `<li>` для створення невпорядкованого списку.\n* Використовуйте теги `<ul>` і `<li>` для створення власного списку.\n\n::: details [**Покажіть мені інший приклад робочого коду.**]\n\n<table border=\"1\">\n<tr>\n<td>Приклад</td>\n<td>Результат</td>\n</tr>\n<tr>\n<td>\n\n```\n <ul>\n \t<li>Червоний</li>\n    <li>Зелений</li>\n    <li>Синій</li>\n </ul>\n```\n</td>\n<td><img src=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n\n:::",
        "CSD Web Dev choice level ul 1_2022": "# Невпорядковані списки\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Які два типи списків існують?**]\nВ HTML існує два типи списків: впорядковані та невпорядковані\n:::\n\n::: details [**Що таке невпорядкований список?**]\nНевпорядкований список - це просто набір маркованих елементів.\n<br /><br />Невпорядкований елемент списку кодується тегом `<ul>`. Це абревіатура від is <strong>U</strong>nordered <strong>L</strong>ist (невпорядкований список). Кожен елемент списку позначається елементом списку`<li>`. Це абревіатура від i <strong>L</strong>ist <strong>I</strong>tem (елемент списку).  Елемент списку є дочірнім елементом, що означає, що він знаходиться всередині свого батьківського елемента, невпорядкованого списку  (`<ul>`).\n:::\n\n::: details [**Як створити невпорядкований список?**]\nСтворення невпорядкованого списку складається з двох кроків: створення списку і додавання елементів списку.  Щоб створити невпорядкований список, напишіть теги невпорядкованого списку `<ul></ul>`.  Далі додайте елементи списку **всередину** тегів невпорядкованого списку.  Щоб створити кожен елемент списку, скористайтеся тегами елементів списку `<li></li>`  і запишіть елемент списку всередині тегів.\n<br /><br />\nМоже бути корисно зробити відступ у тегах `<li>`, щоб було зрозуміло, що вони містяться в тегу`<ul>`..\n:::\n\n</div>\n\nПодивіться, як наведений код створює невпорядкований список, а потім створіть свій власний список десертів.\n\n# Завдання\n\n* Подивіться, як використовуються теги `<ul>` і `<li>` для створення невпорядкованого списку.\n* Використовуйте теги `<ul>` і `<li>` для створення власного списку.\n\n::: details [**Покажіть мені інший приклад робочого коду.**]\n\n<table border=\"1\">\n<tr>\n<td>Приклад</td>\n<td>Результат</td>\n</tr>\n<tr>\n<td>\n\n```\n <ul>\n \t<li>Червоний</li>\n    <li>Зелений</li>\n    <li>Синій</li>\n </ul>\n```\n</td>\n<td><img src=\"https://images.code.org/25d4dfc9b6c448d0da305df66aa1dfb7-image-1473444368948.05.32 PM.png\" style=\"width:200px\"></td>\n</tr>\n</table>\n\n\n:::",
        "CSD Web Headings Add Heading Rule_2021": "# Додавання правила для заголовка\nЦе можливість проявити творчість і налаштувати заголовок.\n\n \n # Завдання\n * Додайте набір правил для заголовка.",
        "CSD Web Headings Add Heading Rule_2022": "# Додавання правила для заголовка\nЦе можливість проявити творчість і налаштувати заголовок.\n\n \n # Завдання\n * Додайте набір правил для заголовка.",
        "CSD Web Headings Add Paragraph Rule_2021": "# Додавання правила для абзацу\nЦе можливість проявити творчість і налаштувати абзац.\n\n \n # Завдання\n * Додайте набір правил для абзацу.\n",
        "CSD Web Headings Add Paragraph Rule_2022": "# Додавання правила для абзацу\nЦе можливість проявити творчість і налаштувати абзац.\n\n \n # Завдання\n * Додайте набір правил для абзацу.\n",
        "CSD Web Headings Add Style Sheet_2021": "# Додавання таблиці стилів\nЦе можливість проявити творчість і застосувати на практиці все, що ви дізналися про стилі.\n\n \n # Завдання\n * Додайте таблицю стилів і набори правил.\n",
        "CSD Web Headings Add Style Sheet_2022": "# Додавання таблиці стилів\nЦе можливість проявити творчість і застосувати на практиці все, що ви дізналися про стилі.\n\n \n # Завдання\n * Додайте таблицю стилів і набори правил.\n",
        "CSD Web Headings Forgot Dash in Font Size_2021": "# Налагодження: Неправильний розмір шрифту\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось залишив повідомлення про помилку на цій вебсторінці.  Чи зможете ви виправити помилку?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nРозмір шрифту абзацу має бути 24px | Шрифт абзацу має розмір за замовчуванням\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг.",
        "CSD Web Headings Forgot Dash in Font Size_2022": "# Налагодження: Неправильний розмір шрифту\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nХтось залишив повідомлення про помилку на цій вебсторінці.  Чи зможете ви виправити помилку?\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nРозмір шрифту абзацу має бути 24px | Шрифт абзацу має розмір за замовчуванням\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг.",
        "CSD Web Headings Free Play_2021": "# Область вільних дій\n\nТепер, коли ви навчилися створювати заголовки HTML і кодувати спеціальні символи, ви можете перевірити свої навички на практиці! \n\n# Завдання\n* Створіть власну HTML-сторінку з використанням нового коду.\n* Будьте креативні, розважайтеся!",
        "CSD Web Headings Free Play_2022": "# Область вільних дій\n\nТепер, коли ви навчилися створювати заголовки HTML і кодувати спеціальні символи, ви можете перевірити свої навички на практиці! \n\n# Завдання\n* Створіть власну HTML-сторінку з використанням нового коду.\n* Будьте креативні, розважайтеся!",
        "CSD Web Headings Missing Paragraph Tag_2021": "# Налагодження: Відсутній стиль абзацу\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКолір абзацу сірий| Колір абзацу чорний\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг\n",
        "CSD Web Headings Missing Paragraph Tag_2022": "# Налагодження: Відсутній стиль абзацу\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано.  Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML.  У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір.  Помилка може бути в рожевому кольорі, а може бути десь перед ним.  Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКолір абзацу сірий| Колір абзацу чорний\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг\n",
        "CSD Web Headings Special Character 1_2021": "# Додатковий код: Спеціальний символ \"<\"\n\nЯк ви вже дізналися, символ `<` використовується для тегів. Якщо ми хочемо, щоб символ відображався як < у тексті, нам потрібно використовувати спеціальний код `&lt;`.\n\n# Завдання\n* Перегляньте код HTML і знайдіть, де використовується код `&lt;`.\n* Використовуйте `&lt;` для додавання знаків \"<\" і \"3\" скрізь, де побачите слово \"серце\", щоб зробити сторінку веселішою!",
        "CSD Web Headings Special Character 1_2022": "# Додатковий код: Спеціальний символ \"<\"\n\nЯк ви вже дізналися, символ `<` використовується для тегів. Якщо ми хочемо, щоб символ відображався як < у тексті, нам потрібно використовувати спеціальний код `&lt;`.\n\n# Завдання\n* Перегляньте код HTML і знайдіть, де використовується код `&lt;`.\n* Використовуйте `&lt;` для додавання знаків \"<\" і \"3\" скрізь, де побачите слово \"серце\", щоб зробити сторінку веселішою!",
        "CSD Web Headings Special Character 2_2021": "# Додатковий код: Спеціальний символ \">\"\n\nЯк ви вже дізналися, символ `>` використовується для закриття тегів. Якщо ці символи також зустрічаються у вашому тексті, браузер може переплутати їх з тегами. Щоб уникнути цього, ми повинні використовувати спеціальний код `&gt;` скрізь, де ми хочемо, щоб символ \">\" відображався на вебсторінці.\n<br> Ваш учитель створює онлайн-таблицю, щоб навчити молодших школярів, як використовувати знак \"більше\" в математиці, і потребує вашої допомоги, щоб додати правильний знак.\n\n# Завдання\n* Перегляньте код HTML і знайдіть місця, де код `&gt;` використовується двічі.\n* Використовуйте спеціальний код, щоб додати \">\" там, де це необхідно для заповнення робочого аркуша вчителя.",
        "CSD Web Headings Special Character 2_2022": "# Додатковий код: Спеціальний символ \">\"\n\nЯк ви вже дізналися, символ `>` використовується для закриття тегів. Якщо ці символи також зустрічаються у вашому тексті, браузер може переплутати їх з тегами. Щоб уникнути цього, ми повинні використовувати спеціальний код `&gt;` скрізь, де ми хочемо, щоб символ \">\" відображався на вебсторінці.\n<br> Ваш учитель створює онлайн-таблицю, щоб навчити молодших школярів, як використовувати знак \"більше\" в математиці, і потребує вашої допомоги, щоб додати правильний знак.\n\n# Завдання\n* Перегляньте код HTML і знайдіть місця, де код `&gt;` використовується двічі.\n* Використовуйте спеціальний код, щоб додати \">\" там, де це необхідно для заповнення робочого аркуша вчителя.",
        "CSD Web Headings Special Character 3_2021": "# Додатковий код: Спеціальний символ \"&\"\n\nСимвол \"амперсанд\" (**&**) може спричинити помилки у вашому HTML-коді, оскільки фактично використовується для інших спеціальних символів, таких як символи менше ніж (**<** кодується як `&lt;`) та подвійні лапки (**\"** кодується як `&quot`). \n\nЩоб правильно використовувати символ **&** в абзаці, потрібен спеціальний код `&amp;`.\n*Так, для кодування амперсанду потрібен амперсанд!*\n<br>У цій вправі ви складете список своїх улюблених речей і попрактикуєтесь у використанні амперсанду. \n\n# Завдання\n* Перегляньте код HTML і знайдіть, де код `&amp;` використовується правильно.\n* Замініть амперсанд, який викликає рожевий код, на спеціальний код для цього символу.\n* Заповніть порожні категорії або додайте власні, використовуючи новий код. Намагайтеся придумувати відповіді, в яких використовується цей символ!\n",
        "CSD Web Headings Stylesheet Not Linked_2021": "# Налагодження: відсутні стилі\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКолір заголовка 1 - синій | Колір заголовка 1 - чорний\nКолір заголовка 2 - зелений | Колір заголовка 2 - чорний\nРозмір шрифту абзацу - 12px | Шрифт абзацу має розмір за замовчуванням\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг",
        "CSD Web Headings Stylesheet Not Linked_2022": "# Налагодження: відсутні стилі\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКолір заголовка 1 - синій | Колір заголовка 1 - чорний\nКолір заголовка 2 - зелений | Колір заголовка 2 - чорний\nРозмір шрифту абзацу - 12px | Шрифт абзацу має розмір за замовчуванням\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг",
        "CSD Web Headings Wrong Tag in Rule Set_2021": "# Налагодження: Відсутній стиль заголовка\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКолір заголовка зелений | Колір заголовка чорний\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг\n",
        "CSD Web Headings Wrong Tag in Rule Set_2022": "# Налагодження: Відсутній стиль заголовка\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n\n::: details [**Що таке баг?**]\nБаги - це помилки в коді, які призводять до того, що він працює не так, як заплановано.\n:::\n\n\n::: details [**Що таке налагодження?**]\nНалагодження - це процес пошуку та виправлення багів.  Налагодження - це процес вирішення проблеми, тому під час налагодження використовуйте кроки вирішення проблем. \n:::\n\n\n::: details [**Наведемо кілька прикладів багів**]\nБагами може бути все, що призводить до того, що код працює не так, як заплановано. Деякі приклади: неправильне написання, розміщення коду в неправильному місці, використання неправильного тегу або забування закрити тег.\n:::\n\n::: details [**Чому код іноді змінює колір на рожевий?**]\nВеб Лабораторія запрограмована на автоматичне виявлення деяких помилок у HTML. У разі виявлення помилки, Веб Лабораторія забарвлює код у рожевий колір. Помилка може бути в рожевому кольорі, а може бути десь перед ним. Вам потрібно буде ретельно налагодити код, щоб знайти помилку.\n:::\n\n::: details [**Чому HTML працює навіть із помилками в ньому?**]\nHTML зчитується вашим веб-браузером для створення вебсторінок. Оскільки під час написання вебсторінок люди часто роблять невеликі помилки, браузери запрограмовані так, щоб здогадуватися про те, що ви хотіли зробити. Іноді різні браузери навіть запрограмовані робити різні припущення! Єдиний спосіб гарантувати, що ваш код буде виглядати так, як заплановано, - це слідкувати за тим, щоб завжди правильно використовувати теги.\n:::\n</div>\n\nЩо очікувалось | Що трапилося натомість\n----------|----------------\nКолір заголовка зелений | Колір заголовка чорний\n \n # Завдання\n * Знайдіть і усуньте проблему, яка спричиняє цей баг\n",
        "CSD Web Headings hr_2021": "# Додатковий код: Горизонтальна лінія\n\nУ деяких ситуаціях вам знадобиться вставити горизонтальну лінію, щоб розділити теми на сторінці. Для цього можна використовувати тег горизонтальної лінії `<hr>`.\n\n# Завдання\n* Перегляньте код HTML і знайдіть, де використовується код `<hr>` для додавання горизонтальної лінії на вебсторінці.\n* Додайте більше горизонтальних ліній, щоб розбити сторінку на теми.",
        "CSD Web Headings hr_2022": "# Додатковий код: Горизонтальна лінія\n\nУ деяких ситуаціях вам знадобиться вставити горизонтальну лінію, щоб розділити теми на сторінці. Для цього можна використовувати тег горизонтальної лінії `<hr>`.\n\n# Завдання\n* Перегляньте код HTML і знайдіть, де використовується код `<hr>` для додавання горизонтальної лінії на вебсторінці.\n* Додайте більше горизонтальних ліній, щоб розбити сторінку на теми.",
        "CSD Web Headings line break_2021": "# Додатковий код: Розрив рядка\n\nУ деяких випадках, наприклад, у віршах або списках, потрібно почати новий рядок у межах одного абзацу, як це робиться у віршах.  Для цього можна використовувати тег розриву рядка `<br>`.\n\n# Завдання\n* Перегляньте код HTML і знайдіть, де використовується код розриву рядка `<br>` для розділення рядків у вірші.\n* Додайте ще два розриви рядка, щоб відокремити інші рядки у вірші.\n\n**Підказка:** Тег `<br>` буле корисним для написання адрес або віршів.\n\n**Примітка:** Використовуйте тег `<br>` для введення розриву рядка, а не для розділення абзаців. Завжди відокремлюйте кожен абзац власним набором тегів `<p>` і `</p>`!",
        "CSD Web Headings line break_2022": "# Додатковий код: Розрив рядка\n\nУ деяких випадках, наприклад, у віршах або списках, потрібно почати новий рядок у межах одного абзацу, як це робиться у віршах.  Для цього можна використовувати тег розриву рядка `<br>`.\n\n# Завдання\n* Перегляньте код HTML і знайдіть, де використовується код розриву рядка `<br>` для розділення рядків у вірші.\n* Додайте ще два розриви рядка, щоб відокремити інші рядки у вірші.\n\n**Підказка:** Тег `<br>` буле корисним для написання адрес або віршів.\n\n**Примітка:** Використовуйте тег `<br>` для введення розриву рядка, а не для розділення абзаців. Завжди відокремлюйте кожен абзац власним набором тегів `<p>` і `</p>`!",
        "CSD Web incorporate feedback_2021": "# Використання зворотного зв'язку\n\nТепер настав час використати відгуки колег, щоб зробити свій сайт ще кращим.\n\n# Завдання\n\n-   Використовуйте план, який розробила команда, для покращення свого вебсайту.",
        "CSD Web incorporate feedback_2022": "# Використання зворотного зв'язку\n\nТепер настав час використати відгуки колег, щоб зробити свій сайт ще кращим.\n\n# Завдання\n\n-   Використовуйте план, який розробила команда, для покращення свого вебсайту.",
        "CSD What Makes a Computer a Computer Video_2019": "## Запитання, над якими слід подумати\n\n-   Чим комп'ютери відрізнялися від машин, які були до них?  \n-   Подумайте над чимось, що ви робите на комп’ютері. Який тип введення, виведення, зберігання та обробки відбувається?",
        "CSD What Makes a Computer a Computer Video_2021": "## Питання для роздумів:\n\n-   Чим комп'ютери відрізнялися від машин, що існували до них?",
        "CSD What Makes a Computer a Computer Video_2022": "## Питання для роздумів:\n\n-   Чим комп'ютери відрізнялися від машин, що існували до них?",
        "CSD game text predict_2021": "# Прогноз\n\nПрочитай код нижче і зроби прогноз.\n\n-   Що буде показано на екрані?\n-   Де це буде відображатися?",
        "CSD game text predict_2022": "# Прогноз\n\nПрочитай код нижче і зроби прогноз.\n\n-   Що буде показано на екрані?\n-   Де це буде відображатися?",
        "CSD game variable predict_2021": "# Прогноз\n\nПрочитай код нижче і зроби прогноз.\n\n-   Де буде намальоване коло?\n-   Що станеться, якщо змінити число в рядку 1?",
        "CSD game variable predict_2022": "# Прогноз\n\nПрочитай код нижче і зроби прогноз.\n\n-   Де буде намальоване коло?\n-   Що станеться, якщо змінити число в рядку 1?",
        "CSD games collision predict contained_2021": "# Використовуємо математику, щоб знайти відповідь\n\nКомп'ютери використовують математику, щоб з'ясувати, чи торкаються два предмети.  Подивися на математичні дії у рядках 17-18 цієї програми, щоб побачити, як властивості спрайтів порівнюються з їхньою шириною, щоб визначити, чи торкаються вони один одного.\n\n# Завдання\n\n-   Переглянь команди умов всередині циклу малювання та знайди різні властивості спрайтів і те, як вони порівнюються.\n-   Обговоріть код з партнером.\n-   Чому в коді використовуються тільки властивості ширина і X, а не властивості висота і Y?\n-   Чи хотілось би тобі писати цей код щоразу, коли перевіряєш, чи торкаються якісь об'єкти?",
        "CSD games collision predict contained_2022": "# Використовуємо математику, щоб знайти відповідь\n\nКомп'ютери використовують математику, щоб з'ясувати, чи торкаються два предмети.  Подивися на математичні дії у рядках 17-18 цієї програми, щоб побачити, як властивості спрайтів порівнюються з їхньою шириною, щоб визначити, чи торкаються вони один одного.\n\n# Завдання\n\n-   Переглянь команди умов всередині циклу малювання та знайди різні властивості спрайтів і те, як вони порівнюються.\n-   Обговоріть код з партнером.\n-   Чому в коді використовуються тільки властивості ширина і X, а не властивості висота і Y?\n-   Чи хотілось би тобі писати цей код щоразу, коли перевіряєш, чи торкаються якісь об'єкти?",
        "CSD games collisions assessment_2021": "<img src=\"https://images.code.org/da47c7825bb2cf05125f5b0467895846-image-1585722435633.gif\" style=\"float:right\">\n\n# Взаємодія спрайтів\n\nМи вже бачили чотири різних типи взаємодії спрайтів.  Всі вони знадобляться нам для цього завдання.\n\n# Завдання\n\n-   Для кожної пари тварин обери взаємодію спрайтів, яка відповідає зображенню праворуч.",
        "CSD games collisions assessment_2022": "<img src=\"https://images.code.org/da47c7825bb2cf05125f5b0467895846-image-1585722435633.gif\" style=\"float:right\">\n\n# Взаємодія спрайтів\n\nМи вже бачили чотири різних типи взаємодії спрайтів.  Всі вони знадобляться нам для цього завдання.\n\n# Завдання\n\n-   Для кожної пари тварин обери взаємодію спрайтів, яка відповідає зображенню праворуч.",
        "CSD games conditionals bowl_2021": "<img src=\"https://images.code.org/6a5d714029e7b5357c6f1b14a153b699-image-1585829442849.gif\" style=\"float: right\">\n\n# Перекинута юшка\n\nСуп повинен виливатися з миски, коли вона перевертається догори дном.\n\n# Завдання\n\n* Запусти програму, щоб побачити, як вона працює.\n* Додай умову, яка визначає, коли миска перевернута, і встановлює анімацію спрайта на порожню миску. \n",
        "CSD games conditionals bowl_2022": "<img src=\"https://images.code.org/6a5d714029e7b5357c6f1b14a153b699-image-1585829442849.gif\" style=\"float: right\">\n\n# Перекинута юшка\n\nСуп повинен виливатися з миски, коли вона перевертається догори дном.\n\n# Завдання\n\n* Запусти програму, щоб побачити, як вона працює.\n* Додай умову, яка визначає, коли миска перевернута, і встановлює анімацію спрайта на порожню миску. \n",
        "CSD games conditionals practice spaceship_2021": "# Вечірка прибульців\n\nЗроби так, щоб інопланетянин танцював, коли космічний корабель досягне верхньої частини екрана.\n\n# Завдання\n\n* Запусти програму, щоб побачити, як вона працює.\n* Додай умовний оператор, який визначає, коли космічний корабель злетів, і встановлює анімацію спрайта на `alien_dance`. \n",
        "CSD games conditionals practice spaceship_2022": "# Вечірка прибульців\n\nЗроби так, щоб інопланетянин танцював, коли космічний корабель досягне верхньої частини екрана.\n\n# Завдання\n\n* Запусти програму, щоб побачити, як вона працює.\n* Додай умовний оператор, який визначає, коли космічний корабель злетів, і встановлює анімацію спрайта на `alien_dance`. \n",
        "CSD games draw debug afterimage_2021": "# Налагодження: Повторювана анімація\n\nЦей \"бульбашковий\" спрайт повинен мати кілька кадрів анімації, які повторюються, але здається, що анімація зупиняється майже одразу.\nЩо мало відбутися | Що відбувається натомість\n ------- | ----------\nСпрайт анімується плавно | Спрайт має залишкове зображення і припиняє анімацію\n\n# Завдання\n\n* Запусти програму, щоб побачити помилку.\n* Використовуй підказки, щоб спробувати знайти помилку.\n\n<details>\n  <summary>Як налагодити багатокадрову анімацію</summary>\n  <p>На деяких рівнях Ігрової Лабораторії можна використовувати багатокадрову анімацію зі спрайтами, створюючи враження, ніби вони рухаються. Щоразу, коли ти використовуєш ці анімації, обов'язково додавай блок <code>background</code> на початку циклу малювання - інакше це буде виглядати так, ніби спрайт не рухається, оскільки всі кадри будуть малюватися один над одним.</p>\n</details>",
        "CSD games draw debug blurry_2021": "<img src=\"https://images.code.org/c9ea20861045987d177e964f7eeb07ad-image-1585823491836.gif\" style=\"float:right;\">\n\n# Налагодження: Розмитий спрайт\n\nЩо мало відбутися | Що відбувається замість цього\n ------- | ----------\nтремтіння  |  розмите тремтіння\n\n# Завдання\n\n* Запусти програму, щоб побачити помилку.\n* Використовуй підказки, щоб спробувати знайти помилку.\n* Знайшовши помилку, виправ код спрайта так, щоб він тремтів, як на зображенні праворуч.\n",
        "CSD games draw debug blurry_2022": "<img src=\"https://images.code.org/c9ea20861045987d177e964f7eeb07ad-image-1585823491836.gif\" style=\"float:right;\">\n\n# Налагодження: Розмитий спрайт\n\nЩо мало відбутися | Що відбувається замість цього\n ------- | ----------\nтремтіння  |  розмите тремтіння\n\n# Завдання\n\n* Запусти програму, щоб побачити помилку.\n* Використовуй підказки, щоб спробувати знайти помилку.\n* Знайшовши помилку, виправ код спрайта так, щоб він тремтів, як на зображенні праворуч.\n",
        "CSD games draw debug not moving_2021": "# Налагодження: спрайт не рухається\n\nЗнайди і усунь причину, чому спрайт не рухається, хоча ми оновлюємо його позицію у циклі малювання\n\nЩо мало відбутися | Що відбувається натомість\n ------- | ----------\n тремтить  |  не рухається взагалі\n\n# Завдання\n\n* Запусти програму, щоб побачити помилку\n* Використовуй підказки, щоб спробувати знайти помилку\n\n::: details [Підказка на випадок, якщо застрагнеш]\nДе у коді розташована команда `малюватиСпрайтів()`?\n:::\n\n::: details [Ще одна підказка]\nЧи очищується екран на початку циклу малювання? Як ми зазвичай очищаємо екран?\n:::",
        "CSD games draw debug not moving_2022": "# Налагодження: спрайт не рухається\n\nЗнайди і усунь причину, чому спрайт не рухається, хоча ми оновлюємо його позицію у циклі малювання\n\nЩо мало відбутися | Що відбувається натомість\n ------- | ----------\n тремтить  |  не рухається взагалі\n\n# Завдання\n\n* Запусти програму, щоб побачити помилку\n* Використовуй підказки, щоб спробувати знайти помилку\n\n::: details [Підказка на випадок, якщо застрагнеш]\nДе у коді розташована команда `малюватиСпрайтів()`?\n:::\n\n::: details [Ще одна підказка]\nЧи очищується екран на початку циклу малювання? Як ми зазвичай очищаємо екран?\n:::",
        "CSD games flyer demo_2021": "# Гра \"Літун\"\n\nУ цій грі гравець намагається зібрати монети, а камінці штовхають гравця по екрану.  Коли гравець виходить за межі екрана, гра завершується.\n\nЗіграй в гру кілька разів і обговори її з партнером.  Ми вже засвоїли всі навички, необхідні для кодування цієї гри.  У цьому мініпроєкті ти створюватимеш власну гру \"Літун\".",
        "CSD games flyer demo_2022": "# Гра \"Літун\"\n\nУ цій грі гравець намагається зібрати монети, а камінці штовхають гравця по екрану.  Коли гравець виходить за межі екрана, гра завершується.\n\nЗіграй в гру кілька разів і обговори її з партнером.  Ми вже засвоїли всі навички, необхідні для кодування цієї гри.  У цьому мініпроєкті ти створюватимеш власну гру \"Літун\".",
        "CSD games functions assessment FR_2021": "# Використання функцій\n\nЯкими трьома способами функції можуть бути корисними під написання програм?\n\n_Підказка: Якщо сумніваєшся, повернися до практичних рівнів для перевірки._",
        "CSD games functions assessment FR_2022": "# Використання функцій\n\nЯкими трьома способами функції можуть бути корисними під написання програм?\n\n_Підказка: Якщо сумніваєшся, повернися до практичних рівнів для перевірки._",
        "CSD games input debug1_2021": "# Налагодження руху черепахи\n\nЦя програма для руху черепашки переривається кожного разу, коли вона намагається рухатися ліворуч.\n\nЩо мало відбутися | Що відбулося | Як відтворити помилку\n------- | ------- | -----\nЧерепаха рухається ліворуч | вся програма перестає працювати | натиснути клавішу зі стрілкою вліво\n\n\n# Завдання\n\n* Запускай і тестуй програму, доки не знайдеш помилку.\n* Використовуй підказки, щоб знайти та виправити помилку.\n",
        "CSD games input debug1_2022": "# Налагодження руху черепахи\n\nЦя програма для руху черепашки переривається кожного разу, коли вона намагається рухатися ліворуч.\n\nЩо мало відбутися | Що відбулося | Як відтворити помилку\n------- | ------- | -----\nЧерепаха рухається ліворуч | вся програма перестає працювати | натиснути клавішу зі стрілкою вліво\n\n\n# Завдання\n\n* Запускай і тестуй програму, доки не знайдеш помилку.\n* Використовуй підказки, щоб знайти та виправити помилку.\n",
        "CSD games input debug2_2021": "# Налагодження руху черепашки 2\n\nЗнайди та виправ помилку, через яку черепаха взагалі не рухається.\n\nЩо мало відбутися | Що відбулося | Як відтворити помилку\n------- | ------- | -----\n|Черепаха рухається за допомогою клавіш зі стрілками | Черепаха майже не рухається | Натискати клавіші зі стрілками |\n| |з місця і залишає слід| |\n\n\n# Завдання\n\n* Запускай і тестуй програму, доки не знайдеш помилку.\n* Використовуй підказки, щоб знайти та виправити помилку.",
        "CSD games input debug2_2022": "# Налагодження руху черепашки 2\n\nЗнайди та виправ помилку, через яку черепаха взагалі не рухається.\n\nЩо мало відбутися | Що відбулося | Як відтворити помилку\n------- | ------- | -----\n|Черепаха рухається за допомогою клавіш зі стрілками | Черепаха майже не рухається | Натискати клавіші зі стрілками |\n| |з місця і залишає слід| |\n\n\n# Завдання\n\n* Запускай і тестуй програму, доки не знайдеш помилку.\n* Використовуй підказки, щоб знайти та виправити помилку.",
        "CSD games mouse mousey_2021": "<img src=\"https://images.code.org/f3af303ba5de68ccdf184ee17b7e1ed0-image-1585832244629.gif\" style=\"float:right\">\n\n# Прогулянка сонечка\n\nЦе сонечко повинно рухатися тільки тоді, коли курсор миші перебуває внизу екрана. Щоб упевнитися, що сонечко рухається лише тоді, коли курсор миші перебуває біля нижньої частини екрана, потрібно використати умову.\n\n# Завдання\n* Використовуй блок `if` для перевірки того, чи перебуває курсор миші (`World.mouseY`) нижче певної точки.\n* Додайте код із шаблоном лічильника, щоб зменшити `bug.x` і змусити його рухатися. Комашка має рухатися лише тоді, коли вказівник миші перебуває у нижній частині екрана.",
        "CSD games mouse mousey_2022": "<img src=\"https://images.code.org/f3af303ba5de68ccdf184ee17b7e1ed0-image-1585832244629.gif\" style=\"float:right\">\n\n# Прогулянка сонечка\n\nЦе сонечко повинно рухатися тільки тоді, коли курсор миші перебуває внизу екрана. Щоб упевнитися, що сонечко рухається лише тоді, коли курсор миші перебуває біля нижньої частини екрана, потрібно використати умову.\n\n# Завдання\n* Використовуй блок `if` для перевірки того, чи перебуває курсор миші (`World.mouseY`) нижче певної точки.\n* Додайте код із шаблоном лічильника, щоб зменшити `bug.x` і змусити його рухатися. Комашка має рухатися лише тоді, коли вказівник миші перебуває у нижній частині екрана.",
        "CSD games mouse scale_2021": "<img src=\"https://images.code.org/36b8c4f797b3aa62f74948caf0457086-image-1585833223868.gif\" style=\"float:right\">\n\n# Подвійні спіралі\n\nЦі спіралі обертаються і змінюють розмір у протилежних напрямках.\n\n# Завдання\n\n* Запусти код, щоб побачити, що змушує спіралі стискатися, рости та обертатися.\n* Додай код, щоб спіралі змінювали дії коли натискається кнопка миші.\n",
        "CSD games mouse scale_2022": "<img src=\"https://images.code.org/36b8c4f797b3aa62f74948caf0457086-image-1585833223868.gif\" style=\"float:right\">\n\n# Подвійні спіралі\n\nЦі спіралі обертаються і змінюють розмір у протилежних напрямках.\n\n# Завдання\n\n* Запусти код, щоб побачити, що змушує спіралі стискатися, рости та обертатися.\n* Додай код, щоб спіралі змінювали дії коли натискається кнопка миші.\n",
        "CSD games mousedown intro_2021": "# Керування шестернями\n\nОсь та сама програма, але з однією невеликою відмінністю.\n\n# Завдання\n\n-   Уважно переглянь програму, особливо рядок 13, щоб зрозуміти, як керувати шестернями.\n-   Запусти програму і перевір, чи правильно все зроблено.\n-   Запрограмуй шестерні обертатися в протилежний бік, коли немає вводу команд від користувача.",
        "CSD games mousedown intro_2022": "# Керування шестернями\n\nОсь та сама програма, але з однією невеликою відмінністю.\n\n# Завдання\n\n-   Уважно переглянь програму, особливо рядок 13, щоб зрозуміти, як керувати шестернями.\n-   Запусти програму і перевір, чи правильно все зроблено.\n-   Запрограмуй шестерні обертатися в протилежний бік, коли немає вводу команд від користувача.",
        "CSD games practice move with mouse_2021": "<img src=\"https://images.code.org/25ca3c6b3c97eecaad3da2f34ee8baa4-image-1604786816070.gif\" style=\"float:right\" width=\"25%\">\n\n# Переміщення привида за допомогою миші\n\nНа цьому рівні ти запрограмуєш привида рухатися ліворуч або праворуч, залежно від положення вказівника миші. У наведеному прикладі, якщо вказівник миші перебуває зліва, привид рухається ліворуч. Протилежний варіант також вірний.\n\n# Завдання\n\n* Напиши щонайменше два оператори 'якщо' для перевірки місцезнаходження мишки.\n* Зроби так, щоб привид рухався в різних напрямках для кожного положення миші.",
        "CSD games practice move with mouse_2022": "<img src=\"https://images.code.org/25ca3c6b3c97eecaad3da2f34ee8baa4-image-1604786816070.gif\" style=\"float:right\" width=\"25%\">\n\n# Переміщення привида за допомогою миші\n\nНа цьому рівні ти запрограмуєш привида рухатися ліворуч або праворуч, залежно від положення вказівника миші. У наведеному прикладі, якщо вказівник миші перебуває зліва, привид рухається ліворуч. Протилежний варіант також вірний.\n\n# Завдання\n\n* Напиши щонайменше два оператори 'якщо' для перевірки місцезнаходження мишки.\n* Зроби так, щоб привид рухався в різних напрямках для кожного положення миші.",
        "CSD games project review_2021": "# Перевірка гри\n\nПереглянь вимоги та план проєкту, щоб переконатися, що у твоїй грі є все необхідне.\n\n-   Чи твій код містить коментарі ?\n-   Чи використовуєш ти функції для організації коду та полегшення його читання?\n-   Чи мають функції та змінні змістовні імена?\n-   Чи використовуєш ти умовні оператори та взаємодії спрайтів, щоб зробити гру цікавішою?",
        "CSD games project review_2022": "# Перевірка гри\n\nПереглянь вимоги та план проєкту, щоб переконатися, що у твоїй грі є все необхідне.\n\n-   Чи твій код містить коментарі ?\n-   Чи використовуєш ти функції для організації коду та полегшення його читання?\n-   Чи мають функції та змінні змістовні імена?\n-   Чи використовуєш ти умовні оператори та взаємодії спрайтів, щоб зробити гру цікавішою?",
        "CSD games side scroller demo_2021": "# Стрибки жабки\n\nЦя гра зі стрибками жаби є прикладом гри жанру сайд-скролер. Такі ігри з бічною прокруткою мають фон, який рухається по екрану з одного боку в інший.\n\nУ цій грі гравець використовуватиме стрілку вгору, щоб змусити жабу стрибати. Жаба повинна уникати грибів, намагаючись зловити мух. Кожна муха приносить один бал, а зіткнення з грибом призводить до зниження рівня здоров'я гравця. Коли рівень здоров'я гравця дорівнює нулю, гра завершується.\n\nЗіграй у гру кілька разів і обговори її з партнером. Ми вже засвоїли всі навички, необхідні для кодування цієї гри. У цьому мініпроєкті ти створиш власний сайд-скролер.",
        "CSD games side scroller demo_2022": "# Стрибки жабки\n\nЦя гра зі стрибками жаби є прикладом гри жанру сайд-скролер. Такі ігри з бічною прокруткою мають фон, який рухається по екрану з одного боку в інший.\n\nУ цій грі гравець використовуватиме стрілку вгору, щоб змусити жабу стрибати. Жаба повинна уникати грибів, намагаючись зловити мух. Кожна муха приносить один бал, а зіткнення з грибом призводить до зниження рівня здоров'я гравця. Коли рівень здоров'я гравця дорівнює нулю, гра завершується.\n\nЗіграй у гру кілька разів і обговори її з партнером. Ми вже засвоїли всі навички, необхідні для кодування цієї гри. У цьому мініпроєкті ти створиш власний сайд-скролер.",
        "CSD games sidescroll background_2021": "# Малюємо тло\n\nЗразок гри має просте тло з блакитного неба, білої овальної хмари та коричневої землі.  Ти можеш намалювати зробити свій фон настільки простим або складним, наскільки хочеш.\n\n# Завдання\n\n-   Знайди коментар до коду `// BACKGROUND`\n-   Використовуй інструменти для малювання, щоб намалювати тло.\n-   Запусти програму для перевірки фонового зображення.",
        "CSD games sidescroll background_2022": "# Малюємо тло\n\nЗразок гри має просте тло з блакитного неба, білої овальної хмари та коричневої землі.  Ти можеш намалювати зробити свій фон настільки простим або складним, наскільки хочеш.\n\n# Завдання\n\n-   Знайди коментар до коду `// BACKGROUND`\n-   Використовуй інструменти для малювання, щоб намалювати тло.\n-   Запусти програму для перевірки фонового зображення.",
        "CSD games sidescroll review_2021": "# Перевіряємо свою гру\n\nТепер, коли ми додали всі функції, настав час зіграти у свою гру!\n\n# Завдання\n\n-   Зіграй у гру кілька разів, щоб перевірити її на наявність помилок.\n-   Переглянь інструкції до проєкту, щоб переконатися, що ми нічого не пропустили.\n-   Внеси останні зміни.",
        "CSD games sidescroll review_2022": "# Перевіряємо свою гру\n\nТепер, коли ми додали всі функції, настав час зіграти у свою гру!\n\n# Завдання\n\n-   Зіграй у гру кілька разів, щоб перевірити її на наявність помилок.\n-   Переглянь інструкції до проєкту, щоб переконатися, що ми нічого не пропустили.\n-   Внеси останні зміни.",
        "CSD games text debug quotes_2021": "<img src=\"https://images.code.org/36c5e245e7f6255473b5d967f9dbbc5f-image-1589573721436.png\" style=\"float:right; width:200px;\">\n\n# Налагодження тексту\n\nВ цій сцені має бути зображений комікс, але тут є помилка.\n\nЩо мало статися | Що відбувається\n----------|----------\nНа екрані з'являється зображення. | Код взагалі не запускається, \n  |  | і з'являється повідомлення про помилку.\n\n# Завдання\n\n* Запусти код і прочитай повідомлення про помилку.\n* Шукай підказки, де саме в коді знаходиться помилка.\n* Знайшовши помилку, виправ її.\n* Які підказки допомогли тобі знайти проблему?\n\n![]()\n\n",
        "CSD games text debug quotes_2022": "<img src=\"https://images.code.org/36c5e245e7f6255473b5d967f9dbbc5f-image-1589573721436.png\" style=\"float:right; width:200px;\">\n\n# Налагодження тексту\n\nВ цій сцені має бути зображений комікс, але тут є помилка.\n\nЩо мало статися | Що відбувається\n----------|----------\nНа екрані з'являється зображення. | Код взагалі не запускається, \n  |  | і з'являється повідомлення про помилку.\n\n# Завдання\n\n* Запусти код і прочитай повідомлення про помилку.\n* Шукай підказки, де саме в коді знаходиться помилка.\n* Знайшовши помилку, виправ її.\n* Які підказки допомогли тобі знайти проблему?\n\n![]()\n\n",
        "CSD games text freeplay_2021": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD games text freeplay_2022": "# Вільна гра\n\nВикористовуй отримані знання, щоб намалювати все, що захочеш.  Коли завершиш, можеш натиснути![](https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43 PM.png)  щоб надіслати свій малюнок другу, або ![](https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50 PM.png) щоб відправити його до твоєї Галереї проєктів.",
        "CSD games velocity 4 directions_2021": "<img src=\"https://images.code.org/08892a209712e5612ed813ecaf34484a-image-1592601350973.2020-06-19 17_13_37.gif\" style=\"float: right; width: 150px;\">\n\n# Зміна курсу\n\nПодивися на анімацію праворуч. Зверни увагу, що фіолетовий спрайт інопланетянина змінює швидкості X та Y, коли він перебуває біля кожного кута екрана.\n\n# Завдання\n\n* Запусти програму і зрозумій, як вона працює зараз.\n* Додай блоки `.velocityX` та `.velocityY` до кожної умови, щоб інопланетянин пройшов повний шлях.\n\n**Обережно!** Якщо спрайт починає рухатися по діагоналі, це може означати, що він має швидкість як по X, так і по Y. У першому куті інопланетянин повинен *припинити рух вгору* і *почати рух праворуч*.",
        "CSD games velocity 4 directions_2022": "<img src=\"https://images.code.org/08892a209712e5612ed813ecaf34484a-image-1592601350973.2020-06-19 17_13_37.gif\" style=\"float: right; width: 150px;\">\n\n# Зміна курсу\n\nПодивися на анімацію праворуч. Зверни увагу, що фіолетовий спрайт інопланетянина змінює швидкості X та Y, коли він перебуває біля кожного кута екрана.\n\n# Завдання\n\n* Запусти програму і зрозумій, як вона працює зараз.\n* Додай блоки `.velocityX` та `.velocityY` до кожної умови, щоб інопланетянин пройшов повний шлях.\n\n**Обережно!** Якщо спрайт починає рухатися по діагоналі, це може означати, що він має швидкість як по X, так і по Y. У першому куті інопланетянин повинен *припинити рух вгору* і *почати рух праворуч*.",
        "CSD games velocity bee_2021": "<img src=\"https://images.code.org/63f0da91b98c6211a09ac7fbaf9e0011-image-1585848730692.gif\" style=\"float: right\">\n\n# Пензлик\n\nЗанур пензлик у фарбу\n\n# Завдання\n\n* Використовуй умовний оператор, щоб відправити пензлик вниз, якщо натиснута стрілка вниз.\n* Використовуй інший умовний оператор, щоб відправити пензлик вгору, якщо він досягне палітри.\n   * Підказка: Треба буде перевірити його властивість Y.",
        "CSD games velocity bee_2022": "<img src=\"https://images.code.org/63f0da91b98c6211a09ac7fbaf9e0011-image-1585848730692.gif\" style=\"float: right\">\n\n# Пензлик\n\nЗанур пензлик у фарбу\n\n# Завдання\n\n* Використовуй умовний оператор, щоб відправити пензлик вниз, якщо натиснута стрілка вниз.\n* Використовуй інший умовний оператор, щоб відправити пензлик вгору, якщо він досягне палітри.\n   * Підказка: Треба буде перевірити його властивість Y.",
        "CSD games velocity tennis_2021": "# Вперед і назад\n\nМ'яч відскакує назад, коли потрапляє в нижню частину екрана.  Зможеш ти зробити так, щоб він відскакував, коли потрапляє у верхню частину екрана?\n\n# Завдання\n\n-   Запусти код і подивися, як він працює.\n-   Подивися, як використовуються умовні оператори та швидкість, щоб змусити м'яч відскочити в нижній частині екрана.\n-   Додай код, щоб м'яч відскакував у верхній частині екрана.",
        "CSD games velocity tennis_2022": "# Вперед і назад\n\nМ'яч відскакує назад, коли потрапляє в нижню частину екрана.  Зможеш ти зробити так, щоб він відскакував, коли потрапляє у верхню частину екрана?\n\n# Завдання\n\n-   Запусти код і подивися, як він працює.\n-   Подивися, як використовуються умовні оператори та швидкість, щоб змусити м'яч відскочити в нижній частині екрана.\n-   Додай код, щоб м'яч відскакував у верхній частині екрана.",
        "CSD web CSS project CSS_2021": "# Додавання стилів CSS\n\nДалі вам треба додати стилі на вашу сторінку.\n\n# Завдання\n\n-   Додайте властивості CSS, щоб створити стилі, які ви описали в плані проєкту.",
        "CSD web CSS project CSS_2022": "# Додавання стилів CSS\n\nДалі вам треба додати стилі на вашу сторінку.\n\n# Завдання\n\n-   Додайте властивості CSS, щоб створити стилі, які ви описали в плані проєкту.",
        "CSD web CSS project HTML_2021": "# Додавання HTML-коду\n\nДалі вам потрібно додати HTML-код до своєї сторінки.\n\n# Завдання\n\n-   Додайте HTML, щоб створити сторінку, ескіз якої ви створили у вашому плані проєкту.",
        "CSD web CSS project HTML_2022": "# Додавання HTML-коду\n\nДалі вам потрібно додати HTML-код до своєї сторінки.\n\n# Завдання\n\n-   Додайте HTML, щоб створити сторінку, ескіз якої ви створили у вашому плані проєкту.",
        "CSD web CSS project check_2021": "# Перевірте свою сторінку\n\nТепер перевірте, чи є на вашій сторінці все необхідне.\n\n# Завдання\n\n-   Впевніться, що присутній весь **вміст**.\n-   Перевірте, чи правильно HTML-теги **структурують** цей вміст.\n-   Впевніться, що властивості CSS **стилізують** вміст правильно.\n-   Впевніться, що ваш код добре організований, легко читається і не містить помилок.",
        "CSD web CSS project check_2022": "# Перевірте свою сторінку\n\nТепер перевірте, чи є на вашій сторінці все необхідне.\n\n# Завдання\n\n-   Впевніться, що присутній весь **вміст**.\n-   Перевірте, чи правильно HTML-теги **структурують** цей вміст.\n-   Впевніться, що властивості CSS **стилізують** вміст правильно.\n-   Впевніться, що ваш код добре організований, легко читається і не містить помилок.",
        "CSD web HTML project HTML_2021": "# Додавання HTML-коду\n\nДалі вам потрібно додати HTML-код до своєї сторінки.\n\n# Завдання\n\n-   Додайте HTML, щоб створити сторінку, ескіз якої ви створили у вашому плані проєкту.",
        "CSD web HTML project HTML_2022": "# Додавання HTML-коду\n\nДалі вам потрібно додати HTML-код до своєї сторінки.\n\n# Завдання\n\n-   Додайте HTML, щоб створити сторінку, ескіз якої ви створили у вашому плані проєкту.",
        "CSD web HTML project check_2021": "# Перевірка вашої сторінки\n\nТепер перевірте, чи є на вашій сторінці все, що ви хотіли на ній бачити.\n\n# Завдання\n\n-   Переконайтеся, що наявний весь **вміст**.\n-   Перевірте, чи правильно HTML-теги **структурують** цей вміст.\n-   Переконайтеся, що ваш код організований, читабельний і не містить помилок.",
        "CSD web HTML project check_2022": "# Перевірка вашої сторінки\n\nТепер перевірте, чи є на вашій сторінці все, що ви хотіли на ній бачити.\n\n# Завдання\n\n-   Переконайтеся, що наявний весь **вміст**.\n-   Перевірте, чи правильно HTML-теги **структурують** цей вміст.\n-   Переконайтеся, що ваш код організований, читабельний і не містить помилок.",
        "CSD web add CSS_2021": "# Додавання своїх стилів\n\nТепер додайте весь код CSS, за який ви відповідаєте, включно з власними класами.\n\n# Завдання\n\n-   Додайте набори правил CSS у таблицю стилів.\n-   Перевірте, чи відображаються правильні стилі на всіх сторінках.",
        "CSD web add CSS_2022": "# Додавання своїх стилів\n\nТепер додайте весь код CSS, за який ви відповідаєте, включно з власними класами.\n\n# Завдання\n\n-   Додайте набори правил CSS у таблицю стилів.\n-   Перевірте, чи відображаються правильні стилі на всіх сторінках.",
        "CSD web add html_2021": "# Додавання свого вмісту та HTML\n\nТепер додайте весь HTML-код, який знадобиться для вашого проєкту, включно з посиланнями на таблицю стилів та інші сторінки.\n\nЯкщо ви відповідаєте за панель переходів, додайте її також.\n\n# Завдання\n\n-   Додайте HTML на сторінки.\n-   Перевірте свої посилання, щоб переконатися, що вони працюють.\n-   Перевірте, чи відображаються всі зображення.",
        "CSD web add html_2022": "# Додавання свого вмісту та HTML\n\nТепер додайте весь HTML-код, який знадобиться для вашого проєкту, включно з посиланнями на таблицю стилів та інші сторінки.\n\nЯкщо ви відповідаєте за панель переходів, додайте її також.\n\n# Завдання\n\n-   Додайте HTML на сторінки.\n-   Перевірте свої посилання, щоб переконатися, що вони працюють.\n-   Перевірте, чи відображаються всі зображення.",
        "CSD web challenge stroke_2021": "# Білий текст на білому тлі\n\nМожна додати рамку до тексту за допомогою команди `stroke()`, як показано нижче. Як і для інших фігур, також можна використовувати команду `strokeWeight()` для зміни товщини обведення. Запустивши код нижче, ти помітиш, що звичайна товщина обведення тексту не дає йому достатньої контрастності, коли тло того самого кольору.\n\n# Завдання\n\n* Переглянь код, щоб дізнатися, як він працює.\n* Додай команду `strokeWeight()`, щоб зробити текст більш помітним.\n",
        "CSD web challenge stroke_2022": "# Білий текст на білому тлі\n\nМожна додати рамку до тексту за допомогою команди `stroke()`, як показано нижче. Як і для інших фігур, також можна використовувати команду `strokeWeight()` для зміни товщини обведення. Запустивши код нижче, ти помітиш, що звичайна товщина обведення тексту не дає йому достатньої контрастності, коли тло того самого кольору.\n\n# Завдання\n\n* Переглянь код, щоб дізнатися, як він працює.\n* Додай команду `strokeWeight()`, щоб зробити текст більш помітним.\n",
        "CSD web challenge wrap text_2021": "# Перенесення тексту\n\nМи вже знаємо, що перші два параметри блоку `text()` вказують на *верхній лівий* кут текстової області. Існує також ще два необов'язкові параметри, які за замовчуванням приховані. Ці останні два параметри вказують на *ширину* і *висоту* текстової області. Якщо використовуються всі 5 параметрів, Ігрова Лабораторія намагатиметься вписати текст у прямокутник, визначений цими параметрами.\n\n<img src=\"https://images.code.org/063fbcb347e5c935cd7d0aede7e2ac11-image-1607015001837.png\" width=\"400\">\n\n\n# Завдання\n\n* Переглянь код, щоб дізнатися, як це працює.\n* У режимі блоків використовуй кнопки зі стрілками на блоці `text()` для додавання необов'язкових параметрів.\n* Введи значення в необов'язкові параметри, які допоможуть розмістити текст на екрані. \n  * **Підказка:** Використовуй значення для *ширини* та *висоти*, які знаходяться біля правого нижнього кута екрана.\n\n",
        "CSD web challenge wrap text_2022": "# Перенесення тексту\n\nМи вже знаємо, що перші два параметри блоку `text()` вказують на *верхній лівий* кут текстової області. Існує також ще два необов'язкові параметри, які за замовчуванням приховані. Ці останні два параметри вказують на *ширину* і *висоту* текстової області. Якщо використовуються всі 5 параметрів, Ігрова Лабораторія намагатиметься вписати текст у прямокутник, визначений цими параметрами.\n\n<img src=\"https://images.code.org/063fbcb347e5c935cd7d0aede7e2ac11-image-1607015001837.png\" width=\"400\">\n\n\n# Завдання\n\n* Переглянь код, щоб дізнатися, як це працює.\n* У режимі блоків використовуй кнопки зі стрілками на блоці `text()` для додавання необов'язкових параметрів.\n* Введи значення в необов'язкові параметри, які допоможуть розмістити текст на екрані. \n  * **Підказка:** Використовуй значення для *ширини* та *висоти*, які знаходяться біля правого нижнього кута екрана.\n\n",
        "CSD web check_2021": "# Перевірка своєї роботи\n\nВаш сайт готовий!  Перевірте, чи відповідає він вимогам.\n\n# Завдання\n\n-   Упевніться, що сайт виглядає так само, як і сайти колег по команді.\n-   Упевніться, що на сайті є все з плану проєкту.\n-   Упевніться, що сайт відповідає вимогам критеріїв проєкту.",
        "CSD web check_2022": "# Перевірка своєї роботи\n\nВаш сайт готовий!  Перевірте, чи відповідає він вимогам.\n\n# Завдання\n\n-   Упевніться, що сайт виглядає так само, як і сайти колег по команді.\n-   Упевніться, що на сайті є все з плану проєкту.\n-   Упевніться, що сайт відповідає вимогам критеріїв проєкту.",
        "CSD web classes freeplay_2021": "# Довільні дії\n\nВикористовуйте свої нові знання, щоб створити нову сторінку, стилізовану за допомогою класів.",
        "CSD web conditionals assessment_2021": "# Магічний динозавр\n\nЗроби так, щоб динозавр перетворився на птеродактиля, коли злетить.\n\n# Завдання\n\n-   Запусти код, щоб побачити, як він працює.\n-   Додай умову, яка змінить анімацію динозавра на птеродактиля, коли він досягне неба.",
        "CSD web conditionals assessment_2022": "# Магічний динозавр\n\nЗроби так, щоб динозавр перетворився на птеродактиля, коли злетить.\n\n# Завдання\n\n-   Запусти код, щоб побачити, як він працює.\n-   Додай умову, яка змінить анімацію динозавра на птеродактиля, коли він досягне неба.",
        "CSD web conditionals predict contained_2021": "<img src=\"https://images.code.org/36c5543076622c96f7dabce8bc37f995-image-1468425774455.54.03 PM.png\" style=\"float:right;width:100px\">\n\n# Умовний оператор\n\nЛогічні вирази дозволяють нам ставити питання, але для того, щоб використовувати ці питання для зміни поведінки програми, нам потрібен умовний оператор `if`.\n\n# Завдання\n\n-   Переглянь код цієї програми для гоночного автомобіля.\n-   Що зробить програма, коли автомобіль досягне фінішу?\n-   Чому блок `if` розташований всередині циклу малювання?",
        "CSD web conditionals predict contained_2022": "<img src=\"https://images.code.org/36c5543076622c96f7dabce8bc37f995-image-1468425774455.54.03 PM.png\" style=\"float:right;width:100px\">\n\n# Умовний оператор\n\nЛогічні вирази дозволяють нам ставити питання, але для того, щоб використовувати ці питання для зміни поведінки програми, нам потрібен умовний оператор `if`.\n\n# Завдання\n\n-   Переглянь код цієї програми для гоночного автомобіля.\n-   Що зробить програма, коли автомобіль досягне фінішу?\n-   Чому блок `if` розташований всередині циклу малювання?",
        "CSD web create pages project_2021": "# Ваш груповий проєкт\n\n<div class=\"no-pullthrough\" style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n\n::: details [**Що таке гіперпосилання?**]\nГіперпосилання можуть з'єднувати локальні або зовнішні веб-сторінки. Щоб додати навігацію на свій веб-сайт, потрібно додати гіперпосилання, які з'єднують окремі вебсторінки. **Додавати гіперпосилання на вебсторінку можна за допомогою елемента `<a>`**.  Текст, який ти хочеш відобразити як гіперпосилання, розміщений між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки </a>\n\n:::\n\n::: details [**Як додати гіперпосилання?**]\nМожна <strong>додавати гіперпосилання на свою вебсторінку за допомогою елемента `<a>`</strong>. Текст, який ми хочемо відобразити як гіперпосилання, розміщується між відкривним і закривним тегами гіперпосилання. Елемент `<a>` має атрибут `href`, який вказує на адресу переходу за посиланням. Адреса локальної сторінки - це лише шлях до файлу цієї сторінки. <br> <br>\n\nНаприклад, для посилання на сторінку \"Унікальні будинки\" треба додати наступний код всередині твого елемента `<body>`. <br><br>\n\n    <a href=\"houses.html\"> Унікальні будинки</a>\n\n:::\n\n</div>\n\nОсь ваш груповий проєкт.  У ньому вже є титульна сторінка, але вам потрібно створити всі інші сторінки.\n\n# Завдання\n\n-   Перевірте імена усіх сторінок у плані вебсайту, щоб впевнитися, що вони відповідають належним правилам іменування.\n    -   Порадьтесь з іншими членами групи, якщо ім'я сторінки потрібно змінити.\n-   Створіть нову сторінку для кожної зі сторінок вашого планованого сайту.\n-   На кожній новій сторінці створіть HTML-коментар з описом сторінки і вказанням, хто за неї відповідає.\n-   Впевніться, що всі члени твоєї групи мають однаковий список HTML-сторінок.",
        "CSD web mouse assessment_2021": "# Налагодження програми\n\nЦя програма повинна трясти істоту лише тоді, коли натиснута кнопка миші, і показувати напрямок руху, коли кнопка миші **не натиснута**.\n\n# Завдання\n\n-   Зміни код так, щоб істота тремтіла лише коли натискається кнопка миші.\n-   Зміни код так, щоб вказівки (\"Натисни мишу, щоб потрясти істоту.\") **показувалися** лише тоді, коли користувач **не натискає кнопку миші**.",
        "CSD web mouse assessment_2022": "# Налагодження програми\n\nЦя програма повинна трясти істоту лише тоді, коли натиснута кнопка миші, і показувати напрямок руху, коли кнопка миші **не натиснута**.\n\n# Завдання\n\n-   Зміни код так, щоб істота тремтіла лише коли натискається кнопка миші.\n-   Зміни код так, щоб вказівки (\"Натисни мишу, щоб потрясти істоту.\") **показувалися** лише тоді, коли користувач **не натискає кнопку миші**.",
        "CSD web project animated background_2021": "# Створюємо власну сцену - Тло\n\nСпочатку створи тло своєї сцени за допомогою команд фігур або спрайтів.\n\n# Завдання\n\n-   Використовуй команду `background()`, щоб заповнити екран кольором.\n-   Додавай будь-які необхідні команди фігур або спрайтів, щоб намалювати тло своєї сцени.",
        "CSD web project animated background_2022": "# Створюємо власну сцену - Тло\n\nСпочатку створи тло своєї сцени за допомогою команд фігур або спрайтів.\n\n# Завдання\n\n-   Використовуй команду `background()`, щоб заповнити екран кольором.\n-   Додавай будь-які необхідні команди фігур або спрайтів, щоб намалювати тло своєї сцени.",
        "CSD web project animated example_2021": "# Анімовані сцени\n\nПрийшов час спробувати створити анімовану сцену.  Подивися на цей приклад і подумай, що тобі хотілося б намалювати.\n\n# Анімований приклад\n\n1.  **Які рухи ти бачиш в цій сцені??**\n2.  **Які рухи використовують випадкові числа?**\n3.  **Які рухи використовують шаблон лічильника?**",
        "CSD web project animated example_2022": "# Анімовані сцени\n\nПрийшов час спробувати створити анімовану сцену.  Подивися на цей приклад і подумай, що тобі хотілося б намалювати.\n\n# Анімований приклад\n\n1.  **Які рухи ти бачиш в цій сцені??**\n2.  **Які рухи використовують випадкові числа?**\n3.  **Які рухи використовують шаблон лічильника?**",
        "CSD web project animated movement_2021": "# Створюємо власну сцену - Переміщення\n\nФінальна частина твоєї сцени - оживи її, додавши рухи.\n\n# Завдання\n\n-   Додай рухи спрайтам, тексту або намальованим фігурам.\n-   Додай один **випадковий** рух.\n-   Додай один рух за **шаблоном лічильника**.",
        "CSD web project animated movement_2022": "# Створюємо власну сцену - Переміщення\n\nФінальна частина твоєї сцени - оживи її, додавши рухи.\n\n# Завдання\n\n-   Додай рухи спрайтам, тексту або намальованим фігурам.\n-   Додай один **випадковий** рух.\n-   Додай один рух за **шаблоном лічильника**.",
        "CSD web project animated plan_2021": "# Плануємо сцену\n\nПерш ніж рухатися далі, слід приділити час плануванню сцени, яку хочеш намалювати.\n\n## Створюємо ескіз\n\nВізьми прості фігури, які ми використовували раніше, спрайти для персонажів і будь-який текст, який ти хочеш розмістити на екрані. \n\n## Планування руху\n\n1.  Які рухи ти хочеш бачити у твоїй сцені?\n2.  В яких рухах використовуватимуться випадкові числа?\n3.  В яких рухах використовуватиметься шаблон лічильника?\n4.  Чи потрібні нам змінні для зберігання інформації про те, де щось перебуває?\n\n## Дізнайся більше\n\n1.  Чи є ще щось, чому нам потрібно навчитися?\n2.  Чи є якісь навички, які тобі потрібно повторити?\n3.  Де можна знайти потрібну інформацію?",
        "CSD web project animated review_2021": "# Перевірка сцени\n\nПереглянь свою анімовану сцену востаннє, щоб переконатися, що всі потрібні елементи були додані.\n\n# Завдання\n\n-   Порівняй свою анімовану сцену з планом.\n-   Внеси останні зміни.\n-   Чим ти пишаєшся найбільше?",
        "CSD web project animated review_2022": "# Перевірка сцени\n\nПереглянь свою анімовану сцену востаннє, щоб переконатися, що всі потрібні елементи були додані.\n\n# Завдання\n\n-   Порівняй свою анімовану сцену з планом.\n-   Внеси останні зміни.\n-   Чим ти пишаєшся найбільше?",
        "CSD web project animated sprites_2021": "# Створюємо власну сцену - Спрайти\n\nКоли тло готове, настав час додати спрайти.\n\n# Завдання\n\n-   Додай або створи всі свої анімації для спрайтів на вкладці \"Анімація\".\n-   Створи кожен спрайт і признач йому анімацію.\n-   Встанови значення для будь-яких властивостей спрайтів, які ти використовуватимеш.\n-   Намалюй всі свої спрайти на екрані.",
        "CSD web project animated sprites_2022": "# Створюємо власну сцену - Спрайти\n\nКоли тло готове, настав час додати спрайти.\n\n# Завдання\n\n-   Додай або створи всі свої анімації для спрайтів на вкладці \"Анімація\".\n-   Створи кожен спрайт і признач йому анімацію.\n-   Встанови значення для будь-яких властивостей спрайтів, які ти використовуватимеш.\n-   Намалюй всі свої спрайти на екрані.",
        "CSD web project animated text_2021": "# Створюємо власну сцену - Текст\n\nНаступною частиною твоєї сцени є додавання тексту.\n\n# Завдання\n\n-   Додай текст до свого проєкту.\n-   Використовуй будь-які інші команди, щоб змінити вигляд тексту.",
        "CSD web project animated text_2022": "# Створюємо власну сцену - Текст\n\nНаступною частиною твоєї сцени є додавання тексту.\n\n# Завдання\n\n-   Додай текст до свого проєкту.\n-   Використовуй будь-які інші команди, щоб змінити вигляд тексту.",
        "CSD web share CSS_2021": "# Обмін стилями\n\nТепер поділіться всіма стилями та класами CSS зі своїми колегами по команді.\n\n# Завдання\n\n-   Скористайтесь посиланням \"Поділитися\" від кожного з колег по команді та клацніть \"Переглянути код\", щоб побачити їхній HTML та CSS.\n-   Відкрийте таблиці стилів кожного з колег по команді та скопіюйте і вставте їхній код у свою таблицю стилів.\n-   Перевірте таблицю стилів, щоб переконатися у відсутності конфліктів  (два набори правил для одного тегу або стилю).\n-   Перевірте, чи правильно відображаються стилі на всіх сторінках.",
        "CSD web share CSS_2022": "# Обмін стилями\n\nТепер поділіться всіма стилями та класами CSS зі своїми колегами по команді.\n\n# Завдання\n\n-   Скористайтесь посиланням \"Поділитися\" від кожного з колег по команді та клацніть \"Переглянути код\", щоб побачити їхній HTML та CSS.\n-   Відкрийте таблиці стилів кожного з колег по команді та скопіюйте і вставте їхній код у свою таблицю стилів.\n-   Перевірте таблицю стилів, щоб переконатися у відсутності конфліктів  (два набори правил для одного тегу або стилю).\n-   Перевірте, чи правильно відображаються стилі на всіх сторінках.",
        "CSD web share html_2021": "# Обмін контентом і HTML\n\nПоділіться своєю вебсторінкою з колегами по команді та скопіюйте і вставте код їхніх сторінок у свій проєкт.\n\n# Завдання\n\n-   \"Поділіться\" своєю сторінкою і дайте посилання на неї своїм колегам по команді.\n-   Отримайте посилання \"Поділитися\" від кожного з колег по команді та клацніть посилання \"Переглянути код\" внизу екрана.\n-   Скопіюйте HTML зі сторінок колег по команді у свій проєкт.\n-   Скопіюйте і вставте правильну панель переходів на кожну сторінку.\n-   Перевірте, чи працюють належним чином усі посилання та зображення.",
        "CSD web share html_2022": "# Обмін контентом і HTML\n\nПоділіться своєю вебсторінкою з колегами по команді та скопіюйте і вставте код їхніх сторінок у свій проєкт.\n\n# Завдання\n\n-   \"Поділіться\" своєю сторінкою і дайте посилання на неї своїм колегам по команді.\n-   Отримайте посилання \"Поділитися\" від кожного з колег по команді та клацніть посилання \"Переглянути код\" внизу екрана.\n-   Скопіюйте HTML зі сторінок колег по команді у свій проєкт.\n-   Скопіюйте і вставте правильну панель переходів на кожну сторінку.\n-   Перевірте, чи працюють належним чином усі посилання та зображення.",
        "CSD web text assessment_2021": "# Додавання тексту\n\nОсь сцена, але вона потребує тексту.\n\n# Завдання\n\n-   Додай два фрагменти тексту до сцени.  \n-   Зроби два фрагменти тексту різного розміру.",
        "CSD web text assessment_2022": "# Додавання тексту\n\nОсь сцена, але вона потребує тексту.\n\n# Завдання\n\n-   Додай два фрагменти тексту до сцени.  \n-   Зроби два фрагменти тексту різного розміру.",
        "CSD web text size_2021": "# Розмір тексту\n\nЗмінювати розмір тексту можна за допомогою блоку `textSize()`.\n\n# Завдання\n\n-   Прочитай код, щоб дізнатися, як він працює.\n-   Додай новий блок `textSize`, щоб зробити слово \"large\" найбільшим.",
        "CSD web text size_2022": "# Розмір тексту\n\nЗмінювати розмір тексту можна за допомогою блоку `textSize()`.\n\n# Завдання\n\n-   Прочитай код, щоб дізнатися, як він працює.\n-   Додай новий блок `textSize`, щоб зробити слово \"large\" найбільшим.",
        "CSD web text stroke_2021": "# Колір тексту\n\nТи можеш змінювати колір тексту за допомогою блоку `fill`.\n\n# Завдання\n* Переглянь код, щоб дізнатися, як він працює.\n* Додай новий блок, щоб змінити колір слова слово \"sky\".\n* Додай більше тексту зі ще більшою кількістю кольорів.",
        "CSD web text stroke_2022": "# Колір тексту\n\nТи можеш змінювати колір тексту за допомогою блоку `fill`.\n\n# Завдання\n* Переглянь код, щоб дізнатися, як він працює.\n* Додай новий блок, щоб змінити колір слова слово \"sky\".\n* Додай більше тексту зі ще більшою кількістю кольорів.",
        "CSD web upload images multi_2021": "# Завантаження зображень\n\nЗавантажте усі зображення твоєї команди у проєкт.\n\n# Завдання\n\n-   Завантажте усі зображення, перелічені в плані вебсайту команди, у свій проєкт.\n-   Перевірте, щоб імена всіх файлів зображення відповідали правилам іменування.\n-   Перевірте, чи всі члени команди мають однакові зображення з однаковими назвами.",
        "CSD web upload images multi_2022": "# Завантаження зображень\n\nЗавантажте усі зображення твоєї команди у проєкт.\n\n# Завдання\n\n-   Завантажте усі зображення, перелічені в плані вебсайту команди, у свій проєкт.\n-   Перевірте, щоб імена всіх файлів зображення відповідали правилам іменування.\n-   Перевірте, чи всі члени команди мають однакові зображення з однаковими назвами.",
        "CSD: Animating Sprite Movement_2019": "## Питання для обговорення\n\n-   Що таке шаблон лічильника?\n-   Як шаблон лічильника переміщує спрайти по екрану?",
        "CSD: Animating Sprite Movement_2021": "## Питання для обговорення\n\n-   Що таке шаблон лічильника?\n-   Як шаблон лічильника переміщує спрайти по екрану?",
        "CSD: Animating Sprite Movement_2022": "## Питання для обговорення\n\n-   Що таке шаблон лічильника?\n-   Як шаблон лічильника переміщує спрайти по екрану?",
        "CSD: Animation Tab_2019": "## Питання для обговорення\n\n-   Які кроки необхідно виконати для додавання зображення до спрайту?\n-   Якими різними способами можна отримати зображення?",
        "CSD: Animation Tab_2021": "## Питання для обговорення\n\n-   Які кроки необхідно виконати для додавання зображення до спрайту?\n-   Якими різними способами можна отримати зображення?",
        "CSD: Animation Tab_2022": "## Питання для обговорення\n\n-   Які кроки необхідно виконати для додавання зображення до спрайту?\n-   Якими різними способами можна отримати зображення?",
        "CSD: Drawing in Game Lab 1_2019": "## Питання для обговорення\n\n-   Де можна знайти більше інформації про те, як використовувати блоки?\n-   У чому перевага використання режиму блоків?",
        "CSD: Drawing in Game Lab 1_2021": "## Питання для обговорення\n\n-   Де можна знайти більше інформації про те, як використовувати блоки?\n-   У чому перевага використання режиму блоків?",
        "CSD: Drawing in Game Lab 1_2022": "## Питання для обговорення\n\n-   Де можна знайти більше інформації про те, як використовувати блоки?\n-   У чому перевага використання режиму блоків?",
        "CSD: Drawing in Game Lab 2_2019": "## Питання для обговорення\n\n-   Яка різниця між кольорами контура і заливки?",
        "CSD: Drawing in Game Lab 2_2021": "## Питання для обговорення\n\n-   Яка різниця між кольорами контура і заливки?",
        "CSD: Drawing in Game Lab 2_2022": "## Питання для обговорення\n\n-   Яка різниця між кольорами контура і заливки?",
        "CSD: Introduction to the Draw Loop_2021": "Запитання для обговорення після перегляду відео:\\*\\*\n\n-   Що робить функція (цикл) малювання?",
        "CSD: Sprite Velocity_2019": "## Питання для обговорення\n\n-   Чому можна використовувати блок швидкості замість шаблону лічильника?\n-   Наведи приклад шаблону лічильника та як замість нього можна використати блок швидкості.",
        "CSD: Sprite Velocity_2021": "## Питання для обговорення\n\n-   Чому можна використовувати блок швидкості замість шаблону лічильника?\n-   Наведи приклад шаблону лічильника та як замість нього можна використати блок швидкості.",
        "CSD: Sprite Velocity_2022": "## Питання для обговорення\n\n-   Чому можна використовувати блок швидкості замість шаблону лічильника?\n-   Наведи приклад шаблону лічильника та як замість нього можна використати блок швидкості.",
        "CSD: Sprites in Game Lab_2021": "## Питання для обговорення:\\*\\*\n\n-   Що таке спрайт?\n-   Що таке властивості?\n-   Яку проблему вирішують спрайти?",
        "CSDU2 - Type Anything": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n# Ласкаво просимо до Web Lab!\n\nПлатформа, на якій ви знаходитесь, називається Web Lab. Є три основні частини екрану в Web Lab.\n\n# Зроби це\n\n-   Спробуйте ввести щось у робочій області.\n-   Натисни <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> щоб побачити його в області попереднього перегляду!",
        "CSDU2 - Type Anything_2018": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n# Ласкаво просимо до Web Lab!\n\nПлатформа, на якій ви знаходитесь, називається Web Lab. Є три основні частини екрану в Web Lab.\n\n# Зроби це\n\n-   Спробуйте ввести щось у робочій області.\n-   Натисни <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> щоб побачити його в області попереднього перегляду!",
        "CSDU2 - Type Anything_2019": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n# Ласкаво просимо до Web Lab!\n\nПлатформа, на якій ви знаходитесь, називається Web Lab. Є три основні частини екрану в Web Lab.\n\n# Зроби це\n\n-   Спробуйте ввести щось у робочій області.\n-   Натисни <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> щоб побачити його в області попереднього перегляду!",
        "CSDU2 - Type Anything_2021": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n# Ласкаво просимо до Веб Лабораторії!\n\nПлатформа, на якій ви знаходитесь, називається Веб Лабораторія. У Веб Лабораторії є три основні частини екрану.\n\n# Завдання\n\n-   Спробуйте ввести щось у робочій області.\n-   Натисніть <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> щоб побачити його в області попереднього перегляду!",
        "CSDU2 - Type Anything_2022": "<img src=\"https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg\" style=\"width:400px; float:right\">\n\n# Ласкаво просимо до Web Lab!\n\nПлатформа, на якій ви знаходитесь, називається Web Lab. Є три основні частини екрану в Web Lab.\n\n# Зроби це\n\n-   Спробуйте ввести щось у робочій області.\n-   Натисни <img src=\"https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-1493226906609.14.45 AM.png\" style=\"width:150px\"> щоб побачити його в області попереднього перегляду!",
        "CSDU6 - sensors predict question_2021": "# Робимо прогноз\n\nПереглянь код цієї програми та зроби прогноз нижче. Що, на твою думку, зробить ця програма після запуску?",
        "CSDU6 - sensors predict question_2222": "# Робимо прогноз\n\nПереглянь код цієї програми та зроби прогноз нижче. Що, на твою думку, зробить ця програма після запуску?",
        "Course 4 Artist For Loops 6a": "Зроби три невеличкі виправлення в коді останнього рівня, щоб розв'язати це завдання!",
        "Course 4 Play Lab Vars 1": "На цей раз не потрібно писати код, просто натисни \"Запустити\", щоб пограти в гру! Ти граєш за собаку, яка намагається зібрати більше прапорів, ніж кішка. Використовуй стрілку вниз, щоб керувати собакою. Натисни \"Готово\", коли завершиш гру.",
        "Course 4 Play Lab Vars 2": "Ті перегони були не зовсім справедливим! Поміняй значення змінної швидкість собаки \"dog\\_speed\", щоб переконатися, що можеш зібрати більше прапорів, ніж кіт. Перемагає перший, хто збере 10 прапорів!",
        "Course 4 Play Labs For Loops 1": "Зробимо так, щоб собака промовляв кожне число від 1 до 100. Використаємо блоки циклу та лічильника, щоб промовляти значення лічильника щоразу при виконанні циклу.\nfor - для\ncounter - змінна-лічильник\nfrom - від (починаючи від)\nto - до\ncount by - перебирати кожне",
        "Course 4 Playlab For Loops 4b": "А тепер ці персонажі змагатимуться!\\\nКожен із них має \"лічильник\", який вказує кількість кроків переміщення, але ці лічильники мають різні значення у різних циклах \"для\".\\\nМожеш змінити приріст в одному з циклів, щоб вийшла нічия?",
        "Course 4 Playlab For Loops 5b": "Зміни інтервал у циклах \"для\", щоб персонажі зустрілись.",
        "Course 4 SCV 3": "**Супер-челендж зі змінними:** Потрібно застосувати все, що вже знаєш для того, щоб розв'язати це завдання! Має бути складно. Зможеш справитись і знайти рішення?\n\n* * *\n\nА тепер до гри! Злови Кота, щоб отримати 2 бали. Злови Пінгвіна, щоб отримати 3 бали. Зароби 10 балів для перемоги! Уважно - коли Кіт та Пінгвін торкаються один одного, бали втрачаються.\n\n**Додавай необхідні блоки, щоб гра працювала так, як у поясненні.**\n\n-   \\*\\* Як можна змусити Собаку рухатись у різних напрямках за допомогою стрілочок? \\*\\*\n-   **Як додавати бали, коли Собака ловить Кота чи Пінгвіна?**\n-   \\*\\* Як віднімати бали, коли Кіт і Пінгвін торкаються один одного?\\*\\*",
        "Course E: Artist Project_examples2022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "Course E: Artist Project_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "Course E: Frozen Project_examples2022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "Course E: Frozen Project_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "Course F: Artist Project_Flowers_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "Course F: Artist Project_spiral_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_Dance_2020_01": "Перетягніть блок <xml><block type=\"Dancelab_makeAnonymousDanceSprite\" block-text=\"make a new dancer\"><title name=\"COSTUME\" config=\"&quot;CAT&quot;, &quot;PINEAPPLE&quot;\">\"CAT\"</title><title name=\"LOCATION\">{x: 200, y: 200}</title></block></xml> на робочу область та з'єднайте його з блоком <xml><block type=\"Dancelab_whenSetup2\" next_connection_disabled=\"true\" block-text=\"setup\"></block></xml>.\n\n Оберіть \"кіт\" або \"лінивець\", щоб створити свого першого танцівника.\n\n-   _Якщо ви хочете отримати додаткову інформацію або більше завдань, клацніть лампочку зліва._",
        "CourseD_Dance_2020_012022": "Перетягніть блок <xml><block type=\"Dancelab_makeAnonymousDanceSprite\" block-text=\"make a new dancer\"><title name=\"COSTUME\" config=\"&quot;CAT&quot;, &quot;PINEAPPLE&quot;\">\"CAT\"</title><title name=\"LOCATION\">{x: 200, y: 200}</title></block></xml> на робочу область та з'єднайте його з блоком <xml><block type=\"Dancelab_whenSetup2\" next_connection_disabled=\"true\" block-text=\"setup\"></block></xml>.\n\n Оберіть \"кіт\" або \"лінивець\", щоб створити свого першого танцівника.\n\n-   _Якщо ви хочете отримати додаткову інформацію або більше завдань, клацніть лампочку зліва._",
        "CourseD_Dance_2020_01_2021": "Перетягніть блок <xml><block type=\"Dancelab_makeAnonymousDanceSprite\" block-text=\"make a new dancer\"><title name=\"COSTUME\" config=\"&quot;CAT&quot;, &quot;PINEAPPLE&quot;\">\"CAT\"</title><title name=\"LOCATION\">{x: 200, y: 200}</title></block></xml> на робочу область та з'єднайте його з блоком <xml><block type=\"Dancelab_whenSetup2\" next_connection_disabled=\"true\" block-text=\"setup\"></block></xml>.\n\n Оберіть \"кіт\" або \"лінивець\", щоб створити свого першого танцівника.\n\n-   _Якщо ви хочете отримати додаткову інформацію або більше завдань, клацніть лампочку зліва._",
        "CourseD_Dance_2020_02": "Блок <xml><block type=\"Dancelab_whenKey\" block-text=\"when up pressed\"></block></xml> дозволяє виконувати код, коли ви натискаєте на клавіші зі стрілками. \nВикористайте блок <xml><block type=\"Dancelab_doMoveEachLR\" block-text=\"do once\"><title name=\"GROUP\">\"CAT\"</title><title name=\"MOVE\">MOVES.XClapSide</title><title name=\"DIR\">-1</title></block></xml>, щоб змусити кота плескати!\n\n_Обов'язково натискайте клавішу \"стрілка вгору\" або ![](<https://images.code.org/419e704e6841c0b696016bf5029b8cb9-image-1571864825506.06.45 PM.png>) після натискання кнопки \"Запустити\"!_",
        "CourseD_Dance_2020_022022": "Блок <xml><block type=\"Dancelab_whenKey\" block-text=\"when up pressed\"></block></xml> дозволяє виконувати код, коли ви натискаєте на клавіші зі стрілками. \nВикористайте блок <xml><block type=\"Dancelab_doMoveEachLR\" block-text=\"do once\"><title name=\"GROUP\">\"CAT\"</title><title name=\"MOVE\">MOVES.XClapSide</title><title name=\"DIR\">-1</title></block></xml>, щоб змусити кота плескати!\n\n_Обов'язково натискайте клавішу \"стрілка вгору\" або ![](<https://images.code.org/419e704e6841c0b696016bf5029b8cb9-image-1571864825506.06.45 PM.png>) після натискання кнопки \"Запустити\"!_",
        "CourseD_Dance_2020_02_2021": "Блок <xml><block type=\"Dancelab_whenKey\" block-text=\"when up pressed\"></block></xml> дозволяє виконувати код, коли ви натискаєте на клавіші зі стрілками. \nВикористайте блок <xml><block type=\"Dancelab_doMoveEachLR\" block-text=\"do once\"><title name=\"GROUP\">\"CAT\"</title><title name=\"MOVE\">MOVES.XClapSide</title><title name=\"DIR\">-1</title></block></xml>, щоб змусити кота плескати!\n\n_Обов'язково натискайте клавішу \"стрілка вгору\" або ![](<https://images.code.org/419e704e6841c0b696016bf5029b8cb9-image-1571864825506.06.45 PM.png>) після натискання кнопки \"Запустити\"!_",
        "CourseD_Dance_2020_03": "Час для танцювального змагання! Запрограмуйте кожного танцівника так, щоб він рухався, коли ви натискаєте різні клавіші. Оберіть улюблений рух для кожного танцівника або налаштуйте його як `(Випадковий)` для чогось абсолютно непередбачуваного!",
        "CourseD_Dance_2020_032022": "Час для танцювального змагання! Запрограмуйте кожного танцівника так, щоб він рухався, коли ви натискаєте різні клавіші. Оберіть улюблений рух для кожного танцівника або налаштуйте його як `(Випадковий)` для чогось абсолютно непередбачуваного!",
        "CourseD_Dance_2020_03_2021": "Час для танцювального змагання! Запрограмуйте кожного танцівника так, щоб він рухався, коли ви натискаєте різні клавіші. Оберіть улюблений рух для кожного танцівника або налаштуйте його як `(Випадковий)` для чогось абсолютно непередбачуваного!",
        "CourseD_Dance_2020_04": "Давайте зробимо так, щоб танцівники рухалися під музику!\n\nЗ'єднайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">4</title><title name=\"UNIT\">\"measures\"</title></block></xml> з блоком <xml><block type=\"Dancelab_changeMoveEachLR\"><title name=\"GROUP\">\"SHARK\"</title><title name=\"MOVE\">MOVES.ThisOrThat</title><title name=\"DIR\">-1</title></block></xml> з панелі інструментів. \n\nВаш танцівник має починати новий рух після четвертого такту.\n\n**Такти** використовуються для відліку часу в музиці. У цьому уроці такт складається з чотирьох бітів.",
        "CourseD_Dance_2020_042022": "Давайте зробимо так, щоб танцівники рухалися під музику!\n\nЗ'єднайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">4</title><title name=\"UNIT\">\"measures\"</title></block></xml> з блоком <xml><block type=\"Dancelab_changeMoveEachLR\"><title name=\"GROUP\">\"SHARK\"</title><title name=\"MOVE\">MOVES.ThisOrThat</title><title name=\"DIR\">-1</title></block></xml> з панелі інструментів. \n\nВаш танцівник має починати новий рух після четвертого такту.\n\n**Такти** використовуються для відліку часу в музиці. У цьому уроці такт складається з чотирьох бітів.",
        "CourseD_Dance_2020_04_2021": "Давайте зробимо так, щоб танцівники рухалися під музику!\n\nЗ'єднайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">4</title><title name=\"UNIT\">\"measures\"</title></block></xml> з блоком <xml><block type=\"Dancelab_changeMoveEachLR\"><title name=\"GROUP\">\"SHARK\"</title><title name=\"MOVE\">MOVES.ThisOrThat</title><title name=\"DIR\">-1</title></block></xml> з панелі інструментів. \n\nВаш танцівник має починати новий рух після четвертого такту.\n\n**Такти** використовуються для відліку часу в музиці. У цьому уроці такт складається з чотирьох бітів.",
        "CourseD_Dance_2020_05": "_Танцюємо!_ \n\nДодайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">6</title><title name=\"UNIT\">\"measures\"</title></block></xml> на робочу область. Нехай танцівник починає новий рух після 6 тактів.",
        "CourseD_Dance_2020_052022": "_Танцюємо!_ \n\nДодайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">6</title><title name=\"UNIT\">\"measures\"</title></block></xml> на робочу область. Нехай танцівник починає новий рух після 6 тактів.",
        "CourseD_Dance_2020_05_2021": "_Танцюємо!_ \n\nДодайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">6</title><title name=\"UNIT\">\"measures\"</title></block></xml> на робочу область. Нехай танцівник починає новий рух після 6 тактів.",
        "CourseD_Dance_2020_06": "Використайте цей новий блок, щоб створити групу менших другорядних танцівників навколо головного танцівника посередині. \n\n  <xml><block type=\"Dancelab_makeNewDanceSpriteGroup\">\n    <title name=\"N\">???</title>\n    <title name=\"COSTUME\" config=\"&quot;BEAR&quot;, &quot;CAT&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n  </block></xml>\n\nТепер ви можете відразу створити багато танцівників!",
        "CourseD_Dance_2020_062022": "Використайте цей новий блок, щоб створити групу менших другорядних танцівників навколо головного танцівника посередині. \n\n  <xml><block type=\"Dancelab_makeNewDanceSpriteGroup\">\n    <title name=\"N\">???</title>\n    <title name=\"COSTUME\" config=\"&quot;BEAR&quot;, &quot;CAT&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n  </block></xml>\n\nТепер ви можете відразу створити багато танцівників!",
        "CourseD_Dance_2020_06_2021": "Використайте цей новий блок, щоб створити групу менших другорядних танцівників навколо головного танцівника посередині. \n\n  <xml><block type=\"Dancelab_makeNewDanceSpriteGroup\">\n    <title name=\"N\">???</title>\n    <title name=\"COSTUME\" config=\"&quot;BEAR&quot;, &quot;CAT&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n  </block></xml>\n\nТепер ви можете відразу створити багато танцівників!",
        "CourseD_Dance_2020_07": "Кожен танцівник має набір _властивостей_, за допомогою якого можна керувати його виглядом.\n\nВикористайте блок <xml><block type=\"Dancelab_setPropEach\" block-text=\"the set block\"><title name=\"GROUP\" config=\"sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title><title name=\"PROPERTY\">\"scale\"</title><title name=\"VAL\">???</title></block></xml> під зеленим блоком події, щоб після початку музики танцівники здавалися наближеними чи віддаленими.",
        "CourseD_Dance_2020_072022": "Кожен танцівник має набір _властивостей_, за допомогою якого можна керувати його виглядом.\n\nВикористайте блок <xml><block type=\"Dancelab_setPropEach\" block-text=\"the set block\"><title name=\"GROUP\" config=\"sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title><title name=\"PROPERTY\">\"scale\"</title><title name=\"VAL\">???</title></block></xml> під зеленим блоком події, щоб після початку музики танцівники здавалися наближеними чи віддаленими.",
        "CourseD_Dance_2020_07_2021": "Кожен танцівник має набір _властивостей_, за допомогою якого можна керувати його виглядом.\n\nВикористайте блок <xml><block type=\"Dancelab_setPropEach\" block-text=\"the set block\"><title name=\"GROUP\" config=\"sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title><title name=\"PROPERTY\">\"scale\"</title><title name=\"VAL\">???</title></block></xml> під зеленим блоком події, щоб після початку музики танцівники здавалися наближеними чи віддаленими.",
        "CourseD_Dance_2020_08": "Танцівники мають властивість \"відтінок\", за допомогою якої можна додати шар кольору. Спробуйте змінити відтінок одного з танцівників (або цілої групи)!",
        "CourseD_Dance_2020_082022": "Танцівники мають властивість \"відтінок\", за допомогою якої можна додати шар кольору. Спробуйте змінити відтінок одного з танцівників (або цілої групи)!",
        "CourseD_Dance_2020_08_2021": "Танцівники мають властивість \"відтінок\", за допомогою якої можна додати шар кольору. Спробуй змінити відтінок одного з танцівників (або цілої групи)!",
        "CourseD_Dance_2020_09": "Це особливий вид події, яка активується знову і знову.\n\n<xml><block type=\"Dancelab_everySeconds\"><title name=\"N\">2</title><title name=\"UNIT\">\"measures\"</title></block></xml>\n\nІнші нові блоки на панелі інструментів дозволяють вам з часом випадково змінювати властивості танцівників.\n\n_Будьте творчими та повеселіться!_",
        "CourseD_Dance_2020_092022": "Це особливий вид події, яка активується знову і знову.\n\n<xml><block type=\"Dancelab_everySeconds\"><title name=\"N\">2</title><title name=\"UNIT\">\"measures\"</title></block></xml>\n\nІнші нові блоки на панелі інструментів дозволяють вам з часом випадково змінювати властивості танцівників.\n\n_Будьте творчими та повеселіться!_",
        "CourseD_Dance_2020_09_2021": "Це особливий вид події, яка активується знову і знову.\n\n<xml><block type=\"Dancelab_everySeconds\"><title name=\"N\">2</title><title name=\"UNIT\">\"measures\"</title></block></xml>\n\nІнші нові блоки на панелі інструментів дозволяють вам з часом випадково змінювати властивості танцівників.\n\n_Будьте творчими та повеселіться!_",
        "CourseD_Dance_2020_10": "Починаємо розважатися! Створіть власний танець та поділіться їм з друзями.",
        "CourseD_Dance_2020_102022": "Починаємо розважатися! Створіть власний танець та поділіться їм з друзями.",
        "CourseD_Dance_2020_10_2021": "Починаємо розважатися! Створіть власний танець та поділіться ним з друзями.",
        "CourseD_Dance_2020_bonus1": "# Назад і вперед!\n\nВи можете захотіти створити послідовність танцювальних рухів. Це можна зробити за допомогою цього нового блока. \n\n<xml><block type=\"Dancelab_alternateMoves\"><title name=\"GROUP\">sprites</title><title name=\"N\">2</title><title name=\"MOVE1\">MOVES.Roll</title><title name=\"MOVE2\">MOVES.ClapHigh</title></block></xml> \n\nВибрані вище рухи будуть постійно послідовно повторюватись. \n\n-   Створіть послідовність рухів для головного танцівника спереду! \n-   Використовуйте різні числа для зміни швидкості зміни рухів. Спробуйте `1` або `0.5` для швидшої зміни!",
        "CourseD_Dance_2020_bonus12022": "# Назад і вперед!\n\nВи можете захотіти створити послідовність танцювальних рухів. Це можна зробити за допомогою цього нового блока. \n\n<xml><block type=\"Dancelab_alternateMoves\"><title name=\"GROUP\">sprites</title><title name=\"N\">2</title><title name=\"MOVE1\">MOVES.Roll</title><title name=\"MOVE2\">MOVES.ClapHigh</title></block></xml> \n\nВибрані вище рухи будуть постійно послідовно повторюватись. \n\n-   Створіть послідовність рухів для головного танцівника спереду! \n-   Використовуйте різні числа для зміни швидкості зміни рухів. Спробуйте `1` або `0.5` для швидшої зміни!",
        "CourseD_Dance_2020_bonus1_2021": "# Назад і вперед!\n\nВи можете захотіти створити послідовність танцювальних рухів. Це можна зробити за допомогою цього нового блока. \n\n<xml><block type=\"Dancelab_alternateMoves\"><title name=\"GROUP\">sprites</title><title name=\"N\">2</title><title name=\"MOVE1\">MOVES.Roll</title><title name=\"MOVE2\">MOVES.ClapHigh</title></block></xml> \n\nВибрані вище рухи будуть постійно послідовно повторюватись. \n\n-   Створіть послідовність рухів для головного танцівника спереду! \n-   Використовуйте різні числа для зміни швидкості зміни рухів. Спробуйте `1` або `0.5` для швидшої зміни!",
        "CourseD_Dance_2020_bonus3": "# Давайте вступимо у формування!\n\nПеревірте цей танець, який використовує блок <xml><block type=\"Dancelab_layoutSprites\" block-text=\"layout\"><title name=\"GROUP\">\"MOOSE\"</title><title name=\"FORMAT\">???</title></block></xml> для зміни формату резервних танцюристів протягом усього танцю. Спробуйте одну з цих ідей, щоб розширити її:\n\n-   Створіть другу групу танцюристів в іншому макеті\n-   Змініть макет при натисканні клавіші\n-   Змініть властивість, коли танцюристи змінюють формацію",
        "CourseD_Dance_2020_bonus32022": "# Давайте вступимо у формування!\n\nПеревірте цей танець, який використовує блок <xml><block type=\"Dancelab_layoutSprites\" block-text=\"layout\"><title name=\"GROUP\">\"MOOSE\"</title><title name=\"FORMAT\">???</title></block></xml> для зміни формату резервних танцюристів протягом усього танцю. Спробуйте одну з цих ідей, щоб розширити її:\n\n-   Створіть другу групу танцюристів в іншому макеті\n-   Змініть макет при натисканні клавіші\n-   Змініть властивість, коли танцюристи змінюють формацію",
        "CourseD_Dance_2020_bonus3_2021": "# Давайте вступимо у формування!\n\nПеревірте цей танець, який використовує блок <xml><block type=\"Dancelab_layoutSprites\" block-text=\"layout\"><title name=\"GROUP\">\"MOOSE\"</title><title name=\"FORMAT\">???</title></block></xml> для зміни формату резервних танцюристів протягом усього танцю. Спробуйте одну з цих ідей, щоб розширити її:\n\n-   Створіть другу групу танцюристів в іншому макеті\n-   Змініть макет при натисканні клавіші\n-   Змініть властивість, коли танцюристи змінюють формацію",
        "CourseD_Dance_2022_lessonextra": "# Давайте вступимо у формування!\n\nПеревірте цей танець, який використовує блок <xml><block type=\"Dancelab_layoutSprites\" block-text=\"layout\"><title name=\"GROUP\">\"MOOSE\"</title><title name=\"FORMAT\">???</title></block></xml> для зміни формату резервних танцюристів протягом усього танцю. Спробуйте одну з цих ідей, щоб розширити її:\n\n-   Створіть другу групу танцюристів в іншому макеті\n-   Змініть макет при натисканні клавіші\n-   Змініть властивість, коли танцюристи змінюють формацію",
        "CourseD_Dance_2022_lessonextra1": "# Назад і вперед!\n\nВи можете захотіти створити послідовність танцювальних рухів. Це можна зробити за допомогою цього нового блока. \n\n<xml><block type=\"Dancelab_alternateMoves\"><title name=\"GROUP\">sprites</title><title name=\"N\">2</title><title name=\"MOVE1\">MOVES.Roll</title><title name=\"MOVE2\">MOVES.ClapHigh</title></block></xml> \n\nВибрані вище рухи будуть постійно послідовно повторюватись. \n\n-   Створіть послідовність рухів для головного танцівника спереду! \n-   Використовуйте різні числа для зміни швидкості зміни рухів. Спробуйте `1` або `0.5` для швидшої зміни!",
        "CourseD_Dance_2022_lessonextra10a": "# Назад і вперед!\n\nВи можете захотіти створити послідовність танцювальних рухів. Це можна зробити за допомогою цього нового блока. \n\n<xml><block type=\"Dancelab_alternateMoves\"><title name=\"GROUP\">sprites</title><title name=\"N\">2</title><title name=\"MOVE1\">MOVES.Roll</title><title name=\"MOVE2\">MOVES.ClapHigh</title></block></xml> \n\nВибрані вище рухи будуть постійно послідовно повторюватись. \n\n-   Створіть послідовність рухів для головного танцівника спереду! \n-   Використовуйте різні числа для зміни швидкості зміни рухів. Спробуйте `1` або `0.5` для швидшої зміни!",
        "CourseD_Dance_2022_lessonextra10b": "# Давайте вступимо у формування!\n\nПеревірте цей танець, який використовує блок <xml><block type=\"Dancelab_layoutSprites\" block-text=\"layout\"><title name=\"GROUP\">\"MOOSE\"</title><title name=\"FORMAT\">???</title></block></xml> для зміни формату резервних танцюристів протягом усього танцю. Спробуйте одну з цих ідей, щоб розширити її:\n\n-   Створіть другу групу танцюристів в іншому макеті\n-   Змініть макет при натисканні клавіші\n-   Змініть властивість, коли танцюристи змінюють формацію",
        "CourseD_Dance_Party_01": "\"Давайте влаштуємо танцювальну вечірку!\n\n\\_ Перетягніть блок `створити нового` на робочу область та з'єднайте його з блоком `налаштування`, щоб створити першого танцівника. \n\n-   _Якщо ви хочете отримати додаткову інформацію або більше завдань, клацніть лампочку зліва._\"",
        "CourseD_Dance_Party_02": "Хай цей лось потанцює!\n\nПеретягни блок <xml><block type=\"Dancelab_changeMoveLR\"><title name=\"SPRITE\">new\\_dancer</title><title name=\"MOVE\" config=\"MOVES.Dab, MOVES.Drop, MOVES.Floss\">Floss</title><title name=\"DIR\">-1</title></block></xml> на робочу область. З'єднай його з блоком <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">4</title><title name=\"UNIT\">\"measures\"</title></block></xml>. Танцівник повинен розпочати новий рух після чотирьох кроків.\n\n**Кроки** використовуються як одиниця виміру часу. У цьому підручнику крок триває чотири удари.",
        "CourseD_Dance_Party_03": "_Ось тепер ми танцюємо!_ \n\nДодай блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">6</title><title name=\"UNIT\">\"measures\"</title></block></xml> на робочу область. Нехай танцівник розпочинає новий рух після 6 кроків.",
        "CourseD_Dance_Party_04": "\"_Цьому танцю потрібні спецефекти!_\n\nЗнайдіть на панелі інструментів новий блок, за допомогою якого можна додати фоновий ефект позаду танцівника. Подивіться, як ефекти змінюються під музику!\"!",
        "CourseD_Dance_Party_05": "\"Використайте ще один новий блок, щоб змусити танцівника змінювати рухи **кожні 2 такти**!\n\n-   При виборі `(Наступний)`, `(Попередній)` та `(Випадковий)` танцівник буде виконувати інший рух кожен раз при спрацьовуванні коду.\".",
        "CourseD_Dance_Party_06": "\"_Нам потрібно більше танцівників!_\n\nСтворіть другорядного танцівника з іменем `другорядний_танцівник1`, який буде танцювати разом з котом.\".",
        "CourseD_Dance_Party_08": "\"Кожен танцівник має набір _властивостей_, за допомогою якого можна керувати його виглядом.\n\nЩоб здавалося, що танцівник танцює на задньому фоні, можна зменшити його _розмір_. Можете зробити так, щоб обидва другорядних танцівники були однакового розміру?\"?",
        "CourseD_Dance_Party_09": "\"Танцівники мають властивість \"\"відтінок\"\", яка додає шар кольору. Спробуйте змінити відтінок одного з танцівників.\n\n-   Відтінки змішують обраний колір з кольорами танцівника.\".",
        "CourseD_Dance_Party_10": "Тепер ми вміємо змінювати властивості танцівників. Ми також можемо зробити так, щоб ці властивості змінювались автоматично під зміну музики за допомогою блоку:\n<xml>\n<block type=\"Dancelab_startMapping\">\n\n<title name=\"SPRITE\">right_unicorn</title>\n<title name=\"PROPERTY\">\"scale\"</title>\n<title name=\"RANGE\">\"bass\"</title>\n</block></xml>\n\nЦя програма використовує гучність \"басів\" (або низьких звуків) для керування висотою танцівника. Можеш зробити так, щоб інший танцівник теж реагував на музику?",
        "CourseD_Dance_Party_11": "Блок <xml><block type=\"Dancelab_whenKey\"></block></xml> вказує на те, що код потрібно виконати, коли натиснена стрілка вгору. \n\nМожеш змінити рух танцю, властивості танцівника чи виконати швидкий рух лише раз. Креативно використай нові блоки!",
        "CourseD_Dance_Party_11_5": "Подивись на блок:\n\n<xml>\n  <block type=\"Dancelab_makeNewDanceSpriteGroup\">\n    <title name=\"N\">6</title>\n    <title name=\"COSTUME\">\"DUCK\"</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n  </block></xml>\n  \nТепер можна створити одразу кілька танцівників!\n\nСпробуй використати деякі з блоків \"всі качки\" для створення коду, який змусить танцювати разом всіх качок.",
        "CourseD_Dance_Party_11b": "\"Час для танцювального змагання! Коли ви натискаєте клавішу \"\"вліво\"\", Кіт виконує деб. Нехай Робот виконує дроп при натисканні вами клавіші \"\"вправо\"\" та одне плескання при натисканні вами клавіші \"\"вгору\"\".\n\n**Використайте клавіші, щоб змусити Робота виконати дроп-плескання-дроп-плескання максимально швидко!**\"",
        "CourseD_Dance_Party_12": "Починаємо розважатися! Створіть власний танець та поділіться їм з друзями.",
        "CourseD_EOC_artist": "Створіть свій власний малюнок",
        "CourseD_EOC_artist2022": "Створіть свій власний малюнок",
        "CourseD_EOC_artist_2021": "Створіть свій власний малюнок",
        "CourseD_EOC_artist_example2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_EOC_artist_example20212022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_EOC_bounce1": "Зроби свою власну гру в баскетбол!",
        "CourseD_EOC_bounce12022": "Зроби свою власну гру в баскетбол!",
        "CourseD_EOC_bounce1_2021": "Зроби свою власну гру в баскетбол!",
        "CourseD_EOC_bounce1_example2022": "# Приклади проєктів\n\nМи готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_EOC_bounce1_example_2021": "# Приклади проєктів\n\nМи готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_EOC_dance_2021": "Створіть свій власний танець!",
        "CourseD_EOC_dance_examples2022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_EOC_dance_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_EOC_starwars": "Створіть свою власну гру Зоряні війни",
        "CourseD_EOC_starwars2022": "Створіть свою власну гру Зоряні війни",
        "CourseD_EOC_starwars_2021": "Створіть свою власну гру Зоряні війни",
        "CourseD_EOC_starwars_example2022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseD_EOC_starwars_example_2021": "Ми готові розпочати свій фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseE_HOC 2018 Level_1": "Тобі потрібні припаси для подорожі. Забери **човен** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) зі **скрині** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).",
        "CourseE_HOC 2018 Level_10": "В цьому Монументі Океану десь ховається **кальмар** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png). Зможеш його знайти?",
        "CourseE_HOC 2018 Level_102022": "В цьому Монументі Океану десь ховається **кальмар** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png). Зможеш його знайти?",
        "CourseE_HOC 2018 Level_10_2020": "В цьому Монументі Океану десь ховається **кальмар** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png). Зможеш його знайти?",
        "CourseE_HOC 2018 Level_10_2021": "В цьому Монументі Океану десь ховається **кальмар** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png). Зможеш його знайти?",
        "CourseE_HOC 2018 Level_11": "Збудуй стіну з **призмарину** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) навколо чорного бетону. Це активує **трубопровід** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) і завершить твою місію!",
        "CourseE_HOC 2018 Level_112022": "Збудуй стіну з **призмарину** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) навколо чорного бетону. Це активує **трубопровід** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) і завершить твою місію!",
        "CourseE_HOC 2018 Level_11_2020": "Збудуй стіну з **призмарину** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) навколо чорного бетону. Це активує **трубопровід** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) і завершить твою місію!",
        "CourseE_HOC 2018 Level_11_2021": "Збудуй стіну з **призмарину** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) навколо чорного бетону. Це активує **трубопровід** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) і завершить твою місію!",
        "CourseE_HOC 2018 Level_12022": "Тобі потрібні припаси для подорожі. Забери **човен** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) зі **скрині** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).",
        "CourseE_HOC 2018 Level_1_2020": "Тобі потрібні припаси для подорожі. Забери **човен** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) зі **скрині** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).",
        "CourseE_HOC 2018 Level_1_2021": "Тобі потрібні припаси для подорожі. Забери **човен** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) зі **скрині** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).",
        "CourseE_HOC 2018 Level_2": "На човні плисти набагато простіше, ніж самому! Рухайся до краю доку для посадки на човен.",
        "CourseE_HOC 2018 Level_22022": "На човні плисти набагато простіше, ніж самому! Рухайся до краю доку для посадки на човен.",
        "CourseE_HOC 2018 Level_2_2020": "На човні плисти набагато простіше, ніж самому! Рухайся до краю доку для посадки на човен.",
        "CourseE_HOC 2018 Level_2_2021": "На човні плисти набагато простіше, ніж самому! Рухайся до краю доку для посадки на човен.",
        "CourseE_HOC 2018 Level_3": "Хапай весла і веди свій човен у відкрите море, щоб зловити **тріску** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).",
        "CourseE_HOC 2018 Level_32022": "Хапай весла і веди свій човен у відкрите море, щоб зловити **тріску** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).",
        "CourseE_HOC 2018 Level_3_2020": "Хапай весла і веди свій човен у відкрите море, щоб зловити **тріску** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).",
        "CourseE_HOC 2018 Level_3_2021": "Хапай весла і веди свій човен у відкрите море, щоб зловити **тріску** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).",
        "CourseE_HOC 2018 Level_4": "Погодуємо тріскою **дельфіна** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Використай блок \"повторювати до досягнення цілі\", щоб швидше дістатись океану.",
        "CourseE_HOC 2018 Level_42022": "Погодуємо тріскою **дельфіна** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Використай блок \"повторювати до досягнення цілі\", щоб швидше дістатись океану.",
        "CourseE_HOC 2018 Level_4_2020": "Погодуємо тріскою **дельфіна** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Використай блок \"повторювати до досягнення цілі\", щоб швидше дістатись океану.",
        "CourseE_HOC 2018 Level_4_2021": "Погодуємо тріскою **дельфіна** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Використай блок \"повторювати до досягнення цілі\", щоб швидше дістатись океану.",
        "CourseE_HOC 2018 Level_5": "Десь захована **ракушка наутилуса** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)! Досліди уламки корабля, щоб дістатись до **скрині** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).",
        "CourseE_HOC 2018 Level_52022": "Десь захована **ракушка наутилуса** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)! Досліди уламки корабля, щоб дістатись до **скрині** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).",
        "CourseE_HOC 2018 Level_5_2020": "Десь захована **ракушка наутилуса** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)! Досліди уламки корабля, щоб дістатись до **скрині** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).",
        "CourseE_HOC 2018 Level_5_2021": "Десь захована **ракушка наутилуса** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)! Досліди уламки корабля, щоб дістатись до **скрині** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).",
        "CourseE_HOC 2018 Level_6": "Як тут холодно! Злови **лосося** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) на шляху до підводних руїн.",
        "CourseE_HOC 2018 Level_62022": "Як тут холодно! Злови **лосося** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) на шляху до підводних руїн.",
        "CourseE_HOC 2018 Level_6_2020": "Як тут холодно! Злови **лосося** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) на шляху до підводних руїн.",
        "CourseE_HOC 2018 Level_6_2021": "Як тут холодно! Злови **лосося** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) на шляху до підводних руїн.",
        "CourseE_HOC 2018 Level_7a": "Знайдено підводні руїни. Пошукай пісковик для **скрині** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) що містить **призмариновий** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png) скарб.",
        "CourseE_HOC 2018 Level_7a2022": "Знайдено підводні руїни. Пошукай пісковик для **скрині** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) що містить **призмариновий** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png) скарб.",
        "CourseE_HOC 2018 Level_7a_2020": "Знайдено підводні руїни. Пошукай пісковик для **скрині** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) що містить **призмариновий** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png) скарб.",
        "CourseE_HOC 2018 Level_7a_2021": "Знайдено підводні руїни. Пошукай пісковик для **скрині** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) що містить **призмариновий** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png) скарб.",
        "CourseE_HOC 2018 Level_8": "Спочатку айсберги, а тепер лава? Пройди по вулканічному острову і знайди **тропічну рибу** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) в кораловому рифі.",
        "CourseE_HOC 2018 Level_82022": "Спочатку айсберги, а тепер лава? Пройди по вулканічному острову і знайди **тропічну рибу** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) в кораловому рифі.",
        "CourseE_HOC 2018 Level_8_2020": "Спочатку айсберги, а тепер лава? Пройди по вулканічному острову і знайди **тропічну рибу** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) в кораловому рифі.",
        "CourseE_HOC 2018 Level_8_2021": "Спочатку айсберги, а тепер лава? Пройди по вулканічному острову і знайди **тропічну рибу** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) в кораловому рифі.",
        "CourseE_HOC 2018 Level_9b": "Тобі вдалося дістатися рифу. Тепер шукай **Серце Моря** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) ! Використай сині та червоні корали, щоб дістатися **скрині** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).",
        "CourseE_HOC 2018 Level_9b2022": "Тобі вдалося дістатися рифу. Тепер шукай **Серце Моря** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) ! Використай сині та червоні корали, щоб дістатися **скрині** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).",
        "CourseE_HOC 2018 Level_9b_2020": "Тобі вдалося дістатися рифу. Тепер шукай **Серце Моря** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) ! Використай сині та червоні корали, щоб дістатися **скрині** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).",
        "CourseE_HOC 2018 Level_9b_2021": "Тобі вдалося дістатися рифу. Тепер шукай **Серце Моря** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) ! Використай сині та червоні корали, щоб дістатися **скрині** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).",
        "CourseE_Project_SpriteLab_cupcake_examples2022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseE_Project_SpriteLab_cupcake_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseE_Project_SpriteLab_examples2022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseE_Project_SpriteLab_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseF_Project_SpriteLab_chatbot_examples_-2022-2": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseF_Project_SpriteLab_cupcake_examples_-2022-2": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseF_Project_SpriteLab_cupcake_examples_2021": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "CourseF_app_computer": "**Збери комп'ютер**\n\nЗ'єднай усі частини та з'ясуй, як увімкнути комп'ютер!",
        "CourseF_app_computer_-2022-2": "**Збери комп'ютер**\n\nЗ'єднай усі частини та з'ясуй, як увімкнути комп'ютер!",
        "CourseF_outbreak1": "# Створення симуляції\n\n<img src=\"https://images.code.org/fa359041f9e1a3ed92d72f6b0b24a8a9-image-1602095737300.gif\" style=\"float:right; padding-left:10px\">\n\n<div style=\"display:inline\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Сьогоді ви створите код, який запустить вашу власну симуляцію спалаху вірусу в Монстро-місті._\n\n_По-перше, ми створимо Монстро-місто, з спрайтами, які представляють монстрів. Напишіть свій код у_ **робочій області,** _тоді натисніть_ **Запустити** _щоб переглянути свою симуляцію. Якщо потрібна допомога, клацніть_ **лампочку** _для підказки._\n\n</div>\n\n## Робити наступне\n\n1.  Нехай спрайти представляють 10 здорових монстрів [][0] та 1 хворого монстра [][1]. **Спрайти** це персонажі на екрані, які можуть рухатись, мінятись та взаємодіяти з іншими.\n\n2.  Встановіть розмір спрайтів `50`, і нехай всі вони починають `бродити`.\n\n3.  Натисніть `ЗАПУСТИТИ`.\n\nВи б мали побачити спрайтів, які рухаються довкола, як на анімації праворуч.",
        "CourseF_outbreak1_-2022-2": "# Створення симуляції\n\n<img src=\"https://images.code.org/fa359041f9e1a3ed92d72f6b0b24a8a9-image-1602095737300.gif\" style=\"float:right; padding-left:10px\">\n\n<div style=\"display:inline\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Сьогоді ви створите код, який запустить вашу власну симуляцію спалаху вірусу в Монстро-місті._\n\n_По-перше, ми створимо Монстро-місто, з спрайтами, які представляють монстрів. Напишіть свій код у_ **робочій області,** _тоді натисніть_ **Запустити** _щоб переглянути свою симуляцію. Якщо потрібна допомога, клацніть_ **лампочку** _для підказки._\n\n</div>\n\n## Робити наступне\n\n1.  Нехай спрайти представляють 10 здорових монстрів ![](https://images.code.org/b57efd449a8e38661705438afaa2cbbe-image-1602095884444.png) та 1 хворого монстра ![](https://images.code.org/b8250f20e6df1b95775b0ac084729da2-image-1602095889950.png). **Спрайти** це персонажі на екрані, які можуть рухатись, мінятись та взаємодіяти з іншими.\n\n2.  Встановіть розмір спрайтів `50`, і нехай всі вони починають `бродити`.\n\n3.  Натисніть `ЗАПУСТИТИ`.\n\nВи б мали побачити спрайтів, які рухаються довкола, як на анімації праворуч.",
        "CourseF_outbreak2": "# Програмування подій\n\n<div style=\"display:inline-block\">\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left\">\nО, ні! Один з монстрів підхопив вірус! Коли здоровий монстр торкається хворого, він теж захворіває._ \n\n</div>\n\nЩоб щось трапилось, коли два спрайти торкаються, використаємо блок \"події\":\n\n[blockly block][0]\n\nЗверніть увагу, його можна відкрити блакитним плюсиком ліворуч. \n\n## Виконати це\n\nВикористайте блок `предмет` всередині, щоб змінити **здорових монстрів**  [][1] на **хворих монстрів** [][2] коли вони торкаються.",
        "CourseF_outbreak2_-2022-2": "# Програмування подій\n\n<div style=\"display:inline-block\">\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left\">\nО, ні! Один з монстрів підхопив вірус! Коли здоровий монстр торкається хворого, він теж захворіває._ \n\n</div>\n\nЩоб щось трапилось, коли два спрайти торкаються, використаємо блок \"події\":\n\n<xml><block type=\"gamelab_checkTouching\"><title name=\"CONDITION\">\"when\"</title><value name=\"SPRITE1\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"healthy\"</title></block></value><value name=\"SPRITE2\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"sick\"</title></block></value></block></xml>\n\nЗверніть увагу, його можна відкрити блакитним плюсиком ліворуч. \n\n## Виконати це\n\nВикористайте блок `предмет` всередині, щоб змінити **здорових монстрів**  ![](https://images.code.org/aaa464d7edf881c69fb0d8909d59ff96-image-1602520553016.png) на **хворих монстрів** ![](https://images.code.org/57860d7a8618e61c95170691d61e0882-image-1602520556193.png) коли вони торкаються.",
        "CourseF_outbreak3": "<img src=\"https://images.code.org/a157874032e8f71cf921ba32f082e5b4-image-1602518140122.2020-10-12 11_55_12.gif\" style=\"float:right; padding:10px\">\n\n# Зупиняємо спалах масками\n\n\\_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">Одним із способів сповільнити спалах є носіння маски. Монстри з масками не зможуть заразитись чи передати вірус іншим. Щоб щось трапилось із монстром при клацанні на ньому, використайте новий тип блоку \\_ \"події\". \\_\n\n## Виконуйте наступне\n\n1.  Використайте блок `коли клацнути` з блоком `змінити костюм` щоб одягнути на здорового монстра маску, коли по ньому клацнули. Повторіть для хворих монстрів.\n\n2.  Натисніть `Запустити` і починайте швидко клацати по монстрах. Намагайтесь зупинити чи сповільнити спалах, одягнувши маски на всіх монстрів.",
        "CourseF_outbreak4": "<img src=\"https://images.code.org/d228e4b5feb602025d5f7b5145dbece9-image-1603143852671.gif\" width=\"250\" class=\"instructor-image-end\">\n\n# Більше монстрів\n\n_Нові монстри приїжджають у Монстро-місто! Як це впливає на спалах? Використаймо моделювання, щоб зробити прогноз._ \n\n## Зробіть наступне\n\n1.  Змініть кількість спрайтів монстрів, міняючи цей блок: \n    <p><xml><block type=\"gamelab_makeNumSprites\"><title name=\"ANIMATION_NAME\">\"healthy\"</title><value name=\"NUM\"><block type=\"math_number\"><title name=\"NUM\">???</title></block></value></block></xml></p>\n\n2.  Змініть розмір спрайтів монстрів, міняючи цей блок: \n    <p><xml><block type=\"gamelab_setProp\"><title name=\"PROPERTY\">\"scale\"</title><value name=\"SPRITE\"><block type=\"gamelab_getAllSprites\"></block></value><value name=\"VAL\"><block type=\"math_number\"><title name=\"NUM\">???</title></block></value></block></xml></p>\n\n3.  Запустіть симуляцію 3-5 разів.\n\n_Що змінилося?_",
        "CourseF_outbreak4_-2022-2": "<img src=\"https://images.code.org/d228e4b5feb602025d5f7b5145dbece9-image-1603143852671.gif\" width=\"250\" class=\"instructor-image-end\">\n\n# Більше монстрів\n\n_Нові монстри приїжджають у Монстро-місто! Як це впливає на спалах? Використаймо моделювання, щоб зробити прогноз._ \n\n## Зробіть наступне\n\n1.  Змініть кількість спрайтів монстрів, міняючи цей блок: \n    <p><xml><block type=\"gamelab_makeNumSprites\"><title name=\"ANIMATION_NAME\">\"healthy\"</title><value name=\"NUM\"><block type=\"math_number\"><title name=\"NUM\">???</title></block></value></block></xml></p>\n\n2.  Змініть розмір спрайтів монстрів, міняючи цей блок: \n    <p><xml><block type=\"gamelab_setProp\"><title name=\"PROPERTY\">\"scale\"</title><value name=\"SPRITE\"><block type=\"gamelab_getAllSprites\"></block></value><value name=\"VAL\"><block type=\"math_number\"><title name=\"NUM\">???</title></block></value></block></xml></p>\n\n3.  Запустіть симуляцію 3-5 разів.\n\n_Що змінилося?_",
        "CourseF_outbreak5": "<img src=\"https://images.code.org/d228e4b5feb602025d5f7b5145dbece9-image-1603143852671.gif\" width=\"250\" style=\"float:right; padding-left:10px\">\n\n# Більше монстрів\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">У Монстро-місто приїздять нові монстри! Що це означатиме для спалаху? Використаємо симуляцію, щоб зробити прогноз._ \n\n## Виконайте наступне\n\n1.  Змініть кількістьспрайтів монстрів, які ви створюєте, редагуючи цей блок: \n    [blockly block][0]\n\n2.  Змініть розмір спрайтів, редагуючи цей блок: \n    [blockly block][1]\n\n3.  Запустіть симуляцію 3-5 разів.\n\n_Щось змінилось?_",
        "CourseF_outbreak5_-2022-2": "<img src=\"https://images.code.org/d228e4b5feb602025d5f7b5145dbece9-image-1603143852671.gif\" width=\"250\" style=\"float:right; padding-left:10px\">\n\n# Більше монстрів\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">У Монстро-місто приїздять нові монстри! Що це означатиме для спалаху? Використаємо симуляцію, щоб зробити прогноз._ \n\n## Виконайте наступне\n\n1.  Змініть кількістьспрайтів монстрів, які ви створюєте, редагуючи цей блок: \n    [blockly block][0]\n\n2.  Змініть розмір спрайтів, редагуючи цей блок: \n    [blockly block][1]\n\n3.  Запустіть симуляцію 3-5 разів.\n\n_Щось змінилось?_",
        "CourseF_outbreak6": "# Одужання\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Хороші новини: Монстри можуть одужувати самі по собі! Хворі монстри одужують і автоматично стають здоровими, коли проходить певний час. Додамо до симуляції код, який дозволить всім хворим монстрам поступово вилікуватись від вірусу._\n\n</div>\n\nУ нас тепер є спеціальна поведінка [blockly block][0] . Можете додати її до свого коду після того, як монстр захворіває.\n\n## Виконайте наступнн\n\n1.  У події `коли торкається` додайте код, щоб спрайт розпочав поведінку `одужування`.\n    [blockly block][1]",
        "CourseF_outbreak7": "# Ймовірність\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Зараз для монстрів не існує можливості захворіти, коли вони у масці. Звучить класно, але все, насправді, не так просто. Потрібно додати \"шанс\" (чи ймовірність) поширення вірусу щоразу при торканні двох монстрів. Ми можемо промоделювати шанс зараження вірусом з цих нотаток._\n\n</div>\n\n<details open><summary><em><strong>Нотатки:</strong>Як маски впливають на спалах у Монстро-місті</em></summary>\n\n<div class=\"container\" style=\"background-color:indianred; text-align:center; border-style: solid; width: 250px\">\n<img src=\"https://images.code.org/01291b1e958448f65abb46b0d135b916-image-1603206161098.png\" style=\"width:55%\">\n\n<div class=\"container\" style=\"background-color:white; text-align:center; border-style: solid; width: 220px\">\n<br>\n\n_Переваги масок_\n\n| Здорові | Хворі |   Ймовірність   |  %  |\n| :-----: | :---: | :-------------: | :-: |\n|  [][6]  | [][7] | **Дуже висока** | 90% |\n|  [][4]  | [][5] |    **Висока**   | 75% |\n|  [][2]  | [][3] |    **Низька**   | 25% |\n|  [][0]  | [][1] | **Дуже низька** | 10% |\n\n<br>\n</div>\n<br>\n</div>\n\n</details>\n\n## Виконайте наступне\n\n1.  Додайте цей блок **логіки** у події `коли торкається` і призначте їй дуже високий шанс:\n\n[blockly block][8]\n\n2.  Додайте ще кілька подій, які включають монстрів у масках, і надайте їм різні відсотки ймовірності. Клацніть лампочку для підказки, якщо ви не впевнені, які події потрібні.\n\n3.  Клацніть **Завершити** коли готові рухатись далі.",
        "CourseF_outbreak7_-2022-2": "# Ймовірність\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Зараз для монстрів не існує можливості захворіти, коли вони у масці. Звучить класно, але все, насправді, не так просто. Потрібно додати \"шанс\" (чи ймовірність) поширення вірусу щоразу при торканні двох монстрів. Ми можемо промоделювати шанс зараження вірусом з цих нотаток._\n\n</div>\n\n<details open><summary><em><strong>Нотатки:</strong>Як маски впливають на спалах у Монстро-місті</em></summary>\n\n<div class=\"container\" style=\"background-color:indianred; text-align:center; border-style: solid; width: 250px\">\n<img src=\"https://images.code.org/01291b1e958448f65abb46b0d135b916-image-1603206161098.png\" style=\"width:55%\">\n\n<div class=\"container\" style=\"background-color:white; text-align:center; border-style: solid; width: 220px\">\n<br>\n\n_Переваги масок_\n\n|                                                   Здорові                                                   | Хворі |   Ймовірність   |  %  |\n| :---------------------------------------------------------------------------------------------------------: | :---: | :-------------: | :-: |\n|                                                    [][6]                                                    | [][7] | **Дуже висока** | 90% |\n|                                                    [][4]                                                    | [][5] |    **Висока**   | 75% |\n|                                                    [][2]                                                    | [][3] |    **Низька**   | 25% |\n| ![](<https://images.code.org/84ee9e16d3d84725e4f7277170c7a451-image-1603896610138.2020-10-28 10_49_44.gif>) | [][1] | **Дуже низька** | 10% |\n\n<br>\n</div>\n<br>\n</div>\n\n</details>\n\n## Виконайте наступне\n\n1.  Додайте цей блок **логіки** у події `коли торкається` і призначте їй дуже високий шанс:\n\n[blockly block][8]\n\n2.  Додайте ще кілька подій, які включають монстрів у масках, і надайте їм різні відсотки ймовірності. Клацніть лампочку для підказки, якщо ви не впевнені, які події потрібні.\n\n3.  Клацніть **Завершити** коли готові рухатись далі.",
        "CourseF_outbreak8": "# Вакцини\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Вакцини можуть захистити монстрів від вірусів. Ці монстри взагалі не захворіють!_\n\n</div>\n\nДалі, потрібно створити новий костюм спрайту, щоб показати монстра, який отримав вакцину.\n\n<details><summary><strong>Дізнатись, як змінити костюм спрайту.</strong></summary>\n\n|                                                | Щоб змінити костюм:                                                                                                                                                                                                                                  |\n| ---------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [expandable][0] <br/> (Клацніть для перегляду) | 1. Перейдіть до вкладки Костюми у верхньому лівому куті. <br/> 2. Продублюйте один з існуючих костюмів. <br/> 3. Оберіть первинний колір для малювання.  <br/> 4. Клацніть інструмент Заливки, а тоді клацніть тіло монстра, щоб перефарбувати його. |\n\n</details>\n\nКоли новий костюм готовий, знайдіть спосіб додати його у свою програму. Наприклад, можна змінювати монстра в масці на вакцинованого монстра, коли по ньому клацнути.",
        "CourseF_outbreak8_-2022-2": "# Вакцини\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Вакцини можуть захистити монстрів від вірусів. Ці монстри взагалі не захворіють!_\n\n</div>\n\nДалі, потрібно створити новий костюм спрайту, щоб показати монстра, який отримав вакцину.\n\n<details><summary><strong>Дізнатись, як змінити костюм спрайту.</strong></summary>\n\n|                                                                                                               | Щоб змінити костюм:                                                                                                                                                                                                                                  |\n| ------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <xml><block type=\"gamelab_printText\"><value name=\"TEXT\"></value></block></xml> <br/> (Клацніть для перегляду) | 1. Перейдіть до вкладки Костюми у верхньому лівому куті. <br/> 2. Продублюйте один з існуючих костюмів. <br/> 3. Оберіть первинний колір для малювання.  <br/> 4. Клацніть інструмент Заливки, а тоді клацніть тіло монстра, щоб перефарбувати його. |\n\n</details>\n\nКоли новий костюм готовий, знайдіть спосіб додати його у свою програму. Наприклад, можна змінювати монстра в масці на вакцинованого монстра, коли по ньому клацнути.",
        "Dance Party 2_2021": "На Марсі прибулець пишався своїми танцювальними здібностями, але тепер він може рухатися лише з боку в бік.\n\nЗаміни блок поведінки у <xml>\n<block type=\"gamelab_addBehaviorSimple\" block-text=\"the sprite begins block\">\n        <value name=\"SPRITE\">\n          <block type=\"gamelab_allSpritesWithAnimation\">\n            <title name=\"ANIMATION\">\"blue alien\"</title>\n          </block>\n        </value>\n      </block></xml> на інший, який змусить прибульця почати обертатися!",
        "Dance Party 3_2021": "Створи ще один спрайт, схожий на _іншого_ прибульця. [](https://studio.code.org/api/v1/animation-library/gamelab/_Fss9nfE5lNH0kxcazbNg2Dxl7rbZDBA/category_fantasy/alien_13.png) <img src=\"https://studio.code.org/api/v1/animation-library/gamelab/gML8dYrd8SrxAUuLbIjp7o5ghB38oFCc/category_fantasy/alien_06.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/YZJ8zB597zBIgcZIO8zOE0S75e918A2P/category_fantasy/alien_11.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/HrAMVb0UAVU47lc2nT3gCdvX_jYryNLD/category_fantasy/alien_10.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/mj2ti2iXM44mDQz.rcLgzlE_41.J15kR/category_fantasy/alien_03.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/H68UnAuzfpkcmpvQUCSvEU5GnRrjpEmd/category_fantasy/alien_07.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/6CfTmOl4M7ZK4NBT3yGSTvcGtqfnGwlL/category_fantasy/alien_05.png\" width=\"3%\"/><img src=\"https://studio.code.org/api/v1/animation-library/gamelab/FYKNgp2UPGiPvHDYlQg1t1zBAMwIy6k4/category_fantasy/alien_12.png\" width=\"3%\"/>\n\nЗроби так, щоб новий спрайт починав будь-яку дію, яку ти захочеш, при клацанні на нього. Спробуй використати новий рух цього разу!\n\n<xml><block type=\"gamelab_spriteClicked\">\n    <title name=\"CONDITION\">\"when\"</title>\n    <value name=\"SPRITE\">\n      <block type=\"gamelab_allSpritesWithAnimation\">\n        <title name=\"ANIMATION\">\"green alien\"</title>\n      </block>\n    </value>\n  </block></xml>",
        "Dance Party 4_2021": "_Створи танцювальну команду прибульців!_\n\nСтвори третій спрайт, і нехай він починає діяти при клацанні на нього.",
        "Dance Party 5_2021": "Спробуємо використати інший тип події.\n\nЦя подія запускається, коли ми натискаємо клавішу зі стрілкою: <xml><block type=\"gamelab_keyPressed\" block-text=\"the keypress event block\"></block></xml>.\n\nДля цієї події зроби так, щоб при натисканні клавіші один з наших прибульців змінював колір!",
        "Dance Party 6_2021": "Ці прибульці збожеволіли! Давай їх заспокоїмо.\n\nДодай подію, яка змусить кожного прибульця припинити рух через 5 секунд, використовуючи <xml><block type=\"gamelab_removeAllBehaviors\" block-text=\"the stops everything block\"><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"blue alien\"</title></block></value></block></xml>!",
        "Dance Party 7_2021": "Веселощі дуже заразливі!\n\nВикористовуй <xml><block type=\"gamelab_checkTouching\" block-text=\"the when touching event block\"><title name=\"CONDITION\">\"when\"</title><value name=\"SPRITE1\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"blue alien\"</title></block></value><value name=\"SPRITE2\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"pink alien\"</title></block></value></block></xml>, щоб змусити одного прибульця почати або припинити дію, коли його торкнеться інший прибулець.",
        "Dance Party Freeplay_2021": "Створи свою власну інопланетну вечірку! Шукаєш натхнення? Спробуй наступні ідеї:\n\n-   Створи ще одного прибульця, який виконує інший рух при натисканні.\n-   Зроби так, щоб прибульці виконували більше танцювальних рухів, коли торкаються один одного.",
        "Dance_2019_01": "Перетягніть блок <xml><block type=\"Dancelab_makeAnonymousDanceSprite\" block-text=\"make a new dancer\"><title name=\"COSTUME\" config=\"&quot;CAT&quot;, &quot;PINEAPPLE&quot;\">\"CAT\"</title><title name=\"LOCATION\">{x: 200, y: 200}</title></block></xml> на робочу область та з'єднайте його з блоком <xml><block type=\"Dancelab_whenSetup2\" next_connection_disabled=\"true\" block-text=\"setup\"></block></xml>.\n\n Оберіть \"кіт\" або \"лінивець\", щоб створити свого першого танцівника.\n\n-   _Якщо ви хочете отримати додаткову інформацію або більше завдань, клацніть лампочку зліва._",
        "Dance_2019_02": "Блок <xml><block type=\"Dancelab_whenKey\" block-text=\"when up pressed\"></block></xml> дозволяє виконувати код, коли ви натискаєте на клавіші зі стрілками. \nВикористайте блок <xml><block type=\"Dancelab_doMoveEachLR\" block-text=\"do once\"><title name=\"GROUP\">\"CAT\"</title><title name=\"MOVE\">MOVES.XClapSide</title><title name=\"DIR\">-1</title></block></xml>, щоб змусити кота плескати!\n\n_Обов'язково натискайте клавішу \"стрілка вгору\" або ![](<https://images.code.org/419e704e6841c0b696016bf5029b8cb9-image-1571864825506.06.45 PM.png>) після натискання кнопки \"Запустити\"!_",
        "Dance_2019_03": "Час для танцювального змагання! Запрограмуйте кожного танцівника так, щоб він рухався, коли ви натискаєте різні клавіші. Оберіть улюблений рух для кожного танцівника або налаштуйте його як `(Випадковий)` для чогось абсолютно непередбачуваного!",
        "Dance_2019_04": "Давайте зробимо так, щоб танцівники рухалися під музику!\n\nЗ'єднайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">4</title><title name=\"UNIT\">\"measures\"</title></block></xml> з блоком <xml><block type=\"Dancelab_changeMoveEachLR\"><title name=\"GROUP\">\"SHARK\"</title><title name=\"MOVE\">MOVES.ThisOrThat</title><title name=\"DIR\">-1</title></block></xml> з панелі інструментів. \n\nВаш танцівник має починати новий рух після четвертого такту.\n\n**Такти** використовуються для відліку часу в музиці. У цьому уроці такт складається з чотирьох бітів.",
        "Dance_2019_05": "_Танцюємо!_ \n\nДодайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">6</title><title name=\"UNIT\">\"measures\"</title></block></xml> на робочу область. Нехай танцівник починає новий рух після 6 тактів.",
        "Dance_2019_06": "Використайте цей новий блок, щоб створити групу менших другорядних танцівників навколо головного танцівника посередині. \n\n  <xml><block type=\"Dancelab_makeNewDanceSpriteGroup\">\n    <title name=\"N\">???</title>\n    <title name=\"COSTUME\" config=\"&quot;BEAR&quot;, &quot;CAT&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n  </block></xml>\n\nТепер ви можете відразу створити багато танцівників!",
        "Dance_2019_07": "Кожен танцівник має набір _властивостей_, за допомогою якого можна керувати його виглядом.\n\nВикористайте блок <xml><block type=\"Dancelab_setPropEach\" block-text=\"the set block\"><title name=\"GROUP\" config=\"sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;, &quot;SLOTH&quot;\">???</title><title name=\"PROPERTY\">\"scale\"</title><title name=\"VAL\">???</title></block></xml> під зеленим блоком події, щоб після початку музики танцівники здавалися наближеними чи віддаленими.",
        "Dance_2019_08": "Танцівники мають властивість \"відтінок\", за допомогою якої можна додати шар кольору. Спробуйте змінити відтінок одного з танцівників (або цілої групи)!",
        "Dance_2019_09": "Це особливий вид події, яка активується знову і знову.\n\n<xml><block type=\"Dancelab_everySeconds\"><title name=\"N\">2</title><title name=\"UNIT\">\"measures\"</title></block></xml>\n\nІнші нові блоки на панелі інструментів дозволяють вам з часом випадково змінювати властивості танцівників.\n\n_Будьте творчими та повеселіться!_",
        "Dance_2019_10": "Починаємо розважатися! Створіть власний танець та поділіться їм з друзями.",
        "Dance_Party_01": "\"Давайте влаштуємо танцювальну вечірку!\n\n\\_ Перетягніть блок `створити нового` на робочу область та з'єднайте його з блоком `налаштування`, щоб створити першого танцівника. \n\n-   _Якщо ви хочете отримати додаткову інформацію або більше завдань, клацніть лампочку зліва._\"",
        "Dance_Party_02": "Нехай цей лось потанцює!\n\nПеретягніть блок<xml><block type=\"Dancelab_changeMoveLR\"><title name=\"SPRITE\">new&#95;dancer</title><title name=\"MOVE\" config=\"MOVES.Dab, MOVES.Drop, MOVES.Floss\">Floss</title><title name=\"DIR\">-1</title></block></xml> на робочу область. З'єднайте його з блоком <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">4</title><title name=\"UNIT\">\"measures\"</title></block></xml>. Ваш танцюрист має почати новий рух після четвертого такту.\n\n**Такти** використовуються для відліку часу в музиці. У цьому уроці такт складається з чотирьох бітів.",
        "Dance_Party_03": "_Танцюємо!_ \n\nДодайте блок <xml><block type=\"Dancelab_atTimestamp\"><title name=\"TIMESTAMP\">6</title><title name=\"UNIT\">\"measures\"</title></block></xml> на робочу область. Нехай танцівник починає новий рух після 6 тактів.",
        "Dance_Party_04": "\"_Цьому танцю потрібні спецефекти!_\n\nЗнайдіть на панелі інструментів новий блок, за допомогою якого можна додати фоновий ефект позаду танцівника. Подивіться, як ефекти змінюються під музику!\"!",
        "Dance_Party_05": "\"Використайте ще один новий блок, щоб змусити танцівника змінювати рухи **кожні 2 такти**!\n\n-   При виборі `(Наступний)`, `(Попередній)` та `(Випадковий)` танцівник буде виконувати інший рух кожен раз при спрацьовуванні коду.\".",
        "Dance_Party_06": "\"_Нам потрібно більше танцівників!_\n\nСтворіть другорядного танцівника з іменем `другорядний_танцівник1`, який буде танцювати разом з котом.\".",
        "Dance_Party_08": "\"Кожен танцівник має набір _властивостей_, за допомогою якого можна керувати його виглядом.\n\nЩоб здавалося, що танцівник танцює на задньому фоні, можна зменшити його _розмір_. Можете зробити так, щоб обидва другорядних танцівники були однакового розміру?\"?",
        "Dance_Party_09": "\"Танцівники мають властивість \"\"відтінок\"\", яка додає шар кольору. Спробуйте змінити відтінок одного з танцівників.\n\n-   Відтінки змішують обраний колір з кольорами танцівника.\".",
        "Dance_Party_10": "Тепер ми вміємо змінювати властивості танцівників. Ми також можемо зробити так, щоб ці властивості змінювались автоматично під зміну музики за допомогою блоку:\n<xml>\n<block type=\"Dancelab_startMapping\">\n\n<title name=\"SPRITE\">right_unicorn</title>\n<title name=\"PROPERTY\">\"scale\"</title>\n<title name=\"RANGE\">\"bass\"</title>\n</block></xml>\n\nЦя програма використовує гучність \"басів\" (або низьких звуків) для керування висотою танцівника. Можеш зробити так, щоб інший танцівник теж реагував на музику?",
        "Dance_Party_11": "Блок <xml><block type=\"Dancelab_whenKey\"></block></xml> дозволяє виконувати код при натисканні клавіші \"вгору\". \n\nВи можете змінити танцювальний рух, змінити властивості танцівника або виконати швидкий рух лише раз. Будьте творчими та зверніть увагу на нові блоки!",
        "Dance_Party_11_5": "Подивіться на цей блок:\n\n<xml>\n  <block type=\"Dancelab_makeNewDanceSpriteGroup\">\n    <title name=\"N\">6</title>\n    <title name=\"COSTUME\">\"DUCK\"</title>\n    <title name=\"LAYOUT\">\"circle\"</title>\n  </block></xml>\n\nТепер ви можете відразу створити багато танцівників!\n\nСпробуйте використати деякі з блоків \"усі качки\" для написання коду, який змусить усіх качок танцювати разом.",
        "Dance_Party_11b": "\"Час для танцювального змагання! Коли ви натискаєте клавішу \"\"вліво\"\", Кіт виконує деб. Нехай Робот виконує дроп при натисканні вами клавіші \"\"вправо\"\" та одне плескання при натисканні вами клавіші \"\"вгору\"\".\n\n**Використайте клавіші, щоб змусити Робота виконати дроп-плескання-дроп-плескання максимально швидко!**\"",
        "Dance_Party_12": "Починаємо розважатися! Створіть власний танець та поділіться їм з друзями.",
        "Dance_Party_extras_alternate_2019": "# Назад і вперед!\n\nВи можете захотіти створити послідовність танцювальних рухів. Це можна зробити за допомогою цього нового блока. \n\n<xml><block type=\"Dancelab_alternateMoves\"><title name=\"GROUP\">sprites</title><title name=\"N\">2</title><title name=\"MOVE1\">MOVES.Roll</title><title name=\"MOVE2\">MOVES.ClapHigh</title></block></xml> \n\nВибрані вище рухи будуть постійно послідовно повторюватись. \n\n-   Створіть послідовність рухів для головного танцівника спереду! \n-   Використовуйте різні числа для зміни швидкості зміни рухів. Спробуйте `1` або `0.5` для швидшої зміни!",
        "Dance_Party_extras_battle": "\"# Танцювальні команди\n\nЦе танцювальне змагання між двома командами. Клавіші зі стрілками контролюють одного танцівника, а клавіші w, a, s, d — іншого. Проведіть танцювальне змагання, а потім спробуйте вдосконалити танець.\n\n-   Додайте більше клавіш управління рухами\n-   Зробіть так, щоб другорядні танцівники також реагували на натискання клавіш\n-   Міняйте танцівника кожні 4 такти налаштуванням видимості.\"",
        "Dance_Party_extras_battle_2019": "\"# Танцювальні команди\n\nЦе танцювальне змагання між двома командами. Клавіші зі стрілками контролюють одного танцівника, а клавіші w, a, s, d — іншого. Проведіть танцювальне змагання, а потім спробуйте вдосконалити танець.\n\n-   Додайте більше клавіш управління рухами\n-   Зробіть так, щоб другорядні танцівники також реагували на натискання клавіш\n-   Міняйте танцівника кожні 4 такти налаштуванням видимості.\"",
        "Dance_Party_extras_every_beat": "\"# Четвертні ноти\n\nУ більшості наших танців використовуються цілі такти, а кожен такт складається з 4 четвертних нот. У цьому танці використано `кожні 0.25 такти`, щоб танцівник плескав на кожній четвертній ноті.\n\nУ цьому танці також використовується блок _умова_, що дозволяє керувати тим, коли блок `кожні 0.25 такти` може змінювати танець. Спробуйте змінити числа в блоці умови, щоб побачити, як змінюватиметься танець.\n\n-   Поекспериментуйте з іншими тривалостями нот (наприклад, введіть 0.5 для половинної ноти або 0.125 для вісімки).\n-   Додайте декілька подій `після такту`.\n-   Змініть \"\"такти\"\"на \"\"секунди\"\" і спробуйте такий відлік часу для ваших танців.\".",
        "Dance_Party_extras_every_beat_2019": "# Четвертні ноти\n\nУ більшості наших танців використовуються цілі такти, а кожен такт складається з 4 четвертних нот. У цьому танці блок <xml><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_compare\"><title name=\"OP\">LT</title><value name=\"A\"><block type=\"Dancelab_getTime\"><title name=\"UNIT\">\"measures\"</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">5</title></block></value></block></value><statement name=\"DO0\"></statement></block></xml> використовується, щоб змусити танцівника плескати на кожній четвертній ноті, але тільки перші 4 такти.\n\nСпробуйте змінити числа в блоках, щоб побачити, як змінюватиметься танець.\n\n-   Поекспериментуйте з іншими тривалостями нот (наприклад, введіть 0.5 для половинної ноти або 0.125 для вісімки).\n-   Додайте декілька інших подій.",
        "Dance_Party_extras_layout": "\"# Шикуймося!\n\nПодивіться цей танець, у якому блок `розташування` використовується для зміни розташування другорядних танцівників під час танцю. Використайте одну з наступних ідей, щоб ускладнити танець:\n\n-   Створіть другу групу танцівників з іншим розташуванням\n-   Змінюйте розташування при натисканні клавіші\n-   Змінюйте властивість, коли танцівники змінюють розташування\"",
        "Dance_Party_extras_layout_2019": "# Давайте вступимо у формування!\n\nПеревірте цей танець, який використовує блок <xml><block type=\"Dancelab_layoutSprites\" block-text=\"layout\"><title name=\"GROUP\">\"MOOSE\"</title><title name=\"FORMAT\">???</title></block></xml> для зміни формату резервних танцюристів протягом усього танцю. Спробуйте одну з цих ідей, щоб розширити її:\n\n-   Створіть другу групу танцюристів в іншому макеті\n-   Змініть макет при натисканні клавіші\n-   Змініть властивість, коли танцюристи змінюють формацію",
        "Dance_Party_extras_mixed_2019": "# Більше кнопок\n\nУ цьому танці властивостями автоматично танцюючих танцівників можна управляти в режимі реального часу. Спробуйте зробити так, щоб при натисканні кнопок змінювалися інші властивості. Наприклад: \n\n-   Рандомізуйте відтінок танцівника при натисканні кнопки \"вниз\". \n-   Додайте групу танцівників із випадковим розташуванням при натисканні клавіші \"пробіл\".",
        "Dance_Party_extras_on_beat": "\"#Баси, середні та високі частоти\n\nУ цьому танці подія \"\"пік\"\" використовується для активації коду при голосному звучанні різних частин музики. Спробуйте поекспериментувати з різними піснями, щоб побачити, як змінюється танець.\".",
        "Dance_Party_extras_on_beat_2019": "\"#Баси, середні та високі частоти\n\nУ цьому танці подія \"\"пік\"\" використовується для активації коду при голосному звучанні різних частин музики. Спробуйте поекспериментувати з різними піснями, щоб побачити, як змінюється танець.\".",
        "Dance_Party_extras_speed": "\"# Пришвидшення та сповільнення\n\nУ цьому фінальному танці блок `установити швидкість` використовується для управління швидкістю руху кожного танцівника. Спробуйте поекспериментувати з різною швидкістю на різних відрізках пісні. Ви можете змінити цей танець або повернутися до будь-якого з попередніх танців, щоб зробити їх ще крутішими.\".",
        "Dance_Party_extras_speed_2019": "# Пришвидшення та сповільнення\n\nУ цьому фінальному танці блок <xml><block type=\"Dancelab_setDanceSpeedEach\"><title name=\"GROUP\">\"SHARK\"</title><title name=\"SPEED\">2</title></block></xml> використовується для управління швидкістю руху кожного танцівника. Спробуйте поекспериментувати з різною швидкістю на різних відрізках пісні. Ви можете змінити цей танець або повернутися до будь-якого з попередніх танців, щоб зробити їх ще крутішими.",
        "Dance_Party_extras_visible": "# Четвертні ноти\n\nУ більшості наших танців використовуються цілі такти, а кожен такт складається з 4 четвертних нот. У цьому танці блок [blockly block][0] використовується для того, щоб танцівник плескав на кожній четвертній ноті після 5-го такту.\n\nСпробуйте змінювати числа в блоці, щоб побачити, як змінюється танець.\n\n-   Поекспериментуйте з іншими тривалостями нот (наприклад, введіть 0.5 для половинної ноти або 0.125 для вісімки).\n-   Додайте декілька інших подій.",
        "Dance_Party_extras_visible_2019": "# Четвертні ноти\n\nУ більшості наших танців використовуються цілі такти, а кожен такт складається з 4 четвертних нот. У цьому танці блок [blockly block][0] використовується для того, щоб танцівник плескав на кожній четвертній ноті після 5-го такту.\n\nСпробуйте змінювати числа в блоці, щоб побачити, як змінюється танець.\n\n-   Поекспериментуйте з іншими тривалостями нот (наприклад, введіть 0.5 для половинної ноти або 0.125 для вісімки).\n-   Додайте декілька інших подій.",
        "Escape Room Example": "# Втеча з кімнати\n\nУ сьогоднішній майстерні ви попрацюєте над створенням програми для виходу з кімнати! На цьому рівні є приклад програми, з яким вам слід погратися, щоб відчути, що саме ви будете створювати.\n\n# Щоб зробити це\n\n-   Клацніть \"Запустити\", щоб запустити програму\n-   Спробуйте знайти ключ, який відчинить двері.",
        "Fish Tank 2-validated_2021": "Зробимо акваріум!  \n\nЗміни спрайт перекотиполя на будь-яку рибку, натиснувши <xml><block type=\"gamelab_allSpritesWithAnimation\" block-text=\"the sprite picker block\"><title name=\"ANIMATION\">\"tumbleweed\"</title></block></xml>.\n\nНе забудь також оновити костюм цього спрайта, натиснувши <xml><block type=\"gamelab_addBehaviorSimple\" block-text=\"the add behavior block\"></block></xml>.",
        "Fish Tank 3-validated_2021": "У рибки паморочиться голова! \n\nЗмініть поведінку рибки, щоб вона плавала вліво та вправо.",
        "Fish Tank 4-validated_2021": "Нашому акваріуму потрібна вода! \n\nВикористовуй <xml><block type=\"gamelab_setBackground\" inline=\"true\" block-text=\"the set background color block\">\n    <value name=\"COLOR\">\n      <block type=\"colour_picker\">\n        <title name=\"COLOUR\">#0000ff</title>\n      </block>\n    </value>\n  </block></xml>, щоб зробити тло будь-якого кольору. Ми рекомендуємо синій!",
        "Fish Tank 5-validated_2021": "Рибка шукає пригод і хоче познайомитися з новими істотами в морі. Додай до акваріума ще один спрайт. Цей спрайт може мати будь-який костюм, окрім того, який ми вже використали для рибки!",
        "Fish Tank 6-validated_2021": "Що ти хочеш, щоб робив новий друг нашої рибки?\n\nДодай будь-яку дію та спостерігай за ними!",
        "Fish Tank 7-validated_2021": "Ми додали багато нових блоків до набору інструментів.   \n\nПограйся з ними та зроби свій акваріум особливим!",
        "Function intro Ryan": "**Функція** під назвою \"побудувати міст\" міститься в робочій області.  Вона вже має весь код, який знадобиться для переходу через річку! \\\r\n \\\r\nДвічі прикріпіть маленький зелений блок у робочій області, щоб виправити шлях і провести гравця {currentPlayerName} до факела з редстоуну [redstone_torch].",
        "Function intro Ryan2022": "**Функція** під назвою \"побудувати міст\" міститься в робочій області.  Вона вже має весь код, який знадобиться для переходу через річку! \\\r\n \\\r\nДвічі прикріпіть маленький зелений блок у робочій області, щоб виправити шлях і провести гравця {currentPlayerName} до факела з редстоуну [redstone_torch].",
        "Function intro Ryan_2019": "**Функція** під назвою \"побудувати міст\" міститься в робочій області.  Вона вже має весь код, який знадобиться для переходу через річку! \\\r\n \\\r\nДвічі прикріпіть маленький зелений блок у робочій області, щоб виправити шлях і провести гравця {currentPlayerName} до факела з редстоуну [redstone_torch].",
        "Function intro Ryan_2020": "**Функція** під назвою \"побудувати міст\" міститься в робочій області.  Вона вже має весь код, який знадобиться для переходу через річку! \\\r\n \\\r\nДвічі прикріпіть маленький зелений блок у робочій області, щоб виправити шлях і провести гравця {currentPlayerName} до факела з редстоуну [redstone_torch].",
        "Function intro Ryan_2021": "**Функція** під назвою \"побудувати міст\" міститься в робочій області.  Вона вже має весь код, який знадобиться для переходу через річку! \\\r\n \\\r\nДвічі прикріпіть маленький зелений блок у робочій області, щоб виправити шлях і провести гравця {currentPlayerName} до факела з редстоуну [redstone_torch].",
        "HOC 2018 Level_1": "Тобі потрібні припаси для подорожі. Забери **човен** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png) зі **скрині** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).",
        "HOC 2018 Level_10": "В цьому Монументі Океану десь ховається **кальмар** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png). Зможеш його знайти?",
        "HOC 2018 Level_11": "Збудуй стіну з **призмарину** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png) навколо чорного бетону. Це активує **трубопровід** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png) і завершить твою місію!",
        "HOC 2018 Level_12": "Вітаємо! Відкритий водний світ чекає на тебе. Будуй коралові рифи! Вулкани! Уламки корабля! Все в твоїх руках.",
        "HOC 2018 Level_122022": "Вітаємо! Відкритий водний світ чекає на тебе. Будуй коралові рифи! Вулкани! Уламки корабля! Все в твоїх руках.",
        "HOC 2018 Level_12_2021": "Вітаємо! Відкритий водний світ чекає на тебе. Будуй коралові рифи! Вулкани! Уламки корабля! Все в твоїх руках.",
        "HOC 2018 Level_2": "На човні плисти набагато простіше, ніж самому! Рухайся до краю доку для посадки на човен.",
        "HOC 2018 Level_3": "Хапай весла і веди свій човен у відкрите море, щоб зловити **тріску** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).",
        "HOC 2018 Level_4": "Погодуємо тріскою **дельфіна** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png). Використай блок \"повторювати до досягнення цілі\", щоб швидше дістатись океану.",
        "HOC 2018 Level_5": "Десь захована **ракушка наутилуса** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)! Досліди уламки корабля, щоб дістатись до **скрині** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).",
        "HOC 2018 Level_6": "Як тут холодно! Злови **лосося** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png) на шляху до підводних руїн.",
        "HOC 2018 Level_7a": "Знайдено підводні руїни. Пошукай пісковик для **скрині** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png) що містить **призмариновий** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png) скарб.",
        "HOC 2018 Level_8": "Спочатку айсберги, а тепер лава? Пройди по вулканічному острову і знайди **тропічну рибу** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png) в кораловому рифі.",
        "HOC 2018 Level_9b": "Тобі вдалося дістатися рифу. Тепер шукай **Серце Моря** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) ! Використай сині та червоні корали, щоб дістатися **скрині** ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).",
        "Intro to Web Lab - Part 1_2021": "## Запитання для обговорення:\\*\\*\n\n-   З яких частин складається Веб-лабораторія і для чого вони використовуються?",
        "Intro to Web Lab - Part 2_2021": "## Питання для обмірковування:\n\n-   У чому користь HTML тегів?\n-   Що робить тег абзацу?",
        "Intro to Web Lab - Part 2_2022": "## Питання для обмірковування:\n\n-   У чому користь HTML тегів?\n-   Що робить тег абзацу?",
        "Introduction to Variables - Part 1_2019": "## Питання для обговорення\n\n-   Для чого використовуються змінні?\n-   Як створити змінну та присвоїти їй значення?\n-   Що може зберігатися у змінній?",
        "Introduction to Variables - Part 1_2021": "## Питання для обговорення\n\n-   Для чого використовуються змінні?\n-   Як створити змінну та присвоїти їй значення?\n-   Що може зберігатися у змінній?",
        "Introduction to Variables - Part 1_2022": "## Питання для обговорення\n\n-   Для чого використовуються змінні?\n-   Як створити змінну та присвоїти їй значення?\n-   Що може зберігатися у змінній?",
        "K-1 Bee Loops 2": "Скористайтеся циклом \"повторити\", щоб рухатись, збирати нектар і робити мед!",
        "K-1 Bee Loops 3": "Скористайтеся тричі циклом \"повторити\", щоб збирати нектар і робити мед!",
        "K-1 Bee Loops 4": "Скористайтеся циклами \"повторити\", щоб збирати нектар, робити мед та рухатись!",
        "K-1 Bee Loops 5": "Використай цикли, щоб зібрати нектар і мед!",
        "K-1 Bee Loops 6": "Скористайтеся циклом \"повторити\", щоб збирати нектар, робити мед і рухатись!",
        "K-1 Maze Loops 10": "Приведіть мене до свині!\\\nВикористання циклу \"повторити\" значно полегшить роботу.",
        "K-1 Maze Loops 11": "Приведіть мене до свині!\\\nЦикл \"повторити\" полегшить роботу.",
        "K-1 Maze Loops 12": "Приведіть мене до свині!\\\nЦикл \"повторити\" полегшить роботу.",
        "K-1 Maze Loops 2": "Використовуй блок \"Повторити\", щоб привести мене до свині!",
        "K-1 Maze Loops 3": "Приведіть мене до свині!\\\nОбов’язково використовуйте цикли \"повторити\".",
        "K-1 Maze Loops 5": "Приведіть мене до свині!\\\nОбов’язково використовуйте цикли \"повторити\".",
        "K-1 Maze Loops 6": "Приведіть мене до свині!\\\nОбов’язково використовуйте цикли \"повторити\".",
        "K-1 Maze Loops 7": "Приведіть мене до свині!\\\nОбов’язково використовуйте цикли \"повторити\".",
        "K-1 Maze Loops 8": "Використовуйте цикл \"повторити\", щоб привести мене до свині.",
        "K-1 Maze Loops Assessment 1": "Подивіться на все, чого ми дізналися!\\\nСкористайтеся циклом \"повторення\", щоб провести мене до свині!",
        "MC Agent Freeplay": "**Вільна гра:** тепер усе залежить від вас! Використовуйте код Agent для дослідження цього світу.",
        "MC HOC 2016 SCORE LEVEL": "Деякі ігри дозволяють вам вести рахунок. Зіграй в квача із цими Залізними Големами та використай блок [blockly block] [0], щоб заробити бал, коли торкаєшся їх.\n\nОтримайте 5 балів для виграшу!",
        "MC_HOC_2017_01_RETRY": "Гравець {currentPlayerName} опинився в пастці всередині будинку, і тут у пригоді стане Agent!   \\\r\n \\\r\n   \\\r\nПрикріпіть блок \"рухатися вперед\" до блока \"коли запущено\" в робочі області, щоб Agent став на притискну пластину [PressurePlate_Up], а потім натисніть \"Запустити\" та скористайтеся клавішами зі стрілками, щоб вивести гравця {currentPlayerName} з будинку та забрати **скриню** [chest].  ",
        "MC_HOC_2017_01_RETRY2022": "Гравець {currentPlayerName} опинився в пастці всередині будинку, і тут у пригоді стане Agent!   \\\r\n \\\r\n   \\\r\nПрикріпіть блок \"рухатися вперед\" до блока \"коли запущено\" в робочі області, щоб Agent став на притискну пластину [PressurePlate_Up], а потім натисніть \"Запустити\" та скористайтеся клавішами зі стрілками, щоб вивести гравця {currentPlayerName} з будинку та забрати **скриню** [chest].  ",
        "MC_HOC_2017_01_RETRY_2019": "Гравець {currentPlayerName} опинився в пастці всередині будинку, і тут у пригоді стане Agent!   \\\r\n \\\r\n   \\\r\nПрикріпіть блок \"рухатися вперед\" до блока \"коли запущено\" в робочі області, щоб Agent став на притискну пластину [PressurePlate_Up], а потім натисніть \"Запустити\" та скористайтеся клавішами зі стрілками, щоб вивести гравця {currentPlayerName} з будинку та забрати **скриню** [chest].  ",
        "MC_HOC_2017_01_RETRY_2020": "Гравець {currentPlayerName} опинився в пастці всередині будинку, і тут у пригоді стане Agent!   \\\r\n \\\r\n   \\\r\nПрикріпіть блок \"рухатися вперед\" до блока \"коли запущено\" в робочі області, щоб Agent став на притискну пластину [PressurePlate_Up], а потім натисніть \"Запустити\" та скористайтеся клавішами зі стрілками, щоб вивести гравця {currentPlayerName} з будинку та забрати **скриню** [chest].  ",
        "MC_HOC_2017_01_RETRY_2021": "Гравець {currentPlayerName} опинився в пастці всередині будинку, і тут у пригоді стане Agent!   \\\r\n \\\r\n   \\\r\nПрикріпіть блок \"рухатися вперед\" до блока \"коли запущено\" в робочі області, щоб Agent став на притискну пластину [PressurePlate_Up], а потім натисніть \"Запустити\" та скористайтеся клавішами зі стрілками, щоб вивести гравця {currentPlayerName} з будинку та забрати **скриню** [chest].  ",
        "MC_HOC_2017_02_Cole": "Гравець {currentPlayerName} поспішає до пригод! Щоб спростити завдання, візьміть **карту** [map_empty] за замкненими дверима праворуч. \\\r\n \\\r\nПрикріпіть код у робочій області для переміщення Agent до притискної пластини [PressurePlate_Up], щоб гравець {currentPlayerName} міг пройти. ",
        "MC_HOC_2017_02_Cole2022": "Гравець {currentPlayerName} поспішає до пригод! Щоб спростити завдання, візьміть **карту** [map_empty] за замкненими дверима праворуч. \\\r\n \\\r\nПрикріпіть код у робочій області для переміщення Agent до притискної пластини [PressurePlate_Up], щоб гравець {currentPlayerName} міг пройти. ",
        "MC_HOC_2017_02_Cole_2019": "Гравець {currentPlayerName} поспішає до пригод! Щоб спростити завдання, візьміть **карту** [map_empty] за замкненими дверима праворуч. \\\r\n \\\r\nПрикріпіть код у робочій області для переміщення Agent до притискної пластини [PressurePlate_Up], щоб гравець {currentPlayerName} міг пройти. ",
        "MC_HOC_2017_02_Cole_2020": "Гравець {currentPlayerName} поспішає до пригод! Щоб спростити завдання, візьміть **карту** [map_empty] за замкненими дверима праворуч. \\\r\n \\\r\nПрикріпіть код у робочій області для переміщення Agent до притискної пластини [PressurePlate_Up], щоб гравець {currentPlayerName} міг пройти. ",
        "MC_HOC_2017_02_Cole_2021": "Гравець {currentPlayerName} поспішає до пригод! Щоб спростити завдання, візьміть **карту** [map_empty] за замкненими дверима праворуч. \\\r\n \\\r\nПрикріпіть код у робочій області для переміщення Agent до притискної пластини [PressurePlate_Up], щоб гравець {currentPlayerName} міг пройти. ",
        "MC_HOC_2017_03_Cole": "Гравець {currentPlayerName} продовжує свої пригоди! Тепер йому потрібен **компас** [compass], щоб підготуватися до подорожі.  \\\r\n   \\\r\nДодайте код, щоб змусити Agent відкрити хвіртку. ",
        "MC_HOC_2017_03_Cole2022": "Гравець {currentPlayerName} продовжує свої пригоди! Тепер йому потрібен **компас** [compass], щоб підготуватися до подорожі.  \\\r\n   \\\r\nДодайте код, щоб змусити Agent відкрити хвіртку. ",
        "MC_HOC_2017_03_Cole_2019": "Гравець {currentPlayerName} продовжує свої пригоди! Тепер йому потрібен **компас** [compass], щоб підготуватися до подорожі.  \\\r\n   \\\r\nДодайте код, щоб змусити Agent відкрити хвіртку. ",
        "MC_HOC_2017_03_Cole_2020": "Гравець {currentPlayerName} продовжує свої пригоди! Тепер йому потрібен **компас** [compass], щоб підготуватися до подорожі.  \\\r\n   \\\r\nДодайте код, щоб змусити Agent відкрити хвіртку. ",
        "MC_HOC_2017_03_Cole_2021": "Гравець {currentPlayerName} продовжує свої пригоди! Тепер йому потрібен **компас** [compass], щоб підготуватися до подорожі.  \\\r\n   \\\r\nДодайте код, щоб змусити Agent відкрити хвіртку. ",
        "MC_HOC_2017_04POINT5_RYAN": "Вам вдалося! \\\r\n\\\r\nА тепер безпечно проведіть гравця {currentPlayerName} крізь лабіринт, щоб він міг забрати **сокиру** [diamond_axe]\\\r",
        "MC_HOC_2017_04POINT5_RYAN2022": "Вам вдалося! \\\r\n\\\r\nА тепер безпечно проведіть гравця {currentPlayerName} крізь лабіринт, щоб він міг забрати **сокиру** [diamond_axe]\\\r",
        "MC_HOC_2017_04POINT5_RYAN_2019": "Вам вдалося! \\\r\n\\\r\nА тепер безпечно проведіть гравця {currentPlayerName} крізь лабіринт, щоб він міг забрати **сокиру** [diamond_axe]\\\r",
        "MC_HOC_2017_04POINT5_RYAN_2020": "Вам вдалося! \\\r\n\\\r\nА тепер безпечно проведіть гравця {currentPlayerName} крізь лабіринт, щоб він міг забрати **сокиру** [diamond_axe]\\\r",
        "MC_HOC_2017_04POINT5_RYAN_2021": "Вам вдалося! \\\r\n\\\r\nА тепер безпечно проведіть гравця {currentPlayerName} крізь лабіринт, щоб він міг забрати **сокиру** [diamond_axe]\\\r",
        "MC_HOC_2017_04_Cole": "Agent може рухатися по воді!  \\\r\n \\\r\nЗа допомогою циклу \"повтор\" виконайте це завдання та допоможіть гравцю {currentPlayerName} дістатися до **відра** [bucket_empty] за дверима. ",
        "MC_HOC_2017_04_Cole2022": "Agent може рухатися по воді!  \\\r\n \\\r\nЗа допомогою циклу \"повтор\" виконайте це завдання та допоможіть гравцю {currentPlayerName} дістатися до **відра** [bucket_empty] за дверима. ",
        "MC_HOC_2017_04_Cole_2019": "Agent може рухатися по воді!  \\\r\n \\\r\nЗа допомогою циклу \"повтор\" виконайте це завдання та допоможіть гравцю {currentPlayerName} дістатися до **відра** [bucket_empty] за дверима. ",
        "MC_HOC_2017_04_Cole_2020": "Agent може рухатися по воді!  \\\r\n \\\r\nЗа допомогою циклу \"повтор\" виконайте це завдання та допоможіть гравцю {currentPlayerName} дістатися до **відра** [bucket_empty] за дверима. ",
        "MC_HOC_2017_04_Cole_2021": "Agent може рухатися по воді!  \\\r\n \\\r\nЗа допомогою циклу \"повтор\" виконайте це завдання та допоможіть гравцю {currentPlayerName} дістатися до **відра** [bucket_empty] за дверима. ",
        "MC_HOC_2017_05_Cole": "О ні, мосту немає! \\\r\n\\\r\nЗапрограмуйте Agent на відновлення мосту, скориставшись блоком \"розмістити\", щоб гравець {currentPlayerName} міг дістатися до **лопати** [diamond_shovel].",
        "MC_HOC_2017_05_Cole2022": "О ні, мосту немає! \\\r\n\\\r\nЗапрограмуйте Agent на відновлення мосту, скориставшись блоком \"розмістити\", щоб гравець {currentPlayerName} міг дістатися до **лопати** [diamond_shovel].",
        "MC_HOC_2017_05_Cole_2019": "О ні, мосту немає! \\\r\n\\\r\nЗапрограмуйте Agent на відновлення мосту, скориставшись блоком \"розмістити\", щоб гравець {currentPlayerName} міг дістатися до **лопати** [diamond_shovel].",
        "MC_HOC_2017_05_Cole_2020": "О ні, мосту немає! \\\r\n\\\r\nЗапрограмуйте Agent на відновлення мосту, скориставшись блоком \"розмістити\", щоб гравець {currentPlayerName} міг дістатися до **лопати** [diamond_shovel].",
        "MC_HOC_2017_05_Cole_2021": "О ні, мосту немає! \\\r\n\\\r\nЗапрограмуйте Agent на відновлення мосту, скориставшись блоком \"розмістити\", щоб гравець {currentPlayerName} міг дістатися до **лопати** [diamond_shovel].",
        "MC_HOC_2017_06_Cole": "Ще одна річка, але цього разу набагато ширша! \\\r\n \\\r\nВиправте код, щоб допомогти Agent збудувати міст, аби гравець {currentPlayerName} міг дістатися до **кайла** [diamond_pickaxe]. ",
        "MC_HOC_2017_06_Cole2022": "Ще одна річка, але цього разу набагато ширша! \\\r\n \\\r\nВиправте код, щоб допомогти Agent збудувати міст, аби гравець {currentPlayerName} міг дістатися до **кайла** [diamond_pickaxe]. ",
        "MC_HOC_2017_06_Cole_2019": "Ще одна річка, але цього разу набагато ширша! \\\r\n \\\r\nВиправте код, щоб допомогти Agent збудувати міст, аби гравець {currentPlayerName} міг дістатися до **кайла** [diamond_pickaxe]. ",
        "MC_HOC_2017_06_Cole_2020": "Ще одна річка, але цього разу набагато ширша! \\\r\n \\\r\nВиправте код, щоб допомогти Agent збудувати міст, аби гравець {currentPlayerName} міг дістатися до **кайла** [diamond_pickaxe]. ",
        "MC_HOC_2017_06_Cole_2021": "Ще одна річка, але цього разу набагато ширша! \\\r\n \\\r\nВиправте код, щоб допомогти Agent збудувати міст, аби гравець {currentPlayerName} міг дістатися до **кайла** [diamond_pickaxe]. ",
        "MC_HOC_2017_07_Cole": "Лід на шляху!  \\\r\n \\\r\nФункція \"очистити шлях\" допоможе вам знищити лід і провести гравця {currentPlayerName} до вагонетки [minecart_normal]! ",
        "MC_HOC_2017_07_Cole2022": "Лід на шляху!  \\\r\n \\\r\nФункція \"очистити шлях\" допоможе вам знищити лід і провести гравця {currentPlayerName} до вагонетки [minecart_normal]! ",
        "MC_HOC_2017_07_Cole_2019": "Лід на шляху!  \\\r\n \\\r\nФункція \"очистити шлях\" допоможе вам знищити лід і провести гравця {currentPlayerName} до вагонетки [minecart_normal]! ",
        "MC_HOC_2017_07_Cole_2020": "Лід на шляху!  \\\r\n \\\r\nФункція \"очистити шлях\" допоможе вам знищити лід і провести гравця {currentPlayerName} до вагонетки [minecart_normal]! ",
        "MC_HOC_2017_07_Cole_2021": "Лід на шляху!  \\\r\n \\\r\nФункція \"очистити шлях\" допоможе вам знищити лід і провести гравця {currentPlayerName} до вагонетки [minecart_normal]! ",
        "MC_HOC_2017_10_RETRY": "А ви помічаєте відмінність між цими двома функціями у вашій робочій області? \\\r\n \\\r\nВикористовуйте ці функції з іншим кодом із панелі інструментів, щоб розчистити шлях для вагонетки, а потім дістаньте **кресало** [flint_and_steel]. \\\r\n ",
        "MC_HOC_2017_10_RETRY2022": "А ви помічаєте відмінність між цими двома функціями у вашій робочій області? \\\r\n \\\r\nВикористовуйте ці функції з іншим кодом із панелі інструментів, щоб розчистити шлях для вагонетки, а потім дістаньте **кресало** [flint_and_steel]. \\\r\n ",
        "MC_HOC_2017_10_RETRY_2019": "А ви помічаєте відмінність між цими двома функціями у вашій робочій області? \\\r\n \\\r\nВикористовуйте ці функції з іншим кодом із панелі інструментів, щоб розчистити шлях для вагонетки, а потім дістаньте **кресало** [flint_and_steel]. \\\r\n ",
        "MC_HOC_2017_10_RETRY_2020": "А ви помічаєте відмінність між цими двома функціями у вашій робочій області? \\\r\n \\\r\nВикористовуйте ці функції з іншим кодом із панелі інструментів, щоб розчистити шлях для вагонетки, а потім дістаньте **кресало** [flint_and_steel]. \\\r\n ",
        "MC_HOC_2017_10_RETRY_2021": "А ви помічаєте відмінність між цими двома функціями у вашій робочій області? \\\r\n \\\r\nВикористовуйте ці функції з іншим кодом із панелі інструментів, щоб розчистити шлях для вагонетки, а потім дістаньте **кресало** [flint_and_steel]. \\\r\n ",
        "MC_HOC_2017_Ali": "Погляньте на функції нижче.  Як можна використати їх, щоб уникнути ґастів і допомогти гравцю {currentPlayerName} безпечно дістатися до **книги чарів** [book_enchanted]?  ",
        "MC_HOC_2017_Ali2022": "Погляньте на функції нижче.  Як можна використати їх, щоб уникнути ґастів і допомогти гравцю {currentPlayerName} безпечно дістатися до **книги чарів** [book_enchanted]?  ",
        "MC_HOC_2017_Ali_2019": "Погляньте на функції нижче.  Як можна використати їх, щоб уникнути ґастів і допомогти гравцю {currentPlayerName} безпечно дістатися до **книги чарів** [book_enchanted]?  ",
        "MC_HOC_2017_Ali_2020": "Погляньте на функції нижче.  Як можна використати їх, щоб уникнути ґастів і допомогти гравцю {currentPlayerName} безпечно дістатися до **книги чарів** [book_enchanted]?  ",
        "MC_HOC_2017_Ali_2021": "Погляньте на функції нижче.  Як можна використати їх, щоб уникнути ґастів і допомогти гравцю {currentPlayerName} безпечно дістатися до **книги чарів** [book_enchanted]?  ",
        "MC_HOC_2017_FP20x20": "**Вільна гра:** тепер усе залежить від вас! Використовуйте код Agent для дослідження цього світу.",
        "MC_HOC_2017_FP20x202022": "**Вільна гра:** тепер усе залежить від вас! Використовуйте код Agent для дослідження цього світу.",
        "MC_HOC_2017_FP20x20_2019": "**Вільна гра:** тепер усе залежить від вас! Використовуйте код Agent для дослідження цього світу.",
        "MC_HOC_2017_FP20x20_2020": "**Вільна гра:** тепер усе залежить від вас! Використовуйте код Agent для дослідження цього світу.",
        "MC_HOC_2017_FP20x20_2021": "**Вільна гра:** тепер усе залежить від вас! Використовуйте код Agent для дослідження цього світу.",
        "NEW Course 4 Artist Params 2": "Створіть функцію `Малювання трикутника`, яка малює трикутник зі сторонами 50 пікселів.",
        "New Minecraft Hero Project": "**Вільна гра:** тепер усе залежить від вас! Використовуйте код Agent для дослідження цього світу.",
        "Overworld Chop Tree": "Деревина - важливий ресурс. З неї виготовляють багато речей. Підійди до дерева і скористайся командою \"знищити блок\", щоб зрубати його.",
        "Overworld Chop Tree2022": "Деревина - важливий ресурс. З неї виготовляють багато речей. Підійди до дерева і скористайся командою \"знищити блок\", щоб зрубати його.",
        "Overworld Chop Tree_2019": "Деревина - важливий ресурс. З неї виготовляють багато речей. Підійди до дерева і скористайся командою \"знищити блок\", щоб зрубати його.",
        "Overworld Chop Tree_2020": "Деревина - важливий ресурс. З неї виготовляють багато речей. Підійди до дерева і скористайся командою \"знищити блок\", щоб зрубати його.",
        "Overworld Chop Tree_2021": "Деревина - важливий ресурс. З неї виготовляють багато речей. Підійди до дерева і скористайся командою \"знищити блок\", щоб зрубати його.",
        "Overworld House Frame Chosen": "Збудуй решту будинку з матеріалу, який подобається. Команда \"повторити\" стане у нагоді.",
        "Overworld House Frame Chosen2022": "Збудуй решту будинку з матеріалу, який подобається. Команда \"повторити\" стане у нагоді.",
        "Overworld House Frame Chosen_2019": "Збудуй решту будинку з матеріалу, який подобається. Команда \"повторити\" стане у нагоді.",
        "Overworld House Frame Chosen_2020": "Збудуй решту будинку з матеріалу, який подобається. Команда \"повторити\" стане у нагоді.",
        "Overworld House Frame Chosen_2021": "Збудуй решту будинку з матеріалу, який подобається. Команда \"повторити\" стане у нагоді.",
        "Overworld Move to Sheep": "Додай другу команду \"рухатись вперед\" для того, щоб дістатись до вівці.",
        "Overworld Move to Sheep2022": "Додай другу команду \"рухатись вперед\" для того, щоб дістатись до вівці.",
        "Overworld Move to Sheep_2019": "Додай другу команду \"рухатись вперед\" для того, щоб дістатись до вівці.",
        "Overworld Move to Sheep_2020": "Додай другу команду \"рухатись вперед\" для того, щоб дістатись до вівці.",
        "Overworld Move to Sheep_2021": "Додай другу команду \"рухатись вперед\" для того, щоб дістатись до вівці.",
        "Overworld Place Wall": "Будинок починається зі стіни. Створи першу частину свого будинку, розміщуючи команди \"поставити\" та \"рухатись вперед\" всередині циклу повторення.",
        "Overworld Place Wall2022": "Будинок починається зі стіни. Створи першу частину свого будинку, розміщуючи команди \"поставити\" та \"рухатись вперед\" всередині циклу повторення.",
        "Overworld Place Wall_2019": "Будинок починається зі стіни. Створи першу частину свого будинку, розміщуючи команди \"поставити\" та \"рухатись вперед\" всередині циклу повторення.",
        "Overworld Place Wall_2020": "Будинок починається зі стіни. Створи першу частину свого будинку, розміщуючи команди \"поставити\" та \"рухатись вперед\" всередині циклу повторення.",
        "Overworld Place Wall_2021": "Будинок починається зі стіни. Створи першу частину свого будинку, розміщуючи команди \"покласти\" та \"рухатись вперед\" всередині циклу \"повторити\".",
        "Overworld Shear Sheep": "Час стригти овець! Скористайся командою \"стригти\", щоб зістригти вовну з обох овець.",
        "Overworld Shear Sheep2022": "Час стригти овець! Скористайся командою \"стригти\", щоб зістригти вовну з обох овець.",
        "Overworld Shear Sheep_2019": "Час стригти овець! Скористайся командою \"стригти\", щоб зістригти вовну з обох овець.",
        "Overworld Shear Sheep_2020": "Час стригти овець! Скористайся командою \"стригти\", щоб зістригти вовну з обох овець.",
        "Overworld Shear Sheep_2021": "Час стригти овець! Скористайся командою \"стригти\", щоб зістригти вовну з обох овець.",
        "Room Escape Workshop - 3": "# Приховати код\n\n<img src=\"https://images.code.org/6fa80456a39d9b6417545f5f66ec83a5-image-1490368827625.png\" style=\"width:400px;float:right\">\n\n1.  У режимі дизайну клацніть на білий квадрат, де написано \"КОД\". Напишіть інший текст для секретного коду на ваш вибір\n2.  Перетягніть малюнок вниз, щоб закрити секретний код \n\n![](<>)",
        "Standalone_Artist_2": "Намалюй ромб з кутами 120 та 60 градусів та сторонами по 150 пікселів.",
        "Standalone_Artist_3": "Можеш намалювати шестикутник зі сторонами по 100 пікселів та кутами по 60 градусів?",
        "Standalone_Artist_4": "Тепер у нас є новий блок - цикл. Це дозволить повторно виконувати набір команд. Що буде, якщо ви повторите ці команди 6 разів?",
        "Standalone_Artist_5": "Скільки разів потрібно повторити цикл, щоб утворити з ромбів квітку?",
        "Standalone_Artist_5.5": "Зауважте, як завдяки циклу ми спростили код малювання ромба. Тепер можна виконати цикл 12 разів і утвориться квітка. Підказка: потрібно повертати на 30 градусів щоразу після малювання ромба, щоб не малювати повторно на тому ж місці.",
        "Standalone_Artist_6": "Повторіть код шестикутника 6 разів, щоб намалювати узор. На скільки градусів потрібно щоразу повертати? Підказка: розділіть кількість градусів у колі на кількість повторів циклу.",
        "Standalone_Artist_7": "Функція - ще один інструмент програмування, котрий дозволяє уникнути повторів. Ця функція малює квітку, тож її можна використовувати щоразу, коли потрібно намалювати квітку. Використайте її, а також новий блок \"перескочити вперед\", щоб намалювати ці квіти. Підказка: відстань між квітами - 150 пікселів",
        "Standalone_Artist_8": "Ось функція з назвою \"намалювати фігуру\", яку ми запрограмували на малювання шестикутників. Запустіть код і подивіться, що відбувається, а тоді поекспериментуйте з функцією. Можете змінити її так, щоб малювати узори з квадратів, трикутників чи восьмикутників?",
        "Standalone_Artist_9": "А тепер можеш створити будь-яку картинку! Навіть маєш кілька нових блоків і порожню функцію, котра може виконати все, що забажаєш!",
        "U1L13 Text Compression": "Шукайте шаблони (повторювані слова чи фрази) у тексті. Запишіть знайдені шаблони у словник праворуч. Коли запис пишеться у словник, символ запису вставляється в текст замість шаблону",
        "U4 Model Program 1_2021": "# Застосунок \"Утилізація\" 2.0\n\nЦі рівні повертають нас до застосунку \"Утилізація\", який ми створили на уроці 14. Наша мета - розширити цей застосунок, додавши нові екрани, наприклад, екран \"Про застосунок\" або \"Контакти\".\n\n# Додавання нового екрану\n\nЩоб завершити застосунок \"Утилізація\", тобі знадобиться більше, ніж лише домашній екран. Щоб створити більше екранів, просто натисни на розкривне меню у верхній частині екрана та обери \"Новий екран...\"\n\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\" style=\"width: 200px\">\n\n# Завдання\n\n-   **Створи новий екран** і признач йому ідентифікатор \"про нас\".",
        "U4 Model Program 1_2022": "# Застосунок \"Утилізація\" 2.0\n\nЦі рівні повертають нас до застосунку \"Утилізація\", який ми створили на уроці 14. Наша мета - розширити цей застосунок, додавши нові екрани, наприклад, екран \"Про застосунок\" або \"Контакти\".\n\n# Додавання нового екрану\n\nЩоб завершити застосунок \"Утилізація\", тобі знадобиться більше, ніж лише домашній екран. Щоб створити більше екранів, просто натисни на розкривне меню у верхній частині екрана та обери \"Новий екран...\"\n\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\" style=\"width: 200px\">\n\n# Завдання\n\n-   **Створи новий екран** і признач йому ідентифікатор \"про нас\".",
        "Underground Avoiding Lava": "Під деякими блоками приховано лаву, її потрібно прикрити перш, ніж рухатися вперед. Команда \"якщо\" стане тут у нагоді. Додай команду \"рухатись вперед\" на відповідну позицію, щоб видобути ці блоки.",
        "Underground Avoiding Lava2022": "Під деякими блоками приховано лаву, її потрібно прикрити перш, ніж рухатися вперед. Команда \"якщо\" стане тут у нагоді. Додай команду \"рухатись вперед\" на відповідну позицію, щоб видобути ці блоки.",
        "Underground Avoiding Lava_2019": "Під деякими блоками приховано лаву, її потрібно прикрити перш, ніж рухатися вперед. Команда \"якщо\" стане тут у нагоді. Додай команду \"рухатись вперед\" на відповідну позицію, щоб видобути ці блоки.",
        "Underground Avoiding Lava_2020": "Під деякими блоками приховано лаву, її потрібно прикрити перш, ніж рухатися вперед. Команда \"якщо\" стане тут у нагоді. Додай команду \"рухатись вперед\" на відповідну позицію, щоб видобути ці блоки.",
        "Underground Avoiding Lava_2021": "Під деякими блоками приховано лаву, її потрібно прикрити перш, ніж рухатися вперед. Команда \"якщо\" стане тут у нагоді. Додай команду \"рухатись вперед\" на відповідну позицію, щоб видобути ці блоки.",
        "Underground If Statements": "Ситуація ускладнюється. Треба добути 3 червоні камені, але не потрап у лаву. Використай команду \"якщо\", щоб розмістити бруківку над відкритою лавою.",
        "Underground If Statements2022": "Ситуація ускладнюється. Треба добути 3 червоні камені, але не потрап у лаву. Використай команду \"якщо\", щоб розмістити бруківку над відкритою лавою.",
        "Underground If Statements_2019": "Ситуація ускладнюється. Треба добути 3 червоні камені, але не потрап у лаву. Використай команду \"якщо\", щоб розмістити бруківку над відкритою лавою.",
        "Underground If Statements_2020": "Ситуація ускладнюється. Треба добути 3 червоні камені, але не потрап у лаву. Використай команду \"якщо\", щоб розмістити бруківку над відкритою лавою.",
        "Underground If Statements_2021": "Ситуація ускладнюється. Треба добути 3 червоні камені, але не потрап у лаву. Використай команду \"якщо\", щоб розмістити бруківку над відкритою лавою.",
        "Virtual Pet 1_-2022-2": "# Віртуальний улюбленець\n\nВау! Заціни цього крутого домашнього улюбленця! \n\n## Виконай наступне:\n\n-   Пограйся з програмою віртуального улюбленця.\n-   Прочитай код, щоб дізнатися, як він працює. Ти навіть можеш вносити зміни!\n-   Що відбувається, коли твій улюбленець торкається інших спрайтів?\n-   Що відбувається, коли ти натискаєш на тваринку?\n\nЗапусти код та пограйся зі своїм улюбленцем! Коли закінчиш, натисни **Завершити**.",
        "Virtual Pet 1_2021": "# Віртуальний улюбленець\n\nВау! Заціни цього крутого домашнього улюбленця! \n\n## Виконай наступне:\n\n-   Пограйся з програмою віртуального улюбленця.\n-   Прочитай код, щоб дізнатися, як він працює. Ти навіть можеш вносити зміни!\n-   Що відбувається, коли твій улюбленець торкається інших спрайтів?\n-   Що відбувається, коли ти натискаєш на тваринку?\n\nЗапусти код та пограйся зі своїм улюбленцем! Коли закінчиш, натисни **Завершити**.",
        "Virtual Pet 2_-2022-2": "_Тепер твоя черга створити власного віртуального улюбленця! Почнемо зі створення спрайтів для твого УЛЮБЛЕНЦЯ та його ЇЖІ._\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/54b0e6925b32e6c5e17f3193b89f57f3-image-1620757940654.png)\n\n</div>\n\n## Виконай наступне:\n\n1.  ( Додатково) Натисни вкладку **Костюми**, щоб додати нові костюми до свого проєкту.\n2.  Створи два спрайти з різними костюмами.\n3.  Вибери різні місця для своїх спрайтів.\n4.  Зміни розмір спрайтів за допомогою блоку `встановити розмір`.",
        "Virtual Pet 2_2021": "_Тепер твоя черга створити власного віртуального улюбленця! Почнемо зі створення спрайтів для твого УЛЮБЛЕНЦЯ та його ЇЖІ._\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/54b0e6925b32e6c5e17f3193b89f57f3-image-1620757940654.png)\n\n</div>\n\n## Виконай наступне:\n\n1.  ( Додатково) Натисни вкладку **Костюми**, щоб додати нові костюми до свого проєкту.\n2.  Створи два спрайти з різними костюмами.\n3.  Вибери різні місця для своїх спрайтів.\n4.  Зміни розмір спрайтів за допомогою блоку `встановити розмір`.",
        "Virtual Pet 3_-2022-2": "_Далі давай зробимо так, щоб користувач міг переміщати їжу свого улюбленця з моделлю поведінки «перетягування»:_\n<xml><block type=\"gamelab_draggable\"/></xml>\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/e6eeb79c81ee986075e24d1a9248cc40-image-1620758053743.2021-05-11 14_27_30.gif>)\n\n</div>\n\n## Виконай наступне:\n\n1.  Додай до коду блок `спрайт починає`. Вибери костюм свого спрайту для їжі.\n2.  Знайди модель поведінки \"перетягування\" та додай її до свого коду.\n3.  Натисни \"Запустити\". \n\n_Тепер ти зможеш переміщати спрайт їжі по екрану, натискаючи або торкаючись його._",
        "Virtual Pet 3_2021": "_Далі давай зробимо так, щоб користувач міг переміщати їжу свого улюбленця з моделлю поведінки «перетягування»:_\n<xml><block type=\"gamelab_draggable\"/></xml>\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/e6eeb79c81ee986075e24d1a9248cc40-image-1620758053743.2021-05-11 14_27_30.gif>)\n\n</div>\n\n## Виконай наступне:\n\n1.  Додай до коду блок `спрайт починає`. Вибери костюм свого спрайту для їжі.\n2.  Знайди модель поведінки \"перетягування\" та додай її до свого коду.\n3.  Натисни \"Запустити\". \n\n_Тепер ти зможеш переміщати спрайт їжі по екрану, натискаючи або торкаючись його._",
        "Virtual Pet 5_-2022-2": "_Тепер давай використаємо новий блок подій \"коли торкається\", щоб змусити твого улюбленця рости, коли він їсть!_\n<xml><block type=\"gamelab_checkTouching\">\n      <title name=\"CONDITION\">\"when\"</title>\n      <value name=\"SPRITE1\">\n        <block type=\"gamelab_allSpritesWithAnimation\">\n          <title name=\"ANIMATION\">\"cuteanimals_bunny2_1\"</title>\n        </block>\n      </value>\n      <value name=\"SPRITE2\">\n        <block type=\"gamelab_allSpritesWithAnimation\">\n          <title name=\"ANIMATION\">\"face_carrot_1\"</title>\n        </block>\n      </value>\n    </block></xml>\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/0446ed8942706d06824e9a79c35db5a6-image-1620760396986.2021-05-11 14_28_30.gif>)\n\n</div>\n\n## Виконай наступне:\n\n1.  Перетягни блок подій `коли торкається`. Вибери два спрайти.\n2.  Використовуй блок `змінити розмір` під цією подією, щоб змусити свого улюбленця рости.\n\n**Додаткове завдання:**\n\n-   Відтворюй звук, коли твій улюбленець їсть їжу.",
        "Virtual Pet 5_2021": "_Тепер давай використаємо новий блок подій \"коли торкається\", щоб змусити твого улюбленця рости, коли він їсть!_\n<xml><block type=\"gamelab_checkTouching\">\n      <title name=\"CONDITION\">\"when\"</title>\n      <value name=\"SPRITE1\">\n        <block type=\"gamelab_allSpritesWithAnimation\">\n          <title name=\"ANIMATION\">\"cuteanimals_bunny2_1\"</title>\n        </block>\n      </value>\n      <value name=\"SPRITE2\">\n        <block type=\"gamelab_allSpritesWithAnimation\">\n          <title name=\"ANIMATION\">\"face_carrot_1\"</title>\n        </block>\n      </value>\n    </block></xml>\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/0446ed8942706d06824e9a79c35db5a6-image-1620760396986.2021-05-11 14_28_30.gif>)\n\n</div>\n\n## Виконай наступне:\n\n1.  Перетягни блок подій `коли торкається`. Вибери два спрайти.\n2.  Використовуй блок `змінити розмір` під цією подією, щоб змусити свого улюбленця рости.\n\n**Додаткове завдання:**\n\n-   Відтворюй звук, коли твій улюбленець їсть їжу.",
        "Virtual Pet 6_-2022-2": "_Далі додамо ще один спрайт з поведінкою \"при перетягуванні\", щоб твій улюбленець міг з ним погратися. Це може бути іграшка або навіть друг._\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/32a155295a8c64b4268483cb72f8b317-image-1620760940263.2021-05-11 14_28_58.gif>)\n\n</div>\n\n## Виконай наступне:\n\n1.  Створи ще один новий спрайт.\n2.  Вибери костюм, який зображатиме іграшку або друга твого домашнього улюбленця.\n3.  (За бажанням) Зміни розмір твого нового спрайта.\n4.  Додай новому спрайту модель поведінки \"при перетягуванні\".",
        "Virtual Pet 6_2021": "_Далі додамо ще один спрайт з поведінкою \"при перетягуванні\", щоб твій улюбленець міг з ним погратися. Це може бути іграшка або навіть друг._\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/32a155295a8c64b4268483cb72f8b317-image-1620760940263.2021-05-11 14_28_58.gif>)\n\n</div>\n\n## Виконай наступне:\n\n1.  Створи ще один новий спрайт.\n2.  Вибери костюм, який зображатиме іграшку або друга твого домашнього улюбленця.\n3.  (За бажанням) Зміни розмір твого нового спрайта.\n4.  Додай новому спрайту модель поведінки \"при перетягуванні\".",
        "Virtual Pet 7_2021": "_Тепер покажемо радість твого улюбленця, визначивши йому модель поведінки, коли новий спрайт торкається його._\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/3b258ed1cb7ec3e8df4b1208838bcec9-image-1620761093933.2021-05-11 14_29_41.gif>)\n\n</div>\n\n## Виконай наступне:\n\n1.  Додай ще один блок `коли торкається` до свого коду. Обери свого улюбленця та його іграшку або друга.\n2.  Використовуй блок `спрайт починає`, щоб визначити нову модель поведінки для свого улюбленця, коли новий спрайт доторкається його.\\_\n\n**Додаткове завдання:**\n\n-   Відтвори звук, щоб показати, що твій улюбленець схвильований.",
        "Virtual Pet 8_-2022-2": "_Відмінна робота! Що ще можна додати у твою програму? Спробуй все, що завгодно!_\n\nСпробуй наступне:\n\n-   Додай ще один спрайт, який взаємодіє з твоїм улюбленцем по-іншому.\n-   Використовуй блок \"коли натиснуто\", щоб змусити улюбленця _припинити_ будь-яку модель поведінки.\n-   Експериментуй з різними типами поведінки. Поєднуй моделі поведінки, які змушують спрайт _рухатися_, з моделлю поведінки \"пурхання\", \"тремтіння\" та \"коливання\", щоб зробити речі більш реалістичними.",
        "Virtual Pet 8_2021": "_Відмінна робота! Що ще можна додати у твою програму? Спробуй все, що завгодно!_\n\nСпробуй наступне:\n\n-   Додай ще один спрайт, який взаємодіє з твоїм улюбленцем по-іншому.\n-   Використовуй блок \"коли натиснуто\", щоб змусити улюбленця _припинити_ будь-яку модель поведінки.\n-   Експериментуй з різними типами поведінки. Поєднуй моделі поведінки, які змушують спрайт _рухатися_, з моделлю поведінки \"пурхання\", \"тремтіння\" та \"коливання\", щоб зробити речі більш реалістичними.",
        "Widget: Text Compression": "Шукайте шаблони (повторювані слова чи фрази) у тексті. Запишіть знайдені шаблони у словник праворуч. Коли запис пишеться у словник, символ запису вставляється в текст замість шаблону",
        "course1_artist_loops_challenge2": "Пограймо в гру! Намалюйте стільки X, скільки зможете! Чи вдасться Вам отримати три X в ряд?",
        "course1_artist_loops_challenge3": "**Цвіріньк!**\n\n_\"Можеш допомогти мені збудувати два будинки для пташок?\"_",
        "course1_maze_seq_challenge2": "Ви можете рухатись не більше чотирьох разів у кожному напрямку. Чи можете ви знайти шлях, перш ніж у вас закінчаться блоки?",
        "course1_playlab_events_challenge1": "\\_ \"Де ховаються мої друзі? У цій грі натиснувши на мене побачите мою подругу кішку Оливію!\" \\_\n\nНатискання Оливії призведе до появи Робіна!  Чи можете ви написати код, щоб показати й решту героїв?\n\nУ цьому завданні не забудьте подивитись підказки! Вони допоможуть вам виконати цей проект крок за кроком!\n\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)",
        "course1_playlab_events_challenge2": "_\"Давайте влаштуємо вечірку! Дозвольте моїм друзям щось робити, коли ви клацаєте або натискаєте їх\"._\n\nЩо скажуть тварини? Що ще відбудеться? \n\nУ цьому завданні не забудьте подивитись підказки! Вони дадуть вам цікаві ідеї для перевірки!",
        "course2_artist_prog_challenge1": "Намалюй кімнати для кожної тварини. Є багато різних методів розв'язати задачу, то ж повеселися!",
        "course2_artist_prog_challenge2": "_Допоможи мені намалювати жовті лінії на дорозі!_",
        "course2_collector_loops_challenge2": "\"Позбирай скарби користуючись циклами!\"",
        "course2_maze_programming_challenge1": "Свиня переховується! Можеш допомогти мені знайти обхідний шлях?",
        "course3_artist_functions_challenge1": "Як тільки ви визначили функцію, ви можете викликати її знову і знову - коли завгодно і де завгодно! Спробуйте цей код, щоб побачити, як він працює, а потім змініть його, щоб створити власний вражаючий дизайн!",
        "course3_bee_debugging_challenge1": "Подивіться, як бджола збирає нектар. Чи можете ви використати такий самий візерунок, щоб допомогти бджолі зробити весь мед?",
        "course3_bee_functions_challenge1": "Ви самі по собі в цьому випробуванні. Бути бджолою важжжжче, ніж здається! ",
        "course3_bee_functions_challenge2": "Ти сам по собі в цьому випробуванні!",
        "course3_bee_functions_challenge3": "Створіть нову функцію, щоб збирати весь нектар і мед, поки попереду є шлях. Використовуйте його, щоб завершити головоломку! ",
        "course3_bee_functions_challenge4": "Використовуйте все, чому навчилися, щоб завершити цю головоломку! ",
        "course3_collector_debugging_challenge2": "Ви експерти із вкладених циклів? Використовуйте те, чому ви навчилися, щоб зібрати всі скарби! ",
        "course3_farmer_condLoops_challenge1": "Гарбузами позначають те місце, де слід повернути. _Поверніть праворуч біля гарбуза._ Інакше продовжуйте рухатися вперед, але не забудьте зібрати весь салат або кукурудзу по дорозі. \n\n\\*\\*Кожна прихована рослинка має лише одну кукурудзу або салат. \\*\\*",
        "course3_farmer_condLoops_challenge2": "_\"Це овочевий лабіринт!\"_ \n\nУ гарбуза поверніть праворуч, біля салату поверніть ліворуч. Зберіть все, щоб пройти рівень.",
        "course3_farmer_until_challenge2": "Використовуйте блоки якщо/інакше, щоб йти криволінійним шляхом. У кожному кутку використовуйте команду `видалити 1` у циклі, щоб очистити купи. ",
        "course3_maze_debugging_challenge1": "_\"Я просто ходжу по колу?\"_",
        "course3_maze_debugging_challenge2": "_\"Якщо я обертаюся занадто часто, у мене може запаморочитись голова! Допоможіть мені дістатися до жолудя за допомогою лише чотирьох команд `повернути`._",
        "course3_maze_until_challenge1": "Без підказок, тільки виклики. Допоможіть зомбі дійти до соняшника. ",
        "course3_playLab_challenge1": "_**Білки** нажахані, побачивши, що **динозавр** прийшов до міста! Чи зможе хоробрий **лицар** врятувати їх усіх від паніки?_ \n\nПравила: \n\n1.  _Доторкнувшись до білок, ви отримуєте бали._ \n2.  _Дотик до динозавра забирає багато балів._ \n\nОсь інша гра, яка вже розпочалась! Пограйте, щоб побачити, як це працює. \n\nЩось має статися, коли ви отримаєте достатньо балів або коли вони скінчаться. Додайте деякий код до функцій «виграти гру» та «програти», щоб гра працювала так, як вона має. \nНатисніть на підказки, щоб отримати ідеї!",
        "course4_artist_fwp_challenge1": "Спробуй запустити програму, і внести зміни - подивіться, що трапиться. Можеш здогадатись, що відбувається?  (Або видали код і заміни його на зовсім інший)",
        "courseA_EOC_artist_1": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_artist_12022": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_artist_2": "Настав час для твого фінального проєкту. Ти можеш малювати все, що захочеш!",
        "courseA_EOC_artist_22022": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_artist_3": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_artist_32022": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_playlab_animals": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_playlab_animals2022": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_playlab_fantasy": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_playlab_fantasy2022": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_playlab_people": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_EOC_playlab_people2022": "Настав час для твого фінального проєкту. Ти можеш запрограмувати все, що захочеш!",
        "courseA_artist_loops10_2021": "## Час повертатися на землю. Допоможи мені покласти каміння, щоб я не впав!\n\n![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)",
        "courseA_artist_loops11_2021": "## Допоможи мені побудувати сходинки та будемо спостерігати, як відпливає корабель.\n\n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)",
        "courseA_artist_loops12_2021": "Художник побачив щось кумедне вдалині.  Намалюй те, що, на твою думку, він побачив.\n\n* * *\n\n### Ідеї\n\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)",
        "courseA_artist_loops2_2021": "Допоможи художнику провести лінію двічі.\n\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)",
        "courseA_artist_loops3_2021": "Наш Художник намагається намалювати лінію п'ять разів, але в нього ніяк не виходить. Можеш допомогти?\n\n![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)",
        "courseA_artist_loops4_2021": "Тепер за допомогою циклу <xml><block type=\"controls_repeat_simplified_dropdown\" block-text=\"repeat\"><title name=\"TIMES\" config=\"2-6\">5</title></block></xml> намалюй цю лінію п'ять разів!\n\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)",
        "courseA_artist_loops5_2021": "## Намалюй лінію довжиною в сім кроків. Це буде наш горизонт.\n\n![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)",
        "courseA_artist_loops6_2021": "## Зобразимо гарний пагорб позаду.",
        "courseA_artist_loops7_2021": "Використовуй цикл <xml><block type=\"controls_repeat_simplified_dropdown\" block-text=\"repeat\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>, щоб додати хвилі до води.\n\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)",
        "courseA_artist_loops8_2021": "## Нам потрібна драбина, щоб дістатися до човна.\n\n![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)",
        "courseA_artist_loops9_2021": "## Завдання:\\*\\* Сходи, що ведуть до причалу, зламані.  Допоможи мені полагодити їх.\n\n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)",
        "courseA_artist_loops_challenge1_2021": "За допомогою циклу можна намалювати багато ліній підряд.\n\nЗможеш намалювати будинок? Зроби його таким, як тобі подобається!  Спробуй відшукати закономірності чи шаблони, які повторюються!\n\nОсь кілька ідей:\n\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)",
        "courseA_artist_loops_challenge2a_2021": "_\"Допоможи мені підготувати місце для табору!\"_\n\nВикористовуй блоки в наборі інструментів, щоб намалювати ці три намети.",
        "courseA_collector_loops12_2021": "_\"Нарешті!  Збери якомога більше скарбів!\"_\\\n(Не обов'язково збирати всі скарби).",
        "courseA_collector_loops1_2021": "**Вільна гра:** Це - шукачка пригод Лорел! Переміщай її та збери якомога більше скарбів.\n\nПеретягуй блоки в робочу зону і спробуй з'ясувати, як отримати скарб.  Здобудь хоча б один предмет, щоб пройти цей рівень.",
        "courseA_collector_loops2_2021": "Збери всі три скарби! Переміщуй Лорел до кожної частини скарбу, а потім використовуй блок <xml><block type=\"collector_collect\" block-text=\"get treasure\"/></xml>. ",
        "courseA_collector_loops3_2021": "Як Лорел може отримати усі 5 схованок скарбів, використовуючи лише один блок <xml><block type=\"maze_moveEast\" block-text=\"move east\"/></xml>?",
        "courseA_collector_loops_challenge1_2021": "\\_\"Не допоможеш мені знайти помилки? Я знаю, яким шляхом я хочу пройти, але я не впевнена, скільки кроків зробити\". \\_",
        "courseA_harvester_loops10_2021": "Допоможи Фермерці зібрати всі п'ять качанів кукурудзи!",
        "courseA_harvester_loops11_2021": "Спробуй пройти ще одне завдання самостійно! ",
        "courseA_harvester_loops1_2021": "Допоможи Фермерці зібрати всю кукурудзу!",
        "courseA_harvester_loops2_2021": "Фермерці треба зібрати усю кукурудзу! Бачиш закономірність?",
        "courseA_harvester_loops3_2021": "Спробуй зібрати всю кукурудзу, використовуючи лише **один** блок переміщення.",
        "courseA_harvester_loops4_2021": "_\"Мені потрібна допомога, щоб з'ясувати, що не так!\"_\n\nДопоможи Фермерці з'ясувати, що не так у її коді.",
        "courseA_harvester_loops5_2021": "А тепер спробуй самостійно! Зможеш ще й зібрати кукурудзу в кінці?",
        "courseA_harvester_loops5a_2021": "Поглянь на всю цю кукурудзу! Зможеш зібрати її самостійно?",
        "courseA_harvester_loops5b_2021": "Зможеш змінити свій код так, щоб Фермерка зібрала усю кукурудзу?",
        "courseA_harvester_loops6_2021": "Щоб розв'язати цю задачку, тобі знадобиться **один** блок <xml><block type=\"maze_moveWest\" block-text=\"move west\"></block></xml> і **один** блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"></block></xml>!",
        "courseA_harvester_loops7_2021": "Спробуй пройти завдання самостійно! ",
        "courseA_harvester_loops9_2021": "Зможеш знайти спосіб зібрати _всю_ цю кукурудзу?",
        "courseA_harvester_seq10_2021": "Фермерка має зібрати усю кукурудзу! Бачиш малюнок?",
        "courseA_harvester_seq11_2021": "Спробуй сам! Збери усю кукурудзу.",
        "courseA_harvester_seq12_2021": "_Дякую за допомогу!_\n\nЗбери усю кукурудзу.",
        "courseA_harvester_seq13_2021": "Допоможи Фермерці зібрати кукурудзу!",
        "courseA_harvester_seq1_2021": "Допоможи Фермерці зібрати кукурудзу!",
        "courseA_harvester_seq2_2021": "Використовуй **три** блоки <xml><block type=\"maze_moveWest\" block-text=\"move west\"/></xml> і Фермерка дійде до кукурудзи!",
        "courseA_harvester_seq3_2021": "Використовуй **три** блоки <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> та приведи Фермерку до кукурудзи! Не забудь зібрати кукурудзу в кінці.",
        "courseA_harvester_seq4_2021": "Додай _один_ блок та допоможи Фермерці зібрати кукурудзу.",
        "courseA_harvester_seq5_2021": "З'ясуй, що не так з цим кодом? Допоможи Фермерці зібрати кукурудзу!",
        "courseA_harvester_seq6_2021": "Спробуй сам!",
        "courseA_harvester_seq7_2021": "Рухайся у двох напрямках, щоб дістатися до кукурудзи! Допоможи Фермерці вибрати правильний напрямок.",
        "courseA_harvester_seq8_2021": "Тепер Фермерка має зібрати кукурудзу двічі!",
        "courseA_harvester_seq9_2021": "Додай два блоки та заверши цю задачу!",
        "courseA_maze_ramp2_2021": "Приєднай обидва блоки <xml><block type=\"maze_moveEast\" block-text=\"move east\"/></xml> до нижньої частини блоку <xml><block type=\"when_run\" block-text=\"when run\"/></xml> для завершення коду, після цього натисни \"▶ Запустити\".",
        "courseA_maze_ramp3a2022": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseA_maze_ramp3a_2019": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseA_maze_ramp3a_2020": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseA_maze_ramp3a_2021": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseA_maze_ramp3b_2021": "В кінці цього коду є зайвий блок <xml><block type=\"maze_moveSouth\" block-text=\"move south\"/></xml>!\n\nПеретягни його назад на панель інструментів і залиш там.",
        "courseA_maze_ramp4a_2021": "Поміркуй, який блок потрібно додати під усіма блоками для завершення цього коду?",
        "courseA_maze_ramp5a_2021": "Спробуй розв'язати це завдання самостійно!",
        "courseA_maze_seq10_2021": "**Завдання:** уникай вибухівки, щоб провести пташку до свинки!",
        "courseA_maze_seq11_2021": "А зараз виконай коротке завдання!  Рухайся спочатку в один бік, потім в інший, і пташка потрапить до свинки.",
        "courseA_maze_seq12_2021": "Лови свинку!",
        "courseA_maze_seq13_2021": "Дістань свинку будь-яким способом!",
        "courseA_maze_seq1_2021": "\"Пограйся з цими блоками та спробуй відвести мене до поганої свинки!\"\\_.",
        "courseA_maze_seq5_2021": "Спробуй ось це.",
        "courseA_maze_seq5a_2021": "\"Сюди, свинко!\"\\_.\n\nЩо ти можеш додати в кінець цього коду, щоб привести пташку до свинки?",
        "courseA_maze_seq6_2021": "Рухайся спочатку в один бік, потім в інший, і пташка потрапить до свинки!",
        "courseA_maze_seq8_2021": "Пройди цей рівень та приведи пташку до свинки!",
        "courseA_maze_seq_challenge1_2021": "Виправ цей рівень. Прибери зайві блоки та додай відсутні. Відведи пташку до свинки!",
        "courseA_maze_seq_challenge2_2021": "Проклади шлях та проведи пташку до свинки. Уникай вибухівки, або полетить пір'я!",
        "courseA_playLab_events1_2021": "Це рівень Ігрової Студії. Перемісти блоки на поле та подивись що з цього вийде!",
        "courseA_playLab_events2_2021": "Песик Хорхе хоче привітатися. Зможеш йому допомогти?",
        "courseA_playLab_events3_2021": "Допоможи Хорхе рухатися, з'єднавши блок <xml><block type=\"studio_move\" block-text=\"move dog west\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block></xml> з блоком подій <xml><block type=\"studio_whenArrow\" block-text=\"when left arrow\">\n    <title name=\"VALUE\">left</title>\n  </block></xml>, який вже знаходиться на полі.\n\nВикористовуй клавіші зі стрілками або натискай на кнопки зі стрілками, щоб перемістити Хорхе до прапорця та завершити рівень!",
        "courseA_playLab_events4_2021": "Тепер додай ще один блок подій, щоб Хорхе почав рухатися праворуч при натиненні кнопки зі стрілкою вправо. Використовуй клавіші зі стрілками або натискай кнопки зі стрілками, щоб перемістити Хорхе до обох прапорців та завершити рівень!",
        "courseA_playLab_events5_2021": "Додай події, щоб Хорхе почав рухатися вгору і вниз при натисненні кнопок \\`вгору\\` та \\`вниз\\`. Допоможи Хорхе дістатись прапорців, щоб закінчити рівень!",
        "courseA_playLab_events6_2021": "Додай цікавості, змінивши фон та увімкнувши випадковий звук при клацанні по Хорхе. Коли код буде готовий, натисни на Хорхе та випробуй його!",
        "courseA_playLab_events7_2021": "_Самостійна гра:_ Додай в цю гру все, що захочеш. Чи можеш ти зробити так, щоб динозавр зник, коли Хорхе зустрінеться з ним?",
        "courseA_playlab_events_challenge1_2021": "Якщо натиснути на Оливку, з'явиться Робін! Зможеш написати код, щоб також показати інших персонажів?\n\nУ цьому завданні не забувай натискати на підказки! Підказки допоможуть тобі покроково виконати цей проєкт!\n\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)",
        "courseA_playlab_events_challenge2_2021": "Коли ти клацаєш по персонажах, нехай кожен з них щось робить. Що говоритимуть тварини? Що буде відбуватися далі?\n\nУ цьому завданні обов'язково натискай на підказки. Підказки допоможуть тобі спробувати щось цікаве!\n\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)",
        "courseB_Scrat_ramp1_2021": "Підведи Скрета до жолудя, прив'яжи блок <xml><block type=\"maze_moveEast\" block-text=\"move East\"/></xml> до нижньої частини блоку <xml><block type=\"when_run\" block-text=\"when run\"/></xml>, а потім натисни \"▶ Запустити\"!",
        "courseB_Scrat_ramp2_2021": "Закріпи обидва блоки <xml><block type=\"maze_moveEast\" block-text=\"move east\"/></xml> внизу блоку <xml><block type=\"when_run\" block-text=\"when run\"/></xml> та заверши створення коду, натиснувши \"▶ Запустити\".",
        "courseB_Scrat_ramp3a2022": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseB_Scrat_ramp3a_2019": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseB_Scrat_ramp3a_2020": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseB_Scrat_ramp3a_2021": "Візьми блок <xml><block type=\"maze_moveNorth\" block-text=\"move north\"/></xml> на панелі інструментів та додай його внизу інших блоків для завершення цього коду, а потім натисни \"▶ Запустити\".",
        "courseB_Scrat_ramp3b_2021": "В кінці цього коду є додатковий блок!\n\nПеретягни його назад до скриньки з інструментами та викинь.",
        "courseB_Scrat_ramp4a_2021": "Поміркуй, який блок потрібно додати внизу інших блоків для завершення цього коду?",
        "courseB_Scrat_ramp5a_2021": "Спробуй сам!",
        "courseB_artist_loops10_2021": "Використовуючи вивчене, намалюй картинку того, що, на твою думку, побачив Художник, коли повернувся додому.\n\n* * *\n\n### Ідеї\n\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)",
        "courseB_artist_loops1_2021": "Це новий тип завдання під назвою \"Художник\". Пограй на цьому рівні та намалюй щось цікаве.",
        "courseB_artist_loops2_2021": "Художник намагається намалювати лінію **6** разів, але йому це не вдається.  Зможеш допомогти?",
        "courseB_artist_loops3_2021": "Допоможи Художнику провести лінію 7 разів, щоб намалювати садову стіну.",
        "courseB_artist_loops4_2021": "Тепер нам потрібно підготувати ґрунт до посадки. Знайди помилки в коді та допоможи Художнику підготувати ґрунт.",
        "courseB_artist_loops5_2021": "Час полагодити сходи!  Повтори цю схему **5** разів, щоб Художник зміг дістатися до верхівки кущів.",
        "courseB_artist_loops6_2021": "За кущами росте красива виноградна лоза повна квітів.  Чи зможеш ти залізти на лозу та подивитися куди вона прямує?",
        "courseB_artist_loops7_2021": "**Завдання:** Це прихований сад! Давай прогуляємося.",
        "courseB_artist_loops82022": "Час повертатися додому. Зможеш полагодити цю драбину, використовуючи лише один блок, та допомогти Художнику спуститися?",
        "courseB_artist_loops8_2019": "Час повертатися додому. Зможеш полагодити цю драбину, використовуючи лише один блок, та допомогти Художнику спуститися?",
        "courseB_artist_loops8_2020": "Час повертатися додому. Зможеш полагодити цю драбину, використовуючи лише один блок, та допомогти Художнику спуститися?",
        "courseB_artist_loops8_2021": "Час повертатися додому. Зможеш полагодити цю драбину, використовуючи лише один блок, та допомогти Художнику спуститися?",
        "courseB_artist_loops9_2021": "Ходімо короткою дорогою додому, через ставок. Зможеш допомогти художнику втриматися на камінні?",
        "courseB_artist_loops_challenge1_2021": "_\"Час кидати кубики! Допоможеш мені їх намалювати?\"_",
        "courseB_artist_loops_challenge2_2021": "Намалюй якомога більше хрестиків. Зможеш поставити 3 в ряд?",
        "courseB_collector_loops10_2021": "Допоможи Лорел дістати усі скарби з цієї печери.",
        "courseB_collector_loops11_2021": "Нарешті!  Збери якомога більше скарбів!",
        "courseB_collector_loops1_2021": "**Вільна гра:** Рухай Лорел та збери якомога більше скарбів. Дістанься хоча б одого предмету без помилок, щоб пройти цей рівень.\n\n* * *\n\nПеретягуй блоки на поле та спробуй отримати скарб.",
        "courseB_collector_loops2_2021": "Перемісти Лорел до скарбу, а потім використай блок <xml><block type=\"collector_collect\" block-text=\"get treasure\"/></xml>, щоб забрати його.\n\nЗбери усі чотири схованки скарбів та пройди цей рівень.",
        "courseB_collector_loops3_2021": "Як Лорел може отримати усі 5 схованок скарбів, використовуючи лише один блок <xml><block type=\"maze_moveEast\" block-text=\"move east\"/></xml>?",
        "courseB_collector_loops4_2021": "Виправ шлях Лорел та отримай усі ці скарби!",
        "courseB_collector_loops5_2021": "Додай код з останнього завдання і збери усі скарби.",
        "courseB_collector_loops6_2021": "Розгадай код, щоб допомогти Лорел отримати усі скарби!",
        "courseB_collector_loops7_2021": "Запиши код та отримай усі ці скарби.",
        "courseB_collector_loops8_2021": "**Завдання:** Скарб розташовано цими сходинками!  Напиши код, який допоможе Лорел зібрати його.",
        "courseB_collector_loops9_2021": "_\"Допоможи мені дістати скарб з цієї глибокої долини\"._",
        "courseB_collector_loops_challenge1_2021": "Цього разу в тебе обмежена кількість блоків. Збери усі скарби!",
        "courseB_collector_loops_challenge2a_2021": "_\"Ходімо знайдемо скарб!\"_\n\nДопоможи Лорел отримати принаймні **5** частин скарбу для завершення цього завдання.",
        "courseB_iceage_loops10_2021": "Допоможи Скрету дістатися до жолудя!",
        "courseB_iceage_loops11_2021": "Допоможи Скрету дістатися до жолудя!",
        "courseB_iceage_loops12_2021": "Дістанься до жолудя будь-яким способом!",
        "courseB_iceage_loops1_2021": "Допоможи Скрету дістатись до жолудя слизькою кригою!",
        "courseB_iceage_loops2_2021": "Використовуй обидва блоки <xml><block type=\"maze_moveWest\" block_text=\"move west\"/></xml> та <xml><block type=\"maze_moveSouth\" block_text=\"move south\"/></xml>, щоб дістатися до жолудя!",
        "courseB_iceage_loops3_2021": "Чи можеш ти дістатися до жолудя з лише одним блоком <xml><block type=\"maze_moveWest\" block-text=\"move west\"/></xml>? Спробуй застосувати цикл!",
        "courseB_iceage_loops4_2021": "Додай ще один блок і Скрет дістанеться до жолудя!",
        "courseB_iceage_loops6_2021": "Чи можеш ти додати цикл, щоб дістатися до жолудя?",
        "courseB_iceage_loops7_2021": "Скрет дуже хоче цей жолудь!",
        "courseB_iceage_loops8_2021": "Можеш виправити цей код?",
        "courseB_iceage_loops9_2021": "Жолудь дуже далеко! Чи можеш ти використати цикли, щоб допомогти Скрету дістатися до нього?",
        "courseB_maze_seq10_2021": "Виправ помилки, щоб привести Скрета до жолудя.",
        "courseB_maze_seq11_2021": "Все залежить від тебе!  Доведи Скрета до жолудя.",
        "courseB_maze_seq12_2021": "А тепер дістанься до жолудя будь-яким шляхом!",
        "courseB_maze_seq1_2021": "Експериментуй з цими блоками, щоб побачити, що вони змушують Скрета робити! \n\nДоведи Скрета до жолудя, щоб завершити рівень.",
        "courseB_maze_seq4_2021": "Використай **2** блоки руху, щоб довести Скрета до жолудя.",
        "courseB_maze_seq5_2021": "Це завдання трохи ускладнене!",
        "courseB_maze_seq6_2021": "Рухайся в один бік, потім в інший, щоб привести Скрета до жолудя!",
        "courseB_maze_seq7_2021": "З'ясуй, чого не вистачає, а потім додай блоки, щоб Скрет дістався до жолудя!",
        "courseB_maze_seq8_2021": "Твоя черга!  Що потрібно зробити, щоб привести Скрета до жолудя?",
        "courseB_maze_seq9_2021": "**Завдання**: оминай поламану кригу і доведи Скрета до жолудя.",
        "courseB_maze_seq_challenge1_2021": "У тебе є лише чотири блоки кожного типу. Спробуй знайти шлях до того, як блоки закінчаться.",
        "courseB_maze_seq_challenge2_2021": "Виконай налагодження цього рівня. Це правильні блоки, але вони розташовані в неправильному порядку!",
        "courseB_playLab_events1_2021": "Ця гра називається \"Ігрова студія\".  \n\nСпробуй зрозуміти, що робить кожен блок.",
        "courseB_playlab_events2_2021": "Нехай дракончик Дейзі скаже щось, коли ти натиснеш на кнопку \"Пуск\".",
        "courseB_playlab_events3_2021": "Використовуй подію, щоб дракончик Дейзі змінювала настрій на випадковий ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png) \n, коли ти натискаєш на неї.",
        "courseB_playlab_events4_2021": "Час лицаря!  Нехай дракон пройде цей рівень!\n\nДодай подію, щоб лицар наблизився до дракона при натисканні стрілки вліво.",
        "courseB_playlab_events5_2021": "Тепер додай подію, щоб лицар почав тікати від дракона при натисканні стрілки вправо.\n\nРухай лицаря праворуч, щоб пройти цей рівень.",
        "courseB_playlab_events6_2021": "Допоможи лицарю зібрати усі прапорці!\n\nДля цього додай події, які допоможуть лицарю рухатися вгору, вниз, вліво та вправо.",
        "courseB_playlab_events7_2021": "Зроби гру цікавішою, додавши ще більше елементів!\n\n1.  Налаштуй лицаря так, щоб він зникав при зіткненні із драконом.    \n2.  Увімкни звук, коли вони стикаються, щоб зробити зіткнення більш реалістичним.\n\n* * *\n\nВідвідай усі цілі, а потім зіткнись із драконом для проходження рівня.",
        "courseB_playlab_eventsFP_2021": "**Самостійна гра:** Увімкни фантазію та подумай, як зробити гру цікавішою?",
        "courseB_playlab_events_challenge1_2021": "Настав час великих перегонів тварин! Зроби так, щоб тварини рухалися вниз при натисканні стрілки `▼`.\n\nХто з них найшвидший?",
        "courseB_playlab_events_challenge2_2021": "Зроби так, щоб тварини зникали при натисканні на них.\nСпробуй пограти з собакою, а потім допоможи іншим тваринам приєднатися до гри. Також ти можеш додавати звуки та заробляти бали для створення власної гри Ловець тварин!\n\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)",
        "courseB_starWars_prog10_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Можеш зібрати увесь?\"_",
        "courseB_starWars_prog11_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) \\_\"Не зупиняйся!\"",
        "courseB_starWars_prog1_2021": "![Рей](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Принеси металобрухт, BB-8!\"_.\n\nСлідкуй за стінами та скриньками. Металобрухт виглядає ось так: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)",
        "courseB_starWars_prog2_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Збери весь метал.\"_",
        "courseB_starWars_prog3_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) \\_\"ВВ-8, не зупиняйся!\"",
        "courseB_starWars_prog4_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"ВВ-8, не зупиняйся!\"_",
        "courseB_starWars_prog5_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Можеш зібрати увесь?\"_",
        "courseB_starWars_prog6_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Ти це зможеш!\"_",
        "courseB_starWars_prog7_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Давай, дістань його!\"_",
        "courseB_starWars_prog8_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Так тримати, ВВ-8.\"_\n\n\\*\\*Завдання: Збери увесь металобрухт.",
        "courseB_starWars_prog9_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Ти це зможеш!\"_",
        "courseC19_playLab_EOC1_2021": "Дивовижно, як багато ми дізнались! Почнімо створювати гру крок за кроком.\n\nЗа допомогою нових блоків на панелі інструментів обери новий фон, а потім обери персонажа для своєї гри.",
        "courseC19_playLab_EOC22022": "Використовуй події та дії, щоб змусити персонажа рухатися, коли ти натискаєш на клавіші зі стрілками.\n\nПеремісти персонажа в усіх 4 напрямках за 3 секунди, щоб завершити рівень.",
        "courseC19_playLab_EOC2_2021": "Використовуй події та дії, щоб змусити персонажа рухатися, коли ти натискаєш на клавіші зі стрілками.\n\nПеремісти персонажа в усіх 4 напрямках за 3 секунди, щоб завершити рівень.",
        "courseC19_playLab_EOC3_2021": "Додаймо більше персонажів у твою гру!\n\nВикористовуй блок `встановити виконавця`, щоб додати більше персонажів, а потім рухайся до цілі, щоб розв'язати цю задачку.",
        "courseC19_playLab_EOC4_2021": "Кілька персонажів і те, що вони рухаються - це чудовий початок гри, але нам потрібно зробити більше, щоб відчути, що це справжня гра. Треба додати рахунок!\n\nВикористовуй блоки подій, як-от 'коли персонаж торкається', щоб змінити рахунок або виграти гру. Набери 5 балів або виграй гру, щоб завершити це завдання.",
        "courseC19_playLab_EOC5_2021": "Чудова робота! У тебе є всі основні компоненти робочої гри. Тепер приділи трохи часу перевірці, щоб упевнитися, що гра працює так, як ти хочеш. Коли перевірка буде завершена, натисни \"Кінець\"",
        "courseC19_playLab_EOC6_2021": "Все готово! Тепер ти можеш грати у свою гру або поділитися нею з друзями та однокласниками!",
        "courseC19_playLab_sample12022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "courseC19_playLab_sample1_2021": "Ми розпочинаємо фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "courseC19_playLab_sample22022": "Ми готові розпочати фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "courseC19_playLab_sample2_2021": "Ми розпочинаємо фінальний проєкт. Перш ніж почати, приділи трохи часу перегляду прикладів проєктів.",
        "courseC_PlayLab_events6_2021": "Тепер напиши програму, яка змусить пінгвіна Веддла рухатись, використовуючи клавіші вгору/вниз/вліво/вправо, щоб дійти до всіх цілей!",
        "courseC_PlayLab_events7_2021": "Блок `повторювати завжди` дозволяє запускати код знову і знову до нескінченності.  Використовуй цей блок, щоб безперервно переміщати динозаврика Чомпа (виконавець 2) вгору і вниз на 400 пікселів.\n\n![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)",
        "courseC_PlayLab_events8_2021": "Чи може Веллдз (виконавець 1) сказати \"Ой!\" і відтворити звук \"влучання\", якщо він зіткнеться з Чомпом? \n\nКоли код буде готовий, зіграй у гру, щоб це сталося.\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)",
        "courseC_PlayLab_eventsA_embed_2021": "Зіграймо у гру. Перемісти пінгвіна до восьминога, щоб заробити один бал. Набери 5 балів, щоб виграти.",
        "courseC_PlayLab_events_challenge1_2021": "Використовуй новий блок, щоб змусити Ведла автоматично повертатися на старт, коли він стикається з динозавром і коли він заробляє бал. Це зробить твою гру цікавішою та більш захопливою!\n\nГрай в гру і переміщуй Ведла стрілками, доки не набереш 5 або більше балів. Щоб виконати це завдання, потрібно перемістити Ведла у позицію 'посередині ліворуч'.",
        "courseC_artist_loops1a_2021": "**Вільна гра:** Давай крок за кроком створимо щось більше!\n\nПостав художника в центр ігрового поля за допомогою блоку <xml> <block type=\"jump_to\" block-text=\"jump to the middle center position\"><title name=\"VALUE\">13</title></block></xml>, а потім використовуй блок <xml><block type=\"sticker\" block-text=\"draw sticker\"><title name=\"VALUE\">Beaver</title></block></xml>, щоб створити щось на ньому.\n\n* * *\n\nНатисни \"Готово\", коли отримаєш бажаний результат.\n\n![expandable](https://images.code.org/1435d3650553df44eba973572d409a50-image-1553096405891.png)\n![expandable](https://images.code.org/6912d2144b90aa7087fe854742d1e8b9-image-1553096425394.png)\n![expandable](https://images.code.org/8de9e1aa15fdfe30ffed763e0e1d6e04-image-1553096428531.png)",
        "courseC_artist_loops1b_2021": "Зміни напрямок наліпки, додавши до коду команду `повернути`. \n\n* * *\n\nНатисни \"Готово\", коли отримаєш бажаний результатом.\n\n![expandable](https://images.code.org/30fe9d37758abd27055d9a6e5a890680-image-1553097358155.png)\n![expandable](https://images.code.org/61feed00662019b99ac774322231f084-image-1553097362176.png)\n![expandable](https://images.code.org/fd123bb703ea4c630218a12eb5994053-image-1553097354066.png)",
        "courseC_artist_loops2a_2021": "Тепер за допомогою циклу створи більше копій наліпки. Спробуй змінювати цифри під час `повороту` та  блоки `повторити`, щоб створити різні шаблони.\n\n* * *\n\nНатисни \"Готово\", коли отримаєш бажаний результат.\n\n![expandable](https://images.code.org/8b4352a1abe72419043d278752261b57-image-1553097917337.png)\n![expandable](https://images.code.org/5211e2fe2852e25a884a790155ba47d5-image-1553097923167.png)\n![expandable](https://images.code.org/0e3fbe8bbd20526cc735dfd26d2473ee-image-1553097925789.png)",
        "courseC_artist_loops3a_2021": "Так весело!  \n\nТепер додай другу наліпку прямо на першу, щоб вийшло зображення, як на малюнку нижче.\n\n* * *\n\nНатисни \"Готово\", коли отримаєш бажаний результат.\n\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)\n![expandable](https://images.code.org/dd0e0eee69d37493c5ba584164316a9f-image-1553098351969.png)\n![expandable](https://images.code.org/880908899d8e6ceac8a8ce1bd0bf47eb-image-1553098355311.png)",
        "courseC_artist_loops4a_2021": "Відредагуй свій код таким чином, щоб він перескакував вперед між малюнками двох наклейок. У цьому завданні переконайся, що у твоєму циклі є \"стрибнути у середнє центральне положення\", щоб залишитися у центрі!\n\n* * *\n\nНатисни \"Завершити\", коли будеш задоволений результатом.\n\n![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)\n![expandable](https://images.code.org/5774170704916cfddcf2e98c2c01d718-image-1553099207939.png)\n![expandable](https://images.code.org/9b016314df4aed5165c76282bab0cea1-image-1553099212229.png)\n![expandable](https://images.code.org/2cf50b8e9ae75803f15908304c22a10b-image-1553099215987.png)",
        "courseC_artist_loops5b_2021": "Що станеться, якщо ти будеш `рухатися вперед`, а потім `рухатися назад` на 100, 200 або 400 пікселів десь усередині циклу?  \n\n-   Спробуй використати блок `встановити шаблон` перед тим, як запускати цикл, ти отримаєш справжній шедевр!\n\n* * *\n\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)\n![expandable](https://images.code.org/55285e9e5c5ae1cf1c895cc0bf92824d-image-1553100970790.png)\n![expandable](https://images.code.org/6b8e67db2a3b341bc56fa53f67c284c2-image-1553100974645.png)",
        "courseC_artist_loops6a_2021": "Додай третю наліпку в будь-якому місці циклу за бажанням! Як це виглядає зараз?\n\n-   Зміни шаблон пензлика для більшої різноманітності!\n\n* * *\n\n![expandable](https://images.code.org/edc53f27379e018e61a6ab9dcc2717ea-image-1560984648573.png)\n![expandable](https://images.code.org/c41b00a743f245f98d2cfb66cb18e771-image-1560984690182.png)\n![expandable](https://images.code.org/4c8910f72a7f0cd81713ded7b866a883-image-1560984706203.png)",
        "courseC_artist_loops7a_2021": "Спробуй змінити цикл `повторити`, щоб він запускався іншу кількість разів.  Як далеко тобі потрібно повернутися, щоб пройти повне коло?\n\n-   Спробуй змінити кількість обертів\n    -   Спробуй повернутися на 60 градусів 6 разів\n    -   Спробуй повернутися на 20 градусів 18 разів      \n\n* * *\n\nНа першому зображенні - пірат, ніндзя та жираф. Вони обертаються 18 разів з поворотом на 20 градусів.\n\n![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)\n![expandable](https://images.code.org/9f28cb9b434b914846c3846bc6652f66-image-1560982666379.png)\n![expandable](https://images.code.org/e9128684956504b0172708d63b65f93a-image-1560982686482.png)\n![expandable](https://images.code.org/8e9cf52ecaf72678c65558f18f3e0d3e-image-1560982695632.png)",
        "courseC_artist_loops8a_2021": "А тепер намалюй щось самостійно.  Що станеться, якщо зробити два окремих кола з різних наліпок?\n\n* * *\n\nПотрібна ідея? Спробуй зробити ось такий малюнок.\n\n![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)",
        "courseC_artist_loopsPrePre1a_2019": "Використовуйте блок <xml><block type=\"jump_to_xy\" id=\"callMe\" block-text=\"jump to 200 over 200 down\"><title name=\"XPOS\">200</title><title name=\"YPOS\">200</title></block></xml>, щоб перемістити виконавця в центр ігрової зони.\\\nПотім проведіть лінію довжиною 50 пікселів блоком <xml><block type=\"draw_move_by_constant\" block-text=\"move forward\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">50</title></block></xml>.",
        "courseC_artist_loopsPrePre1a_2020": "Використовуйте блок <xml><block type=\"jump_to_xy\" id=\"callMe\" block-text=\"jump to 200 over 200 down\"><title name=\"XPOS\">200</title><title name=\"YPOS\">200</title></block></xml>, щоб перемістити виконавця в центр ігрової зони.\\\nПотім проведіть лінію довжиною 50 пікселів блоком <xml><block type=\"draw_move_by_constant\" block-text=\"move forward\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">50</title></block></xml>.",
        "courseC_artist_prog1_2021": "_\"Привіт, я Художник. Ти можеш написати код, щоб я намалював практично все, що захочу\"._\n\nПограйся з блоками у скриньці інструментів, щоб побачити, для чого вони потрібні!",
        "courseC_artist_prog2_2021": "_\"Давай зробимо клітку для мого домашнього монстра!\"_\n\nПеретягуй блоки на екран, щоб художник намалював сірі лінії на малюнку.\\\\ (Кожна лінія має довжину 100 пікселів)",
        "courseC_artist_prog3_2021": "_\"Цьому космічному кораблю потрібен ілюмінатор!\"_\n\nКожна сторона внутрішнього квадрата - 100 пікселів, а усі кути - 90 градусів.",
        "courseC_artist_prog4": "_\"О ні! Улюбленець Старли щойно полетів! Допоможемо космонавтці!\"_\n\nДомалюй ракету Старли, щоб вона могла наздогнати свого домашнього улюбленця.\\\n(Кожна сторона трикутника має довжину 100 пікселів і зовнішні кути 120 градусів).",
        "courseC_artist_prog42022": "_\"О ні! Улюбленець Старли щойно полетів! Допоможемо космонавтці!\"_\n\nДомалюй ракету Старли, щоб вона могла наздогнати свого домашнього улюбленця.\\\n(Кожна сторона трикутника має довжину 100 пікселів і зовнішні кути 120 градусів).",
        "courseC_artist_prog4_2018": "_\"О ні! Улюбленець Старли щойно полетів! Допоможемо космонавтці!\"_\n\nДомалюй ракету Старли, щоб вона могла наздогнати свого домашнього улюбленця.\\\n(Кожна сторона трикутника має довжину 100 пікселів і зовнішні кути 120 градусів).",
        "courseC_artist_prog4_2019": "_\"О ні! Улюбленець Старли щойно полетів! Допоможемо космонавтці!\"_\n\nДомалюй ракету Старли, щоб вона могла наздогнати свого домашнього улюбленця.\\\n(Кожна сторона трикутника має довжину 100 пікселів і зовнішні кути 120 градусів).",
        "courseC_artist_prog4_2020": "_\"О ні! Улюбленець Старли щойно полетів! Допоможемо космонавтці!\"_\n\nДомалюй ракету Старли, щоб вона могла наздогнати свого домашнього улюбленця.\\\n(Кожна сторона трикутника має довжину 100 пікселів і зовнішні кути 120 градусів).",
        "courseC_artist_prog4_2021": "_\"О ні! Улюбленець Старли тільки що полетів! Допоможемо космонавтці!\"_\n\nДороби ракету Старли, щоб вона могла наздогнати свого домашнього улюбленця.\\\n(Кожна сторона трикутника має довжину 100 пікселів і зовнішні кути 120 градусів).",
        "courseC_artist_prog5_2021": "_\"Можливо, нам варто зробити медальйон для кожного з наших домашніх улюбленців на випадок, якщо вони загубляться!\"_\n\nНамалюй медальйон у вигляді прямокутника по периметру.\n(Довгі сторони по 200 пікселів, а короткі - по 100 пікселів)",
        "courseC_artist_prog6_2021": "\"А тепер медальйон для Белль!\"\n\nНамалюй квадрат зі стороною 200 пікселів.",
        "courseC_artist_prog72022": "**Завдання:** Цей медальйон домашнього улюбленця має особливу форму!  \n\nЗможеш знайти спосіб намалювати його контур?\n(Довга сторона 150 пікселів, а кожна з коротких сторін по 75 пікселів).",
        "courseC_artist_prog7_2021": "**Завдання:** У цього медальйона домашнього улюбленця особлива форма!  \n\nЗможеш з'ясувати, як намалювати його контур?\n(Довга сторона 150 пікселів, а кожна з коротких сторін по 75 пікселів).",
        "courseC_artist_prog8_2021": "Ще один медальйон.  Це трикутник для Пі. \\\n(Кожна сторона 150 пікселів)",
        "courseC_artist_prog_challenge1_2021": "Намалюй кімнати для кожної тварини. Є багато різних способів розв'язати задачу, то ж розважайся! Кожен квадрат має довжину сторони 100 пікселів.",
        "courseC_artist_prog_challenge2a_2021": "\\_\"Допоможи мені намалювати жовті лінії на цій дорозі!\" \\_\n\nТри відрізки лінії мають довжину 150, 100 та 200 пікселів!",
        "courseC_collector_loops_challenge2_2021": "_\"Вирушаймо за скарбами!\"_\n\nДопоможи шукачці здобути щонайменше **5** скарбів.",
        "courseC_collector_prog1_2021": "**Вільна гра:** Це Лорел - шукачка пригод! Переміщай її навколо та отримай якомога більше скарбів. Використовуй блок `збирати`, щоб забрати скарб!\n\nПеретягуй блоки в робочу зону та спробуй з'ясувати, як отримати скарб.  Здобудь хоча б один предмет, щоб пройти цей рівень.",
        "courseC_collector_prog2_2021": "Перемісти Лорел до скарбу, а потім використовуй блок  <xml><block type=\"collector_collect\" block-text=\"collect\"/></xml>, щоб забрати його.",
        "courseC_collector_prog3_2021": "_\"Послідовність має значення!\"_\n\nБлоки, які тобі потрібні, вже знаходяться у робочій зоні, але не пов'язані між собою.\\\nВпорядкуй ці блоки, щоб забрати скарб та розв'язати завдання.",
        "courseC_collector_prog4_2021": "_\"Послідовність має значення!\"_\n\nБлоки, які тобі потрібні, вже знаходяться у робочій зоні, але не пов'язані між собою.\n\nРозміщуй ці блоки, щоб забрати усі скарби та розв'язати завдання.",
        "courseC_collector_prog5_2021": "_\"Допоможи мені зібрати кожен шматочок скарбу!\"_\n\nЦі блоки розташовані в неправильному порядку. Можеш це виправити?",
        "courseC_collector_prog6_2021": "_\"Допоможи мені зібрати усі скарби!\"_\n\nЦі блоки стоять у неправильному порядку. Перестав їх, щоб зібрати усі скарби.",
        "courseC_collector_prog7_2021": "**Завдання:** _\"Що тут відбувається?\"_\n\nНавіть якщо ми розмістимо їх у правильному порядку, все одно чогось не вистачатиме.\\\nВикористовуй блоки з панелі інструментів, щоб зібрати усі скарби.",
        "courseC_collector_prog8_2021": "_\"Продовжуй та не зупиняйся! Допоможи мені зібрати усі скарби.\"_",
        "courseC_collector_prog9_2021": "_\"Давай зберемо усі скарби!\"_",
        "courseC_collector_prog_challenge2_2021": "У цій печері є 20 скарбів. Збери щонайменше **10**, щоб завершити завдання!",
        "courseC_data wizard_2021": "Натисни Запустити. Чарівник зробить так, що з'являтимуться тварини. Порахуй їх. Що ти помітив?",
        "courseC_flappy_events10_2021": "Створи власну гру із Пурхом! \n\nТи можеш змінювати візуальні ефекти та правила... навіть силу тяжіння! \nКоли гра буде готова, натисни \"Кінець\", щоб поділитися з друзями на їхніх телефонах.",
        "courseC_flappy_events1_2021": "Прикріпи блок `махати нормально` до події `коли клацнули`, а потім натисни \"Запустити\".\n\n* * *\n\nКлацни або торкнися ігрової зони, щоб перемістити Пурха до цілі.",
        "courseC_flappy_events2_2021": "Подія `коли гра починається` дозволяє запускати код одразу після запуску гри.  \n\nСпробуй додати блок, який задає швидкість рівня після натискання кнопки \"Запустити\".\n\n* * *\n\nЗапусти гру і доведи Пурха до цілі, щоб продовжити.",
        "courseC_flappy_events3_2021": "Тут ми додали землю.\n\nПриєднай блок 'завершити гру' до події 'коли впав на землю'.\n\n* * *\n\nЗапусти гру і дай пташці впасти на землю, щоб продовжити.",
        "courseC_flappy_events4_2021": "Пурх летітиме крізь перешкоди, якщо ти не напишеш код, що змусить його врізатись у них.\n\nДодай блоки до блоку 'коли влучив у перешкоду'. Твій код має завершувати гру, коли Пурх вріжеться у перший набір труб.",
        "courseC_flappy_events5_2021": "Ми додали табло підрахунку балів коли Пурх пролітає перешкоди.\n\nДодай блок, що зараховує бал, до події \"коли минув перешкоду\", натисни \"Запустити\", щоб пролетіти крізь перший набір труб разом із Пурхом.",
        "courseC_flappy_events6_2021": "Клацай стрілку вниз всередині блоку \"махати нормально\", щоб вибрати іншу потужність помахів.  \n\nПодивись, чи все ще можна заробити бал, змушуючи Пурха махати крилами більше або менше клацанням миші.",
        "courseC_flappy_events7_2021": "Далі спробуй змінити сцену, додавши блок до події `коли гра починається`.",
        "courseC_flappy_events8_2021": "Тло можна встановлювати для будь-яких подій, не лише для початку гри.\n\nСпробуй встановити **випадкову** сцену для інших подій... наприклад, для оминання перешкоди.",
        "courseC_flappy_events9_2021": "Замість того, щоб закінчувати гру, коли Пурх стикається з перешкодою, спробуй встановити рахунок на 0 - це зробить гру різноманітнішою.",
        "courseC_harvester_loops10_2021": "Збери всю кукурудзу та гарбузи.",
        "courseC_harvester_loops11_2021": "Збери всю кукурудзу та гарбузи.",
        "courseC_harvester_loops1_2021": "Цикли можна використовувати для повторення не лише переміщень.  \n\nВикористовуй цикли, щоб зібрати всі чотири гарбузи.",
        "courseC_harvester_loops2_2021": "Зможеш об'єднати два різні цикли, щоб рухатися до гарбузів, а потім зібрати їх усі?",
        "courseC_harvester_loops3_2021": "Збери всі гарбузи.",
        "courseC_harvester_loops4_2021": "Тепер тут росте ще й кукурудза!\n\nЗбери всю кукурудзу та гарбузи.",
        "courseC_harvester_loops5_2021": "Збери всю кукурудзу та гарбузи.",
        "courseC_harvester_loops6_2021": "Збери всю кукурудзу та гарбузи.",
        "courseC_harvester_loops7_2021": "Збери всю кукурудзу та гарбузи.",
        "courseC_harvester_loops8_2021": "**Завдання:** Збери всю кукурудзу і всі гарбузи.\n\nТи можеш виконати це завдання будь-яким способом, але це потребуватиме або багато роботи, або багато роздумів!",
        "courseC_harvester_loops9_2021": "Збери всю кукурудзу та гарбузи.",
        "courseC_harvester_loops_challenge2_2021": "Збери весь салат-латук. Уникай  дерев і полів!",
        "courseC_maze_debugging1_2021": "Цей код не зовсім правильний!  \n\nВиправ код, щоб допомогти Скрету дістатися до жолудя.",
        "courseC_maze_debugging3_2021": "Щось тут не гаразд.\n\nВидали блоки, щоб перемістити Скрета до жолудя!",
        "courseC_maze_debugging92022": "Використовуйте блоки в наборі інструментів для побудови вашої програми. Доведіть Скрет до жолудя.",
        "courseC_maze_debugging9_2020": "Використовуйте блоки в наборі інструментів для побудови вашої програми. Доведіть Скрет до жолудя.",
        "courseC_maze_debugging9_2021": "Використовуйте блоки в наборі інструментів для побудови вашої програми. Доведіть Скрет до жолудя.",
        "courseC_maze_debugging_challenge2_2021": "Якщо Скрет обертається занадто часто, у нього може запаморочитися голова! Допоможи йому дістатися до жолудя за допомогою лише чотирьох команд `повернути`.",
        "courseC_maze_programming1_2021": "Для цього завдання перетягни усі блоки разом та натисни \"Запустити\", щоб побачити, що  буде далі!",
        "courseC_maze_programming2_2021": "Перетягни додатковий блок <xml><block type=\"maze_moveForward\" block-text=\"move forward\"/></xml> з панелі інструментів, щоб завершити код.",
        "courseC_maze_programming3_2021": "_\"Ця свинка скуйовдила мені пір'ячко\"._\n\nТут є один зайвий блок, який призведе до падіння пташки.\nВикинь його, від'єднавши від сірих блоків та перетягнувши назад до скриньки з інструментами.",
        "courseC_maze_programming4_2021": "_\"Проклади шлях та проведи мене до лихої свинки._ \n\nУникай вибухівки або полетить пір'я!",
        "courseC_maze_programming5_2021": "_\"Йди цим шляхом, щоб дістатися свинки!\"_\n\nУникай вибухівки.",
        "courseC_maze_programming6_2021": "_\"Зберігай спокій та допоможи мені знайти погану свинку. Інакше я можу розсердитися!\"_\n\nВідведи пташку до свинки та уникай вибухівки.",
        "courseC_maze_programming7_2021": "_\"Час розлютитися!\"_\n\n**Завдання:** У цьому коді багато помилок. Тобі потрібно видалити певні блоки та додати інші.",
        "courseC_maze_programming8_2021": "_\"Зберігай спокій та допоможи мені знайти погану свинку.\"_",
        "courseC_maze_programming8_predict1_2021": "_\"Зберігай спокій та допоможи мені знайти погану свинку.\"_",
        "courseC_maze_programming9_2021": "_\"Тепер допоможи мені підкрастися до свинки будь-яким шляхом, який тобі до вподоби!\"_",
        "courseC_maze_programming_challenge1_2021": "Пташка потребує твоєї допомоги! Свинка ховається, а твоя мета - знайти її.",
        "courseC_maze_programming_challenge2_2021": "Іноді існує кілька способів вирішити одну задачку. Іноді швидше повернутися назад, ніж рухатися вперед!",
        "courseC_starWars_loops10_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n _\"Вперед, ВВ-8!\"_\n\nТи молодець! Так тримати!",
        "courseC_starWars_loops11_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) \\_\"Не зупиняйся, BB-8!\"\n\nМи майже завершили! Цього разу обирай будь-який шлях, який тобі до вподоби!",
        "courseC_starWars_loops1_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Збирай металобрухт, BB-8!\"_ \n\nВикористай п'ять однакових блоків, щоб зібрати металобрухт. Металобрухт світиться ось так: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)",
        "courseC_starWars_loops2_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Йди вперед, BB-8!\"_\n\nДля збору всього металобрухту спробуй створити цикл, який використовує лише один блок всередині блоку `повторити`.",
        "courseC_starWars_loops4_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Збирай, BB-8.\"_\n\nУ цьому завданні два цикли `повторити` допоможуть  BB-8 дістатися до металобрухту за допомогою найменшої кількості блоків!",
        "courseC_starWars_loops5_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Вперед, ВВ-8!\"_",
        "courseC_starWars_loops6_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Зможеш зібрати все?\"_\n\nЦикли працюють навіть з декількома блоками всередині!  Спробуй розмітити цю послідовність всередині циклу.",
        "courseC_starWars_loops7_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Ти зможеш!\"_\n\n\\[]Спробуй зібрати весь металобрухт, використовуючи лише один цикл. Запрограмуй весь шлях, а потім знайди код, що повторюється, та помісти його в цикл.",
        "courseC_starWars_loops8_2021": "[0] _\"Так тримати, BB-8.\"_\n\n**Завдання:** Поєднай ідеї з останніх кількох завдань та пройди цей рівень.",
        "courseC_starWars_loops9_2021": "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _\"Не зупиняйся!\"_\n\n\\[]Використовуй усі отримані знання, щоб зібрати весь металобрухт!",
        "courseD_artist_1_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Привіт, я Ельза з Аренделя, допоможи мені намалювати фігуру\"._\n\nНамалюй шестикутник зі сторонами по 50 пікселів.  \n\n* * *\n\nЩоб намалювати шестикутник, тобі потрібно \n\n-   рухатися вперед на **50** пікселів\n-   повернути праворуч на **60** градусів\n-   повторити всього **6** разів",
        "courseD_artist_2_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Молодець!\"_\n\nПісля шестикутника поверни праворуч на **60** градусів, а потім намалюй лінію довжиною **150** пікселів.   \n\nНа завершення поверни Ельзу назад у центр ігрового поля, використовуючи блок <xml><block type=\"jump_to\" block-text=\"jump to the middle center position\"><title name=\"VALUE\">middle center</title></block></xml>.",
        "courseD_artist_3_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Зробимо сніжинку.\"_\n\nДля створення сніжинки вклади весь код в інший цикл `повторити` та запусти його загалом **6** разів.  Тобі потрібно буде додати лише один блок.",
        "courseD_artist_4_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Зробимо наші сніжинки особливими!\"_\n\n**Натхнення:** Куди потрібно додати код, якщо хочеш намалювати крихітний квадратик на кінці кожної довгої лінії?\n\n* * *\n\nТи можеш робити в цьому завданні все, що забажаєш, але в мене є ідея:\n\nСпробуй зробити маленький квадратик в кінці кожного рядка\n\n-   Кожна сторона повинна мати довжину 15 пікселів\n-   Повернися на 90 градусів\n-   Повтори ці дії загалом 4 рази",
        "courseD_artist_52022": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) \\_ \"Спробуйте змінити фігури або довжину ліній, щоб зробити це своїм!\" \\_\n\n<br/>\n\n\\*\\* Натхнення: \\*\\* Ви можете змінити свій малюнок як завгодно, але ось ідея:\n\n-   Спробуйте змінити типи фігур посередині сніжинки на кінці кожного рядка!",
        "courseD_artist_5_2018_2019": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) \\_ \"Спробуйте змінити фігури або довжину ліній, щоб зробити це своїм!\" \\_\n\n<br/>\n\n\\*\\* Натхнення: \\*\\* Ви можете змінити свій малюнок як завгодно, але ось ідея:\n\n-   Спробуйте змінити типи фігур посередині сніжинки на кінці кожного рядка!",
        "courseD_artist_5_2018_2020": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) \\_ \"Спробуйте змінити фігури або довжину ліній, щоб зробити це своїм!\" \\_\n\n<br/>\n\n\\*\\* Натхнення: \\*\\* Ви можете змінити свій малюнок як завгодно, але ось ідея:\n\n-   Спробуйте змінити типи фігур посередині сніжинки на кінці кожного рядка!",
        "courseD_artist_5_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) \\_ \"Спробуйте змінити фігури або довжину ліній, щоб зробити це своїм!\" \\_\n\n<br/>\n\n\\*\\* Натхнення: \\*\\* Ви можете змінити свій малюнок як завгодно, але ось ідея:\n\n-   Спробуйте змінити типи фігур посередині сніжинки на кінці кожного рядка!",
        "courseD_artist_6_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Спробуймо щось новеньке. Давай поїдемо зигзагом\"._\n\n<br/>  \n\n**Натхнення:** Спробуй змінити довгу лінію розміром 150 пікселів на 6 коротких ліній по **25** пікселів.\n\n-   Поверни на **45** градусів у різних напрямках після кожної короткої лінії, щоб отримати зигзагоподібну форму\n-   Де для цього потрібно розмістити новий блок `повторити`?\n-   Скільки разів потрібно повторити шаблон з 2 коротких ліній, щоб отримати 6?",
        "courseD_artist_nestedLoops1a_2021": "Тепер повтори трикутник 6 разів.\n\nПісля кожного трикутника повертай на 60 градусів, перш ніж малювати наступний.",
        "courseD_artist_nestedLoops2_2021": "Цього разу спробуй виконати завдання з найменшою кількістю блоків.\n\nПісля кожного трикутника повертай на 60 градусів, перш ніж малювати наступний.\nБачиш, наскільки це простіше з **вкладеними циклами**?",
        "courseD_artist_nestedLoops4_2021": "Чудово!  Зроби те саме з цими колами. \n\n-   Кожне коло створюється шляхом переміщення на 1 піксель перед поворотом на 1 градус, 360 разів.\n-   Кожне коло починається на відстані 50 пікселів від того місця, де закінчилося попереднє",
        "courseD_artist_nestedLoops5_2021": "Що станеться, якщо ти також повернешся на 90 градусів між колами?\n\n(Щоб отримати таке зображення, треба перестрибнути 50 пікселів між колами)",
        "courseD_artist_nestedLoops7_2021": "Використовуй отримані знання, щоб зробити цей малюнок.\n\n-   Квадрати мають  **сторони по 100 пікселів** та кути **90 градусів**.\n-   Тобі потрібно буде повернути на **60 градусів між кожним квадратом**. Чому? Тому що в нас є 6 квадратів, а 360 градусів (повний оберт навколо), поділені на 6, дорівнює 60 градусам.\n-   Переконайся, що ти перестрибнув **50 пікселів, щоб дістатися до наступного квадрата**.",
        "courseD_artist_nestedLoops8_2021": "Використовуючи отримані знання з попередніх завдань, створи це зображення з самого початку.\n\n-   Кожен шестикутник має **сторони по 50 пікселів** та **60 градусів нахилу**.",
        "courseD_artist_nestedLoops9_2021": "**Завдання:** Чи можеш ти розібратися, як зробити таку картинку?\n\n-   Обидві фігури мають сторони по **50 пікселів**.\n-   Між кожною парою фігур потрібно стрибнути вперед на довжину сторони та повернути на 45 градусів.",
        "courseD_artist_nestedLoops9_predict1_2021": "**Завдання:** Чи можеш ти розібратися, як зробити таку картинку?\n\n-   Обидві фігури мають сторони по 50 пікселів",
        "courseD_artist_nestedLoopsFP_2021": "Тепер твоя черга.  Використовуй отримані навички та створи те, що тобі подобається!\n\nПотрібна ідея?  Спробуйте зробити щось подібне:\n\n![розгортається](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)\n![розгортається](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)\n![розгортається](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)",
        "courseD_artist_nestedLoops_challenge1_2021": "Спробуй зрозуміти, як зробити таку картинку?\n\n-   Обидві фігури мають сторони **50 пікселів**.\n-   _Восьмикутники_ зроблені з поворотами на **45 градусів**.\n-   _Трикутники_ складаються з кутів на **120 градусів**.",
        "courseD_artist_nestedLoops_challenge2_2021": "Цей код трішки не правильний!  Чи можеш ти виправити його, щоб зробити правильний малюнок у робочій частині?\n\n-   Перший внутрішній цикл має утворити восьмикутник.\n-   Другий внутрішній цикл має утворити шестикутник.\n-   Третій внутрішній цикл має утворити квадрат.",
        "courseD_artist_project1_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Привіт, я Ельза з Аренделя, допоможи мені намалювати фігуру\"._\n\nНамалюй невеличку фігуру, шириною від **20 до 50** пікселів.  Це може бути будь-яка фігура, яка тобі подобається.  \n\n<hr/>\n\nТи можеш спробувати намалювати багатокутник, наприклад, один з наступних:\\\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)  \n\nАбо навіть абстрактну фігуру, наприклад, таку:\\\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)",
        "courseD_artist_project1a_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Давай спробуємо щось нове. Цього разу покатайся на ковзанах зигзагом\"._\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nНамалюй сходинку, яка використовує повороти від 75 до 105 градусів -- але переконайся, що твої лівий і правий повороти використовують однаковий кут.\\\n(Пізніше ти побачиш чому).",
        "courseD_artist_project2_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)_\"А тепер давай намалюємо більше однієї фігури\"._\n\nВізьми свою фігуру та намалюй дві або три фігури підряд, пересуваючись на певну кількість пікселів вперед.  \n\n-   Якщо ти пересуваєшся на **менше**, ніж ширина твоєї фігури, фігури можуть накладатися одна на одну.\n-   Якщо ти пересуваєшся на **більше**, ніж ширина твоєї фігури, то отримаєш проміжок\n\n<hr/>\n\nТвоя лінія може закінчитися прямою лінією, як у цьому випадку:\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/> <br/>\n\nАбо ж твої фігури можуть рухатися, як одна з цих: \n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)",
        "courseD_artist_project2a_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Тепер давай повернемось і підемо назад тим же шляхом, яким прийшли\"._\n\nПовертаємося на 180 градусів і знову малюємо той самий шаблон сходів!  \n\n-   Решту цього етапу буде легше виконати, якщо ти розташуєш весь свій код всередині циклу, щоб змусити Ельзу малювати, розвернутися на 180 градусів, малювати, а потім знову розвернутися на 180 градусів.\n\n<hr/>\n\nОсь приклад сходів, які використовують поворот на 76 градусів:\n\n![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)",
        "courseD_artist_project3_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Спробуємо зробимо з неї сніжинку\"._\n\nПотім зроби так, що Ельза стрибнула назад до центру, використовуючи блок \"стрибнути на 200 вгору і 200 вниз\", і крути її навколо, щоб намалювати лінію фігур знову і знову в різних напрямках.\n\nЯкі дивовижні сніжинки в тебе виходять!\n\n* * *\n\nПоглянь на ці приклади з багатокутниками:\\\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\n\nАбстрактні фігури можуть зробити сніжинку більш схожою на одну з цих:\\\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)",
        "courseD_artist_project3a_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Спробуй покрутити та зробити з неї сніжинку\"._\n\nПрокрути цю фігуру 5 або 6 разів по колу.\n\n-   Якщо ти вибереш 5 разів, спробуй повернути на 72 градуси\n-   Якщо ти вибереш 6 разів, спробуй повернути на 60 градусів\n    <hr/>\n\nОсь приклад, коли Ельза повернула шаблон 6 разів:\n\n![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)",
        "courseD_artist_project4_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Що буде, якщо ми намалюємо сніжинки одна на одну?\"_\n\nСпробуй накласти дві різні форми сніжинок одна на одну з невеликим поворотом між ними - подивись, що вийде!",
        "courseD_artist_project4a_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Що ж нам тепер робити? Давай дослідимо і створимо власну зимову країну чудес!\"_\n\nСпробуй погратися з тим, що ти створив. Намалюй все, що тобі подобається!\n\n-   Що станеться, якщо використати два різні кути у шаблоні сходинки?\n-   Що станеться, якщо зробити ромб довшим або коротшим?\n-   Як виглядатимуть дві сніжинки, накладені одна на одну?",
        "courseD_artist_project5_2021": "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _\"Пофантазуй з формами та кутами, щоб побачити, які нові сніжинки ми зможемо намалювати!\"_",
        "courseD_bee_conditionals10_2021": "Умови можуть бути корисними, навіть якщо ти точно знаєш, що знаходиться в кожній точці!\n\nЗбери весь нектар і зроби весь мед.",
        "courseD_bee_conditionals1_predict1_2021": "_\"Ця хмарка блокує мені огляд!\"_\n\nПеревір, чи є квітка під хмарою. Якщо є квітка - збери нектар.",
        "courseD_bee_conditionals2_2021": "Ще хмарки! \n\nПеред тим, як забрати нектар, зазирни під кожну хмаринку, щоб побачити, чи не ховається під нею квітка. Якщо під хмаркою є квітка, бджілці потрібно буде дістати нектар лише один раз.  \n\nЗапам'ятай: не всі хмаринки ховають одне й те саме!",
        "courseD_bee_conditionals3_2021": "Збирати нектар можна тільки з квітів, але ти можеш перевірити будь-яку клітинку, щоб побачити, чи є там квітка. Якщо під будь-якою з цих хмаринок є квітка, бджілці потрібно буде зібрати нектар _один_ раз.",
        "courseD_bee_conditionals4_2021": "У цьому завданні ми знаємо, що у кожній квітці є одна одиниця нектару, але квітки розташовані нерівномірно.\n\nЗбери весь нектар, використовуючи якомога менше блоків.",
        "courseD_bee_conditionals6_2021": "_\"Тепер я просто хочу робити мед.\"_\n\nПід деякими з цих хмаринок можуть ховатися стільники.  Обов'язково перевір, чи за кожною хмаринкою ховаються стільники! Якщо там є стільник, бджілці потрібно буде зробити мед лише один раз.\\_",
        "courseD_bee_conditionals7_2021": "Іноді хмаринка накриває квітку, іноді вона накриває стільники! \n\nВикористовуй блок `якщо/інакше`, щоб зібрати нектар на квітці та зробити мед на стільниках. Пам'ятай: якщо є квітка, бджілці потрібно зібрати нектар лише _один_ раз. Якщо є стільники, бджілці потрібно зробити мед лише _один_ раз.",
        "courseD_bee_conditionals7_predict2_2021": "Іноді хмаринка накриває квітку, іноді вона накриває стільники! \n\nВикористовуйте блок `якщо/інакше`, щоб зібрати нектар на квітці та зробити мед на стільниках. Пам'ятай: за кожною хмаринкою завжди буде лише _один_ медовий стільник або _одна_ квітка.",
        "courseD_bee_conditionals8_2021": "**Завдання:** Під кожною з цих хмаринок буде або квітка, або стільник!\n\nЗбери нектар один раз, якщо знайдеш квітку.\nВ іншому випадку зроби мед один раз (адже там ти знайдеш стільники).",
        "courseD_bee_conditionals9_2021": "Збери весь нектар або зроби весь мед. Ти можеш збирати нектар лише з квіток, а мед - зі стільників. Перевір будь-яке місце, щоб побачити, чи є там квітка або стільники. За кожною хмаринкою буде лише одна квітка або один стільник.",
        "courseD_bee_conditionals_challenge1_2021": "Збери весь нектар та зроби весь мед. Ти можеш збирати нектар тільки з квіток, а мед - зі стільників. Перевір кожну клітинку, щоб побачити, чи є там квітка або стільники.",
        "courseD_bee_conditionals_challenge2_2021": "Збери нектар на всіх квітах і зроби мед на всіх стільниках. Ти можеш зібрати весь нектар в одній квітці, використовуючи цикл `поки нектар > 0`.",
        "courseD_bee_nestedLoops12022": "Допоможи бджілці зібрати весь нектар.",
        "courseD_bee_nestedLoops1_2021": "Допоможи бджілці зібрати весь нектар.",
        "courseD_bee_nestedLoops1a_2021": "_\"Це буде просто **БДЖОЛИНО**!\"_\n\nДопоможи бджілці зібрати весь нектар.",
        "courseD_bee_nestedLoops2_2021": "Цього разу допоможи бджілці зібрати весь нектар, використовуючи якомога менше блоків.",
        "courseD_bee_nestedLoops2_predict1_2021": "Цього разу допоможи бджілці зібрати весь нектар, використовуючи якомога менше блоків.",
        "courseD_bee_nestedLoops7_2021": "**Завдання:** з'ясуй, як зібрати весь нектар, використовуючи тільки доступні блоки.",
        "courseD_bee_nestedLoops8": "Збери весь нектар з усіх квітів та зроби мед в усіх стільниках. Використовуй вкладені цикли. ",
        "courseD_bee_nestedLoops82022": "Збери весь нектар з усіх квітів та зроби мед в усіх стільниках. Використовуй вкладені цикли. ",
        "courseD_bee_nestedLoops8_2018": "Збери весь нектар з усіх квітів та зроби мед в усіх стільниках. Використовуй вкладені цикли. ",
        "courseD_bee_nestedLoops8_2019": "Збери весь нектар з усіх квітів та зроби мед в усіх стільниках. Використовуй вкладені цикли. ",
        "courseD_bee_nestedLoops8_2020": "Збери весь нектар з усіх квітів та зроби мед в усіх стільниках. Використовуй вкладені цикли. ",
        "courseD_bee_nestedLoops8_2021": "Збери весь нектар з усіх квітів та зроби мед в усіх стільниках. Використовуй вкладені цикли. ",
        "courseD_bee_nestedLoops9": "Зроби весь мед.",
        "courseD_bee_nestedLoops92022": "Зроби весь мед.\n\n![](<>)",
        "courseD_bee_nestedLoops9_2018": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_2019": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_2020": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_2021": "Зроби весь мед.\n\n![](<>)",
        "courseD_bee_nestedLoops9_predict2": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_predict22022": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_predict2_2018": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_predict2_2019": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_predict2_2020": "Зроби весь мед.",
        "courseD_bee_nestedLoops9_predict2_2021": "Зроби весь мед.",
        "courseD_bounce_events10s_2021": "Тепер кільце розташоване вгорі.  \n\nПрикріпи блок `додати бал` до події `коли м'яч влучає в ціль`, а блок `додати бал супернику` до події `коли м'яч випав з рук`, щоб створити гру. \n\n* * *\n\nПеревір, скільки очок ти зможеш набрати, перш ніж твій суперник заб'є двічі.",
        "courseD_bounce_events11s_2021": "Тепер ти контролюєш м'яч!  Приєднай блок 'кинути новий м'яч' у всіх місцях, де гра потребує нового м'яча.\n\n* * *\n\nПеревір, скільки балів ти зможеш набрати, перш ніж твій суперник заб'є двічі!",
        "courseD_bounce_events1s_2021": "До кільця!     \n\nПриєднай блок до події 'коли натиснуто стрілку ліворуч' і натисни \"Запустити\", щоб перемістити гравця до сітки.",
        "courseD_bounce_events2s_2021": "Тепер додай блок до події 'коли натиснуто стрілку праворуч', щоб рука могла дістатися до обох кошиків.",
        "courseD_bounce_events5s_2021": "Ми запускатимемо баскетбольний м'яч у напрямку руки. Прикріпи блок до блоку 'коли м'яч потрапляє до рук', щоб м'яч влучив у кошик.",
        "courseD_bounce_events6s_2021": "Тепер кошик вгорі.  \n\nЩоб розв'язати цю задачку, приєднай код, який змусить м'яч відскакувати після удару об стіну,",
        "courseD_bounce_events7s_2021": "Додавай блоки звуків, щоб коли ти влучаєш у кошик, лунав звук потрапляння у ціль, а коли м'яч минає руку, лунав свисток.\n\n* * *\n\nВідбивай м'яч, доки він не влучить у фінальну ціль.",
        "courseD_collector_debugging1a_2021": "_\"О ні! Я бачу проблему.\"_\n\nВиправ помилку або помилки, щоб зібрати всі скарби.",
        "courseD_collector_debugging2a_2021": "_\"Ти зможеш!\"_\n\nВиправ помилку або помилки, щоб зібрати всі скарби.",
        "courseD_collector_debugging3a_2021": "_\"Трохи наполегливості, і ти все зрозумієш\"._\n\nВиправ помилку або помилки, щоб зібрати всі скарби.",
        "courseD_collector_debugging4a_2021": "_\"Не засмучуйся. Ти зможеш!\"_\n\nВиправ помилку або помилки, щоб зібрати всі скарби.",
        "courseD_collector_debugging5a_2021": "_\"Це завдання зводить мене з розуму!\"_\n\n\"Усі команди, які тобі знадобляться, вже тут... тепер використай свої навички налагодження, щоб з'ясувати, як розв'язати  цю задачку.",
        "courseD_collector_debugging6a_2021": "Завдання: Використовуй код у робочій області, щоб зібрати щонайменше **6** частин скарбу!",
        "courseD_collector_debugging8a_2021": "_\"Так багато скарбів!\"_\n\nДопоможи Лорел виправити код, щоб зібрати всі скарби.",
        "courseD_collector_debugging9a_2021": "_\"Це острів скарбів!\"_\n\nДопоможи Лорел виправити код, щоб зібрати всі скарби.",
        "courseD_collector_nested_loops_challenge2_2021": "_\"Пошукаймо скарби за допомогою циклів!\"_ \n\nДопоможи Лорел дістатися принаймні до двох схованок скарбів, використовуючи лише блоки зі своєї панелі інструментів. Боків вистачить, щоб зібрати усі 4 скарби.",
        "courseD_farmer_condLoops1": "_\"Допоможеш мені зібрати кукурудзу сьогодні?\"_\n\nДопоможи фермерці перевірити рядок кукурудзи, щоб побачити, чи все готове до збору врожаю.  Використовуй умови, щоб подивитися на кожен паросток.  На кожному паростку буде або **0, або 1** качан кукурудзи, готовий до збору.",
        "courseD_farmer_condLoops12022": "_\"Допоможеш мені зібрати кукурудзу сьогодні?\"_\n\nДопоможи фермерці перевірити рядок кукурудзи, щоб побачити, чи все готове до збору врожаю.  Використовуй умови, щоб подивитися на кожен паросток.  На кожному паростку буде або **0, або 1** качан кукурудзи, готовий до збору.",
        "courseD_farmer_condLoops1_2018": "_\"Допоможеш мені зібрати кукурудзу сьогодні?\"_\n\nДопоможи фермерці перевірити рядок кукурудзи, щоб побачити, чи все готове до збору врожаю.  Використовуй умови, щоб подивитися на кожен паросток.  На кожному паростку буде або **0, або 1** качан кукурудзи, готовий до збору.",
        "courseD_farmer_condLoops1_2019": "_\"Допоможеш мені зібрати кукурудзу сьогодні?\"_\n\nДопоможи фермерці перевірити рядок кукурудзи, щоб побачити, чи все готове до збору врожаю.  Використовуй умови, щоб подивитися на кожен паросток.  На кожному паростку буде або **0, або 1** качан кукурудзи, готовий до збору.",
        "courseD_farmer_condLoops1_2020": "_\"Допоможеш мені зібрати кукурудзу сьогодні?\"_\n\nДопоможи фермерці перевірити рядок кукурудзи, щоб побачити, чи все готове до збору врожаю.  Використовуй умови, щоб подивитися на кожен паросток.  На кожному паростку буде або **0, або 1** качан кукурудзи, готовий до збору.",
        "courseD_farmer_condLoops1_2021": "_\"Допоможеш мені зібрати кукурудзу сьогодні?\"_\n\nДопоможи фермерці перевірити рядок кукурудзи, щоб побачити, чи все готове до збору врожаю.  Використовуй умови, щоб подивитися на кожен паросток.  На кожному паростку буде або **0, або 1** качан кукурудзи, готовий до збору.",
        "courseD_farmer_condLoops2_2021": "_\"Збирай обидві рослини салату з цього рядка!\"_\n\nНа цьому городі все переплуталося, тут є і кукурудза, і салат!  \n\nДопоможи фермерці зібрати ті рослини, які вже готові до збору.  На кожній рослині буде або **одна** кукурудза, або **один** салат.",
        "courseD_farmer_condLoops3_2021": "_\"Кукурудза, салат ТА гарбузи! Допоможи мені зібрати їх усі.\"_\n\nНа кожному паростку буде один качан кукурудзи, один качан салату або один гарбуз.",
        "courseD_farmer_condLoops4_2021": "_Дивись! Тепер салат росте кластерами!\"_  \n\nФермерка хоче зібрати все зі своєї грядки з салатом. На кожній рослині тепер буде більше одного качана салату, тому фермерка має продовжувати збирати, поки салат продовжує рости.  \n\n##### (Пам'ятай: на цій грядці росте лише салат!)",
        "courseD_farmer_condLoops5_2021": "_\"Який щедрий врожай!\"_\n\nНа цьому полі разом ростуть качани кукурудзи та салату, а в кінці - один гарбуз.  Чи зможеш ти зібрати все?",
        "courseD_farmer_condLoops6_2021": "_\"Давай зробимо ще один крок!\"_\n\n\"Поміркуй, як зібрати гарбуз. Не забудь зібрати всю кукурудзу по дорозі!",
        "courseD_farmer_condLoops7_2021": "\\*\\* Завдання: \\*\\* Збери всю кукурудзу та салат, а потім збери гарбуз.",
        "courseD_farmer_condLoops8_2021": "Збери всю кукурудзу та салат, а потім збери гарбуз.",
        "courseD_farmer_condLoops9_2021": "Збери всю кукурудзу та салат, а потім збери гарбуз.",
        "courseD_farmer_condLoops9_predict1_2021": "Збери всю кукурудзу та салат, а потім збери гарбуз.",
        "courseD_farmer_condLoops_challenge1_2021": "Гарбузами позначають те місце, де слід `повернути праворуч`. Інакше продовжуй рухатися вперед, але не забувай збирати весь салат або кукурудзу по дорозі. \n\n\\*\\*Кожна прихована рослинка має лише одну кукурудзу або салат. \\*\\*",
        "courseD_farmer_condLoops_challenge2_2021": "_\"Це досить різноманітний овочевий лабіринт!\"_ \n\nБіля гарбуза поверни праворуч, біля салату поверніть ліворуч. Збери все, щоб пройти рівень.",
        "courseD_farmer_while1_2021": "_\"Привіт, я Фермерка. Мені потрібна твоя допомога, щоб вирівняти поле на моїй фермі та підготувати його до посіву!\"_ \n\nПеремістися до купи бруду і використовуй блок `видалити`, щоб позбутися його.",
        "courseD_farmer_while3_2021": "_\"Підійди до купи бруду та скажи, скільки лопат потрібно, щоб її прибрати\"._\n\nВикористовуй якомога менше блоків, щоб вирішити завдання.",
        "courseD_farmer_while4_2021": "_\"Я не знаю, скільки бруду у цій купі!\"_\n\nДопоможи фермерці прибрати всю цю купу бруду, використовуючи цикл `поки`.",
        "courseD_farmer_while4_predict1_2021": "_\"Я не знаю, скільки бруду у цій купі!\"_\n\nДопоможи фермерці прибрати всю цю купу бруду, використовуючи цикл `поки`.",
        "courseD_farmer_while6_2021": "Подивись на усі ці ями!  Кожна з них потребує різної кількості бруду.   \n\nТи можеш використовувати цикл `поки`, щоб легко засипати їх усі!",
        "courseD_farmer_while8_2021": "**Завдання:** Засип усі ці ями, використовуючи якомога меншу кількість блоків.",
        "courseD_farmer_while_challenge1_2021": "Засип усі ями та видали усі купи із брудом.",
        "courseD_harvester_nested_loops_challenge1_2021": "_\"Мені потрібна допомога на фермі! Допоможи мені зібрати кукурудзу, використовуючи лише блоки з твоєї панелі інструментів\"._",
        "courseD_iceage_loops10_2021": "Допоможи Скрету дістатися до жолудя!",
        "courseD_iceage_loops11_2021": "Допоможи Скрету дістатися до жолудя!",
        "courseD_iceage_loops12_2021": "Дійди до жолудя будь-яким шляхом!",
        "courseD_iceage_loops1_2021": "Допоможи Скрету дістатись до жолудя по слизькому льоду!",
        "courseD_iceage_loops2_2021": "Використовуй блок <xml><block type=\"maze_turn\" block-text=\"turn left\">\n    <title name=\"DIR\">turnLeft</title>\n  </block></xml> , щоб дістатися до жолудя!",
        "courseD_iceage_loops3_2021": "Чи зможеш ти дістатися до жолудя з лише одним блоком <xml><block type=\"maze_moveForward\" block-text=\"move forward\"/></xml>? Спробуй використати цикл!",
        "courseD_iceage_loops4_2021": "Додай ще один блок, і Скрет дійде до жолудя!",
        "courseD_iceage_loops6_2021": "Спробуй додати цикл, щоб дістатися до жолудя.",
        "courseD_iceage_loops7_2021": "Скрету дуже потрібен цей жолудь! ",
        "courseD_iceage_loops8_2021": "Зможеш виправити цей код?",
        "courseD_iceage_loops9_2021": "Жолудь дуже далеко! Спробуй використати цикли, щоб допомогти Скрету дістатися до нього.",
        "courseD_maze_intro4_2021": "_\"Знайди шлях і приведи мене до свині\"._ ",
        "courseD_maze_intro5a_2021": "Уважно порахуй клітинки!",
        "courseD_maze_intro5c_2021": "Обережно, динаміт! Допоможи Червоному дійти до свині.",
        "courseD_maze_nestedLoops3_2021": "_\"Зомбі зголоднів!\"_\n\nДоведи зомбі до соняшника, використовуючи найменшу кількість блоків.",
        "courseD_maze_nestedLoops4": "Доведи мене до соняшника!",
        "courseD_maze_nestedLoops42022": "Доведи мене до соняшника!",
        "courseD_maze_nestedLoops4_2018": "Доведи мене до соняшника!",
        "courseD_maze_nestedLoops4_2019": "Доведи мене до соняшника!",
        "courseD_maze_nestedLoops4_2020": "Доведи мене до соняшника!",
        "courseD_maze_nestedLoops4_2021": "Доведи мене до соняшника!",
        "courseD_maze_nestedLoops6_2021": "_\"Треба з'їсти соняшник!\"_\n\nВідведи зомбі до соняшника, використовуючи лише доступні блоки.",
        "courseD_maze_ramp1_2021": "Для цієї задачки об'єднай усі блоки та натисни \"Запустити\", щоб побачити, що буде далі!",
        "courseD_maze_ramp2_2021": "Щоб завершити код, перетягни додатковий блок `рухатись вперед` з панелі інструментів, а потім приєднай всі блоки до події `коли гра починається`.",
        "courseD_maze_ramp3_2021": "Допоможи пташці дійти до свинки. Тут є один зайвий синій блок 'рухатися вперед'.\n\nЩоб видалити зайвий блок, від'єднай його від сірих блоків і перетягни назад на панель інструментів.",
        "courseD_maze_ramp5_2021": "_\"Йди цим шляхом, щоб довести мене до свинки!\"_\n\nУникай вибухівки.",
        "courseD_maze_ramp5b_2021": "**Завдання:** Пройди цей лабіринт і приведи пташку до свинки!",
        "courseD_maze_ramp5d_2021": "Відведи пташку до свинки.",
        "courseD_maze_until10_2021": "Допоможи зомбі дістатися до соняшника.",
        "courseD_maze_until10_predict2_2021": "Допоможи зомбі дістатися до соняшника.",
        "courseD_maze_until4_2021": "_\"Шановний друже. Я зомбі і я голодний. Треба... дістатися... до соняшника...\"_\n\nМожеш провести зомбі до соняшника, використовуючи лише ті блоки, які є в наявності?",
        "courseD_maze_until5": "Використовуй блок `якщо`, щоб допомогти зомбі вирішити, коли повертати, а потім приведи зомбі до соняшника.",
        "courseD_maze_until52022": "Використовуй блок `якщо`, щоб допомогти зомбі вирішити, коли повертати, а потім приведи зомбі до соняшника.",
        "courseD_maze_until5_2018": "Використовуй блок `якщо`, щоб допомогти зомбі вирішити, коли повертати, а потім приведи зомбі до соняшника.",
        "courseD_maze_until5_2019": "Використовуй блок `якщо`, щоб допомогти зомбі вирішити, коли повертати, а потім приведи зомбі до соняшника.",
        "courseD_maze_until5_2020": "Використовуй блок `якщо`, щоб допомогти зомбі вирішити, коли повертати, а потім приведи зомбі до соняшника.",
        "courseD_maze_until5_2021": "Використовуй блок `якщо`, щоб допомогти зомбі вирішити, коли повертати, а потім приведи зомбі до соняшника.",
        "courseD_maze_until6_2021": "Допоможи зомбі дістатися до соняшника.",
        "courseD_maze_until7_2021": "Допоможи зомбі дістатися до соняшника.",
        "courseD_maze_until9_2021": "**Завдання:** Уникай гризунів та допоможи зомбі дістатися до соняшника.",
        "courseD_maze_until_challenge1": "Без підказок, тільки виклики. Допоможіть зомбі дійти до соняшника. ",
        "courseE_aboutme_1_2021": "<img src=\"https://studio.code.org/api/v1/animation-library/gamelab/uRkXIcSlbIAZ46WKaW.dFu.g3062psWS/category_people/pink_dress_wave.png\" style=\"height:80px\"> _\"Привіт, друже! Мене звати Ріккі, і ось кілька речей, якими я хотіла б поділитися про себе!\"_\n\n**Досліди:** Ріккі використовує Спрайт Лабораторію, щоб створити інтерактивний плакат про себе, яким вона може поділитися в Інтернеті.  \n\nРіккі дозволила нам переглянути її плакат. Ми навіть можемо редагувати її код! \n\nПограйся з плакатом та кодом Ріккі, а потім натисни **Завершити**.",
        "courseE_aboutme_2_2021": "\"Ріккі на зв'язку! Я допоможу тобі зробити крутий плакат!\"\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/blockly/media/p5lab/animation-previews/category_people.png\" style=\"height:80px; border-width:1px; border-style:solid; border-color:black; border-radius:10px\">\n<p style=\"text-align: center\">\nPeople\n</p>\n</div>\n\n## Зроби так.\n\n1.  Перейди на вкладку **Костюми** у верхньому лівому кутку екрана (поруч з **Кодом**). \n2.  Відредагуй початковий костюм або додай новий, який тобі подобається. Шукай категорію \"_Люди_\"!\n3.  Зміни костюм спрайта на свій власний у коді нижче.\n4.  Встанови розмір спрайта на свій розсуд.",
        "courseE_aboutme_3_2021": "_\"Розкажи щось про себе, і переконайся, що це БЕЗПЕЧНО!\"_.\n\nВикористовуй <xml><block type=\"gamelab_spriteClicked\" block-text=\"the when sprite clicked event block\"></block></xml> та <xml><block type=\"gamelab_printText\" block-text=\"the print text block\"></block></xml> (у категорії блоків `Світ`), щоб поділитися інформацією про себе при клацанні на твій спрайт! \n\n**Переконайся, що інформація, якою ти ділишся, є БЕЗПЕЧНОЮ.**\n\n* * *\n\n#### Приклади БЕЗПЕЧНОЇ та НЕБЕЗПЕЧНОЇ інформації\n\n| БЕЗПЕЧНА      | НЕБЕЗПЕЧНА                           |\n| ------------- | ------------------------------------ |\n| ім'я          | повне ім'я                           |\n| улюблені речі | домашня адреса                       |\n| думки         | номер телефону або електронної пошти |",
        "courseE_aboutme_4_2021": "_\"Додай більше спрайтів на свій плакат! Не забудь дати їм костюми!\"_\n\nДодай на плакат **принаймні два** інші спрайти. Дай кожному спрайту унікальний костюм!",
        "courseE_aboutme_5_2021": "_\"Розкажи світові більше про себе за допомогою нових спрайтів!\"_\n\nЗроби так, щоб інші спрайти друкували інформацію при натисканні на них. Переконайся, що все, чим ти ділишся, є БЕЗПЕЧНИМ!",
        "courseE_aboutme_62022": "_\"Вау! Твій плакат такий класний!\"_\n\nЦе твій проєкт, тож продовжуй! Ось кілька ідей, як зробити плакат ще кращим:\n\n-   Додай фон. Вибери фон, який підходить до твого плакату.\n-   Додай моделі поведінки. Зроби так, щоб кожен зі спрайтів реагував по-різному при натисканні.\n-   Додай більше подій. Використовуй інші блоки з категорії **Події**.\n-   Додайте звуки.",
        "courseE_aboutme_6_2021": "_\"Вау! Твій плакат такий класний!\"_\n\nЦе твій проєкт, тож продовжуй! Ось кілька ідей, як зробити плакат ще кращим:\n\n-   Додай фон. Вибери фон, який підходить до твого плакату.\n-   Додай моделі поведінки. Зроби так, щоб кожен зі спрайтів реагував по-різному при натисканні.\n-   Додай більше подій. Використовуй інші блоки з категорії **Події**.\n-   Додайте звуки.",
        "courseE_artist_functions10_2021": "Цього разу використовуй лінії 8 шестикутників зі стороною 25 пікселів.\n\n-   Щоб зробити шестикутник, повтори сторону 6 разів, повернувши її на 60 градусів.\n-   Між кожним шестикутником зроби перехід у 25 пікселів.\n-   Щоб намалювати ромб, виконай чергування поворотів на 60 і 120 градусів.",
        "courseE_artist_functions2_2021": "Ось функція з назвою `намалювати квадрат`. Використовуй її, щоб завершити цей малюнок. \n\n* * *\n\nКвадрати знаходяться на відстані 75 пікселів один від одного.",
        "courseE_artist_functions3_2021": "Побудуй функцію, яка буде створювати цю зірку.\n\n* * *\n\n-   Кожний промінь зірки має довжину 25 пікселів\n-   Щоб отримати 8 променів, потрібно повернути на 45 градусів\n-   Можна переходити вперед і назад по одному і тому ж променю",
        "courseE_artist_functions5_2021": "Якщо намалювати три зірки важче, ніж намалювати чотири? Якщо потрібно ще й стрибати через місяць!\n\nНамалюй лише ці три зірки, щоб закінчити завдання.\n\n* * *\n\n-   Стрибок між першою та другою зіркою становить **200** пікселів\n-   Відстань між другою та третьою зіркою - **100** пікселів",
        "courseE_artist_functions7_2021": "Намалювати усі ці вікна окремо було б дуже складно!  \n\nСпробуй виконати це завдання, створивши `намалювати вікно` та викликавши його п'ять разів. Обережно, двері!\n\n* * *\n\n-   Кожне вікно складається з чотирьох квадратів розміром **25** пікселів.\n-   Верхні вікна знаходяться на відстані **100** пікселів одне від одного.  \n-   Нижні вікна розташовані на **150** пікселів нижче верхнього набору вікон.",
        "courseE_artist_functions8a_2021": "_\"Функції - це просто!\"_\n\nМи збираємося побудувати щось фантастичне!  Почни зі створення функції для цього квадрата.",
        "courseE_artist_functions8b_2021": "_\"Зомбі паморочиться у голові\"._\n\nВиклич функцію `намалювати квадрат` зсередини функції `намалювати лінію квадратів`, щоб зробити це ще простіше!\n\n* * *\n\n-   Квадрати знаходяться на відстані _50_ пікселів один від одного.",
        "courseE_artist_functions8c_2021": "Додай ще одну функцію, яка створює цю групу з квадратів, розташованих у шаховому порядку, за допомогою функції `намалювати лінію квадратів`.",
        "courseE_artist_functions9_2021": "**Завдання:** Створи це зображення, використовуючи обмежену кількість блоків. \n\n-   Кожен трикутник має сторону **50 пікселів**  \n-   Щоб намалювати ромб, потрібно по черзі повертати його на **60 градусів та 120 градусів**.",
        "courseE_artist_functionsProj2022": "**Натхнення:** Використовуй набуті знання, щоб зробити все, що забажаєш!\n\nЧи можеш ти зробити щось подібне до цієї дзиґи?\n\n![expandable](https://images.code.org/0d79058844e1f038971c303b20b0105f-image-1628782803453.png)",
        "courseE_artist_functionsProj_2021": "**Натхнення:** Використовуй набуті знання, щоб зробити все, що забажаєш!\n\nЧи можеш ти зробити щось подібне до цієї дзиґи?\n\n![expandable](https://images.code.org/0d79058844e1f038971c303b20b0105f-image-1628782803453.png)",
        "courseE_artist_functions_challenge1": "Як тільки ви визначили функцію, ви можете викликати її знову і знову - коли завгодно і де завгодно! Спробуйте цей код, щоб побачити, як він працює, а потім змініть його, щоб створити власний вражаючий дизайн!",
        "courseE_artist_functions_challenge12022": "Як тільки ви визначили функцію, ви можете викликати її знову і знову - коли завгодно і де завгодно! Спробуйте цей код, щоб побачити, як він працює, а потім змініть його, щоб створити власний вражаючий дизайн!",
        "courseE_artist_functions_challenge1_2018": "Як тільки ви визначили функцію, ви можете викликати її знову і знову - коли завгодно і де завгодно! Спробуйте цей код, щоб побачити, як він працює, а потім змініть його, щоб створити власний вражаючий дизайн!",
        "courseE_artist_functions_challenge1_2019": "Як тільки ви визначили функцію, ви можете викликати її знову і знову - коли завгодно і де завгодно! Спробуйте цей код, щоб побачити, як він працює, а потім змініть його, щоб створити власний вражаючий дизайн!",
        "courseE_artist_functions_challenge1_2020": "Як тільки ви визначили функцію, ви можете викликати її знову і знову - коли завгодно і де завгодно! Спробуйте цей код, щоб побачити, як він працює, а потім змініть його, щоб створити власний вражаючий дизайн!",
        "courseE_artist_functions_challenge1_2021": "Як тільки ви визначили функцію, ви можете викликати її знову і знову - коли завгодно і де завгодно! Спробуйте цей код, щоб побачити, як він працює, а потім змініть його, щоб створити власний вражаючий дизайн!",
        "courseE_artist_functions_challenge2_2021": "Ти можеш не лише стрибати в деякі попередньо налаштовані місця, наприклад, у кути зображення, але й використовувати команду `перескочити`, щоб потрапити в абсолютно будь-яке місце, яке тобі сподобається! Спробуй цей код, щоб побачити, як він працює, а потім створи свою власну програму!\n\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">???</title>\n    <title name=\"YPOS\">???</title>\n    </block></xml>",
        "courseE_artist_functions_predict1_2021": "Перед тобою завдання, яке використовує визначену нами функцію.",
        "courseE_bee_functions2": "Функції - це блоки коду, які виконують завдання. Використовуй функцію \"взяти 2 нектари\", щоб збирати нектар з кожної квітки.",
        "courseE_bee_functions3": "Функції - це блоки коду, які виконують завдання. Використовуй функцію \"отримати 5\", щоб зібрати 5 нектарів за раз. Також переконайся, що використовуєш цикл, щоб отримати ідеальну кількість блоків.",
        "courseE_bee_functions_challenge1": "Ви самі по собі в цьому випробуванні. Бути бджолою важжжжче, ніж здається! ",
        "courseE_farmer_functions10a1_2021": "**Завдання:** Використовуй все, що ми дізнались раніше, щоб виконати це завдання, використовуючи 19 блоків або менше!",
        "courseE_farmer_functions11_predict_2021": "З'ясуй, яку функцію використовувати, а яку видалити, а потім виконай це завдання!",
        "courseE_farmer_functions13_2021": "Виріши це завдання, використовуючи 23 блоки або менше.\n\n* * *\n\n##### З кожного паростка виросте або _одна_ кукурудза, або нічого. Для пошуку найкращого рішення тобі потрібно буде відредагувати функції вручну.",
        "courseE_farmer_functions1_2021": "\\_\"Ми раніше не зустрічалися? Я - Фермерка!\"\n\nДопоможи Фермерці дістатися до гарбуза та забрати його.",
        "courseE_farmer_functions1a_2021": "\\_\"Дивись, овочі з'являються всюди!\"\n\nТепер допоможи фермерці зібрати всю кукурудзу на шляху до гарбуза в самому кінці.\n\n* * *\n\n##### Примітка: У кожній клітинці на шляху до гарбуза є або **1** кукурудза, або взагалі нічого.  Використовуй функцію `перевірити, чи є кукурудза` та переконайся, що збираємо усе.",
        "courseE_farmer_functions2b_2021": "Використовуй цю функцію, щоб допомогти фермерці зібрати кукурудзу та гарбузи.\n\n* * *\n\n##### З кожного паростка виросте або одна кукурудза, або нічого.",
        "courseE_farmer_functions2ba_2021": "_\"Я почуваюся такою функціональною!\"_\n\nТепер на кожній ділянці є кілька гарбузів!  Уважно переглянь визначення функцій нижче, щоб зрозуміти, як використовувати кожну з них.\n\n* * *\n\n##### Кожен паросток дасть або _одну_ кукурудзу, або нічого.",
        "courseE_farmer_functions3c1_2021": "В останньому завданні було багато повторюваного коду, чи не так?  Ми можемо заощадити місце, назвавши цей код `збирати по шляху`, та використати нову функцію для виклику інших функцій!\n\nВикористовуй блок `збирати по шляху` та виконай завдання ще раз, застосовуючи меншу кількість блоків. ",
        "courseE_farmer_functions3c_2021": "Чудово! Спробуй свої функції на довшій стежці.",
        "courseE_farmer_functions7a1_2021": "_\"Функції допомагають робити більше меншими зусиллями!\"_\n\nСтвори функцію, яка відправляє фермерку по квадратному шляху, щоб зібрати один салат з середини кожного рядку.",
        "courseE_farmer_functions8a1_2021": "Спробуй написати функцію ще раз. Вона все ще корисна?  Як зробити так, щоб вона працювала для цього завдання?",
        "courseE_farmer_functions9a1_2021": "**Це завдання - лабіринт!**\n\nТвоя функція все ще корисна для цього завдання?",
        "courseE_farmer_ramp11a_2021": "О, Боже!  Ця купа така велика, що важко зрозуміти, скільки в ній бруду.  \n\n* * *\n\nМи додали новий блок до панелі інструментів, який називається `поки є купа`.  Використовуй його для видалення бруду, поки його можна буде зачерпнути!",
        "courseE_farmer_ramp11b_2021": "Спробуй ще раз, але з більшою кількістю куп!",
        "courseE_farmer_ramp12_forswap_2021": "Збери увесь салат.",
        "courseE_farmer_ramp12b_2021": "Тепер фермерці потрібно зібрати весь салат.  Використовуй `поки є салат` всередині циклу `повторити` та збери увесь салат!",
        "courseE_farmer_ramp12c_2021": "Тепер салат знаходиться лише в кінці стежки.\\\nЙди стежкою **доки** не дійдеш до салату, а потім продовжуй збирати його, **поки** не збереш увесь.",
        "courseE_farmer_ramp12d_2021": "Салат розкиданий по всьому саду.\\\nЙди кожною стежкою, поки не дійдеш до салату, а потім продовжуй збирати його, **поки** не збереш увесь.",
        "courseE_farmer_ramp12e_2021": "Салат розкиданий по всьому саду.\\\nЙди кожною стежкою, поки не дійдеш до салату, а потім продовжуй збирати його, **поки** не збереш увесь.",
        "courseE_farmer_ramp12f_2021": "**Завдання**: Єдиний спосіб зібрати весь врожай - це рухатися вперед, доки не дійдеш до салату, а потім повернути ліворуч, **якщо** там є стежка ліворуч.  В іншому випадку, поверни праворуч.",
        "courseE_farmer_while1_2021": "Рухайся вперед, поки не дійдеш до салату, потім поверни ліворуч **якщо** там є стежка ліворуч.  В іншому випадку поверни праворуч.",
        "courseE_playLab_challenge1": "_**Білки** нажахані, побачивши, що **динозавр** прийшов до міста! Чи зможе хоробрий **лицар** врятувати їх усіх від паніки?_ \n\nПравила: \n\n1.  _Доторкнувшись до білок, ви отримуєте бали._ \n2.  _Дотик до динозавра забирає багато балів._ \n\nОсь інша гра, яка вже розпочалась! Пограйте, щоб побачити, як це працює. \n\nЩось має статися, коли ви отримаєте достатньо балів або коли вони скінчаться. Додайте деякий код до функцій «виграти гру» та «програти», щоб гра працювала так, як вона має. \nНатисніть на підказки, щоб отримати ідеї!",
        "courseF_apps_aquarium": "** Віртуальний акваріум**\n\nНаповни власний унікальний акваріум різними предметами з їх власними моделями поведінки.",
        "courseF_apps_aquarium_-2022-2": "** Віртуальний акваріум**\n\nНаповни власний унікальний акваріум різними предметами з їх власними моделями поведінки.",
        "courseF_apps_card": "**Індивідуальна вітальна листівка**\n\nЦя програма поставить тобі кілька питань, а потім створить для тебе персональне привітання з днем народження!",
        "courseF_apps_card_-2022-2": "**Індивідуальна вітальна листівка**\n\nЦя програма поставить тобі кілька питань, а потім створить для тебе персональне привітання з днем народження!",
        "courseF_apps_chatbot": "**Чат-бот**\n\nЦей робот буде ставити запитання та запам'ятовувати введені дані! Вводь відповіді та спілкуйся з X-9!",
        "courseF_apps_chatbot_-2022-2": "**Чат-бот**\n\nЦей робот буде ставити запитання та запам'ятовувати введені дані! Вводь відповіді та спілкуйся з X-9!",
        "courseF_apps_collector": "**Велика гра колекціонування**\n\nЦе три гри в одній! Вибери персонаж, а потім використовуй клавіші зі стрілками, щоб зібрати всі предмети.",
        "courseF_apps_collector_-2022-2": "**Велика гра колекціонування**\n\nЦе три гри в одній! Вибери персонаж, а потім використовуй клавіші зі стрілками, щоб зібрати всі предмети.",
        "courseF_apps_madlib": "**Історія з порожніми конвертами**\n\nЦя програма попросить тебе ввести кілька слів, а потім, використовуючи їх, розповість тобі жартівливу історію!",
        "courseF_apps_madlib_-2022-2": "**Історія з порожніми конвертами**\n\nЦя програма попросить тебе ввести кілька слів, а потім, використовуючи їх, розповість тобі жартівливу історію!",
        "courseF_apps_pet": "**Віртуальний домашній улюбленець**\n\nПеретягни предмети до собаки та спостерігай за його реакцією!",
        "courseF_apps_pet_-2022-2": "**Віртуальний домашній улюбленець**\n\nПеретягни предмети до собаки та спостерігай за його реакцією!",
        "courseF_artist_for10_2021": "**Вільна гра:** спробуй використати змінну `лічильник` з іншими елементами малювання, щоб створити чарівні зображення, подібні до цього.\n\n![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)",
        "courseF_artist_for1_2021": "**Вільна гра:** Поекспериментуй з циклом `для кожного` та пограйся зі змінною `лічильника`.  \n\nВитягни кілька блоків та подивись що станеться.",
        "courseF_artist_for5a2022": "Цикли для кожного чудово підходять для створення спіралей разом з художником. Спробуй прямо зараз!\n\n## Виконай наступне\n\n-   Додай блок для руху вперед - за допомогою змінної `лічильник`.\n-   Додай блок повороту.",
        "courseF_artist_for5a_2021": "Цикли для кожного чудово підходять для створення спіралей разом з художником. Спробуй прямо зараз!\n\n## Виконай наступне\n\n-   Додай блок для руху вперед - за допомогою змінної `лічильник`.\n-   Додай блок повороту.",
        "courseF_artist_for6_2021": "Якщо повертати трохи більше або менше, ніж зазвичай потрібно для фігури, створюється дуже цікавий ефект. \n\nВідтвори код з останнього рівня, але поверни його на 89 градусів, щоб створити цю закручену квадратну спіраль.",
        "courseF_artist_for7_2021": "Зроби три невеличкі виправлення в коді останнього рівня, щоб розв'язати це завдання!  ",
        "courseF_artist_for9_2021": "**Натхнення:** Використовуй лічильник всередині блоку `встановити альфа`, щоб отримати на кшталт напівстертого центру.\n(Цей шестикутник було створено за допомогою повороту на 60 градусів).",
        "courseF_artist_for_challenge1_2021": "Чи можеш здогадатись, як відтворити цей малюнок?\n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\" width=\"350px\"/>",
        "courseF_artist_for_challenge2_2021": "Чи можеш здогадатись, як відтворити цей малюнок за допомогою одного циклу?\n\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\" width=\"350px\"/>",
        "courseF_artist_variables102022": "Ось твій код з останнього завдання.  Спробуй відредагувати змінну іншим чином.\n\n-   Що станеться, якщо ти почнеш зі значення `довжини`, менше 150? \n-   Що станеться, якщо змінити `довжину` на число більше або менше 10?\n-   Що станеться, якщо повернути на 119 або 121 градус?",
        "courseF_artist_variables10_2021": "Ось твій код з останнього завдання.  Спробуй відредагувати змінну іншим чином.\n\n-   Що станеться, якщо ти почнеш зі значення `довжини`, менше 150? \n-   Що станеться, якщо змінити `довжину` на число більше або менше 10?\n-   Що станеться, якщо повернути на 119 або 121 градус?",
        "courseF_artist_variables7_2021": "Почнемо цей розділ з малюнка трикутника зі сторонами 150 пікселів. \n\nОбов'язково використовуй змінну `довжина` та цикл повторення.",
        "courseF_artist_variables82022": "Перебудуй код трикутника з попереднього завдання, але цього разу додай новий блок, щоб додавати 10 до `довжини` кожного разу, коли цикл завершується.\n\n<xml>\n<block type=\"math_change\">\n      <title name=\"VAR\">length</title>\n      <value name=\"DELTA\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">???</title>\n        </block>\n      </value>\n    </block>\n</xml>\n\nДовжина першої сторони трикутника дорівнює 150 пікселів.",
        "courseF_artist_variables8_2021": "Перебудуй код трикутника з попереднього завдання, але цього разу додай новий блок, щоб додавати 10 до `довжини` кожного разу, коли цикл завершується.\n\n<xml>\n<block type=\"math_change\">\n      <title name=\"VAR\">length</title>\n      <value name=\"DELTA\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">???</title>\n        </block>\n      </value>\n    </block>\n</xml>\n\nДовжина першої сторони трикутника дорівнює 150 пікселів.",
        "courseF_artist_variables9_2021": "Час створити справжній шедевр!  \n\nСпробуй повторити код з попереднього завдання не 3, а **30** разів!  \n\nНе бійся робити лінії будь-якого кольору або візерунку, щоб надати їм додаткової родзинки.",
        "courseF_artist_variablesFP_2021": "**Вільна гра:** Використовуй вивчене та створи свій власний малюнок.\n\nЯк можна використовувати змінні з квадратами, п'ятикутниками або шестикутниками?",
        "courseF_bee1": "Ця квітка виглядає апетитно!\n\nТепер використовуй блок `повторити`, щоб швидко переміститися до квітки та зібрати нектар.",
        "courseF_bee2": "Можеш використати цикл для того, щоб зібрати весь нектар?",
        "courseF_bee_for10_2021": "**Завдання:** Використовуй все, що ми дізнались про цикли `для кожного`, та спробуй виконати це завдання.\n\nПам'ятай: можливо, тобі доведеться переглянути рішення кілька разів, перш ніж ти зрозумієш усі кроки.",
        "courseF_bee_for11_2021": "Якщо цикл рахує у зворотньому напрямку, крок **віднімається** від змінної лічильника щоразу при виконанні циклу. \n\nЯким має бути крок, щоб зібрати 15, потім 12, потім 9, 6, 3 нектару?",
        "courseF_bee_for2_2021": "Напиши код, який допоможе бджолі зібрати весь нектар.\n\nДля цього тобі знадобиться багато блоків, але у наступному завданні ми дізнаємось простіший спосіб.",
        "courseF_bee_for2a2022": "Використовуй новий спосіб написання подібного коду. У цьому коді використовується цикл \"для кожного\". Подивись уважно, чим він схожий або відрізняється від коду, який ти писав раніше. Ти навіть можеш поміняти місцями новий код нижче або старий код - він працює так само!",
        "courseF_bee_for2a_2021": "Використовуй новий спосіб написання подібного коду. У цьому коді використовується цикл \"для кожного\". Подивись уважно, чим він схожий або відрізняється від коду, який ти писав раніше. Ти навіть можеш поміняти місцями новий код нижче або старий код - він працює так само!",
        "courseF_bee_for5_2021": "Використовуй змінну `лічильник` двічі при виконанні цього завдання.",
        "courseF_bee_for6_2021": "Цикл `для кожного` можна використовувати для зворотного відліку. \n\nСпробуй зібрати нектар, рахуючи від **5** до **1** **по одному**.",
        "courseF_bee_for7_2021": "Останнє число у циклі `для кожного` називається **\"кроком\"**.  Кожного разу, коли виконується цикл, значення змінної лічильника змінюється на значення **кроку**.\n\nСпробуй зібрати ці квіти, використовуючи **крок**, рівний 2.",
        "courseF_bee_for8_2021": "Все правильно! \n\nЯкий має бути **крок**, щоб зібрати 3, 6, 9, 12, 15 нектарів?",
        "courseF_bee_for9_2021": "Тепер об'єднаємо змінну `лічильник` з блоком `математика`! \n\nЯк можна використати змінну `лічильник` для навігації цим садом з найменшою кількістю блоків?",
        "courseF_bee_for_challenge1_2021": "Ти можеш використати цей цикл `для кожного`, щоб зібрати весь нектар. Неймовірно!\n\nЄ кілька дій, які ти захочеш `повторити`, для кожного значення `лічильника`.",
        "courseF_bee_for_challenge2": "Розв'язуй це завдання за допомогою найменшої можливої кількості блоків.",
        "courseF_bee_for_challenge22022": "Розв'язуй це завдання за допомогою найменшої можливої кількості блоків.",
        "courseF_bee_for_challenge2_2018": "Розв'язуй це завдання за допомогою найменшої можливої кількості блоків.",
        "courseF_bee_for_challenge2_2019": "Розв'язуй це завдання за допомогою найменшої можливої кількості блоків.",
        "courseF_bee_for_challenge2_2020": "Розв'язуй це завдання за допомогою найменшої можливої кількості блоків.",
        "courseF_bee_for_challenge2_2021": "Розв'язуй це завдання за допомогою найменшої можливої кількості блоків.",
        "courseF_bee_functions_challenge1": "Створіть нову функцію, щоб збирати весь нектар і мед, поки попереду є шлях. Використовуйте його, щоб завершити головоломку! ",
        "courseF_bee_functions_challenge2": "Використовуйте все, чому навчилися, щоб завершити цю головоломку! ",
        "courseF_bee_variables_0a2022": "Збери весь мед та зроби весь нектар!",
        "courseF_bee_variables_0a_2021": "Збери весь мед та зроби весь нектар!",
        "courseF_bee_variables_2a2022": "Зміни початкове значення змінної так, щоб бджола змогла зібрати весь мед та нектар.",
        "courseF_bee_variables_2a_2021": "Зміни початкове значення змінної так, щоб бджола змогла зібрати весь мед та нектар.",
        "courseF_bee_variables_3a2022": "Це завдання виконується за тією ж схемою, але з додаванням четвертого шляху. Додай одиницю до кількості повторень основного циклу, щоб продовжити малюнок.",
        "courseF_bee_variables_3a_2021": "Це завдання виконується за тією ж схемою, але з додаванням четвертого шляху. Додай одиницю до кількості повторень основного циклу, щоб продовжити малюнок.",
        "courseF_bee_variables_3aa2022": "У цьому завданні кожна ділянка знаходиться на одну клітинку далі та має на одну клітинку більше нектару, що дає змогу зробити ще один мед. Додавай 1 до змінної кожного разу, коли проходиш цикл.",
        "courseF_bee_variables_3aa_2021": "У цьому завданні кожна ділянка знаходиться на одну клітинку далі та має на одну клітинку більше нектару, що дає змогу зробити ще один мед. Додавай 1 до змінної кожного разу, коли проходиш цикл.",
        "courseF_bee_variables_4a2022": "_У чому різниця цього разу?_\n\nУ минулій парі завдань нам потрібно було змінювати змінну на одиницю для кожної нової ділянки. Цього разу кожна ділянка розташована на дві клітинки далі, і на ній потрібно зібрати на два нектари більше та зробити на два меду більше.",
        "courseF_bee_variables_4a_2021": "_У чому різниця цього разу?_\n\nУ минулій парі завдань нам потрібно було змінювати змінну на одиницю для кожної нової ділянки. Цього разу кожна ділянка розташована на дві клітинки далі, і на ній потрібно зібрати на два нектари більше та зробити на два меду більше.",
        "courseF_bee_variables_5a2022": "Допиши код та виконай це завдання.\n\n-   Яким має бути значення змінної на початку?\n-   Скільки разів потрібно виконати головний цикл?\n-   На скільки потрібно змінювати значення змінної кожного разу?",
        "courseF_bee_variables_5a_2021": "Допиши код та виконай це завдання.\n\n-   Яким має бути значення змінної на початку?\n-   Скільки разів потрібно виконати головний цикл?\n-   На скільки потрібно змінювати значення змінної кожного разу?",
        "courseF_bee_variables_5b2022": "Створи свій власний код, щоб вирішити це завдання.",
        "courseF_bee_variables_5b_2021": "Створи свій власний код, щоб вирішити це завдання.",
        "courseF_bee_variables_6c2022": "Ти впізнаєш цей шаблон \"сходів\" з інших уроків? Спробуй виконати це завдання!",
        "courseF_bee_variables_6c_2021": "Ти впізнаєш цей шаблон \"сходів\" з інших уроків? Спробуй виконати це завдання!",
        "courseF_bee_variables_7a_2021": "Це завдання дещо інше.  Що потрібно зробити, щоб його розв'язати?",
        "courseF_editable_card": "# Індивідуальна вітальна листівка\n\nЦя програма поставить кілька питань, а потім створить для тебе індивідуальне вітальне повідомлення!\n\n## Виконай наступне\n* Пограйся з програмою для створення вітальних листівок.\n* Прочитай код, щоб побачити, як він працює. Ти навіть можеш вносити зміни!\n* Коли захочеш переглянути наступний приклад проєкту, натисни кнопку \"Завершити\".",
        "courseF_editable_card_-2022-2": "# Індивідуальна вітальна листівка\n\nЦя програма поставить кілька питань, а потім створить для тебе індивідуальне вітальне повідомлення!\n\n## Виконай наступне\n* Пограйся з програмою для створення вітальних листівок.\n* Прочитай код, щоб побачити, як він працює. Ти навіть можеш вносити зміни!\n* Коли захочеш переглянути наступний приклад проєкту, натисни кнопку \"Завершити\".",
        "courseF_editable_chatbot": "# Чат-бот\n\nЦей робот буде ставити запитання та запам'ятовувати введені дані! Вводь відповіді та спілкуйся з роботом!\n\n## Виконай наступне:\n* Пограй з чат-ботом.\n* Прочитай код, щоб зрозуміти, як він працює. Ти навіть можеш вносити зміни!\n* Коли захочеш розглянути наступний приклад проєкту, натисни \"Завершити\".",
        "courseF_editable_chatbot_-2022-2": "# Чат-бот\n\nЦей робот буде ставити запитання та запам'ятовувати введені дані! Вводь відповіді та спілкуйся з роботом!\n\n## Виконай наступне:\n* Пограй з чат-ботом.\n* Прочитай код, щоб зрозуміти, як він працює. Ти навіть можеш вносити зміни!\n* Коли захочеш розглянути наступний приклад проєкту, натисни \"Завершити\".",
        "courseF_editable_madlib": "# Історія з порожніми конвертами\n\nЦя програма запропонує тобі ввести кілька слів, а потім, використовуючи їх, розповість тобі кумедну історію!\n\n## Виконай наступне\n* Пограйся з програмою для створення історії з порожніми конвертами.\n* Прочитай код, щоб побачити, як він працює. Ти навіть можеш вносити зміни!\n* Коли захочеш почати наступну частину уроку, натисни кнопку \"Завершити\".",
        "courseF_editable_madlib_-2022-2": "# Історія з порожніми конвертами\n\nЦя програма запропонує тобі ввести кілька слів, а потім, використовуючи їх, розповість тобі кумедну історію!\n\n## Виконай наступне\n* Пограйся з програмою для створення історії з порожніми конвертами.\n* Прочитай код, щоб побачити, як він працює. Ти навіть можеш вносити зміни!\n* Коли захочеш почати наступну частину уроку, натисни кнопку \"Завершити\".",
        "courseF_events_choice_conflict": "# Зроби бочку\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/08b3e8a6ed02260555675174a0a41c13-image-1611354854787.2021-01-22 17_33_41.gif>)\n\n</div>\n\nЗроби так, щоб спрайт літака почав крутитися вліво при натисканні однієї клавіші та вправо при натисканні іншої. \n\nПригадуєш цей блок?\n\n<xml><block type=\"gamelab_removeBehaviorSimple\"><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"creature_18_1\"</title></block></value></block></xml>\n\n## Виконай наступне:\n\n-   Уважно прочитай код нижче.\n-   Запусти код та натисни обидві стрілки, щоб побачити, що станеться.\n    <details><summary><strong>В чому полягає баг?</strong></summary>Коли ти натискаєш першу клавішу зі стрілкою, літак починає крутитися, але програма зупиняється, коли ти натискаєш другу клавішу зі стрілкою.</details>\n-   Додай блок `спрайт припиняє` під кожною подією.\n-   Використовуй цей блок, щоб зупинити протилежну модель поведінки.\n\n_Тепер спрайт має крутитися в будь-якому напрямку при натисканні кожної клавіші зі стрілками._",
        "courseF_events_choice_conflict2": "# Зменшуйся та збільшуйся\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/ee8148a40007249560471e6a99b537e3-image-1611697250512.2021-01-26 16_38_41.gif>)\n\n</div>\n\nЗроби так, щоб спрайт почав зменшуватися при натисканні однієї клавіші та збільшуватися при натисканні іншої. \n\nПригадуєш цей блок?\n\n<xml><block type=\"gamelab_removeBehaviorSimple\"><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"creature_05_1\"</title></block></value></block></xml>\n\n## Виконай наступне:\n\n-   Уважно прочитай код нижче.\n-   Запусти код та натисни обидві стрілки, щоб побачити, що станеться.\n    <details><summary><strong>У чому полягає баг?</strong></summary>Коли ти натискаєш клавішу зі стрілкою, спрайт починає одну модель поведінки. Коли ти натискаєш другу клавішу зі стрілкою, спрайт ніби перестає реагувати.</details>\n-   Додай блок `спрайт припиняє` під кожною подією.\n-   Використовуй цей блок, щоб зупинити протилежну модель поведінки.\n\n_Тепер спрайт має зменшуватися або збільшуватися при натисканні кожної клавіші зі стрілками._",
        "courseF_events_choice_conflict2_-2022-2": "# Зменшуйся та збільшуйся\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/ee8148a40007249560471e6a99b537e3-image-1611697250512.2021-01-26 16_38_41.gif>)\n\n</div>\n\nЗроби так, щоб спрайт почав зменшуватися при натисканні однієї клавіші та збільшуватися при натисканні іншої. \n\nПригадуєш цей блок?\n\n<xml><block type=\"gamelab_removeBehaviorSimple\"><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"creature_05_1\"</title></block></value></block></xml>\n\n## Виконай наступне:\n\n-   Уважно прочитай код нижче.\n-   Запусти код та натисни обидві стрілки, щоб побачити, що станеться.\n    <details><summary><strong>У чому полягає баг?</strong></summary>Коли ти натискаєш клавішу зі стрілкою, спрайт починає одну модель поведінки. Коли ти натискаєш другу клавішу зі стрілкою, спрайт ніби перестає реагувати.</details>\n-   Додай блок `спрайт припиняє` під кожною подією.\n-   Використовуй цей блок, щоб зупинити протилежну модель поведінки.\n\n_Тепер спрайт має зменшуватися або збільшуватися при натисканні кожної клавіші зі стрілками._",
        "courseF_events_choice_conflict_-2022-2": "# Зроби бочку\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/08b3e8a6ed02260555675174a0a41c13-image-1611354854787.2021-01-22 17_33_41.gif>)\n\n</div>\n\nЗроби так, щоб спрайт літака почав крутитися вліво при натисканні однієї клавіші та вправо при натисканні іншої. \n\nПригадуєш цей блок?\n\n<xml><block type=\"gamelab_removeBehaviorSimple\"><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"creature_18_1\"</title></block></value></block></xml>\n\n## Виконай наступне:\n\n-   Уважно прочитай код нижче.\n-   Запусти код та натисни обидві стрілки, щоб побачити, що станеться.\n    <details><summary><strong>В чому полягає баг?</strong></summary>Коли ти натискаєш першу клавішу зі стрілкою, літак починає крутитися, але програма зупиняється, коли ти натискаєш другу клавішу зі стрілкою.</details>\n-   Додай блок `спрайт припиняє` під кожною подією.\n-   Використовуй цей блок, щоб зупинити протилежну модель поведінки.\n\n_Тепер спрайт має крутитися в будь-якому напрямку при натисканні кожної клавіші зі стрілками._",
        "courseF_events_choice_penguin": "# Коли і Поки натиснуто\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/a81a5d5487327d7783540239d87a988e-image-1611351171916.2021-01-22 16_31_44.gif>)\n\n</div>\n\nБлок <xml><block type=\"gamelab_keyPressed\"><title name=\"CONDITION\">when/while</title><title name=\"KEY\">???</title></block></xml> має дві важливі опції. Він може спрацьовувати \"коли\" клавіша натискається вперше (один раз) або \"поки\" клавішу натиснуто (знову і знову).\nНалаштування цього блоку на \"поки натиснуто\" може зробити твою інтерактивну анімацію швидшою та плавнішою. Блок подій `коли клавішу натиснуто` змушує спрайт рухатися за допомогою клавіш, але він здається повільним та неповоротким.\n\n## Виконай наступне:\n\n-   Запусти програму та натисни клавіші зі стрілками, щоб побачити, як рухається спрайт.\n-   Заміни кожен блок `коли клавішу натиснуто` на `поки клавішу натиснуто`, щоб зробити переміщення спрайта швидшим та плавнішим.",
        "courseF_events_choice_penguin_-2022-2": "# Коли і Поки натиснуто\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/a81a5d5487327d7783540239d87a988e-image-1611351171916.2021-01-22 16_31_44.gif>)\n\n</div>\n\nБлок <xml><block type=\"gamelab_keyPressed\"><title name=\"CONDITION\">when/while</title><title name=\"KEY\">???</title></block></xml> має дві важливі опції. Він може спрацьовувати \"коли\" клавіша натискається вперше (один раз) або \"поки\" клавішу натиснуто (знову і знову).\nНалаштування цього блоку на \"поки натиснуто\" може зробити твою інтерактивну анімацію швидшою та плавнішою. Блок подій `коли клавішу натиснуто` змушує спрайт рухатися за допомогою клавіш, але він здається повільним та неповоротким.\n\n## Виконай наступне:\n\n-   Запусти програму та натисни клавіші зі стрілками, щоб побачити, як рухається спрайт.\n-   Заміни кожен блок `коли клавішу натиснуто` на `поки клавішу натиснуто`, щоб зробити переміщення спрайта швидшим та плавнішим.",
        "courseF_events_choice_pufferfish": "# Коли і Поки натиснуто\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/ecd2788bd12f594a846de079ed22f484-image-1611328367728.2021-01-22 10_12_02.gif>)\n\n</div>\n\nБлок <xml><block type=\"gamelab_keyPressed\"><title name=\"CONDITION\">when/while</title><title name=\"KEY\">???</title></block></xml> має дві важливі опції. Він може спрацьовувати \"коли\" клавіша натискається вперше (один раз) або \"поки\" клавішу натиснуто (знову і знову).\nНалаштування цього блоку на \"поки натиснуто\" може зробити твою інтерактивну анімацію швидшою та плавнішою. Використовуй блок подій `коли/поки клавішу натиснуто` для багаторазової зміни розміру спрайта, коли користувач натискає клавішу.\n\n## Виконай наступне:\n\n-   Додай подію `коли/поки клавішу натиснуто` до свого робочого простору. Встанови для неї значення \"коли\" або \"поки\".\n-   Підключи до цієї події блок `змінити розмір`  при **дії**.\n-   Натисни клавіші зі стрілками на екрані або клавіатурі після натискання кнопки \"Запустити\".\n\n_Додаткове завдання:_ Зроби так, щоб спрайт збільшувався при натисканні кнопки \"вгору\" та зменшувався при натисканні кнопки \"вниз\".",
        "courseF_events_choice_pufferfish_-2022-2": "# Коли і Поки натиснуто\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/ecd2788bd12f594a846de079ed22f484-image-1611328367728.2021-01-22 10_12_02.gif>)\n\n</div>\n\nБлок <xml><block type=\"gamelab_keyPressed\"><title name=\"CONDITION\">when/while</title><title name=\"KEY\">???</title></block></xml> має дві важливі опції. Він може спрацьовувати \"коли\" клавіша натискається вперше (один раз) або \"поки\" клавішу натиснуто (знову і знову).\nНалаштування цього блоку на \"поки натиснуто\" може зробити твою інтерактивну анімацію швидшою та плавнішою. Використовуй блок подій `коли/поки клавішу натиснуто` для багаторазової зміни розміру спрайта, коли користувач натискає клавішу.\n\n## Виконай наступне:\n\n-   Додай подію `коли/поки клавішу натиснуто` до свого робочого простору. Встанови для неї значення \"коли\" або \"поки\".\n-   Підключи до цієї події блок `змінити розмір`  при **дії**.\n-   Натисни клавіші зі стрілками на екрані або клавіатурі після натискання кнопки \"Запустити\".\n\n_Додаткове завдання:_ Зроби так, щоб спрайт збільшувався при натисканні кнопки \"вгору\" та зменшувався при натисканні кнопки \"вниз\".",
        "courseF_events_conflict": "# Протилежні моделі поведінки\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/e14e29958df0ed8399c7fcabdbe6de73-image-1620323702476.gif)\n\n</div>\n\nДеякі моделі поведінки роблять протилежні речі, наприклад, `рух на схід` / `рух на захід`, `ріст` / `стиснення` або `обертання праворуч` / `обертання ліворуч`. Якщо спрайт має дві протилежні моделі поведінки, може здатися, що він взагалі нічого не робить. \n\n## Виконай наступне\n\n-   Запусти код та подивись, що станеться через 3 секунди.\n-   Додай блок `спрайт припиняє` під подією.\n-   Використовуй цей блок, щоб зупинити стару модель поведінки.\n\n_Тепер спрайт має обертатися в один бік, а потім в інший._",
        "courseF_events_conflict_-2022-2": "# Протилежні моделі поведінки\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/e14e29958df0ed8399c7fcabdbe6de73-image-1620323702476.gif)\n\n</div>\n\nДеякі моделі поведінки роблять протилежні речі, наприклад, `рух на схід` / `рух на захід`, `збільшення` / `стиснення` або `обертання праворуч` / `обертання ліворуч`. Якщо спрайт має дві протилежні моделі поведінки, може здатися, що він взагалі нічого не робить. \n\n## Виконай наступне\n\n-   Запусти код та подивись, що станеться через 3 секунди.\n-   Додай блок `спрайт припиняє` під подією.\n-   Використовуй цей блок, щоб зупинити стару модель поведінки.\n\n_Тепер спрайт має обертатися в один бік, а потім в інший._",
        "courseF_events_freeplay_air": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n* Додай події до своєї програми.\n* Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_air_-2022-2": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n\n-   Додай події до своєї програми.\n-   Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_animals": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n* Додай події до своєї програми.\n* Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_animals_-2022-2": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n\n-   Додай події до своєї програми.\n-   Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_aquatic": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n* Додай події до своєї програми.\n* Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_aquatic_-2022-2": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n\n-   Додай події до своєї програми.\n-   Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_blank": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n\n-   Додай події до своєї програми.\n-   Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_blank_-2022-2": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n\n-   Додай події до своєї програми.\n-   Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_food": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n* Додай події до своєї програми.\n* Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_food_-2022-2": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n\n-   Додай події до своєї програми.\n-   Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_space": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n* Додай події до своєї програми.\n* Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_freeplay_space_-2022-2": "# Вільна гра - Створи сцену\n\nЦе проєкт, який ми створили на минулому уроці. За допомогою подій можна зробити так, щоб різні речі відбувалися з плином часу або коли користувач натискає клавішу.\n\n## Виконай наступне\n\n-   Додай події до своєї програми.\n-   Додай код під кожною подією, щоб змінити спрайти, їхні властивості або моделі поведінки.",
        "courseF_events_key": "# Ключові події\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/634230a515f86dbf87780ec7a948aa84-image-1620757035231.2021-05-11 14_16_47.gif>)\n\n</div>\n\nПодії дозволяють створювати інтерактивні програми. Використовуй блок подій <xml><block type=\"gamelab_keyPressed\"><title name=\"CONDITION\">\"when\"</title><title name=\"KEY\">???</title></block></xml> для зміни _розміру_, _позиції_ або _режиму обертання_ спрайту, коли користувач натискає клавішу. \n\n## Виконай наступне\n\n-   Додай блок **подій** `при натисканні клавіші` до свого робочого простору.\n-   Під'єднай блок `змінити` під цією подією.\n-   Натисни клавіші зі стрілками на екрані або клавіатурі після натискання кнопки \"Запустити\".",
        "courseF_events_key_-2022-2": "# Ключові події\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/634230a515f86dbf87780ec7a948aa84-image-1620757035231.2021-05-11 14_16_47.gif>)\n\n</div>\n\nПодії дозволяють створювати інтерактивні програми. Використовуй блок подій <xml><block type=\"gamelab_keyPressed\"><title name=\"CONDITION\">\"when\"</title><title name=\"KEY\">???</title></block></xml> для зміни _розміру_, _позиції_ або _режиму обертання_ спрайту, коли користувач натискає клавішу. \n\n## Виконай наступне\n\n-   Додай блок **подій** `при натисканні клавіші` до свого робочого простору.\n-   Під'єднай блок `змінити` під цією подією.\n-   Натисни клавіші зі стрілками на екрані або клавіатурі після натискання кнопки \"Запустити\".",
        "courseF_events_practice_reorder": "# Налагодження - порядок має значення\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/b4bcc1189e8989642002b387cfc5fed8-image-1611261721470.2021-01-21 15_40_45.gif>)\n\n</div>\nУ цьому коді є помилка. \n\n## Виконай наступне:\n\n-   Запусти код та подивись, що станеться. Натисни нижче, щоб прочитати інформацію про помилку.\n    <details><summary>В чому полягає баг?</summary>Через 2 секунди птах має відлетіти. Натомість він зупиняється.</details>\n-   Зміни порядок коду під фразою \"через 2 секунди\" так, щоб спрайт зупиняв лише **стару** модель поведінки.",
        "courseF_events_practice_reorder_-2022-2": "# Налагодження - порядок має значення\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/b4bcc1189e8989642002b387cfc5fed8-image-1611261721470.2021-01-21 15_40_45.gif>)\n\n</div>\nУ цьому коді є помилка. \n\n## Виконай наступне:\n\n-   Запусти код та подивись, що станеться. Натисни нижче, щоб прочитати інформацію про помилку.\n    <details><summary>В чому полягає баг?</summary>Через 2 секунди птах має відлетіти. Натомість він зупиняється.</details>\n-   Зміни порядок коду під фразою \"через 2 секунди\" так, щоб спрайт зупиняв лише **стару** модель поведінки.",
        "courseF_events_predict": "Зроби прогноз! Дізнайся код.\n\n-   Спрайт буде просто крутитися вправо.\n-   Спрайт буде просто рухатися на схід.\n-   Спрайт буде обертатися та рухатися одночасно.\n-   Спрайт спочатку обертатиметься, а потім рухатиметься.",
        "courseF_events_predict_-2022-2": "Зроби прогноз! Дізнайся код.\n\n-   Спрайт буде просто крутитися вправо.\n-   Спрайт буде просто рухатися на схід.\n-   Спрайт буде обертатися та рухатися одночасно.\n-   Спрайт спочатку обертатиметься, а потім рухатиметься.",
        "courseF_events_review": "# Швидкий огляд\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nУ цьому уроці ми продовжимо працювати зі спрайтами та моделями поведінки. Спочатку давай попрактикуємо те, чого ми навчилися на попередньому уроці.\n\n## Виконай наступне\n\n-   Створи спрайт.\n-   Встанови розмір спрайта.\n-   Розпочни будь-яку модель поведінки.",
        "courseF_events_review_-2022-2": "# Швидкий огляд\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nУ цьому уроці ми продовжимо працювати зі спрайтами та моделями поведінки. Спочатку давай попрактикуємо те, чого ми навчилися на попередньому уроці.\n\n## Виконай наступне\n\n-   Створи спрайт.\n-   Встанови розмір спрайта.\n-   Розпочни будь-яку модель поведінки.",
        "courseF_events_ship": "# Вибух!\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/6a56375157dd2aabfb255e29cd717cbc-image-1611082032886.2021-01-19 13_46_53.gif>)\n\n</div>\n\nЦей корабель готовий вирушати! Використовуй подію <xml><block type=\"gamelab_atTime\"><title name=\"UNIT\">\"seconds\"</title><value name=\"N\"><block type=\"math_number\"><title name=\"NUM\">8</title></block></value></block></xml>, щоб змусити корабель почати рухатися вперед через 8 секунд.\n\n## Виконай наступне\n\n-   Додай блок подій `через 8 секунд` до свого робочого простору.\n-   Під'єднай блок `спрайт починає` до цієї події.\n-   Налаштуй поведінку спрайту, щоб він \"вибухнув\" (перемістився праворуч) на екрані через 8 секунд.",
        "courseF_events_ship_-2022-2": "# Вибух!\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/6a56375157dd2aabfb255e29cd717cbc-image-1611082032886.2021-01-19 13_46_53.gif>)\n\n</div>\n\nЦей корабель готовий вирушати! Використовуй подію <xml><block type=\"gamelab_atTime\"><title name=\"UNIT\">\"seconds\"</title><value name=\"N\"><block type=\"math_number\"><title name=\"NUM\">8</title></block></value></block></xml>, щоб змусити корабель почати рухатися вперед через 8 секунд.\n\n## Виконай наступне\n\n-   Додай блок подій `через 8 секунд` до свого робочого простору.\n-   Під'єднай блок `спрайт починає` до цієї події.\n-   Налаштуй поведінку спрайту, щоб він \"вибухнув\" (перемістився праворуч) на екрані через 8 секунд.",
        "courseF_events_stops": "# Зміна моделей поведінки\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/e8fb3a35b67a47a68b385757ee3e3d1b-image-1620315482272.gif)\n\n</div>\n\nЯкщо ти хочеш переключитися з однієї поведінки на іншу, тобі потрібно одночасно _зупинити_ стару модель поведінки і _почати_ нову модель поведінки. Ти можеш використовувати новий блок, щоб змусити спрайти припинити поточну модель поведінки.\n\n<xml><block type=\"gamelab_removeBehaviorSimple\"><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"creature_12_1\"</title></block></value></block></xml>\n\nТобі потрібно підключити модель поведінки до цього блоку, наприклад, `рух на схід`.\n\n## Виконай наступне\n\n-   Запусти код та подивись, що станеться.\n-   Додай модель поведінки до кожного блоку `припинини` та `почати`, щоб спрайт змінював рух на схід на рух на захід кожні 2 секунди.",
        "courseF_events_stops_-2022-2": "# Зміна моделей поведінки\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/e8fb3a35b67a47a68b385757ee3e3d1b-image-1620315482272.gif)\n\n</div>\n\nЯкщо ти хочеш переключитися з однієї поведінки на іншу, тобі потрібно одночасно _зупинити_ стару модель поведінки і _почати_ нову модель поведінки. Ти можеш використовувати новий блок, щоб змусити спрайти припинити поточну модель поведінки.\n\n<xml><block type=\"gamelab_removeBehaviorSimple\"><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"creature_12_1\"</title></block></value></block></xml>\n\nТобі потрібно підключити модель поведінки до цього блоку, наприклад, `рух на схід`.\n\n## Виконай наступне\n\n-   Запусти код та подивись, що станеться.\n-   Додай модель поведінки до кожного блоку `припинини` та `почати`, щоб спрайт змінював рух на схід на рух на захід кожні 2 секунди.",
        "courseF_events_time": "# Заплановані події\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/d1a2e1e947432f80d615fcbd5d17f5f0-image-1620756663920.2021-05-11 14_09_23.gif>)\n\n</div>\n\nПодії дозволяють легко змінювати те, що відбувається з часом під час роботи програми. Використовуй подію <xml><block type=\"gamelab_atTime\"><title name=\"UNIT\">\"seconds\"</title><value name=\"N\"><block type=\"math_number\"><title name=\"NUM\">???</title></block></value></block></xml>, щоб змусити спрайт почати нову модель поведінки через деякий час.\n\n## Виконай наступне\n\n-   Додай блок подій `на 3 секунді` до свого робочого простору.\n-   Під'єднай блок `спрайт починає` під цією подією.\n\nСпрайт повинен почати другу модель поведінки після того, як пройде деякий час.",
        "courseF_events_time_-2022-2": "# Заплановані події\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/d1a2e1e947432f80d615fcbd5d17f5f0-image-1620756663920.2021-05-11 14_09_23.gif>)\n\n</div>\n\nПодії дозволяють легко змінювати те, що відбувається з часом під час роботи програми. Використовуй подію <xml><block type=\"gamelab_atTime\"><title name=\"UNIT\">\"seconds\"</title><value name=\"N\"><block type=\"math_number\"><title name=\"NUM\">???</title></block></value></block></xml>, щоб змусити спрайт почати нову модель поведінки через деякий час.\n\n## Виконай наступне\n\n-   Додай блок подій `на 3 секунді` до свого робочого простору.\n-   Під'єднай блок `спрайт починає` під цією подією.\n\nСпрайт повинен почати другу модель поведінки після того, як пройде деякий час.",
        "courseF_label_predict": "Зроби прогноз! Досліди код.",
        "courseF_label_predict_-2022-2": "Зроби прогноз! Досліди код.",
        "courseF_place_fruit": "# Розміри спрайтів\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/f9b425ca22fea885936155bc772e9c5b-image-1610393644593.png)\n\n</div>\n\nКод для створення спрайтів полуниці та банана наведено нижче, але спрайти мають неправильний розмір. Зміни розмір спрайтів так, щоб банан був більшим за полуницю.\n\n## Виконай наступне\n\n-   Додай до програми два блоки `встановити розмір`.\n    <details><summary>Де цей блок?</summary>Цей блок знаходиться в категорії <strong>Спрайти</strong> набору інструментів. <xml><block type=\"gamelab_setProp\"><title name=\"PROPERTY\">\"scale\"</title><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"face_strawberry_1\"</title></block></value><value name=\"VAL\"><block type=\"math_number\"><title name=\"NUM\">50</title></block></value></block></xml></details>\n\n-   Зроби спрайт полуниці меншим.\n\n-   Зроби спрайт банана більшим.\n\n_Підказка:_ Розмір за замовчуванням дорівнює 100.",
        "courseF_place_fruit_-2022-2": "# Розміри спрайтів\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/f9b425ca22fea885936155bc772e9c5b-image-1610393644593.png)\n\n</div>\n\nКод для створення спрайтів полуниці та банана наведено нижче, але спрайти мають неправильний розмір. Зміни розмір спрайтів так, щоб банан був більшим за полуницю.\n\n## Виконай наступне\n\n-   Додай до програми два блоки `встановити розмір`.\n    <details><summary>Де цей блок?</summary>Цей блок знаходиться в категорії <strong>Спрайти</strong> набору інструментів. <xml><block type=\"gamelab_setProp\"><title name=\"PROPERTY\">\"scale\"</title><value name=\"SPRITE\"><block type=\"gamelab_allSpritesWithAnimation\"><title name=\"ANIMATION\">\"face_strawberry_1\"</title></block></value><value name=\"VAL\"><block type=\"math_number\"><title name=\"NUM\">50</title></block></value></block></xml></details>\n\n-   Зроби спрайт полуниці меншим.\n\n-   Зроби спрайт банана більшим.\n\n_Підказка:_ Розмір за замовчуванням дорівнює 100.",
        "courseF_sprites_behaviors": "# Моделі поведінки\n\nСпрайти можуть мати власну модель поведінки, тобто дії, які вони будуть виконувати знову і знову під час роботи програми. Для встановлення моделі поведінки спрайта потрібно використати блок `спрайт починає` за допомогою блоку моделі поведінки. \n\n## Виконай наступне\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/ac030c60d57bbd99a914a461ae7954c5-image-1620755724076.2021-05-11 13_50_10.gif>)![expandable](<https://images.code.org/a042358d4daaefe899ab0adffc6e5926-image-1620755732981.2021-05-11 13_49_06.gif>)![expandable](<https://images.code.org/4c2490af65d936501186341a6f87b623-image-1620755737576.2021-05-11 13_47_28.gif>)\n\n</div>\n\n-   Перетягни блок `спрайт починає` з категорії **Моделі поведінки** на панелі інструментів.\n\n-   Перетягни зелений блок моделі поведінки. Поєднай блоки у своєму робочому просторі.\n\n-   Натисни кнопку \"Запустити\", щоб побачити, що буде відбуватися.\n\n-   Досліди різні моделі поведінки, щоб побачити, що вони будуть робити.\n\n-   _Завдання:_ Зроби так, щоб спрайт почав виконувати дві різні моделі поведінки одночасно.",
        "courseF_sprites_behaviors_-2022-2": "# Моделі поведінки\n\nСпрайти можуть мати власну модель поведінки, тобто дії, які вони будуть виконувати знову і знову під час роботи програми. Для встановлення моделі поведінки спрайта потрібно використати блок `спрайт починає` за допомогою блоку моделі поведінки. \n\n## Виконай наступне\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/ac030c60d57bbd99a914a461ae7954c5-image-1620755724076.2021-05-11 13_50_10.gif>)![expandable](<https://images.code.org/a042358d4daaefe899ab0adffc6e5926-image-1620755732981.2021-05-11 13_49_06.gif>)![expandable](<https://images.code.org/4c2490af65d936501186341a6f87b623-image-1620755737576.2021-05-11 13_47_28.gif>)\n\n</div>\n\n-   Перетягни блок `спрайт починає` з категорії **Моделі поведінки** на панелі інструментів.\n\n-   Перетягни зелений блок моделі поведінки. Поєднай блоки у своєму робочому просторі.\n\n-   Натисни кнопку \"Запустити\", щоб побачити, що буде відбуватися.\n\n-   Досліди різні моделі поведінки, щоб побачити, що вони будуть робити.\n\n-   _Завдання:_ Зроби так, щоб спрайт почав виконувати дві різні моделі поведінки одночасно.",
        "courseF_sprites_clouds": "# Прохолодний день\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/bd7f7bb8b6e56028ad7f6c7ef8ac7eb8-image-1610401074711.gif)\n\n</div>\n\nКод для створення спрайтів вже задано. Додай його до цієї програми, щоб створити для кожного спрайту певну модель поведінки.\n\n## Виконай наступне\n\n-   Додай блок `спрайт починає` для кожного костюма спрайта у програмі.\n-   Вибери моделі поведінки для кожного спрайта:\n    -   Створи хмару, яка рухається по екрану.\n    -   Створи сонце, яке обертається.\n    -   Створи метелика, який літає.\n    -   _Бонус:_ Використовуй додаткові моделі поведінки, щоб зробити метелика більш реалістичним.",
        "courseF_sprites_clouds_-2022-2": "# Прохолодний день\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/bd7f7bb8b6e56028ad7f6c7ef8ac7eb8-image-1610401074711.gif)\n\n</div>\n\nКод для створення спрайтів вже задано. Додай його до цієї програми, щоб створити для кожного спрайту певну модель поведінки.\n\n## Виконай наступне\n\n-   Додай блок `спрайт починає` для кожного костюма спрайта у програмі.\n-   Вибери моделі поведінки для кожного спрайта:\n    -   Створи хмару, яка рухається по екрану.\n    -   Створи сонце, яке обертається.\n    -   Створи метелика, який літає.\n    -   _Бонус:_ Використовуй додаткові моделі поведінки, щоб зробити метелика більш реалістичним.",
        "courseF_sprites_desert": "# Сцена в пустелі\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/cf86ddb8f8dc5250bef58dae339b75f7-image-1610467689405.png)\n\n</div>\n\nДодай код для створення сцени в пустелі з різними спрайтами. Ти можеш натиснути на картинку праворуч для прикладу.\n\n## Виконай наступне\n\n-   Створи чотири спрайти. Обери будь-які костюми, які тобі подобаються.\n-   Розташуй кожен з них в окремому кутку екрана. \n\n![expandable](https://images.code.org/ad153591fa3c233050d51200bce2a1c2-image-1610468037688.png)\n\n-   Зміни розмір спрайтів, щоб кінцеве зображення виглядало більш реалістично.",
        "courseF_sprites_desert_-2022-2": "# Сцена в пустелі\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/cf86ddb8f8dc5250bef58dae339b75f7-image-1610467689405.png)\n\n</div>\n\nДодай код для створення сцени в пустелі з різними спрайтами. Ти можеш натиснути на картинку праворуч для прикладу.\n\n## Виконай наступне\n\n-   Створи чотири спрайти. Обери будь-які костюми, які тобі подобаються.\n-   Розташуй кожен з них в окремому кутку екрана. \n\n![expandable](https://images.code.org/ad153591fa3c233050d51200bce2a1c2-image-1610468037688.png)\n\n-   Зміни розмір спрайтів, щоб кінцеве зображення виглядало більш реалістично.",
        "courseF_sprites_freeplay_air": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n* Додай спрайтів. Створи їм костюми та локації.\n* Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n* Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_air_-2022-2": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n\n-   Додай спрайтів. Створи їм костюми та локації.\n-   Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n-   Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_animals": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n* Додай спрайтів. Створи їм костюми та локації.\n* Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n* Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_animals_-2022-2": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n\n-   Додай спрайтів. Створи їм костюми та локації.\n-   Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n-   Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_aquatic": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n* Додай спрайтів. Створи їм костюми та локації.\n* Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n* Оживи своїх спрайтів за допомогою моделей поведінки!\n\n![expandable](https://images.code.org/8fe0707b28bffa4da9100767b1ac67ff-image-1610561416330.2021-01-13 13_05_26.gif)",
        "courseF_sprites_freeplay_blank": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n\n-   Додай спрайтів. Створи їм костюми та локації.\n-   Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n-   Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_blank_-2022-2": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n\n-   Додай спрайтів. Створи їм костюми та локації.\n-   Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n-   Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_food": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n* Додай спрайтів. Створи їм костюми та локації.\n* Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n* Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_food_-2022-2": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n\n-   Додай спрайтів. Створи їм костюми та локації.\n-   Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n-   Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_space": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n* Додай спрайтів. Створи їм костюми та локації.\n* Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n* Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_freeplay_space_-2022-2": "# Вільна гра - Створи сцену\n\nТепер твоя черга створити все, що забажаєш!\n\n## Виконай наступне.\n\n-   Додай спрайтів. Створи їм костюми та локації.\n-   Налаштуй розмір спрайтів так, щоб вони виглядали саме так, як ти хочеш.\n-   Оживи своїх спрайтів за допомогою моделей поведінки!",
        "courseF_sprites_make": "# Створення спрайтів\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/c473902f262d99da7e5a212ec4aa400b-image-1610480180510.png)\n\n</div>\n\nДля створення спрайту відкрий категорію **Спрайти** на панелі інструментів та перетягни цей блок:\n\n<xml><block type=\"gamelab_makeNewSpriteAnon\"><title name=\"ANIMATION_NAME\">\"face_strawberry_1\"</title></block></xml>\n\n## Виконай наступне:\n\n-   Підключи блок `створити новий спрайт` під блоком `коли гра починається`.\n-   Вибери костюм для спрайта.\n-   Натисни кнопку \"Запустити\" після завершення коду.",
        "courseF_sprites_make_-2022-2": "# Створення спрайтів\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/c473902f262d99da7e5a212ec4aa400b-image-1610480180510.png)\n\n</div>\n\nДля створення спрайту відкрий категорію **Спрайти** на панелі інструментів та перетягни цей блок:\n\n<xml><block type=\"gamelab_makeNewSpriteAnon\"><title name=\"ANIMATION_NAME\">\"face_strawberry_1\"</title></block></xml>\n\n## Виконай наступне:\n\n-   Підключи блок `створити новий спрайт` під блоком `коли гра починається`.\n-   Вибери костюм для спрайта.\n-   Натисни кнопку \"Запустити\" після завершення коду.",
        "courseF_sprites_moreSprites": "# Більше спрайтів\n\nДодамо ще більше спрайтів до цієї програми.\n\n## Виконай наступне\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/6e008facf91d301084e343887835811b-image-1610480051260.png)\n\n</div>\n\n-   Натисни на зображення праворуч та розгорни його.\n-   Створи 4 спрайти. Вибери будь-які костюми, які тобі подобаються.\n-   Розташуй кожен з них в окремому кутку екрана, як на зображенні.",
        "courseF_sprites_moreSprites_-2022-2": "# Більше спрайтів\n\nДодамо ще більше спрайтів до цієї програми.\n\n## Виконай наступне\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/6e008facf91d301084e343887835811b-image-1610480051260.png)\n\n</div>\n\n-   Натисни на зображення праворуч та розгорни його.\n-   Створи 4 спрайти. Вибери будь-які костюми, які тобі подобаються.\n-   Розташуй кожен з них в окремому кутку екрана, як на зображенні.",
        "courseF_sprites_positioning": "# Розміщення спрайтів\n\nКожен спрайт має певне **місце розташування**. Ти можеш встановити місце розташування, натиснувши кнопку на цьому блоці: <xml><block type=\"gamelab_location_picker\"><title name=\"LOCATION\">{\"x\":200,\"y\":200}</title></block></xml>\n\n## Виконай наступне:\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/7864ddf06e124427b01d415e441977f0-image-1610554148293.png)\n\n</div>\n\n-   Знайди новий блок у категорії **Розташування** на панелі інструментів та перетягни його на робочу область.\n-   З'єднай з блоком `створити новий спрайт`, який додали раніше.\n-   Натисни значок ![](https://images.code.org/6e59189145f18fc4e46140409e2ad5b8-image-1610554321961.png) на блоці розташування та вибери нову позицію для свого спрайту на екрані.\n-   Натисни кнопку \"Запустити\" після закінчення написання коду.",
        "courseF_sprites_positioning_-2022-2": "# Розміщення спрайтів\n\nКожен спрайт має певне **місце розташування**. Ти можеш встановити місце розташування, натиснувши кнопку на цьому блоці: <xml><block type=\"gamelab_location_picker\"><title name=\"LOCATION\">{\"x\":200,\"y\":200}</title></block></xml>\n\n## Виконай наступне:\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/7864ddf06e124427b01d415e441977f0-image-1610554148293.png)\n\n</div>\n\n-   Знайди новий блок у категорії **Розташування** на панелі інструментів та перетягни його на робочу область.\n-   З'єднай з блоком `створити новий спрайт`, який додали раніше.\n-   Натисни значок ![](https://images.code.org/6e59189145f18fc4e46140409e2ad5b8-image-1610554321961.png) на блоці розташування та вибери нову позицію для свого спрайту на екрані.\n-   Натисни кнопку \"Запустити\" після закінчення написання коду.",
        "courseF_sprites_predict": "Зроби прогноз! Прочитай код.\n\n-   Обидві літаки перемістяться на один проміжок вздовж сітки.\n-   Обидва літаки почнуть рух та не зупиняться.\n-   Один літак рушить першим, а другий - другим.\n-   Літаки розіб'ються.",
        "courseF_sprites_predict_-2022-2": "Зроби прогноз! Прочитай код.\n\n-   Обидві літаки перемістяться на один проміжок вздовж сітки.\n-   Обидва літаки почнуть рух та не зупиняться.\n-   Один літак рушить першим, а другий - другим.\n-   Літаки розіб'ються.",
        "courseF_sprites_properties": "# Властивості спрайтів\n\nСпрайти мають більше властивостей, зокрема **розмір**, який можна встановити за допомогою коду. Нижче наведено два спрайти, але один з них більший за інший. Використовуй новий блок у категорії **Спрайти**, щоб змінити розмір другого спрайту.\n\n## Виконай наступне\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/874fbbe0fdd2bddc594a232c13f44f97-image-1610481176809.png)\n\n</div>\n\n-   Використовуй блок `встановити розмір` для зміни розміру другого спрайту. Ти можеш зробити його більшим або меншим.\n\n_Підказка:_ За замовчуванням розмір спрайту дорівнює 100, тому вибери будь-яке інше число.",
        "courseF_sprites_properties_-2022-2": "# Властивості спрайтів\n\nСпрайти мають більше властивостей, зокрема **розмір**, який можна встановити за допомогою коду. Нижче наведено два спрайти, але один з них більший за інший. Використовуй новий блок у категорії **Спрайти**, щоб змінити розмір другого спрайту.\n\n## Виконай наступне\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/874fbbe0fdd2bddc594a232c13f44f97-image-1610481176809.png)\n\n</div>\n\n-   Використовуй блок `встановити розмір` для зміни розміру другого спрайту. Ти можеш зробити його більшим або меншим.\n\n_Підказка:_ За замовчуванням розмір спрайту дорівнює 100, тому вибери будь-яке інше число.",
        "courseF_sprites_ship": "# Анімація вітрильника\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/62944c2ca1bfcebde89ac410bc772ef0-image-1610381772255.2021-01-11 11_15_36.gif>)\n\n</div>\n\nСтвори спрайт корабля та зроби так, щоб він плив по воді.\n\n## Виконай наступне\n\n-   Створи новий спрайт корабля.\n-   Перемісти спрайт так, щоб він був встановлений на воді.\n-   Зроби так, щоб спрайт рухався по екрану з певною моделлю поведінки.\n-   _Бонус:_ Використовуй другу модель поведінки, наприклад, \"хитання\" або \"колихання\", щоб зробити корабель більш реалістичним, коли він рухається.",
        "courseF_sprites_ship_-2022-2": "# Анімація вітрильника\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/62944c2ca1bfcebde89ac410bc772ef0-image-1610381772255.2021-01-11 11_15_36.gif>)\n\n</div>\n\nСтвори спрайт корабля та зроби так, щоб він плив по воді.\n\n## Виконай наступне\n\n-   Створи новий спрайт корабля.\n-   Перемісти спрайт так, щоб він був встановлений на воді.\n-   Зроби так, щоб спрайт рухався по екрану з певною моделлю поведінки.\n-   _Бонус:_ Використовуй другу модель поведінки, наприклад, \"хитання\" або \"колихання\", щоб зробити корабель більш реалістичним, коли він рухається.",
        "courseF_text_answer": "# Текстові поля (Частина 2)\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nДля використання інформації, що зберігається у змінній, нам спочатку потрібно дочекатися відповіді користувача. Тепер у тебе є новий блок подій, який спрацьовує, як тільки користувач відповідає на запит:\n\n<xml><block type=\"gamelab_whenPromptAnswered\">\n      <value name=\"VAR\">\n        <block type=\"variables_get\" can_disconnect_from_parent=\"false\">\n          <title name=\"VAR\">name</title>\n        </block>\n      </value>\n    </block></xml>\n\n## Виконай наступне\n\n-   Перетягни новий блок `коли отримано відповідь` до програми. Переконайся, що назва змінної збігається з назвою у твоєму запиті!\n-   Підключи блок `друкувати` під цією новою подією. \n-   Переконайся, що усі позначки змінних збігаються!\n-   Натисни \"Запустити\" та введи текст у підказку.\n\n_Будь-яке повідомлення, яке ти вводиш, буде друкуватися у верхній частині екрана._",
        "courseF_text_answer_-2022-2": "# Текстові поля (Частина 2)\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nДля використання інформації, що зберігається у змінній, нам спочатку потрібно дочекатися відповіді користувача. Тепер у тебе є новий блок подій, який спрацьовує, як тільки користувач відповідає на запит:\n\n<xml><block type=\"gamelab_whenPromptAnswered\">\n      <value name=\"VAR\">\n        <block type=\"variables_get\" can_disconnect_from_parent=\"false\">\n          <title name=\"VAR\">name</title>\n        </block>\n      </value>\n    </block></xml>\n\n## Виконай наступне\n\n-   Перетягни новий блок `коли отримано відповідь` до програми. Переконайся, що назва змінної збігається з назвою у твоєму запиті!\n-   Підключи блок `друкувати` під цією новою подією. \n-   Переконайся, що усі позначки змінних збігаються!\n-   Натисни \"Запустити\" та введи текст у підказку.\n\n_Будь-яке повідомлення, яке ти вводиш, буде друкуватися у верхній частині екрана._",
        "courseF_text_choice_color": "# Вибір кольорів\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/c82820da43d0071b3ab5d71fee46e254-image-1612969310113.2021-02-10 09_59_50.gif>)\n\n</div>\n\nЗа допомогою підказок ти можеш фактично запитати користувача про _колір_ та використати його пізніше у своїй програмі. Ця програма була запущена для тебе.\n\n## Виконай наступне\n\n-   Уважно прочитай код нижче.\n-   Додай підказку для змінної з назвою `колір`.\n-   Запусти програму та введи назву кольору.\n\n_Тло твого проєкту має змінитися на цей колір!_\n\n<details><summary><strong>Спрайт Лабораторія розпізнає 140 назв кольорів. Клацни тут, щоб побачити весь перелік!</strong></summary>\n<table>\n<tr>\n <td style=\"background-color:black; width:20px; border-radius: 5px;\"></td> <td>black</td> </tr><tr>\n <td style=\"background-color:navy; width:20px; border-radius: 5px;\"></td> <td>navy</td> </tr><tr>\n <td style=\"background-color:darkblue; width:20px; border-radius: 5px;\"></td> <td>darkblue</td> </tr><tr>\n <td style=\"background-color:mediumblue; width:20px; border-radius: 5px;\"></td> <td>mediumblue</td> </tr><tr>\n <td style=\"background-color:blue; width:20px; border-radius: 5px;\"></td> <td>blue</td> </tr><tr>\n <td style=\"background-color:darkgreen; width:20px; border-radius: 5px;\"></td> <td>darkgreen</td> </tr><tr>\n <td style=\"background-color:green; width:20px; border-radius: 5px;\"></td> <td>green</td> </tr><tr>\n <td style=\"background-color:teal; width:20px; border-radius: 5px;\"></td> <td>teal</td> </tr><tr>\n <td style=\"background-color:darkcyan; width:20px; border-radius: 5px;\"></td> <td>darkcyan</td> </tr><tr>\n <td style=\"background-color:deepskyblue; width:20px; border-radius: 5px;\"></td> <td>deepskyblue</td> </tr><tr>\n <td style=\"background-color:darkturquoise; width:20px; border-radius: 5px;\"></td> <td>darkturquoise</td> </tr><tr>\n <td style=\"background-color:mediumspringgreen; width:20px; border-radius: 5px;\"></td> <td>mediumspringgreen</td> </tr><tr>\n <td style=\"background-color:lime; width:20px; border-radius: 5px;\"></td> <td>lime</td> </tr><tr>\n <td style=\"background-color:springgreen; width:20px; border-radius: 5px;\"></td> <td>springgreen</td> </tr><tr>\n <td style=\"background-color:aqua; width:20px; border-radius: 5px;\"></td> <td>aqua</td> </tr><tr>\n <td style=\"background-color:cyan; width:20px; border-radius: 5px;\"></td> <td>cyan</td> </tr><tr>\n <td style=\"background-color:midnightblue; width:20px; border-radius: 5px;\"></td> <td>midnightblue</td> </tr><tr>\n <td style=\"background-color:dodgerblue; width:20px; border-radius: 5px;\"></td> <td>dodgerblue</td> </tr><tr>\n <td style=\"background-color:lightseagreen; width:20px; border-radius: 5px;\"></td> <td>lightseagreen</td> </tr><tr>\n <td style=\"background-color:forestgreen; width:20px; border-radius: 5px;\"></td> <td>forestgreen</td> </tr><tr>\n <td style=\"background-color:seagreen; width:20px; border-radius: 5px;\"></td> <td>seagreen</td> </tr><tr>\n <td style=\"background-color:darkslategray; width:20px; border-radius: 5px;\"></td> <td>darkslategray</td> </tr><tr>\n <td style=\"background-color:darkslategrey; width:20px; border-radius: 5px;\"></td> <td>darkslategrey</td> </tr><tr>\n <td style=\"background-color:limegreen; width:20px; border-radius: 5px;\"></td> <td>limegreen</td> </tr><tr>\n <td style=\"background-color:mediumseagreen; width:20px; border-radius: 5px;\"></td> <td>mediumseagreen</td> </tr><tr>\n <td style=\"background-color:turquoise; width:20px; border-radius: 5px;\"></td> <td>turquoise</td> </tr><tr>\n <td style=\"background-color:royalblue; width:20px; border-radius: 5px;\"></td> <td>royalblue</td> </tr><tr>\n <td style=\"background-color:steelblue; width:20px; border-radius: 5px;\"></td> <td>steelblue</td> </tr><tr>\n <td style=\"background-color:darkslateblue; width:20px; border-radius: 5px;\"></td> <td>darkslateblue</td> </tr><tr>\n <td style=\"background-color:mediumturquoise; width:20px; border-radius: 5px;\"></td> <td>mediumturquoise</td> </tr><tr>\n <td style=\"background-color:indigo; width:20px; border-radius: 5px;\"></td> <td>indigo</td> </tr><tr>\n <td style=\"background-color:darkolivegreen; width:20px; border-radius: 5px;\"></td> <td>darkolivegreen</td> </tr><tr>\n <td style=\"background-color:cadetblue; width:20px; border-radius: 5px;\"></td> <td>cadetblue</td> </tr><tr>\n <td style=\"background-color:cornflowerblue; width:20px; border-radius: 5px;\"></td> <td>cornflowerblue</td> </tr><tr>\n <td style=\"background-color:rebeccapurple; width:20px; border-radius: 5px;\"></td> <td>rebeccapurple</td> </tr><tr>\n <td style=\"background-color:mediumaquamarine; width:20px; border-radius: 5px;\"></td> <td>mediumaquamarine</td> </tr><tr>\n <td style=\"background-color:dimgray; width:20px; border-radius: 5px;\"></td> <td>dimgray</td> </tr><tr>\n <td style=\"background-color:dimgrey; width:20px; border-radius: 5px;\"></td> <td>dimgrey</td> </tr><tr>\n <td style=\"background-color:slateblue; width:20px; border-radius: 5px;\"></td> <td>slateblue</td> </tr><tr>\n <td style=\"background-color:olivedrab; width:20px; border-radius: 5px;\"></td> <td>olivedrab</td> </tr><tr>\n <td style=\"background-color:slategray; width:20px; border-radius: 5px;\"></td> <td>slategray</td> </tr><tr>\n <td style=\"background-color:slategrey; width:20px; border-radius: 5px;\"></td> <td>slategrey</td> </tr><tr>\n <td style=\"background-color:lightslategray; width:20px; border-radius: 5px;\"></td> <td>lightslategray</td> </tr><tr>\n <td style=\"background-color:lightslategrey; width:20px; border-radius: 5px;\"></td> <td>lightslategrey</td> </tr><tr>\n <td style=\"background-color:mediumslateblue; width:20px; border-radius: 5px;\"></td> <td>mediumslateblue</td> </tr><tr>\n <td style=\"background-color:lawngreen; width:20px; border-radius: 5px;\"></td> <td>lawngreen</td> </tr><tr>\n <td style=\"background-color:chartreuse; width:20px; border-radius: 5px;\"></td> <td>chartreuse</td> </tr><tr>\n <td style=\"background-color:aquamarine; width:20px; border-radius: 5px;\"></td> <td>aquamarine</td> </tr><tr>\n <td style=\"background-color:maroon; width:20px; border-radius: 5px;\"></td> <td>maroon</td> </tr><tr>\n <td style=\"background-color:purple; width:20px; border-radius: 5px;\"></td> <td>purple</td> </tr><tr>\n <td style=\"background-color:olive; width:20px; border-radius: 5px;\"></td> <td>olive</td> </tr><tr>\n <td style=\"background-color:gray; width:20px; border-radius: 5px;\"></td> <td>gray</td> </tr><tr>\n <td style=\"background-color:grey; width:20px; border-radius: 5px;\"></td> <td>grey</td> </tr><tr>\n <td style=\"background-color:skyblue; width:20px; border-radius: 5px;\"></td> <td>skyblue</td> </tr><tr>\n <td style=\"background-color:lightskyblue; width:20px; border-radius: 5px;\"></td> <td>lightskyblue</td> </tr><tr>\n <td style=\"background-color:blueviolet; width:20px; border-radius: 5px;\"></td> <td>blueviolet</td> </tr><tr>\n <td style=\"background-color:darkred; width:20px; border-radius: 5px;\"></td> <td>darkred</td> </tr><tr>\n <td style=\"background-color:darkmagenta; width:20px; border-radius: 5px;\"></td> <td>darkmagenta</td> </tr><tr>\n <td style=\"background-color:saddlebrown; width:20px; border-radius: 5px;\"></td> <td>saddlebrown</td> </tr><tr>\n <td style=\"background-color:darkseagreen; width:20px; border-radius: 5px;\"></td> <td>darkseagreen</td> </tr><tr>\n <td style=\"background-color:lightgreen; width:20px; border-radius: 5px;\"></td> <td>lightgreen</td> </tr><tr>\n <td style=\"background-color:mediumpurple; width:20px; border-radius: 5px;\"></td> <td>mediumpurple</td> </tr><tr>\n <td style=\"background-color:darkviolet; width:20px; border-radius: 5px;\"></td> <td>darkviolet</td> </tr><tr>\n <td style=\"background-color:palegreen; width:20px; border-radius: 5px;\"></td> <td>palegreen</td> </tr><tr>\n <td style=\"background-color:darkorchid; width:20px; border-radius: 5px;\"></td> <td>darkorchid</td> </tr><tr>\n <td style=\"background-color:yellowgreen; width:20px; border-radius: 5px;\"></td> <td>yellowgreen</td> </tr><tr>\n <td style=\"background-color:sienna; width:20px; border-radius: 5px;\"></td> <td>sienna</td> </tr><tr>\n <td style=\"background-color:brown; width:20px; border-radius: 5px;\"></td> <td>brown</td> </tr><tr>\n <td style=\"background-color:darkgray; width:20px; border-radius: 5px;\"></td> <td>darkgray</td> </tr><tr>\n <td style=\"background-color:darkgrey; width:20px; border-radius: 5px;\"></td> <td>darkgrey</td> </tr><tr>\n <td style=\"background-color:lightblue; width:20px; border-radius: 5px;\"></td> <td>lightblue</td> </tr><tr>\n <td style=\"background-color:greenyellow; width:20px; border-radius: 5px;\"></td> <td>greenyellow</td> </tr><tr>\n <td style=\"background-color:paleturquoise; width:20px; border-radius: 5px;\"></td> <td>paleturquoise</td> </tr><tr>\n <td style=\"background-color:lightsteelblue; width:20px; border-radius: 5px;\"></td> <td>lightsteelblue</td> </tr><tr>\n <td style=\"background-color:powderblue; width:20px; border-radius: 5px;\"></td> <td>powderblue</td> </tr><tr>\n <td style=\"background-color:firebrick; width:20px; border-radius: 5px;\"></td> <td>firebrick</td> </tr><tr>\n <td style=\"background-color:darkgoldenrod; width:20px; border-radius: 5px;\"></td> <td>darkgoldenrod</td> </tr><tr>\n <td style=\"background-color:mediumorchid; width:20px; border-radius: 5px;\"></td> <td>mediumorchid</td> </tr><tr>\n <td style=\"background-color:rosybrown; width:20px; border-radius: 5px;\"></td> <td>rosybrown</td> </tr><tr>\n <td style=\"background-color:darkkhaki; width:20px; border-radius: 5px;\"></td> <td>darkkhaki</td> </tr><tr>\n <td style=\"background-color:silver; width:20px; border-radius: 5px;\"></td> <td>silver</td> </tr><tr>\n <td style=\"background-color:mediumvioletred; width:20px; border-radius: 5px;\"></td> <td>mediumvioletred</td> </tr><tr>\n <td style=\"background-color:indianred; width:20px; border-radius: 5px;\"></td> <td>indianred</td> </tr><tr>\n <td style=\"background-color:peru; width:20px; border-radius: 5px;\"></td> <td>peru</td> </tr><tr>\n <td style=\"background-color:chocolate; width:20px; border-radius: 5px;\"></td> <td>chocolate</td> </tr><tr>\n <td style=\"background-color:tan; width:20px; border-radius: 5px;\"></td> <td>tan</td> </tr><tr>\n <td style=\"background-color:lightgray; width:20px; border-radius: 5px;\"></td> <td>lightgray</td> </tr><tr>\n <td style=\"background-color:lightgrey; width:20px; border-radius: 5px;\"></td> <td>lightgrey</td> </tr><tr>\n <td style=\"background-color:thistle; width:20px; border-radius: 5px;\"></td> <td>thistle</td> </tr><tr>\n <td style=\"background-color:orchid; width:20px; border-radius: 5px;\"></td> <td>orchid</td> </tr><tr>\n <td style=\"background-color:goldenrod; width:20px; border-radius: 5px;\"></td> <td>goldenrod</td> </tr><tr>\n <td style=\"background-color:palevioletred; width:20px; border-radius: 5px;\"></td> <td>palevioletred</td> </tr><tr>\n <td style=\"background-color:crimson; width:20px; border-radius: 5px;\"></td> <td>crimson</td> </tr><tr>\n <td style=\"background-color:gainsboro; width:20px; border-radius: 5px;\"></td> <td>gainsboro</td> </tr><tr>\n <td style=\"background-color:plum; width:20px; border-radius: 5px;\"></td> <td>plum</td> </tr><tr>\n <td style=\"background-color:burlywood; width:20px; border-radius: 5px;\"></td> <td>burlywood</td> </tr><tr>\n <td style=\"background-color:lightcyan; width:20px; border-radius: 5px;\"></td> <td>lightcyan</td> </tr><tr>\n <td style=\"background-color:lavender; width:20px; border-radius: 5px;\"></td> <td>lavender</td> </tr><tr>\n <td style=\"background-color:darksalmon; width:20px; border-radius: 5px;\"></td> <td>darksalmon</td> </tr><tr>\n <td style=\"background-color:violet; width:20px; border-radius: 5px;\"></td> <td>violet</td> </tr><tr>\n <td style=\"background-color:palegoldenrod; width:20px; border-radius: 5px;\"></td> <td>palegoldenrod</td> </tr><tr>\n <td style=\"background-color:lightcoral; width:20px; border-radius: 5px;\"></td> <td>lightcoral</td> </tr><tr>\n <td style=\"background-color:khaki; width:20px; border-radius: 5px;\"></td> <td>khaki</td> </tr><tr>\n <td style=\"background-color:aliceblue; width:20px; border-radius: 5px;\"></td> <td>aliceblue</td> </tr><tr>\n <td style=\"background-color:honeydew; width:20px; border-radius: 5px;\"></td> <td>honeydew</td> </tr><tr>\n <td style=\"background-color:azure; width:20px; border-radius: 5px;\"></td> <td>azure</td> </tr><tr>\n <td style=\"background-color:sandybrown; width:20px; border-radius: 5px;\"></td> <td>sandybrown</td> </tr><tr>\n <td style=\"background-color:wheat; width:20px; border-radius: 5px;\"></td> <td>wheat</td> </tr><tr>\n <td style=\"background-color:beige; width:20px; border-radius: 5px;\"></td> <td>beige</td> </tr><tr>\n <td style=\"background-color:whitesmoke; width:20px; border-radius: 5px;\"></td> <td>whitesmoke</td> </tr><tr>\n <td style=\"background-color:mintcream; width:20px; border-radius: 5px;\"></td> <td>mintcream</td> </tr><tr>\n <td style=\"background-color:ghostwhite; width:20px; border-radius: 5px;\"></td> <td>ghostwhite</td> </tr><tr>\n <td style=\"background-color:salmon; width:20px; border-radius: 5px;\"></td> <td>salmon</td> </tr><tr>\n <td style=\"background-color:antiquewhite; width:20px; border-radius: 5px;\"></td> <td>antiquewhite</td> </tr><tr>\n <td style=\"background-color:linen; width:20px; border-radius: 5px;\"></td> <td>linen</td> </tr><tr>\n <td style=\"background-color:lightgoldenrodyellow; width:20px; border-radius: 5px;\"></td> <td>lightgoldenrodyellow</td> </tr><tr>\n <td style=\"background-color:oldlace; width:20px; border-radius: 5px;\"></td> <td>oldlace</td> </tr><tr>\n <td style=\"background-color:red; width:20px; border-radius: 5px;\"></td> <td>red</td> </tr><tr>\n <td style=\"background-color:fuchsia; width:20px; border-radius: 5px;\"></td> <td>fuchsia</td> </tr><tr>\n <td style=\"background-color:magenta; width:20px; border-radius: 5px;\"></td> <td>magenta</td> </tr><tr>\n <td style=\"background-color:deeppink; width:20px; border-radius: 5px;\"></td> <td>deeppink</td> </tr><tr>\n <td style=\"background-color:orangered; width:20px; border-radius: 5px;\"></td> <td>orangered</td> </tr><tr>\n <td style=\"background-color:tomato; width:20px; border-radius: 5px;\"></td> <td>tomato</td> </tr><tr>\n <td style=\"background-color:hotpink; width:20px; border-radius: 5px;\"></td> <td>hotpink</td> </tr><tr>\n <td style=\"background-color:coral; width:20px; border-radius: 5px;\"></td> <td>coral</td> </tr><tr>\n <td style=\"background-color:darkorange; width:20px; border-radius: 5px;\"></td> <td>darkorange</td> </tr><tr>\n <td style=\"background-color:lightsalmon; width:20px; border-radius: 5px;\"></td> <td>lightsalmon</td> </tr><tr>\n <td style=\"background-color:orange; width:20px; border-radius: 5px;\"></td> <td>orange</td> </tr><tr>\n <td style=\"background-color:lightpink; width:20px; border-radius: 5px;\"></td> <td>lightpink</td> </tr><tr>\n <td style=\"background-color:pink; width:20px; border-radius: 5px;\"></td> <td>pink</td> </tr><tr>\n <td style=\"background-color:gold; width:20px; border-radius: 5px;\"></td> <td>gold</td> </tr><tr>\n <td style=\"background-color:peachpuff; width:20px; border-radius: 5px;\"></td> <td>peachpuff</td> </tr><tr>\n <td style=\"background-color:navajowhite; width:20px; border-radius: 5px;\"></td> <td>navajowhite</td> </tr><tr>\n <td style=\"background-color:moccasin; width:20px; border-radius: 5px;\"></td> <td>moccasin</td> </tr><tr>\n <td style=\"background-color:bisque; width:20px; border-radius: 5px;\"></td> <td>bisque</td> </tr><tr>\n <td style=\"background-color:mistyrose; width:20px; border-radius: 5px;\"></td> <td>mistyrose</td> </tr><tr>\n <td style=\"background-color:blanchedalmond; width:20px; border-radius: 5px;\"></td> <td>blanchedalmond</td> </tr><tr>\n <td style=\"background-color:papayawhip; width:20px; border-radius: 5px;\"></td> <td>papayawhip</td> </tr><tr>\n <td style=\"background-color:lavenderblush; width:20px; border-radius: 5px;\"></td> <td>lavenderblush</td> </tr><tr>\n <td style=\"background-color:seashell; width:20px; border-radius: 5px;\"></td> <td>seashell</td> </tr><tr>\n <td style=\"background-color:cornsilk; width:20px; border-radius: 5px;\"></td> <td>cornsilk</td> </tr><tr>\n <td style=\"background-color:lemonchiffon; width:20px; border-radius: 5px;\"></td> <td>lemonchiffon</td> </tr><tr>\n <td style=\"background-color:floralwhite; width:20px; border-radius: 5px;\"></td> <td>floralwhite</td> </tr><tr>\n <td style=\"background-color:snow; width:20px; border-radius: 5px;\"></td> <td>snow</td> </tr><tr>\n <td style=\"background-color:yellow; width:20px; border-radius: 5px;\"></td> <td>yellow</td> </tr><tr>\n <td style=\"background-color:lightyellow; width:20px; border-radius: 5px;\"></td> <td>lightyellow</td> </tr><tr>\n <td style=\"background-color:ivory; width:20px; border-radius: 5px;\"></td> <td>ivory</td> </tr><tr>\n <td style=\"background-color:white; width:20px; border-radius: 5px;\"></td> <td>white</td> </tr>\n</table>\n\n</details>",
        "courseF_text_choice_color_-2022-2": "# Вибір кольорів\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/c82820da43d0071b3ab5d71fee46e254-image-1612969310113.2021-02-10 09_59_50.gif>)\n\n</div>\n\nЗа допомогою підказок ти можеш фактично запитати користувача про _колір_ та використати його пізніше у своїй програмі. Ця програма була запущена для тебе.\n\n## Виконай наступне\n\n-   Уважно прочитай код нижче.\n-   Додай підказку для змінної з назвою `колір`.\n-   Запусти програму та введи назву кольору.\n\n_Тло твого проєкту має змінитися на цей колір!_\n\n<details><summary><strong>Спрайт Лабораторія розпізнає 140 назв кольорів. Клацни тут, щоб побачити весь перелік!</strong></summary>\n<table>\n<tr>\n <td style=\"background-color:black; width:20px; border-radius: 5px;\"></td> <td>black</td> </tr><tr>\n <td style=\"background-color:navy; width:20px; border-radius: 5px;\"></td> <td>navy</td> </tr><tr>\n <td style=\"background-color:darkblue; width:20px; border-radius: 5px;\"></td> <td>darkblue</td> </tr><tr>\n <td style=\"background-color:mediumblue; width:20px; border-radius: 5px;\"></td> <td>mediumblue</td> </tr><tr>\n <td style=\"background-color:blue; width:20px; border-radius: 5px;\"></td> <td>blue</td> </tr><tr>\n <td style=\"background-color:darkgreen; width:20px; border-radius: 5px;\"></td> <td>darkgreen</td> </tr><tr>\n <td style=\"background-color:green; width:20px; border-radius: 5px;\"></td> <td>green</td> </tr><tr>\n <td style=\"background-color:teal; width:20px; border-radius: 5px;\"></td> <td>teal</td> </tr><tr>\n <td style=\"background-color:darkcyan; width:20px; border-radius: 5px;\"></td> <td>darkcyan</td> </tr><tr>\n <td style=\"background-color:deepskyblue; width:20px; border-radius: 5px;\"></td> <td>deepskyblue</td> </tr><tr>\n <td style=\"background-color:darkturquoise; width:20px; border-radius: 5px;\"></td> <td>darkturquoise</td> </tr><tr>\n <td style=\"background-color:mediumspringgreen; width:20px; border-radius: 5px;\"></td> <td>mediumspringgreen</td> </tr><tr>\n <td style=\"background-color:lime; width:20px; border-radius: 5px;\"></td> <td>lime</td> </tr><tr>\n <td style=\"background-color:springgreen; width:20px; border-radius: 5px;\"></td> <td>springgreen</td> </tr><tr>\n <td style=\"background-color:aqua; width:20px; border-radius: 5px;\"></td> <td>aqua</td> </tr><tr>\n <td style=\"background-color:cyan; width:20px; border-radius: 5px;\"></td> <td>cyan</td> </tr><tr>\n <td style=\"background-color:midnightblue; width:20px; border-radius: 5px;\"></td> <td>midnightblue</td> </tr><tr>\n <td style=\"background-color:dodgerblue; width:20px; border-radius: 5px;\"></td> <td>dodgerblue</td> </tr><tr>\n <td style=\"background-color:lightseagreen; width:20px; border-radius: 5px;\"></td> <td>lightseagreen</td> </tr><tr>\n <td style=\"background-color:forestgreen; width:20px; border-radius: 5px;\"></td> <td>forestgreen</td> </tr><tr>\n <td style=\"background-color:seagreen; width:20px; border-radius: 5px;\"></td> <td>seagreen</td> </tr><tr>\n <td style=\"background-color:darkslategray; width:20px; border-radius: 5px;\"></td> <td>darkslategray</td> </tr><tr>\n <td style=\"background-color:darkslategrey; width:20px; border-radius: 5px;\"></td> <td>darkslategrey</td> </tr><tr>\n <td style=\"background-color:limegreen; width:20px; border-radius: 5px;\"></td> <td>limegreen</td> </tr><tr>\n <td style=\"background-color:mediumseagreen; width:20px; border-radius: 5px;\"></td> <td>mediumseagreen</td> </tr><tr>\n <td style=\"background-color:turquoise; width:20px; border-radius: 5px;\"></td> <td>turquoise</td> </tr><tr>\n <td style=\"background-color:royalblue; width:20px; border-radius: 5px;\"></td> <td>royalblue</td> </tr><tr>\n <td style=\"background-color:steelblue; width:20px; border-radius: 5px;\"></td> <td>steelblue</td> </tr><tr>\n <td style=\"background-color:darkslateblue; width:20px; border-radius: 5px;\"></td> <td>darkslateblue</td> </tr><tr>\n <td style=\"background-color:mediumturquoise; width:20px; border-radius: 5px;\"></td> <td>mediumturquoise</td> </tr><tr>\n <td style=\"background-color:indigo; width:20px; border-radius: 5px;\"></td> <td>indigo</td> </tr><tr>\n <td style=\"background-color:darkolivegreen; width:20px; border-radius: 5px;\"></td> <td>darkolivegreen</td> </tr><tr>\n <td style=\"background-color:cadetblue; width:20px; border-radius: 5px;\"></td> <td>cadetblue</td> </tr><tr>\n <td style=\"background-color:cornflowerblue; width:20px; border-radius: 5px;\"></td> <td>cornflowerblue</td> </tr><tr>\n <td style=\"background-color:rebeccapurple; width:20px; border-radius: 5px;\"></td> <td>rebeccapurple</td> </tr><tr>\n <td style=\"background-color:mediumaquamarine; width:20px; border-radius: 5px;\"></td> <td>mediumaquamarine</td> </tr><tr>\n <td style=\"background-color:dimgray; width:20px; border-radius: 5px;\"></td> <td>dimgray</td> </tr><tr>\n <td style=\"background-color:dimgrey; width:20px; border-radius: 5px;\"></td> <td>dimgrey</td> </tr><tr>\n <td style=\"background-color:slateblue; width:20px; border-radius: 5px;\"></td> <td>slateblue</td> </tr><tr>\n <td style=\"background-color:olivedrab; width:20px; border-radius: 5px;\"></td> <td>olivedrab</td> </tr><tr>\n <td style=\"background-color:slategray; width:20px; border-radius: 5px;\"></td> <td>slategray</td> </tr><tr>\n <td style=\"background-color:slategrey; width:20px; border-radius: 5px;\"></td> <td>slategrey</td> </tr><tr>\n <td style=\"background-color:lightslategray; width:20px; border-radius: 5px;\"></td> <td>lightslategray</td> </tr><tr>\n <td style=\"background-color:lightslategrey; width:20px; border-radius: 5px;\"></td> <td>lightslategrey</td> </tr><tr>\n <td style=\"background-color:mediumslateblue; width:20px; border-radius: 5px;\"></td> <td>mediumslateblue</td> </tr><tr>\n <td style=\"background-color:lawngreen; width:20px; border-radius: 5px;\"></td> <td>lawngreen</td> </tr><tr>\n <td style=\"background-color:chartreuse; width:20px; border-radius: 5px;\"></td> <td>chartreuse</td> </tr><tr>\n <td style=\"background-color:aquamarine; width:20px; border-radius: 5px;\"></td> <td>aquamarine</td> </tr><tr>\n <td style=\"background-color:maroon; width:20px; border-radius: 5px;\"></td> <td>maroon</td> </tr><tr>\n <td style=\"background-color:purple; width:20px; border-radius: 5px;\"></td> <td>purple</td> </tr><tr>\n <td style=\"background-color:olive; width:20px; border-radius: 5px;\"></td> <td>olive</td> </tr><tr>\n <td style=\"background-color:gray; width:20px; border-radius: 5px;\"></td> <td>gray</td> </tr><tr>\n <td style=\"background-color:grey; width:20px; border-radius: 5px;\"></td> <td>grey</td> </tr><tr>\n <td style=\"background-color:skyblue; width:20px; border-radius: 5px;\"></td> <td>skyblue</td> </tr><tr>\n <td style=\"background-color:lightskyblue; width:20px; border-radius: 5px;\"></td> <td>lightskyblue</td> </tr><tr>\n <td style=\"background-color:blueviolet; width:20px; border-radius: 5px;\"></td> <td>blueviolet</td> </tr><tr>\n <td style=\"background-color:darkred; width:20px; border-radius: 5px;\"></td> <td>darkred</td> </tr><tr>\n <td style=\"background-color:darkmagenta; width:20px; border-radius: 5px;\"></td> <td>darkmagenta</td> </tr><tr>\n <td style=\"background-color:saddlebrown; width:20px; border-radius: 5px;\"></td> <td>saddlebrown</td> </tr><tr>\n <td style=\"background-color:darkseagreen; width:20px; border-radius: 5px;\"></td> <td>darkseagreen</td> </tr><tr>\n <td style=\"background-color:lightgreen; width:20px; border-radius: 5px;\"></td> <td>lightgreen</td> </tr><tr>\n <td style=\"background-color:mediumpurple; width:20px; border-radius: 5px;\"></td> <td>mediumpurple</td> </tr><tr>\n <td style=\"background-color:darkviolet; width:20px; border-radius: 5px;\"></td> <td>darkviolet</td> </tr><tr>\n <td style=\"background-color:palegreen; width:20px; border-radius: 5px;\"></td> <td>palegreen</td> </tr><tr>\n <td style=\"background-color:darkorchid; width:20px; border-radius: 5px;\"></td> <td>darkorchid</td> </tr><tr>\n <td style=\"background-color:yellowgreen; width:20px; border-radius: 5px;\"></td> <td>yellowgreen</td> </tr><tr>\n <td style=\"background-color:sienna; width:20px; border-radius: 5px;\"></td> <td>sienna</td> </tr><tr>\n <td style=\"background-color:brown; width:20px; border-radius: 5px;\"></td> <td>brown</td> </tr><tr>\n <td style=\"background-color:darkgray; width:20px; border-radius: 5px;\"></td> <td>darkgray</td> </tr><tr>\n <td style=\"background-color:darkgrey; width:20px; border-radius: 5px;\"></td> <td>darkgrey</td> </tr><tr>\n <td style=\"background-color:lightblue; width:20px; border-radius: 5px;\"></td> <td>lightblue</td> </tr><tr>\n <td style=\"background-color:greenyellow; width:20px; border-radius: 5px;\"></td> <td>greenyellow</td> </tr><tr>\n <td style=\"background-color:paleturquoise; width:20px; border-radius: 5px;\"></td> <td>paleturquoise</td> </tr><tr>\n <td style=\"background-color:lightsteelblue; width:20px; border-radius: 5px;\"></td> <td>lightsteelblue</td> </tr><tr>\n <td style=\"background-color:powderblue; width:20px; border-radius: 5px;\"></td> <td>powderblue</td> </tr><tr>\n <td style=\"background-color:firebrick; width:20px; border-radius: 5px;\"></td> <td>firebrick</td> </tr><tr>\n <td style=\"background-color:darkgoldenrod; width:20px; border-radius: 5px;\"></td> <td>darkgoldenrod</td> </tr><tr>\n <td style=\"background-color:mediumorchid; width:20px; border-radius: 5px;\"></td> <td>mediumorchid</td> </tr><tr>\n <td style=\"background-color:rosybrown; width:20px; border-radius: 5px;\"></td> <td>rosybrown</td> </tr><tr>\n <td style=\"background-color:darkkhaki; width:20px; border-radius: 5px;\"></td> <td>darkkhaki</td> </tr><tr>\n <td style=\"background-color:silver; width:20px; border-radius: 5px;\"></td> <td>silver</td> </tr><tr>\n <td style=\"background-color:mediumvioletred; width:20px; border-radius: 5px;\"></td> <td>mediumvioletred</td> </tr><tr>\n <td style=\"background-color:indianred; width:20px; border-radius: 5px;\"></td> <td>indianred</td> </tr><tr>\n <td style=\"background-color:peru; width:20px; border-radius: 5px;\"></td> <td>peru</td> </tr><tr>\n <td style=\"background-color:chocolate; width:20px; border-radius: 5px;\"></td> <td>chocolate</td> </tr><tr>\n <td style=\"background-color:tan; width:20px; border-radius: 5px;\"></td> <td>tan</td> </tr><tr>\n <td style=\"background-color:lightgray; width:20px; border-radius: 5px;\"></td> <td>lightgray</td> </tr><tr>\n <td style=\"background-color:lightgrey; width:20px; border-radius: 5px;\"></td> <td>lightgrey</td> </tr><tr>\n <td style=\"background-color:thistle; width:20px; border-radius: 5px;\"></td> <td>thistle</td> </tr><tr>\n <td style=\"background-color:orchid; width:20px; border-radius: 5px;\"></td> <td>orchid</td> </tr><tr>\n <td style=\"background-color:goldenrod; width:20px; border-radius: 5px;\"></td> <td>goldenrod</td> </tr><tr>\n <td style=\"background-color:palevioletred; width:20px; border-radius: 5px;\"></td> <td>palevioletred</td> </tr><tr>\n <td style=\"background-color:crimson; width:20px; border-radius: 5px;\"></td> <td>crimson</td> </tr><tr>\n <td style=\"background-color:gainsboro; width:20px; border-radius: 5px;\"></td> <td>gainsboro</td> </tr><tr>\n <td style=\"background-color:plum; width:20px; border-radius: 5px;\"></td> <td>plum</td> </tr><tr>\n <td style=\"background-color:burlywood; width:20px; border-radius: 5px;\"></td> <td>burlywood</td> </tr><tr>\n <td style=\"background-color:lightcyan; width:20px; border-radius: 5px;\"></td> <td>lightcyan</td> </tr><tr>\n <td style=\"background-color:lavender; width:20px; border-radius: 5px;\"></td> <td>lavender</td> </tr><tr>\n <td style=\"background-color:darksalmon; width:20px; border-radius: 5px;\"></td> <td>darksalmon</td> </tr><tr>\n <td style=\"background-color:violet; width:20px; border-radius: 5px;\"></td> <td>violet</td> </tr><tr>\n <td style=\"background-color:palegoldenrod; width:20px; border-radius: 5px;\"></td> <td>palegoldenrod</td> </tr><tr>\n <td style=\"background-color:lightcoral; width:20px; border-radius: 5px;\"></td> <td>lightcoral</td> </tr><tr>\n <td style=\"background-color:khaki; width:20px; border-radius: 5px;\"></td> <td>khaki</td> </tr><tr>\n <td style=\"background-color:aliceblue; width:20px; border-radius: 5px;\"></td> <td>aliceblue</td> </tr><tr>\n <td style=\"background-color:honeydew; width:20px; border-radius: 5px;\"></td> <td>honeydew</td> </tr><tr>\n <td style=\"background-color:azure; width:20px; border-radius: 5px;\"></td> <td>azure</td> </tr><tr>\n <td style=\"background-color:sandybrown; width:20px; border-radius: 5px;\"></td> <td>sandybrown</td> </tr><tr>\n <td style=\"background-color:wheat; width:20px; border-radius: 5px;\"></td> <td>wheat</td> </tr><tr>\n <td style=\"background-color:beige; width:20px; border-radius: 5px;\"></td> <td>beige</td> </tr><tr>\n <td style=\"background-color:whitesmoke; width:20px; border-radius: 5px;\"></td> <td>whitesmoke</td> </tr><tr>\n <td style=\"background-color:mintcream; width:20px; border-radius: 5px;\"></td> <td>mintcream</td> </tr><tr>\n <td style=\"background-color:ghostwhite; width:20px; border-radius: 5px;\"></td> <td>ghostwhite</td> </tr><tr>\n <td style=\"background-color:salmon; width:20px; border-radius: 5px;\"></td> <td>salmon</td> </tr><tr>\n <td style=\"background-color:antiquewhite; width:20px; border-radius: 5px;\"></td> <td>antiquewhite</td> </tr><tr>\n <td style=\"background-color:linen; width:20px; border-radius: 5px;\"></td> <td>linen</td> </tr><tr>\n <td style=\"background-color:lightgoldenrodyellow; width:20px; border-radius: 5px;\"></td> <td>lightgoldenrodyellow</td> </tr><tr>\n <td style=\"background-color:oldlace; width:20px; border-radius: 5px;\"></td> <td>oldlace</td> </tr><tr>\n <td style=\"background-color:red; width:20px; border-radius: 5px;\"></td> <td>red</td> </tr><tr>\n <td style=\"background-color:fuchsia; width:20px; border-radius: 5px;\"></td> <td>fuchsia</td> </tr><tr>\n <td style=\"background-color:magenta; width:20px; border-radius: 5px;\"></td> <td>magenta</td> </tr><tr>\n <td style=\"background-color:deeppink; width:20px; border-radius: 5px;\"></td> <td>deeppink</td> </tr><tr>\n <td style=\"background-color:orangered; width:20px; border-radius: 5px;\"></td> <td>orangered</td> </tr><tr>\n <td style=\"background-color:tomato; width:20px; border-radius: 5px;\"></td> <td>tomato</td> </tr><tr>\n <td style=\"background-color:hotpink; width:20px; border-radius: 5px;\"></td> <td>hotpink</td> </tr><tr>\n <td style=\"background-color:coral; width:20px; border-radius: 5px;\"></td> <td>coral</td> </tr><tr>\n <td style=\"background-color:darkorange; width:20px; border-radius: 5px;\"></td> <td>darkorange</td> </tr><tr>\n <td style=\"background-color:lightsalmon; width:20px; border-radius: 5px;\"></td> <td>lightsalmon</td> </tr><tr>\n <td style=\"background-color:orange; width:20px; border-radius: 5px;\"></td> <td>orange</td> </tr><tr>\n <td style=\"background-color:lightpink; width:20px; border-radius: 5px;\"></td> <td>lightpink</td> </tr><tr>\n <td style=\"background-color:pink; width:20px; border-radius: 5px;\"></td> <td>pink</td> </tr><tr>\n <td style=\"background-color:gold; width:20px; border-radius: 5px;\"></td> <td>gold</td> </tr><tr>\n <td style=\"background-color:peachpuff; width:20px; border-radius: 5px;\"></td> <td>peachpuff</td> </tr><tr>\n <td style=\"background-color:navajowhite; width:20px; border-radius: 5px;\"></td> <td>navajowhite</td> </tr><tr>\n <td style=\"background-color:moccasin; width:20px; border-radius: 5px;\"></td> <td>moccasin</td> </tr><tr>\n <td style=\"background-color:bisque; width:20px; border-radius: 5px;\"></td> <td>bisque</td> </tr><tr>\n <td style=\"background-color:mistyrose; width:20px; border-radius: 5px;\"></td> <td>mistyrose</td> </tr><tr>\n <td style=\"background-color:blanchedalmond; width:20px; border-radius: 5px;\"></td> <td>blanchedalmond</td> </tr><tr>\n <td style=\"background-color:papayawhip; width:20px; border-radius: 5px;\"></td> <td>papayawhip</td> </tr><tr>\n <td style=\"background-color:lavenderblush; width:20px; border-radius: 5px;\"></td> <td>lavenderblush</td> </tr><tr>\n <td style=\"background-color:seashell; width:20px; border-radius: 5px;\"></td> <td>seashell</td> </tr><tr>\n <td style=\"background-color:cornsilk; width:20px; border-radius: 5px;\"></td> <td>cornsilk</td> </tr><tr>\n <td style=\"background-color:lemonchiffon; width:20px; border-radius: 5px;\"></td> <td>lemonchiffon</td> </tr><tr>\n <td style=\"background-color:floralwhite; width:20px; border-radius: 5px;\"></td> <td>floralwhite</td> </tr><tr>\n <td style=\"background-color:snow; width:20px; border-radius: 5px;\"></td> <td>snow</td> </tr><tr>\n <td style=\"background-color:yellow; width:20px; border-radius: 5px;\"></td> <td>yellow</td> </tr><tr>\n <td style=\"background-color:lightyellow; width:20px; border-radius: 5px;\"></td> <td>lightyellow</td> </tr><tr>\n <td style=\"background-color:ivory; width:20px; border-radius: 5px;\"></td> <td>ivory</td> </tr><tr>\n <td style=\"background-color:white; width:20px; border-radius: 5px;\"></td> <td>white</td> </tr>\n</table>\n\n</details>",
        "courseF_text_choice_conversation": "# Використання тексту для мовлення\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/f73bba63225ef175eefb47711312be38-image-1612991318889.2021-02-10 16_08_23.gif>)\n\n</div>\n\nВикористаємо блок `друкувати`, щоб створити розмову двох персонажів. Ця програма вже має початок. Ти можеш просто додати до неї блоки `друкувати` або внести будь-які інші зміни, які тобі подобаються!\n\n## Виконай наступне\n\n-   Додай блок `друкувати` під кожним блоком `через секунд`.\n-   Введи свій власний текст, щоб змусити тварин розмовляти.",
        "courseF_text_choice_conversation_-2022-2": "# Використання тексту для мовлення\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/f73bba63225ef175eefb47711312be38-image-1612991318889.2021-02-10 16_08_23.gif>)\n\n</div>\n\nВикористаємо блок `друкувати`, щоб створити розмову двох персонажів. Ця програма вже має початок. Ти можеш просто додати до неї блоки `друкувати` або внести будь-які інші зміни, які тобі подобаються!\n\n## Виконай наступне\n\n-   Додай блок `друкувати` під кожним блоком `через секунд`.\n-   Введи свій власний текст, щоб змусити тварин розмовляти.",
        "courseF_text_choice_events": "# Друк тексту з питань\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/8d6cd66b4ebacaa59813be4e4fe5ce4e-image-1613752356135.png)\n\n</div>\n\nЦя програма була запущена для тебе, але сталася помилка. Текст друкується занадто рано!\n\n## Виконай наступне\n\n-   Уважно прочитай код та запусти програму, щоб побачити, що станеться.\n-   Додай блок `коли отримано відповідь` до своєї робочої панелі.\n-   Перестав код так, щоб текст з питання виводився коректно та в потрібний час.",
        "courseF_text_choice_events_-2022-2": "# Друк тексту з питань\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/8d6cd66b4ebacaa59813be4e4fe5ce4e-image-1613752356135.png)\n\n</div>\n\nЦя програма була запущена для тебе, але сталася помилка. Текст друкується занадто рано!\n\n## Виконай наступне\n\n-   Уважно прочитай код та запусти програму, щоб побачити, що станеться.\n-   Додай блок `коли отримано відповідь` до своєї робочої панелі.\n-   Перестав код так, щоб текст з питання виводився коректно та в потрібний час.",
        "courseF_text_choice_freeplay": "<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nСтвори власну програму, використовуючи текст, підказки та змінні!\n\n## Виконай наступне\n\n-   Додай принаймні один спрайт до свого проєкту.\n-   Додай принаймні одну підказку.\n-   Використовуй змінну для підказки у будь-якому місці твоєї програми:\n    -   Друкований текст\n    -   Титульний екран\n    -   Зміна кольору фону.\n\nТи також можеш додати до свого коду все, що забажаєш, включно зі спрайтами, моделями поведінки, звуками та іншими елементами!",
        "courseF_text_choice_freeplay_-2022-2": "<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nСтвори власну програму, використовуючи текст, підказки та змінні!\n\n## Виконай наступне\n\n-   Додай принаймні один спрайт до свого проєкту.\n-   Додай принаймні одну підказку.\n-   Використовуй змінну для підказки у будь-якому місці твоєї програми:\n    -   Друкований текст\n    -   Титульний екран\n    -   Зміна кольору фону.\n\nТи також можеш додати до свого коду все, що забажаєш, включно зі спрайтами, моделями поведінки, звуками та іншими елементами!",
        "courseF_text_choice_interview": "# Приєднання тексту до змінних\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nЦя програма містить помилку, через яку текст виводиться некоректно. Запусти програму, нічого не змінюючи, щоб побачити, що не так, а потім спробуй виправити помилку!\n\n<xml><block type=\"gamelab_textJoin\">\n            <title name=\"TEXT1\">Greetings! My name is</title>\n            <value name=\"TEXT2\">\n              <block type=\"gamelab_textVariableJoin\">\n                <title name=\"VAR\">name</title>\n                <value name=\"TEXT2\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">the robot!</title>\n                  </block>\n                </value>\n              </block>\n            </value>\n          </block></xml>\n\n## Виконай наступне\n\n-   Уважно прочитайте код нижче.\n-   Запусти код та введи ім'я, щоб побачити, що станеться.\n    <details><summary><strong>У чому помилка?</strong></summary>Текст, який буде надруковано, має містити пробіли навколо імені, але пробіли відсутні.</details>\n-   Виправ помилку.",
        "courseF_text_choice_interview_-2022-2": "# Приєднання тексту до змінних\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nЦя програма містить помилку, через яку текст виводиться некоректно. Запусти програму, нічого не змінюючи, щоб побачити, що не так, а потім спробуй виправити помилку!\n\n<xml><block type=\"gamelab_textJoin\">\n            <title name=\"TEXT1\">Greetings! My name is</title>\n            <value name=\"TEXT2\">\n              <block type=\"gamelab_textVariableJoin\">\n                <title name=\"VAR\">name</title>\n                <value name=\"TEXT2\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">the robot!</title>\n                  </block>\n                </value>\n              </block>\n            </value>\n          </block></xml>\n\n## Виконай наступне\n\n-   Уважно прочитайте код нижче.\n-   Запусти код та введи ім'я, щоб побачити, що станеться.\n    <details><summary><strong>У чому помилка?</strong></summary>Текст, який буде надруковано, має містити пробіли навколо імені, але пробіли відсутні.</details>\n-   Виправ помилку.",
        "courseF_text_choice_multiprompt": "# Назви змінних\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nКожного разу, коли ти використовуєш змінну, її назва (наприклад, \"ім'я\" або \"вік\") має збігатись. Ця програма має **два** питання, але текст не виводиться через помилку з назвами змінних. Запусти програму, нічого не змінюючи, щоб побачити, що не так, а потім спробуй вирішити проблему!\n\n## Виконай наступне\n\n-   Уважно прочитай код нижче.\n-   Запусти код та введи ім'я та вік, щоб побачити, що станеться.\n    <details><summary><strong>У чому полягає помилка?</strong></summary>У блоці `коли отримано відповідь` використовується неправильна змінна, тому текст ніколи не відображається.</details>\n-   Виправ помилку, щоб весь текст виводився коректно.",
        "courseF_text_choice_multiprompt_-2022-2": "# Назви змінних\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nКожного разу, коли ти використовуєш змінну, її назва (наприклад, \"ім'я\" або \"вік\") має збігатись. Ця програма має **два** питання, але текст не виводиться через помилку з назвами змінних. Запусти програму, нічого не змінюючи, щоб побачити, що не так, а потім спробуй вирішити проблему!\n\n## Виконай наступне\n\n-   Уважно прочитай код нижче.\n-   Запусти код та введи ім'я та вік, щоб побачити, що станеться.\n    <details><summary><strong>У чому полягає помилка?</strong></summary>У блоці `коли отримано відповідь` використовується неправильна змінна, тому текст ніколи не відображається.</details>\n-   Виправ помилку, щоб весь текст виводився коректно.",
        "courseF_text_choice_title": "# Титульні екрани\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nТи можеш додати великий текст до своєї програми за допомогою титульного екрана. Цей блок змушує текст з'являтися на екрані, доки ти не заміниш його або не сховаєш. На цьому рівні ти будеш використовувати два нових блоки.\n\n<table>\n<tr><td>\n<xml><block type=\"gamelab_showTitleScreen\">\n      <value name=\"TITLE\">\n        </value>\n        <value name=\"SUBTITLE\">\n        </value>\n    </block></xml>\n    </td><td>\n    <xml>\n    <block type=\"gamelab_hideTitleScreen\"/></xml>\n    </td>\n</tr>\n</table>\n\n## Виконай наступне\n\n-   Напиши програму, яка відображає титульний екран, а потім приховує його _на 3 секунди_.",
        "courseF_text_choice_title_-2022-2": "# Титульні екрани\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nТи можеш додати великий текст до своєї програми за допомогою титульного екрана. Цей блок змушує текст з'являтися на екрані, доки ти не заміниш його або не сховаєш. На цьому рівні ти будеш використовувати два нових блоки.\n\n<table>\n<tr><td>\n<xml><block type=\"gamelab_showTitleScreen\">\n      <value name=\"TITLE\">\n        </value>\n        <value name=\"SUBTITLE\">\n        </value>\n    </block></xml>\n    </td><td>\n    <xml>\n    <block type=\"gamelab_hideTitleScreen\"/></xml>\n    </td>\n</tr>\n</table>\n\n## Виконай наступне\n\n-   Напиши програму, яка відображає титульний екран, а потім приховує його _на 3 секунди_.",
        "courseF_text_concat": "# Текстові поля (Частина 3)\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nТепер давай трохи пофантазуємо. Ти можеш комбінувати текст, що зберігається у змінних, з іншим текстом:\n\n<xml><block type=\"gamelab_textJoin\">\n    <title name=\"TEXT1\"></title>\n    <value name=\"TEXT2\">\n      <block type=\"gamelab_textVariableJoin\">\n        <title name=\"VAR\">???</title>\n        <value name=\"TEXT2\">\n          <block type=\"gamelab_textJoin\">\n            <title name=\"TEXT1\"></title>\n          </block>\n        </value>\n      </block>\n    </value>\n  </block></xml>\n\n## Виконай наступне:\n\n-   Переглянь нові блоки у категорії **Світ**.\n-   Використовуй ці блоки зі своїм блоком `друкувати` так, щоб він поєднував інший текст з текстом зі змінної.\n-   Можливо, ти захочеш змінити питання, яке ти ставиш, або позначення твоєї змінної.\n\n_Цей рівень складний! Натисни на лампочку ліворуч, якщо ти хочеш побачити приклад._",
        "courseF_text_concat_-2022-2": "# Текстові поля (Частина 3)\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nТепер давай трохи пофантазуємо. Ти можеш комбінувати текст, що зберігається у змінних, з іншим текстом:\n\n<xml><block type=\"gamelab_textJoin\">\n    <title name=\"TEXT1\"></title>\n    <value name=\"TEXT2\">\n      <block type=\"gamelab_textVariableJoin\">\n        <title name=\"VAR\">???</title>\n        <value name=\"TEXT2\">\n          <block type=\"gamelab_textJoin\">\n            <title name=\"TEXT1\"></title>\n          </block>\n        </value>\n      </block>\n    </value>\n  </block></xml>\n\n## Виконай наступне:\n\n-   Переглянь нові блоки у категорії **Світ**.\n-   Використовуй ці блоки зі своїм блоком `друкувати` так, щоб він поєднував інший текст з текстом зі змінної.\n-   Можливо, ти захочеш змінити питання, яке ти ставиш, або позначення твоєї змінної.\n\n_Цей рівень складний! Натисни на лампочку ліворуч, якщо ти хочеш побачити приклад._",
        "courseF_text_events": "# Використання тексту з подіями\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/a2f9c963054ed9deab3adf32bc063b2d-image-1612552471159.2021-02-05 14_08_32.gif>)\n\n</div>\n\nЩоб з часом на екрані з'являлося більше тексту, потрібно використовувати події.\n\n## Виконай наступне:\n\n-   Вибери будь-який блок з категорії **Події** та додай його до своєї програми.\n-   Підключи новий блок `друк` під подією.\n-   Запусти програму та зроби так, щоб друге повідомлення з'явилося після першого.\n\n_Зміна тексту у часі робить твій проєкт більш цікавим:_\n\n-   _Персонажі можуть вести розмову._\n-   _Ти можеш розповісти історію._",
        "courseF_text_events_-2022-2": "# Використання тексту з подіями\n\n<div style=\"float:right\">\n\n![expandable](<https://images.code.org/a2f9c963054ed9deab3adf32bc063b2d-image-1612552471159.2021-02-05 14_08_32.gif>)\n\n</div>\n\nЩоб з часом на екрані з'являлося більше тексту, потрібно використовувати події.\n\n## Виконай наступне:\n\n-   Вибери будь-який блок з категорії **Події** та додай його до своєї програми.\n-   Підключи новий блок `друк` під подією.\n-   Запусти програму та зроби так, щоб друге повідомлення з'явилося після першого.\n\n_Зміна тексту у часі робить твій проєкт більш цікавим:_\n\n-   _Персонажі можуть вести розмову._\n-   _Ти можеш розповісти історію._",
        "courseF_text_print": "# Друк тексту\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/470799b68df5555cf5f8fbd25c8057b6-image-1612552287779.png)\n\n</div>\n\nДля виведення тексту на екран можна використовувати блок друку: <xml><block type=\"gamelab_printText\"><value name=\"TEXT\"><block type=\"text\"><title name=\"TEXT\">???</title></block></value></block></xml>.\n\n## Виконай наступне\n\n-   Знайди блок `друкувати` у категорії **Світ** та додай його до своєї програми.\n-   Надрукуй повідомлення у правій частині блоку, щоб цей текст з'явився над спрайтами.\n\n_Друкувати текст може бути потрібно з багатьох причин:_ \n\n-   _Щоб змусити персонажів говорити._\n-   _Щоб описати сцену._\n-   _Щоб надати інструкції для гри._",
        "courseF_text_print_-2022-2": "# Друк тексту\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/470799b68df5555cf5f8fbd25c8057b6-image-1612552287779.png)\n\n</div>\n\nДля виведення тексту на екран можна використовувати блок друку: <xml><block type=\"gamelab_printText\"><value name=\"TEXT\"><block type=\"text\"><title name=\"TEXT\">???</title></block></value></block></xml>.\n\n## Виконай наступне\n\n-   Знайди блок `друкувати` у категорії **Світ** та додай його до своєї програми.\n-   Надрукуй повідомлення у правій частині блоку, щоб цей текст з'явився над спрайтами.\n\n_Друкувати текст може бути потрібно з багатьох причин:_ \n\n-   _Щоб змусити персонажів говорити._\n-   _Щоб описати сцену._\n-   _Щоб надати інструкції для гри._",
        "courseF_text_prompts": "# Текстові поля (Частина 1)\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nНастав час почати вчитися використовувати **текстові поля**. Текстові поля дозволяють отримувати слова та інший текст від користувача та використовувати їх пізніше у програмі. Текст, який користувач вводить у поле, зберігається у **змінній**.\n\n<xml><block type=\"gamelab_setPrompt\">\n      <value name=\"QUESTION\">\n        <block type=\"text\">\n          <title name=\"TEXT\">What is your name?</title>\n        </block>\n      </value>\n      <value name=\"VAR\">\n        <block type=\"variables_get\" can_disconnect_from_parent=\"false\">\n          <title name=\"VAR\">name</title>\n        </block>\n      </value>\n    </block></xml>\n\n## Виконай наступне\n\n-   Знайди блок `запитати користувача` у категорії **Світ** та додай його до своєї програми.\n-   У верхній частині блоку введи питання, яке ти хочеш задати.\n-   Зміни `???` на потрібну тобі назву, натиснувши \"**перейменувати цю змінну**\".\n-   Натисни \"Запустити\", а потім дай відповідь на питання, набравши будь-який текст на клавіатурі.\n\n_Більше нічого не буде відбуватись, але це нормально!_",
        "courseF_text_prompts_-2022-2": "# Текстові поля (Частина 1)\n\n<div style=\"float:right\">\n\n![expandable](<>)\n\n</div>\n\nНастав час почати вчитися використовувати **текстові поля**. Текстові поля дозволяють отримувати слова та інший текст від користувача та використовувати їх пізніше у програмі. Текст, який користувач вводить у поле, зберігається у **змінній**.\n\n<xml><block type=\"gamelab_setPrompt\">\n      <value name=\"QUESTION\">\n        <block type=\"text\">\n          <title name=\"TEXT\">What is your name?</title>\n        </block>\n      </value>\n      <value name=\"VAR\">\n        <block type=\"variables_get\" can_disconnect_from_parent=\"false\">\n          <title name=\"VAR\">name</title>\n        </block>\n      </value>\n    </block></xml>\n\n## Виконай наступне\n\n-   Знайди блок `запитати користувача` у категорії **Світ** та додай його до своєї програми.\n-   У верхній частині блоку введи питання, яке ти хочеш задати.\n-   Зміни `???` на потрібну тобі назву, натиснувши \"**перейменувати цю змінну**\".\n-   Натисни \"Запустити\", а потім дай відповідь на питання, набравши будь-який текст на клавіатурі.\n\n_Більше нічого не буде відбуватись, але це нормально!_",
        "courseF_text_review": "# Короткий огляд\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/32340cb0895e721bddfc36266dfab8a1-image-1612549791159.png)\n\n</div>\n\nНа цьому уроці ми дізнаємося багато нового про те, як додавати текст до свого проєкту. Перед цим попрактикуємося в тому, чого ми вже навчилися.\n\n## Виконай наступне:\n\n-   Створи два спрайти з різними костюмами.\n-   Задай кожному спрайту окреме місце розташування.",
        "courseF_text_review_-2022-2": "# Короткий огляд\n\n<div style=\"float:right\">\n\n![expandable](https://images.code.org/32340cb0895e721bddfc36266dfab8a1-image-1612549791159.png)\n\n</div>\n\nНа цьому уроці ми дізнаємося багато нового про те, як додавати текст до свого проєкту. Перед цим попрактикуємося в тому, чого ми вже навчилися.\n\n## Виконай наступне:\n\n-   Створи два спрайти з різними костюмами.\n-   Задай кожному спрайту окреме місце розташування.",
        "courseF_variables2_predict2_-2022-2": "Зроби прогноз! Досліди код.",
        "courseF_variables2_predict_-2022-2": "Зроби прогноз! Досліди код.",
        "courseF_variables_card": "# Створи свою власну вітальну листівку\n\nТи можеш використовувати Спрайт Лабораторію, щоб створити власне привітання до свята або особливої події. Використовуючи змінні, твоя листівка ставитиме користувачеві питання, а потім показуватиме індивідуальне повідомлення. Створи свою програму нижче. Це найкраще працює, якщо у тебе вже є план, якого ти будеш дотримуватися.\n\n<div style=\"float:right\">\n\n![expandable]()\n\n</div>\n\n## Вимоги\n* Твоя програма має поставити користувачеві принаймні одне питання.\n* Твоя програма має виводити текст принаймні з однієї змінної.\n* Твоя програма має містити спрайти з певною моделлю поведінки.\n\nТи також можеш додати до свого коду все, що тобі подобається, включаючи фон, звуки тощо.",
        "courseF_variables_card_-2022-2": "# Створи свою власну вітальну листівку\n\nТи можеш використовувати Спрайт Лабораторію, щоб створити власне привітання до свята або особливої події. Використовуючи змінні, твоя листівка ставитиме користувачеві питання, а потім показуватиме індивідуальне повідомлення. Створи свою програму нижче. Це найкраще працює, якщо у тебе вже є план, якого ти будеш дотримуватися.\n\n<div style=\"float:right\">\n\n![expandable]()\n\n</div>\n\n## Вимоги\n* Твоя програма має поставити користувачеві принаймні одне питання.\n* Твоя програма має виводити текст принаймні з однієї змінної.\n* Твоя програма має містити спрайти з певною моделлю поведінки.\n\nТи також можеш додати до свого коду все, що тобі подобається, включаючи фон, звуки тощо.",
        "courseF_variables_card_finish": "# Завершення вітальної листівки\n\n*Твоя програма зі створення вітальної листівки вже би повинна мати початок. Якщо ні, повернися на [попередній рівень](../підрівень/1).*\n\n\nЗараз ти можеш додати до свого коду все, що забажаєш. Твоя листівка може поставити користувачеві декілька питань, та реагувати у вигляді повідомлення на кожне з них. Ти можеш зробити свою програму більш інтерактивною, змінюючи поведінку спрайта з кожною подією, або додаючи звуки та фонові ефекти. Якщо тобі потрібна нова ідея, натисни на лампочку зліва.",
        "courseF_variables_chatbot": "# Створи чат-бота\n\nЧат-бот - це комп'ютерна програма, яка імітує людську розмову. Використовуючи змінні, можна створити чат-бота, який ставить користувачеві питання, а потім відповідає на них. Створи свою програму нижче. Це найкраще працює, якщо у тебе вже є план, якого ти хочеш дотримуватися.\n\n<div style=\"float:right\">\n\n![expandable]()\n\n</div>\n\n## Вимоги\n* Твоя програма має поставити користувачеві принаймні одне питання.\n* Твоя програма має виводити текст принаймні з однієї змінної.\n* Твоя програма має містити спрайти з певними моделями поведінки.\n\nТи також можеш додавати до коду все, що тобі подобається, включаючи фони, звуки та інше.",
        "courseF_variables_chatbot_-2022-2": "# Створи чат-бота\n\nЧат-бот - це комп'ютерна програма, яка імітує людську розмову. Використовуючи змінні, можна створити чат-бота, який ставить користувачеві питання, а потім відповідає на них. Створи свою програму нижче. Це найкраще працює, якщо у тебе вже є план, якого ти хочеш дотримуватися.\n\n<div style=\"float:right\">\n\n![expandable]()\n\n</div>\n\n## Вимоги\n* Твоя програма має поставити користувачеві принаймні одне питання.\n* Твоя програма має виводити текст принаймні з однієї змінної.\n* Твоя програма має містити спрайти з певними моделями поведінки.\n\nТи також можеш додавати до коду все, що тобі подобається, включаючи фони, звуки та інше.",
        "courseF_variables_chatbot_finish": "# Завершення твого чат-бота\n\n*Твоя програма зі створення чат-бота вже би повинна мати початок. Якщо це не так, повернися на [попередній рівень](../підрівень/3).*\n\n\nТепер ти можеш додавати до коду все, що забажаєш. Чат-бот має поставити користувачеві кілька питань та дати відповіді на кожне з них. Ти можеш зробити свою програму більш інтерактивною, змінивши поведінку спрайта з кожною подією або додавши звуки та фон. Якщо тобі потрібна нова ідея, натисни на лампочку зліва.",
        "courseF_variables_chatbot_finish_-2022-2": "# Завершення твого чат-бота\n\n*Твоя програма зі створення чат-бота вже би повинна мати початок. Якщо це не так, повернися на [попередній рівень](../підрівень/3).*\n\n\nТепер ти можеш додавати до коду все, що забажаєш. Чат-бот має поставити користувачеві кілька питань та дати відповіді на кожне з них. Ти можеш зробити свою програму більш інтерактивною, змінивши поведінку спрайта з кожною подією або додавши звуки та фон. Якщо тобі потрібна нова ідея, натисни на лампочку зліва.",
        "courseF_variables_madlib": "# Створи історію з порожніми конвертами!\n\nВикористай Спрайт Лабораторію, щоб створити власну історію з порожніми конвертами. За допомогою змінних твій проєкт запитуватиме у користувача слова, які потім перетворюватимуться на кумедну історію. Створи свою програму нижче. Це найкраще працює, якщо в тебе вже є план, якого ти будеш дотримуватися. Тобі також потрібно буде намалювати свій власний спрайт-костюм або додати новий, який тобі подобається. Шукай категорію \"*Люди*\"!\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/blockly/media/p5lab/animation-previews/category_people.png\" style=\"height:80px; border-width:1px; border-style:solid; border-color:black; border-radius:10px\">\n<p style=\"text-align: center\">\nЛюди\n</p>\n</div>\n\n## Вимоги\n* Твоя програма має поставити користувачеві принаймні одне питання.\n* Твоя програма має виводити текст принаймні з однієї змінної.\n* Твоя програма має містити спрайти з певною моделлю поведінки.\n\nТи також можеш додати до свого коду все, що тобі подобається, включаючи фон, звуки тощо.",
        "courseF_variables_madlib_-2022-2": "# Створи історію з порожніми конвертами!\n\nВикористай Спрайт Лабораторію, щоб створити власну історію з порожніми конвертами. За допомогою змінних твій проєкт запитуватиме у користувача слова, які потім перетворюватимуться на кумедну історію. Створи свою програму нижче. Це найкраще працює, якщо в тебе вже є план, якого ти будеш дотримуватися. Тобі також потрібно буде намалювати свій власний спрайт-костюм або додати новий, який тобі подобається. Шукай категорію \"*Люди*\"!\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/blockly/media/p5lab/animation-previews/category_people.png\" style=\"height:80px; border-width:1px; border-style:solid; border-color:black; border-radius:10px\">\n<p style=\"text-align: center\">\nЛюди\n</p>\n</div>\n\n## Вимоги\n* Твоя програма має поставити користувачеві принаймні одне питання.\n* Твоя програма має виводити текст принаймні з однієї змінної.\n* Твоя програма має містити спрайти з певною моделлю поведінки.\n\nТи також можеш додати до свого коду все, що тобі подобається, включаючи фон, звуки тощо.",
        "courseF_variables_madlib_finish": "# Допиши свою власну історію з порожніми конвертами.\n\n*Твоя програма зі створення інтерактивної історії з порожніми конвертамивже би повинна мати початок. Якщо це не так, повернись на [попередній рівень](../підрівень/5).*\n\n\nТепер ти можеш додати до свого коду все, що забажаєш. Запитай у користувача кілька слів та використовуй кожне з них в історії, яку ти виводиш на екран. Ти можеш зробити свою програму більш інтерактивною, змінюючи поведінку спрайта з кожною подією або додаючи звуки та фон. Якщо тобі потрібна нова ідея, натисни на лампочку зліва.",
        "courseF_variables_madlib_finish_-2022-2": "# Допиши свою власну історію з порожніми конвертами.\n\n*Твоя програма зі створення інтерактивної історії з порожніми конвертамивже би повинна мати початок. Якщо це не так, повернись на [попередній рівень](../підрівень/5).*\n\n\nТепер ти можеш додати до свого коду все, що забажаєш. Запитай у користувача кілька слів та використовуй кожне з них в історії, яку ти виводиш на екран. Ти можеш зробити свою програму більш інтерактивною, змінюючи поведінку спрайта з кожною подією або додаючи звуки та фон. Якщо тобі потрібна нова ідея, натисни на лампочку зліва.",
        "courseF_variables_predict": "Зроби прогноз! Досліди код.",
        "courseF_variables_predict_-2022-2": "Зроби прогноз! Досліди код.",
        "coursea_maze_ramp1_2021": "Щоб довести птаха до свині, приєднай блок <xml><block type=\"maze_moveEast\" block-text=\"move east\"/></xml> до нижньої частини блоку <xml><block type=\"when_run\" block-text=\"when run\"/></xml>, а потім натисни \"▶ Запустити\"!",
        "coursee_helloworld_events": "_Давайте зробимо спрайт сказати щось, коли ви натискаєте на нього!_\n\n-   Підключіть блок `say` під блоком `при натисканні`.\n-   Виберіть один і той же костюм в кожному блоці коду.\n-   Натисніть кнопку _Виконати_.\n-   Натисніть або торкніться спрайта, щоб він щось сказав.\n\n_Extra Challenge:_ Зробіть обидва спрайти сказати щось, коли вони натиснули!",
        "coursee_helloworld_freeplay": "_Настав час почати створювати все, що ви хочете! Коли ви закінчите, поділіться своїм проектом і скажіть «Привіт!» людям у вашому світі!_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/api/v1/animation-library/spritelab/cbCRwipEkaXhe.AzOSYwavvMApEYUkCa/category_food/face_pizza.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/up6b2tgqAjH6fxO6bKFn7O0CrgtxSkFz/category_animals/cuteanimals_bear.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/hKXwNDtCaVI4G0Ow.udOCdsMRnK77A48/category_emoji/emoji_19.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/O1HNS9DSfUZLw6lzWIkyCTLChPoDOJhz/category_retro/retrocreature_18.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\">\n</div>\n\n-   Додайте більше спрайту _costumes_ до вашого проекту, натиснувши вкладку _costumes_.\n-   Додайте _code_ до робочої області, щоб спрайти з'являлися.\n-   Спробуйте додати більше функцій до вашого проекту, щоб зробити його ще кращим.\n-   Натисніть кнопку _Share_ вище, щоб відправити свій проект деяким друзям!\n\nДля додаткового задоволення, ознайомтеся з новим блоком `create effect` в категорії\\*\\* Sprites\\*\\*!\n\n<xml>\n  <block type=\"gamelab_makeBurst\">\n    <title name=\"ANIMATION_NAME\">\"face_burger_1\"</title>\n    <value name=\"NUM\">\n      <block type=\"math_number\">\n        <title name=\"NUM\">10</title>\n      </block>\n    </value>\n  </block>\n</xml>",
        "coursee_helloworld_say": "_Привіт, світ! Я спрайт. Використовуйте блок `say`, щоб змусити мене сказати все, що вам подобається!_\n\n-   Перетягніть блок `make new sprite` у робочу область та підключіть його під `коли запуск`.\n-   Підключіть `say` блок _under_ a `зробити новий спрайт` блок.\n-   Переконайтеся, що виберіть той самий _costume_ в кожному блоці коду.\n-   Натисніть _Виконати_, коли закінчите.",
        "csd U3 conditional statements video_2019": "## Питання для обговорення\n\n-   Коли варто використовувати команду умови?",
        "csd U3 conditional statements video_2021": "## Питання для обговорення\n\n-   Коли варто використовувати команду умови?",
        "csd U3 conditional statements video_2022": "## Питання для обговорення\n\n-   Коли варто використовувати команду умови?",
        "csd web disagreement video_2021": "Запитання для розмірковування:\n\n-   Які три поради можна дати щодо вирішення суперечок?",
        "csd web disagreement video_2022": "Запитання для розмірковування:\n\n-   Які три поради можна дати щодо вирішення суперечок?",
        "csd web teamwork video_2021": "Запитання для обмірковування:\n\n-   Які переваги має робота в команді?\n-   Які поради допоможуть командам краще працювати разом?",
        "csd web teamwork video_2022": "Запитання для обмірковування:\n\n-   Які переваги має робота в команді?\n-   Які поради допоможуть командам краще працювати разом?",
        "csd-apps for good-1": "## Більше Дарема\n\nДля розв'язання якої соціальної проблеми, на твою думку, був розроблений цей застосунок?\n\nЯким чином він це робить?",
        "csd-apps for good-1_2022": "## Більше Дарема\n\nДля розв'язання якої соціальної проблеми, на твою думку, був розроблений цей застосунок?\n\nЯким чином він це робить?",
        "csd-apps for good-2": "## Збереження води\n\n-   Для розв'язання якої соціальної проблеми, на твою думку, був розроблений цей застосунок?\n-   Яким чином він це робить?",
        "csd-apps for good-2_2022": "## Збереження води\n\n-   Для розв'язання якої соціальної проблеми, на твою думку, був розроблений цей застосунок?\n-   Яким чином він це робить?",
        "csd-apps for good-3": "## Квадрат\n\nДля розв'язання якої соціальної проблеми, на твою думку, був розроблений цей застосунок?\n\nЯким чином він це робить?",
        "csd-apps for good-3_2022": "## Квадрат\n\nДля розв'язання якої соціальної проблеми, на твою думку, був розроблений цей застосунок?\n\nЯким чином він це робить?",
        "csd-explore ui-1": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-1_2022": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-2": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-2_2022": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-3": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-3_2022": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-4": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-4_2022": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-5": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-5_2022": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-6": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "csd-explore ui-6_2022": "# Завдання\n\nДосліди цей застосунок. Створи список різних елементів дизайну, які ти бачиш (кнопки, текстові поля тощо).\n\nПоділися цікавими функціями цих застосунків зі своєю командою.",
        "frozen circle": "Коло є особливою фігурою. Здогадаєшся, які числа потрібно поставити замість знаків питання, щоб намалювати коло?",
        "frozen circle function": "Використай новий блок \"Створити коло\" для малювання 10 кіл, які перекриваються. Не забудь перескакувати між колами.",
        "frozen circle function in circle": "А тепер створимо 20 кіл, котрі накладаються, повертаючи на 18 градусів між колами.",
        "frozen circle function with parameter": "Ось блок \"Створити коло\", який малює кола різних розмірів. Зможеш використати його для створення малого кола, розміром 5, та великого кола, розміром 10?",
        "frozen cross": "Розмісти ці команди всередині блоку \"Повторити\", щоб створити знак плюса. А ти зауважив, що Ельза може рухатись вперед та назад?",
        "frozen cross rotate": "А тепер спробуємо повторити 10 разів. На скільки градусів потрібно повертати між лініями?",
        "frozen cross rotate dense": "А повторимо це 90 разів! Скільки разів 90 входить у 360? Підказка: це дуже мале число.",
        "frozen diamond": "Застосуй блок повторення до цих блоків, щоб намалювати паралелограм. Він схожий на квадрат, але з різними кутами. Цей має кути 60 та 120 градусів, тоді як квадрат - усі по 90 градусів.",
        "frozen diamond mini snowflake": "Чи знаєш ти, що кожна сніжинка має унікальну форму? Створимо нову сніжинку, використавши блок \"Повторити\" для малювання паралелограма 4 рази, повертаючи на 90 градусів після кожної фігури.",
        "frozen diamond snowflake": "Що ж, створимо нову сніжинку, використавши блок повторення, щоб намалювати паралелограм 10 разів, повертаючи на 36 градусів між ними.",
        "frozen freeplay": "Офіційно вітаємо головного художника! Створи свою зимову казку.",
        "frozen perpendicular": "А тепер спробуємо створити дві лінії, розміщені під кутом 90 градусів між собою. Нам знадобиться блок \"Повернути\", а також блок \"Рухатись\".",
        "frozen snowflake branch": "Спробуй використати блок \"Створити гілочку сніжинки\" для побудови трьох гілочок, котрі починають нагадувати сніжинку.",
        "frozen snowflake full": "А тепер повтори 8 разів, щоб утворилась красива сніжинка!",
        "frozen snowflower": "Складні візерунки можна створити з простих фігур. Зможеш створити шаблон, намалювавши 5 кіл розміром 5, а та 5 кіл розміром 10?",
        "frozen square iterative": "Схоже, що ми вже на півдорозі до малювання квадрата. Складемо 4 лінії, щоб утворився квадрат.",
        "frozen square loop": "Привіт, я Анна з Еренделу! Спробуємо намалювати квадрат за допомогою блоку \"Повторити\", що дозволить використати менше блоків. Скільки разів ( замість ???) слід виконати дії всередині блоку \"Повторити\", щоб утворився квадрат?",
        "frozen square loop 3x": "Створимо 3 квадрати, повертаючи після кожного із них. Не забудь повернути на 120 градусів перед тим, як малювати наступний квадрат.",
        "frozen square snowflake": "Зможеш створити сніжинку за допомогою блоку \"Повторити\", в якому 10 разів малюватиметься квадрат, а блок \"Повернути\" виконає поворот на 36 градусів між фігурами?",
        "grade2_collector_10_2021": "Ще трошки! \n\nЗбери якомога більше скарбів, щоб завершити етап!",
        "grade2_collector_A_2021": "Допоможи Лорел зібрати всі скарби.",
        "helloworld_animals_backgrounds": "_Що ще ми можемо зробити з подіями? Давайте дізнаємося, як змінити фон._\n\n_Можливо, ви вже помітили ці блоки:_ \n<xml><block type=\"gamelab_setBackgroundImageAs\"><title name=\"IMG\">\"gradient_30\"</title></block></xml>\n\n<xml><block type=\"gamelab_setBackground\"><value name=\"COLOR\"><block type=\"colour_picker\"><title name=\"COLOUR\">#ffffff</title></block></value></block></xml>\n\n-   Помістіть ще один блок `set background` під подією, щоб змінити сцену, натиснувши спрайт.",
        "helloworld_animals_behaviors": "_Давайте навчимося анімувати спрайти, використовуючи поведінку. Поведінка - це дії, які відбуваються знову і знову під час запуску програми._\n\n-   Використовуйте нові блоки в нижній частині панелі інструментів, щоб анімувати один із спрайтів.\n\n_Challenge:_ Використовуйте **events**, щоб спрайт почав поведінку при натисканні.",
        "helloworld_animals_click": "_Що тут відрізняється? Чи можете ви змусити ці спрайти говорити?_\n\n-   Перегляньте код. Що ви помічаєте?\n-   Натисніть кнопку _Виконати_.\n-   Клацніть або торкніться спрайта.",
        "helloworld_animals_costumes": "_Давайте навчимося змінювати зовнішній вигляд спрайтів._\n\n-   Використовуйте новий блок `change costume`, щоб змінити костюм спрайту при натисканні.\n-   Пам'ятайте, що `подія` призведе до того, що щось станеться, коли користувач взаємодіє з вашими спрайтами.\n\n\\_Extra Challenge: \\_ Змініть костюм спрайта більше одного разу або змініть костюми декількох спрайтів.",
        "helloworld_animals_events": "_Давайте зробимо спрайт сказати щось, коли ви натискаєте на нього!_\n\n-   Підключіть блок `say` під блоком `при натисканні`.\n-   Виберіть один і той же костюм в кожному блоці коду.\n-   Натисніть кнопку _Виконати_.\n-   Натисніть або торкніться спрайта, щоб він щось сказав.\n\n_Extra Challenge:_ Зробіть обидва спрайти сказати щось, коли вони натиснули!",
        "helloworld_animals_freeplay": "_Настав час почати створювати все, що ви хочете! Коли ви закінчите, поділіться своїм проектом і скажіть «Привіт!» людям у вашому світі!_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/api/v1/animation-library/spritelab/cbCRwipEkaXhe.AzOSYwavvMApEYUkCa/category_food/face_pizza.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/up6b2tgqAjH6fxO6bKFn7O0CrgtxSkFz/category_animals/cuteanimals_bear.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/hKXwNDtCaVI4G0Ow.udOCdsMRnK77A48/category_emoji/emoji_19.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/O1HNS9DSfUZLw6lzWIkyCTLChPoDOJhz/category_retro/retrocreature_18.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\">\n</div>\n\n-   Додайте більше спрайту _costumes_ до вашого проекту, натиснувши вкладку _costumes_.\n-   Додайте _code_ до робочої області, щоб спрайти з'являлися.\n-   Спробуйте додати більше функцій до вашого проекту, щоб зробити його ще кращим.\n-   Натисніть кнопку _Share_ вище, щоб відправити свій проект деяким друзям!\n\nДля додаткового задоволення, ознайомтеся з новим блоком `create effect` в категорії\\*\\* Sprites\\*\\*!\n\n<xml>\n  <block type=\"gamelab_makeBurst\">\n    <title name=\"ANIMATION_NAME\">\"cuteanimals_bear\"</title>\n    <value name=\"NUM\">\n      <block type=\"math_number\">\n        <title name=\"NUM\">10</title>\n      </block>\n    </value>\n  </block>\n</xml>",
        "helloworld_animals_location": "_Дайте кожному спрайту інше місцезнаходження._\n\n-   Клацніть шпильку на блоці розташування, щоб перемістити спрайти в різні місця.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.",
        "helloworld_animals_multi": "_Давайте поспілкуватися! Зробіть ваші два спрайти кожен сказати щось._\n\n-   Додати код, щоб кожен спрайт сказати щось.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.\n\n_Додатковий виклик:_ Встановити фон.",
        "helloworld_animals_say": "_Привіт, світ! Я спрайт. Використовуйте блок `say`, щоб змусити мене сказати все, що вам подобається!_\n\n-   Перетягніть блок `make new sprite` у робочу область та підключіть його під `коли запуск`.\n-   Підключіть `say` блок _under_ a `зробити новий спрайт` блок.\n-   Переконайтеся, що виберіть той самий _costume_ в кожному блоці коду.\n-   Натисніть _Виконати_, коли закінчите.",
        "helloworld_animals_sizes": "_Давайте навчимося змінювати розмір спрайтів._\n\n-   Використовуйте нові блоки в панелі інструментів, щоб змінити розмір спрайту. \n-   Переконайтеся, що ви вибираєте розмір, відмінний від 100.\n\n_Challenge:_ Використовуйте **події**, щоб змінити розмір спрайтів при натисканні на них.",
        "helloworld_animals_sounds": "_Давайте навчимося відтворювати звуки._\n\n-   Використовуйте новий блок у наборі інструментів для відтворення звуку.\n\n_Challenge:_ Використовуйте **events** для відтворення звуку при натисканні на спрайт.",
        "helloworld_emoji_backgrounds": "_Що ще ми можемо зробити з подіями? Давайте дізнаємося, як змінити фон._\n\n_Можливо, ви вже помітили ці блоки:_ \n<xml><block type=\"gamelab_setBackgroundImageAs\"><title name=\"IMG\">\"gradient_10_1\"</title></block></xml>\n\n<xml><block type=\"gamelab_setBackground\"><value name=\"COLOR\"><block type=\"colour_picker\"><title name=\"COLOUR\">#ffffff</title></block></value></block></xml>\n\n-   Помістіть ще один блок `set background` під подією, щоб змінити сцену, натиснувши спрайт.",
        "helloworld_emoji_behaviors": "_Давайте навчимося анімувати спрайти, використовуючи поведінку. Поведінка - це дії, які відбуваються знову і знову під час запуску програми._\n\n-   Використовуйте нові блоки в нижній частині панелі інструментів, щоб анімувати один із спрайтів.\n\n_Challenge:_ Використовуйте **events**, щоб спрайт почав поведінку при натисканні.",
        "helloworld_emoji_click": "_Що тут відрізняється? Чи можете ви змусити ці спрайти говорити?_\n\n-   Перегляньте код. Що ви помічаєте?\n-   Натисніть кнопку _Виконати_.\n-   Клацніть або торкніться спрайта.",
        "helloworld_emoji_costumes": "_Давайте навчимося змінювати зовнішній вигляд спрайтів._\n\n-   Використовуйте новий блок `change costume`, щоб змінити костюм спрайту при натисканні.\n-   Пам'ятайте, що `подія` призведе до того, що щось станеться, коли користувач взаємодіє з вашими спрайтами.\n\n\\_Extra Challenge: \\_ Змініть костюм спрайта більше одного разу або змініть костюми декількох спрайтів.",
        "helloworld_emoji_events": "_Давайте зробимо спрайт сказати щось, коли ви натискаєте на нього!_\n\n-   Підключіть блок `say` під блоком `при натисканні`.\n-   Виберіть один і той же костюм в кожному блоці коду.\n-   Натисніть кнопку _Виконати_.\n-   Натисніть або торкніться спрайта, щоб він щось сказав.\n\n_Extra Challenge:_ Зробіть обидва спрайти сказати щось, коли вони натиснули!",
        "helloworld_emoji_freeplay": "_Настав час почати створювати все, що ви хочете! Коли ви закінчите, поділіться своїм проектом і скажіть «Привіт!» людям у вашому світі!_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/api/v1/animation-library/spritelab/cbCRwipEkaXhe.AzOSYwavvMApEYUkCa/category_food/face_pizza.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/up6b2tgqAjH6fxO6bKFn7O0CrgtxSkFz/category_animals/cuteanimals_bear.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/hKXwNDtCaVI4G0Ow.udOCdsMRnK77A48/category_emoji/emoji_19.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/O1HNS9DSfUZLw6lzWIkyCTLChPoDOJhz/category_retro/retrocreature_18.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\">\n</div>\n\n-   Додайте більше спрайту _costumes_ до вашого проекту, натиснувши вкладку _costumes_.\n-   Додайте _code_ до робочої області, щоб спрайти з'являлися.\n-   Спробуйте додати більше функцій до вашого проекту, щоб зробити його ще кращим.\n-   Натисніть кнопку _Share_ вище, щоб відправити свій проект деяким друзям!\n\nДля додаткового задоволення, ознайомтеся з новим блоком `create effect` в категорії\\*\\* Sprites\\*\\*!\n\n<xml>\n  <block type=\"gamelab_makeBurst\">\n    <title name=\"ANIMATION_NAME\">\"emoji_19\"</title>\n    <value name=\"NUM\">\n      <block type=\"math_number\">\n        <title name=\"NUM\">10</title>\n      </block>\n    </value>\n  </block>\n</xml>",
        "helloworld_emoji_location": "_Дайте кожному спрайту інше місцезнаходження._\n\n-   Клацніть шпильку на блоці розташування, щоб перемістити спрайти в різні місця.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.",
        "helloworld_emoji_multi": "_Давайте поспілкуватися! Зробіть ваші два спрайти кожен сказати щось._\n\n-   Додати код, щоб кожен спрайт сказати щось.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.\n\n_Додатковий виклик:_ Встановити фон.",
        "helloworld_emoji_say": "_Привіт, світ! Я спрайт. Використовуйте блок `say`, щоб змусити мене сказати все, що вам подобається!_\n\n-   Перетягніть блок `make new sprite` у робочу область та підключіть його під `коли запуск`.\n-   Підключіть `say` блок _under_ a `зробити новий спрайт` блок.\n-   Переконайтеся, що виберіть той самий _costume_ в кожному блоці коду.\n-   Натисніть _Виконати_, коли закінчите.",
        "helloworld_emoji_sizes": "_Давайте навчимося змінювати розмір спрайтів._\n\n-   Використовуйте нові блоки в панелі інструментів, щоб змінити розмір спрайту. \n-   Переконайтеся, що ви вибираєте розмір, відмінний від 100.\n\n_Challenge:_ Використовуйте **події**, щоб змінити розмір спрайтів при натисканні на них.",
        "helloworld_emoji_sounds": "_Давайте навчимося відтворювати звуки._\n\n-   Використовуйте новий блок у наборі інструментів для відтворення звуку.\n\n_Challenge:_ Використовуйте **events** для відтворення звуку при натисканні на спрайт.",
        "helloworld_food_backgrounds": "_Що ще ми можемо зробити з подіями? Давайте дізнаємося, як змінити фон._\n\n_Можливо, ви вже помітили ці блоки:_ \n<xml><block type=\"gamelab_setBackgroundImageAs\"><title name=\"IMG\">\"gradient_10_1\"</title></block></xml>\n\n<xml><block type=\"gamelab_setBackground\"><value name=\"COLOR\"><block type=\"colour_picker\"><title name=\"COLOUR\">#ffffff</title></block></value></block></xml>\n\n-   Помістіть ще один блок `set background` під подією, щоб змінити сцену, натиснувши спрайт.\n\n\\_Extra Challenge: \\_ Змініть фон кілька разів, натиснувши на кілька спрайтів!",
        "helloworld_food_backgrounds_soccer-2022": "_Що ще ми можемо зробити з подіями? Давайте дізнаємося, як змінити фон._\n\n_Можливо, ви вже помітили ці блоки:_ \n<xml><block type=\"gamelab_setBackgroundImageAs\"><title name=\"IMG\">\"gradient_10_1\"</title></block></xml>\n\n<xml><block type=\"gamelab_setBackground\"><value name=\"COLOR\"><block type=\"colour_picker\"><title name=\"COLOUR\">#ffffff</title></block></value></block></xml>\n\n-   Помістіть ще один блок `set background` під подією, щоб змінити сцену, натиснувши спрайт.\n\n\\_Extra Challenge: \\_ Змініть фон кілька разів, натиснувши на кілька спрайтів!",
        "helloworld_food_backgrounds_space-2022": "_Що ще ми можемо зробити з подіями? Давайте дізнаємося, як змінити фон._\n\n_Можливо, ви вже помітили ці блоки:_ \n<xml><block type=\"gamelab_setBackgroundImageAs\"><title name=\"IMG\">\"gradient_10_1\"</title></block></xml>\n\n<xml><block type=\"gamelab_setBackground\"><value name=\"COLOR\"><block type=\"colour_picker\"><title name=\"COLOUR\">#ffffff</title></block></value></block></xml>\n\n-   Помістіть ще один блок `set background` під подією, щоб змінити сцену, натиснувши спрайт.\n\n\\_Extra Challenge: \\_ Змініть фон кілька разів, натиснувши на кілька спрайтів!",
        "helloworld_food_behaviors": "_Давайте навчимося анімувати спрайти, використовуючи поведінку. Поведінка - це дії, які відбуваються знову і знову під час запуску програми._\n\n-   Використовуйте нові блоки в нижній частині панелі інструментів, щоб анімувати один із спрайтів.\n\n_Challenge:_ Використовуйте **events**, щоб спрайт почав поведінку при натисканні.",
        "helloworld_food_behaviors_soccer-2022": "_Давайте навчимося анімувати спрайти, використовуючи поведінку. Поведінка - це дії, які відбуваються знову і знову під час запуску програми._\n\n-   Використовуйте нові блоки в нижній частині панелі інструментів, щоб анімувати один із спрайтів.\n\n_Challenge:_ Використовуйте **events**, щоб спрайт почав поведінку при натисканні.",
        "helloworld_food_behaviors_space-2022": "_Давайте навчимося анімувати спрайти, використовуючи поведінку. Поведінка - це дії, які відбуваються знову і знову під час запуску програми._\n\n-   Використовуйте нові блоки в нижній частині панелі інструментів, щоб анімувати один із спрайтів.\n\n_Challenge:_ Використовуйте **events**, щоб спрайт почав поведінку при натисканні.",
        "helloworld_food_click": "_Що тут відрізняється? Чи можете ви змусити ці спрайти говорити?_\n\n-   Перегляньте код. Що ви помічаєте?\n-   Натисніть кнопку _Виконати_.\n-   Клацніть або торкніться спрайта.",
        "helloworld_food_click_soccer-2022": "_Що тут відрізняється? Чи можете ви змусити ці спрайти говорити?_\n\n-   Перегляньте код. Що ви помічаєте?\n-   Натисніть кнопку _Виконати_.\n-   Клацніть або торкніться спрайта.",
        "helloworld_food_click_space-2022": "\\_Чи можете ви змусити ці спрайти говорити? \\_\n\n-   Перегляньте код. Що ви помічаєте?\n-   Натисніть кнопку \\_\"Виконати» \\_.\n-   Клацніть або торкніться спрайта.",
        "helloworld_food_costumes": "_Давайте навчимося змінювати зовнішній вигляд спрайтів._\n\n-   Використовуйте новий блок `change costume`, щоб змінити костюм спрайту при натисканні.\n-   Пам'ятайте, що `подія` призведе до того, що щось станеться, коли користувач взаємодіє з вашими спрайтами.\n\n\\_Extra Challenge: \\_ Змініть костюм спрайта більше одного разу або змініть костюми декількох спрайтів.",
        "helloworld_food_costumes_soccer-2022": "_Давайте навчимося змінювати зовнішній вигляд спрайтів._\n\n-   Використовуйте новий блок `change costume`, щоб змінити костюм спрайту при натисканні.\n-   Пам'ятайте, що `подія` призведе до того, що щось станеться, коли користувач взаємодіє з вашими спрайтами.\n\n\\_Extra Challenge: \\_ Змініть костюм спрайта більше одного разу або змініть костюми декількох спрайтів.",
        "helloworld_food_costumes_space-2022": "_Давайте навчимося змінювати зовнішній вигляд спрайтів._\n\n-   Використовуйте новий блок `change costume`, щоб змінити костюм спрайту при натисканні.\n-   Пам'ятайте, що `подія` призведе до того, що щось станеться, коли користувач взаємодіє з вашими спрайтами.\n\n\\_Extra Challenge: \\_ Змініть костюм спрайта більше одного разу або змініть костюми декількох спрайтів.",
        "helloworld_food_events": "_Давайте зробимо спрайт сказати щось, коли ви натискаєте на нього!_\n\n-   Підключіть блок `say` під блоком `при натисканні`.\n-   Виберіть один і той же костюм в кожному блоці коду.\n-   Натисніть кнопку _Виконати_.\n-   Натисніть або торкніться спрайта, щоб він щось сказав.\n\n_Extra Challenge:_ Зробіть обидва спрайти сказати щось, коли вони натиснули!",
        "helloworld_food_events_soccer-2022": "_Давайте зробимо спрайт сказати щось, коли ви натискаєте на нього!_\n\n-   Підключіть блок `say` під блоком `при натисканні`.\n-   Виберіть один і той же костюм в кожному блоці коду.\n-   Натисніть кнопку _Виконати_.\n-   Натисніть або торкніться спрайта, щоб він щось сказав.\n\n_Extra Challenge:_ Зробіть обидва спрайти сказати щось, коли вони натиснули!",
        "helloworld_food_events_space-2022": "_Давайте зробимо спрайт сказати щось, коли ви натискаєте на нього!_\n\n-   Підключіть блок `say` під блоком `при натисканні`.\n-   Виберіть один і той же костюм в кожному блоці коду.\n-   Натисніть кнопку _Виконати_.\n-   Натисніть або торкніться спрайта, щоб він щось сказав.\n\n_Extra Challenge:_ Зробіть обидва спрайти сказати щось, коли вони натиснули!",
        "helloworld_food_freeplay": "_Настав час почати створювати все, що ви хочете! Коли ви закінчите, поділіться своїм проектом і скажіть «Привіт!» людям у вашому світі!_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/api/v1/animation-library/spritelab/cbCRwipEkaXhe.AzOSYwavvMApEYUkCa/category_food/face_pizza.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/up6b2tgqAjH6fxO6bKFn7O0CrgtxSkFz/category_animals/cuteanimals_bear.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/hKXwNDtCaVI4G0Ow.udOCdsMRnK77A48/category_emoji/emoji_19.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/O1HNS9DSfUZLw6lzWIkyCTLChPoDOJhz/category_retro/retrocreature_18.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\">\n</div>\n\n-   Додайте більше спрайту _costumes_ до вашого проекту, натиснувши вкладку _costumes_.\n-   Додайте _code_ до робочої області, щоб спрайти з'являлися.\n-   Спробуйте додати більше функцій до вашого проекту, щоб зробити його ще кращим.\n-   Натисніть кнопку _Share_ вище, щоб відправити свій проект деяким друзям!\n\nДля додаткового задоволення, ознайомтеся з новим блоком `create effect` в категорії\\*\\* Sprites\\*\\*!\n\n<xml>\n  <block type=\"gamelab_makeBurst\">\n    <title name=\"ANIMATION_NAME\">\"face_burger_1\"</title>\n    <value name=\"NUM\">\n      <block type=\"math_number\">\n        <title name=\"NUM\">10</title>\n      </block>\n    </value>\n  </block>\n</xml>",
        "helloworld_food_freeplay_soccer-2022": "_Настав час почати створювати все, що ви хочете! Коли ви закінчите, поділіться своїм проектом і скажіть «Привіт!» людям у вашому світі!_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/api/v1/animation-library/spritelab/FtyDPCdPAUpUJaJb_KJYPf7hTvk70qwv/category_sports/soccer_ball.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/8gC4IJlmaANSQ2nC4n6nwspUHroJSWwd/category_sports/soccer_player_4.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/D6gv9H1EUMv3zC.1qarPSuTpjV5xHXN5/category_sports/soccer_trophy.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/WVrdWiyVvKgDIFxer4j9dZynKdcvaOV2/category_sports/soccer_player_1.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\">\n</div>\n\n-   Додайте більше спрайту _costumes_ до вашого проекту, натиснувши вкладку _costumes_.\n-   Додайте _code_ до робочої області, щоб спрайти з'являлися.\n-   Спробуйте додати більше функцій до вашого проекту, щоб зробити його ще кращим.\n-   Натисніть кнопку _Share_ вище, щоб відправити свій проект деяким друзям!\n\nДля додаткового задоволення, ознайомтеся з новим блоком `create effect` в категорії\\*\\* Sprites\\*\\*!\n\n<xml>\n  <block type=\"gamelab_makeBurst\">\n    <title name=\"ANIMATION_NAME\">\"face_burger_1\"</title>\n    <value name=\"NUM\">\n      <block type=\"math_number\">\n        <title name=\"NUM\">10</title>\n      </block>\n    </value>\n  </block>\n</xml>",
        "helloworld_food_freeplay_space-2022": "\\_Настав час почати створювати все, що ви хочете! Коли ви закінчите, поділіться своїм проектом і скажіть «Привіт!» людям у вашому світі! \\_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/api/v1/animation-library/spritelab/BwBMSmcRhyFJcNQdvbF4EQNr6iBqqJcE/category_space/space_astronaut_unicorn.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/2gg2OueoMTsFgRsb8gFe5tfh1qgKKEhW.S/category_space/space_astronaut_4.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/hjsJUEMDi_KtdrHYBbTAE6352QGi.bQ8/category_space/space_sun.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/zfJDL4rdROZ999p.U5.8sOu8zP5VkSVb/category_space/space_rover.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\">\n</div>\n\n-   Додайте більше спрайту _costumes_ до вашого проекту, натиснувши вкладку _costumes_.\n-   Додайте _code_ до робочої області, щоб спрайти з'являлися.\n-   Спробуйте додати більше функцій до вашого проекту, щоб зробити його ще кращим.\n-   Натисніть кнопку _Share_ вище, щоб відправити свій проект деяким друзям!\n\nДля додаткового задоволення, ознайомтеся з новим блоком `create effect` в категорії\\*\\* Sprites\\*\\*!\n\n<xml>\n  <block type=\"gamelab_makeBurst\">\n    <title name=\"ANIMATION_NAME\">\"face_burger_1\"</title>\n    <value name=\"NUM\">\n      <block type=\"math_number\">\n        <title name=\"NUM\">10</title>\n      </block>\n    </value>\n  </block>\n</xml>",
        "helloworld_food_location": "_Дайте кожному спрайту інше місцезнаходження._\n\n-   Клацніть шпильку на блоці розташування, щоб перемістити спрайти в різні місця.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.",
        "helloworld_food_location_soccer-2022": "_Дайте кожному спрайту інше місцезнаходження._\n\n-   Клацніть шпильку на блоці розташування, щоб перемістити спрайти в різні місця.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.",
        "helloworld_food_location_space-2022": "_Дайте кожному спрайту інше місцезнаходження._\n\n-   Клацніть шпильку на блоці розташування, щоб перемістити спрайти в різні місця.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.",
        "helloworld_food_multi": "_Давайте поспілкуватися! Зробіть ваші два спрайти кожен сказати щось._\n\n-   Додати код, щоб кожен спрайт сказати щось.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.\n\n_Додатковий виклик:_ Встановити фон.",
        "helloworld_food_multi_soccer-2022": "_Давайте поспілкуватися! Зробіть ваші два спрайти кожен сказати щось._\n\n-   Додати код, щоб кожен спрайт сказати щось.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.\n\n_Додатковий виклик:_ Встановити фон.",
        "helloworld_food_multi_space-2022": "_Давайте поспілкуватися! Зробіть ваші два спрайти кожен сказати щось._\n\n-   Додати код, щоб кожен спрайт сказати щось.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.\n\n_Додатковий виклик:_ Встановити фон.",
        "helloworld_food_say": "_Привіт, світ! Я спрайт. Використовуйте блок `say`, щоб змусити мене сказати все, що вам подобається!_\n\n-   Перетягніть блок `make new sprite` у робочу область та підключіть його під `коли запуск`.\n-   Підключіть `say` блок _under_ a `зробити новий спрайт` блок.\n-   Переконайтеся, що виберіть той самий _costume_ в кожному блоці коду.\n-   Натисніть _Виконати_, коли закінчите.",
        "helloworld_food_say_soccer-2022": "_Привіт, світ! Я спрайт. Використовуйте блок `say`, щоб змусити мене сказати все, що вам подобається!_\n\n-   Перетягніть блок `make new sprite` у робочу область та підключіть його під `коли запуск`.\n-   Підключіть `say` блок _under_ a `зробити новий спрайт` блок.\n-   Переконайтеся, що виберіть той самий _costume_ в кожному блоці коду.\n-   Натисніть _Виконати_, коли закінчите.",
        "helloworld_food_say_space-2022": "_Привіт, світ! Я спрайт. Використовуйте блок `say`, щоб змусити мене сказати все, що вам подобається!_\n\n-   Перетягніть блок `make new sprite` у робочу область та підключіть його під `коли запуск`.\n-   Підключіть `say` блок _under_ a `зробити новий спрайт` блок.\n-   Переконайтеся, що виберіть той самий _costume_ в кожному блоці коду.\n-   Натисніть _Виконати_, коли закінчите.",
        "helloworld_food_sizes": "_Давайте навчимося змінювати розмір спрайтів._\n\n-   Використовуйте нові блоки в панелі інструментів, щоб змінити розмір спрайту. \n-   Переконайтеся, що ви вибираєте розмір, відмінний від 100.\n\n_Challenge:_ Використовуйте **події**, щоб змінити розмір спрайтів при натисканні на них.",
        "helloworld_food_sizes_soccer-2022": "_Давайте навчимося змінювати розмір спрайтів._\n\n-   Використовуйте нові блоки в панелі інструментів, щоб змінити розмір спрайту. \n-   Переконайтеся, що ви вибираєте розмір, відмінний від 100.\n\n_Challenge:_ Використовуйте **події**, щоб змінити розмір спрайтів при натисканні на них.",
        "helloworld_food_sizes_space-2022": "_Давайте навчимося змінювати розмір спрайтів._\n\n-   Використовуйте нові блоки в панелі інструментів, щоб змінити розмір спрайту. \n-   Переконайтеся, що ви вибираєте розмір, відмінний від 100.\n\n_Challenge:_ Використовуйте **події**, щоб змінити розмір спрайтів при натисканні на них.",
        "helloworld_food_sounds": "_Давайте навчимося відтворювати звуки._\n\n-   Використовуйте новий блок у наборі інструментів для відтворення звуку.\n\n_Challenge:_ Використовуйте **events** для відтворення звуку при натисканні на спрайт.",
        "helloworld_food_sounds_soccer-2022": "_Давайте навчимося відтворювати звуки._\n\n-   Використовуйте новий блок у наборі інструментів для відтворення звуку.\n\n_Challenge:_ Використовуйте **events** для відтворення звуку при натисканні на спрайт.",
        "helloworld_food_sounds_space-2022": "_Давайте навчимося відтворювати звуки._\n\n-   Використовуйте новий блок у наборі інструментів для відтворення звуку.\n\n_Challenge:_ Використовуйте **events** для відтворення звуку при натисканні на спрайт.",
        "helloworld_retro_backgrounds": "_Що ще ми можемо зробити з подіями? Давайте дізнаємося, як змінити фон._\n\n_Можливо, ви вже помітили ці блоки:_ \n<xml><block type=\"gamelab_setBackgroundImageAs\"><title name=\"IMG\">\"gradient_10_1\"</title></block></xml>\n\n<xml><block type=\"gamelab_setBackground\"><value name=\"COLOR\"><block type=\"colour_picker\"><title name=\"COLOUR\">#ffffff</title></block></value></block></xml>\n\n-   Помістіть ще один блок `set background` під подією, щоб змінити сцену, натиснувши спрайт.\n\n\\_Extra Challenge: \\_ Змініть фон кілька разів, натиснувши на кілька спрайтів!",
        "helloworld_retro_behaviors": "_Давайте навчимося анімувати спрайти, використовуючи поведінку. Поведінка - це дії, які відбуваються знову і знову під час запуску програми._\n\n-   Використовуйте нові блоки в нижній частині панелі інструментів, щоб анімувати один із спрайтів.\n\n_Challenge:_ Використовуйте **events**, щоб спрайт почав поведінку при натисканні.",
        "helloworld_retro_click": "_Що тут відрізняється? Чи можете ви змусити ці спрайти говорити?_\n\n-   Перегляньте код. Що ви помічаєте?\n-   Натисніть кнопку _Виконати_.\n-   Клацніть або торкніться спрайта.",
        "helloworld_retro_costumes": "_Давайте навчимося змінювати зовнішній вигляд спрайтів._\n\n-   Використовуйте новий блок `change costume`, щоб змінити костюм спрайту при натисканні.\n-   Пам'ятайте, що `подія` призведе до того, що щось станеться, коли користувач взаємодіє з вашими спрайтами.\n\n\\_Extra Challenge: \\_ Змініть костюм спрайта більше одного разу або змініть костюми декількох спрайтів.",
        "helloworld_retro_events": "_Давайте зробимо спрайт сказати щось, коли ви натискаєте на нього!_\n\n-   Підключіть блок `say` під блоком `при натисканні`.\n-   Виберіть один і той же костюм в кожному блоці коду.\n-   Натисніть кнопку _Виконати_.\n-   Натисніть або торкніться спрайта, щоб він щось сказав.\n\n_Extra Challenge:_ Зробіть обидва спрайти сказати щось, коли вони натиснули!",
        "helloworld_retro_freeplay": "_Настав час почати створювати все, що ви хочете! Коли ви закінчите, поділіться своїм проектом і скажіть «Привіт!» людям у вашому світі!_\n\n<div style=\"float:right;padding:20px\">\n<img src=\"https://studio.code.org/api/v1/animation-library/spritelab/cbCRwipEkaXhe.AzOSYwavvMApEYUkCa/category_food/face_pizza.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/up6b2tgqAjH6fxO6bKFn7O0CrgtxSkFz/category_animals/cuteanimals_bear.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/hKXwNDtCaVI4G0Ow.udOCdsMRnK77A48/category_emoji/emoji_19.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\"><img src=\"https://studio.code.org/api/v1/animation-library/spritelab/O1HNS9DSfUZLw6lzWIkyCTLChPoDOJhz/category_retro/retrocreature_18.png\" style=\"height:60px; border-width:0px; border-style:solid; border-color:black; border-radius:10px\">\n</div>\n\n-   Додайте більше спрайту _costumes_ до вашого проекту, натиснувши вкладку _costumes_.\n-   Додайте _code_ до робочої області, щоб спрайти з'являлися.\n-   Спробуйте додати більше функцій до вашого проекту, щоб зробити його ще кращим.\n-   Натисніть кнопку _Share_ вище, щоб відправити свій проект деяким друзям!\n\nДля додаткового задоволення, ознайомтеся з новим блоком `create effect` в категорії\\*\\* Sprites\\*\\*!\n\n<xml>\n  <block type=\"gamelab_makeBurst\">\n    <title name=\"ANIMATION_NAME\">\"retrocreature_18\"</title>\n    <value name=\"NUM\">\n      <block type=\"math_number\">\n        <title name=\"NUM\">10</title>\n      </block>\n    </value>\n  </block>\n</xml>",
        "helloworld_retro_location": "_Дайте кожному спрайту інше місцезнаходження._\n\n-   Клацніть шпильку на блоці розташування, щоб перемістити спрайти в різні місця.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.",
        "helloworld_retro_multi": "_Давайте поспілкуватися! Зробіть ваші два спрайти кожен сказати щось._\n\n-   Додати код, щоб кожен спрайт сказати щось.\n-   Натисніть \\_\"Виконати» \\_, коли закінчите.\n\n_Додатковий виклик:_ Встановити фон.",
        "helloworld_retro_say": "_Привіт, світ! Я спрайт. Використовуйте блок `say`, щоб змусити мене сказати все, що вам подобається!_\n\n-   Перетягніть блок `make new sprite` у робочу область та підключіть його під `коли запуск`.\n-   Підключіть `say` блок _under_ a `зробити новий спрайт` блок.\n-   Переконайтеся, що виберіть той самий _costume_ в кожному блоці коду.\n-   Натисніть _Виконати_, коли закінчите.",
        "helloworld_retro_sizes": "_Давайте навчимося змінювати розмір спрайтів._\n\n-   Використовуйте нові блоки в панелі інструментів, щоб змінити розмір спрайту. \n-   Переконайтеся, що ви вибираєте розмір, відмінний від 100.\n\n_Challenge:_ Використовуйте **події**, щоб змінити розмір спрайтів при натисканні на них.",
        "helloworld_retro_sounds": "_Давайте навчимося відтворювати звуки._\n\n-   Використовуйте новий блок у наборі інструментів для відтворення звуку.\n\n_Challenge:_ Використовуйте **events** для відтворення звуку при натисканні на спрайт.",
        "international_outbreak_freeplay": "# Поширте своє повідомлення!\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Ви можете поділитись своїм творінням - і своїм повідомленням - з усім світом! Чому ви навчились у цій вправі? Що, ви сподіваєтесь, дізнаються інші?_\n\n</div>\n\nБлок [blockly block][0] показує на екрані текст, поки працює ваша симуляція. Використайте його, щоб розповісти користувачеві, як працює симуляція, або щоб передати повідомлення.\n\nОсь кілька прикладів:\n\n[blockly block][1]\n\n[blockly block][2]",
        "ml-L2 supervised - green glass door-2021": "# Двері з зеленого скла\n\nУ цій грі ми спробуємо дізнатися, які слова проходять через зелені скляні двері. Спробуй з'ясувати закономірність, яка визначає, які слова приймаються, а які відхиляються.\n\n## Завдання\n\n-   Запусти програму та прочитай інструкції\n-   Придумай щонайменше 5 прикладів слів. За бажанням, можна придумати більше - що більше прикладів у тебе буде, то вища ймовірність визначення закономірності\n-   Можеш випробувати деякі слова самостійно, щоб перевірити, які слова приймаються, а які відхиляються. Це допоможе перевірити, чи тобі вдалось зрозуміти закономірність.",
        "ml-L2 supervised - green glass door_2022": "# Двері з зеленого скла\n\nУ цій грі ми спробуємо дізнатися, які слова проходять через зелені скляні двері. Спробуй з'ясувати закономірність, яка визначає, які слова приймаються, а які відхиляються.\n\n## Завдання\n\n-   Запусти програму та прочитай інструкції\n-   Придумай щонайменше 5 прикладів слів. За бажанням, можна придумати більше - що більше прикладів у тебе буде, то вища ймовірність визначення закономірності\n-   Можеш випробувати деякі слова самостійно, щоб перевірити, які слова приймаються, а які відхиляються. Це допоможе перевірити, чи тобі вдалось зрозуміти закономірність.",
        "ml-L2 unsupervised - 1-2021": "## Шукаємо закономірності\n\nКожен квадрат на екрані містить 3 числа. Квадрати можна перетягувати, щоб перемістити їх по екрану.\n\nСпробуй згрупувати квадрати у будь-який спосіб, який має для тебе сенс. Ти можеш порівнювати окремі рядки чисел з іншими клітинками або порівнювати числа всередині самого квадрата  - як тобі зручніше.\n\n# Завдання\n\n-   Перетягуй квадрати по екрану так, щоб було щонайменше 3 різні групи (за бажанням можна створити більше!).\n-   Після створення груп, натисни кнопку \"Далі\", щоб побачити, що представляє кожне поле.\n-   Коли квадрати будуть відкриті, спробуй описати свої групи для когось іншого.",
        "ml-L2 unsupervised - 1_2022": "## Шукаємо закономірності\n\nКожен квадрат на екрані містить 3 числа. Квадрати можна перетягувати, щоб перемістити їх по екрану.\n\nСпробуй згрупувати квадрати у будь-який спосіб, який має для тебе сенс. Ти можеш порівнювати окремі рядки чисел з іншими клітинками або порівнювати числа всередині самого квадрата  - як тобі зручніше.\n\n# Завдання\n\n-   Перетягуй квадрати по екрану так, щоб було щонайменше 3 різні групи (за бажанням можна створити більше!).\n-   Після створення груп, натисни кнопку \"Далі\", щоб побачити, що представляє кожне поле.\n-   Коли квадрати будуть відкриті, спробуй описати свої групи для когось іншого.",
        "ml-bad data-club investigations": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_ **Завдання:** Обери набір даних, який тобі хотілося б дослідити. В інструкції до вправи міститься додаткова інформація про проблеми, з якими стикається кожен учень.\n\n    -   _Клацання по набору даних викликає інструкцію:_ Більше інформації про цей набір даних можна знайти на правій панелі. Коли знайдеш набір даних, який тобі подобається, натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик, який потрібно використати як мітку, а потім натисни кнопку \"\"Продовжити\".\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Клацай по різних стовпчиках, щоб дослідити дані, які зібрав цей учень. Шукай причини, чому у нього можуть виникнути проблеми з моделлю. Обери кілька ознак для навчання і тестування.\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Клацай по різних стовпчиках, щоб дослідити дані, які зібрав цей учень. Шукай причини, чому у нього можуть виникнути проблеми з моделлю. Обери кілька ознак для навчання і тестування.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Клацай по різних стовпчиках, щоб дослідити дані, які зібрав цей учень. Шукай причини, чому у нього можуть виникнути проблеми з моделлю. Обери кілька ознак для навчання і тестування.\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:**  Досліди точність моделі та протестуй її з новими даними. Використовуй це, щоб визначити, чому з моделлю учня могли виникнути проблеми.\n\n    -   _Клацання по панелі докладної інформації викликає інструкцію:_ **Завдання:** Досліди точність моделі та протестуй її з новими даними. Використовуй це, щоб визначити, чому з моделлю учня могли виникнути проблеми.",
        "ml-bad data-club investigations_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_ **Завдання:** Обери набір даних, який тобі хотілося б дослідити. В інструкції до вправи міститься додаткова інформація про проблеми, з якими стикається кожен учень.\n\n    -   _Клацання по набору даних викликає інструкцію:_ Більше інформації про цей набір даних можна знайти на правій панелі. Коли знайдеш набір даних, який тобі подобається, натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик, який потрібно використати як мітку, а потім натисни кнопку \"\"Продовжити\".\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Клацай по різних стовпчиках, щоб дослідити дані, які зібрав цей учень. Шукай причини, чому у нього можуть виникнути проблеми з моделлю. Обери кілька ознак для навчання і тестування.\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Клацай по різних стовпчиках, щоб дослідити дані, які зібрав цей учень. Шукай причини, чому у нього можуть виникнути проблеми з моделлю. Обери кілька ознак для навчання і тестування.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Клацай по різних стовпчиках, щоб дослідити дані, які зібрав цей учень. Шукай причини, чому у нього можуть виникнути проблеми з моделлю. Обери кілька ознак для навчання і тестування.\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:**  Досліди точність моделі та протестуй її з новими даними. Використовуй це, щоб визначити, чому з моделлю учня могли виникнути проблеми.\n\n    -   _Клацання по панелі докладної інформації викликає інструкцію:_ **Завдання:** Досліди точність моделі та протестуй її з новими даними. Використовуй це, щоб визначити, чому з моделлю учня могли виникнути проблеми.",
        "ml-bad data-loneliness all": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_  Кожен набір даних нижче є результатом опитування, проведеного серед учнів в іншій частині світу. **Завдання:** Обери набір даних, який тобі хотілося б дослідити\n\n    -   _Клацання по набору даних викликає інструкцію:_ Більше інформації про цей набір даних ти можеш побачити на правій панелі, включно з деякими потенційними дослідженнями. Коли знайдеш набір даних, який тобі подобається, натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Переглянь стовпчики та знайди той, який можна використати як мітку, а потім натисни кнопку \"Продовжити\". Ти завжди можеш повернутися на цей екран, якщо передумаєш.\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Обери стовпець для дослідження як потенційну мітку. \n\n    -   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Подумай, чи хочеш ти використовувати цей стовпчик як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як ознаки.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:**  Подумай, чи хочеш ти використовувати цей стовпчик як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:** Якщо ти задоволений точністю твоєї моделі, натисни кнопку \"Продовжити\". Якщо ні, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання по панелі докладної інформації викликає інструкцію:_ \\***\\*Завдання:** Якщо ти задоволений точністю твоєї моделі, натисни кнопку \"Продовжити\". Якщо ні, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.",
        "ml-bad data-loneliness all_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_  Кожен набір даних нижче є результатом опитування, проведеного серед учнів в іншій частині світу. **Завдання:** Обери набір даних, який тобі хотілося б дослідити\n\n    -   _Клацання по набору даних викликає інструкцію:_ Більше інформації про цей набір даних ти можеш побачити на правій панелі, включно з деякими потенційними дослідженнями. Коли знайдеш набір даних, який тобі подобається, натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Переглянь стовпчики та знайди той, який можна використати як мітку, а потім натисни кнопку \"Продовжити\". Ти завжди можеш повернутися на цей екран, якщо передумаєш.\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Обери стовпець для дослідження як потенційну мітку. \n\n    -   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Подумай, чи хочеш ти використовувати цей стовпчик як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як ознаки.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:**  Подумай, чи хочеш ти використовувати цей стовпчик як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:** Якщо ти задоволений точністю твоєї моделі, натисни кнопку \"Продовжити\". Якщо ні, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання по панелі докладної інформації викликає інструкцію:_ \\***\\*Завдання:** Якщо ти задоволений точністю твоєї моделі, натисни кнопку \"Продовжити\". Якщо ні, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.",
        "ml-club app-add theme": "# Удосконалення стилю\n\nЗробімо дизайн трохи більш стильним і привабливим. Ми можемо зробити це за допомогою готових тем від Програмної Лабораторії.\n\n# Завдання:\n\n-   У режимі дизайну натисни розкривне меню \"Теми\" і обери тему <br />\n    <img src=\"https://images.code.org/9e5938b46efeb73d3121bd2212b4a30a-image-1616287477153.png\" width=\"25%\" />\n\n-   Тестуй різні теми, поки не знайдеш ту, яка тобі до вподоби.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-club app-add theme_2022": "# Удосконалення стилю\n\nЗробімо дизайн трохи більш стильним і привабливим. Ми можемо зробити це за допомогою готових тем від Програмної Лабораторії.\n\n# Завдання:\n\n-   У режимі дизайну натисни розкривне меню \"Теми\" і обери тему <br />\n    <img src=\"https://images.code.org/9e5938b46efeb73d3121bd2212b4a30a-image-1616287477153.png\" width=\"25%\" />\n\n-   Тестуй різні теми, поки не знайдеш ту, яка тобі до вподоби.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-club app-choice accessible": "# Зроби свій застосунок доступнішим\n\nЗої хоче допомогти зробити застосунок більш доступним для людей з інвалідністю. Вона хоче використати [цей вебсайт з різними порадами щодо дизайну] (https://github.com/UKHomeOffice/posters/blob/master/accessibility/dos-donts/posters_en-UK/accessibility-posters-set.pdf), щоб оновити зовнішній вигляд застосунку.\n\n# Завдання:\n\n- Обери _один_ з плакатів за [цим посиланням] (https://github.com/UKHomeOffice/posters/blob/master/accessibility/dos-donts/posters_en-UK/accessibility-posters-set.pdf), щоб зосередитися на ньому.\n- Дотримуйся інструкцій на плакаті, щоб оновити свій застосунок. Вони можуть включати деякі з наступних пунктів:\n\t- Зміна макета застосунку, особливо способу відображення тексту та зображень на екрані\n    - Зміна кольорів і розмірів шрифтів для полегшення читання\n    - Додавання додаткових елементів дизайну, щоб зробити кожен екран зрозумілішим\n    - Додавання блоку `playSpeech` для допомоги користувачам з вадами зору\n    - Додавання блоку `open` для включення посилань на додаткові ресурси\n\nЗакінчивши, перейди на наступний рівень, щоб переглянути свій застосунок.",
        "ml-club app-choice accessible_2022": "# Зроби свій застосунок доступнішим\n\nЗої хоче допомогти зробити застосунок більш доступним для людей з інвалідністю. Вона хоче використати [цей вебсайт з різними порадами щодо дизайну] (https://github.com/UKHomeOffice/posters/blob/master/accessibility/dos-donts/posters_en-UK/accessibility-posters-set.pdf), щоб оновити зовнішній вигляд застосунку.\n\n# Завдання:\n\n- Обери _один_ з плакатів за [цим посиланням] (https://github.com/UKHomeOffice/posters/blob/master/accessibility/dos-donts/posters_en-UK/accessibility-posters-set.pdf), щоб зосередитися на ньому.\n- Дотримуйся інструкцій на плакаті, щоб оновити свій застосунок. Вони можуть включати деякі з наступних пунктів:\n\t- Зміна макета застосунку, особливо способу відображення тексту та зображень на екрані\n    - Зміна кольорів і розмірів шрифтів для полегшення читання\n    - Додавання додаткових елементів дизайну, щоб зробити кожен екран зрозумілішим\n    - Додавання блоку `playSpeech` для допомоги користувачам з вадами зору\n    - Додавання блоку `open` для включення посилань на додаткові ресурси\n\nЗакінчивши, перейди на наступний рівень, щоб переглянути свій застосунок.",
        "ml-club app-choice features": "# Додавання функціональних екранів\n\nАйзек і Хава хочуть зробити кожне питання окремим екраном, щоб можна було додати більше інформації про кожну функцію та зображення. Це означає, що користувач почне з домашнього екрана, потім перейде до кількох екранів із запитаннями, а потім завершить на екрані з прогнозом.\n\n# Завдання:\n\n- У режимі конструктора:\n\t- Створи новий екран для однієї з твоїх ознак. Признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Напис з описом функції та признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Розкривний список. Признач йому унікальний ідентифікатор, а потім використовуй картку моделі для введення варіантів вибору ознаки.\n    - Додай на екран елемент Кнопка, щоб користувач міг натискати на неї для переходу до наступних екранів. Признач йому унікальний ідентифікатор.\n    - Коли екран буде готовий, видали початкові елементи дизайну з екрана Прогноз.\n- Повторюй цей процес для кожної функції. Коли ти завершиш, у тебе повинно з'явитися 4 нових екрани\n- В режимі кодування:\n\t- Додай блок [`onEvent()`(#fff176)](/docs/applab/onEvent/) для кожної доданої кнопки.\n    - Всередині кожного блоку [`onEvent()`(#fff176)](/docs/applab/onEvent/): використовуй блок [`setScreen()`(#fff176)](/docs/applab/setScreen/) для переходу на наступний екран.\n    - Онови блоки [`addPair()`(#BB77C7)](/docs/applab/addPair/) для використання з новими елементами дизайну, які ми додали на кожен екран.\n\nЗавершивши, перейди до наступного рівня для огляду своєї програми.",
        "ml-club app-choice features_2022": "# Додавання функціональних екранів\n\nАйзек і Хава хочуть зробити кожне питання окремим екраном, щоб можна було додати більше інформації про кожну функцію та зображення. Це означає, що користувач почне з домашнього екрана, потім перейде до кількох екранів із запитаннями, а потім завершить на екрані з прогнозом.\n\n# Завдання:\n\n- У режимі конструктора:\n\t- Створи новий екран для однієї з твоїх ознак. Признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Напис з описом функції та признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Розкривний список. Признач йому унікальний ідентифікатор, а потім використовуй картку моделі для введення варіантів вибору ознаки.\n    - Додай на екран елемент Кнопка, щоб користувач міг натискати на неї для переходу до наступних екранів. Признач йому унікальний ідентифікатор.\n    - Коли екран буде готовий, видали початкові елементи дизайну з екрана Прогноз.\n- Повторюй цей процес для кожної функції. Коли ти завершиш, у тебе повинно з'явитися 4 нових екрани\n- В режимі кодування:\n\t- Додай блок [`onEvent()`(#fff176)](/docs/applab/onEvent/) для кожної доданої кнопки.\n    - Всередині кожного блоку [`onEvent()`(#fff176)](/docs/applab/onEvent/): використовуй блок [`setScreen()`(#fff176)](/docs/applab/setScreen/) для переходу на наступний екран.\n    - Онови блоки [`addPair()`(#BB77C7)](/docs/applab/addPair/) для використання з новими елементами дизайну, які ми додали на кожен екран.\n\nЗавершивши, перейди до наступного рівня для огляду своєї програми.",
        "ml-club app-choice if-statements": "# Створення унікальних екранів прогнозів\n\nКім і Ніко хочуть зробити так, щоб користувач переходив на новий екран залежно від рекомендованого йому клубу. Це означає, що коли користувач натискає кнопку \"Прогноз\", він потрапляє на інший екран, залежно від того, який клуб йому запропонований.\n\n# Завдання:\n\n- У режимі конструктора:\n\t- Створи новий екран для однієї з рекомендацій клубу. Признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Напис з описом клубу. Признач йому унікальний ідентифікатор.\n    - Додай на екран Зображення, яке представляє клуб. Признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Кнопка, щоб користувач міг натиснути на нього, щоб повернутися на головний екран. Признач йому унікальний ідентифікатор.\n- Повтори цей процес для кожного клубу. Коли завершиш, у тебе вас повинно бути 5 нових екранів\n- У режимі кодування:\n\t- Всередині блоку [`onEvent()`(#fff176)](/docs/applab/onEvent/): додай [`команда умови`(#64B5F6)](/docs/applab/ifBlock/) для перевірки результату змінної `value`.\n    - Всередині команди [`умови`(#64B5F6)](/docs/applab/ifBlock/): використай блок [`setScreen()`(#fff176)](/docs/applab/setScreen/), щоб змінити екран залежно від того, яке значення було введене.\n    - Додай [`onEvent()`(#fff176)] (/docs/applab/onEvent/) для кнопки \"На головний екран\", яку створено на новому екрані цього клубу\n    - Усередині блоку [`onEvent()`(#fff176)](/docs/applab/onEvent/): використовуй блок [`setScreen()`(#fff176)](/docs/applab/setScreen/), щоб повернутися на екран привітання програми.\n- Повтори цей процес для кожного з клубів\n\nЗавершивши роботу, перейди на наступний рівень, щоб переглянути свою програму.",
        "ml-club app-choice if-statements_2022": "# Створення унікальних екранів прогнозів\n\nКім і Ніко хочуть зробити так, щоб користувач переходив на новий екран залежно від рекомендованого йому клубу. Це означає, що коли користувач натискає кнопку \"Прогноз\", він потрапляє на інший екран, залежно від того, який клуб йому запропонований.\n\n# Завдання:\n\n- У режимі конструктора:\n\t- Створи новий екран для однієї з рекомендацій клубу. Признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Напис з описом клубу. Признач йому унікальний ідентифікатор.\n    - Додай на екран Зображення, яке представляє клуб. Признач йому унікальний ідентифікатор.\n    - Додай на екран елемент Кнопка, щоб користувач міг натиснути на нього, щоб повернутися на головний екран. Признач йому унікальний ідентифікатор.\n- Повтори цей процес для кожного клубу. Коли завершиш, у тебе вас повинно бути 5 нових екранів\n- У режимі кодування:\n\t- Всередині блоку [`onEvent()`(#fff176)](/docs/applab/onEvent/): додай [`команда умови`(#64B5F6)](/docs/applab/ifBlock/) для перевірки результату змінної `value`.\n    - Всередині команди [`умови`(#64B5F6)](/docs/applab/ifBlock/): використай блок [`setScreen()`(#fff176)](/docs/applab/setScreen/), щоб змінити екран залежно від того, яке значення було введене.\n    - Додай [`onEvent()`(#fff176)] (/docs/applab/onEvent/) для кнопки \"На головний екран\", яку створено на новому екрані цього клубу\n    - Усередині блоку [`onEvent()`(#fff176)](/docs/applab/onEvent/): використовуй блок [`setScreen()`(#fff176)](/docs/applab/setScreen/), щоб повернутися на екран привітання програми.\n- Повтори цей процес для кожного з клубів\n\nЗавершивши роботу, перейди на наступний рівень, щоб переглянути свою програму.",
        "ml-club app-edit text": "# Оновлення нашого тексту\n\nА тепер оновімо наші текстові елементи дизайну, щоб вони ставили питання, а не використовували значення за замовчуванням. Якщо ти не пам'ятаєш точного запитання, ти можеш повернутися до картки моделі, щоб переглянути опис кожної ознаки та мітки.\n\n# Завдання\n\n-   У Програмі перейди у режим конструктора\n-   Онови текст кожної ознаки відповідно до запитання з опитування.\n    -   Щоб згадати запитання з опитування, ти можеш переглянути картку моделі у меню \"Керування моделями ШІ\"\n\nЗакінчивши, переходь на наступний рівень",
        "ml-club app-edit text_2022": "# Оновлення нашого тексту\n\nА тепер оновімо наші текстові елементи дизайну, щоб вони ставили питання, а не використовували значення за замовчуванням. Якщо ти не пам'ятаєш точного запитання, ти можеш повернутися до картки моделі, щоб переглянути опис кожної ознаки та мітки.\n\n# Завдання\n\n-   У Програмі перейди у режим конструктора\n-   Онови текст кожної ознаки відповідно до запитання з опитування.\n    -   Щоб згадати запитання з опитування, ти можеш переглянути картку моделі у меню \"Керування моделями ШІ\"\n\nЗакінчивши, переходь на наступний рівень",
        "ml-club app-home screen design": "# Створення головного екрана\n\nБільшість програм мають екран \"Вітання\" під час першого завантаження, який допомагає визначити очікування користувача. На наступних рівнях ми додамо екран вітання до нашої програми.\n\n# Завдання:\n\n-   Перейди у режим конструктора\n-   Натисни на розкривне меню у верхній частині програми та обери \"Новий екран\"\n    -   ::: details [**Як саме?**]\n        <img src=\"https://images.code.org/2de5a360b67e93f1ce41df81f91f27f4-image-1623946069421.png\" width=\"200px\" />\n        :::\n-   Встанови для цього екрана ідентифікатор 'welcomeScreen'\n-   Натисни зелену кнопку \"Встановити за замовчуванням\", щоб переконатися, що це буде перший екран, який ми побачимо в застосунку\n    -   ::: details [**Як саме?**]\n        <img src=\"https://images.code.org/1e54edad382447e8118b2387f9a1a2ce-image-1623946010784.png\" width=\"200px\" />\n        :::\n-   Перетягни мітку та введи \"Програма для рекомендацій клубу\" як текст мітки\n-   Перетягни мітку та введи короткий опис того, що робить програма. Щоб дізнатися, що саме сюди включити, можеш користатися розділом \"Цільове використання та обмеження\"  картки моделі.\n\nЗапусти програму, щоб переконатися, що вона працює. Вона має завантажити екран привітання, але ми ще не запрограмували її на перехід до наступного екрана.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-club app-home screen design_2022": "# Створення головного екрана\n\nБільшість програм мають екран \"Вітання\" під час першого завантаження, який допомагає визначити очікування користувача. На наступних рівнях ми додамо екран вітання до нашої програми.\n\n# Завдання:\n\n-   Перейди у режим конструктора\n-   Натисни на розкривне меню у верхній частині програми та обери \"Новий екран\"\n    -   ::: details [**Як саме?**]\n        <img src=\"https://images.code.org/2de5a360b67e93f1ce41df81f91f27f4-image-1623946069421.png\" width=\"200px\" />\n        :::\n-   Встанови для цього екрана ідентифікатор 'welcomeScreen'\n-   Натисни зелену кнопку \"Встановити за замовчуванням\", щоб переконатися, що це буде перший екран, який ми побачимо в застосунку\n    -   ::: details [**Як саме?**]\n        <img src=\"https://images.code.org/1e54edad382447e8118b2387f9a1a2ce-image-1623946010784.png\" width=\"200px\" />\n        :::\n-   Перетягни мітку та введи \"Програма для рекомендацій клубу\" як текст мітки\n-   Перетягни мітку та введи короткий опис того, що робить програма. Щоб дізнатися, що саме сюди включити, можеш користатися розділом \"Цільове використання та обмеження\"  картки моделі.\n\nЗапусти програму, щоб переконатися, що вона працює. Вона має завантажити екран привітання, але ми ще не запрограмували її на перехід до наступного екрана.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-club app-home screen event": "# Додаємо іконку \"Далі\"\n\nУ Програмній Лабораторії доступні декілька значків, які ми можемо використовувати в наших программах. Додамо у наш застосунок значок зі стрілкою, яку можна використовувати для переходу на наступний екран\n\n# Завдання:\n\n-   **У режимі конструктора:**\n    -   Перетягни елемент зображення\n    -   Встанови ідентифікатор цього елемента на 'nextIcon'\n    -   Поруч з властивістю 'зображення' натисни синє посилання \"Обрати\"\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/fed1769e317bc1175bfd72a4f45cc873-image-1616987657301.png\" width=\"200px\">\n            :::\n    -   У вікні, що з'явиться, перейди на вкладку Іконки у верхній частині екрана\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/ea16d52b617f5f246428493119c0452e-image-1616987762535.png\" width=\"500px\" style=\"border: solid 1px black\">\n            :::\n    -   У рядку пошуку введи \"next\", щоб завантажити кілька іконок на вибір\n    -   Посередині екрана є кілька стрілок. Обери одну з них, яка буде зображати нашу стрілку \"Далі\". <br />\n-   **У режимі кодування:**\n    -   Перетягни блок  `onEvent` \n    -   Встанови для блоку ідентифікатор \"nextIcon\"\n-   **Всередині блоку onEvent:**\n    -   Перетягни  блок `setScreen` і обери \"screen1\" з розкривного меню\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/c47a00a64f68eafcc5bffc282a04bb65-image-1617040550128.png\" width=\"400px\" />\n            :::\n\nЗапусти програму, щоб переконатися, що вона працює. Вона повинна завантажити екран привітання, а коли ти натиснеш на стрілку, вона завантажить наступний екран",
        "ml-club app-home screen event_2022": "# Додаємо іконку \"Далі\"\n\nУ Програмній Лабораторії доступні декілька значків, які ми можемо використовувати в наших программах. Додамо у наш застосунок значок зі стрілкою, яку можна використовувати для переходу на наступний екран\n\n# Завдання:\n\n-   **У режимі конструктора:**\n    -   Перетягни елемент зображення\n    -   Встанови ідентифікатор цього елемента на 'nextIcon'\n    -   Поруч з властивістю 'зображення' натисни синє посилання \"Обрати\"\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/fed1769e317bc1175bfd72a4f45cc873-image-1616987657301.png\" width=\"200px\">\n            :::\n    -   У вікні, що з'явиться, перейди на вкладку Іконки у верхній частині екрана\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/ea16d52b617f5f246428493119c0452e-image-1616987762535.png\" width=\"500px\" style=\"border: solid 1px black\">\n            :::\n    -   У рядку пошуку введи \"next\", щоб завантажити кілька іконок на вибір\n    -   Посередині екрана є кілька стрілок. Обери одну з них, яка буде зображати нашу стрілку \"Далі\". <br />\n-   **У режимі кодування:**\n    -   Перетягни блок  `onEvent` \n    -   Встанови для блоку ідентифікатор \"nextIcon\"\n-   **Всередині блоку onEvent:**\n    -   Перетягни  блок `setScreen` і обери \"screen1\" з розкривного меню\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/c47a00a64f68eafcc5bffc282a04bb65-image-1617040550128.png\" width=\"400px\" />\n            :::\n\nЗапусти програму, щоб переконатися, що вона працює. Вона повинна завантажити екран привітання, а коли ти натиснеш на стрілку, вона завантажить наступний екран",
        "ml-club app-import model": "# Імпорт моделі машинного навчання\n\nНаша модель вже пройшла навчання - тепер її треба імпортувати у Програмну Лабораторію!\n\n# Завдання\n\nНатисни значок шестерні над панеллю інструментів, щоб відкрити додаткове меню, а потім обери _Керування моделями ШІ_ з цього списку list<br />\n    <img src=\"https://images.code.org/e81c7cead7d106ee5b32f850791c7de8-image-1616919161803.png\" width=\"15%\">\n\n-   Обери \"Опитування про клуби\" зі списку, а потім натисни кнопку Імпортувати.<br />\n-   Натисни кнопку \"Запустити\" і протестуй програму, щоб переконатися, що вона працює.",
        "ml-club app-import model_2022": "# Імпорт моделі машинного навчання\n\nНаша модель вже пройшла навчання - тепер її треба імпортувати у Програмну Лабораторію!\n\n# Завдання\n\nНатисни значок шестерні над панеллю інструментів, щоб відкрити додаткове меню, а потім обери _Керування моделями ШІ_ з цього списку list<br />\n    <img src=\"https://images.code.org/e81c7cead7d106ee5b32f850791c7de8-image-1616919161803.png\" width=\"15%\">\n\n-   Обери \"Опитування про клуби\" зі списку, а потім натисни кнопку Імпортувати.<br />\n-   Натисни кнопку \"Запустити\" і протестуй програму, щоб переконатися, що вона працює.",
        "ml-club app-review submit": "# Переглянь і надішли\n\nПереглянь критерії програми та внеси останні правки. Якщо у твоїй програмі все добре, натисни кнопку \"Надіслати\", щоб надіслати свою роботу.",
        "ml-club app-review submit_2022": "# Переглянь і надішли\n\nПереглянь критерії програми та внеси останні правки. Якщо у твоїй програмі все добре, натисни кнопку \"Надіслати\", щоб надіслати свою роботу.",
        "ml-customize apps-choice1": "# Налаштовуємо наш застосунок\n\nТи можеш продовжувати налаштування свого застосунку, змінюючи кольори, шрифт, межі та багато інших властивостей кожного елемента дизайну.\n\n# Завдання:\n\n- Обери принаймні 4 елементи для налаштування у застосунку\n- Обери принаймні дві властивості для кожного елемента, які потрібно змінити. Ось кілька пропозицій для експериментів:\n\t- *колір тексту*\n    - *фоновий колір*\n    - *сімейство шрифтів*\n    - *вирівнювання тексту*\n    - *ширина рамки*\n    - *колір рамки*\n    - *радіус кутів рамки*\n\nКоли закінчиш, повернися до попереднього рівня вибору та обери інше додаткове завдання\n\n",
        "ml-customize apps-choice1_2022": "# Налаштовуємо наш застосунок\n\nТи можеш продовжувати налаштування свого застосунку, змінюючи кольори, шрифт, межі та багато інших властивостей кожного елемента дизайну.\n\n# Завдання:\n\n- Обери принаймні 4 елементи для налаштування у застосунку\n- Обери принаймні дві властивості для кожного елемента, які потрібно змінити. Ось кілька пропозицій для експериментів:\n\t- *колір тексту*\n    - *фоновий колір*\n    - *сімейство шрифтів*\n    - *вирівнювання тексту*\n    - *ширина рамки*\n    - *колір рамки*\n    - *радіус кутів рамки*\n\nКоли закінчиш, повернися до попереднього рівня вибору та обери інше додаткове завдання\n\n",
        "ml-customize apps-choice2": "# Додаємо зображення\n\nЗображення можуть зробити застосунки більш привабливими для нових користувачів. Додамо нове зображення на кожну функціональну сторінку програми.\n\n# Завдання\n\n- Знайди зображення, яке ти хочеш використати у своєму застосунку\n- Знайшовши його, клацни правою кнопкою миші на зображенні та обери \"Копіювати адресу зображення\"\n\t- ::: details [**(Покажіть як)**]\n    <img src=\"https://images.code.org/f4a1a2ef76a67f0afd256b99bc6fb8bc-image-1617077722072.png\" width=\"250px\" style=\"border: solid 1px black\">\n    :::\n\n- **У режимі конструктора:**\n\t- Перетягни елемент зображення на екран\n    - У властивості зображення клацни правою кнопкою миші та вибери \"Вставити\" з меню\n    - Можеш продовжувати налаштовувати зображення - змінювати його розмір, щоб воно відповідало твоїм побажанням\n\nПовторюй цей процес для кожного функціонального екрана. У тебе повинно вийти 4 зображення.\n\nКоли завершиш, повернися я до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize apps-choice2_2022": "# Додаємо зображення\n\nЗображення можуть зробити застосунки більш привабливими для нових користувачів. Додамо нове зображення на кожну функціональну сторінку програми.\n\n# Завдання\n\n- Знайди зображення, яке ти хочеш використати у своєму застосунку\n- Знайшовши його, клацни правою кнопкою миші на зображенні та обери \"Копіювати адресу зображення\"\n\t- ::: details [**(Покажіть як)**]\n    <img src=\"https://images.code.org/f4a1a2ef76a67f0afd256b99bc6fb8bc-image-1617077722072.png\" width=\"250px\" style=\"border: solid 1px black\">\n    :::\n\n- **У режимі конструктора:**\n\t- Перетягни елемент зображення на екран\n    - У властивості зображення клацни правою кнопкою миші та вибери \"Вставити\" з меню\n    - Можеш продовжувати налаштовувати зображення - змінювати його розмір, щоб воно відповідало твоїм побажанням\n\nПовторюй цей процес для кожного функціонального екрана. У тебе повинно вийти 4 зображення.\n\nКоли завершиш, повернися я до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize apps-choice3": "# Відтворення звуку\n\nТи можеш додавати звуки до свого застосунку! Спробуймо зробити так, щоб застосунок видавав певний звук залежно від ситуації на дорозі.\n\n# Кроки:\n\n- Використати команду умови, щоб перевірити, яка умова була обрана\n- Увімкнути звук, який відповідає прогнозу\n- Повторити це для всіх можливих варіантів\n\n# Завдання:\n\n- Перетягни команду `умови` всередину блоку `getPrediction()` [(Де саме?)] (#triggercallout=predict)\n- Перетягни блок `==` всередину команди умови. З одного боку введи *value*. З іншого боку введи *\"danger\"*.\n- Всередині команди умови:\n\t- Перетягни блок `playSound()`\n    - У першому полі клацни на меню та обери \"Вибрати\" <br />\n    <img src=\"https://images.code.org/1fd4cbed001d32ab17443db32fad88c2-image-1617078635822.png\" width=\"300px\">\n    - У меню, що з'явиться, знайди звук, який тобі подобається і відповідає умові \"danger\"\n\nПовтори ці дії для умов \"normal\" та \"warning\".\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize apps-choice3_2022": "# Відтворення звуку\n\nТи можеш додавати звуки до свого застосунку! Спробуймо зробити так, щоб застосунок видавав певний звук залежно від ситуації на дорозі.\n\n# Кроки:\n\n- Використати команду умови, щоб перевірити, яка умова була обрана\n- Увімкнути звук, який відповідає прогнозу\n- Повторити це для всіх можливих варіантів\n\n# Завдання:\n\n- Перетягни команду `умови` всередину блоку `getPrediction()` [(Де саме?)] (#triggercallout=predict)\n- Перетягни блок `==` всередину команди умови. З одного боку введи *value*. З іншого боку введи *\"danger\"*.\n- Всередині команди умови:\n\t- Перетягни блок `playSound()`\n    - У першому полі клацни на меню та обери \"Вибрати\" <br />\n    <img src=\"https://images.code.org/1fd4cbed001d32ab17443db32fad88c2-image-1617078635822.png\" width=\"300px\">\n    - У меню, що з'явиться, знайди звук, який тобі подобається і відповідає умові \"danger\"\n\nПовтори ці дії для умов \"normal\" та \"warning\".\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize apps-choice4": "# Перехід на вебсайт\n\nПісля того, як автомобіль попередив водія про умову, може бути корисно порекомендувати місце, яке можна відвідати поблизу (наприклад, готель чи ресторан). Додамо на сторінку результатів кнопку, яка відкриває посилання на пам'ятку, яку варто відвідати.\n\n# Кроки:\n\n- Додай кнопку на екран прогнозу\n- Використовуй блок `open()` для переходу на нову сторінку\n\n# Завдання:\n\n- **У режимі конструктора:**\n\t- Перетягни кнопку на екран результатів\n    - Признач кнопці ідентифікатор \"websiteButton\"\n    - Зміни текст кнопки на \"Цікаві місця поблизу\"\n- У режимі кодування\n\t- Перетягни блок `onEvent()` на екран прогнозу\n    - Зміни ідентифікатор на \"websiteButton\"\n- **Усередині `onEvent()`**:\n\t- Перетягни блок `open()`.\n    - Заміни \"https://code.org\" на вебсайт на свій вибір\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize apps-choice4_2022": "# Перехід на вебсайт\n\nПісля того, як автомобіль попередив водія про умову, може бути корисно порекомендувати місце, яке можна відвідати поблизу (наприклад, готель чи ресторан). Додамо на сторінку результатів кнопку, яка відкриває посилання на пам'ятку, яку варто відвідати.\n\n# Кроки:\n\n- Додай кнопку на екран прогнозу\n- Використовуй блок `open()` для переходу на нову сторінку\n\n# Завдання:\n\n- **У режимі конструктора:**\n\t- Перетягни кнопку на екран результатів\n    - Признач кнопці ідентифікатор \"websiteButton\"\n    - Зміни текст кнопки на \"Цікаві місця поблизу\"\n- У режимі кодування\n\t- Перетягни блок `onEvent()` на екран прогнозу\n    - Зміни ідентифікатор на \"websiteButton\"\n- **Усередині `onEvent()`**:\n\t- Перетягни блок `open()`.\n    - Заміни \"https://code.org\" на вебсайт на свій вибір\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize apps-choice5": "# Відтворення вмісту домашньої сторінки голосом\n\nМи можемо використовувати блок `playSpech()` для читання тексту на нашій домашній сторінці вголос. Це чудовий спосіб зробити наш застосунок більш доступним для людей з вадами зору.\n\n# Завдання:\n\n- Перетягніть блок `playSpech()` на самий верх свого коду [(Де саме?)](#triggercallout=top)\n- У першому полі введи текст, який ми хочемо прочитати вголос. Бажано вказати назву програми та її призначення.\n- За допомогою двох інших опцій можна додатково налаштувати блок. Обери чоловічий або жіночий голос і потрібну мову.\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize apps-choice5_2022": "# Відтворення вмісту домашньої сторінки голосом\n\nМи можемо використовувати блок `playSpech()` для читання тексту на нашій домашній сторінці вголос. Це чудовий спосіб зробити наш застосунок більш доступним для людей з вадами зору.\n\n# Завдання:\n\n- Перетягніть блок `playSpech()` на самий верх свого коду [(Де саме?)](#triggercallout=top)\n- У першому полі введи текст, який ми хочемо прочитати вголос. Бажано вказати назву програми та її призначення.\n- За допомогою двох інших опцій можна додатково налаштувати блок. Обери чоловічий або жіночий голос і потрібну мову.\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-customize-raspado-2021": "# Програма для рекомендації десерту\n\nОнови змінні даних, щоб використовувати нові елементи дизайну на другому екрані.\n\n# Завдання\n\n-   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) до кожного поля праворуч від змінної\n-   У розкривному меню обери відповідний варіант\n-   Запусти програму і перевір, чи працює вона",
        "ml-customize-raspado_2022": "# Програма для рекомендації десерту\n\nОнови змінні даних, щоб використовувати нові елементи дизайну на другому екрані.\n\n# Завдання\n\n-   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) до кожного поля праворуч від змінної\n-   У розкривному меню обери відповідний варіант\n-   Запусти програму і перевір, чи працює вона",
        "ml-data decisions- customize app-2021": "# Налаштування програми\n\nА тепер покращимо користувацький досвід нашого застосунку! Обери два з варіантів нижче, щоб покращити свій застосунок:\n\n# Варіанти:\n\n-   Додати тему до програми та покращуйте шрифт, розмір, кольори та межі елементів інтерфейсу\n-   Додати екран \"Привітання\", який містить короткий огляд програми для нових користувачів\n-   Додати зображення до програми, щоб зробити її візуально привабливішою\n-   Змінити текст кожної функції на запитання замість твердження з 1 слова\n-   **Додаткове завдання:** Зроби так, щоб прогноз містився на кожному екрані, який містить зображення",
        "ml-data decisions- customize app_2022": "# Налаштування програми\n\nА тепер покращимо користувацький досвід нашого застосунку! Обери два з варіантів нижче, щоб покращити свій застосунок:\n\n# Варіанти:\n\n-   Додати тему до програми та покращуйте шрифт, розмір, кольори та межі елементів інтерфейсу\n-   Додати екран \"Привітання\", який містить короткий огляд програми для нових користувачів\n-   Додати зображення до програми, щоб зробити її візуально привабливішою\n-   Змінити текст кожної функції на запитання замість твердження з 1 слова\n-   **Додаткове завдання:** Зроби так, щоб прогноз містився на кожному екрані, який містить зображення",
        "ml-data decisions- import app-2021": "# Удосконалення нашої програми\n\nІмпортуємо модель, яку ми щойно створили, в Лабораторію ШІ!\n\n# Завдання:\n\n-   Натисни на значок шестерні та обери \"Керування моделями штучного інтелекту\"\n-   Обери модель, яку ми щойно зберегли в Лабораторії ШІ\n-   Запусти свій код і перевір, чи він працює\n\nКоли упевнишся, що твій код працює, переходь до наступного кроку",
        "ml-data decisions- import app_2022": "# Удосконалення нашої програми\n\nІмпортуємо модель, яку ми щойно створили, в Лабораторію ШІ!\n\n# Завдання:\n\n-   Натисни на значок шестерні та обери \"Керування моделями штучного інтелекту\"\n-   Обери модель, яку ми щойно зберегли в Лабораторії ШІ\n-   Запусти свій код і перевір, чи він працює\n\nКоли упевнишся, що твій код працює, переходь до наступного кроку",
        "ml-data decisions-zoo1-2021": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик Хижак як мітку, а потім натисни кнопку Продовжити.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   Після клацання на категорійній ознаці з'являється інструкція:\\_ **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Роби так доки не обереш кілька стовпців як ознаки.\n\n-   _В інструкціях до екрана **Результати** сказано:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку \"Продовжити\". В іншому випадку, можеш спробувати ще раз і продовжувати повторне, доки не знайдеш точну модель.\n\n    -   _В інструкції до панелі докладної інформації сказано:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку \"Продовжити\". В іншому випадку, можеш спробувати ще раз і продовжувати повторно, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Текст для розділів \"Призначення\" та \"Обмеження і попередження\" наведений в інструкціях до вправи. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Опис моделі** сказано:_ Ми це зробили! Нижче можна побачити короткий опис своєї моделі!",
        "ml-data decisions-zoo1_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик Хижак як мітку, а потім натисни кнопку Продовжити.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   Після клацання на категорійній ознаці з'являється інструкція:\\_ **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Роби так доки не обереш кілька стовпців як ознаки.\n\n-   _В інструкціях до екрана **Результати** сказано:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку \"Продовжити\". В іншому випадку, можеш спробувати ще раз і продовжувати повторне, доки не знайдеш точну модель.\n\n    -   _В інструкції до панелі докладної інформації сказано:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку \"Продовжити\". В іншому випадку, можеш спробувати ще раз і продовжувати повторно, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Текст для розділів \"Призначення\" та \"Обмеження і попередження\" наведений в інструкціях до вправи. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Опис моделі** сказано:_ Ми це зробили! Нижче можна побачити короткий опис своєї моделі!",
        "ml-data decisions-zoo2-2021": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик Клас як мітку, а потім натисни кнопку Продовжити.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати функцію\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як функції.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Перевір  точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Текст для розділів \"Використання за призначенням\" та \"Обмеження і попередження\" наведений в Інструкції до вправи. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-data decisions-zoo2_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик Клас як мітку, а потім натисни кнопку Продовжити.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати функцію\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як функції.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Перевір  точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Текст для розділів \"Використання за призначенням\" та \"Обмеження і попередження\" наведений в Інструкції до вправи. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-data decisions-zoo3-2021": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик, який хочеш використати як мітку. Ти завжди можеш повернутися до цього екрана і зробити інший вибір.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати функцію\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як функції.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Перевір  точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Текст для розділів \"Використання за призначенням\" та \"Обмеження і попередження\" наведений в Інструкції до вправи. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-data decisions-zoo3_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик, який хочеш використати як мітку. Ти завжди можеш повернутися до цього екрана і зробити інший вибір.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати функцію\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як функції.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Перевір  точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 70%, натисни кнопку Продовжити. В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Текст для розділів \"Використання за призначенням\" та \"Обмеження і попередження\" наведений в Інструкції до вправи. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-final project-ai lab-2021": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_ :\\_ **Завдання:** Завантаж дані свого опитування або обери з наборів даних нижче, які ти хотів би використати для свого проєкту.\n\n    -   _Коли CSV-файл завантажений, з'являється інструкція:_ Ми щойно завантажили набір даних. Якщо є якісь помилки, тобі потрібно буде виправити їх за межами Лабораторії ШІ. Коли все буде готово, натисни кнопку \"Продовжити\".\n\n    -   _Клацання по набору даних викликає інструкцію:_ Більше інформації про цей набір даних, включно з деякими потенційними дослідженнями, можна знайти на правій панелі. Коли знайдеш набір даних, який тобі подобається, натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик, який потрібно використати як мітку, і натисни кнопку \"\"Продовжити\"..\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Обери стовпчик, який ти хочеш дослідити як потенційну ознаку.\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Подумай, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй ці дії, доки не обереш кілька стовпців для використання як ознаки.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ \\***\\*Завдання:** Подумай, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй ці дії, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Якщо ти задоволений точністю своєї моделі, натисни кнопку \"Продовжити\". В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Якщо ти задоволений точністю своєї моделі, натисни кнопку \"Продовжити\". В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:**  Заповни інформацію в картці моделі, а потім натисни кнопку \"Зберегти\".\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми зробили це! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-final project-ai lab_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_ :\\_ **Завдання:** Завантаж дані свого опитування або обери з наборів даних нижче, які ти хотів би використати для свого проєкту.\n\n    -   _Коли CSV-файл завантажений, з'являється інструкція:_ Ми щойно завантажили набір даних. Якщо є якісь помилки, тобі потрібно буде виправити їх за межами Лабораторії ШІ. Коли все буде готово, натисни кнопку \"Продовжити\".\n\n    -   _Клацання по набору даних викликає інструкцію:_ Більше інформації про цей набір даних, включно з деякими потенційними дослідженнями, можна знайти на правій панелі. Коли знайдеш набір даних, який тобі подобається, натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до вікна **Вибір мітки** сказано:_ **Завдання:** Обери стовпчик, який потрібно використати як мітку, і натисни кнопку \"\"Продовжити\"..\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Обери стовпчик, який ти хочеш дослідити як потенційну ознаку.\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Подумай, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй ці дії, доки не обереш кілька стовпців для використання як ознаки.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ \\***\\*Завдання:** Подумай, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Повторюй ці дії, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Якщо ти задоволений точністю своєї моделі, натисни кнопку \"Продовжити\". В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Якщо ти задоволений точністю своєї моделі, натисни кнопку \"Продовжити\". В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:**  Заповни інформацію в картці моделі, а потім натисни кнопку \"Зберегти\".\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми зробили це! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-final project-app lab-2021": "# Створи власну програму!\n\nІмпортуй свою модель та створи власний застосунок! Дотримуйся вказівок у критеріях проєкту. Як мінімум, у твоїй моделі повинні бути:\n\n-   Екран привітання\n-   Описовий текст для функцій\n-   Тема\n\nКрім того, ти можеш додати:\n\n-   Екрани з додатковою інформацією про твій застосунок, наприклад, про цільове використання та обмеження\n-   Різні екрани залежно від того, що прогнозує застосунок\n-   Зображення та звуки, щоб зробити застосунок привабливішим\n-   Посилання на зовнішні ресурси або вебсайти, пов'язані із застосунком\n-   Різні екрани для кожної функції з додатковою інформацією про дані, які збирає твій застосунок",
        "ml-final project-app lab_2022": "# Створи власну програму!\n\nІмпортуй свою модель та створи власний застосунок! Дотримуйся вказівок у критеріях проєкту. Як мінімум, у твоїй моделі повинні бути:\n\n-   Екран привітання\n-   Описовий текст для функцій\n-   Тема\n\nКрім того, ти можеш додати:\n\n-   Екрани з додатковою інформацією про твій застосунок, наприклад, про цільове використання та обмеження\n-   Різні екрани залежно від того, що прогнозує застосунок\n-   Зображення та звуки, щоб зробити застосунок привабливішим\n-   Посилання на зовнішні ресурси або вебсайти, пов'язані із застосунком\n-   Різні екрани для кожної функції з додатковою інформацією про дані, які збирає твій застосунок",
        "ml-good data-upload csv": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ\n\n-   _В інструкції до екрана **Вибір даних** сказано:_ На цьому екрані ми завантажимо дані опитування Кім, щоб проаналізувати їх в Лабораторії ШІ **Завдання:** Натисни кнопку \"Завантажити CSV\", потім знайди csv-файл Кім.\n\n    -   _Інструкції, після завантаження CSV-файла:_ Чудово! Тепер натисни кнопку \"Продовжити\", щоб переглянути дані в Лабораторії ШІ\n\n    -   _Клацання по набору даних викликає інструкцію:_ Тобі не потрібно обирати один з наборів даних на цьому екрані. Замість цього ми завантажимо дані Кім за допомогою кнопки \"Завантажити CSV\". **Завдання:** Натисни кнопку \"Завантажити CSV\", а потім знайди csv-файл Кім.\n\n-   _В інструкціях до екрана **Вибір мітки** сказано:_ Ми розробили це опитування з урахуванням нашої мітки - ми хочемо передбачити, до якого клубу варто приєднатися. **Завдання:** Обери стовпчик \"Клуб\" як свою мітку, а потім натисни кнопку \"Продовжити\".\n\n-   \\_В інструкціях до екрана **Вибір ознаки** сказано: **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Коли учень клацає по числовій ознаці, з'являється інструкція:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Коли учень клацає по категорійній ознаці, з'являється інструкція:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:** Якщо точність твоєї моделі становить щонайменше 70%, ти можеш продовжувати заповнювати картку моделі. В іншому випадку, натисни \"Спробувати ще раз\", щоб виконати повторне навчання моделі та обрати нові ознаки.\n\n    -   _В інструкції до панелі докладної інформації сказано:_ **завдання:** Якщо точність твоєї моделі становить щонайменше 70%, ти можеш перейти на наступний екран.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни картку моделі, використовуючи запитання з опитування як опис для кожної колонки. Використовуй відповіді Кім зі слайд-презентації, щоб додати додаткову інформацію у свою картку моделі\n\n-   _В інструкціях до екрана **Підсумки моделі** сказано:_ Ми зробили це! Ми допомогли Кім навчити модель, використовуючи дані, які вона зібрала під час опитування!",
        "ml-good data-upload csv_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ\n\n-   _В інструкції до екрана **Вибір даних** сказано:_ На цьому екрані ми завантажимо дані опитування Кім, щоб проаналізувати їх в Лабораторії ШІ **Завдання:** Натисни кнопку \"Завантажити CSV\", потім знайди csv-файл Кім.\n\n    -   _Інструкції, після завантаження CSV-файла:_ Чудово! Тепер натисни кнопку \"Продовжити\", щоб переглянути дані в Лабораторії ШІ\n\n    -   _Клацання по набору даних викликає інструкцію:_ Тобі не потрібно обирати один з наборів даних на цьому екрані. Замість цього ми завантажимо дані Кім за допомогою кнопки \"Завантажити CSV\". **Завдання:** Натисни кнопку \"Завантажити CSV\", а потім знайди csv-файл Кім.\n\n-   _В інструкціях до екрана **Вибір мітки** сказано:_ Ми розробили це опитування з урахуванням нашої мітки - ми хочемо передбачити, до якого клубу варто приєднатися. **Завдання:** Обери стовпчик \"Клуб\" як свою мітку, а потім натисни кнопку \"Продовжити\".\n\n-   \\_В інструкціях до екрана **Вибір ознаки** сказано: **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Коли учень клацає по числовій ознаці, з'являється інструкція:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Коли учень клацає по категорійній ознаці, з'являється інструкція:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:** Якщо точність твоєї моделі становить щонайменше 70%, ти можеш продовжувати заповнювати картку моделі. В іншому випадку, натисни \"Спробувати ще раз\", щоб виконати повторне навчання моделі та обрати нові ознаки.\n\n    -   _В інструкції до панелі докладної інформації сказано:_ **завдання:** Якщо точність твоєї моделі становить щонайменше 70%, ти можеш перейти на наступний екран.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни картку моделі, використовуючи запитання з опитування як опис для кожної колонки. Використовуй відповіді Кім зі слайд-презентації, щоб додати додаткову інформацію у свою картку моделі\n\n-   _В інструкціях до екрана **Підсумки моделі** сказано:_ Ми зробили це! Ми допомогли Кім навчити модель, використовуючи дані, які вона зібрала під час опитування!",
        "ml-good data-upload isaac csv": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкції до екрана **Вибір даних** сказано:_ На цьому екрані ми завантажимо дані опитування Айзека, щоб проаналізувати їх у Студії штучного інтелекту **Завдання:** Натисни кнопку Завантажити CSV, а потім знайди csv-файл Айзека.\n\n    -   _Інструкція після завантаження CSV-файла:_ Чудово! Тепер натисни кнопку \"Продовжити\", щоб переглянути дані в Лабораторії ШІ\n\n    -   _Клацання по набору даних викликає інструкцію:_ Тобі не потрібно обирати один з наборів даних на цьому екрані. Замість цього ми завантажимо дані Айзека за допомогою кнопки Завантажити CSV. **Завдання:** Натисни кнопку \"Завантажити CSV\", а потім знайди csv-файл Айзека.\n\n-   _В інструкціях до екрана **Вибір мітки** зазначено:_ **Ми розробили це опитування з урахуванням нашої мітки - ми хочемо передбачити, до якого клубу варто приєднатися. \\*\\*Завдання:** Обери стовпчик \"Клуб\" як мітку, а потім натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:** Якщо твоя модель точна принаймні на 70%, ти можеш продовжувати заповнювати картку моделі. В іншому випадку, натисни \"Спробувати ще раз\", щоб знову виконати навчання моделі та обрати нові ознаки.\n\n    -   _Клацання по панелі докладної інформації викликає інструкцію:_ **Завдання:** Якщо точність твоєї моделі становить щонайменше 70%, ти можеш перейти до наступного екрана.",
        "ml-good data-upload isaac csv_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкції до екрана **Вибір даних** сказано:_ На цьому екрані ми завантажимо дані опитування Айзека, щоб проаналізувати їх у Студії штучного інтелекту **Завдання:** Натисни кнопку Завантажити CSV, а потім знайди csv-файл Айзека.\n\n    -   _Інструкція після завантаження CSV-файла:_ Чудово! Тепер натисни кнопку \"Продовжити\", щоб переглянути дані в Лабораторії ШІ\n\n    -   _Клацання по набору даних викликає інструкцію:_ Тобі не потрібно обирати один з наборів даних на цьому екрані. Замість цього ми завантажимо дані Айзека за допомогою кнопки Завантажити CSV. **Завдання:** Натисни кнопку \"Завантажити CSV\", а потім знайди csv-файл Айзека.\n\n-   _В інструкціях до екрана **Вибір мітки** зазначено:_ **Ми розробили це опитування з урахуванням нашої мітки - ми хочемо передбачити, до якого клубу варто приєднатися. \\*\\*Завдання:** Обери стовпчик \"Клуб\" як мітку, а потім натисни кнопку \"Продовжити\".\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Переглянь стовпчики та обери деякі з них як ознаки, а потім натисни кнопку \"Навчати\".\n\n-   _В інструкції до екрана **Результати** сказано:_ **Завдання:** Якщо твоя модель точна принаймні на 70%, ти можеш продовжувати заповнювати картку моделі. В іншому випадку, натисни \"Спробувати ще раз\", щоб знову виконати навчання моделі та обрати нові ознаки.\n\n    -   _Клацання по панелі докладної інформації викликає інструкцію:_ **Завдання:** Якщо точність твоєї моделі становить щонайменше 70%, ти можеш перейти до наступного екрана.",
        "ml-intro ai lab- fruit veggie widget": "# Дослідник фруктів та овочів\n\nЦей віджет містить фрукти та овочі з попереднього уроку, але тепер у нас є більше **функцій**, з якими ми зможемо працювати, і більше гнучкості в тому, як ми проводимо свою лінію вибору.\n\n## Як працює віджет\n\n-   Наведи курсор на крапку, щоб побачити, який продукт вона представляє. Помаранчеві крапки - це фрукти, фіолетові - овочі.\n-   Використовуй розкривні списки, щоб змінити функції, використані для створення графіка. Це перезавантажить твої дані з використанням нових функцій.\n-   Клацни у двох місцях, щоб намалювати лінію для розділення даних.\n-   Твоя точність показана внизу. Саме стільки фруктів і овочів потрапило в правильно заштриховану частину графіка.\n    -   Якщо точність дуже низька, спробуй натиснути кнопку \"Поміняти кольори\", щоб змінити помаранчевий на фіолетовий відтінок\n-   Натисни кнопку \"Спробуй власні продукти!\", щоб протестувати власні дані та побачити, як ваша модель їх класифікує.\n\n::: details [**Клацни тут для отримання пояснень щодо функцій**]\n\n-   **Розмір**: Наскільки велика їжа. Що вище значення, то більший шматок їжі.\n-   **Твердість**: Наскільки тверда їжа. Що вище значення, то твердіша їжа (зазвичай через шкірку або оболонку)\n-   **Легко їсти**: Наскільки легко їсти цю їжу. Що вище значення, то легше її взяти та з'їсти\n-   **Соковитість**: Наскільки соковита їжа. Що вище значення, то соковитіша їжа.\n-   **Солодкість**: Наскільки солодка їжа. Що вище значення, то солодша їжа.\n-   **Аромат**: Наскільки ароматна їжа. Що вище значення, то сильніше пахне їжа (наприклад, цибуля)\n-   **Зелений колір**: Наскільки зелений продукт зовні. Що вище значення, тим зеленіший продукт (наприклад, кавун або лайм)\n-   **Можливість складання**: Наскільки легко складати продукти у стос. Що вище значення, тим легше складати продукти один на одного, щоб вони не скочувалися і не здавлювалися.\n    :::\n\n## Завдання\n\nВикористовуючи розкривні списки для налаштування параметрів, намалюй лінію, яка створить модель, що правильно класифікує принаймні 80% фруктів і 80% овочів\n\n<img src=\"https://images.code.org/7c501f5e08f2cb06b5ddc5c1aae26f31-image-1625704907103.png\" width=\"200px\">",
        "ml-intro ai lab- fruit veggie widget_2022": "# Дослідник фруктів та овочів\n\nЦей віджет містить фрукти та овочі з попереднього уроку, але тепер у нас є більше **функцій**, з якими ми зможемо працювати, і більше гнучкості в тому, як ми проводимо свою лінію вибору.\n\n## Як працює віджет\n\n-   Наведи курсор на крапку, щоб побачити, який продукт вона представляє. Помаранчеві крапки - це фрукти, фіолетові - овочі.\n-   Використовуй розкривні списки, щоб змінити функції, використані для створення графіка. Це перезавантажить твої дані з використанням нових функцій.\n-   Клацни у двох місцях, щоб намалювати лінію для розділення даних.\n-   Твоя точність показана внизу. Саме стільки фруктів і овочів потрапило в правильно заштриховану частину графіка.\n    -   Якщо точність дуже низька, спробуй натиснути кнопку \"Поміняти кольори\", щоб змінити помаранчевий на фіолетовий відтінок\n-   Натисни кнопку \"Спробуй власні продукти!\", щоб протестувати власні дані та побачити, як ваша модель їх класифікує.\n\n::: details [**Клацни тут для отримання пояснень щодо функцій**]\n\n-   **Розмір**: Наскільки велика їжа. Що вище значення, то більший шматок їжі.\n-   **Твердість**: Наскільки тверда їжа. Що вище значення, то твердіша їжа (зазвичай через шкірку або оболонку)\n-   **Легко їсти**: Наскільки легко їсти цю їжу. Що вище значення, то легше її взяти та з'їсти\n-   **Соковитість**: Наскільки соковита їжа. Що вище значення, то соковитіша їжа.\n-   **Солодкість**: Наскільки солодка їжа. Що вище значення, то солодша їжа.\n-   **Аромат**: Наскільки ароматна їжа. Що вище значення, то сильніше пахне їжа (наприклад, цибуля)\n-   **Зелений колір**: Наскільки зелений продукт зовні. Що вище значення, тим зеленіший продукт (наприклад, кавун або лайм)\n-   **Можливість складання**: Наскільки легко складати продукти у стос. Що вище значення, тим легше складати продукти один на одного, щоб вони не скочувалися і не здавлювалися.\n    :::\n\n## Завдання\n\nВикористовуючи розкривні списки для налаштування параметрів, намалюй лінію, яка створить модель, що правильно класифікує принаймні 80% фруктів і 80% овочів\n\n<img src=\"https://images.code.org/7c501f5e08f2cb06b5ddc5c1aae26f31-image-1625704907103.png\" width=\"200px\">",
        "ml-intro ai lab-shapes v1": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкції до екрана \"Вибір функції\" сказано:_ \"Тепер ти можеш вирішити, які \"функції\" ти хочеш використовувати для навчання своєї моделі. Це вхідні дані для твоєї моделі машинного навчання - саме тут ШІ-бот шукатиме закономірності, які допоможуть йому приймати рішення. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   _В інструкціях, коли ви натискаєте категорійну ознаку, сказано:_ Коли ти обираєш стовпчик, на правій панелі з'являється додаткова інформація. Вона може допомогти вирішити, чи є ця ознака корисною для прогнозування твоєї мітки. Більше можна дізнатися в розділі \"Довідка та підказки\" цієї інструкції. **Завдання:** Виріши, чи використовуватимеш ти цей стовпчик як функцію. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для вивчення. Повторюй ці дії, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкції до екрана **Результати** сказано:_ На цьому екрані можна побачити, наскільки точним є ШІ-бот, якщо порівняти його прогнози з даними тестування, відповіді на які ми вже знаємо.  **Завдання:** Продовжуй навчати модель, поки не досягнеш  100% точності\n\n    -   _В інструкції на панелі докладної інформації, сказано:_ \"На цьому екрані показані окремі рядки, в яких ШІ-бот вгадав правильно або неправильно. Це може допомогти пояснити, чому модель отримала саме таку оцінку точності. Дізнатися більше про те, як обчислюється точність, можна на панелі \"Довідка та поради\".",
        "ml-intro ai lab-shapes v1_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкції до екрана \"Вибір функції\" сказано:_ \"Тепер ти можеш вирішити, які \"функції\" ти хочеш використовувати для навчання своєї моделі. Це вхідні дані для твоєї моделі машинного навчання - саме тут ШІ-бот шукатиме закономірності, які допоможуть йому приймати рішення. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку.\n\n    -   _В інструкціях, коли ви натискаєте категорійну ознаку, сказано:_ Коли ти обираєш стовпчик, на правій панелі з'являється додаткова інформація. Вона може допомогти вирішити, чи є ця ознака корисною для прогнозування твоєї мітки. Більше можна дізнатися в розділі \"Довідка та підказки\" цієї інструкції. **Завдання:** Виріши, чи використовуватимеш ти цей стовпчик як функцію. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для вивчення. Повторюй ці дії, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкції до екрана **Результати** сказано:_ На цьому екрані можна побачити, наскільки точним є ШІ-бот, якщо порівняти його прогнози з даними тестування, відповіді на які ми вже знаємо.  **Завдання:** Продовжуй навчати модель, поки не досягнеш  100% точності\n\n    -   _В інструкції на панелі докладної інформації, сказано:_ \"На цьому екрані показані окремі рядки, в яких ШІ-бот вгадав правильно або неправильно. Це може допомогти пояснити, чому модель отримала саме таку оцінку точності. Дізнатися більше про те, як обчислюється точність, можна на панелі \"Довідка та поради\".",
        "ml-intro app lab-book recommender 0-2021": "# Імпорт моделі машинного навчання\n\nНаша модель вже пройшла навчання - тепер її треба імпортувати у Програмну Лабораторію!\n\n# Завдання\n\n-   Натисни значок шестерні над панеллю інструментів, щоб відкрити додаткове меню, а потім обери _Керування моделями ШІ_ з цього списку list<br />\n    <img src=\"https://images.code.org/e81c7cead7d106ee5b32f850791c7de8-image-1616919161803.png\" width=\"15%\">\n-   Обери \"Програма для рекомендації книжок для класу\" зі списку, а потім натисни кнопку Імпортувати.<br />\n    <img src=\"https://images.code.org/138dd3d42b77e8d68fe27c7bc37f38bc-image-1623885261164.png\" width=\"20%\">\n-   Натисни кнопку \"Запустити\" і протестуй програму, щоб переконатися, що вона працює.\n\nТобі **не** потрібно редагувати код! У цьому розділі ми дізнаємося більше про те, що роблять ці блоки, але зараз не потрібно вносити жодних змін.\n\n# З партнером:\n\n-   Чи можете ви визначити рядок, де відбувається натискання кнопки?\n-   Чи можете ви визначити рядки, де збираються всі наші дані?\n-   Чи можете ви визначити рядок, де виконується наш прогноз?",
        "ml-intro app lab-book recommender 0_2022": "# Імпорт моделі машинного навчання\n\nНаша модель вже пройшла навчання - тепер її треба імпортувати у Програмну Лабораторію!\n\n# Завдання\n\n-   Натисни значок шестерні над панеллю інструментів, щоб відкрити додаткове меню, а потім обери _Керування моделями ШІ_ з цього списку list<br />\n    <img src=\"https://images.code.org/e81c7cead7d106ee5b32f850791c7de8-image-1616919161803.png\" width=\"15%\">\n-   Обери \"Програма для рекомендації книжок для класу\" зі списку, а потім натисни кнопку Імпортувати.<br />\n    <img src=\"https://images.code.org/138dd3d42b77e8d68fe27c7bc37f38bc-image-1623885261164.png\" width=\"20%\">\n-   Натисни кнопку \"Запустити\" і протестуй програму, щоб переконатися, що вона працює.\n\nТобі **не** потрібно редагувати код! У цьому розділі ми дізнаємося більше про те, що роблять ці блоки, але зараз не потрібно вносити жодних змін.\n\n# З партнером:\n\n-   Чи можете ви визначити рядок, де відбувається натискання кнопки?\n-   Чи можете ви визначити рядки, де збираються всі наші дані?\n-   Чи можете ви визначити рядок, де виконується наш прогноз?",
        "ml-intro app lab-book recommender 1-2021": "# Оновлення нашого тексту\n\nА тепер оновімо наші текстові елементи дизайну, щоб вони ставили питання, а не використовували значення за замовчуванням. Якщо ти не пам'ятаєш точного запитання, ти можеш повернутися до картки моделі, щоб переглянути опис кожної ознаки та мітки.\n\n# Завдання\n\n-   У Програмі перейди у режим дизайну\n-   Онови текст кожної ознаки відповідно до запитання з опитування:\n    -   Яка тварина вам найбільше подобається?\n    -   Яке слово найкраще вас описує?\n    -   Де б ви хотіли проводити час?\n    -   Як би ви хотіли провести свій час?\n\nЗакінчивши, переходь на наступний рівень",
        "ml-intro app lab-book recommender 1_2022": "# Оновлення нашого тексту\n\nА тепер оновімо наші текстові елементи дизайну, щоб вони ставили питання, а не використовували значення за замовчуванням. Якщо ти не пам'ятаєш точного запитання, ти можеш повернутися до картки моделі, щоб переглянути опис кожної ознаки та мітки.\n\n# Завдання\n\n-   У Програмі перейди у режим дизайну\n-   Онови текст кожної ознаки відповідно до запитання з опитування:\n    -   Яка тварина вам найбільше подобається?\n    -   Яке слово найкраще вас описує?\n    -   Де б ви хотіли проводити час?\n    -   Як би ви хотіли провести свій час?\n\nЗакінчивши, переходь на наступний рівень",
        "ml-intro app lab-book recommender 2-2021": "# Удосконалення стилю\n\nЗробімо дизайн трохи більш стильним і привабливим. Ми можемо зробити це за допомогою готових тем від Програмної Лабораторії.\n\n# Завдання:\n\n-   У режимі дизайну натисни розкривне меню \"Теми\" і обери тему <br />\n    <img src=\"https://images.code.org/9e5938b46efeb73d3121bd2212b4a30a-image-1616287477153.png\" width=\"25%\" />\n\n-   Тестуй різні теми, поки не знайдеш ту, яка тобі до вподоби.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-intro app lab-book recommender 2_2022": "# Удосконалення стилю\n\nЗробімо дизайн трохи більш стильним і привабливим. Ми можемо зробити це за допомогою готових тем від Програмної Лабораторії.\n\n# Завдання:\n\n-   У режимі дизайну натисни розкривне меню \"Теми\" і обери тему <br />\n    <img src=\"https://images.code.org/9e5938b46efeb73d3121bd2212b4a30a-image-1616287477153.png\" width=\"25%\" />\n\n-   Тестуй різні теми, поки не знайдеш ту, яка тобі до вподоби.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-intro app lab-book recommender 3-2021": "# Створення головного екрана\n\nБільшість програм мають екран \"Вітання\" під час першого завантаження, який допомагає визначити очікування користувача. На наступних рівнях ми додамо екран вітання до нашої програми.\n\n# Завдання:\n\n-   Перейди у режим Дизайну\n\n-   натисни на розкривне меню у верхній частині програми та обери \"Новий екран\"\n    -   ::: details [**Покажіть як**]\n        <img src=\"https://images.code.org/2de5a360b67e93f1ce41df81f91f27f4-image-1623946069421.png\" width=\"200px\" />\n        :::\n\n-   Встанови для цього екрана ідентифікатор 'welcomeScreen'\n\n-   Натисни зелену кнопку \"Встановити за замовчуванням\", щоб переконатися, що це буде перший екран, який ми побачимо в застосунку\n    -   ::: details [**Покажіть як**]\n        <img src=\"https://images.code.org/1e54edad382447e8118b2387f9a1a2ce-image-1623946010784.png\" width=\"200px\" />\n        :::\n\n-   Перетягни мітку та введи \"Програма для рекомендацій книжок для класу\" як текст мітки\n\n-   Перетягни мітку та введи короткий опис того, що робить програма.\n    -   Наприклад: \"Ця програма може порекомендувати книгу для читання на основі ваших інтересів.\"\n\n-   ::: details [**Клацни, щоб побачити приклад того, як може виглядати екран вітання**]\n    <img src=\"https://images.code.org/0896f2c3055709f1bcb13377cf0feb3b-image-1623945905142.png\" width=\"200px\" />\n    :::\n\nЗапусти програму, щоб переконатися, що вона працює. Вона має завантажити екран привітання, але ми ще не запрограмували її на перехід до наступного екрана.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-intro app lab-book recommender 3_2022": "# Створення головного екрана\n\nБільшість програм мають екран \"Вітання\" під час першого завантаження, який допомагає визначити очікування користувача. На наступних рівнях ми додамо екран вітання до нашої програми.\n\n# Завдання:\n\n-   Перейди у режим Дизайну\n\n-   натисни на розкривне меню у верхній частині програми та обери \"Новий екран\"\n    -   ::: details [**Покажіть як**]\n        <img src=\"https://images.code.org/2de5a360b67e93f1ce41df81f91f27f4-image-1623946069421.png\" width=\"200px\" />\n        :::\n\n-   Встанови для цього екрана ідентифікатор 'welcomeScreen'\n\n-   Натисни зелену кнопку \"Встановити за замовчуванням\", щоб переконатися, що це буде перший екран, який ми побачимо в застосунку\n    -   ::: details [**Покажіть як**]\n        <img src=\"https://images.code.org/1e54edad382447e8118b2387f9a1a2ce-image-1623946010784.png\" width=\"200px\" />\n        :::\n\n-   Перетягни мітку та введи \"Програма для рекомендацій книжок для класу\" як текст мітки\n\n-   Перетягни мітку та введи короткий опис того, що робить програма.\n    -   Наприклад: \"Ця програма може порекомендувати книгу для читання на основі ваших інтересів.\"\n\n-   ::: details [**Клацни, щоб побачити приклад того, як може виглядати екран вітання**]\n    <img src=\"https://images.code.org/0896f2c3055709f1bcb13377cf0feb3b-image-1623945905142.png\" width=\"200px\" />\n    :::\n\nЗапусти програму, щоб переконатися, що вона працює. Вона має завантажити екран привітання, але ми ще не запрограмували її на перехід до наступного екрана.\n\nЗакінчивши, переходь на наступний рівень",
        "ml-intro app lab-book recommender 4-2021": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://cdn.glitch.com/863b2e2c-c3b7-405e-8ece-1585b4e83e88%2Fadd-arrow.gif?v=1623948069402)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Додавання значка Далі\n\nУ Програмній Лабораторії є кілька значків, які можна використовувати для своїх програм. Додамо до нашої програми значок зі стрілкою, яку можна використовувати для переходу на наступний екран\n\n# Завдання:\n\n-   **В режимі конструктора:**\n\n    -   Перетягни елемент зображення\n\n    -   Встанови ідентифікатор цього елемента як 'nextIcon'\n\n    -   Поруч з властивістю 'зображення' натисни синє посилання \"Обрати\"\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/fed1769e317bc1175bfd72a4f45cc873-image-1616987657301.png\" width=\"200px\">\n            :::\n\n    -   У вікні, що з'явиться, перейди на вкладку Значки Icons у верхній частині екрана\n        -   ::: details  [**(Покажіть як)**]\n            <img src=\"https://images.code.org/ea16d52b617f5f246428493119c0452e-image-1616987762535.png\" width=\"500px\" style=\"border: solid 1px black\">\n            :::\n\n    -   У рядку пошуку введіть \"next\", щоб завантажити кілька значків на вибір\n\n    -   Посередині екрана є кілька стрілок. Обери одну з них, яка буде зображати нашу стрілку \"Далі\". <br />\n-   **В режимі кодування:**\n    -   Перетягни блок \\`onEvent'\n    -   Встанови для блока ідентифікатор \"nextIcon\"\n-   **Всередині блока onEvent:**\n    -   Перетягни блок `setScreen` і обери \"screen1\" з розкривного меню\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/c47a00a64f68eafcc5bffc282a04bb65-image-1617040550128.png\" width=\"400px\" />\n            :::\n\nЗапусти програму, щоб переконатися, що вона працює. Вона повинна завантажити екран привітання, а коли ти  натиснеш на стрілку, вона завантажить наступний екран",
        "ml-intro app lab-book recommender 4_2022": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://images.code.org/39fcb546b0719e8c4820f046719e12d9-image-1652288022058.gif)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Додавання значка Далі\n\nУ Програмній Лабораторії є кілька значків, які можна використовувати для своїх програм. Додамо до нашої програми значок зі стрілкою, яку можна використовувати для переходу на наступний екран\n\n# Завдання:\n\n-   **В режимі конструктора:**\n\n    -   Перетягни елемент зображення\n\n    -   Встанови ідентифікатор цього елемента як 'nextIcon'\n\n    -   Поруч з властивістю 'зображення' натисни синє посилання \"Обрати\"\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/fed1769e317bc1175bfd72a4f45cc873-image-1616987657301.png\" width=\"200px\">\n            :::\n\n    -   У вікні, що з'явиться, перейди на вкладку Значки Icons у верхній частині екрана\n        -   ::: details  [**(Покажіть як)**]\n            <img src=\"https://images.code.org/ea16d52b617f5f246428493119c0452e-image-1616987762535.png\" width=\"500px\" style=\"border: solid 1px black\">\n            :::\n\n    -   У рядку пошуку введіть \"next\", щоб завантажити кілька значків на вибір\n\n    -   Посередині екрана є кілька стрілок. Обери одну з них, яка буде зображати нашу стрілку \"Далі\". <br />\n-   **В режимі кодування:**\n    -   Перетягни блок \\`onEvent'\n    -   Встанови для блока ідентифікатор \"nextIcon\"\n-   **Всередині блока onEvent:**\n    -   Перетягни блок `setScreen` і обери \"screen1\" з розкривного меню\n        -   ::: details [**(Покажіть як)**]\n            <img src=\"https://images.code.org/c47a00a64f68eafcc5bffc282a04bb65-image-1617040550128.png\" width=\"400px\" />\n            :::\n\nЗапусти програму, щоб переконатися, що вона працює. Вона повинна завантажити екран привітання, а коли ти  натиснеш на стрілку, вона завантажить наступний екран",
        "ml-intro app lab-book recommender 5A-2021": "# Налаштовуємо нашу програму\n\nТи можеш продовжувати налаштування своєї програми, змінюючи кольори, шрифт, межі та багато інших властивостей кожного елемента дизайну.\n\n# Завдання:\n\n- Обери принаймні 4 елементи на екрані для налаштування\n- Обери принаймні дві властивості для кожного елемента, які потрібно змінити. Ось кілька пропозицій для експериментів:\n\t- *колір тексту*\n    - *фоновий колір*\n    - *сімейство шрифтів*\n    - *вирівнювання тексту*\n    - *ширина рамки*\n    - *колір рамки*\n    - *радіус кутів рамки*\n\nКоли закінчиш, повернися до попереднього рівня вибору та обери інше додаткове завдання\n\n",
        "ml-intro app lab-book recommender 5A_2022": "# Налаштовуємо нашу програму\n\nТи можеш продовжувати налаштування своєї програми, змінюючи кольори, шрифт, межі та багато інших властивостей кожного елемента дизайну.\n\n# Завдання:\n\n- Обери принаймні 4 елементи на екрані для налаштування\n- Обери принаймні дві властивості для кожного елемента, які потрібно змінити. Ось кілька пропозицій для експериментів:\n\t- *колір тексту*\n    - *фоновий колір*\n    - *сімейство шрифтів*\n    - *вирівнювання тексту*\n    - *ширина рамки*\n    - *колір рамки*\n    - *радіус кутів рамки*\n\nКоли закінчиш, повернися до попереднього рівня вибору та обери інше додаткове завдання\n\n",
        "ml-intro app lab-book recommender 5B-2021": "# Додаємо зображення\n\nЗображення можуть зробити наші програми більш привабливими для нових користувачів. Додамо нове зображення на екран привітання.\n\n# Завдання:\n\n- Знайди зображення, яке ти хочеш додати у програму\n- Знайшовши його, клацни правою кнопкою миші на зображенні та обери \"Копіювати адресу зображення\"\n\t- ::: details [**(Покажіть як)**]\n    <img src=\"https://images.code.org/f4a1a2ef76a67f0afd256b99bc6fb8bc-image-1617077722072.png\" width=\"250px\" style=\"border: solid 1px black\">\n    :::\n\n- **В режимі конструктора:**\n\t- Перетягни елемент зображення на екран\n    - У властивостях зображення клацни правою кнопкою миші та обери \"Вставити\" з меню\n    - Ти можеш продовжувати налаштовувати зображення - змінювати його розмір, щоб воно відповідало твоїм потребам\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender 5B_2022": "# Додаємо зображення\n\nЗображення можуть зробити наші програми більш привабливими для нових користувачів. Додамо нове зображення на екран привітання.\n\n# Завдання:\n\n- Знайди зображення, яке ти хочеш додати у програму\n- Знайшовши його, клацни правою кнопкою миші на зображенні та обери \"Копіювати адресу зображення\"\n\t- ::: details [**(Покажіть як)**]\n    <img src=\"https://images.code.org/f4a1a2ef76a67f0afd256b99bc6fb8bc-image-1617077722072.png\" width=\"250px\" style=\"border: solid 1px black\">\n    :::\n\n- **В режимі конструктора:**\n\t- Перетягни елемент зображення на екран\n    - У властивостях зображення клацни правою кнопкою миші та обери \"Вставити\" з меню\n    - Ти можеш продовжувати налаштовувати зображення - змінювати його розмір, щоб воно відповідало твоїм потребам\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender 5C-2021": "# Відтворення звука\n\nТи можеш додавати звуки до своєї програми! Звуки корисні для того, щоб користувач знав, коли він взаємодіє з екраном, наприклад, натискає кнопку. Додамо звук, який відтворюватиметься, коли користувач натискає одну з кнопок на екрані.\n\n# Завдання:\n\n- Перетягни блок `playSound()` всередину блоку `onEvent()` [(Де саме?)] (#triggercallout=event)\n- У першому полі натисни на меню та обери \"Вибрати\"  <br />\n<img src=\"https://images.code.org/1fd4cbed001d32ab17443db32fad88c2-image-1617078635822.png\" width=\"300px\">\n- У меню, що з'явиться, ти можеш знайти звук, який тобі подобається. Спробуй переглянути різні категорії або пошукати звук\n\t- Спробуй пошукати \"click\" або \"app\" і подивися, які звуки з'являться!\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender 5C_2022": "# Відтворення звука\n\nТи можеш додавати звуки до своєї програми! Звуки корисні для того, щоб користувач знав, коли він взаємодіє з екраном, наприклад, натискає кнопку. Додамо звук, який відтворюватиметься, коли користувач натискає одну з кнопок на екрані.\n\n# Завдання:\n\n- Перетягни блок `playSound()` всередину блоку `onEvent()` [(Де саме?)] (#triggercallout=event)\n- У першому полі натисни на меню та обери \"Вибрати\"  <br />\n<img src=\"https://images.code.org/1fd4cbed001d32ab17443db32fad88c2-image-1617078635822.png\" width=\"300px\">\n- У меню, що з'явиться, ти можеш знайти звук, який тобі подобається. Спробуй переглянути різні категорії або пошукати звук\n\t- Спробуй пошукати \"click\" або \"app\" і подивися, які звуки з'являться!\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender 5D-2021": "# Перехід на вебсайт\n\nДодамо кнопку на нашу сторінку з прогнозом, яка відкриє вебсайт публічної бібліотеки, де ми зможемо взяти рекомендовану книгу. Ось які кроки ми зробимо для цього:\n\n- Додамо кнопку на екран прогнозу\n- Використаємо блок [`open`(#fff176)](/docs/applab/open/) для переходу на нову сторінку\n\n# Завдання:\n\n- **У режимі конструктора:**\n\t- Перетягни кнопку на екран прогнозу\n    - Надайте кнопці ідентифікатор \"websiteButton\"\n    - Зміни текст кнопки на \"Перейти в бібліотеку\"\n- **У режимі кодування**\n\t- Перетягни блок [`onEvent`(#fff176)](/docs/applab/onEvent/)\n    - Зміни ідентифікатор на \"websiteButton\"\n- **Всередині блока [`onEvent`(#fff176)](/docs/applab/onEvent/)**:\n\t- Перетягни блок [`open`(#fff176)](/docs/applab/open/)\n    - Заміни \"https://code.org\" на вебсайт бібліотеки. Можливо, доведеться знайти вебадресу твоєї бібліотеки, щоб використати її тут.\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender 5D_2022": "# Перехід на вебсайт\n\nДодамо кнопку на нашу сторінку з прогнозом, яка відкриє вебсайт публічної бібліотеки, де ми зможемо взяти рекомендовану книгу. Ось які кроки ми зробимо для цього:\n\n- Додамо кнопку на екран прогнозу\n- Використаємо блок [`open`(#fff176)](/docs/applab/open/) для переходу на нову сторінку\n\n# Завдання:\n\n- **У режимі конструктора:**\n\t- Перетягни кнопку на екран прогнозу\n    - Надайте кнопці ідентифікатор \"websiteButton\"\n    - Зміни текст кнопки на \"Перейти в бібліотеку\"\n- **У режимі кодування**\n\t- Перетягни блок [`onEvent`(#fff176)](/docs/applab/onEvent/)\n    - Зміни ідентифікатор на \"websiteButton\"\n- **Всередині блока [`onEvent`(#fff176)](/docs/applab/onEvent/)**:\n\t- Перетягни блок [`open`(#fff176)](/docs/applab/open/)\n    - Заміни \"https://code.org\" на вебсайт бібліотеки. Можливо, доведеться знайти вебадресу твоєї бібліотеки, щоб використати її тут.\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender 5E-2021": "# Читання головного екрана вголос\n\nМи можемо використовувати блок [`playSpeech`(#fff176)](/docs/applab/playSpeech/) для читання тексту на нашій домашній сторінці вголос. Це чудовий спосіб зробити наш застосунок більш доступним для людей з вадами зору.\n\n# Завдання:\n\n- Перетягни блок [`playSpeech`(#fff176)](/docs/applab/playSpeech/) на самий верх коду [Де саме?)](#triggercallout=top)\n- У першому полі введи текст, який потрібно відтворити голосом. Бажано вказати назву програми та її призначення.\n- Ти можеш налаштувати блок за допомогою двох інших опцій. Обери мову і чоловічий або жіночий голос.\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender 5E_2022": "# Читання головного екрана вголос\n\nМи можемо використовувати блок [`playSpeech`(#fff176)](/docs/applab/playSpeech/) для читання тексту на нашій домашній сторінці вголос. Це чудовий спосіб зробити наш застосунок більш доступним для людей з вадами зору.\n\n# Завдання:\n\n- Перетягни блок [`playSpeech`(#fff176)](/docs/applab/playSpeech/) на самий верх коду [Де саме?)](#triggercallout=top)\n- У першому полі введи текст, який потрібно відтворити голосом. Бажано вказати назву програми та її призначення.\n- Ти можеш налаштувати блок за допомогою двох інших опцій. Обери мову і чоловічий або жіночий голос.\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-intro app lab-book recommender demo-2021": "# Програма для рекомендації книг\n\nЗапусти програму і подивись, які книги будуть рекомендовані на основі твоїх відповідей.",
        "ml-intro app lab-book recommender demo_2022": "# Програма для рекомендації книг\n\nЗапусти програму і подивись, які книги будуть рекомендовані на основі твоїх відповідей.",
        "ml-intro categorical-food choices-2021": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_ Тут ти можеш обрати набір даних, який хочеш дослідити. Є багато варіантів на вибір, і ти завжди можеш повернутися до цього екрана й обрати інший, якщо захочеш. **Завдання:** Знайди набір даних, який тобі подобається, і клацни по ньому, щоб вибрати його. Потім натисни кнопку продовжити, щоб почати навчання.\n\n    -   _Коли ми клацаємо по набору даних, з'являється інструкція:_ Тут ти можеш вибрати набір даних, який хочеш дослідити, і ти завжди можеш повернутися до цього екрана й обрати інший, якщо захочеш. **Завдання:** Знайди набір даних, який тобі подобається, і клацни по ньому, щоб вибрати його. Потім натисни кнопку Продовжити, щоб почати навчання.\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ Наш перший крок - обрати ознаки, які ми хочемо використати в нашій моделі. **Завдання:** Обери стовпець для дослідження\n\n    -   _Коли учень клацає по категорійній ознаці, з'являється інструкція:_ \"Подивись на додаткову інформацію на правій панелі. Використовуй таблицю з перехресними вкладками, щоб вирішити, чи буде ця функція корисною. Не забувай звертати увагу на гарячі точки в даних. **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Після вибору ознаки натисни кнопку \"Вчити\"\n\n-   _В інструкціях до екрана **Результати** сказано:_ \"Перевір точність своєї моделі та протестуй нові додатки до страв, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування. Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає нам знати, як люди, що брали участь в опитуванні, поставилися б до цієї страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і оберти інші ознаки для своєї моделі\n\n    -   _В інструкції до панелі докладної інформації сказано:_ \"Перевір точність своєї моделі та протестуй нові додатки до страв, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування\". Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає вам знати, як люди, що беруть участь в опитуванні, ставляться до цієї конкретної страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і обрати нові ознаки для своєї моделі",
        "ml-intro categorical-food choices_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до екрана **Вибір даних** сказано:_ Тут ти можеш обрати набір даних, який хочеш дослідити. Є багато варіантів на вибір, і ти завжди можеш повернутися до цього екрана й обрати інший, якщо захочеш. **Завдання:** Знайди набір даних, який тобі подобається, і клацни по ньому, щоб вибрати його. Потім натисни кнопку продовжити, щоб почати навчання.\n\n    -   _Коли ми клацаємо по набору даних, з'являється інструкція:_ Тут ти можеш вибрати набір даних, який хочеш дослідити, і ти завжди можеш повернутися до цього екрана й обрати інший, якщо захочеш. **Завдання:** Знайди набір даних, який тобі подобається, і клацни по ньому, щоб вибрати його. Потім натисни кнопку Продовжити, щоб почати навчання.\n\n-   _В інструкціях до екрана **Вибір ознаки** сказано:_ Наш перший крок - обрати ознаки, які ми хочемо використати в нашій моделі. **Завдання:** Обери стовпець для дослідження\n\n    -   _Коли учень клацає по категорійній ознаці, з'являється інструкція:_ \"Подивись на додаткову інформацію на правій панелі. Використовуй таблицю з перехресними вкладками, щоб вирішити, чи буде ця функція корисною. Не забувай звертати увагу на гарячі точки в даних. **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Після вибору ознаки натисни кнопку \"Вчити\"\n\n-   _В інструкціях до екрана **Результати** сказано:_ \"Перевір точність своєї моделі та протестуй нові додатки до страв, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування. Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає нам знати, як люди, що брали участь в опитуванні, поставилися б до цієї страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і оберти інші ознаки для своєї моделі\n\n    -   _В інструкції до панелі докладної інформації сказано:_ \"Перевір точність своєї моделі та протестуй нові додатки до страв, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування\". Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає вам знати, як люди, що беруть участь в опитуванні, ставляться до цієї конкретної страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і обрати нові ознаки для своєї моделі",
        "ml-intro categorical-pizza-2021": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ **Нашим першим кроком є вибір ознак, які ми хочемо використати в нашій моделі. \\*\\*Завдання:** Обери стовпець для дослідження\n\n    -   \\_ Коли учень клацає по категорійній ознаці, з'являється інструкція:\\_ \"Подивись на додаткову інформацію на правій панелі. Використовуй таблицю з перехресними вкладками, щоб вирішити, чи буде ця функція корисною. Не забувай звертати увагу на гарячі точки в даних. **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Після вибору ознаки натисни кнопку \"Вчити\"\n\n-   _В інструкціях до екрана **Результати** сказано:_ \"Перевір точність своєї моделі та протестуй нові начинки, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування. Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає нам знати, як люди, що брали участь в опитуванні, поставилися б до цієї страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і оберти інші ознаки для своєї моделі\n\n    -   _В інструкції до панелі докладної інформації сказано:_ \"Перевір точність своєї моделі та протестуйте нові додатки до страв, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування\". Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає вам знати, як люди, що беруть участь в опитуванні, ставляться до цієї конкретної страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і обрати нові ознаки для своєї моделі",
        "ml-intro categorical-pizza_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ **Нашим першим кроком є вибір ознак, які ми хочемо використати в нашій моделі. \\*\\*Завдання:** Обери стовпець для дослідження\n\n    -   \\_ Коли учень клацає по категорійній ознаці, з'являється інструкція:\\_ \"Подивись на додаткову інформацію на правій панелі. Використовуй таблицю з перехресними вкладками, щоб вирішити, чи буде ця функція корисною. Не забувай звертати увагу на гарячі точки в даних. **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як ознаку. Якщо так, натисни кнопку \"Додати ознаку\". Якщо ні, обери новий стовпець для дослідження. Після вибору ознаки натисни кнопку \"Вчити\"\n\n-   _В інструкціях до екрана **Результати** сказано:_ \"Перевір точність своєї моделі та протестуй нові начинки, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування. Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає нам знати, як люди, що брали участь в опитуванні, поставилися б до цієї страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і оберти інші ознаки для своєї моделі\n\n    -   _В інструкції до панелі докладної інформації сказано:_ \"Перевір точність своєї моделі та протестуйте нові додатки до страв, щоб побачити, чи відповідають прогнози тому, що ми очікували від даних опитування\". Коли ШІ-бот вирішує \"подобається\" чи \"не подобається\", він насправді дає вам знати, як люди, що беруть участь в опитуванні, ставляться до цієї конкретної страви. **Завдання:** Спробуй отримати модель з точністю не менше 80%. Ти можеш натиснути кнопку \"Спробувати ще раз\", щоб повернутися назад і обрати нові ознаки для своєї моделі",
        "ml-mini project-ai lab 2": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір даних** сказано:_  **Завдання:** Обери набір даних нижче, який тобі хотілося б дослідити\n\n    -   _Клацання по набору даних викликає інструкцію:_ На правій панелі можна побачити додаткову інформацію про цей набір даних, включно з деякими потенційними дослідженнями. Коли знайдеш набір даних, який тобі до вподоби, натисни кнопку Продовжити.\n\n-   _В інструкції до екрана **Вибір мітки** сказано:_ Обери стовпець, який ти хочеш використати як мітку. Це результат, який ШІ-бот намагатиметься передбачити. **Завдання:** Обери стовпець, який потрібно використати як мітку, а потім натисни кнопку \"Продовжити\".\n\n-   \\__В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі.  Це вхідні дані твоєї моделі машинного навчання - саме тут ШІ-бот шукатиме закономірності, які допоможуть йому приймати рішення. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ Коли ти вибираєш стовпчик, на правій панелі з'являється додаткова інформація. Це може допомогти тобі вирішити, чи є ця функція корисною для прогнозування твоєї мітки. Дізнатися більше можна в розділі \"Довідка та підказки\". **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати функцію\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкціях на екрані **Результати** сказано:_ На цьому екрані ти можеш побачити, наскільки точний ШІ-бот, порівнюючи його прогнози з даними тестування, на які ми вже знаємо відповіді. Докладніше про точність в Лабораторії ШІ можна дізнатися в розділі \"Довідка та підказки\". **Завдання:** Якщо ти задоволений точністю своєї моделі, натисни кнопку \"Продовжити\". Якщо ні - ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ На цьому екрані показано, які рядки ШІ-бот вгадав правильно, а які - ні. Це може допомогти пояснити, чому модель отримала саме таку оцінку точності. Дізнатися більше про те, як обчислюється точність, можна на панелі \"Довідка та підказки\".\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ Ми можемо зберегти нашу модель тут, щоб використати її в Лабораторії ШІ пізніше. Але спочатку нам потрібно створити картку моделі, щоб задокументувати, як працює наша модель. **Завдання:** Заповни інформацію в картці моделі, а потім натисни кнопку \"Зберегти\".\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис твоєї моделі!",
        "ml-mini project-ai lab 2_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір даних** сказано:_  **Завдання:** Обери набір даних нижче, який тобі хотілося б дослідити\n\n    -   _Клацання по набору даних викликає інструкцію:_ На правій панелі можна побачити додаткову інформацію про цей набір даних, включно з деякими потенційними дослідженнями. Коли знайдеш набір даних, який тобі до вподоби, натисни кнопку Продовжити.\n\n-   _В інструкції до екрана **Вибір мітки** сказано:_ Обери стовпець, який ти хочеш використати як мітку. Це результат, який ШІ-бот намагатиметься передбачити. **Завдання:** Обери стовпець, який потрібно використати як мітку, а потім натисни кнопку \"Продовжити\".\n\n-   \\__В інструкціях до вікна **Вибір ознаки** сказано:_ Тепер ти можеш вирішити, які **ознаки** ти хочеш використати для навчання своєї моделі.  Це вхідні дані твоєї моделі машинного навчання - саме тут ШІ-бот шукатиме закономірності, які допоможуть йому приймати рішення. **Завдання:** Обери стовпець, який потрібно дослідити як потенційну ознаку\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ Коли ти вибираєш стовпчик, на правій панелі з'являється додаткова інформація. Це може допомогти тобі вирішити, чи є ця функція корисною для прогнозування твоєї мітки. Дізнатися більше можна в розділі \"Довідка та підказки\". **Завдання:** Виріши, чи хочеш ти використовувати цей стовпець як функцію. Якщо так, натисни кнопку \"Додати функцію\". Якщо ні, обери новий стовпець для дослідження. Повторюй  цю процедуру, доки не обереш кілька стовпців для використання як ознаки.\n\n-   _В інструкціях на екрані **Результати** сказано:_ На цьому екрані ти можеш побачити, наскільки точний ШІ-бот, порівнюючи його прогнози з даними тестування, на які ми вже знаємо відповіді. Докладніше про точність в Лабораторії ШІ можна дізнатися в розділі \"Довідка та підказки\". **Завдання:** Якщо ти задоволений точністю своєї моделі, натисни кнопку \"Продовжити\". Якщо ні - ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ На цьому екрані показано, які рядки ШІ-бот вгадав правильно, а які - ні. Це може допомогти пояснити, чому модель отримала саме таку оцінку точності. Дізнатися більше про те, як обчислюється точність, можна на панелі \"Довідка та підказки\".\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ Ми можемо зберегти нашу модель тут, щоб використати її в Лабораторії ШІ пізніше. Але спочатку нам потрібно створити картку моделі, щоб задокументувати, як працює наша модель. **Завдання:** Заповни інформацію в картці моделі, а потім натисни кнопку \"Зберегти\".\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис твоєї моделі!",
        "ml-mini project-app lab": "# Створи свій застосунок!\n\nІмпортуй свою модель і почни створювати застосунок! Використовуй критерії в Інструкції до вправи, щоб вирішити, як налаштувати свій застосунок. Як мінімум, твій застосунок повинен мати Екран привітання та Тему.",
        "ml-mini project-app lab_2022": "# Створи свій застосунок!\n\nІмпортуй свою модель і почни створювати застосунок! Використовуй критерії в Інструкції до вправи, щоб вирішити, як налаштувати свій застосунок. Як мінімум, твій застосунок повинен мати Екран привітання та Тему.",
        "ml-model card-medical app v2 2021-2": "## Програма \"Медичний пріоритет\"\n\nЛікарня найняла компанію для створення програми, яка допоможе визначати пріоритетність пацієнтів, коли вони звертаються по допомогу.\n\nПрограма використовує модель машинного навчання з точністю 80%.\n\nМодель була навчена на даних 1000 людей, які звернулися до відділення невідкладної допомоги в червні 2020 року.\n\nНаша робота полягає в тому, щоб протестувати програму і подивитися, як вона працює, коли нові люди потрапляють до лікарні.\n\n## Завдання\n\n-   Дотримуйся інструкцій учителя, як протестувати програму і побачити, як вона працює\n\n## Скорочення\n\n-   A - Азієць\n-   AIAN - Американський індіанець / Уродженець Аляски\n-   BAM - Чорношкірі та афроамериканці\n-   NHPI - Уродженець Гавайських / Тихоокеанських островів\n-   W - Білий",
        "ml-model card-medical app v2 2021-2_2022": "## Програма \"Медичний пріоритет\"\n\nЛікарня найняла компанію для створення програми, яка допоможе визначати пріоритетність пацієнтів, коли вони звертаються по допомогу.\n\nПрограма використовує модель машинного навчання з точністю 80%.\n\nМодель була навчена на даних 1000 людей, які звернулися до відділення невідкладної допомоги в червні 2020 року.\n\nНаша робота полягає в тому, щоб протестувати програму і подивитися, як вона працює, коли нові люди потрапляють до лікарні.\n\n## Завдання\n\n-   Дотримуйся інструкцій учителя, як протестувати програму і побачити, як вона працює\n\n## Скорочення\n\n-   A - Азієць\n-   AIAN - Американський індіанець / Уродженець Аляски\n-   BAM - Чорношкірі та афроамериканці\n-   NHPI - Уродженець Гавайських / Тихоокеанських островів\n-   W - Білий",
        "ml-model cards-book recommender model card": "# Картка моделі програми для рекомендацій книжок\n\nКартка моделі складається з двох частин. Перша частина описує модель в цілому, включаючи її цільове використання, обмеження та попередження, а також інформацію про дані. В другій частині описуються описує мітки та ознаки, що використовуються для навчання моделі.\n\nНижче наведена частково заповнена картка  моделі для програми для рекомендації книжок з попереднього уроку.\n\n## Завдання\n\nЗаповни пропущені розділи картки моделі у своїй інструкції до вправи. Ти можеш використовувати програму на цьому екрані, щоб пригадати як працює програма, а також різні мітки та ознаки.\n\n<img src=\"https://images.code.org/a87f26a8185a6d743c0b9d94dbc7565d-image-1625859989666.png\" style=\"float:left\" width=\"45%\">\n<img src=\"https://images.code.org/b8eccf2086f8d6dcc99b31faebb240b2-image-1625860001157.png\" style=\"float:right\" width=\"45%\">\n\n![](<>)",
        "ml-model cards-book recommender model card_2022": "# Картка моделі програми для рекомендацій книжок\n\nКартка моделі складається з двох частин. Перша частина описує модель в цілому, включаючи її цільове використання, обмеження та попередження, а також інформацію про дані. В другій частині описуються описує мітки та ознаки, що використовуються для навчання моделі.\n\nНижче наведена частково заповнена картка  моделі для програми для рекомендації книжок з попереднього уроку.\n\n## Завдання\n\nЗаповни пропущені розділи картки моделі у своїй інструкції до вправи. Ти можеш використовувати програму на цьому екрані, щоб пригадати як працює програма, а також різні мітки та ознаки.\n\n<img src=\"https://images.code.org/a87f26a8185a6d743c0b9d94dbc7565d-image-1625859989666.png\" style=\"float:left\" width=\"45%\">\n<img src=\"https://images.code.org/b8eccf2086f8d6dcc99b31faebb240b2-image-1625860001157.png\" style=\"float:right\" width=\"45%\">\n\n![](<>)",
        "ml-models in applab-choice if quotes": "# Налагодження: Команди умови 1\n\nЖодна з команд умови на цьому екрані не працює - зможеш виправити помилку?\n\nЩо мало відбутися | Що відбувається\n----------|----------------\nЕкрани змінюються, коли натискається кнопка Спрогнозувати &nbsp;&nbsp; | Коли натискається кнопка Спрогнозувати, програма видає помилку",
        "ml-models in applab-choice if quotes_2022": "# Налагодження: Команди умови 1\n\nЖодна з команд умови на цьому екрані не працює - зможеш виправити помилку?\n\nЩо мало відбутися | Що відбувається\n----------|----------------\nЕкрани змінюються, коли натискається кнопка Спрогнозувати &nbsp;&nbsp; | Коли натискається кнопка Спрогнозувати, програма видає помилку",
        "ml-models in applab-choice if wrong place": "# Налагодження: Команди умови 2\n\nХтось залишив повідомлення про помилку на цій вебсторінці.  Зможеш виправити помилку?\n\nЩо мало відбутися | Що відбувається\n----------|----------------\nПісля натискання кнопки \"Прогноз\", екран змінюється &nbsp;&nbsp; | Екран не змінюється\n\n*Підказка: порядок коду має значення - переконайся що команди умови розташовані в правильному місці.",
        "ml-models in applab-choice if wrong place_2022": "# Налагодження: Команди умови 2\n\nХтось залишив повідомлення про помилку на цій вебсторінці.  Зможеш виправити помилку?\n\nЩо мало відбутися | Що відбувається\n----------|----------------\nПісля натискання кнопки \"Прогноз\", екран змінюється &nbsp;&nbsp; | Екран не змінюється\n\n*Підказка: порядок коду має значення - переконайся що команди умови розташовані в правильному місці.",
        "ml-models in applab-choice intended warnings": "<div markdown=\"1\" style=\"float: right; margin: 10px;\">\n\nКартка моделі <br />\n\n![expandable](https://images.code.org/e38768393e3033e60dc9dc2696e3df7d-image-1625085031146.png)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Додаємо цільове використання та обмеження\n\nДодамо до нашої програми додаткові елементи з картки моделі, щоб допомогти користувачеві зрозуміти, для чого призначена ця програма.\n\n## Завдання\n\n- У режимі конструктора перейди на `informationScreen`.\n- Використовуй текст з картки моделі для заповнення напису  \"Призначення\"\n\t- Ти можеш переглянути картку моделі, натиснувши шестірню та обравши \"Керування моделями ШІ\". Картка моделі з'явиться у цьому вікні, де ти можеш скопіювати та вставити текст з розділу \"Призначення\n- Повтори цей процес для додавання тексту в написах Обмеження і Попередження",
        "ml-models in applab-choice intended warnings_2022": "<div markdown=\"1\" style=\"float: right; margin: 10px;\">\n\nКартка моделі <br />\n\n![expandable](https://images.code.org/e38768393e3033e60dc9dc2696e3df7d-image-1625085031146.png)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Додаємо цільове використання та обмеження\n\nДодамо до нашої програми додаткові елементи з картки моделі, щоб допомогти користувачеві зрозуміти, для чого призначена ця програма.\n\n## Завдання\n\n- У режимі конструктора перейди на `informationScreen`.\n- Використовуй текст з картки моделі для заповнення напису  \"Призначення\"\n\t- Ти можеш переглянути картку моделі, натиснувши шестірню та обравши \"Керування моделями ШІ\". Картка моделі з'явиться у цьому вікні, де ти можеш скопіювати та вставити текст з розділу \"Призначення\n- Повтори цей процес для додавання тексту в написах Обмеження і Попередження",
        "ml-models in applab-choice predict typos": "<div markdown=\"1\" style=\"float: right; margin: 10px;\">\n\nКартка моделі <br />\n\n![expandable](https://images.code.org/1fb88a3553f16cd9a576d54afe8757b9-image-1625509299810.png)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Налагодження: екрани прогнозів не працюють\n\nЗастосунок цієї людини працює некоректно - зможеш ви знайти помилку і виправити її?\n\nЩо мало відбутися | Що відбувається\n----------|----------------\nЕкран змінюється коли натискається кнопка спрогнозувати &nbsp;&nbsp; | Екран не змінюється\n\n\\\n*Підказка: Спробуй перевірити картку моделі та переконайся, що все написано правильно, включно з великими літерами*",
        "ml-models in applab-choice predict typos_2022": "<div markdown=\"1\" style=\"float: right; margin: 10px;\">\n\nКартка моделі <br />\n\n![expandable](https://images.code.org/1fb88a3553f16cd9a576d54afe8757b9-image-1625509299810.png)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Налагодження: екрани прогнозів не працюють\n\nЗастосунок цієї людини працює некоректно - зможеш ви знайти помилку і виправити її?\n\nЩо мало відбутися | Що відбувається\n----------|----------------\nЕкран змінюється коли натискається кнопка спрогнозувати &nbsp;&nbsp; | Екран не змінюється\n\n\\\n*Підказка: Спробуй перевірити картку моделі та переконайся, що все написано правильно, включно з великими літерами*",
        "ml-models in applab-screens-1-2021": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://cdn.glitch.com/863b2e2c-c3b7-405e-8ece-1585b4e83e88%2Fif-statement.gif?v=1625508266788)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Зміна екрана\n\nМи використаємо команду умови, щоб змінити екран на основі наших результатів. Наразі, давай подивимося, чи зможемо ми змусити нашу програму працювати лише для результату з рибою.\n\n## Завдання\n\n-   Перетягни блок [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/) і розмісти всередині блоку [\\`getPrediction\\`(#d3e965)](/docs/applab/getPrediction/) ( [Де саме?](#triggercallout=if_statement) )\n-   Перетягни блок [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/) і розмісти всередині блоку [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/)\n-   У лівій частині блоку [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/), введи `value`. Це змінна, яка містить результат нашого прогнозу.\n-   У правій частині блоку [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/), введи `\"Риба\"`, разом із лапками.\n-   Всередину блоку [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/):\n    -   Перетягни блок [\\`setScreen()\\`(#fff176)](/docs/applab/setScreen/)  та обери \"fishScreen\" з розкривного меню\n\nПеревір свій код! Спробуй ввести можливі варіанти, які, на твою думку, відповідають рибі, і подивися, чи зможеш ти перейти на цей екран!\n\nКоли упевнишся, що перший екран працює, переходь до наступного рівня",
        "ml-models in applab-screens-1_2022": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://images.code.org/eec974287f8936ab8c5866f83d5c0d78-image-1652288131026.gif)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Зміна екрана\n\nМи використаємо команду умови, щоб змінити екран на основі наших результатів. Наразі, давай подивимося, чи зможемо ми змусити нашу програму працювати лише для результату з рибою.\n\n## Завдання\n\n-   Перетягни блок [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/) і розмісти всередині блоку [\\`getPrediction\\`(#d3e965)](/docs/applab/getPrediction/) ( [Де саме?](#triggercallout=if_statement) )\n-   Перетягни блок [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/) і розмісти всередині блоку [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/)\n-   У лівій частині блоку [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/), введи `value`. Це змінна, яка містить результат нашого прогнозу.\n-   У правій частині блоку [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/), введи `\"Риба\"`, разом із лапками.\n-   Всередину блоку [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/):\n    -   Перетягни блок [\\`setScreen()\\`(#fff176)](/docs/applab/setScreen/)  та обери \"fishScreen\" з розкривного меню\n\nПеревір свій код! Спробуй ввести можливі варіанти, які, на твою думку, відповідають рибі, і подивися, чи зможеш ти перейти на цей екран!\n\nКоли упевнишся, що перший екран працює, переходь до наступного рівня",
        "ml-models in applab-screens-2-2021": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://cdn.glitch.com/863b2e2c-c3b7-405e-8ece-1585b4e83e88%2Fnew-screen.gif?v=1625507637573)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Відсутній екран\n\nУ цьому застосунку є екрани для 3 з 4 варіантів домашніх улюбленців, але не вистачає екрана з рекомендаціями для собак! Скористаймося режимом конструктора, щоб додати новий екран для собак.\n\n## Завдання\n\n-   Перейди у режим конструктор і додай новий екран до свого застосунку\n-   Перетягни новий елемент Напис на екран.\n-   У властивості текст введи \"Рекомендація домашнього улюбленця: Собака!\" у поле\n-   Перетягни новий елемент зображення на екран.\n-   У властивості зображення скопіюй та встав URL-адресу наступного зображення у поле:\n    -   `https://code.org/images/dog.jpg`\n    -   Або: якщо ти хочеш пошукати власне зображення собаки, скопіюй і встав URL-адресу цього зображення у поле\n-   Встанови відповідні ідентифікатори екрана, елемента напису та елемента зображення \n\nТи ще не зможеш відвідати цей екран. Коли все буде готово, перейди на наступний рівень, де ми додамо події до нашого коду, щоб змусити його змінювати екрани.",
        "ml-models in applab-screens-3-2021": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://cdn.glitch.com/863b2e2c-c3b7-405e-8ece-1585b4e83e88%2Fif-statement%202.gif?v=1625508649934)\n\n<br/>\n\nКлацни, щоб розгорнути\n\n</div>\n\n# Завершення роботи з програмою\n\nТепер, коли у нас є всі екрани, закінчимо додавати умовні оператори до нашої програми, щоб переключитися на потрібний екран на основі результату.\n\n## Завдання\n\nПовтори той самий процес, який ми зробили для екрана з рибками, ще тричі. Нагадуємо, що кроки такі:\n\n-   Перетягни блок [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/) і розмісти його всередині блоку [\\`getPrediction\\`(#d3e965)](/docs/applab/getPrediction/) ( [Де саме?](#triggercallout=if_statement) )\n-   Перетягни блок [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/) і розмісти його всередині блоку [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/)\n-   В лівій частині блоку [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/), введи `value`. Це змінна, яка має результат нашого прогнозу.\n-   В правій частині блоку [\\`==\\`(#FFB74D)](/docs/applab/equalityOperator/),  введи назву домашнього улюбленця _включно з лапками_.\n    -   Пам'ятай, що ти можеш використовувати картку моделі, щоб пригадати всі можливі значення прогнозу\n-   Всередину блоку [\\`if\\`(#64B5F6)](/docs/applab/ifBlock/):\n    -   Перетягни блок [\\`setScreen()\\`(#fff176)](/docs/applab/setScreen/) і обери потрібний екран у розкривному меню\n\nПеревір свій код! Спробуй отримати кожну тваринку! Переконайся, що всі екрани працюють",
        "ml-models in applab-zoo assessment": "# Оновлення застосунка \"Зоопарк\"\n\nІнший учень почав створювати застосунок на основі даних зоопарку. Він імпортував свою модель і додав додаткові екрани, але все ще потребує оновлення. Чи зможеш ти допомогти йому оновити застосунок  щоб він був більш описовим і щоб екрани змінювалися після натискання кнопки \"Прогноз\"?\n\n## Завдання:\n\n-   Використовуй картку моделі, щоб оновити текст на екрані прогнозу\n    -   Доступ до картки моделі можна отримати клацнувши по значку шестерні та обравши \"Керування моделями ШІ\". \n    -   Прокрути картку моделі донизу, щоб побачити інформацію про етикетку та характеристики\n-   Додай команди умови всередині блоку [\\`getPrediction\\`(#d3e965)](/docs/applab/getPrediction/), щоб  екран змінювався відповідно до прогнозованої тварини\n    -   Використовуй картку моделі, щоб побачити всі можливі значення для прогнозу\n    -   Тобі знадобиться шість команд умови - по одній для кожного екрана, який треба змінити",
        "ml-models in applab-zoo model embed": "# Програма для прогнозування тварин\n\nЗапусти програму кілька разів, щоб побачити, як вона працює.",
        "ml-models in applab-zoo model embed_2022": "# Програма для прогнозування тварин\n\nЗапусти програму кілька разів, щоб побачити, як вона працює.",
        "ml-models-shoes decision tree-2021": "# Удосконалена програма для вибору взуття\n\nЦя програма використовує комп'ютерну модель, щоб допомогти прийняти рішення про те, яке взуття вдягнути. Програма може надати 6 різних рекомендацій щодо того, яке взуття вдягнути.\n\n## Завдання\n\n-   Запусти застосунок кілька разів. Перевір, чи зможеш отримати всі 6 рекомендації\n-   **Зроби прогноз:** як, на твою думку, програма приймає рішення?",
        "ml-models-shoes decision tree_2022": "# Удосконалена програма для вибору взуття\n\nЦя програма використовує комп'ютерну модель, щоб допомогти прийняти рішення про те, яке взуття вдягнути. Програма може надати 6 різних рекомендацій щодо того, яке взуття вдягнути.\n\n## Завдання\n\n-   Запусти застосунок кілька разів. Перевір, чи зможеш отримати всі 6 рекомендації\n-   **Зроби прогноз:** як, на твою думку, програма приймає рішення?",
        "ml-models-shoes points-2021": "# Найкраща програма для вибору взуття\n\nЦя програма використовує комп'ютерну модель, щоб допомогти прийняти рішення про те, яке взуття вдягнути. Є 5 різних рекомендацій щодо того, яке взуття вдягнути.\n\n## Завдання\n\n-   Запусти застосунок кілька разів. Перевір, чи зможеш отримати від програми рекомендації взуття, яке відповідає закономірностям, які ми побачили в даних\n-   Спробуй зробити так, щоб застосунок рекомендував всі типи взуття",
        "ml-models-shoes points_2022": "# Найкраща програма для вибору взуття\n\nЦя програма використовує комп'ютерну модель, щоб допомогти прийняти рішення про те, яке взуття вдягнути. Є 5 різних рекомендацій щодо того, яке взуття вдягнути.\n\n## Завдання\n\n-   Запусти застосунок кілька разів. Перевір, чи зможеш отримати від програми рекомендації взуття, яке відповідає закономірностям, які ми побачили в даних\n-   Спробуй зробити так, щоб застосунок рекомендував всі типи взуття",
        "ml-models-shoes random-2021": "# Програма для вибору взуття\n\nЦя програма використовує комп'ютерну модель, щоб допомогти прийняти рішення про те, яке взуття вдягнути. Програма може надати 4 різні рекомендації щодо того, яке взуття вдягнути.\n\n## Завдання\n\n-   Запусти застосунок кілька разів. Перевір, чи зможеш отримати всі 4 рекомендації\n-   **Зроби прогноз:** як, на твою думку, програма приймає рішення?",
        "ml-models-shoes random_2022": "# Програма для вибору взуття\n\nЦя програма використовує комп'ютерну модель, щоб допомогти прийняти рішення про те, яке взуття вдягнути. Програма може надати 4 різні рекомендації щодо того, яке взуття вдягнути.\n\n## Завдання\n\n-   Запусти застосунок кілька разів. Перевір, чи зможеш отримати всі 4 рекомендації\n-   **Зроби прогноз:** як, на твою думку, програма приймає рішення?",
        "ml-numerical ai lab-safari 1-2021": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ **Завдання:** Дотримуйся вказівок з Інструкції до завдання. Навчати модель можна лише після того, як дослідиш кілька ознак.\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Дотримуйся вказівок з Інструкції до завдання. Навчати модель можна лише після того, як дослідиш кілька ознак.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Дотримуйся вказівок з Інструкції до завдання. Навчати модель можна лише після того, як дослідиш кілька ознак.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Перевір  точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 80%, натисни кнопку Продовжити. В іншому випадку ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 80%, натисни кнопку Продовжити. В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-numerical ai lab-safari 1_2022": "Цей рівень містить динамічні інструкції, які змінюються під час взаємодії з Лабораторією ШІ.\n\n-   _В інструкціях до вікна **Вибір ознаки** сказано:_ **Завдання:** Дотримуйся вказівок з Інструкції до завдання. Навчати модель можна лише після того, як дослідиш кілька ознак.\n\n    -   _Клацання по числовій ознаці викликає інструкцію:_ **Завдання:** Дотримуйся вказівок з Інструкції до завдання. Навчати модель можна лише після того, як дослідиш кілька ознак.\n\n    -   _Клацання по категорійній ознаці викликає інструкцію:_ **Завдання:** Дотримуйся вказівок з Інструкції до завдання. Навчати модель можна лише після того, як дослідиш кілька ознак.\n\n-   _В інструкціях на екрані **Результати** сказано:_ **Завдання:** Перевір  точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 80%, натисни кнопку Продовжити. В іншому випадку ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n    -   _Клацання на панелі докладної інформації викликає інструкцію:_ **Завдання:** Перевір точність своєї моделі та протестуй кілька прикладів. Якщо точність принаймні 80%, натисни кнопку Продовжити. В іншому випадку, ти можеш спробувати ще раз і продовжити навчання, доки не знайдеш точну модель.\n\n-   _В інструкціях до екрана **Картка моделі** сказано:_ **Завдання:** Заповни інформацію в картці моделі. Завершивши, натисни кнопку Зберегти.\n\n-   _В інструкціях до екрана **Огляд моделі** сказано:_ Ми це зробили! Нижче ти можеш побачити короткий опис своєї моделі!",
        "ml-numerical data- import app": "# Імпорт нашого застосунку\n\nСпробуймо імпортувати модель, яку ми щойно створили у Лабораторії ШІ!\n\n# Завдання:\n\n-   Клацни по значку з шестернею та обери \"Керування моделями ШІ\"\n-   Обери модель, яку ми щойно зберегли в Лабораторії ШІ\n-   Запусти свій код і перевір, чи працює він\n-   Продовжуй налаштовувати свій застосунок. Наприклад, ти можеш\n    -   Додати тему\n    -   Додати екран привітання\n    -   Додати зображення або текст\n    -   Додати інформацію з картки моделі на інші екрани застосунку",
        "ml-numerical data- import app_2022": "# Імпорт нашого застосунку\n\nСпробуймо імпортувати модель, яку ми щойно створили у Лабораторії ШІ!\n\n# Завдання:\n\n-   Клацни по значку з шестернею та обери \"Керування моделями ШІ\"\n-   Обери модель, яку ми щойно зберегли в Лабораторії ШІ\n-   Запусти свій код і перевір, чи працює він\n-   Продовжуй налаштовувати свій застосунок. Наприклад, ти можеш\n    -   Додати тему\n    -   Додати екран привітання\n    -   Додати зображення або текст\n    -   Додати інформацію з картки моделі на інші екрани застосунку",
        "ml-use model card-choice1": "# Налаштовуємо нашу програму\n\nТи можеш продовжувати налаштування своєї програми, змінюючи кольори, шрифт, межі та багато інших властивостей кожного елемента дизайну.\n\n# Завдання:\n\n- Обери принаймні 4 елементи на екрані для налаштування\n- Обери принаймні дві властивості для кожного елемента, які потрібно змінити. Ось кілька пропозицій для експериментів:\n\t- *колір тексту*\n    - *фоновий колір*\n    - *сімейство шрифтів*\n    - *вирівнювання тексту*\n    - *ширина рамки*\n    - *колір рамки*\n    - *радіус кутів рамки*\n\nКоли закінчиш, повернися до попереднього рівня вибору та обери інше додаткове завдання\n\n",
        "ml-use model card-choice1_2022": "# Налаштовуємо нашу програму\n\nТи можеш продовжувати налаштування своєї програми, змінюючи кольори, шрифт, межі та багато інших властивостей кожного елемента дизайну.\n\n# Завдання:\n\n- Обери принаймні 4 елементи на екрані для налаштування\n- Обери принаймні дві властивості для кожного елемента, які потрібно змінити. Ось кілька пропозицій для експериментів:\n\t- *колір тексту*\n    - *фоновий колір*\n    - *сімейство шрифтів*\n    - *вирівнювання тексту*\n    - *ширина рамки*\n    - *колір рамки*\n    - *радіус кутів рамки*\n\nКоли закінчиш, повернися до попереднього рівня вибору та обери інше додаткове завдання\n\n",
        "ml-use model card-choice2": "# Додаємо зображення\n\nЗображення можуть зробити застосунки більш привабливими для нових користувачів. Додамо нове зображення на головну сторінку.\n\n# Завдання\n\n- Знайди зображення, яке ти хочеш використати у своєму застосунку\n- Знайшовши його, клацни правою кнопкою миші на зображенні та обери \"Копіювати адресу зображення\"\n\t- ::: details [**(Покажіть як)**]\n    <img src=\"https://images.code.org/f4a1a2ef76a67f0afd256b99bc6fb8bc-image-1617077722072.png\" width=\"250px\" style=\"border: solid 1px black\">\n    :::\n\n- **У режимі конструктора:**\n\t- Перетягни елемент зображення на екран\n    - У властивості зображення клацни правою кнопкою миші та вибери \"Вставити\" з меню\n    - Можеш продовжувати налаштовувати зображення - змінювати його розмір, щоб воно відповідало твоїм побажанням\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-choice2_2022": "# Додаємо зображення\n\nЗображення можуть зробити застосунки більш привабливими для нових користувачів. Додамо нове зображення на головну сторінку.\n\n# Завдання\n\n- Знайди зображення, яке ти хочеш використати у своєму застосунку\n- Знайшовши його, клацни правою кнопкою миші на зображенні та обери \"Копіювати адресу зображення\"\n\t- ::: details [**(Покажіть як)**]\n    <img src=\"https://images.code.org/f4a1a2ef76a67f0afd256b99bc6fb8bc-image-1617077722072.png\" width=\"250px\" style=\"border: solid 1px black\">\n    :::\n\n- **У режимі конструктора:**\n\t- Перетягни елемент зображення на екран\n    - У властивості зображення клацни правою кнопкою миші та вибери \"Вставити\" з меню\n    - Можеш продовжувати налаштовувати зображення - змінювати його розмір, щоб воно відповідало твоїм побажанням\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-choice3": "# Відтворення звуку\n\nТи можеш додавати звуки до свого застосунку! Спробуймо зробити так, щоб застосунок видавав певний звук залежно від тварини, яку рекомендують.\n\n# Кроки:\n\n- Використовуй команду умови, щоб перевірити, яка тварина була обрана\n- Увімкни звук, який відповідає тварині\n- Повтори це для всіх тварин\n\n# Завдання:\n\n- Перетягни `команду умови` всередину блоку `getPrediction()` [(Де саме?)] (#triggercallout=predict)\n- Перетягни блок `==` всередину команди умови. З одного боку введи *value*. З іншого боку введи *\"dog\"*.\n\t- ::: details [**(Як це зробити)**]\n    <img src=\"https://images.code.org/2b6889849eb9f3b6d0464d5d42fb0542-image-1617078488349.png\" width=\"200px\" />\n    :::\n- Всередині команди умови:\n\t- Перетягни блок `playSound()`\n    - У першому полі клацни на меню та обери \"Вибрати\" <br />\n    <img src=\"https://images.code.org/1fd4cbed001d32ab17443db32fad88c2-image-1617078635822.png\" width=\"300px\">\n    - У меню, що з'явиться, знайди звук, який тобі подобається. Це може бути звук собаки або ні - вибір за тобою!\n\nПовтори ці дії для кожної тварини, щоб зазвучав інший звук.\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-choice3_2022": "# Відтворення звуку\n\nТи можеш додавати звуки до свого застосунку! Спробуймо зробити так, щоб застосунок видавав певний звук залежно від тварини, яку рекомендують.\n\n# Кроки:\n\n- Використовуй команду умови, щоб перевірити, яка тварина була обрана\n- Увімкни звук, який відповідає тварині\n- Повтори це для всіх тварин\n\n# Завдання:\n\n- Перетягни `команду умови` всередину блоку `getPrediction()` [(Де саме?)] (#triggercallout=predict)\n- Перетягни блок `==` всередину команди умови. З одного боку введи *value*. З іншого боку введи *\"dog\"*.\n\t- ::: details [**(Як це зробити)**]\n    <img src=\"https://images.code.org/2b6889849eb9f3b6d0464d5d42fb0542-image-1617078488349.png\" width=\"200px\" />\n    :::\n- Всередині команди умови:\n\t- Перетягни блок `playSound()`\n    - У першому полі клацни на меню та обери \"Вибрати\" <br />\n    <img src=\"https://images.code.org/1fd4cbed001d32ab17443db32fad88c2-image-1617078635822.png\" width=\"300px\">\n    - У меню, що з'явиться, знайди звук, який тобі подобається. Це може бути звук собаки або ні - вибір за тобою!\n\nПовтори ці дії для кожної тварини, щоб зазвучав інший звук.\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-choice4": "# Перехід на вебсайт\n\nПісля надання рекомендації домашнього улюбленця, ми можемо допомогти нашим користувачам відвідати сайт притулку тварин, щоб вони обрали собі домашню тварину. Треба додати кнопку на нашу сторінку з прогнозами, яка відкриватиме сайт адопції домашніх тварин.\n\n# Кроки:\n\n- Додай кнопку на екран прогнозу\n- Використовуй блок `open()` для переходу на нову сторінку\n\n# Завдання:\n\n- **У режимі конструктора:**\n\t- Перетягни кнопку на екран прогнозу\n    - Признач кнопці ідентифікатор \"websiteButton\"\n    - Зміни текст кнопки на \"Завести домашнього улюбленця\"\n- **У режимі кодування:**\n\t- Перетягни блок `onEvent()` на екран прогнозу\n    - Зміни ідентифікатор на \"websiteButton\"\n- **Усередині `onEvent()`**:\n\t- Перетягни блок `open()`.\n    - Заміни \"https://code.org\" на вебсайт на свій вибір\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-choice4_2022": "# Перехід на вебсайт\n\nПісля надання рекомендації домашнього улюбленця, ми можемо допомогти нашим користувачам відвідати сайт притулку тварин, щоб вони обрали собі домашню тварину. Треба додати кнопку на нашу сторінку з прогнозами, яка відкриватиме сайт адопції домашніх тварин.\n\n# Кроки:\n\n- Додай кнопку на екран прогнозу\n- Використовуй блок `open()` для переходу на нову сторінку\n\n# Завдання:\n\n- **У режимі конструктора:**\n\t- Перетягни кнопку на екран прогнозу\n    - Признач кнопці ідентифікатор \"websiteButton\"\n    - Зміни текст кнопки на \"Завести домашнього улюбленця\"\n- **У режимі кодування:**\n\t- Перетягни блок `onEvent()` на екран прогнозу\n    - Зміни ідентифікатор на \"websiteButton\"\n- **Усередині `onEvent()`**:\n\t- Перетягни блок `open()`.\n    - Заміни \"https://code.org\" на вебсайт на свій вибір\n\nКоли завершиш, повертайся до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-choice5": "# Відтворення вмісту домашньої сторінки голосом\n\nМи можемо використовувати блок `playSpeech()` для читання тексту на нашій домашній сторінці вголос. Це чудовий спосіб зробити наш застосунок більш доступним для людей з вадами зору.\n\n# Завдання:\n\n- Перетягни блок `playSpeech()` на самий верх свого коду [(Де саме?)](#triggercallout=top)\n- У першому полі введи текст, який ми хочемо прочитати вголос. Бажано вказати назву програми та її призначення.\n- За допомогою двох інших опцій можна додатково налаштувати блок. Обери чоловічий або жіночий голос і потрібну мову.\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-choice5_2022": "# Відтворення вмісту домашньої сторінки голосом\n\nМи можемо використовувати блок `playSpeech()` для читання тексту на нашій домашній сторінці вголос. Це чудовий спосіб зробити наш застосунок більш доступним для людей з вадами зору.\n\n# Завдання:\n\n- Перетягни блок `playSpeech()` на самий верх свого коду [(Де саме?)](#triggercallout=top)\n- У першому полі введи текст, який ми хочемо прочитати вголос. Бажано вказати назву програми та її призначення.\n- За допомогою двох інших опцій можна додатково налаштувати блок. Обери чоловічий або жіночий голос і потрібну мову.\n\nКоли завершиш, повернися до попереднього рівня вибору та обери інше додаткове завдання",
        "ml-use model card-example1A-2021": "# Програма для рекомендацій домашніх тварин\n\nЗоомагазин створив модель машинного навчання, яка допомагає рекомендувати домашніх тварин новим покупцям. Вони хочуть, щоб ми створили програму на основі їхньої моделі. \n\n# Завдання:\n\n-   Натисни на шестерню та обери \"Керування моделями ШІ\"\n-   Обери зі списку Програму для рекомендацій домашніх тварин і натисни \"Імпортувати\"\n-   Запусти програму кілька разів, щоб протестувати її. Спробуй отримати всі можливі рекомендації домашнього улюбленця.\n    -   _Хм.... ця програма не дуже добре організована. Важко зрозуміти, що означає кожна функція. Однак, спробуй свої найкращі здогадки та спробуй різні значення, щоб побачити різних домашніх улюбленців, яких можна отримати._\n\n# Попрацюй з партнером:\n\n-   Деякі елементи використовують розкривні списки, а інші - текстові поля. На вашу думку, в чому різниця між цими двома типами елементів?",
        "ml-use model card-example1A_2022": "# Програма для рекомендацій домашніх тварин\n\nЗоомагазин створив модель машинного навчання, яка допомагає рекомендувати домашніх тварин новим покупцям. Вони хочуть, щоб ми створили програму на основі їхньої моделі. \n\n# Завдання:\n\n-   Натисни на шестерню та обери \"Керування моделями ШІ\"\n-   Обери зі списку Програму для рекомендацій домашніх тварин і натисни \"Імпортувати\"\n-   Запусти програму кілька разів, щоб протестувати її. Спробуй отримати всі можливі рекомендації домашнього улюбленця.\n    -   _Хм.... ця програма не дуже добре організована. Важко зрозуміти, що означає кожна функція. Однак, спробуй свої найкращі здогадки та спробуй різні значення, щоб побачити різних домашніх улюбленців, яких можна отримати._\n\n# Попрацюй з партнером:\n\n-   Деякі елементи використовують розкривні списки, а інші - текстові поля. На вашу думку, в чому різниця між цими двома типами елементів?",
        "ml-use model card-example1B-2021": "<div markdown=\"1\" style=\"float: right; margin: 10px;\">\n\nКартка моделі <br />\n\n![expandable](https://images.code.org/1fb88a3553f16cd9a576d54afe8757b9-image-1625509299810.png)\n\n<br/>\n\nКлацни для перегляду\n\n</div>\n\n# Використання картки моделі\n\nВикористаймо картку моделі, щоб додати більше інформації у нашу програму, для кращого опису кожної мітки. Використовуючи розділ \"Функції та мітки\", онови кожну функцію так, щоб вона ставила користувачеві запитання\n\n# Завдання:\n\n-   У застосунку перейди у режим конструктора\n-   Онови текст кожної функції на основі опису в картці моделі\n    -   Наприклад: заміни \"T\" на \"Яка температура у вашому регіоні?\"\n-   Онови текст для напису на основі опису в картці моделі\n\nЗавершивши, переходь на наступний рівень",
        "ml-use model card-example1B_2022": "<div markdown=\"1\" style=\"float: right; margin: 10px;\">\n\nКартка моделі <br />\n\n![expandable](https://images.code.org/1fb88a3553f16cd9a576d54afe8757b9-image-1625509299810.png)\n\n<br/>\n\nКлацни для перегляду\n\n</div>\n\n# Використання картки моделі\n\nВикористаймо картку моделі, щоб додати більше інформації у нашу програму, для кращого опису кожної мітки. Використовуючи розділ \"Функції та мітки\", онови кожну функцію так, щоб вона ставила користувачеві запитання\n\n# Завдання:\n\n-   У застосунку перейди у режим конструктора\n-   Онови текст кожної функції на основі опису в картці моделі\n    -   Наприклад: заміни \"T\" на \"Яка температура у вашому регіоні?\"\n-   Онови текст для напису на основі опису в картці моделі\n\nЗавершивши, переходь на наступний рівень",
        "ml-use model card-example3A-2021": "# Система оповіщення водія\n\nЩе один спосіб покращити користувацький досвід наших застосунків - це розділити питання на окремі екрани. Це дозволяє нам додавати більше інформації про кожне питання, а користувачеві легше відстежувати свої відповіді.\n\nЦей застосунок використовується в автомобілях, щоб попередити водія про небезпечні дорожні умови. Запустивши застосунок, ти побачиш, що кожне запитання відображається на окремому екрані, а не всі разом.\n\n# Завдання:\n\n-   Запусти цю програму кілька разів. Ти побачиш, що кожне питання виводиться на окремий екран, а не всі на одному екрані.\n-   Зверни увагу на елементи дизайну на кожному екрані.\n\n# Разом із сусідом:\n\n-   Скільки функцій має цей застосунок? Які вони??\n-   Яка у цього застосунку мітка? Які можливі результати?\n\n<hr />\n\n# Картка моделі\n\n::: details [Клацни, щоб переглянути картку моделі]\n\n<a href=\"https://images.code.org/c529f10e4705472ed411acf0a06ba52a-image-1625085408035.png\" target=\"_blank\">\n<img src=\"https://images.code.org/c529f10e4705472ed411acf0a06ba52a-image-1625085408035.png\" width=\"45%\" style=\"float:left; margin: 2px;\"></a>\n<a href=\"https://images.code.org/555c117f7a94b91ee05cde30e046c79a-image-1625085429537.png\" target=\"_blank\">\n<img src=\"https://images.code.org/555c117f7a94b91ee05cde30e046c79a-image-1625085429537.png\" width=\"45%\" style=\"float:right; margin: 2px\"></a>\n\n:::",
        "ml-use model card-example3A_2022": "# Система оповіщення водія\n\nЩе один спосіб покращити користувацький досвід наших застосунків - це розділити питання на окремі екрани. Це дозволяє нам додавати більше інформації про кожне питання, а користувачеві легше відстежувати свої відповіді.\n\nЦей застосунок використовується в автомобілях, щоб попередити водія про небезпечні дорожні умови. Запустивши застосунок, ти побачиш, що кожне запитання відображається на окремому екрані, а не всі разом.\n\n# Завдання:\n\n-   Запусти цю програму кілька разів. Ти побачиш, що кожне питання виводиться на окремий екран, а не всі на одному екрані.\n-   Зверни увагу на елементи дизайну на кожному екрані.\n\n# Разом із сусідом:\n\n-   Скільки функцій має цей застосунок? Які вони??\n-   Яка у цього застосунку мітка? Які можливі результати?\n\n<hr />\n\n# Картка моделі\n\n::: details [Клацни, щоб переглянути картку моделі]\n\n<a href=\"https://images.code.org/c529f10e4705472ed411acf0a06ba52a-image-1625085408035.png\" target=\"_blank\">\n<img src=\"https://images.code.org/c529f10e4705472ed411acf0a06ba52a-image-1625085408035.png\" width=\"45%\" style=\"float:left; margin: 2px;\"></a>\n<a href=\"https://images.code.org/555c117f7a94b91ee05cde30e046c79a-image-1625085429537.png\" target=\"_blank\">\n<img src=\"https://images.code.org/555c117f7a94b91ee05cde30e046c79a-image-1625085429537.png\" width=\"45%\" style=\"float:right; margin: 2px\"></a>\n\n:::",
        "ml-use model card-example3C-2021": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://images.code.org/f90597764ae9cd3c1f11b4da8ec1c0a5-image-1652287785340.gif)\n\n<br/>\n\nКлацни тут, щоб розгорнути\n\n</div>\n\n# Оновлення функції температури\n\nА зараз оновимо те, як наш застосунок збирає дані для функції температури. Нам потрібно буде змінити як елементи дизайну, так і код.\n\n# Кроки:\n\n-   **Дизайн:** Додати нове текстове поле на екрані температури\n-   **Код:** Оновити код, щоб використовувати нове поле введення тексту на екрані температури\n\n# Завдання:\n\n-   **У режимі конструктора:**\n    -   Вибери \"temperatureScreen\" з розкривного меню екрана\n    -   Перетягни елемент \"поле для введення тексту\" на екран\n    -   Встанови для нього ідентифікатор“temperatureInput”\n-   **У режимі кодування:**\n    -   Знайди рядок у своєму коді, який відповідає ознаці температури [(Де саме?)](#triggercallout=temp)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в порожню область праворуч від знака рівності\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни  стрілку розкривного меню та обери \"temperatureInput\"\n        -   ::: details [**(Show Me How)**]\n            <img src=\"https://images.code.org/5c7da11d893163a8147ac60bed109cc1-image-1625593652777.png\" width=\"450px\" />\n            :::\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Застосунок ще не працюватиме працювати коректно, і у твоєму коді будуть деякі помилки, які ми виправимо на наступних рівнях",
        "ml-use model card-example3C_2022": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://images.code.org/f90597764ae9cd3c1f11b4da8ec1c0a5-image-1652287785340.gif)\n\n<br/>\n\nКлацни тут, щоб розгорнути\n\n</div>\n\n# Оновлення функції температури\n\nА зараз оновимо те, як наш застосунок збирає дані для функції температури. Нам потрібно буде змінити як елементи дизайну, так і код.\n\n# Кроки:\n\n-   **Дизайн:** Додати нове текстове поле на екрані температури\n-   **Код:** Оновити код, щоб використовувати нове поле введення тексту на екрані температури\n\n# Завдання:\n\n-   **У режимі конструктора:**\n    -   Вибери \"temperatureScreen\" з розкривного меню екрана\n    -   Перетягни елемент \"поле для введення тексту\" на екран\n    -   Встанови для нього ідентифікатор“temperatureInput”\n-   **У режимі кодування:**\n    -   Знайди рядок у своєму коді, який відповідає ознаці температури [(Де саме?)](#triggercallout=temp)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в порожню область праворуч від знака рівності\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни  стрілку розкривного меню та обери \"temperatureInput\"\n        -   ::: details [**(Show Me How)**]\n            <img src=\"https://images.code.org/5c7da11d893163a8147ac60bed109cc1-image-1625593652777.png\" width=\"450px\" />\n            :::\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Застосунок ще не працюватиме працювати коректно, і у твоєму коді будуть деякі помилки, які ми виправимо на наступних рівнях",
        "ml-use model card-example3D-2021": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://images.code.org/e875c9bc4d7af38c9d61ee69a349d741-image-1625085583715.png)\n\n<br/>\n\nКартка моделі\n\n<br/>\n\n![expandable](https://cdn.glitch.com/863b2e2c-c3b7-405e-8ece-1585b4e83e88%2Fdriver-ToD.gif?v=1625592961686)\n\n<br />\n\nНатисни тут, шоб розгорнути\n\n</div>\n\n# Оновлення функції \"Час доби\"\n\nТепер оновимо те, як наш застосунок збирає дані для функції \"Час доби\". Нам потрібно буде змінити як елементи дизайну, так і код.\n\n# Кроки:\n\n-   **Дизайн:** Додати розкривний список на екран timeOfDay для збору даних\n-   **Код:** Оновити код, щоб використовувати новий розкривний список на екрані timeOfDay \n\n# Завдання:\n\n-   **У режимі конструктора:**\n    -   Обери _timeOfDayScreen_ з випадного списку екранів\n    -   Перетягни елемент розкривного списку на екран\n    -   Признач йому ідентифікатор _timeOfDayDropdown_\n    -   Подивися на картку моделі, щоб побачити різні значення для ознаки \"Час доби\".\n    -   У властивості Налаштування введи кожне значення з нового рядка. Переконайся, що кожне налаштування точно відповідає тому, що написано на картці моделі - правопис і великі літери мають значення!!\n-   **У режимі кодування:**\n    -   Знайди рядок коду, який відповідає функції timeOfDay [(Де саме?)](#triggercallout=time)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в порожню область праворуч від знаку рівності\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни на стрілку розкривного списку та обери \"timeOfDayDropdown\"\n        -   ::: докладно [**(Як саме?)**]\n            <img src=\"https://images.code.org/348aa7913716c73363a0aeee84fe7af9-image-1625593804269.png\" width=\"450px\">\n            :::\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Тепер застосунок має працювати як треба!  Ми перевіримо, чи все працює правильно на наступному рівні!",
        "ml-use model card-example3D_2022": "<div markdown=\"1\" style=\"float: right; margin: 20px;\">\n\n![expandable](https://images.code.org/e875c9bc4d7af38c9d61ee69a349d741-image-1625085583715.png)\n\n<br/>\n\nКартка моделі\n\n<br/>\n\n![expandable](https://images.code.org/0a8083ac45d9cd3546d805a3cdec4204-image-1652289335231.gif)\n\n<br />\n\nНатисни тут, шоб розгорнути\n\n</div>\n\n# Оновлення функції \"Час доби\"\n\nТепер оновимо те, як наш застосунок збирає дані для функції \"Час доби\". Нам потрібно буде змінити як елементи дизайну, так і код.\n\n# Кроки:\n\n-   **Дизайн:** Додати розкривний список на екран timeOfDay для збору даних\n-   **Код:** Оновити код, щоб використовувати новий розкривний список на екрані timeOfDay \n\n# Завдання:\n\n-   **У режимі конструктора:**\n    -   Обери _timeOfDayScreen_ з випадного списку екранів\n    -   Перетягни елемент розкривного списку на екран\n    -   Признач йому ідентифікатор _timeOfDayDropdown_\n    -   Подивися на картку моделі, щоб побачити різні значення для ознаки \"Час доби\".\n    -   У властивості Налаштування введи кожне значення з нового рядка. Переконайся, що кожне налаштування точно відповідає тому, що написано на картці моделі - правопис і великі літери мають значення!!\n-   **У режимі кодування:**\n    -   Знайди рядок коду, який відповідає функції timeOfDay [(Де саме?)](#triggercallout=time)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в порожню область праворуч від знаку рівності\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни на стрілку розкривного списку та обери \"timeOfDayDropdown\"\n        -   ::: докладно [**(Як саме?)**]\n            <img src=\"https://images.code.org/348aa7913716c73363a0aeee84fe7af9-image-1625593804269.png\" width=\"450px\">\n            :::\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Тепер застосунок має працювати як треба!  Ми перевіримо, чи все працює правильно на наступному рівні!",
        "ml-use model card-example3E-2021": "# Тестуємо застосунок!\n\nТепер, коли ми додали нові функції, протестуймо застосунок, щоб переконатися, що він працює.\n\n# Завдання:\n\n-   Запусти застосунок кілька разів із різними дорожніми умовами. Упевнись, що застосунок все ще працює правильно\n-   Якщо застосунок працює не так, як очікувалося, повернися на попередні рівні та ще раз перевір виконані кроки. Деякі типові місця для налагодження\n    -   Перевірка на наявність помилок, особливо в ідентифікаторах елементів\n    -   Перевір, чи розкривне меню для Часу доби відповідає інформації на картці моделі\n    -   Перевір, чи блоки [\\`getText()\\`(#fff176)](/docs/applab/getText/) мають правильні ідентифікатори\n\nЯкщо застосунок працює коректно, перейди на наступний рівень, де ти зможеш продовжити налаштування свого застосунку",
        "ml-use model card-example3E_2022": "# Тестуємо застосунок!\n\nТепер, коли ми додали нові функції, протестуймо застосунок, щоб переконатися, що він працює.\n\n# Завдання:\n\n-   Запусти застосунок кілька разів із різними дорожніми умовами. Упевнись, що застосунок все ще працює правильно\n-   Якщо застосунок працює не так, як очікувалося, повернися на попередні рівні та ще раз перевір виконані кроки. Деякі типові місця для налагодження\n    -   Перевірка на наявність помилок, особливо в ідентифікаторах елементів\n    -   Перевір, чи розкривне меню для Часу доби відповідає інформації на картці моделі\n    -   Перевір, чи блоки [\\`getText()\\`(#fff176)](/docs/applab/getText/) мають правильні ідентифікатори\n\nЯкщо застосунок працює коректно, перейди на наступний рівень, де ти зможеш продовжити налаштування свого застосунку",
        "ml-use model card-example3_EditA-2021": "# Видалення елементів за замовчуванням\n\nДля того, щоб створити оновлений застосунок, нам потрібно видалити елементи за замовчуванням, які були згенеровані під час імпорту моделі. Почнемо з видалення цих елементів і зміни екрана за замовчуванням. \n\n# Завдання:\n\n-   У режимі конструктора клацни по кожному елементу на \"screen1\", а потім натисни червону кнопку \"Видалити. <img src=\"https://images.code.org/ba722e6a91e46201912adfa383655aa6-image-1617075862276.png\" width=\"75px\"> \n\n-   Обери “homeScreen” із розкривного меню. \n    -   ::: details [**(Як саме?)**]\n        <img src=\"https://images.code.org/6efae94d8544480fb20b59e64ec80a8a-image-1616989901816.png\" width=\"200px\" />\n        :::\n\n-   Обери екран, а потім натисни кнопку \"Зробити за замовчуванням\". <img src=\"https://images.code.org/dbad207518f8222d76ae22d99edc710f-image-1616989970154.png\" width=\"100px\">\n\n-   Запусти програму і перевір, чи завантажується екран привітання. Також повинні натискатися всі кнопки \"Далі\" для переходу на наступні екрани. Ти не зможеш побачити фінальний екран, поки ми не відкоригуємо код нашого застосунку на наступних рівнях.\n\nКоли завершиш, перейди до наступного рівня",
        "ml-use model card-example3_EditA_2022": "# Видалення елементів за замовчуванням\n\nДля того, щоб створити оновлений застосунок, нам потрібно видалити елементи за замовчуванням, які були згенеровані під час імпорту моделі. Почнемо з видалення цих елементів і зміни екрана за замовчуванням. \n\n# Завдання:\n\n-   У режимі конструктора клацни по кожному елементу на \"screen1\", а потім натисни червону кнопку \"Видалити. <img src=\"https://images.code.org/ba722e6a91e46201912adfa383655aa6-image-1617075862276.png\" width=\"75px\"> \n\n-   Обери “homeScreen” із розкривного меню. \n    -   ::: details [**(Як саме?)**]\n        <img src=\"https://images.code.org/6efae94d8544480fb20b59e64ec80a8a-image-1616989901816.png\" width=\"200px\" />\n        :::\n\n-   Обери екран, а потім натисни кнопку \"Зробити за замовчуванням\". <img src=\"https://images.code.org/dbad207518f8222d76ae22d99edc710f-image-1616989970154.png\" width=\"100px\">\n\n-   Запусти програму і перевір, чи завантажується екран привітання. Також повинні натискатися всі кнопки \"Далі\" для переходу на наступні екрани. Ти не зможеш побачити фінальний екран, поки ми не відкоригуємо код нашого застосунку на наступних рівнях.\n\nКоли завершиш, перейди до наступного рівня",
        "ml-use model card-example3_EditB-2021": "# Оновлення коду: кількість автомобілів\n\nОновимо наш код, який визначає, як наш застосунок збирає дані з функції \"Автомобілі\". Нам потрібно оновити код, щоб він відповідав нашому новому розкривному списку на \"carsScreen\".\n\n# Кроки:\n\n-   **Код:** Онови код, щоб використовувати нове введення тексту на екрані автомобілів\n\n# Завдання:\n\n-   **У режимі кодування:**\n    -   Знайди рядок свого коду, який відповідає функції Автомобілі [(Де саме?)](#triggercallout=cars)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в останню порожню частину блоку [\\`addPair()\\`(#BB77C7)](/docs/applab/addPair/)\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни стрілку з розкривним меню та обери \"carsInput\"\n        -   ::: details [**(Show Me How)**]\n            <img src=\"https://images.code.org/9a9b9430997338038d89ee01af78a6d8-image-1625593317492.png\" width=\"450px\" />\n            :::\n\nМи не зможемо протестувати наш код до самого завершення, тому не забудь ретельно перевірити його.\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Програма ще не працюватиме коректно, і у твоєму коді будуть помилки, які ми виправимо в наступних рівнях",
        "ml-use model card-example3_EditB_2022": "# Оновлення коду: кількість автомобілів\n\nОновимо наш код, який визначає, як наш застосунок збирає дані з функції \"Автомобілі\". Нам потрібно оновити код, щоб він відповідав нашому новому розкривному списку на \"carsScreen\".\n\n# Кроки:\n\n-   **Код:** Онови код, щоб використовувати нове введення тексту на екрані автомобілів\n\n# Завдання:\n\n-   **У режимі кодування:**\n    -   Знайди рядок свого коду, який відповідає функції Автомобілі [(Де саме?)](#triggercallout=cars)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в останню порожню частину блоку [\\`addPair()\\`(#BB77C7)](/docs/applab/addPair/)\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни стрілку з розкривним меню та обери \"carsInput\"\n        -   ::: details [**(Show Me How)**]\n            <img src=\"https://images.code.org/9a9b9430997338038d89ee01af78a6d8-image-1625593317492.png\" width=\"450px\" />\n            :::\n\nМи не зможемо протестувати наш код до самого завершення, тому не забудь ретельно перевірити його.\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Програма ще не працюватиме коректно, і у твоєму коді будуть помилки, які ми виправимо в наступних рівнях",
        "ml-use model card-example3_EditC-2021": "# Оновлення коду: Погода\n\nСпробуймо оновити наш код, який визначає, як наш застосунок збирає дані з функції \"Погода\". Нам потрібно оновити код, щоб він відповідав нашому новому розкривному списку на \"weatherScreen\".\n\n# Кроки:\n\n-   **Код:** Онови код, щоб використовувати новий розкривний список на екрані погоди\n\n# Завдання\n\n-   **У режимі кодування:**\n    -   Знайди рядок у своєму коді, який відповідає функції \"Погода\" [(Де саме?)](#triggercallout=weather)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в порожню область праворуч від знаку рівності\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни стрілку зі спадним списком та обери \"weatherDropdown\"\n        -   ::: details [**(Як саме?)**]\n            <img src=\"https://images.code.org/4b4a281a2057e12d31f209d1e38c7871-image-1625593502099.png\" width=\"450px\" />\n            :::\n\nМи не зможемо перевірити наш код доки не завершимо, тому не забудь ретельно перевірити його.\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Застосунок ще не працюватиме коректно, і у твоєму коді будуть деякі помилки, які ми виправимо на наступних рівнях",
        "ml-use model card-example3_EditC_2022": "# Оновлення коду: Погода\n\nСпробуймо оновити наш код, який визначає, як наш застосунок збирає дані з функції \"Погода\". Нам потрібно оновити код, щоб він відповідав нашому новому розкривному списку на \"weatherScreen\".\n\n# Кроки:\n\n-   **Код:** Онови код, щоб використовувати новий розкривний список на екрані погоди\n\n# Завдання\n\n-   **У режимі кодування:**\n    -   Знайди рядок у своєму коді, який відповідає функції \"Погода\" [(Де саме?)](#triggercallout=weather)\n    -   Перетягни блок [\\`getText()\\`(#fff176)](/docs/applab/getText/) і помісти його в порожню область праворуч від знаку рівності\n    -   У блоці [\\`getText()\\`(#fff176)](/docs/applab/getText/) натисни стрілку зі спадним списком та обери \"weatherDropdown\"\n        -   ::: details [**(Як саме?)**]\n            <img src=\"https://images.code.org/4b4a281a2057e12d31f209d1e38c7871-image-1625593502099.png\" width=\"450px\" />\n            :::\n\nМи не зможемо перевірити наш код доки не завершимо, тому не забудь ретельно перевірити його.\n\nКоли завершиш, можеш перейти до наступного рівня, натиснувши кнопку \"Запустити\", а потім кнопку \"Завершити\". Застосунок ще не працюватиме коректно, і у твоєму коді будуть деякі помилки, які ми виправимо на наступних рівнях",
        "most-excited-for-in-this-class": "Що зацікавило Вас у цьому курсі найбільше?",
        "most-excited-for-in-this-class_2022": "Що зацікавило Вас у цьому курсі найбільше?",
        "outbreak1": "# Створення симуляції\n\n<img src=\"https://images.code.org/fa359041f9e1a3ed92d72f6b0b24a8a9-image-1602095737300.gif\" style=\"float:right; padding-left:10px\">\n\n<div style=\"display:inline\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Сьогоді ви створите код, який запустить вашу власну симуляцію спалаху вірусу в Монстро-місті._\n\n_По-перше, ми створимо Монстро-місто, з спрайтами, які представляють монстрів. Напишіть свій код у_ **робочій області,** _тоді натисніть_ **Запустити** _щоб переглянути свою симуляцію. Якщо потрібна допомога, клацніть_ **лампочку** _для підказки._\n\n</div>\n\n## Робити наступне\n\n1.  Нехай спрайти представляють 10 здорових монстрів [][0] та 1 хворого монстра [][1]. **Спрайти** це персонажі на екрані, які можуть рухатись, мінятись та взаємодіяти з іншими.\n\n2.  Встановіть розмір спрайтів `50`, і нехай всі вони починають `бродити`.\n\n3.  Натисніть `ЗАПУСТИТИ`.\n\nВи б мали побачити спрайтів, які рухаються довкола, як на анімації праворуч.",
        "outbreak2": "# Програмування подій\n\n<div style=\"display:inline-block\">\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left\">\nО, ні! Один з монстрів підхопив вірус! Коли здоровий монстр торкається хворого, він теж захворіває._ \n\n</div>\n\nЩоб щось трапилось, коли два спрайти торкаються, використаємо блок \"події\":\n\n[blockly block][0]\n\nЗверніть увагу, його можна відкрити блакитним плюсиком ліворуч. \n\n## Виконати це\n\nВикористайте блок `предмет` всередині, щоб змінити **здорових монстрів**  [][1] на **хворих монстрів** [][2] коли вони торкаються.",
        "outbreak3": "<img src=\"https://images.code.org/a157874032e8f71cf921ba32f082e5b4-image-1602518140122.2020-10-12 11_55_12.gif\" style=\"float:right; padding:10px\">\n\n# Зупиняємо спалах масками\n\n\\_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">Одним із способів сповільнити спалах є носіння маски. Монстри з масками не зможуть заразитись чи передати вірус іншим. Щоб щось трапилось із монстром при клацанні на ньому, використайте новий тип блоку \\_ \"події\". \\_\n\n## Виконуйте наступне\n\n1.  Використайте блок `коли клацнути` з блоком `змінити костюм` щоб одягнути на здорового монстра маску, коли по ньому клацнули. Повторіть для хворих монстрів.\n\n2.  Натисніть `Запустити` і починайте швидко клацати по монстрах. Намагайтесь зупинити чи сповільнити спалах, одягнувши маски на всіх монстрів.",
        "outbreak4": "<img src=\"https://images.code.org/d228e4b5feb602025d5f7b5145dbece9-image-1603143852671.gif\" width=\"250\" style=\"float:right; padding-left:10px\">\n\n# Більше монстрів\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">У Монстро-місто приїздять нові монстри! Що це означатиме для спалаху? Використаємо симуляцію, щоб зробити прогноз._ \n\n## Виконайте наступне\n\n1.  Змініть кількістьспрайтів монстрів, які ви створюєте, редагуючи цей блок: \n    [blockly block][0]\n\n2.  Змініть розмір спрайтів, редагуючи цей блок: \n    [blockly block][1]\n\n3.  Запустіть симуляцію 3-5 разів.\n\n_Щось змінилось?_",
        "outbreak5": "# Одужання\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Хороші новини: Монстри можуть одужувати самі по собі! Хворі монстри одужують і автоматично стають здоровими, коли проходить певний час. Додамо до симуляції код, який дозволить всім хворим монстрам поступово вилікуватись від вірусу._\n\n</div>\n\nУ нас тепер є спеціальна поведінка [blockly block][0] . Можете додати її до свого коду після того, як монстр захворіває.\n\n## Виконайте наступнн\n\n1.  У події `коли торкається` додайте код, щоб спрайт розпочав поведінку `одужування`.\n    [blockly block][1]",
        "outbreak6": "# Ймовірність\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Зараз для монстрів не існує можливості захворіти, коли вони у масці. Звучить класно, але все, насправді, не так просто. Потрібно додати \"шанс\" (чи ймовірність) поширення вірусу щоразу при торканні двох монстрів. Ми можемо промоделювати шанс зараження вірусом з цих нотаток._\n\n</div>\n\n<details open><summary><em><strong>Нотатки:</strong>Як маски впливають на спалах у Монстро-місті</em></summary>\n\n<div class=\"container\" style=\"background-color:indianred; text-align:center; border-style: solid; width: 250px\">\n<img src=\"https://images.code.org/01291b1e958448f65abb46b0d135b916-image-1603206161098.png\" style=\"width:55%\">\n\n<div class=\"container\" style=\"background-color:white; text-align:center; border-style: solid; width: 220px\">\n<br>\n\n_Переваги масок_\n\n| Здорові | Хворі |   Ймовірність   |  %  |\n| :-----: | :---: | :-------------: | :-: |\n|  [][6]  | [][7] | **Дуже висока** | 90% |\n|  [][4]  | [][5] |    **Висока**   | 75% |\n|  [][2]  | [][3] |    **Низька**   | 25% |\n|  [][0]  | [][1] | **Дуже низька** | 10% |\n\n<br>\n</div>\n<br>\n</div>\n\n</details>\n\n## Виконайте наступне\n\n1.  Додайте цей блок **логіки** у події `коли торкається` і призначте їй дуже високий шанс:\n\n[blockly block][8]\n\n2.  Додайте ще кілька подій, які включають монстрів у масках, і надайте їм різні відсотки ймовірності. Клацніть лампочку для підказки, якщо ви не впевнені, які події потрібні.\n\n3.  Клацніть **Завершити** коли готові рухатись далі.",
        "outbreak7": "# Вакцини\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Вакцини можуть захистити монстрів від вірусів. Ці монстри взагалі не захворіють!_\n\n</div>\n\nДалі, потрібно створити новий костюм спрайту, щоб показати монстра, який отримав вакцину.\n\n<details><summary><strong>Дізнатись, як змінити костюм спрайту.</strong></summary>\n\n|                                                | Щоб змінити костюм:                                                                                                                                                                                                                                  |\n| ---------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [expandable][0] <br/> (Клацніть для перегляду) | 1. Перейдіть до вкладки Костюми у верхньому лівому куті. <br/> 2. Продублюйте один з існуючих костюмів. <br/> 3. Оберіть первинний колір для малювання.  <br/> 4. Клацніть інструмент Заливки, а тоді клацніть тіло монстра, щоб перефарбувати його. |\n\n</details>\n\nКоли новий костюм готовий, знайдіть спосіб додати його у свою програму. Наприклад, можна змінювати монстра в масці на вакцинованого монстра, коли по ньому клацнути.",
        "outbreak8": "# Поширте своє повідомлення!\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n_Ви можете поділитись своїм творінням - і своїм повідомленням - з усім світом! Чому ви навчились у цій вправі? Що, ви сподіваєтесь, дізнаються інші?_\n\n</div>\n\nБлок [blockly block][0] показує на екрані текст, поки працює ваша симуляція. Використайте його, щоб розповісти користувачеві, як працює симуляція, або щоб передати повідомлення.\n\nОсь кілька прикладів:\n\n[blockly block][1]\n\n[blockly block][2]",
        "outbreak_freeplay": "# Вільна гра\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n*Чудова робота! Ви дуже допомогли всім мешканцям Монстро-міста. Сподіваємось, ви поділитесь тим, що дізнались, з іншими.*\n\n</div>\n\nВи завершили підручник! Внесіть будь-які зміни чи вдосконалення до свого проекту. Натисніть кнопку \"Поділитись\" вгорі сторінки, щоб надіслати проект своїм друзям чи рідним. Набір інструментів був значно розширен.",
        "outbreak_freeplay_basic": "# Вільна гра\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" style=\"float:left; padding-right:10px\">\n\n*Чудова робота! Ви дуже допомогли всім жителям Монстро-міста. Сподіваємось, ви поділитесь тим, що дізналися, з іншими. * \n\n</div>\n\nВи закінчили підручник! Можете внести будь-які зміни або вдосконалення у свій проект. Натисніть кнопку \"Поділитися\" у верхній частині сторінки, щоб надіслати свій проект друзям і родичам. ",
        "poetry_modal_function_editor": "Це рівень «Поезія», що включає категорію «ПРОЦЕДУРИ» з автоматичним заповненням і використовує редактор модальних функцій.",
        "poetry_no_modal_function_editor": "Це рівень «Поезія», що включає категорію «ПРОЦЕДУРИ» з автоматичним заповненням і не має редактора модальних функцій.",
        "ramp_artist_loops1_2021": "Який чудовий день!  \n\nДопоможи Художнику накрити квіти перед зимою, пересунувшись на 60 пікселів вперед.",
        "ramp_artist_loops2_2021": "Додай трохи краси, повторивши цей крок п'ять разів, змінюючи колір на випадковий після кожного руху.",
        "ramp_artist_loops3_2021": "Намалюй кольорову лінію ще 5 разів, цього разу використовуючи цикл 'повторити'.",
        "ramp_artist_loops4_2021": "Ти можеш створити цю зірку, повторюючи послідовність блоків \"рухатись вперед\" і \"повернути праворуч на 144 градуси\".",
        "ramp_artist_loops5_2021": "Цикли дійсно полегшують написання коду!\n\nВикористовуй цикли, щоб намалювати ці сходи.\n\n-   Кожна сходинка має довжину 50 пікселів і висоту 50 пікселів\n-   Тобі потрібно буде повертати на 90 градусів у кожному напрямку",
        "ramp_artist_loops6_2021": "Ці сходи набагато більші, але для них потрібно така ж кількість кодів, як і для попереднього завдання!\n\nВиправ цей цикл, щоб завершити завдання.",
        "ramp_artist_loops6v1_2021": "Ці сходи великі, але вони займають лише кілька рядків коду, якщо використовувати цикл!\n\nВикористовуй цикл, щоб завершити завдання.",
        "ramp_artist_loops7_2021": "Знайди закономірність та скороти цей код за допомогою циклів!",
        "ramp_artist_loops8_2021": "**Завдання:** Знайди шаблон та скороти цей код за допомогою циклів.",
        "ramp_artist_loops9_2021": "Щоб розв'язати цю задачку, намалюй квадрат зі стороною 200 пікселів.",
        "simconfig_2021": "# Змінюй та прогнозуй\n\nВибери одну зі змінних, які контролюють цю модель, зміни її та спрогнозуй, як це вплине на результат.\n\nПісля того, як ти запишеш свій прогноз, запусти модель 5 разів та запиши свої висновки. Чи був твій прогноз точним?",
        "simcustom_-2022-2": "# Налаштування\n\nОсь ще одна версія моделі. Спробуй внести певні зміни до костюмів спрайтів або коду нижче. Насолоджуйся налаштуванням власної моделі!",
        "simcustom_2021": "# Налаштування\n\nОсь ще одна версія моделі. Спробуй внести певні зміни до костюмів спрайтів або коду нижче. Насолоджуйся налаштуванням власної моделі!",
        "simstarter_2021": "# Збір даних\n\nЗапусти цю модель 5 разів. Щоразу записуй дані за допомогою інструкції до завдання зі Збору даних:\n\n-   Скільки яблук зібрав слон?\n-   Скільки яблук зібрав бегемот?\n-   Скільки часу знадобилося, щоб зібрати всі яблука?"
      }
    }
  }
}