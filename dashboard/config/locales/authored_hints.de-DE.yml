---
de-DE:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Wenn du den Codeblock "Gehe vorwärts um 100 Pixel" benutzt,
          werde ich automatisch eine Linie zeichnen.
        2-3_Artist_1_new_b: Hast du Probleme um die Ecke zu gehen? Benutze den `nach
          rechts drehen um 90 Grad`-Baustein.
      2-3 Artist 11:
        2-3_Artist_11_a: 'Hast du Probleme mit den Winkeln? Du musst 360 Grad in 8
          Drehungen machen. Wie viel ist 360/8? '
      2-3 Artist 12:
        2-3_Artist_12_a: Ein Kreis hat 360 Grad. Wenn sich der Künstler also mit jedem
          Schleifendurchlauf einen Grad dreht, wird er die Schleife 360 mal durchlaufen
          müssen.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Der Künstler scheint nicht in die richtige Richtung zu
          zeigen. Kannst du ihn drehen bevor er die Linie zeichnet?
      2-3 Artist 3new:
        2-3_Artist_3new_a: Was ergibt 100-70? Basierend auf dieses Problem der Handlung,
          ist das die Höhenangabe die der Hut erfüllen muss!
        2-3_Artist_3new_b: Der Künstler scheint nicht in die richtige Richtung zu
          zeigen. Kannst du ihn drehen bevor er die Linie zeichnet?
      2-3 Artist 4:
        2-3_Artist_4_a: Um das Haus zu vollenden, müssen wir lediglich ein Quadrat
          zeichnen!
      2-3 Artist 6:
        2-3_Artist_6_a: 'Um diese kleinen Winkel zu machen, musst du jedes Mal _weiter_
          drehen, wie du es mit dem Quadrat getan hast.   '
        2-3_Artist_6_b: Weil ich schon nach rechts zeige, ist es wohl am einfachsten
          mit Vorwärtsbewegen anzufangen und dann Linksdrehungen zu machen um das
          Dreieck zu erstellen.
        2-3_Artist_6_c: Jede Seite des Dreiecks ist die gleiche Länge wie jede Seite
          des Quadrates... 100 Pixel!
      2-3 Artist 7:
        2-3_Artist_7_a: Der einfachste Weg, um diese Aufgabe zu lösen ist, das erste
          Quadrat zu zeichnen und danach mit dem Künstler nach unten zeigend das zweite
          Quadrat zu beginnen.
      2-3 Artist 8:
        2-3_Artist_8_a: Wenn man 200 halbiert, wie viele Pixel breit muss jedes Quadrat
          dann sein?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Diese Raute ist einfach nur ein gedrehter Quader
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: Denke daran, dass das Bedienfeld 10 Pixel _breiter_
          werden soll... also stelle sicher, dass **add** 10 zu jeder Nummer hinzugefügt
          wird, die du änderst.
        2-3_Artist_Debugging_10_b: |-
          **Die Versuch-und-Irrtum-Methode ist hier völlig Ok!**
          Fang an, eine einzelne Zahl zu ändern.
          Welche Nummern machen was?
          Wenn du dich zu sehr verirrst, drück einfach "Neu starten" und dein Code wird zurückgesetzt.
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Tipp: Jedes Schnurrhaar ist 75 Pixel lang.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Eine der Drehungen ist 15 Grad zu klein.
        2-3_Artist_Debugging_3_b: Wenn das Programm zu schnell läuft um zu sehen,
          was passiert, versuchen Sie es mit dem Schieberegler zu verlangsamen.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Was passiert, wenn sich der Künstler bewegt oder
          rückwärts springt, nachdem er die erste Linie gezogen hat?
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          Wie oft hat sich meine Form wiederholt?

          Wie oft _sollte_ die Form wiederholt werden?

          Wo kann man das im Programm ändern?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: Der Zeichner muss 60 Grad weiter nach links drehen,
          bevor er mit dem Zeichnen beginnt!
        2-3_Artist_Debugging_9_b: Du musst keinen weiteren Baustein hinzufügen, um
          die volle Drehung zu erhalten, sondern nur 60 Grad zum Baustein`drehe links`,
          der bereits vorhanden ist hinzufügen!
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Du musst nicht nur die Anzahl und Länge der Seiten
          innerhalb der Funktion ändern, sondern auch den Winkel, den der Zeichner
          zwischen den Seiten dreht.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Führe den Code zuerst aus um zu schauen, was hinzugefügt
          werden muss.
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: Der Künstler muss 120 Grad zwischen jedem Quadrat
          drehen, um dieses Design zu vollenden.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: |-
          Denke daran, dass der Code aus dem letzten Puzzle war:

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">8</title>
                  <statement name="DO">
                    <block type="draw_colour" inline="true">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">turnRight</title>
                          <title name="VALUE" config="45,60,90,120,180">45</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">50</title>
                              <next>
                                <block type="draw_turn_by_constant_dropdown">
                                  <title name="DIR">turnLeft</title>
                                  <title name="VALUE" config="45,60,90,120,180">90</title>
                                  <next>
                                    <block type="draw_move_by_constant">
                                      <title name="DIR">moveForward</title>
                                      <title name="VALUE">50</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Deine neue Drehung sollte am **Ende** des Codes
          innerhalb der Schleife stattfinden.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Bevor du mit dem Diamanten beginnst muss sich der
          Zeichner um 60 Grad nach links drehen, um auf den richtigen Weg zu kommen.
        2-3_Artist Loops_New_12_b: Nachdem der Zeichner 100 Pixel vorwärts gegangen
          ist, muss er 120 Grad nach rechts drehen, um die scharfe Ecke zu machen.
        2-3_Artist Loops_New_12_c: Der Zeichner muss nur 60 Grad nach rechts drehen,
          um eine stumpfe Ecke zu erzeugen.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: "Am Ende jedes Diamanten befindet sich der Zeichner
          bereits in der richtigen Richtung, um mit dem nächsten zu beginnen.  \n\nAus
          diesem Grund müssen wir keinen zusätzlichen `Drehe links um` Baustein hinzufügen,
          bevor wir wieder anfangen."
        2-3_Artist_Loops_New_13_b: "Um jeden Diamanten herzustellen, muss der Zeichner:
          \  \n\n-   sich bewegen\n-   rechts drehen um 120 Grad\n-   sich bewegen\n-
          \  rechts drehen um 60 Grad  \n\nDann lass ihn alles noch einmal machen!"
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: Der Zeichner muss 45 Grad nach rechts drehen, bevor
          er mit dem Zeichnen beginnt.
        2-3_Artist_Loops_New_9_b: Dieses V ist eigentlich nur ein halbes Quadrat.
          Wie könnte der Code ausschauen, der benötigt wird um ein halbes Quadrat
          zu zeichnen?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Beachte alle grauen Blöcke in die Schleife einzuhängen.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: |-
          Brauchst du Hilfe mit den Winkeln?\
          **360/12 = 30**
        2-3_Artist_Nested_Loops_3_b: Denke daran den gesamten Grauen Code und Ihren
          Kurvenblock in eine Schleife unterzubringen.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: |-
          Brauchst du Hilfe mit den Winkeln?\
          **360/12 = 30**
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: |-
          Wie weit solltest du dich in jedem Schleifendurchlauf drehen?

          Was ist 360/10?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          Brauchst Du Hilfe bei der Suche nach dem richtigen Winkel?

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Hattest du Schwierigkeiten, herauszufinden, wie
          man die Bausteine runterbekommt?  Versuch mal, die rote Blume genauso zu
          behandeln wie eine lila Blume!
        2-3_Bee_Conditionals_14_b: Wenn die rote Blume lila wäre, könntest du herausfinden,
          wie man eine zusätzliche `Repeat`-Schleife verwendet, um den Code zu reduzieren?
        2-3_Bee_Conditionals_14_c: |-
          Versuche dies in zwei getrennte Teile aufzuteilen:

          ![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)

          1.  Sammle Nektar 3 mal.
              -   5 mal vorwärts bewegen
              -   Überprüfe, ob Nektar vorhanden ist, wenn ja: sammle ihn.
              -   Links abbiegen

          2.  Mache Honig
              -   Einmal vorwärts bewegen
              -   Mache zweimal Honig
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Denke daran: Violette Blüten haben entweder 0
          oder 1 Nektar und sie können sich bei jedem Start des Programmes ändern.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: Der Code ist am kürzesten, wenn du bei jedem Schritt
          eine Schleife verwendest, eine weitere Schleife, um Nektar zu sammeln, und
          eine weitere, um Honig herzustellen.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Denke daran: Violette Blüten ändern zwischen 0
          und 1 Nektar, wenn du das Programm ausführst!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Sobald du den falschen Block gefunden und repariert
          hast, siehst du irgendwelche Muster, die mit einer `Repeat`-Schleife einfacher
          gemacht werden könnten?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Sobald du den falschen Block gefunden und repariert
          hast, siehst du irgendwelche Muster, die mit einer `Repeat`-Schleife einfacher
          gemacht werden könnten?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Macht die Biene etwas das keinen Sinn macht? Was passiert
          wenn du diesen Baustein abänderst?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Du musst keine Schleife mit einer Funktion verwenden.
          Versuche die Bewegung mittels der Funktion, dann einzeln bewegen und die
          Funktion erneut zu verwenden.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Du musst keine Schleife mit einer Funktion verwenden.
          Versuche die Bewegung mittels der Funktion, dann einzeln bewegen und die
          Funktion erneut zu verwenden.
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: Du solltest mit vier Bausteinen innerhalb deiner Schleife
          enden.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: Du solltest mit 6 Bausteinen innerhalb deiner Schleife
          enden.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Du benötigst zwei verschiedene "Wiederholen" Schleifen,
          eine nach der anderen.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: Du solltest mit fünf Bausteinen innerhalb deiner Schleife
          enden.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: Die erste Aktion wird eher eine Drehung als eine Fortbewegung
          sein.
        2-3_Bee_Loops_4A_b: Der letzte Teil des Programms kann beendet werden, indem
          am Ende des Programms außerhalb der Schleife Code geschrieben wird.
        2-3_Bee_Loops_4A_c: Wenn du die Wiederholung noch nicht erkennen kannst, versuche
          sie zuerst auf dem langen Weg zu programmieren, dann schaue, was du am Ende
          zu einer `wiederhole`-Schleife kombinieren kannst.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Wenn du die Bausteine nicht sofort erkennen kannst, die
          du in die `wiederhole`-Schleife legen kannst, fang damit an, jede Bewegung
          zu programmieren und nach einem Muster zu suchen.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Wenn du nicht sagen kannst, was in die `wiederhole`-Schleife
          gehen soll, versuche, Bausteine einzeln herauszuziehen und zu sehen, ob
          du ein Muster finden kannst.
        2-3_Bee_Loops_6_b: Es sollte 6 Blöcke innerhalb deiner `wiederhole`-Schleife
          geben, wenn du fertig bist.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: Die erste Aktion wird eher eine Drehung als eine Fortbewegung
          sein.
        2-3_Bee_Loops_7_b: 'Wenn du dir die Schleife von Anfang an nicht ganz vorstellen
          kannst, versuche die Lösung auf dem langen Weg zu programmieren und suche
          dann nach einem Muster.  '
      2-3 Maze 1:
        2-3_Maze_1_a: Um einen "vorwärts bewegen" Baustein zu verwenden, ziehe diesen
          von der Werkzeugleiste in den Arbeitsbereich und verbinde ihn mit dem "Wenn
          Ausführen" Baustein.
      2-3 Maze 16:
        2-3_Maze_16_a: Wenn das Muster schwer zu erkennen ist, dann versuche zuerst
          alles zu programmieren und schaue, was sich immer wieder wiederholt, bevor
          du die Schleifen einsetzt.
        2-3_Maze_16_b: "Um viele Bausteine innerhalb einer Schleife zu platzieren,
          ziehe einfach eine Schleife in den Arbeitsbereich und ziehe dann alle Bausteine
          aus dem Startprogramm hinein.  \n\nVerbinde alles wieder mit dem `Wenn Ausführen`
          Baustein und schon kann es losgehen!"
      2-3 Maze 6:
        2-3_Maze_6_a: Es gibt zwei Möglichkeiten um dieses Puzzle zu lösen!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Wenn das Muster schwer zu erkennen ist, dann versuche
          zuerst alles zu programmieren und schaue, was sich immer wieder wiederholt,
          bevor du die Schleifen einsetzt.
        2-3_Maze_Loops_17_b: Wurde der Startcode gelöscht?  Klicke auf "Start over",
          um ihn zurückzubekommen!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Wenn das Muster schwer zu erkennen ist, dann versuche
          zuerst alles zu programmieren und schaue, was sich immer wieder wiederholt,
          bevor du die Schleifen einsetzt.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Wenn du festsitzt, versuche zuerst den Code ohne Schleifen
          auszuschreiben und nach Mustern zu suchen.
        2-3_Maze_Loops_19_b: Das Einfügen einer Wiederholungsschleife in eine andere
          kann helfen, die Anzahl der verwendeten Bausteine zu reduzieren.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Suche nach einem Treppenstufenmuster in diesem Labyrinth,
          um herauszufinden, wo eine Schleife verwendet werden kann.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Wenn du Schwierigkeiten hast, das Treppenstufenmuster
          zu finden, versuche, die blockierten Wege mit dem Finger abzudecken.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: In deiner Schleife, achte darauf dass der Künstler nach dem
          Zeichnen jeder Linie zurück springt und nach oben springt.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          Wenn das Blumenbeet 600 Pixel groß ist und zwei der Seiten 200 Pixel lang sind, siehst du hier worauf sich die kurzen Seiten summieren:

          **600 - 200 - 200 = 200**

          Das bedeutet, dass sich beide kurzen Seiten auf 200 Pixel summieren.

          **Was ist 200 / 2?**
        4-5_Artist_3_b: Wenn du nicht sehen kannst, wo die `wiederhole`-Schleife beginnt,
          probiere die gesamte Lösung aus und suche nach einem Muster.
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          Ein Kreis hat 360 Grad!

          So oft musst du diesen Block (um 1 Grad zu drehen) wiederholen damit der Kreis komplett ist!
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          Trial and Error ist eine großartige Methode, aber du kannst das Problem auch lösen, indem du den 90-Grad-Winkel drittelst.

          **90 / 3 = \_\_\_\_\_**
      4-5 Artist 7:
        4-5_Artist_7_a: 'Welcher Winkel ist der kleinste?  In welchem Winkel steht
          der Zeichner? '
      4-5 Artist 8:
        4-5_Artist_8_b: "Dieses Bild kann auf 2 Arten gemacht werden!  \n\n-   Zeichne
          zwei Rechtecke, die **120** lang und **160** hoch sind, mit einer überlappenden
          Seite.\n\n-   Zeichne ein Rechteck, das **240** lang und **160** hoch ist,
          und füge dann eine Linie in der Mitte hinzu."
      4-5 Artist 9:
        4-5_Artist_9_a: 'Wenn ein Dreieck ein Gleichseitiges ist, sind alle Seiten
          und alle Winkel gleich.  '
        4-5_Artist_9_b: Du musst drei Dreiecke gleicher Größe zeichnen. Vergiss nicht,
          nach jeder Position auf deine neue Position zu springen.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: Du musst nur das äußere Dreieck zeichnen, um dieses
          Rätsel zu lösen.
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Beachte, dass du, da die Quadrate 20 Pixel lang sind,
          20 Pixel springen musst, bevor du dein nächstes Quadrat beginnst.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_b: Wenn Dein Code zu unübersichtlich wird, kannst Du
          jederzeit auf "Neu starten" klicken und es noch einmal versuchen!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: "Wenn der Künstler nun jeden Diamanten beendet hat,
          schaut er in die entgegengesetzte Richtung, von wo aus er den nächsten beginnen
          muss.  \n\nWie viele Grad muss er gedreht werden, um sich selbst auszurichten?"
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Du kannst dieses Rätsel nur mit den Bausteinen auf
          der Arbeitsfläche lösen.  In welcher Reihenfolge müssen diese eingebaut
          werden?
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: Versuche dieses Rätsel wie ein langes Rechteck
          zu behandeln, in dem sich die Biene vorwärts bewegen muss, und biege dann
          mehrmals nach links ab, um den Weg abzuschließen.
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          Wenn Du Schwierigkeiten dabei hast die Aufgabe mithilfe der Schleifen zu lösen, dann versuche es auf herkömmlichen Wege und suche dann nach sich wiederholenden Bausteinen.
          Um welche Teile kannst Du eine Schleife setzen, um den Code zu verkürzen?
      4-5 Maze 4:
        4-5_Maze_4_a: Wenn Du Schwierigkeiten dabei hast den "Wiederholen"-Baustein
          einzusetzen, dann versuche erst ohne zu programmieren und suche dann nach
          sich wiederholenden Bausteinen.
      4-5 Maze 5:
        4-5_Maze_5_a: Versuche den "Wiederholen"-Baustein immer dann einzusetzen,
          wenn Du mehr als zwei Schritte vorwärts gehen musst.
        4-5_Maze_5_b: Du kannst den "Wiederholen"-Baustein mehr als einmal in einer
          Aufgabe verwenden.
      4-5 Maze 6:
        4-5_Maze_6_a: |-
          Versuche den Weg mit dem Finger zu verfolgen.\
          Ist es der kürzeste Weg den Du gehen kannst?
      4-5 Maze 7:
        4-5_Maze_7_a: |-
          **Dein Code soll so kompakt wie möglich sein?**
          Suche nach sich wiederholenden Teilen in Deinem Code und setze diese in eine Schleife!
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          Vergiss nicht, nach der inneren Schleife eine Kurve zu machen.

          Du wirst 6 Dreiecke über 360 Grad zeichnen.

          **360 / 6 = ?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          Du wirst diese Form 6 Mal über 360 Grad wiederholen.

          **360 / 6 = ?**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: Jedes Element benötigt eine eigene `while`-Schleife.
      Course 4 Artist 12:
        Course_4_Artist_12_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat">
                      <title name="TIMES">6</title>
                      <statement name="DO">
                        <block type="controls_repeat">
                          <title name="TIMES">3</title>
                          <statement name="DO">
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">60</title>
                              <next>
                                <block type="draw_turn_by_constant">
                                  <title name="DIR">turnRight</title>
                                  <title name="VALUE">60</title>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="draw_move_by_constant">
                                  <title name="DIR">moveForward</title>
                                  <title name="VALUE">80</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">120</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Artist 6:
        Course_4_Artist_6_a: Es gibt 3 Dreiecke innerhalb der 360-Grad-Drehung...wie
          oft gehen 3 in 360?
      Course 4 Artist 8a:
        Course_4_Artist_8a: |-
          Brauchst du Hilfe, um herauszufinden, wie weit du dich wenden musst?

          Es gibt 3 Dreiecke innerhalb der 360-Grad-Drehung.

          Wie viele Male gehen 3 in 360?
      Course 4 Artist 9:
        Course_4_Artist_9_a: "Willst du wissen, wie viel du drehen musst? \n\nWas
          ist 360 geteilt durch 10?"
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Lösung:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops Challenge:
        Course_4_Artist_For_Loops_Challenge_a: Die größte Form hat 19 Seiten. Die
          kleinste hat nur zwei.
      Course 4 Artist For Loops inspire:
        Course_4_Artist_For_Loops_inspire_d: "**Lösung:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration:
        Course_4_Artist_Functions_Inspiration_c: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">14</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a square 20"></mutation>
                              <next>
                                <block type="jump_by_constant">
                                  <title name="DIR">jumpForward</title>
                                  <title name="VALUE">20</title>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">3</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="draw_turn_by_constant">
                              <title name="DIR">turnLeft</title>
                              <title name="VALUE">100</title>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            </xml>
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_colour" inline="true" id="draw-color">
                  <value name="COLOUR">
                    <block type="colour_picker">
                      <title name="COLOUR">#843179</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">sides</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">4</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">length</title>
                          <value name="VALUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">sides</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="variables_get">
                                              <title name="VAR">length</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">2</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnLeft</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">360</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 Bee Params 7:
        notice_pattern: 'Erkennst du ein Muster, wie sich die Anzahl der Nektare verändert? '
      Course 4 Playlab For Loops 5b:
        Course_4_Playlab_For_Loops_5b_a: Die Zeichen sind etwa 175 Pixel von der Mitte
          entfernt.
      Course 4 SCF 1:
        Course_4_SCF_1_a: Jedes Hexagon hat 40 Pixel lange Seiten.
        Course_4_SCF_1_c: "Bevor du die zweite Reihe von Sechsecken zeichnest, musst
          du dich um 60 Grad nach rechts drehen und 40 Pixel vorwärts springen.  \n\nWenn
          du dich an der richtigen vertikalen Position befindest, musst du deinen
          Künstler wieder zurückdrehen und 320 Pixel zurückspringen."
        Course_4_SCF_1_e: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a line of hexagons"></mutation>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down/forward"></mutation>
                          <next>
                            <block type="procedures_callnoreturn">
                            <mutation name="draw a line of hexagons"></mutation>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down/backward"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a hexagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">6</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/backward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">440</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">draw a line of hexagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw a hexagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">120</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn">
            <mutation></mutation>
              <title name="NAME">shift down/forward</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">60</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">60</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">320</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: Erinnere dich an deine Funktionen aus Level 16.
        Course_4_SCF_1a_b: "Betrachte diesen Weg als Deine Hauptroute:  \n\n![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)"
        Course_4_SCF_1a_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
              <next>
                <block type="variables_set" inline="false" uservisible="false">
                  <title name="VAR">left</title>
                  <value name="VALUE">
                    <block type="math_number" uservisible="false">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false" uservisible="false">
                      <title name="VAR">right</title>
                      <value name="VALUE">
                        <block type="math_number" uservisible="false">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">21</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                      <next>
                        <block type="maze_if">
                          <title name="DIR">isPathLeft</title>
                          <statement name="DO">
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="get nectar">
                              <arg name="dir"></arg>
                              <arg name="counter"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">left</title>
                                </block>
                              </value>
                              <value name="ARG1">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_if">
                                          <title name="DIR">isPathRight</title>
                                          <statement name="DO">
                                            <block type="procedures_callnoreturn" inline="false">
                                              <mutation name="get nectar">
                                              <arg name="dir"></arg>
                                              <arg name="counter"></arg>
                                              </mutation>
                                              <value name="ARG0">
                                                <block type="variables_get">
                                                  <title name="VAR">right</title>
                                                </block>
                                              </value>
                                              <value name="ARG1">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation>
              <arg name="dir"></arg>
              <arg name="counter"></arg>
              </mutation>
              <title name="NAME">get nectar</title>
              <statement name="STACK">
                <block type="controls_if" inline="false">
                <mutation else="1"></mutation>
                  <value name="IF0">
                    <block type="logic_compare" inline="true" movable="false">
                      <title name="OP">EQ</title>
                      <value name="A">
                        <block type="parameters_get">
                          <title name="VAR">dir</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="variables_get">
                          <title name="VAR">left</title>
                        </block>
                      </value>
                    </block>
                  </value>
                  <statement name="DO0">
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                    </block>
                  </statement>
                  <next>
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                        </block>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="parameters_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                          <block type="maze_nectar"></block>
                          </statement>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="controls_if" inline="false">
                                <mutation else="1"></mutation>
                                  <value name="IF0">
                                    <block type="logic_compare" inline="true" movable="false">
                                      <title name="OP">EQ</title>
                                      <value name="A">
                                        <block type="parameters_get">
                                          <title name="VAR">dir</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">left</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <statement name="DO0">
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </statement>
                                  <statement name="ELSE">
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                    </block>
                                  </statement>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 1b:
        Course_4_SCF_1b_b: "Schau dir diese Idee an, wie die Biene reisen könnte:
          \ \n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="make honey up and over"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                        </block>
                                      </statement>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">make honey up and over</title>
              <statement name="STACK">
                <block type="maze_move">
                  <title name="DIR">moveForward</title>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_honey">
                              <next>
                                <block type="maze_honey">
                                  <next>
                                    <block type="maze_move">
                                      <title name="DIR">moveBackward</title>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                          <next>
                                            <block type="maze_move">
                                              <title name="DIR">moveBackward</title>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 2:
        Course_4_SCF_2_a: Jedes Oktagon hat 40 Pixel lange Seiten.
        Course_4_SCF_2_d: "Beachte, dass du, da in den geraden Reihen weniger Achtecke
          vorhanden sind, nicht weiter zurückspringen musst, um an den Startplatz
          der ungeraden Reihen zu gelangen.  \n\nDas bedeutet, dass du die gleiche
          Funktion für alle Zeilen verwenden kannst."
        Course_4_SCF_2_e: |-
          **Lösung:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <next>
                        <block type="procedures_callnoreturn">
                        <mutation name="shift down"></mutation>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw octagons">
                              <arg name="numOctagons"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="math_number">
                                  <title name="NUM">3</title>
                                </block>
                              </value>
                              <next>
                                <block type="procedures_callnoreturn">
                                <mutation name="shift down"></mutation>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="procedures_callnoreturn" inline="false">
                      <mutation name="draw octagons">
                      <arg name="numOctagons"></arg>
                      </mutation>
                      <value name="ARG0">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="numOctagons"></arg>
              </mutation>
              <title name="NAME">draw octagons</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="parameters_get">
                      <title name="VAR">numOctagons</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="draw an octagon"></mutation>
                      <next>
                        <block type="jump" inline="true">
                          <title name="DIR">jumpForward</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">136</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">40</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">shift down</title>
              <statement name="STACK">
                <block type="draw_turn" inline="true">
                  <title name="DIR">turnRight</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">45</title>
                    </block>
                  </value>
                  <next>
                    <block type="jump" inline="true">
                      <title name="DIR">jumpForward</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">96</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                          <next>
                            <block type="jump" inline="true">
                              <title name="DIR">jumpBackward</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">408</title>
                                </block>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_f: |-
          **Lösung:**

          <xml>
            <block type="procedures_defnoreturn" editable="false">
              <mutation>
              <arg name="length"></arg>
              </mutation>
              <title name="NAME">draw an octagon</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">8</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_move" inline="true">
                      <title name="DIR">moveForward</title>
                      <value name="VALUE">
                        <block type="parameters_get">
                          <title name="VAR">length</title>
                        </block>
                      </value>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnRight</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">45</title>
                            </block>
                          </value>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for_counter" inline="true">
                <mutation counter="counter"></mutation>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">200</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_rgb" inline="false">
                          <value name="RED">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MINUS</title>
                              <value name="A">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <value name="GREEN">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <value name="BLUE">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">MULTIPLY</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                            </block>
                          </value>
                        </block>
                      </value>
                      <next>
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="math_arithmetic" inline="true">
                              <title name="OP">DIVIDE</title>
                              <value name="A">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="B">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="procedures_callnoreturn" inline="false">
                              <mutation name="draw an octagon">
                              <arg name="length"></arg>
                              </mutation>
                              <value name="ARG0">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">22.5</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1:
        Course_4_SCFL_1_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">7</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">5</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnLeft</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="math_number">
                                          <title name="NUM">2</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_moveForward"/>
                                      </statement>
                                      <next>
                                        <block type="maze_turn">
                                          <title name="DIR">turnLeft</title>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_a: Versuch's mal mit einer "für"-Schleife.
        Course_4_SCFL_1b_c: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 2:
        Course_4_SCFL_2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_moveForward">
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnRight</title>
                              <next>
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MULTIPLY</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="math_number">
                                                  <title name="NUM">3</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnLeft</title>
                                              <next>
                                                <block type="maze_moveForward">
                                                  <next>
                                                    <block type="maze_moveForward">
                                                      <next>
                                                        <block type="maze_turn">
                                                          <title name="DIR">turnRight</title>
                                                          <next>
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">POWER</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">2</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">counter</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="maze_nectar"/>
                                                              </statement>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 3:
        Course_4_SCFL_3_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 4:
        Course_4_SCFL_4_c: Der Maler dreht 15 Grad zwischen jedem Quadrat.
        Course_4_SCFL_4_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">4</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn_by_constant">
                                      <title name="DIR">turnRight</title>
                                      <title name="VALUE">90</title>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">15</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 6:
        Course_4_SCFL_6_b: Der Code dafür ist viel einfacher als du vielleicht denkst.  Stelle
          einfach die Farbe innerhalb der `for`-Schleife ein, bewege Dich vorwärts
          und drehe Dich dann.
        Course_4_SCFL_6_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCFL 7:
        Course_4_SCFL_7_e: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="alpha" inline="true" id="alpha">
                  <value name="VALUE">
                    <block type="math_number_dropdown">
                      <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">200</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_width" inline="false">
                          <value name="WIDTH">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <next>
                            <block type="draw_colour" inline="true" id="draw-color">
                              <value name="COLOUR">
                                <block type="colour_rgb" inline="false">
                                  <value name="RED">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="GREEN">
                                    <block type="math_arithmetic" inline="true">
                                      <title name="OP">MINUS</title>
                                      <value name="A">
                                        <block type="math_number">
                                          <title name="NUM">255</title>
                                        </block>
                                      </value>
                                      <value name="B">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                    </block>
                                  </value>
                                  <value name="BLUE">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="draw_move" inline="true">
                                  <title name="DIR">moveForward</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">5</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_turn" inline="true">
                                      <title name="DIR">turnLeft</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">DIVIDE</title>
                                          <value name="A">
                                            <block type="math_number">
                                              <title name="NUM">360</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="draw_turn" inline="true">
                          <title name="DIR">turnLeft</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">225</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_for_counter" inline="true">
                            <mutation counter="counter"></mutation>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">5</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_width" inline="false">
                                  <value name="WIDTH">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="draw_colour" inline="true" id="draw-color">
                                      <value name="COLOUR">
                                        <block type="colour_rgb" inline="false">
                                          <value name="RED">
                                            <block type="variables_get">
                                              <title name="VAR">counter</title>
                                            </block>
                                          </value>
                                          <value name="GREEN">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">MINUS</title>
                                              <value name="A">
                                                <block type="math_number">
                                                  <title name="NUM">255</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">counter</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <value name="BLUE">
                                            <block type="math_number">
                                              <title name="NUM">255</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_move" inline="true">
                                          <title name="DIR">moveForward</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 1:
        Course_4_SCV_1_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">500</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">0</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_random"/>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">sides</title>
                                      <value name="VALUE">
                                        <block type="math_arithmetic" inline="true">
                                          <title name="OP">ADD</title>
                                          <value name="A">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <value name="B">
                                            <block type="math_number">
                                              <title name="NUM">5</title>
                                            </block>
                                          </value>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="draw_move" inline="true">
                                                  <title name="DIR">moveForward</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="variables_get">
                                                          <title name="VAR">length</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="draw_turn" inline="true">
                                                      <title name="DIR">turnLeft</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">DIVIDE</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">360</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </statement>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnRight</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 2:
        Course_4_SCV_2_e: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">length</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">400</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">sides</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">10</title>
                            </block>
                          </value>
                          <next>
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">sides</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="draw_colour" inline="true" id="draw-color">
                                  <value name="COLOUR">
                                    <block type="colour_picker">
                                      <title name="COLOUR">#ff0000</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">sides</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">sides</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="draw_move" inline="true">
                                              <title name="DIR">moveForward</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="variables_get">
                                                      <title name="VAR">length</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                                                      <title name="OP">DIVIDE</title>
                                                      <value name="A">
                                                        <block type="math_number">
                                                          <title name="NUM">360</title>
                                                        </block>
                                                      </value>
                                                      <value name="B">
                                                        <block type="variables_get">
                                                          <title name="VAR">sides</title>
                                                        </block>
                                                      </value>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </statement>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </statement>
                                      <next>
                                        <block type="jump" inline="true">
                                          <title name="DIR">jumpForward</title>
                                          <value name="VALUE">
                                            <block type="math_arithmetic" inline="true">
                                              <title name="OP">DIVIDE</title>
                                              <value name="A">
                                                <block type="variables_get">
                                                  <title name="VAR">length</title>
                                                </block>
                                              </value>
                                              <value name="B">
                                                <block type="variables_get">
                                                  <title name="VAR">sides</title>
                                                </block>
                                              </value>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="draw_turn" inline="true">
                                              <title name="DIR">turnRight</title>
                                              <value name="VALUE">
                                                <block type="math_arithmetic" inline="true">
                                                  <title name="OP">DIVIDE</title>
                                                  <value name="A">
                                                    <block type="math_number">
                                                      <title name="NUM">360</title>
                                                    </block>
                                                  </value>
                                                  <value name="B">
                                                    <block type="variables_get">
                                                      <title name="VAR">sides</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </value>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 3:
        Course_4_SCV_3_c: |-
          **Lösung:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">points</title>
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">points</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 4:
        Course_4_SCV_4_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">6</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">5</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward"/>
                              </statement>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">nectar</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_nectar"/>
                                  </statement>
                                  <next>
                                    <block type="maze_moveForward">
                                      <next>
                                        <block type="controls_repeat_ext" inline="true">
                                          <value name="TIMES">
                                            <block type="variables_get">
                                              <title name="VAR">honey</title>
                                            </block>
                                          </value>
                                          <statement name="DO">
                                            <block type="maze_honey"/>
                                          </statement>
                                          <next>
                                            <block type="maze_moveForward">
                                              <next>
                                                <block type="maze_turn">
                                                  <title name="DIR">turnRight</title>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">honey</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">ADD</title>
                                                          <value name="A">
                                                            <block type="variables_get">
                                                              <title name="VAR">honey</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="math_number">
                                                              <title name="NUM">1</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <next>
                                                        <block type="variables_set" inline="false">
                                                          <title name="VAR">nectar</title>
                                                          <value name="VALUE">
                                                            <block type="math_arithmetic" inline="true">
                                                              <title name="OP">MINUS</title>
                                                              <value name="A">
                                                                <block type="variables_get">
                                                                  <title name="VAR">nectar</title>
                                                                </block>
                                                              </value>
                                                              <value name="B">
                                                                <block type="math_number">
                                                                  <title name="NUM">1</title>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </next>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 5:
        Course_4_SCV_5_a: |-
          Sieh dir diese Option für die Bewegung an:

          ![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)
        Course_4_SCV_5_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set" inline="false">
                  <title name="VAR">honey</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">nectar</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="controls_repeat_ext" inline="true">
                              <value name="TIMES">
                                <block type="variables_get">
                                  <title name="VAR">nectar</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                  <next>
                                    <block type="controls_repeat_ext" inline="true">
                                      <value name="TIMES">
                                        <block type="variables_get">
                                          <title name="VAR">nectar</title>
                                        </block>
                                      </value>
                                      <statement name="DO">
                                        <block type="maze_nectar"/>
                                      </statement>
                                      <next>
                                        <block type="maze_move">
                                          <title name="DIR">moveForward</title>
                                          <next>
                                            <block type="controls_repeat_ext" inline="true">
                                              <value name="TIMES">
                                                <block type="variables_get">
                                                  <title name="VAR">honey</title>
                                                </block>
                                              </value>
                                              <statement name="DO">
                                                <block type="maze_honey"/>
                                              </statement>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">honey</title>
                                                  <value name="VALUE">
                                                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">honey</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="variables_set" inline="false">
                                                      <title name="VAR">nectar</title>
                                                      <value name="VALUE">
                                                        <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="variables_get">
                          <title name="VAR">nectar</title>
                        </block>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                    </block>
                                                      </value>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      Course 4 SCV 6:
        Course_4_SCV_6_a: |-
          Schau dir an, wie eine einzelne fertige Form aussieht

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_f: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="variables_set" inline="false">
                      <title name="VAR">red1</title>
                      <value name="VALUE">
                        <block type="math_number">
                          <title name="NUM">0</title>
                        </block>
                      </value>
                      <next>
                        <block type="variables_set" inline="false">
                          <title name="VAR">green1</title>
                          <value name="VALUE">
                            <block type="math_number">
                              <title name="NUM">175</title>
                            </block>
                          </value>
                          <next>
                            <block type="variables_set" inline="false">
                              <title name="VAR">blue1</title>
                              <value name="VALUE">
                                <block type="math_number">
                                  <title name="NUM">200</title>
                                </block>
                              </value>
                              <next>
                                <block type="variables_set" inline="false">
                                  <title name="VAR">red2</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">100</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="variables_set" inline="false">
                                      <title name="VAR">green2</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">50</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="variables_set" inline="false">
                                          <title name="VAR">blue2</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">150</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="variables_set" inline="false">
                                              <title name="VAR">length</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">70</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="variables_set" inline="false">
                                                  <title name="VAR">sides</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">5</title>
                                                    </block>
                                                  </value>
                                                  <next>
                                                    <block type="controls_repeat_ext" inline="true">
                                                      <value name="TIMES">
                                                        <block type="math_arithmetic" inline="true">
                                                          <title name="OP">MULTIPLY</title>
                                                          <value name="A">
                                                            <block type="math_number">
                                                              <title name="NUM">2</title>
                                                            </block>
                                                          </value>
                                                          <value name="B">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                        </block>
                                                      </value>
                                                      <statement name="DO">
                                                        <block type="controls_repeat_ext" inline="true">
                                                          <value name="TIMES">
                                                            <block type="variables_get">
                                                              <title name="VAR">sides</title>
                                                            </block>
                                                          </value>
                                                          <statement name="DO">
                                                            <block type="controls_repeat_ext" inline="true">
                                                              <value name="TIMES">
                                                                <block type="variables_get">
                                                                  <title name="VAR">sides</title>
                                                                </block>
                                                              </value>
                                                              <statement name="DO">
                                                                <block type="draw_colour" inline="true" id="draw-color">
                                                                  <value name="COLOUR">
                                                                    <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green1</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue1</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                  <next>
                                                                    <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnLeft</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_colour" inline="true" id="draw-color">
                                                                      <value name="COLOUR">
                                                                      <block type="colour_rgb" inline="false">
                                                                      <value name="RED">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">red2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="GREEN">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">green2</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="BLUE">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">blue2</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_move" inline="true">
                                                                      <title name="DIR">moveForward</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">length</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      <next>
                                                                      <block type="draw_turn" inline="true">
                                                                      <title name="DIR">turnRight</title>
                                                                      <value name="VALUE">
                                                                      <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </value>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                      </block>
                                                                      </next>
                                                                    </block>
                                                                  </next>
                                                                </block>
                                                              </statement>
                                                              <next>
                                                                <block type="draw_turn" inline="true">
                                                                  <title name="DIR">turnRight</title>
                                                                  <value name="VALUE">
                                                                    <block type="math_arithmetic" inline="true">
                                                                      <title name="OP">DIVIDE</title>
                                                                      <value name="A">
                                                                      <block type="math_number">
                                                                      <title name="NUM">360</title>
                                                                      </block>
                                                                      </value>
                                                                      <value name="B">
                                                                      <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                      </block>
                                                                      </value>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </next>
                                                            </block>
                                                          </statement>
                                                          <next>
                                                            <block type="draw_turn" inline="true">
                                                              <title name="DIR">turnRight</title>
                                                              <value name="VALUE">
                                                                <block type="math_arithmetic" inline="true">
                                                                  <title name="OP">DIVIDE</title>
                                                                  <value name="A">
                                                                    <block type="math_number">
                                                                      <title name="NUM">180</title>
                                                                    </block>
                                                                  </value>
                                                                  <value name="B">
                                                                    <block type="variables_get">
                                                                      <title name="VAR">sides</title>
                                                                    </block>
                                                                  </value>
                                                                </block>
                                                              </value>
                                                            </block>
                                                          </next>
                                                        </block>
                                                      </statement>
                                                    </block>
                                                  </next>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      CourseD_Dance_Party_01:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Sorgen Sie dafür, dass ein Tänzer auf dem Bildschirm erscheint.

          _Dieser Level endet nach 4 Takten._
        challenges: |-
          **Optionale Herausforderungen**

          -   Wählen Sie einen anderen Song.
          -   Wählen Sie einen anderen, der aussieht wie ein Elch!
          -   Benennen Sie Ihren Tänzer um.
      CourseD_Dance_Party_02:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Der Tänzer muss nach 4 Takten in einen neuen Tanzschritt wechseln.

          _Dieser Level endet nach 8 Takten._
      CourseD_Dance_Party_03:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Nach 6 Takten muss Ihr Tänzer einen anderen Tanz tun als nach 4 Takten.

          _Dieser Level endet nach 12 Takten._
      CourseD_Dance_Party_04:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Sie müssen irgendwann im siebten Takt des Songs den Hintergrundeffekt ändern.

          _Dieser Level endet nach 10 Takten._
        challenges: |-
          **Optionale Herausforderung**

          Ändern Sie den Hintergrundeffekt an verschiedenen Stellen des Songs, indem Sie den neuen Block unter den <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"Takte"</title></block></xml>-Ereignissen verbinden.
      CourseD_Dance_Party_06:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Sie müssen mindestens zwei Tänzer haben.

          _Dieser Level endet nach 6 Takten._
        challenges: |-
          **Optionale Herausforderung**

          -   Fügen Sie einen dritten Tänzer hinzu (oder so viele Sie möchten!)
          -   Lassen Sie alle Ihre Tänzer an verschiedenen Stellen in dem Song verschiedene Bewegungen ausführen.
      CourseD_Dance_Party_08:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Zwei Tänzer benötigen eine andere Größe als 100.

          _Dieser Level endet nach 6 Takten._
        challenges: |-
          **Optionale Herausforderung**

          -   Experimentieren Sie, indem Sie weitere Eigenschaften (Breite, Höhe, Rotation etc.) ändern
      CourseD_Dance_Party_09:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Ändern Sie den Farbton mindestens eines Tänzers.

          _Dieser Level endet nach 8 Takten._
      CourseD_Dance_Party_10:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Eigenschaften für zwei oder mehr Tänzer müssen geändert werden.

          _Dieser Level endet nach 8 Takten._
      CourseD_Dance_Party_11:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Seien Sie einfach kreativ!

          _Dieser Level endet nach 8 Takten._
      CourseD_Dance_Party_11_5:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Seien Sie einfach kreativ!

          _Dieser Level endet nach 8 Takten._
      CourseD_Dance_Party_11b:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Verwenden Sie den Block "Wenn Pfeiltaste nach links gedrückt", um den Roboter einen Tanzschritt tun zu lassen, wenn Sie sie drücken.

          _Dieser Level endet nach 8 Takten._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Die **Seelaternen**![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Kannst du mit ihnen eine Bedingung verwenden, um das Ozeanmonument zu erreichen?
      CourseE_HOC 2018 Level_7a:
        aquatic7: Du kannst den ´wenn´ Baustein verwenden, um die richtigen Drehung
          zu machen.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Was für ein wunderschönes Korallenriff! Die blaue Koralle
          ist der **rechte** Weg. Pass auf, dass die rote Koralle nicht **links**
          ist!
      Dance_2019_01:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Sorgen Sie dafür, dass ein Tänzer auf dem Bildschirm erscheint.

          _Dieser Level endet nach 4 Takten._
        challenges: "**Optionale Herausforderungen** \n\n-   Wählen Sie das Abspielen
          eines anderen Songs aus.\n-   Bringen Sie Ihre Tänzer an einen neuen Ort.
          \n-   Erstellen Sie mehr als einen Tänzer."
      Dance_2019_02:
        validation: "**Wie schaffe ich diesen Level?**\n\n-   Der Tänzer muss einen
          Tanzschritt ausführen. \n-   Sie müssen eine Pfeiltaste drücken.\n\n_Dieser
          Level endet nach 4 Takten._"
        challenges: "**Optionale Herausforderung** \n\n-   Verwenden Sie mehr als
          einen <xml><block type=\"Dancelab_whenKey\"><title name=\"KEY\"></title></block></xml>
          Block."
      Dance_2019_03:
        validation: "**Wie schaffe ich diesen Level?**\n\n-   Beide Tänzer müssen
          eine Bewegung ausführen. \n-   Sie müssen die Pfeiltasten drücken. \n\n_Dieser
          Level endet nach 4 Takten._"
        challenges: "**Optionale Herausforderung** \n\n-   Lassen Sie eine Tänzerin
          auf die Pfeiltasten links und rechts reagieren."
      Dance_2019_04:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Der Tänzer muss nach 4 Takten in einen neuen Tanzschritt wechseln.

          _Dieser Level endet nach 8 Takten._
      Dance_2019_05:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Nach 6 Takten muss Ihr Tänzer einen anderen Tanz tun als nach 4 Takten.

          _Dieser Level endet nach 12 Takten._
        challenges: "**Optionale Herausforderung** \n\n-   Änderen Sie den Hintergrund,
          wenn die Tänzer eine andere Bewegung durchführen."
      Dance_2019_06:
        validation: "**Wie schaffe ich diesen Level?**\n\n-   Erstellen Sie einen
          Leadtänzer und eine Gruppe von Backuptänzern. \n    _Diese Stufe endet nach
          7 Takten._"
        challenges: "**Optionale Herausforderung** \n\n-   Erstellen Sie mehrere Gruppen
          von Backup-Tänzern."
      Dance_2019_07:
        validation: "**Wie bestehe ich diesen Level?** - \n\n-   Ändern Sie die Größe
          von mindestens einem Tänzer nach Einsetzen der Musik. \n\n_Dieser Level
          endet nach 6 Takten_"
        challenges: |-
          **Optionale Herausforderung**

          -   Experimentieren Sie, indem Sie weitere Eigenschaften (Breite, Höhe, Rotation etc.) ändern
      Dance_2019_08:
        validation: "**Wie bestehe ich diesen Level?** \n\n-   Ändern Sie den Farbton
          von mindestens einem Tänzer.\n\n_Dieser Level endet nach 6 Takten_"
        tint_hint: Haben Sie bemerkt, dass  Ihre Tänzer nicht genau die Farbe annehmen,
          die Sie ausgewählt hatten? Dass liegt daran, dass **färben** die von Ihnen
          gewählte Farbe mit den Farben des Tänzers mischen.
      Dance_2019_09:
        validation: "**Wie bestehe ich diesen Level?** \n\n-   Drücke einfach die
          Taste \"Beenden\"!"
        repeat_every_ideas: "**Brauchen Sie Ideen?**\n\n-   Ändern Sie die Größe eines
          Tänzers mehrfach, um ihn wachsen zu lassen. \n-   Ändern Sie die Drehung
          eines Tänzers mehrfach, damit er sich dreht. \n-   Ändern Sie die horizontale
          oder vertikale Position eines Tänzers, mehrfach, damit er sich über den
          Bildschirm bewegt.\n    _Sie können auch negative Zahlen verwenden, um einen
          gegenteiligen Effekt zu bewirken!_"
        next_previous: |-
          **Optionale Herausforderung**

          -   Sie können diesen neuen Ereignis-Block auch verwenden, um  durch eine Liste von Tanzschritten zu gehen, indem Sie bei den Schritten `(Zufall)`, `(Nächster)` oder `(Vorheriger)` auswählen.
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DOG&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;ROBOT&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Sorgen Sie dafür, dass ein Tänzer auf dem Bildschirm erscheint.

          _Dieser Level endet nach 4 Takten._
        challenges: |-
          **Optionale Herausforderungen**

          -   Wählen Sie einen anderen Song.
          -   Wählen Sie einen anderen, der aussieht wie ein Elch!
          -   Benennen Sie Ihren Tänzer um.
      Dance_Party_02:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Der Tänzer muss nach 4 Takten in einen neuen Tanzschritt wechseln.

          _Dieser Level endet nach 8 Takten._
      Dance_Party_03:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Nach 6 Takten muss Ihr Tänzer einen anderen Tanz tun als nach 4 Takten.

          _Dieser Level endet nach 12 Takten._
      Dance_Party_04:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Sie müssen irgendwann im siebten Takt des Songs den Hintergrundeffekt ändern.

          _Dieser Level endet nach 10 Takten._
        challenges: |-
          **Optionale Herausforderung**

          Ändern Sie den Hintergrundeffekt an verschiedenen Stellen des Songs, indem Sie den neuen Block unter den <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"Takte"</title></block></xml>-Ereignissen verbinden.
      Dance_Party_05:
        validation: |-
          \*\*Wie kann ich zur nächsten Stufe gelangen? \*\*

          -   Dein Tänzer sollte mindestens 4 verschiedene Tanzbewegungen durchlaufen, bevor das Level zuende ist.

          _Das Level endet nach 12 Takten._
      Dance_Party_06:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Sie müssen mindestens zwei Tänzer haben.

          _Dieser Level endet nach 6 Takten._
        challenges: |-
          **Optionale Herausforderung**

          -   Fügen Sie einen dritten Tänzer hinzu (oder so viele Sie möchten!)
          -   Lassen Sie alle Ihre Tänzer an verschiedenen Stellen in dem Song verschiedene Bewegungen ausführen.
      Dance_Party_08:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Zwei Tänzer benötigen eine andere Größe als 100.

          _Dieser Level endet nach 6 Takten._
        challenges: |-
          **Optionale Herausforderung**

          -   Experimentieren Sie, indem Sie weitere Eigenschaften (Breite, Höhe, Rotation etc.) ändern
      Dance_Party_09:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Ändern Sie den Farbton mindestens eines Tänzers.

          _Dieser Level endet nach 8 Takten._
      Dance_Party_10:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Eigenschaften für zwei oder mehr Tänzer müssen geändert werden.

          _Dieser Level endet nach 8 Takten._
      Dance_Party_11:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Seien Sie einfach kreativ!

          _Dieser Level endet nach 8 Takten._
      Dance_Party_11_5:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Seien Sie einfach kreativ!

          _Dieser Level endet nach 8 Takten._
      Dance_Party_11b:
        validation: |-
          **Wie schaffe ich diesen Level?**

          -   Verwenden Sie den Block "Wenn Pfeiltaste nach links gedrückt", um den Roboter einen Tanzschritt tun zu lassen, wenn Sie sie drücken.

          _Dieser Level endet nach 8 Takten._
      Dance_Party_extras_alternate_2019:
        alternate: Der 'alterniere' Baustein befindet sich in der Kategorie "Tänzer".
      Function intro Ryan:
        Function_intro_Ryan_a: Du kannst eine Funktion mehrmals in deinem Programm
          aufrufen.  Versuche, sie zweimal aufzurufen, um diese Aufgabe zu lösen.
      Function intro Ryan_2019:
        Function_intro_Ryan_a: Du kannst eine Funktion mehrmals in deinem Programm
          aufrufen.  Versuche, sie zweimal aufzurufen, um diese Aufgabe zu lösen.
      HOC 2018 Level_10:
        voyage_aquatic_10a: Die **Seelaternen**![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Kannst du mit ihnen eine Bedingung verwenden, um das Ozeanmonument zu erreichen?
      HOC 2018 Level_7a:
        aquatic7: Du kannst den ´wenn´ Baustein verwenden, um die richtigen Drehung
          zu machen.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Was für ein wunderschönes Korallenriff! Die blaue Koralle
          ist der **rechte** Weg. Pass auf, dass die rote Koralle nicht **links**
          ist!
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Ziehe einen "vorwärts bewegen"-Block aus der Werkzeugkiste
          in den Arbeitsbereich und füge ihn unter dem "beim Ausführen"-Block an.
        MC_HOC_2017_01_RETRY_b: Klicke auf "Ausführen", um den Code für den Agenten
          auszuführen.
        MC_HOC_2017_01_RETRY_c: Nachdem der Agent seinen gesamten Code ausgeführt
          hat, kannst du den Spieler mit den Pfeiltasten bewegen.
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Ziehe einen "vorwärts bewegen"-Block aus der Werkzeugkiste
          in den Arbeitsbereich und füge ihn unter dem "beim Ausführen"-Block an.
        MC_HOC_2017_01_RETRY_b: Klicke auf "Ausführen", um den Code für den Agenten
          auszuführen.
        MC_HOC_2017_01_RETRY_c: Nachdem der Agent seinen gesamten Code ausgeführt
          hat, kannst du den Spieler mit den Pfeiltasten bewegen.
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Bewege den Agenten zwei Felder vorwärts, bis er auf
          der Druckplatte steht.  Dadurch wird die Tür für deinen Spieler geöffnet.
        MC_HOC_2017_02_Cole_b: "Wähle \"Ausführen\" aus! \nDu kannst deinen Code auch
          dann ausführen, wenn er falsch ist.  Setze deinen Code zurück und führe
          ihn so oft erneut aus, bis du den Fehler gefunden hast."
        MC_HOC_2017_02_Cole_c: Bewege den Spieler mit den Pfeiltasten zur Karte, sobald
          der Agent die Tür geöffnet hat.
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Bewege den Agenten zwei Felder vorwärts, bis er auf
          der Druckplatte steht.  Dadurch wird die Tür für deinen Spieler geöffnet.
        MC_HOC_2017_02_Cole_b: "Wähle \"Ausführen\" aus! \nDu kannst deinen Code auch
          dann ausführen, wenn er falsch ist.  Setze deinen Code zurück und führe
          ihn so oft erneut aus, bis du den Fehler gefunden hast."
        MC_HOC_2017_02_Cole_c: Bewege den Spieler mit den Pfeiltasten zur Karte, sobald
          der Agent die Tür geöffnet hat.
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Sobald der Agent auf der Druckplatte steht, kannst
          du den Spieler mit den Pfeiltasten zum Kompass steuern.
        MC_HOC_2017_03_Cole_b: Ist dir der Code zu lang?  Versuche, ihn mit einer
          "wiederholen"-Schleife zu verkürzen.
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Sobald der Agent auf der Druckplatte steht, kannst
          du den Spieler mit den Pfeiltasten zum Kompass steuern.
        MC_HOC_2017_03_Cole_b: Ist dir der Code zu lang?  Versuche, ihn mit einer
          "wiederholen"-Schleife zu verkürzen.
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: 'Verwende den "nach rechts drehen"-Block, um
          die Richtung des Agenten zu ändern. '
        MC_HOC_2017_04POINT5_RYAN_a: Der Agent muss nur die erste Druckplatte erreichen,
          um Alex oder Steve durchzulassen.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: 'Verwende den "nach rechts drehen"-Block, um
          die Richtung des Agenten zu ändern. '
        MC_HOC_2017_04POINT5_RYAN_a: Der Agent muss nur die erste Druckplatte erreichen,
          um Alex oder Steve durchzulassen.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Der Agent muss 7 Mal "vorwärts bewegen" verwenden.
          Kannst du das mit einer "wiederholen"-Schleife erledigen?
        MC_HOC_2017_04_Cole_c: "Wähle \"Ausführen\" aus! \nDu kannst deinen Code auch
          dann ausführen, wenn er falsch ist.  Setze deinen Code zurück und führe
          ihn so oft erneut aus, bis du den Fehler gefunden hast."
        MC_HOC_2017_04_Cole_b: Sobald der Agent die Druckplatte erreicht hat, öffnet
          er dem Spieler die Tür.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Der Agent muss 7 Mal "vorwärts bewegen" verwenden.
          Kannst du das mit einer "wiederholen"-Schleife erledigen?
        MC_HOC_2017_04_Cole_c: "Wähle \"Ausführen\" aus! \nDu kannst deinen Code auch
          dann ausführen, wenn er falsch ist.  Setze deinen Code zurück und führe
          ihn so oft erneut aus, bis du den Fehler gefunden hast."
        MC_HOC_2017_04_Cole_b: Sobald der Agent die Druckplatte erreicht hat, öffnet
          er dem Spieler die Tür.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Wusstest du, dass du mehrere Code-Stücke in eine Schleife
          packen kannst?  Versuche, in einem "wiederholen"-Block ein Brett zu platzieren
          **und** dich vorwärts zu bewegen, um diese Aufgabe abzuschließen.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Wusstest du, dass du mehrere Code-Stücke in eine Schleife
          packen kannst?  Versuche, in einem "wiederholen"-Block ein Brett zu platzieren
          **und** dich vorwärts zu bewegen, um diese Aufgabe abzuschließen.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Wie oft wird diese Schleife ausgeführt?  Wie oft _sollte_
          sie ausgeführt werden?
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Wie oft wird diese Schleife ausgeführt?  Wie oft _sollte_
          sie ausgeführt werden?
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_a: Um diese Aufgabe zu lösen, musst du herausfinden, was
          die "Weg räumen"-Funktion macht, und diese mit dem kleinen, grünen "Weg
          räumen"-Block aus der Werkzeugkiste so oft wie nötig aufrufen.
        MC_HOC_2017_07_Cole_b: Versuche, Funktionsblöcke mit anderen Blöcken aus der
          Werkzeugkiste zu kombinieren. So löst du diese Aufgabe.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_a: Um diese Aufgabe zu lösen, musst du herausfinden, was
          die "Weg räumen"-Funktion macht, und diese mit dem kleinen, grünen "Weg
          räumen"-Block aus der Werkzeugkiste so oft wie nötig aufrufen.
        MC_HOC_2017_07_Cole_b: Versuche, Funktionsblöcke mit anderen Blöcken aus der
          Werkzeugkiste zu kombinieren. So löst du diese Aufgabe.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_a: Verwende Funktionen, um diese Aufgabe einfacher zu
          lösen.
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_a: Verwende Funktionen, um diese Aufgabe einfacher zu
          lösen.
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "Wähle \"Ausführen\" aus! \nDu kannst deinen Code auch
          dann ausführen, wenn er falsch ist.  Setze deinen Code zurück und führe
          ihn so oft erneut aus, bis du den Fehler gefunden hast."
        MC_HOC_2017_08_RY_b: Es gibt eine MENGE Möglichkeiten, um diese Aufgabe zu
          lösen.  Probiere ein paar aus!
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "Wähle \"Ausführen\" aus! \nDu kannst deinen Code auch
          dann ausführen, wenn er falsch ist.  Setze deinen Code zurück und führe
          ihn so oft erneut aus, bis du den Fehler gefunden hast."
        MC_HOC_2017_08_RY_b: Es gibt eine MENGE Möglichkeiten, um diese Aufgabe zu
          lösen.  Probiere ein paar aus!
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Versuche, den Agenten einige Brücken bauen zu lassen,
          damit Alex oder Steve auf der Karte weiterlaufen können.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Versuche, den Agenten einige Brücken bauen zu lassen,
          damit Alex oder Steve auf der Karte weiterlaufen können.
      NEW Course 4 Artist Params inspire:
        solution: "**Lösung** \n\n<xml>\n  <block type=\"when_run\" deletable=\"false\"
          movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n
          \       <value name=\"WIDTH\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">1</title>\n          </block>\n        </value>\n
          \       <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n
          \           <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n
          \               <title name=\"COLOUR\">#0000cd</title>\n              </block>\n
          \           </value>\n            <next>\n              <block type=\"controls_repeat_ext\"
          inline=\"true\">\n                <value name=\"TIMES\">\n                  <block
          type=\"math_number\">\n                    <title name=\"NUM\">6</title>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"controls_for_counter\" inline=\"true\">\n
          \                 <mutation counter=\"counter\"></mutation>\n                    <value
          name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">3</title>\n                      </block>\n                    </value>\n
          \                   <value name=\"TO\">\n                      <block type=\"math_number\">\n
          \                       <title name=\"NUM\">17</title>\n                      </block>\n
          \                   </value>\n                    <value name=\"BY\">\n
          \                     <block type=\"math_number\">\n                        <title
          name=\"NUM\">2</title>\n                      </block>\n                    </value>\n
          \                   <statement name=\"DO\">\n                      <block
          type=\"alpha\" inline=\"true\" id=\"alpha\">\n                        <value
          name=\"VALUE\">\n                          <block type=\"math_arithmetic\"
          inline=\"true\">\n                            <title name=\"OP\">DIVIDE</title>\n
          \                           <value name=\"A\">\n                              <block
          type=\"math_number\">\n                                <title name=\"NUM\">500</title>\n
          \                             </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                        <next>\n
          \                         <block type=\"procedures_callnoreturn\" inline=\"false\">\n
          \                           <mutation name=\"draw a polygon\">\n                            <arg
          name=\"length\"></arg>\n                            <arg name=\"sides\"></arg>\n
          \                           </mutation>\n                            <value
          name=\"ARG0\">\n                              <block type=\"math_number\">\n
          \                               <title name=\"NUM\">30</title>\n                              </block>\n
          \                           </value>\n                            <value
          name=\"ARG1\">\n                              <block type=\"variables_get\">\n
          \                               <title name=\"VAR\">counter</title>\n                              </block>\n
          \                           </value>\n                          </block>\n
          \                       </next>\n                      </block>\n                    </statement>\n
          \                   <next>\n                      <block type=\"draw_move\"
          inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_number\">\n                            <title name=\"NUM\">20</title>\n
          \                         </block>\n                        </value>\n                        <next>\n
          \                         <block type=\"draw_turn\" inline=\"true\">\n                            <title
          name=\"DIR\">turnRight</title>\n                            <value name=\"VALUE\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">60</title>\n                              </block>\n                            </value>\n
          \                         </block>\n                        </next>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </next>\n
          \     </block>\n    </next>\n  </block>\n  </xml>"
      Overworld Avoid Monsters:
        mc_8_b: Nutze `wiederholen`-Schleifen um dein Code zu vereinfachen.
      Overworld Avoid Monsters_2019:
        mc_8_b: Nutze `wiederholen`-Schleifen um dein Code zu vereinfachen.
      behaviors 2:
        behavior hint: "Versuche, die Verhaltensweisen zu bearbeiten! \n\n-   In welche
          Richtung muss sich die Rakete bewegen?"
      behaviors 3:
        behavior hint: "Versuche, die Verhaltensweisen zu bearbeiten! \n\n-   Welcher
          Wert steuert die Geschwindigkeit jedes Sprites?"
      behaviors 3a:
        behavior hint: "Versuche, die Verhaltensweisen zu bearbeiten! \n\n-   Welcher
          Wert steuert die Geschwindigkeit jedes Sprites?"
      behaviors 5:
        target hint: Du kannst jedes der vier Schiffe auswählen. Welchen will der
          Astronaut?
        behavior hint: Bearbeite das Verhalten, um dieses Rätsel zu lösen. Der Astronauten-Sprite
          muss sich in zwei verschiedene Richtungen bewegen, um am Ende diagonal zu
          gehen.
      behaviors 6:
        behavior hint: "Versuche, die Verhaltensweisen zu bearbeiten! \n\n-   Welcher
          Wert steuert die Geschwindigkeit jedes Sprites?"
      behaviors 7:
        behaviors_hint1: Du kannst ein neues Verhalten erstellen, das zwei verschiedene
          Aktionen verwendet, oder zwei bestehende Verhaltensweisen kombinieren.
        sprites_idea1: |-
          Zum Spaß kannst du ein ähnliches Verhalten verwenden, um ein Schiff in den Weltraum fliegen zu lassen oder einen Charakter in den Vordergrund zu bringen. Versuche, den Hintergrund und Sprite-Kostüme in Deiner Szene zu ändern!

          ![](<https://images.code.org/7070e44239b53f4b33a5b4fe054bb61c-image-1567714335486.2019-09-05 16_05_19.gif>)

          ![](<https://images.code.org/278494432d56f1f5d41e345a51223695-image-1567714335485.2019-09-05 16_11_12.gif>)
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          Mit Schleifen kannst du die Wände und das Dach gestalten. Versuche verschiedene Bausteine zu wiederholen.

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          Gestalte deine eigenen oder klicke auf den ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) für Ideen!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge2:
        harvey_tictactoe: Du kannst `springe` Bausteine verwenden, um in andere Räume
          zu gelangen.
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_b: Wenn du ein Vogelhaus fertig hast, spring
          zum nächsten!
        courseA_artist_loops_challenge2_c: Du brauchst eine große Anzahl von Bausteinen
          innerhalb der Schleife für diese Herausforderung.
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Versuche die Zahlen in jeder Schleife
          zu ändern, wenn etwas schief geht.
        courseA_collector_loops_challenge1_b: Du brauchst keine Schleife verwenden,
          wenn du etwas nur einmal machst.
        courseA_collector_loops_challenge1_c: Es gibt 6 Edelsteine auf der rechten
          Seite der Höhle, aber du musst dich nur 5 Mal bewegen und sammeln. Weißt
          du, warum?
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: Zum Lösen benötigst du nur einen ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>) Baustein.
        courseA_collector_loops_challenge2_a: |-
          Du kannst dich ein zweites Mal über den Pfad bewegen, bevor du nach Süden gehst.

          ![](<https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png>)
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          Beginne, indem du die Befehle `bewege nach Süden` und `Schatz sammeln` wiederholst.

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          Das "Nord"-Muster ist etwas anders als das "Süd"-Muster.

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
        courseB_collector_loops_challenge1_d: |-
          Versuche dies!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: Einige Pfade führen zu TNT, wenn du mich zu
          weit bewegst.
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_b: Ordne die Bausteine neu an und nimm den mittleren
          Weg.
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: 'Versuche die Felder mit deinem Finger nachzuzählen.
          Denke daran: Das Feld von dem du startest musst du nicht mitzählen!'
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_b: Versuchen mich nach Westen zu bewegen, um zu
          beginnen.
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Mach, dass Waddles, der Pinguin, erscheint,
          wenn du auf Robin klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Mach, dass Buu, der Geist, erscheint,
          wenn du auf Waddles klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Mach, dass Jayden, das wuschelige Monster,
          erscheint, wenn du auf Buu klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Mach, dass Spiff, der Roboter, erscheint,
          wenn du auf das Monster klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Und zuletzt, mach, dass Wendel, der
          Zauberer, erscheint, wenn du auf Spiff klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "Du kannst einen Vogel zum singen bringen.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Du kannst den Roboter piepsen lassen.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Du kannst das grantige Monster knurren lassen.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: 'Das Rechteck ist 200 Pixel breit und 100
          Pixel hoch. '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "Du kannst Befehle in den `wiederhole` Baustein
          einfügen, um diese immer wieder zu wiederholen. Probiere es aus!\n\n<xml>\n
          \ \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          Kannst du einen Weg finden, der jede Blume und jede Wabe erreicht, ohne auf Bäume zu treffen? Der beste Weg ist eine Spirale.

          **Du kannst das lösen, ohne jemals nach links zu gehen.**
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Genau wie die `wenn bei Blume` Bausteine, wird der Code innerhalb eines `solange Nektar > 0` nur ausgeführt, wenn sich die Biene an einer Blume befindet. Der Hauptunterschied besteht darin, dass der Code im Inneren wiederholt ausgeführt wird, bis kein Nektar mehr vorhanden ist.  Versuche dieses Muster:

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">&gt;</title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: Der Originalcode würde gut funktionieren
          - wenn es nur einen Schatz in jedem Stapel gäbe!
        courseC_maze_loops_challenge2_b: Benutze Schleifen, damit du nicht zu viele
          ˋSammelnˋ Blöcke verwenden musst!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Du kannst den Befehl `sammle` öfter verwenden,
          um den zusätzlichen Schatz zu sammeln.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Du kannst den Befehl `sammle` öfter verwenden,
          um den zusätzlichen Schatz zu sammeln.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Denk nicht einmal daran, dies ohne Schleifen
          zu versuchen!
        courseC_harvester_loops_challenge1_b: Du kannst `bewege vorwärts` und `pflücke
          Mais` so oft du willst wiederholen, dann an jeder Ecke rechts abbiegen.
        courseC_harvester_loops_challenge1_c: |-
          Der beste Weg, die ersten vier Maissorten zu sammeln, besteht aus einem `wiederhole`-Baustein innerhalb eines anderen `wiederhole`-Bausteins. Du kannst dieses Muster auch für den Rest des Puzzles verwenden!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">2</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></next></block></xml>
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_c: |-
          Dieses Zickzackmuster kann zweimal wiederholt werden, um das Puzzle mit nur 20 Blöcken zu beenden!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Denke daran, dass dieser Weg aus drei verschiedenen
          Teilen besteht. Jeder von ihnen hat ein Muster, das du wiederholen kannst.
        courseC_maze_loops_challenge1_b: Zwischen jedem `wiederhole` Baustein musst
          du `drehe links` oder `drehe rechts` einbauen, um Scrat für das nächste
          Muster vorzubereiten.
        courseC_maze_loops_challenge1_c: |-
          Wenn du es bis hierher schaffst, musst du nur ´drehe links´ benutzen und dann ein paar Mal `bewege vorwärts`. Gib nicht auf!

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _Pass sehr gut auf, dass ich mich in
          die richtige Richtung drehe, wenn du mich rückwärts laufen lässt!_
        courseC_maze_programming_challenge2_b: Die kürzeste Lösung braucht nur 5 Blöcke,
          aber es benötigt den "wiederholen" Baustein!
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: Wenn du die Funktion noch einmal aufrufst,
          kannst du das gleiche Design in der letzten Ecke erstellen. Du kannst auch
          zu anderen Positionen springen oder das Ganze ändern, wie du willst!
      course3_bee_functions_challenge4:
        courseF_bee_functions_challenge2_b: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                  <mutation name="move and check"/>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
              <mutation/>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_ifElseFlower">
                  <title name="LOC">atFlower</title>
                  <statement name="DO">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">nectarRemaining</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_nectar"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
              <mutation/>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                      <mutation name="check nectar or honey"/>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </xml>
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: Der `SCHRITT` Knopf könnte bei dieser
          Herausforderung sehr hilfreich sein.
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: Die Menge jedes Gemüses in jedem Raum
          variiert. Benutze dafür `while`-Schleifen.
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_b: Der Pfad von Scrat hat die Form eines
          Rechtecks! Er muss sich jedes Mal auf die gleiche Weise drehen!
        courseC_maze_debugging_challenge1_c: Wenn du feststeckst, kannst du immer
          wieder von vorne anfangen, oder den ganzen Code entfernen und deinen eigenen
          Weg finden!
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: Eine Möglichkeit, dies zu lösen, besteht
          darin, zwischen den Kurven weitere Schritte vorwärts zu machen.
        courseC_maze_debugging_challenge2_b: Wenn du festsitzt, kannst du jederzeit
          von vorne anfangen oder den ganzen Code entfernen und deinen eigenen Weg
          finden!
        courseC_maze_debugging_challenge2_c: |-
          Es gibt zwei verschiedene Wege auf denen du mit "gehe vorwärts" Dich bewegen kannst, und nur vier Kurven. Wenn du einen Weg findest, den Block "Wiederholung" zu verwenden, kann es noch mehr geben!

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      course4_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      course4_harvester_nested_loops_challenge1:
        courseD_harvester_nested_loops_challenge1_a: Du hast wahrscheinlich schon
          einmal eine Schleife benutzt, um ein Zick-Zack-Muster zu erstellen. Wenn
          Du Dich an diesen Algorithmus erinnerst, kannst Du hier ein paar Ergänzungen
          dazu machen.
      courseA_artist_loops2:
        courseA_artist_loops2_a: Du weißt nicht, wie man Linien zeichnet? Beginne
          damit, Blöcke zum <xml><block type="when_run"/></xml> Block anzufügen um
          zu sehen, was passiert.
        courseA_artist_loops2_b: Benutze diesen <xml><block type="simple_move_right"/></xml>
          Block um die Aufgabe zu lösen.
      courseA_artist_loops2_2018:
        courseA_artist_loops2_a: Du weißt nicht, wie man Linien zeichnet? Beginne
          damit, Blöcke zum <xml><block type="when_run"/></xml> Block anzufügen um
          zu sehen, was passiert.
        courseA_artist_loops2_b: Benutze diesen <xml><block type="simple_move_right"/></xml>
          Block um die Aufgabe zu lösen.
      courseA_artist_loops2_2019:
        courseA_artist_loops2_a: Du weißt nicht, wie man Linien zeichnet? Beginne
          damit, Blöcke zum <xml><block type="when_run"/></xml> Block anzufügen um
          zu sehen, was passiert.
        courseA_artist_loops2_b: Benutze diesen <xml><block type="simple_move_right"/></xml>
          Block um die Aufgabe zu lösen.
      courseA_artist_loops3:
        courseA_artist_loops3_a: Fahre langsam mit deinem Finger das Programm entlang
          um zu sehen, wo es schief läuft.
        courseA_artist_loops3_b: |-
          Du wirst einen solchen Baustein brauchen, um die Aufgabe lösen zu können:

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_a: Fahre langsam mit deinem Finger das Programm entlang
          um zu sehen, wo es schief läuft.
        courseA_artist_loops3_b: |-
          Du wirst einen solchen Baustein brauchen, um die Aufgabe lösen zu können:

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_a: Fahre langsam mit deinem Finger das Programm entlang
          um zu sehen, wo es schief läuft.
        courseA_artist_loops3_b: |-
          Du wirst einen solchen Baustein brauchen, um die Aufgabe lösen zu können:

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
        courseA_artist_loops4_b: Da du nur einen <xml><block type="simple_move_right"/></xml>
          benutzen darfst, versuche ihn in die <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block></xml> Schleife zu setzen.
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
        courseA_artist_loops4_b: Da du nur einen <xml><block type="simple_move_right"/></xml>
          benutzen darfst, versuche ihn in die <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block></xml> Schleife zu setzen.
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
        courseA_artist_loops4_b: Da du nur einen <xml><block type="simple_move_right"/></xml>
          benutzen darfst, versuche ihn in die <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block></xml> Schleife zu setzen.
      courseA_artist_loops5:
        courseA_artist_loops5_a: Benutze, was du über <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Blöcke gelernt hast,
          um diese Aufgabe zu lösen!
        courseA_artist_loops5_b: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
        courseA_artist_loops5_c: "Da du nur einen <xml><block type=\"simple_move_right\"/></xml>
          benutzen darfst, versuche ihn in die \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nSchleife zu
          setzen."
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: Benutze, was du über <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Blöcke gelernt hast,
          um diese Aufgabe zu lösen!
        courseA_artist_loops5_b: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
        courseA_artist_loops5_c: "Da du nur einen <xml><block type=\"simple_move_right\"/></xml>
          benutzen darfst, versuche ihn in die \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nSchleife zu
          setzen."
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: Benutze, was du über <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Blöcke gelernt hast,
          um diese Aufgabe zu lösen!
        courseA_artist_loops5_b: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
        courseA_artist_loops5_c: "Da du nur einen <xml><block type=\"simple_move_right\"/></xml>
          benutzen darfst, versuche ihn in die \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\nSchleife zu
          setzen."
      courseA_artist_loops6:
        courseA_artist_loops6_a: Du weisst nicht, wie du einen Hügel zeichnen kannst?
          Spiele eine wenig mit allen Blöcken um zu sehen, was jeder einzelne zeichnet.
        courseA_artist_loops6_b: Du brauchst 2 Blöcke in 2 verschiedene Richtungen
          um diese Aufgabe zu lösen.
      courseA_artist_loops6_2018:
        courseA_artist_loops6_a: Du weisst nicht, wie du einen Hügel zeichnen kannst?
          Spiele eine wenig mit allen Blöcken um zu sehen, was jeder einzelne zeichnet.
        courseA_artist_loops6_b: Du brauchst 2 Blöcke in 2 verschiedene Richtungen
          um diese Aufgabe zu lösen.
      courseA_artist_loops6_2019:
        courseA_artist_loops6_a: Du weisst nicht, wie du einen Hügel zeichnen kannst?
          Spiele eine wenig mit allen Blöcken um zu sehen, was jeder einzelne zeichnet.
        courseA_artist_loops6_b: Du brauchst 2 Blöcke in 2 verschiedene Richtungen
          um diese Aufgabe zu lösen.
      courseA_artist_loops7:
        courseA_artist_loops7_a: Du weißt nicht, wohin du die Schleife setzen musst?
          Versuche den Code Schritt-für-Schritt zu schreiben und suche dann ein Muster.
        courseA_artist_loops7_b: Schreibe zuerst den Code für eine Welle und wiederhole
          das dann, um die anderen beiden Wellen zu zeichnen.
        courseA_artist_loops7_c: Vergiss nicht, du kannst mehr als einen Block in
          eine <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> Schleife setzen.
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: Du weißt nicht, wohin du die Schleife setzen musst?
          Versuche den Code Schritt-für-Schritt zu schreiben und suche dann ein Muster.
        courseA_artist_loops7_b: Schreibe zuerst den Code für eine Welle und wiederhole
          das dann, um die anderen beiden Wellen zu zeichnen.
        courseA_artist_loops7_c: |-
          Vergiss nicht, du kannst mehr als einen Block in eine <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> Schleife setzen.
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: Du weißt nicht, wohin du die Schleife setzen musst?
          Versuche den Code Schritt-für-Schritt zu schreiben und suche dann ein Muster.
        courseA_artist_loops7_b: Schreibe zuerst den Code für eine Welle und wiederhole
          das dann, um die anderen beiden Wellen zu zeichnen.
        courseA_artist_loops7_c: |-
          Vergiss nicht, du kannst mehr als einen Block in eine <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> Schleife setzen.
      courseA_artist_loops8:
        courseA_artist_loops8_a: Führe den Code aus um zu sehen, was schon für dich
          geschrieben wurde.
        courseA_artist_loops8_b: Wie würdest du in diesem Code am besten Schleifen
          verwenden?
        courseA_artist_loops8_c: |-
          Was macht der Code?\
          Was soll der Code machen?\
          Was sagt dir das?
      courseA_artist_loops8_2018:
        courseA_artist_loops8_a: Führe den Code aus um zu sehen, was schon für dich
          geschrieben wurde.
        courseA_artist_loops8_b: Wie würdest du in diesem Code am besten Schleifen
          verwenden?
        courseA_artist_loops8_c: |-
          Was macht der Code?\
          Was soll der Code machen?\
          Was sagt dir das?
      courseA_artist_loops8_2019:
        courseA_artist_loops8_a: Führe den Code aus um zu sehen, was schon für dich
          geschrieben wurde.
        courseA_artist_loops8_b: Wie würdest du in diesem Code am besten Schleifen
          verwenden?
        courseA_artist_loops8_c: |-
          Was macht der Code?\
          Was soll der Code machen?\
          Was sagt dir das?
      courseA_artist_loops9:
        courseA_artist_loops9_a: Füge noch einen Block zum Code hinzu um die restlichen
          Stufen zu zeichnen.
        courseA_artist_loops9_b: "Der Block, den du hinzufügst, soll in die \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\n
          Schleife gesetzt werden."
        courseA_artist_loops9_c: Wenn du nicht weißt, wohin du die Schleife setzen
          sollst, versuche den Code Schritt-für-Schritt zu schreiben und suche dann
          nach Mustern.
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: Füge noch einen Block zum Code hinzu um die restlichen
          Stufen zu zeichnen.
        courseA_artist_loops9_b: |-
          Der von Dir hinzugefügte Baustein sollte sich innerhalb der Schleife <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> befinden.
        courseA_artist_loops9_c: Wenn du nicht weißt, wohin du die Schleife setzen
          sollst, versuche den Code Schritt-für-Schritt zu schreiben und suche dann
          nach Mustern.
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: Füge noch einen Block zum Code hinzu um die restlichen
          Stufen zu zeichnen.
        courseA_artist_loops9_b: "Der Block, den du hinzufügst, soll in die \n\n<xml><block
          type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml>\n\n
          Schleife gesetzt werden."
        courseA_artist_loops9_c: Wenn du nicht weißt, wohin du die Schleife setzen
          sollst, versuche den Code Schritt-für-Schritt zu schreiben und suche dann
          nach Mustern.
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: Blöcke wie dieser <xml>  <block type="simple_move_up_left"/></xml>
          lassen deinen Künstler schräg gehen!
        courseA_artist_loops_challenge2_b: Wenn du ein Zelt fertig hast, 'springe'
          zweimal nach oben um zum nächsten zu kommen!
        courseA_artist_loops_challenge2_c: Alle deine Blöcke müssen innerhalb einer
          Schleife sein, dass du die Aufgabe lösen kannst.
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: Blöcke wie dieser <xml>  <block type="simple_move_up_left"/></xml>
          lassen deinen Künstler schräg gehen!
        courseA_artist_loops_challenge2_b: Wenn du ein Zelt fertig hast, 'springe'
          zweimal nach oben um zum nächsten zu kommen!
        courseA_artist_loops_challenge2_c: Alle deine Blöcke müssen innerhalb einer
          Schleife sein, dass du die Aufgabe lösen kannst.
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: Blöcke wie dieser <xml>  <block type="simple_move_up_left"/></xml>
          lassen deinen Künstler schräg gehen!
        courseA_artist_loops_challenge2_b: Wenn du ein Zelt fertig hast, 'springe'
          zweimal nach oben um zum nächsten zu kommen!
        courseA_artist_loops_challenge2_c: Alle deine Blöcke müssen innerhalb einer
          Schleife sein, dass du die Aufgabe lösen kannst.
      courseA_collector_loops1:
        courseA_collector_loops1_a: |-
          Nachdem du auf ein Feld mit einem Schatz gelangt bist, nimm diesen Block um ihn einzusammeln.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Eine einfache Lösung wäre 2 mal nach Osten zu
          gehen und dann den Schatz einzusammeln.
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: |-
          Nachdem du auf ein Feld mit einem Schatz gelangt bist, nimm diesen Block um ihn einzusammeln.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Eine einfache Lösung wäre 2 mal nach Osten zu
          gehen und dann den Schatz einzusammeln.
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: |-
          Nachdem du auf ein Feld mit einem Schatz gelangt bist, nimm diesen Block um ihn einzusammeln.

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Eine einfache Lösung wäre 2 mal nach Osten zu
          gehen und dann den Schatz einzusammeln.
      courseA_collector_loops2:
        courseA_collector_loops2_a: Du musst dich zuerst bewegen, dann kannst du die
          Schätze einsammeln.
        courseA_collector_loops2_b: |-
          Nachdem du auf ein Feld mit einem Schatz gelangt bist, nimm diesen Block um ihn einzusammeln.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: Du musst dich zuerst bewegen, dann kannst du die
          Schätze einsammeln.
        courseA_collector_loops2_b: |-
          Nachdem du auf ein Feld mit einem Schatz gelangt bist, nimm diesen Block um ihn einzusammeln.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: Du musst dich zuerst bewegen, dann kannst du die
          Schätze einsammeln.
        courseA_collector_loops2_b: |-
          Nachdem du auf ein Feld mit einem Schatz gelangt bist, nimm diesen Block um ihn einzusammeln.

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3:
        courseA_collector_loops3_a: Versuche eine <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleife zu verwenden!
        courseA_collector_loops3_b: Vergiß nicht, du kannst mehr als 1 Block in eine
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> Schleife setzen.
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: Versuche eine <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleife zu verwenden!
        courseA_collector_loops3_b: Vergiß nicht, du kannst mehr als 1 Block in eine
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> Schleife setzen.
      courseA_collector_loops3_2019:
        courseA_collector_loops3_a: "Versuche eine \n\n<xml><block type=\"controls_repeat_simplified_dropdown\"><title
          name=\"TIMES\" config=\"3-10\">???</title></block></xml>\n\n Schleife zu
          benutzen!"
        courseA_collector_loops3_b: Vergiß nicht, du kannst mehr als 1 Block in eine
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> Schleife setzen.
      courseA_collector_loops4:
        courseA_collector_loops4_a: Wenn Du verändern möchtest, wie weit Laurel geht,
          dann ändere die Zahl der Wiederholungen in der Schleife.
        courseA_collector_loops4_b: Vergiss nicht, dass Laurel nach Beenden der <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          Schleife noch nach unten gehen muss, um den letzten Schatz zu nehmen!
      courseA_collector_loops4_2018:
        courseA_collector_loops4_a: Wenn Du verändern möchtest, wie weit Laurel geht,
          dann ändere die Zahl der Wiederholungen in der Schleife.
        courseA_collector_loops4_b: Vergiss nicht, dass Laurel nach Beenden der <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          Schleife noch nach unten gehen muss, um den letzten Schatz zu nehmen!
      courseA_collector_loops4_2019:
        courseA_collector_loops4_a: Wenn Du verändern möchtest, wie weit Laurel geht,
          dann ändere die Zahl der Wiederholungen in der Schleife.
        courseA_collector_loops4_b: Vergiss nicht, dass Laurel nach Beenden der <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          Schleife noch nach unten gehen muss, um den letzten Schatz zu nehmen!
      courseA_collector_loops5:
        courseA_collector_loops5_a: Wenn du nicht sofort eine Lösung findest, nimm
          doch ein Blatt Papier, zeichne darauf alle Pfeile die du für den Weg brauchst
          und suche dann darin ein Muster.
        courseA_collector_loops5_b: 'Versuche, die Aufgabe in 2 Teile zu zerlegen:
          Zuerst seitwärts bewegen und dann nach unten.'
        courseA_collector_loops5_c: Du solltest mit einer <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleife beginnen,
          die Laurel nach Westen bewegt und die Schätze einsammelt.
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: Wenn du nicht sofort eine Lösung findest, nimm
          doch ein Blatt Papier, zeichne darauf alle Pfeile die du für den Weg brauchst
          und suche dann darin ein Muster.
        courseA_collector_loops5_b: 'Versuche, die Aufgabe in 2 Teile zu zerlegen:
          Zuerst seitwärts bewegen und dann nach unten.'
        courseA_collector_loops5_c: Du solltest mit einer <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleife beginnen,
          die Laurel nach Westen bewegt und die Schätze einsammelt.
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: Wenn du nicht sofort eine Lösung findest, nimm
          doch ein Blatt Papier, zeichne darauf alle Pfeile die du für den Weg brauchst
          und suche dann darin ein Muster.
        courseA_collector_loops5_b: 'Versuche, die Aufgabe in 2 Teile zu zerlegen:
          Zuerst seitwärts bewegen und dann nach unten.'
        courseA_collector_loops5_c: Du solltest mit einer <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleife beginnen,
          die Laurel nach Westen bewegt und die Schätze einsammelt.
      courseA_collector_loops6:
        courseA_collector_loops6_a: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
        courseA_collector_loops6_b: Die kürzeste Lösung hat 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleifen, eine nach
          der anderen.
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
        courseA_collector_loops6_b: Die kürzeste Lösung hat 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleifen, eine nach
          der anderen.
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
        courseA_collector_loops6_b: Die kürzeste Lösung hat 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleifen, eine nach
          der anderen.
      courseA_collector_loops7:
        courseA_collector_loops7_a: Wenn Du nicht herausfindest, was als nächstes
          kommt, führe den Code aus und schau wo Laurel landet.
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: Wenn Du nicht herausfindest, was als nächstes
          kommt, führe den Code aus und schau wo Laurel landet.
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: Wenn Du nicht herausfindest, was als nächstes
          kommt, führe den Code aus und schau wo Laurel landet.
      courseA_collector_loops8:
        courseA_collector_loops8_a: Wenn du Probleme hast, diese Aufgabe zu lösen,
          versuche alle Bewegungen auf ein Blatt Papier zu zeichnen und dann ein Muster
          zu finden.
        courseA_collector_loops8_b: Versuche, diese Aufgabe in 3 einzelne Schritte
          aufzuteilen und für jeden eine eigene Schleife zu schreiben.
        courseA_collector_loops8_c: Vergiss nicht, du kannst einen Teil des Codes
          nach dem anderen schreiben, jedesmal auf "Ausführen" klicken, um zu sehen,
          wie du von dort weitermachen musst.
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: Wenn du Probleme hast, diese Aufgabe zu lösen,
          versuche alle Bewegungen auf ein Blatt Papier zu zeichnen und dann ein Muster
          zu finden.
        courseA_collector_loops8_b: Versuche, diese Aufgabe in 3 einzelne Schritte
          aufzuteilen und für jeden eine eigene Schleife zu schreiben.
        courseA_collector_loops8_c: Vergiss nicht, du kannst einen Teil des Codes
          nach dem anderen schreiben, jedesmal auf "Ausführen" klicken, um zu sehen,
          wie du von dort weitermachen musst.
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: Wenn du Probleme hast, diese Aufgabe zu lösen,
          versuche alle Bewegungen auf ein Blatt Papier zu zeichnen und dann ein Muster
          zu finden.
        courseA_collector_loops8_b: Versuche, diese Aufgabe in 3 einzelne Schritte
          aufzuteilen und für jeden eine eigene Schleife zu schreiben.
        courseA_collector_loops8_c: Vergiss nicht, du kannst einen Teil des Codes
          nach dem anderen schreiben, jedesmal auf "Ausführen" klicken, um zu sehen,
          wie du von dort weitermachen musst.
      courseA_collector_loops9:
        courseA_collector_loops9_a: 'Wenn du nicht gleich die besten Stellen für Schleifen
          findest, versuche den Code Schritt-für-Schritt zu schreiben und suche dann
          nach einem Muster. '
        courseA_collector_loops9_b: Versuche 2 deiner <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleifen in eine andere
          Schleife zu setzen um deinen Code kürzer zu machen!
      courseA_collector_loops9_2018:
        courseA_collector_loops9_a: 'Wenn du nicht gleich die besten Stellen für Schleifen
          findest, versuche den Code Schritt-für-Schritt zu schreiben und suche dann
          nach einem Muster. '
        courseA_collector_loops9_b: Versuche 2 deiner <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleifen in eine andere
          Schleife zu setzen um deinen Code kürzer zu machen!
      courseA_collector_loops9_2019:
        courseA_collector_loops9_a: 'Wenn du nicht gleich die besten Stellen für Schleifen
          findest, versuche den Code Schritt-für-Schritt zu schreiben und suche dann
          nach einem Muster. '
        courseA_collector_loops9_b: Versuche 2 deiner <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> Schleifen in eine andere
          Schleife zu setzen um deinen Code kürzer zu machen!
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: Versuche die Zahlen in den Schleifen
          zu ändern, wenn etwas falsch zu sein scheint.
        courseA_collector_loops_challenge1_b: Du brauchst keine Schleife verwenden,
          wenn du etwas nur einmal machst.
        courseA_collector_loops_challenge1_c: Wenn du anfängst, gibt es 6 Diamanten
          auf der rechten Seite der Höhle, aber du brauchst die Schätze dort nur 5
          mal einzusammeln, wenn du nach Süden gehst. Weißt du warum?
        courseA_collector_loops_challenge1_d: |-
          Das erste Programm sammelt die letzten 2 Diamanten nicht ein. Versuche einmal, ganz am Ende diesen Code einzusetzen:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: Versuche die Zahlen in den Schleifen
          zu ändern, wenn etwas falsch zu sein scheint.
        courseA_collector_loops_challenge1_b: Du brauchst keine Schleife verwenden,
          wenn du etwas nur einmal machst.
        courseA_collector_loops_challenge1_c: Wenn du anfängst, gibt es 6 Diamanten
          auf der rechten Seite der Höhle, aber du brauchst die Schätze dort nur 5
          mal einzusammeln, wenn du nach Süden gehst. Weißt du warum?
        courseA_collector_loops_challenge1_d: |-
          Das erste Programm sammelt die letzten 2 Diamanten nicht ein. Versuche einmal, ganz am Ende diesen Code einzusetzen:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: Versuche die Zahlen in den Schleifen
          zu ändern, wenn etwas falsch zu sein scheint.
        courseA_collector_loops_challenge1_b: Du brauchst keine Schleife verwenden,
          wenn du etwas nur einmal machst.
        courseA_collector_loops_challenge1_c: Wenn du anfängst, gibt es 6 Diamanten
          auf der rechten Seite der Höhle, aber du brauchst die Schätze dort nur 5
          mal einzusammeln, wenn du nach Süden gehst. Weißt du warum?
        courseA_collector_loops_challenge1_d: |-
          Das erste Programm sammelt die letzten 2 Diamanten nicht ein. Versuche einmal, ganz am Ende diesen Code einzusetzen:

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: Du brauchst nur einen Baustein zu verwenden
          um dies zu lösen.
        courseA_collector_loops_challenge2_a: Du kannst dich ein zweites Mal über
          den Pfad zurück bewegen, bevor du nach Süden gehst.
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: Versuche diesen Weg um zu einer Lösung
          zu kommen.
        courseA_collector_loops_challenge2kp_a: Kannst du Schleifen verwenden um diese
          Aufgabe zu lösen?
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: Versuche diesen Weg um zu einer Lösung
          zu kommen.
        courseA_collector_loops_challenge2kp_a: Kannst du Schleifen verwenden um diese
          Aufgabe zu lösen?
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: Versuche diesen Weg um zu einer Lösung
          zu kommen.
        courseA_collector_loops_challenge2kp_a: Kannst du Schleifen verwenden um diese
          Aufgabe zu lösen?
      courseA_collector_preLoops4:
        courseA_collector_preLoops4_a: Um den Schatz zu ergattern, raste zwei ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          Bausteine und einen ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          Baustein an den unteren Rand des Programms ein und klicke auf "Ausführen"!
      courseA_collector_preLoops5:
        courseA_collector_preLoops5_a: Du musst in zwei verschiedene Richtungen gehen,
          um auch nur ein Edelstein zu bekommen!
      courseA_collector_preLoops6:
        courseA_collector_preLoops6_a: Du benötigst zwei ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          Blöcke, um dieses Rätsel zu lösen.
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: |-
          Nachdem du auf ein Feld mit einem Schatz gelangt bist, nimm diesen Block um ihn einzusammeln.

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_loops1:
        courseA_harvester_loops1_a: |-
          Sobald du dich zu einem Maiskolben bewegt hast, benutze diesen Baustein um ihn auszuwählen!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops1_2019:
        courseA_harvester_loops1_a: |-
          Sobald du dich zu einem Maiskolben bewegt hast, benutze diesen Baustein um ihn auszuwählen!

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2:
        courseA_harvester_loops2_a: |-
          Dein Code wird **vier** `Gehe nach Westen`<xml><block type="maze_moveWest"/></xml> Bausteine haben.

          und **vier** `Pflücke Mais`<xml><block type="harvester_corn"/></xml> Bausteine.
        courseA_harvester_loops2_b: 'Wenn du immer noch Probleme hast, versuche, die
          Schritte laut auszusprechen. '
      courseA_harvester_loops2_2019:
        courseA_harvester_loops2_a: "Dein Code wird **vier** `Bewege nach Westen`
          haben.\n\n<xml><block type=\"maze_moveWest\"/></xml>\n\nBausteine und **vier**
          <xml>\n`pick corn`\n  <block type=\"harvester_corn\"/>\n</xml> Bausteine. "
        courseA_harvester_loops2_b: 'Wenn du immer noch Probleme hast, versuche, die
          Schritte laut auszusprechen. '
      courseA_harvester_loops3:
        courseA_harvester_loops3_a: |-
          Verwende einen 'wiederhole' Baustein wie diesen, um Dir zu helfen!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "Um Code zu wiederholen, nimm eine 'wiederholen'
          (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml>) Schleife und setze dann den
          Baustein, den du möchtest hinein. "
      courseA_harvester_loops3_2019:
        courseA_harvester_loops3_a: |-
          Verwende einen 'wiederhole' Baustein wie diesen, um Dir zu helfen!

          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">4</title>
            </block></xml>
        courseA_harvester_loops3_b: "Um Code zu wiederholen, nimm eine 'wiederholen'
          (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\"
          config=\"2-10\">4</title>\n  </block></xml>) Schleife und setze dann den
          Baustein, den du möchtest hinein. "
      courseA_harvester_loops4:
        courseA_harvester_loops4_a: Scheue dich nicht, `Ausführen` zu drücken, um
          zu sehen, was passiert!
        courseA_harvester_loops4_b: Wie viele Maiskolben gibt es? Wie oft wiederholt
          sich Dein Code?
      courseA_harvester_loops4_2019:
        courseA_harvester_loops4_a: Scheue dich nicht, `Ausführen` zu drücken, um
          zu sehen, was passiert!
        courseA_harvester_loops4_b: Wie viele Maiskolben gibt es? Wie oft wiederholt
          sich Dein Code?
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: 'Wenn Du nicht mehr weiter kommst, teile die Aufgabe
          in 2 Teile und löse sie nacheinander: Der eine Teil ist vor der Ecke und
          der zweite nach der Ecke.'
        courseA_harvester_loops5_b: |-
          Dein endgültiger Code wird **eine** `wiederhole`<xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml> Schleife, **einen** `Gehe nach Süden` <xml><block type="maze_moveSouth" limit="1"/></xml> Baustein und **einen** `Gehe nach Osten`<xml><block type="maze_moveEast" limit="1"/> </xml> Baustein haben.
        courseA_harvester_loops5_c: Benutze diesen Weg, um den ganzen Mais zu pflücken!
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: 'Wenn Du nicht mehr weiter kommst, teile die Aufgabe
          in 2 Teile und löse sie nacheinander: Der eine Teil ist vor der Ecke und
          der zweite nach der Ecke.'
        courseA_harvester_loops5_b: |-
          Dein endgültiger Code wird **eine** `wiederhole`<xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
              </block></xml> Schleife, **einen** `Gehe nach Süden` <xml><block type="maze_moveSouth" limit="1"/></xml> Baustein und **einen** `Gehe nach Osten`<xml><block type="maze_moveEast" limit="1"/> </xml> Baustein haben.
        courseA_harvester_loops5_c: Benutze diesen Weg, um den ganzen Mais zu pflücken!
      courseA_harvester_loops5a:
        courseA_harvester_loops5a_a: |-
          Du brauchst eine `wiederhole`<xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> Schleife nach einer weiteren.
        courseA_harvester_loops5a_b: Eine Schleife wiederholt `Gehe nach Süden`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, und die andere wiederholt `Gehe
          nach Osten` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Benutze diesen Pfad, um dich in die eine Richtung
          zu bewegen, und dann in die andere.
      courseA_harvester_loops5a_2019:
        courseA_harvester_loops5a_a: |-
          Du brauchst eine `wiederhole`<xml> <block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">6</title>
            </block></xml> Schleife nach einer weiteren.
        courseA_harvester_loops5a_b: Eine Schleife wiederholt `Gehe nach Süden`<xml><block
          type="maze_moveSouth" limit="1"/></xml>, und die andere wiederholt `Gehe
          nach Osten` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Benutze diesen Pfad, um dich in die eine Richtung
          zu bewegen, und dann in die andere.
      courseA_harvester_loops5b:
        courseA_harvester_loops5b_a: Drücke `Ausführen` und schaue, was passiert!
        courseA_harvester_loops5b_b: Wiederholen sich deine Schleifen die richtige
          Anzahl von Wiederholungen?
        courseA_harvester_loops5b_c: Bewege dich in die eine Richtung, dann in die
          andere auf diesem Weg.
      courseA_harvester_loops5b_2019:
        courseA_harvester_loops5b_a: Drücke `Ausführen` und schaue, was passiert!
        courseA_harvester_loops5b_b: Wiederholen sich deine Schleifen die richtige
          Anzahl von Wiederholungen?
        courseA_harvester_loops5b_c: Bewege dich in die eine Richtung, dann in die
          andere auf diesem Weg.
      courseA_harvester_loops6:
        courseA_harvester_loops6_b: Dies ist der Weg, den du gehen solltest, um den
          ganzen Mais zu pflücken.
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_b: Dies ist der Weg, den du gehen solltest, um den
          ganzen Mais zu pflücken.
      courseA_harvester_loops7:
        courseA_harvester_loops7_a: |-
          Du brauchst zwei `wiederhole` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>Schleifen hintereinander!
        courseA_harvester_loops7_b: Verwende zwei Schleifen, um diesem Weg zu folgen.
      courseA_harvester_loops7_2019:
        courseA_harvester_loops7_a: |-
          Du brauchst zwei `wiederhole` <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>Schleifen hintereinander!
        courseA_harvester_loops7_b: Verwende zwei Schleifen, um diesem Weg zu folgen.
      courseA_harvester_loops9:
        courseA_harvester_loops9_a: Unterteile dieses Rätsel in drei verschiedene
          Teile. Ein Teil zur ersten Ecke, ein Teil zur zweiten Ecke und ein Teil
          zum Ende.
        courseA_harvester_loops9_b: Habe keine Angst, den Code nach jedem Teil auszuführen,
          um zu sehen, was passiert!
        courseA_harvester_loops9_c: Folge diesen Weg, um den ganzen Mais zu pflücken.
      courseA_harvester_loops9_2019:
        courseA_harvester_loops9_a: Unterteile dieses Rätsel in drei verschiedene
          Teile. Ein Teil zur ersten Ecke, ein Teil zur zweiten Ecke und ein Teil
          zum Ende.
        courseA_harvester_loops9_b: Habe keine Angst, den Code nach jedem Teil auszuführen,
          um zu sehen, was passiert!
        courseA_harvester_loops9_c: Folge diesen Weg, um den ganzen Mais zu pflücken.
      courseA_harvester_seq1:
        courseA_harvester_seq1_a: |-
          Verwende diesen Baustein, um den Mais zu pflücken, wenn die Erntemaschine ihn findet!

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          Der Erntemaschine muss sich dreimal nach Osten bewegen, um zum Mais zu gelangen. Verwende diesen Baustein:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10:
        courseA_harvester_seq10_a: Wenn Du nicht mehr weiter weißt, versuche zuerst
          einmal die einzelnen Schritte auf ein Blatt Papier zu schreiben.
        courseA_harvester_seq10_b: Du benötigst`Gehe nach Osten`, dann `Gehe nach
          Norden`. Beides zweimal. Vergiss nicht den Mais zu pflücken!
        courseA_harvester_seq10_c: Versuche, diesen Weg zu benutzen, um den gesamten
          Mais zu pflücken.
      courseA_harvester_seq10_2019:
        courseA_harvester_seq10_a: Wenn Du nicht mehr weiter weißt, versuche zuerst
          einmal die einzelnen Schritte auf ein Blatt Papier zu schreiben.
        courseA_harvester_seq10_b: Du benötigst`Gehe nach Osten`, dann `Gehe nach
          Norden`. Beides zweimal. Vergiss nicht den Mais zu pflücken!
        courseA_harvester_seq10_c: Versuche, diesen Weg zu benutzen, um den gesamten
          Mais zu pflücken.
      courseA_harvester_seq13:
        courseA_bee_seq1_a: |-
          Verwenden Sie diesen Baustein, um Mais zu pflücken, sobald der Mähdrescher ihn erreicht hat.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq13_2019:
        courseA_bee_seq1_a: |-
          Verwenden Sie diesen Baustein, um Mais zu pflücken, sobald der Mähdrescher ihn erreicht hat.

          <xml>
            <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq1_2019:
        courseA_harvester_seq1_a: |-
          Verwende diesen Baustein, um den Mais zu pflücken, wenn die Erntemaschine ihn findet!

          <xml>
            <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          Der Erntemaschine muss sich dreimal nach Osten bewegen, um zum Mais zu gelangen. Verwende diesen Baustein:

          <xml>
            <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq2:
        courseA_harvester_seq2_a: Vergiss nicht, den Mais mit <xml><block type="harvester_corn"/></xml>
          zu pflücken!
        courseA_harvester_seq2_b: Versuche einmal, die einzelnen Schritte auf ein
          Blatt Papier zu schreiben um eine Lösung zu finden!
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_a: Vergiss nicht, den Mais mit <xml><block type="harvester_corn"/></xml>
          zu pflücken!
        courseA_harvester_seq2_b: Versuche einmal, die einzelnen Schritte auf ein
          Blatt Papier zu schreiben um eine Lösung zu finden!
      courseA_harvester_seq3:
        courseA_harvester_seq3_a: |-
          Hast du daran gedacht, diesen Baustein zu verwenden?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Sag die Schritte laut und schau, ob es dir hilft,
          die Antwort zu finden.
      courseA_harvester_seq3_2019:
        courseA_harvester_seq3_a: |-
          Hast du daran gedacht, diesen Baustein zu verwenden?

          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Sag die Schritte laut und schau, ob es dir hilft,
          die Antwort zu finden.
      courseA_harvester_seq4:
        courseA_harvester_seq4_a: Wie viele Felder gibt es zwischen dem Mähdrescher
          und dem Mais? Wie viele Bausteine befinden sich bereits in Deinem Arbeitsbereich?
        courseA_harvester_seq4_b: |-
          Du brauchst fünf `Gehe nach Osten` Bausteine und einen `Pflücke Mais` Baustein:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq4_2019:
        courseA_harvester_seq4_a: Wie viele Felder gibt es zwischen dem Mähdrescher
          und dem Mais? Wie viele Bausteine befinden sich bereits in Deinem Arbeitsbereich?
        courseA_harvester_seq4_b: |-
          Du brauchst fünf `Gehe nach Osten` Bausteine und einen `Pflücke Mais` Baustein:

          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5:
        courseA_harvester_seq5_a: Welcher Baustein bewegt die Erntemaschine in die
          falsche Richtung?
        courseA_harvester_seq5_b: Du musst einen Baustein entfernen.
        courseA_harvester_seq5_c: |-
          Wirf diesen Baustein in den Müll!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq5_2019:
        courseA_harvester_seq5_a: Welcher Baustein bewegt die Erntemaschine in die
          falsche Richtung?
        courseA_harvester_seq5_b: Du musst einen Baustein entfernen.
        courseA_harvester_seq5_c: |-
          Wirf diesen Baustein in den Müll!

          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6:
        courseA_harvester_seq6_a: Wenn du festsitzt, versuche die Schritte laut auszusprechen.
          Es könnte dir helfen, den richtigen Weg zu finden.
      courseA_harvester_seq6_2019:
        courseA_harvester_seq6_a: Wenn du festsitzt, versuche die Schritte laut auszusprechen.
          Es könnte dir helfen, den richtigen Weg zu finden.
      courseA_harvester_seq7:
        courseA_harvester_seq7_a: 'Teile die Aufgabe in zwei Teile und löse sie nacheinander:
          Der eine Teil ist vor der Ecke und der zweite nach der Ecke.'
        courseA_harvester_seq7_b: Hast du Probleme? Dies ist der Weg, den der Mähdrescher
          gehen sollte.
      courseA_harvester_seq7_2019:
        courseA_harvester_seq7_a: 'Teile die Aufgabe in zwei Teile und löse sie nacheinander:
          Der eine Teil ist vor der Ecke und der zweite nach der Ecke.'
        courseA_harvester_seq7_b: Hast du Probleme? Dies ist der Weg, den der Mähdrescher
          gehen sollte.
      courseA_harvester_seq8:
        courseA_harvester_seq8_a: Am Ende müsstest du **4** Gehe-Bausteiene und **2**
          Pflücke-Bausteien verwendet haben.
      courseA_harvester_seq8_2019:
        courseA_harvester_seq8_a: Am Ende müsstest du **4** Gehe-Bausteiene und **2**
          Pflücke-Bausteien verwendet haben.
      courseA_harvester_seq9:
        courseA_harvester_seq9_a: Führe den Code ein paar Mal aus, um zu sehen, was
          passiert. Wo hört der Mähdrescher auf?
        courseA_harvester_seq9_b: Vergiss nicht, den ganzen Mais zu pflücken! Du musst
          **3** Maiskolben pflücken.
        courseA_harvester_seq9_c: Du solltest diesen Weg gehen, um den ganzen Mais
          zu pflücken.
      courseA_harvester_seq9_2019:
        courseA_harvester_seq9_a: Führe den Code ein paar Mal aus, um zu sehen, was
          passiert. Wo hört der Mähdrescher auf?
        courseA_harvester_seq9_b: Vergiss nicht, den ganzen Mais zu pflücken! Du musst
          **3** Maiskolben pflücken.
        courseA_harvester_seq9_c: Du solltest diesen Weg gehen, um den ganzen Mais
          zu pflücken.
      courseA_maze_ramp2_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp2_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3a_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3a_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3b_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveWest">
                      <next>
                        <block type="maze_moveWest"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp3b_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveWest">
                      <next>
                        <block type="maze_moveWest"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp4a_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp4a_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp5a_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_ramp5a_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseA_maze_seq1:
        courseA_maze_seq1_a: |-
          Wenn der Vogel sich nicht bewegt, dann überprüfe ob die Blöcke richtig unter <xml>
            <block type="when_run"/>
          </xml> eingerastet sind
        courseA_maze_seq1_b: |-
          Der Vogel muss sich 3 mal in Richtung Westen bewegen. Nimm diesen Block:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10:
        courseA_maze_seq10_a: Wenn Du nicht mehr weiter weißt, versuche zuerst einmal
          die einzelnen Schritte auf ein Blatt Papier zu schreiben.
        courseA_maze_seq10_b: Du musst in 3 Richtungen gehen um diese Aufgabe zu lösen.
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: Wenn Du nicht mehr weiter weißt, versuche zuerst einmal
          die einzelnen Schritte auf ein Blatt Papier zu schreiben.
        courseA_maze_seq10_b: Du musst in 3 unterschiedliche Richtungen gehen um diese
          Aufgabe zu lösen.
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: Wenn Du nicht mehr weiter weißt, versuche zuerst einmal
          die einzelnen Schritte auf ein Blatt Papier zu schreiben.
        courseA_maze_seq10_b: Du musst in 3 unterschiedliche Richtungen gehen um diese
          Aufgabe zu lösen.
      courseA_maze_seq13:
        courseA_maze_seq13_a: Wenn dir der Pfad, den du brauchst, nicht klar ist,
          fahre mit deinem Finger den Weg vom Vogel zum Schwein nach.
        courseA_maze_seq13_b: Hab keine Angst davor, Fehler zu machen! Füge Blöcke
          hinzu und versuche dann den Code auszuführen um zu sehen, was passiert.
        courseA_maze_seq13_c: Diese <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> Blöcke helfen dir näher an das Schwein zu kommen.
      courseA_maze_seq13_2018:
        courseA_maze_seq13_a: Wenn dir der Pfad, den du brauchst, nicht klar ist,
          fahre mit deinem Finger den Weg vom Vogel zum Schwein nach.
        courseA_maze_seq13_b: Hab keine Angst davor, Fehler zu machen! Füge Blöcke
          hinzu und versuche dann den Code auszuführen um zu sehen, was passiert.
        courseA_maze_seq13_c: Diese <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> Blöcke helfen dir näher an das Schwein zu kommen.
      courseA_maze_seq13_2019:
        courseA_maze_seq13_a: Wenn dir der Pfad, den du brauchst, nicht klar ist,
          fahre mit deinem Finger den Weg vom Vogel zum Schwein nach.
        courseA_maze_seq13_b: Hab keine Angst davor, Fehler zu machen! Füge Blöcke
          hinzu und versuche dann den Code auszuführen um zu sehen, was passiert.
        courseA_maze_seq13_c: |-
          Diese <xml><block type="maze_moveNorth"/></xml>

          <xml><block type="maze_moveEast"/></xml>

          Bausteine helfen dir, dem Schwein näher zu kommen.
      courseA_maze_seq1_2018:
        courseA_maze_seq1_a: |-
          Wenn der Vogel sich nicht bewegt, dann überprüfe ob die Blöcke richtig unter <xml>
            <block type="when_run"/>
          </xml> eingerastet sind
        courseA_maze_seq1_b: |-
          Der Vogel muss sich 3 mal in Richtung Westen bewegen. Nimm diesen Block:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019:
        courseA_maze_seq1_a: |-
          Wenn der Vogel sich nicht bewegt, dann überprüfe ob die Blöcke richtig unter <xml>
            <block type="when_run"/>
          </xml> eingerastet sind
        courseA_maze_seq1_b: |-
          Der Vogel muss sich 3 mal in Richtung Westen bewegen. Nimm diesen Block:

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2:
        courseA_maze_seq2_a: In diesem Programm fehlt ein Block. Findest du heraus,
          welcher?
        courseA_maze_seq2_b: Versuche zuerst einmal den Code auszuführen um zu sehen,
          wo der Vogel landet. Wohin muss er dann von dort aus noch gehen?
      courseA_maze_seq3:
        courseA_maze_seq3_a: Einer der Blöcke bewegt den Vogel in die falsche Richtung.
          Kannst Du herausfinden welcher und ihn mit dem richtigen Block ersetzen?
        courseA_maze_seq3_b: Versuche auf Schritt zu klicken um herauszufinden, an
          welcher Stelle das Programm schief läuft. Ist es beim ersten Schritt? Beim
          zweiten?
        courseA_maze_seq3_c: Dieser <xml><block type="maze_moveNorth"/></xml> Block
          scheint den Vogel nicht in die richtige Richtung zu bewegen. Kannst du ihn
          mit einem anderen Block ersetzen?
      courseA_maze_seq4:
        courseA_maze_seq4_a: Wenn du Schwierigkeiten hast, versuche den richtigen
          Weg herauszufinden und entfernen dann den Block der nicht passt.
        courseA_maze_seq4_b: Versuche den Code auszuführen so wie er jetzt ist. Funktioniert
          etwas nicht? Welchen Block kannst du entfernen? Wie kannst du es in Ordnung
          bringen?
      courseA_maze_seq5:
        courseA_maze_seq5_a: Versuche einmal, die einzelnen Schritte auf ein Blatt
          Papier zu schreiben um eine Lösung zu finden!
        courseA_maze_seq5_b: Du brauchst 2 Blöcke, die in verschiedene Richtungen
          zeigen.
      courseA_maze_seq5_2018:
        '1': Versuche einmal, die einzelnen Schritte auf ein Blatt Papier zu schreiben
          um eine Lösung zu finden!
        '2': |-
          Du musst diesen Block verwenden:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5_2019:
        '1': Versuche einmal, die einzelnen Schritte auf ein Blatt Papier zu schreiben
          um eine Lösung zu finden!
        '2': |-
          Du musst diesen Block verwenden:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018:
        '1': Sag die Schritte laut und schau, ob es dir hilft, die Antwort zu finden.
      courseA_maze_seq5a_2019:
        '1': Sag die Schritte laut und schau, ob es dir hilft, die Antwort zu finden.
      courseA_maze_seq6:
        courseA_maze_seq6_a: In deinem fertigen Code sollten 3 Bewegung-Blöcke sein.
        courseA_maze_seq6_b: 'Wenn Du nicht mehr weiter kommst, teile die Aufgabe
          in 2 Teile und löse sie nacheinander: Der eine Teil ist vor der Ecke und
          der zweite nach der Ecke.'
      courseA_maze_seq6_2018:
        courseA_maze_seq6_a: In deinem fertigen Code sollten 3 Bewegung-Blöcke sein.
        courseA_maze_seq6_b: 'Wenn Du nicht mehr weiter kommst, teile die Aufgabe
          in 2 Teile und löse sie nacheinander: Der eine Teil ist vor der Ecke und
          der zweite nach der Ecke.'
      courseA_maze_seq6_2019:
        courseA_maze_seq6_a: In deinem fertigen Code sollten 3 Bewegung-Blöcke sein.
        courseA_maze_seq6_b: 'Wenn Du nicht mehr weiter kommst, teile die Aufgabe
          in 2 Teile und löse sie nacheinander: Der eine Teil ist vor der Ecke und
          der zweite nach der Ecke.'
      courseA_maze_seq7:
        courseA_maze_seq7_a: Es gibt einen Block den du noch hinzufügen musst um den
          Vogel zum Schwein zu bringen.
        courseA_maze_seq7_b: |-
          Wenn du nicht herausfindest was zu tun ist, versuche doch folgendes:
          Male die Aufgabe auf ein Papier und fahre mit den Fingern den Weg nach, um zu sehen in welche Richtung du dich bewegen musst.
      courseA_maze_seq8:
        courseA_maze_seq8_a: Wenn Du nicht mehr weiter weißt, versuche einmal das
          Bild auf ein Blatt Papier zu malen, um zu sehen in welche Richtung sich
          der Vogel bewegen muss.
      courseA_maze_seq8_2018:
        courseA_maze_seq8_a: Wenn Du nicht mehr weiter weißt, versuche einmal das
          Bild auf ein Blatt Papier zu malen, um zu sehen in welche Richtung sich
          der Vogel bewegen muss.
      courseA_maze_seq8_2019:
        courseA_maze_seq8_a: Wenn Du nicht mehr weiter weißt, versuche einmal das
          Bild auf ein Blatt Papier zu malen, um zu sehen in welche Richtung sich
          der Vogel bewegen muss.
      courseA_maze_seq9:
        courseA_maze_seq9_a: Du kommst nicht weiter? Fahre den Weg, den der Vogel
          nehmen muss, mit deinem Finger nach.
        courseA_maze_seq9_b: |-
          Wenn du dir nicht sicher bist was zu tun ist, versuche Folgendes:
          Drücke "Zurücksetzen" und lass dann den Code nochmals ausführen um zu sehen, was schief läuft.
        courseA_maze_seq9_c: Du musst dich in 3 Richtungen bewegen um diese Aufgabe
          zu lösen.
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: Es gibt zwei Möglichkeiten um diese Aufgabe
          zu lösen.
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: Es gibt zwei Möglichkeiten um diese Aufgabe
          zu lösen.
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: Es gibt zwei Möglichkeiten um diese Aufgabe
          zu lösen.
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: 'Versuche die Felder mit deinem Finger nachzuzählen.
          Denke daran: Das Feld von dem du startest musst du nicht mitzählen!'
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: 'Versuche die Felder mit deinem Finger nachzuzählen.
          Denke daran: Das Feld von dem du startest musst du nicht mitzählen!'
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: 'Versuche die Felder mit deinem Finger nachzuzählen.
          Denke daran: Das Feld von dem du startest musst du nicht mitzählen!'
      courseA_playLab_events2:
        courseA_playLab_events2_a: Suche einen Baustein mit dem der Hund etwas sagen
          kann.
        courseA_playLab_events2_b: |-
          Das ist der Code, den du brauchst um die Aufgabe zu lösen:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: Suche einen Baustein mit dem der Hund etwas sagen
          kann.
        courseA_playLab_events2_b: |-
          Das ist der Code, den du brauchst um die Aufgabe zu lösen:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: Suche einen Baustein mit dem der Hund etwas sagen
          kann.
        courseA_playLab_events2_b: |-
          Das ist der Code, den du brauchst um die Aufgabe zu lösen:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3:
        courseA_playLab_events3_a: |-
          Ziehe diesen Block <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> in den Arbeitsbereich und lass ihn am Ende von <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> einschnappen
        courseA_playLab_events3_b: Wenn du dein Programm geschrieben hast, vergiss
          nicht die Pfeiltaste nach links zu drücken um Jorge zur Fahne zu bewegen.
          Wenn die Fahne grün wird bist du angekommen!
      courseA_playLab_events3_2018:
        courseA_playLab_events3_a: |-
          Ziehe diesen Block <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> in den Arbeitsbereich und lass ihn am Ende von <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> einschnappen
        courseA_playLab_events3_b: Wenn du dein Programm geschrieben hast, vergiss
          nicht die Pfeiltaste nach links zu drücken um Jorge zur Fahne zu bewegen.
          Wenn die Fahne grün wird bist du angekommen!
      courseA_playLab_events3_2019:
        courseA_playLab_events3_a: |-
          Ziehe diesen Block <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> in den Arbeitsbereich und lass ihn am Ende von <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> einschnappen
        courseA_playLab_events3_b: Wenn du dein Programm geschrieben hast, vergiss
          nicht die Pfeiltaste nach links zu drücken um Jorge zur Fahne zu bewegen.
          Wenn die Fahne grün wird bist du angekommen!
      courseA_playLab_events4:
        courseA_playLab_events4_a: |-
          Dies ist der Ereignis-Block, den du brauchen wirst, um Jorge nach rechts zu bewegen:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          Das ist der Code, den du brauchen wirst um diese Aufgabe zu lösen:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2018:
        courseA_playLab_events4_a: |-
          Dies ist der Ereignis-Block, den du brauchen wirst, um Jorge nach rechts zu bewegen:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          Das ist der Code, den du brauchen wirst um diese Aufgabe zu lösen:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events4_2019:
        courseA_playLab_events4_a: |-
          Dies ist der Ereignis-Block, den du brauchen wirst, um Jorge nach rechts zu bewegen:

          <xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml>
        courseA_playLab_events4_b: |-
          Das ist der Code, den du brauchen wirst um diese Aufgabe zu lösen:

          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml>
      courseA_playLab_events5:
        courseA_playLab_events5_a: "Dies sind die Ereignis-Blöcke, die du brauchen
          wirst, um Jorge nach oben und unten zu bewegen:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">up</title>\n  </block></xml>\n\nund \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Weißt du, dass du die Taste für den Pfeil im Ereignis-Block ändern kannst, indem du auf das Bild im Block klickst und eine andere Taste auswählst?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018:
        courseA_playLab_events5_a: "Dies sind die Ereignis-Blöcke, die du brauchen
          wirst, um Jorge nach oben und unten zu bewegen:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">up</title>\n  </block></xml>\n\nund \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Weißt du, dass du die Taste für den Pfeil im Ereignis-Block ändern kannst, indem du auf das Bild im Block klickst und eine andere Taste auswählst?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019:
        courseA_playLab_events5_a: "Dies sind die Ereignis-Blöcke, die du brauchen
          wirst, um Jorge nach oben und unten zu bewegen:\n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">up</title>\n  </block></xml>\n\nund \n\n<xml><block
          type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>"
        courseA_playLab_events5_b: |-
          Weißt du, dass du die Taste für den Pfeil im Ereignis-Block ändern kannst, indem du auf das Bild im Block klickst und eine andere Taste auswählst?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6:
        courseA_playLab_events6_a: |-
          Dies ist der Ereignis-Block, den du brauchst um Jorge etwas machen zu lassen, wenn du auf ihn klickst:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Das ist der Block, den du brauchst um den Hintergrund zu ändern:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Das ist der Block, den du brauchst um einen zufälligen Ton abzuspielen:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2018:
        courseA_playLab_events6_a: |-
          Dies ist der Ereignis-Block, den du brauchst um Jorge etwas machen zu lassen, wenn du auf ihn klickst:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Das ist der Block, den du brauchst um den Hintergrund zu ändern:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Das ist der Block, den du brauchst um einen zufälligen Ton abzuspielen:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events6_2019:
        courseA_playLab_events6_a: |-
          Dies ist der Ereignis-Block, den du brauchst um Jorge etwas machen zu lassen, wenn du auf ihn klickst:

          <xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml>
        courseA_playLab_events6_b: |-
          Das ist der Block, den du brauchst um den Hintergrund zu ändern:

          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml>
        courseA_playLab_events6_c: |-
          Das ist der Block, den du brauchst um einen zufälligen Ton abzuspielen:

          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml>
      courseA_playLab_events7:
        courseA_playLab_events7_a: |-
          Nimm diesen Block um zu regeln was passiert, wenn die Figuren kollidieren.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: |-
          Nimm diesen Block um zu regeln was passiert, wenn die Figuren kollidieren.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: |-
          Nimm diesen Block um zu regeln was passiert, wenn die Figuren kollidieren.

          <xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml>
      courseA_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "Mach, dass Waddles, der Pinguin, erscheint,
          wenn du auf Robin klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Mach, dass Buu, der Geist, erscheint,
          wenn du auf Waddles klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Mach, dass Jayden, das wuschelige Monster,
          erscheint, wenn du auf Buu klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Mach, dass Spiff, der Roboter, erscheint,
          wenn du auf das Monster klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Und zuletzt, mach, dass Wendel, der
          Zauberer, erscheint, wenn du auf Spiff klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2018:
        courseA_playlab_events_challenge1_a: "Mach, dass Waddles, der Pinguin, erscheint,
          wenn du auf Robin klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Mach, dass Buu, der Geist, erscheint,
          wenn du auf Waddles klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Mach, dass Jayden, das wuschelige Monster,
          erscheint, wenn du auf Buu klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Mach, dass Spiff, der Roboter, erscheint,
          wenn du auf das Monster klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Und zuletzt, mach, dass Wendel, der
          Zauberer, erscheint, wenn du auf Spiff klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge1_2019:
        courseA_playlab_events_challenge1_a: "Mach, dass Waddles, der Pinguin, erscheint,
          wenn du auf Robin klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_b: "Mach, dass Buu, der Geist, erscheint,
          wenn du auf Waddles klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_c: "Mach, dass Jayden, das wuschelige Monster,
          erscheint, wenn du auf Buu klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_d: "Mach, dass Spiff, der Roboter, erscheint,
          wenn du auf das Monster klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n
          \     </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge1_e: "Und zuletzt, mach, dass Wendel, der
          Zauberer, erscheint, wenn du auf Spiff klickst!\n\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "Du kannst einen Vogel zum singen bringen.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Du kannst den Roboter piepsen lassen.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Du kannst das grantige Monster knurren lassen.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_a: "Du kannst einen Vogel zum singen bringen.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Du kannst den Roboter piepsen lassen.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Du kannst das grantige Monster knurren lassen.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_a: "Du kannst einen Vogel zum singen bringen.\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n
          \   <next>\n          <block type=\"studio_saySprite\">\n            <title
          name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_b: "Du kannst den Roboter piepsen lassen.\n\n<xml>\n
          \ <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      \n          <block type=\"studio_playSound\">\n            <title
          name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n  </block></xml>"
        courseA_playlab_events_challenge2_c: |-
          Du kannst das grantige Monster knurren lassen.

          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml>
      courseB_Scrat_ramp1_2018:
        '1': Wenn Scrat nicht das tut, was du willst, vergewissere dich, dass beide
          Blöcke vollständig zusammengeklickt wurden und klicke dann wieder auf "Ausführen".
        '2': Hab keine Angst, einen Fehler zu machen! Probiere etwas aus, und wenn
          es nicht funktioniert, versuche etwas anderes!
      courseB_Scrat_ramp1_2019:
        '1': Wenn Scrat nicht das tut, was du willst, vergewissere dich, dass beide
          Blöcke vollständig zusammengeklickt wurden und klicke dann wieder auf "Ausführen".
        '2': Hab keine Angst, einen Fehler zu machen! Probiere etwas aus, und wenn
          es nicht funktioniert, versuche etwas anderes!
      courseB_Scrat_ramp2_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp2_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3a_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3a_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveNorth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3b_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp3b_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveSouth">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp4a_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp4a_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveEast">
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveSouth"/>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp5a_2018:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_Scrat_ramp5a_2019:
        '1': |-
          Dein Code sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="maze_moveWest">
                  <next>
                    <block type="maze_moveWest">
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_artist_loops2:
        courseB_artist_loops2_a: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: Wenn du die Schleife mehr als 4 mal wiederholen möchtest,
          kannst du die Zahl oben im Block ändern.
      courseB_artist_loops3_2018:
        courseB_artist_loops3_a: |-
          Denke daran, eine `wiederhole` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> Schleife für besseren Code zu verwenden!
      courseB_artist_loops3_2019:
        courseB_artist_loops3_a: |-
          Denke daran, eine `wiederhole` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml> Schleife für besseren Code zu verwenden!
      courseB_artist_loops9:
        courseB_artist_loops9_c: Du weißt nicht, wohin du die Schleife setzen musst?
          Versuche den Code Schritt-für-Schritt zu schreiben und suche dann ein Muster.
      courseB_artist_loops9_2018:
        courseB_artist_loops9_c: Du weißt nicht, wohin du die Schleife setzen musst?
          Versuche den Code Schritt-für-Schritt zu schreiben und suche dann ein Muster.
      courseB_artist_loops9_2019:
        courseB_artist_loops9_c: Du weißt nicht, wohin du die Schleife setzen musst?
          Versuche den Code Schritt-für-Schritt zu schreiben und suche dann ein Muster.
      courseB_collector_loops2:
        courseB_collector_loops2_a: Du musst dich zuerst bewegen, dann kannst du die
          Schätze einsammeln.
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: Du musst dich zuerst bewegen, dann kannst du die
          Schätze einsammeln.
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: Du musst dich zuerst bewegen, dann kannst du die
          Schätze einsammeln.
      courseB_collector_loops4:
        courseB_collector_loops4_b: Wenn Du verändern möchtest, wie weit Laurel geht,
          dann ändere die Zahl der Wiederholungen in der Schleife.
      courseB_collector_loops4_2018:
        courseB_collector_loops4_b: Wenn Du verändern möchtest, wie weit Laurel geht,
          dann ändere die Zahl der Wiederholungen in der Schleife.
      courseB_collector_loops4_2019:
        courseB_collector_loops4_b: Wenn Du verändern möchtest, wie weit Laurel geht,
          dann ändere die Zahl der Wiederholungen in der Schleife.
      courseB_collector_loops_challenge1:
        courseB_collector_loops_challenge1_d: |-
          Versuche dies!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge1_2018:
        courseB_collector_loops_challenge1_d: |-
          Versuche dies!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge1_2019:
        courseB_collector_loops_challenge1_d: |-
          Versuche dies!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_simplified">
                  <title name="TIMES">5</title>
                  <statement name="DO">
                    <block type="maze_moveSouth">
                      <next>
                        <block type="collector_collect"/>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveEast">
                      <next>
                        <block type="maze_moveEast">
                          <next>
                            <block type="controls_repeat_simplified">
                              <title name="TIMES">5</title>
                              <statement name="DO">
                                <block type="collector_collect">
                                  <next>
                                    <block type="maze_moveNorth"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_moveEast">
                                  <next>
                                    <block type="maze_moveEast">
                                      <next>
                                        <block type="controls_repeat_simplified">
                                          <title name="TIMES">5</title>
                                          <statement name="DO">
                                            <block type="maze_moveSouth">
                                              <next>
                                                <block type="collector_collect"/>
                                              </next>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: Wenn etwas schief läuft, versuche die
          Fehler zu finden und zu beseitigen. Gib nicht auf!
        courseB_collector_loops_challenge2a_b: Schau dir diese Möglichkeit an um durch
          das Labyrinth zu kommen. Siehst du ein Muster, das du wiederholen kannst?
        courseB_collector_loops_challenge2a_c: Um alle Schätze einzusammeln musst
          du entweder zwei <xml> <block type="collector_collect"/></xml> Bausteine
          in deine Schleife setzen oder den Baustein in einen eigenen 'Wiederholen'
          Baustein setzen.
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: Wenn etwas schief läuft, versuche die
          Fehler zu finden und zu beseitigen. Gib nicht auf!
        courseB_collector_loops_challenge2a_b: Schau dir diese Möglichkeit an um durch
          das Labyrinth zu kommen. Siehst du ein Muster, das du wiederholen kannst?
        courseB_collector_loops_challenge2a_c: Um alle Schätze einzusammeln musst
          du entweder zwei <xml> <block type="collector_collect"/></xml> Bausteine
          in deine Schleife setzen oder den Baustein in einen eigenen 'Wiederholen'
          Baustein setzen.
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: Wenn etwas schief läuft, versuche die
          Fehler zu finden und zu beseitigen. Gib nicht auf!
        courseB_collector_loops_challenge2a_b: Schau dir diese Möglichkeit an um durch
          das Labyrinth zu kommen. Siehst du ein Muster, das du wiederholen kannst?
        courseB_collector_loops_challenge2a_c: Um alle Schätze einzusammeln musst
          du entweder zwei <xml> <block type="collector_collect"/></xml> Bausteine
          in deine Schleife setzen oder den Baustein in einen eigenen 'Wiederholen'
          Baustein setzen.
      courseB_iceage_loops1:
        courseB_iceage_loops1_a: Vorsicht bei gebrochenem Eis! Scrat fällt gleich
          durch!
        courseB_iceage_loops1_b: |-
          Du musst diesen Block benutzen:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops10:
        courseB_iceage_loops10_a: Vorsicht bei gebrochenem Eis! Scrat fällt dort ins
          Wasser!
        courseB_iceage_loops10_c: Das ist ein langes Rätsel! Folge diesem Weg.
      courseB_iceage_loops10_2019:
        courseB_iceage_loops10_a: Vorsicht bei gebrochenem Eis! Scrat fällt dort ins
          Wasser!
        courseB_iceage_loops10_c: Das ist ein langes Rätsel! Folge diesem Weg.
      courseB_iceage_loops1_2019:
        courseB_iceage_loops1_a: Vorsicht bei gebrochenem Eis! Scrat fällt gleich
          durch!
        courseB_iceage_loops1_b: |-
          Du musst diesen Block benutzen:

          <xml><block type="maze_moveEast"/></xml>
      courseB_iceage_loops2:
        courseB_iceage_loops2_b: Wenn du nicht weiterkommst, versuche die Schritte
          laut zu sagen.
        courseB_iceage_loops2_c: Folgt diesem Weg, um Scrat zur Eichel zu bringen.
      courseB_iceage_loops2_2019:
        courseB_iceage_loops2_b: Wenn du nicht weiterkommst, versuche die Schritte
          laut zu sagen.
        courseB_iceage_loops2_c: Folgt diesem Weg, um Scrat zur Eichel zu bringen.
      courseB_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Verwende diesen neuen Baustein! <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
      courseB_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Benutze diesen neuen Baustein!
           <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">5</title>
              </block></xml>
        courseB_iceage_loops3_b: |-
          Um Code zu wiederholen, nimm eine 'wiederholen' <xml><block type="controls_repeat_simplified">
              <title name="TIMES">???</title>
            </block></xml>Schleife und setze dann den Block, den du möchtest hinein.
      courseB_iceage_loops4:
        courseB_iceage_loops4_a: Versuche die Schritte aufzuschreiben, die Scrat unternehmen
          würde, um an die Eichel zu gelangen. Siehst du ein Muster?
        courseB_iceage_loops4_b: Scheue Dich nicht, Deinen Programmcode auszuführen
          und schau, was passiert!
        courseB_iceage_loops4_c: Das ist der Weg, den Scrat einschlagen sollte.
      courseB_iceage_loops4_2019:
        courseB_iceage_loops4_a: Versuche die Schritte aufzuschreiben, die Scrat unternehmen
          würde, um an die Eichel zu gelangen. Siehst du ein Muster?
        courseB_iceage_loops4_b: Scheue Dich nicht, Deinen Programmcode auszuführen
          und schau, was passiert!
        courseB_iceage_loops4_c: Das ist der Weg, den Scrat einschlagen sollte.
      courseB_iceage_loops6:
        courseB_iceage_loops6_a: Dein endgültiger Code wird **drei** Bewegungsbausteine
          haben.
        courseB_iceage_loops6_b: Du musst nur **eine** weitere Schleife hinzufügen!
        courseB_iceage_loops6_c: Am Ende sollte Dein Weg so aussehen.
      courseB_iceage_loops6_2019:
        courseB_iceage_loops6_a: Dein endgültiger Code wird **drei** Bewegungsbausteine
          haben.
        courseB_iceage_loops6_b: Du musst nur **eine** weitere Schleife hinzufügen!
        courseB_iceage_loops6_c: Am Ende sollte Dein Weg so aussehen.
      courseB_iceage_loops7:
        courseB_iceage_loops7_a: Versuche die Schritte auf ein Blatt Papier zu schreiben,
          wenn du nicht mehr weiter kommst. Siehst du ein Muster?
        courseB_iceage_loops7_b: Das ist der Weg, den Scrat nehmen sollte, um zur
          Eichel zu gelangen.
      courseB_iceage_loops7_2019:
        courseB_iceage_loops7_a: Versuche die Schritte auf ein Blatt Papier zu schreiben,
          wenn du nicht mehr weiter kommst. Siehst du ein Muster?
        courseB_iceage_loops7_b: Das ist der Weg, den Scrat nehmen sollte, um zur
          Eichel zu gelangen.
      courseB_iceage_loops8:
        courseB_iceage_loops8_a: Sind die Bewegungsblöcke richtig? Was kann man noch
          ändern?
        courseB_iceage_loops8_c: Benutze Schleifen, um Scrat zu helfen, diesem Weg
          zu folgen.
      courseB_iceage_loops8_2019:
        courseB_iceage_loops8_a: Sind die Bewegungsblöcke richtig? Was kann man noch
          ändern?
        courseB_iceage_loops8_c: Benutze Schleifen, um Scrat zu helfen, diesem Weg
          zu folgen.
      courseB_iceage_loops9:
        courseB_iceage_loops9_a: Hast du Probleme? Versuche, dieses Puzzle in kleinere
          Stücke zu zerlegen. Scheue Dich nicht davor, Dein Puzzle zu lösen, während
          Du den Code schreibst!
        courseB_iceage_loops9_b: Dein endgültiger Code sollte **4** Schleifen haben.
        courseB_iceage_loops9_c: Scrat sollte diesem Weg folgen, um die Eichel zu
          bekommen.
      courseB_iceage_loops9_2019:
        courseB_iceage_loops9_a: Hast du Probleme? Versuche, dieses Puzzle in kleinere
          Stücke zu zerlegen. Scheue Dich nicht davor, Dein Puzzle zu lösen, während
          Du den Code schreibst!
        courseB_iceage_loops9_b: Dein endgültiger Code sollte **4** Schleifen haben.
        courseB_iceage_loops9_c: Scrat sollte diesem Weg folgen, um die Eichel zu
          bekommen.
      courseB_maze_seq1_2018:
        courseB_maze_seq1_a: Verbinde weitere Bausteine mit dem <xml><block type="when_run"/></xml>
          Baustein um Scrat zu bewegen!
      courseB_maze_seq1_2019:
        courseB_maze_seq1_a: Verbinde weitere Bausteine mit dem <xml><block type="when_run"/></xml>
          Baustein um Scrat zu bewegen!
      courseB_maze_seq4_2018:
        courseB_maze_seq4_a: Versuche eine Anweisung nach der anderen hinzuzufügen,
          bis du an die Eichel kommst.
      courseB_maze_seq4_2019:
        courseB_maze_seq4_a: Versuche eine Anweisung nach der anderen hinzuzufügen,
          bis du an die Eichel kommst.
      courseB_maze_seq5_2018:
        courseB_maze_seq5_c: Bist du Dir nicht sicher, wie du an die Eichel kommst?
          Versuche diesen Weg.
      courseB_maze_seq5_2019:
        courseB_maze_seq5_c: Bist du Dir nicht sicher, wie du an die Eichel kommst?
          Versuche diesen Weg.
      courseB_maze_seq6_2018:
        courseB_maze_seq5_d: Bist du Dir nicht sicher, wie du an die Eichel kommst?
          Versuche diesen Weg!
      courseB_maze_seq6_2019:
        courseB_maze_seq5_d: Bist du Dir nicht sicher, wie du an die Eichel kommst?
          Versuche diesen Weg!
      courseB_maze_seq7:
        courseB_maze_seq7_c: Du kommst nicht an das Schwein ran?  Versuche diesen
          Weg!
      courseB_maze_seq7_2018:
        courseB_maze_seq7_a: Füge 1 Block hinzu, um Scrat zur Eichel zu bewegen.
        courseB_maze_seq7_c: Kommst du nicht an die Eichel heran? Versuche diesen
          Weg!
      courseB_maze_seq7_2019:
        courseB_maze_seq7_a: Füge 1 Block hinzu, um Scrat zur Eichel zu bewegen.
        courseB_maze_seq7_c: Kommst du nicht an die Eichel heran? Versuche diesen
          Weg!
      courseB_maze_seq8:
        courseB_maze_seq8_b: Es gibt zwei Möglichkeiten um dieses Puzzle zu lösen!
      courseB_maze_seq8_2018:
        courseB_maze_seq8_b: Es gibt mehr als eine Möglichkeiten um dieses Puzzle
          zu lösen!
      courseB_maze_seq8_2019:
        courseB_maze_seq8_b: Es gibt mehr als eine Möglichkeiten um dieses Puzzle
          zu lösen!
      courseB_maze_seq9:
        courseB_maze_seq9_d: Steckst du fest?  Versuche diesen Weg!
      courseB_maze_seq9_2018:
        courseB_maze_seq9_d: Steckst du fest?  Versuche diesen Weg!
      courseB_maze_seq9_2019:
        courseB_maze_seq9_d: Steckst du fest?  Versuche diesen Weg!
      courseB_maze_seq_challenge2:
        courseB_maze_seq_challenge2_b: Ordne die Bausteine neu an und nimm den Treppenmusterweg.
      courseB_maze_seq_challenge2_2018:
        courseB_maze_seq_challenge2_b: Ordne die Bausteine neu an und nimm den Treppenmusterweg.
      courseB_maze_seq_challenge2_2019:
        courseB_maze_seq_challenge2_b: Ordne die Bausteine neu an und nimm den Treppenmusterweg.
      courseB_starWars_prog2_2018:
        courseB_starWars_prog2_a: Teile dieses Problem in zwei Teile auf. Nimm einen
          Haufen Schrott und finde dann heraus, wie du an den anderen kommst.
      courseB_starWars_prog9_2018:
        courseB_starWars_prog9_c: |-
          Könnte eine `wiederhole` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block></xml> Schleife hier helfen?
      courseB_starWars_prog9_2019:
        courseB_starWars_prog9_c: |-
          Könnte eine `wiederhole` <xml><block type="controls_repeat_simplified">
              <title name="TIMES">3</title>
            </block></xml> Schleife hier helfen?
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: |-
          Verbinde diesen Block mit dem `Wenn Ausführen`-Baustein:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: |-
          Verbinde diesen Block mit dem `Wenn Ausführen`-Baustein:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: |-
          Verbinde diesen Block mit dem `Wenn Ausführen`-Baustein:

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_b: Gibt es einen Block in der Toolbox, der aussieht,
          als würde er einen Schauspieler bewegen?
        courseC_PlayLab_events3_c: |-
          Verbinde diesen Block mit dem `Wenn Ausführen`-Baustein:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_b: Gibt es einen Block in der Toolbox, der aussieht,
          als würde er einen Schauspieler bewegen?
        courseC_PlayLab_events3_c: |-
          Verbinde diesen Block mit dem `Wenn Ausführen`-Baustein:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_b: Gibt es einen Block in der Toolbox, der aussieht,
          als würde er einen Schauspieler bewegen?
        courseC_PlayLab_events3_c: |-
          Verbinde diesen Block mit dem `Wenn Ausführen`-Baustein:

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events4:
        courseC_PlayLab_events4_b: Wenn der "Ausführen"-Knopf angeklickt wird, muss
          Jorge sich nach rechts **100** Pixel bewegen, um Olive die Katze zu erreichen.
      courseC_PlayLab_events4_2018:
        courseC_PlayLab_events4_b: Wenn der "Ausführen"-Knopf angeklickt wird, muss
          Jorge sich nach rechts **100** Pixel bewegen, um Olive die Katze zu erreichen.
      courseC_PlayLab_events4_2019:
        courseC_PlayLab_events4_b: Wenn der "Ausführen"-Knopf angeklickt wird, muss
          Jorge sich nach rechts **100** Pixel bewegen, um Olive die Katze zu erreichen.
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_c: Du kannst mehr als ein Ereignis `wenn Schauspieler
          berührt` gleichzeitig in deinem Arbeitsbereich haben, so dass du nicht das
          erste löschen musst!
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_c: Du kannst mehr als ein Ereignis `wenn Schauspieler
          berührt` gleichzeitig in deinem Arbeitsbereich haben, so dass du nicht das
          erste löschen musst!
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_c: Du kannst mehr als ein Ereignis `wenn Schauspieler
          berührt` gleichzeitig in deinem Arbeitsbereich haben, so dass du nicht das
          erste löschen musst!
      courseC_PlayLab_eventsFP_2019:
        idea1: |-
          Brauchst du eine Idee?

          **Wer ist da?** Lasse Charaktere mit zufälligen Bildern erscheinen, so dass niemand weiß, wer als nächstes erscheint.

          <img src= "https://images.code.org/dbd6ece9d0fb213039ea5dccb91fc425-image-1563577859889.gif" style="width: 200px">
        idea2: |-
          _Brauchst du eine Idee?_

          **Ein Abenteuer erleben** - Ändere den Hintergrund, dann lasse die Charaktere darüber reden, wo sie sich gerade befinden.

          <img src= "https://images.code.org/a7f740d73074deb128cdc2826abda9e6-image-1563576781779.gif" style="width: 200px">
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          Du kannst diesen Block verwenden, um Schauspieler an verschiedene Orte im Spielraum zu bewegen.

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          Du kannst diesen Block verwenden, um Schauspieler an verschiedene Orte im Spielraum zu bewegen.

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          Du kannst diesen Block verwenden, um Schauspieler an verschiedene Orte im Spielraum zu bewegen.

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: Du brauchst keine Änderungen an der Schleife vorzunehmen,
          setze einfach einen Baustein darüber.
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: Du brauchst keine Änderungen an der Schleife vorzunehmen,
          setze einfach einen Baustein darüber.
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: Du brauchst keine Änderungen an der Schleife vorzunehmen,
          setze einfach einen Baustein darüber.
      courseC_artist_loops1b_2019:
        courseC_artist_loops1b_a: |-
          Dies ist der erste Baustein, den du benötigst:

          <xml>
            <block type="draw_turn_by_constant_dropdown">
              <title name="DIR">???</title>
              <title name="VALUE" config="45,60,90,120,180">???</title>
            </block>
          </xml>

          Du kannst entweder links oder rechts und eine beliebige Anzahl von Grad wählen.
      courseC_artist_loops2a_2019:
        courseC_artist_loops2a_a: Innerhalb deiner Schleife wirst du zur Mitte springen
          wollen, dann drehen Dich, anschließend zeichne einen Aufkleber.
      courseC_artist_loops3a_2019:
        courseC_artist_loops3a_a: Du wirst nur einen Baustein innerhalb deiner Schleife
          hinzufügen wollen, nach dem ersten Aufkleber.
        courseC_artist_loops3a_b: |-
          Dein Programm sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">???</title>
                  <statement name="DO">
                    <block type="jump_to">
                      <title name="VALUE">13</title>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">???</title>
                          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
                          <next>
                            <block type="sticker">
                              <title name="VALUE">Cat</title>
                              <next>
                                <block type="sticker">
                                  <title name="VALUE">Dog</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>

          Du kannst alle Aufkleber verwenden, die dir gefallen!
      courseC_artist_loops4a_2019:
        courseC_artist_loops4a_b: |-
          Dein Programm sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">???</title>
                  <statement name="DO">
                    <block type="jump_to">
                      <title name="VALUE">13</title>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">???</title>
                          <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
                          <next>
                            <block type="sticker">
                              <title name="VALUE">Cat</title>
                              <next>
                                <block type="jump_by_constant">
                                  <title name="DIR">jumpForward</title>
                                  <title name="VALUE">???</title>
                                  <next>
                                    <block type="sticker">
                                      <title name="VALUE">Dog</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: Benutze die Drop-Down-Menüs auf den \`zeichne Aufkleber'-Bausteinen,
          um Deine Bilder zu ändern.
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: Benutze die Drop-Down-Menüs auf den \`zeichne Aufkleber'-Bausteinen,
          um Deine Bilder zu ändern.
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: Benutze die Drop-Down-Menüs auf den \`zeichne Aufkleber'-Bausteinen,
          um Deine Bilder zu ändern.
      courseC_artist_loops5b_2019:
        courseC_artist_loops5b_c: |-
          Dein Programm sollte so aussehen!

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_line_style_pattern">
                  <title name="VALUE">rainbowLine</title>
                  <next>
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="jump_to">
                          <title name="VALUE">13</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">???</title>
                              <next>
                                <block type="draw_move_by_constant">
                                  <title name="DIR">moveBackward</title>
                                  <title name="VALUE">???</title>
                                  <next>
                                    <block type="draw_turn_by_constant_dropdown">
                                      <title name="DIR">???</title>
                                      <title name="VALUE" config="1,2,5,10,12,20,30,45,60,90,120,180">???</title>
                                      <next>
                                        <block type="sticker">
                                          <title name="VALUE">Cat</title>
                                          <next>
                                            <block type="jump_by_constant">
                                              <title name="DIR">jumpForward</title>
                                              <title name="VALUE">???</title>
                                              <next>
                                                <block type="sticker">
                                                  <title name="VALUE">Dog</title>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: Denken Sie daran, den `Drehe`-Baustein in die
          Schleife einzuhängen.
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: Denken Sie daran, den `Drehe`-Baustein in die
          Schleife einzuhängen.
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: Denken Sie daran, den `Drehe`-Baustein in die
          Schleife einzuhängen.
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          Den ersten Baustein, den du brauchen wirst, ist:

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: |-
          Um 50 Pixel vorwärts zu gehen, benutze diesen Block:

          ![](<https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png>)
      courseC_artist_loopsPrePre1a_2018:
        courseC_artist_loopsPrePre1a_a: |-
          Der erste Block, den du brauchst, ist:

          <xml>  <block type="jump_to_xy" id="callMe">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Um 50 Pixel vorwärts zu bewegen, verwende diesen Baustein:

          <xml><block type="draw_move_by_constant">
              <title name="DIR">moveForward</title>
              <title name="VALUE">50</title>
            </block></xml>
      courseC_artist_loopsPrePre1a_2019:
        courseC_artist_loopsPrePre1a_a: |-
          Der erste Block, den du brauchst, ist:

          <xml>  <block type="jump_to_xy" id="callMe">
              <title name="XPOS">200</title>
              <title name="YPOS">200</title>
            </block></xml>
        courseC_artist_loopsPrePre1a_b: |-
          Um 50 Pixel vorwärts zu bewegen, verwende diesen Baustein:

          <xml><block type="draw_move_by_constant">
              <title name="DIR">moveForward</title>
              <title name="VALUE">50</title>
            </block></xml>
      courseC_artist_prog5:
        courseC_artist_prog5_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_artist_prog5_2018:
        courseC_artist_prog5_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
        courseC_artist_prog5_c: Du kannst die Dropdown-Menüs in den Bausteien verwenden,
          um zu ändern, was diese tun!
      courseC_artist_prog5_2019:
        courseC_artist_prog5_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
        courseC_artist_prog5_c: Du kannst die Dropdown-Menüs in den Bausteien verwenden,
          um zu ändern, was diese tun!
      courseC_artist_prog7:
        courseC_artist_prog7_e: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_artist_prog7_2018:
        courseC_artist_prog7_e: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_artist_prog7_2019:
        courseC_artist_prog7_e: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: Benutze Schleifen, damit du nicht zu viele
          ˋSammelnˋ Blöcke verwenden musst!
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: Benutze Schleifen, damit du nicht zu viele
          ˋSammelnˋ Blöcke verwenden musst!
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: Benutze Schleifen, damit du nicht zu viele
          ˋSammelnˋ Blöcke verwenden musst!
      courseC_collector_prog1:
        courseC_collector_prog1_a: Wenn du auf einem Feld stehst, wo ein Schatz liegt,
          dann benutze einen <xml><block type="collector_collect"/></xml> Block um
          ihn aufzuheben.
        courseC_collector_prog1_b: Die einfachste Lösung wäre, einmal nach vorwärts
          zu gehen und dann den Schutz aufzuheben.
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: Wenn du auf einem Feld stehst, wo ein Schatz liegt,
          dann benutze einen <xml><block type="collector_collect"/></xml> Block um
          ihn aufzuheben.
        courseC_collector_prog1_b: Die einfachste Lösung wäre, einmal nach vorwärts
          zu gehen und dann den Schutz aufzuheben.
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: Wenn du auf einem Feld stehst, wo ein Schatz liegt,
          dann benutze einen <xml><block type="collector_collect"/></xml> Block um
          ihn aufzuheben.
        courseC_collector_prog1_b: Die einfachste Lösung wäre, einmal nach vorwärts
          zu gehen und dann den Schutz aufzuheben.
      courseC_collector_prog2:
        courseC_collector_prog2_a: Du kannst 4 <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> Blöcke benutzen oder auch den
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          Block um dein Programm kürzer zu machen.
        courseC_collector_prog2_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_collector_prog2_2018:
        courseC_collector_prog2_a: Du kannst 4 <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> Blöcke benutzen oder auch den
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          Block um dein Programm kürzer zu machen.
        courseC_collector_prog2_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_collector_prog2_2019:
        courseC_collector_prog2_a: Du kannst 4 <xml><block type="maze_move"><title
          name="DIR">moveForward</title></block></xml> Blöcke benutzen oder auch den
          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          Block um dein Programm kürzer zu machen.
        courseC_collector_prog2_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_collector_prog3:
        courseC_collector_prog3_a: Das Programm wird nur diejenigen Blöcke ausführen,
          welche mit dem <xml><block type="when_run"/></xml> Block verbunden sind.
        courseC_collector_prog3_b: Versuche die "Schritt" Taste zu verwenden um deinen
          Code Zeile für Zeile auszuführen. Siehst du, wo etwas falsch läuft?
        courseC_collector_prog3_c: Wenn du Probleme hast diese Aufgabe zu lösen, versuche
          alle Bewegungen auf ein Blatt Papier zu schreiben.
      courseC_collector_prog3_2018:
        courseC_collector_prog3_a: Das Programm wird nur diejenigen Blöcke ausführen,
          welche mit dem <xml><block type="when_run"/></xml> Block verbunden sind.
        courseC_collector_prog3_b: Versuche die "Schritt" Taste zu verwenden um deinen
          Code Zeile für Zeile auszuführen. Siehst du, wo etwas falsch läuft?
        courseC_collector_prog3_c: Wenn du Probleme hast diese Aufgabe zu lösen, versuche
          alle Bewegungen auf ein Blatt Papier zu schreiben.
      courseC_collector_prog3_2019:
        courseC_collector_prog3_a: Das Programm wird nur diejenigen Blöcke ausführen,
          welche mit dem <xml><block type="when_run"/></xml> Block verbunden sind.
        courseC_collector_prog3_b: Versuche die "Schritt" Taste zu verwenden um deinen
          Code Zeile für Zeile auszuführen. Siehst du, wo etwas falsch läuft?
        courseC_collector_prog3_c: Wenn du Probleme hast diese Aufgabe zu lösen, versuche
          alle Bewegungen auf ein Blatt Papier zu schreiben.
      courseC_collector_prog4:
        courseC_collector_prog4_a: Wenn du nicht mehr weiter kommst, versuche einmal
          alle Schritte auf ein Blatt Papier zu schreiben.
        courseC_collector_prog4_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
        courseC_collector_prog4_c: Versuche diesen Weg zu nehmen.
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: Wenn du nicht mehr weiter kommst, versuche einmal
          alle Schritte auf ein Blatt Papier zu schreiben.
        courseC_collector_prog4_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
        courseC_collector_prog4_c: Versuche diesen Weg zu nehmen.
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: Wenn du nicht mehr weiter kommst, versuche einmal
          alle Schritte auf ein Blatt Papier zu schreiben.
        courseC_collector_prog4_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
        courseC_collector_prog4_c: Versuche diesen Weg zu nehmen.
      courseC_collector_prog5:
        courseC_collector_prog5_a: |-
          "Funktioniert es beim ersten Schritt?
          Klappt es beim zweiten Schritt?
          Wo läuft etwas schief?"
        courseC_collector_prog5_b: Wenn du schon einen Fehler verbessert hast und
          das Programm aber immer noch nicht funktioniert, nimm als Anleitung zum
          Fehler suchen die oben genannte Schritte.
        courseC_collector_prog5_c: Wenn du nicht mehr weiter kommst, versuche einmal
          alle Schritte auf ein Blatt Papier zu schreiben.
        courseC_collector_prog5_d: Folge diesem Weg um die Schätze einzusammeln.
      courseC_collector_prog5_2018:
        courseC_collector_prog5_a: |-
          "Funktioniert es beim ersten Schritt?
          Klappt es beim zweiten Schritt?
          Wo läuft etwas schief?"
        courseC_collector_prog5_b: Wenn du schon einen Fehler verbessert hast und
          das Programm aber immer noch nicht funktioniert, nimm als Anleitung zum
          Fehler suchen die oben genannte Schritte.
        courseC_collector_prog5_c: Wenn du nicht mehr weiter kommst, versuche einmal
          alle Schritte auf ein Blatt Papier zu schreiben.
        courseC_collector_prog5_d: Folge diesem Weg um die Schätze einzusammeln.
      courseC_collector_prog5_2019:
        courseC_collector_prog5_a: |-
          "Funktioniert es beim ersten Schritt?
          Klappt es beim zweiten Schritt?
          Wo läuft etwas schief?"
        courseC_collector_prog5_b: Wenn du schon einen Fehler verbessert hast und
          das Programm aber immer noch nicht funktioniert, nimm als Anleitung zum
          Fehler suchen die oben genannte Schritte.
        courseC_collector_prog5_c: Wenn du nicht mehr weiter kommst, versuche einmal
          alle Schritte auf ein Blatt Papier zu schreiben.
        courseC_collector_prog5_d: Folge diesem Weg um die Schätze einzusammeln.
      courseC_collector_prog6:
        courseC_collector_prog6_a: |-
          Findest du heraus, was falsch ist?

          Versuche einmal mit der "Schritt" Taste den Code Zeile für Zeile auszuführen, um die Fehler zu finden.
        courseC_collector_prog6_b: Du kommst nicht mehr weiter? Versuche diesen Weg
          zu nehmen, um die Schätze einzusammeln.
      courseC_collector_prog6_2018:
        courseC_collector_prog6_a: |-
          Findest du heraus, was falsch ist?

          Versuche einmal mit der "Schritt" Taste den Code Zeile für Zeile auszuführen, um die Fehler zu finden.
        courseC_collector_prog6_b: Du kommst nicht mehr weiter? Versuche diesen Weg
          zu nehmen, um die Schätze einzusammeln.
      courseC_collector_prog6_2019:
        courseC_collector_prog6_a: |-
          Findest du heraus, was falsch ist?

          Versuche einmal mit der "Schritt" Taste den Code Zeile für Zeile auszuführen, um die Fehler zu finden.
        courseC_collector_prog6_b: Du kommst nicht mehr weiter? Versuche diesen Weg
          zu nehmen, um die Schätze einzusammeln.
      courseC_collector_prog7:
        courseC_collector_prog7_a: 'Du hast schon sehr viel großartigen Code im Arbeitsbereich.
          Du brauchst nichts davon löschen um die Aufgabe zu lösen.  '
        courseC_collector_prog7_b: Hier ist noch nicht der Block, den du brauchst
          um die Abenteurerin in die richtige Richtung zu bewegen? Zieh einen rüber
          aus der Werkzeugkiste.
        courseC_collector_prog7_c: Du siehst nicht den besten Weg um alle Schätze
          einzusammeln? Versuche mal diesen!
      courseC_collector_prog7_2018:
        courseC_collector_prog7_a: 'Du hast schon sehr viel großartigen Code im Arbeitsbereich.
          Du brauchst nichts davon löschen um die Aufgabe zu lösen.  '
        courseC_collector_prog7_b: Hier ist noch nicht der Block, den du brauchst
          um die Abenteurerin in die richtige Richtung zu bewegen? Zieh einen rüber
          aus der Werkzeugkiste.
        courseC_collector_prog7_c: Du siehst nicht den besten Weg um alle Schätze
          einzusammeln? Versuche mal diesen!
      courseC_collector_prog7_2019:
        courseC_collector_prog7_a: 'Du hast schon sehr viel großartigen Code im Arbeitsbereich.
          Du brauchst nichts davon löschen um die Aufgabe zu lösen.  '
        courseC_collector_prog7_b: Hier ist noch nicht der Block, den du brauchst
          um die Abenteurerin in die richtige Richtung zu bewegen? Zieh einen rüber
          aus der Werkzeugkiste.
        courseC_collector_prog7_c: Du siehst nicht den besten Weg um alle Schätze
          einzusammeln? Versuche mal diesen!
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Du kannst den 'sammle' Block öfter verwenden
          um die zusätzlichen Schätze einzusammeln.
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: Du kannst den 'sammle' Block öfter verwenden
          um die zusätzlichen Schätze einzusammeln.
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: Du kannst den 'sammle' Block öfter verwenden
          um die zusätzlichen Schätze einzusammeln.
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Du kannst mehr als einen 'sammle' Block
          auf jedem Feld verwenden.
        courseC_collector_prog_challenge1_b: Hast du dich verlaufen? Versuche diesen
          Weg zu nehmen um die Aufgabe zu lösen!
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: Du kannst mehr als einen 'sammle' Block
          auf jedem Feld verwenden.
        courseC_collector_prog_challenge1_b: Hast du dich verlaufen? Versuche diesen
          Weg zu nehmen um die Aufgabe zu lösen!
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: Du kannst mehr als einen 'sammle' Block
          auf jedem Feld verwenden.
        courseC_collector_prog_challenge1_b: Hast du dich verlaufen? Versuche diesen
          Weg zu nehmen um die Aufgabe zu lösen!
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif)"
      courseC_flappy_events2:
        courseC_flappy_events2_a: 'Der Baustein, den du hinzufügen musst, heißt `Geschwindigkeit
          einstellen`. '
        courseC_flappy_events2_b: Verbinde den `setze Geschwindigkeit` Baustein mit
          dem `wenn Ausführen` Baustein, um dieses Rätsel zu lösen.
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: 'Der Baustein, den du hinzufügen musst, heißt `Geschwindigkeit
          einstellen`. '
        courseC_flappy_events2_b: Verbinde den `setze Geschwindigkeit` Baustein mit
          dem `wenn Ausführen` Baustein, um dieses Rätsel zu lösen.
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: 'Der Baustein, den du hinzufügen musst, heißt `Geschwindigkeit
          einstellen`. '
        courseC_flappy_events2_b: Verbinde den `setze Geschwindigkeit` Baustein mit
          dem `wenn Ausführen` Baustein, um dieses Rätsel zu lösen.
      courseC_flappy_events3:
        courseC_flappy_events3_a: Wenn etwas nicht richtig funktioniert, stelle sicher,
          dass deine Bausteine mit den richtigen Ereignissen im Arbeitsbereich verbunden
          sind.
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: Wenn etwas nicht richtig funktioniert, stelle sicher,
          dass deine Bausteine mit den richtigen Ereignissen im Arbeitsbereich verbunden
          sind.
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: Wenn etwas nicht richtig funktioniert, stelle sicher,
          dass deine Bausteine mit den richtigen Ereignissen im Arbeitsbereich verbunden
          sind.
      courseC_flappy_events4:
        courseC_flappy_events4_a: Verbinde den `Spiel beenden`-Baustein mit `wenn
          ein Hindernis getroffen wird`, um dieses Rätsel zu lösen.
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: Verbinde den `Spiel beenden`-Baustein mit `wenn
          ein Hindernis getroffen wird`, um dieses Rätsel zu lösen.
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: Verbinde den `Spiel beenden`-Baustein mit `wenn
          ein Hindernis getroffen wird`, um dieses Rätsel zu lösen.
      courseC_flappy_events5:
        courseC_flappy_events5_a: Du musst den `Punkt`-Baustein benutzen, um diesen
          Level zu bestehen.
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: Du musst den `Punkt`-Baustein benutzen, um diesen
          Level zu bestehen.
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: Du musst den `Punkt`-Baustein benutzen, um diesen
          Level zu bestehen.
      courseC_flappy_events7:
        courseC_flappy_events7_a: 'Du kannst den Hintergrund mit Hilfe des `Setze
          Szene`-Bausteins ändern. '
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: 'Du kannst den Hintergrund mit Hilfe des `Setze
          Szene`-Bausteins ändern. '
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: 'Du kannst den Hintergrund mit Hilfe des `Setze
          Szene`-Bausteins ändern. '
      courseC_flappy_events9:
        courseC_flappy_events9_a: Verbinde den Baustein `setze Punktzahl 0` mit dem
          Ereignis `wenn ein Hindernis getroffen wird`, um diesen Level zu passieren.
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: Verbinde den Baustein `setze Punktzahl 0` mit dem
          Ereignis `wenn ein Hindernis getroffen wird`, um diesen Level zu passieren.
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: Verbinde den Baustein `setze Punktzahl 0` mit dem
          Ereignis `wenn ein Hindernis getroffen wird`, um diesen Level zu passieren.
      courseC_harvester_loops2:
        courseC_harvester_loops2_b: Du brauchst eine `wiederhole`-Schleife nach einer
          anderen.
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_b: Du brauchst eine `wiederhole`-Schleife nach einer
          anderen.
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_b: Du brauchst eine `wiederhole`-Schleife nach einer
          anderen.
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: Verwende den neuen Baustein "Sammle Mais", um
          den Mais zu sammeln.
        courseC_harvester_loops4_b: Du kannst mehrere Wiederholungsschleifen in deinem
          Code verwenden, einige um Mais und andere um Kürbisse zu pflücken.
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: Verwende den neuen Baustein "Sammle Mais", um
          den Mais zu sammeln.
        courseC_harvester_loops4_b: Du kannst mehrere Wiederholungsschleifen in deinem
          Code verwenden, einige um Mais und andere um Kürbisse zu pflücken.
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: Verwende den neuen Baustein "Sammle Mais", um
          den Mais zu sammeln.
        courseC_harvester_loops4_b: Du kannst mehrere Wiederholungsschleifen in deinem
          Code verwenden, einige um Mais und andere um Kürbisse zu pflücken.
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: Denke daran, dass du mehrere Bausteine in eine
          Wiederholungsschleife setzen kannst.
        courseC_harvester_loops6_b: Vergiss nicht, dich am Ende der Maisreihe zu drehen.
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: Denke daran, dass du mehrere Bausteine in eine
          Wiederholungsschleife setzen kannst.
        courseC_harvester_loops6_b: Vergiss nicht, dich am Ende der Maisreihe zu drehen.
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: Denke daran, dass du mehrere Bausteine in eine
          Wiederholungsschleife setzen kannst.
        courseC_harvester_loops6_b: Vergiss nicht, dich am Ende der Maisreihe zu drehen.
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: Du kannst dieses Rätsel auf zwei Arten lösen,
          entweder zuerst den Mais oder die Kürbisse.
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: Du kannst dieses Rätsel auf zwei Arten lösen,
          entweder zuerst den Mais oder die Kürbisse.
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: Du kannst dieses Rätsel auf zwei Arten lösen,
          entweder zuerst den Mais oder die Kürbisse.
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: Das ist ohne Schleifen zu schwer!
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: Das ist ohne Schleifen zu schwer!
        courseC_harvester_loops_challenge1_c: |-
          Nachdem du die ersten beiden Male Mais gepflückt hast, kannst du eine verschachtelte Schlaufe verwenden, um die nächsten acht Stücke auszuwählen.

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: Das ist ohne Schleifen zu schwer!
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_c: |-
          Dieses Zickzackmuster kann zweimal wiederholt werden, um das Puzzle mit nur 20 Blöcken zu beenden!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_c: |-
          Dieses Zickzackmuster kann zweimal wiederholt werden, um das Puzzle mit nur 20 Blöcken zu beenden!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_c: |-
          Dieses Zickzackmuster kann zweimal wiederholt werden, um das Puzzle mit nur 20 Blöcken zu beenden!

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
      courseC_maze_debugging2:
        courseC_maze_debugging2_c: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_c: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_c: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
      courseC_maze_debugging3:
        courseC_maze_debugging3_b: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_b: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_b: Du findest nicht heraus, was schief läuft? Führe
          den Code ein paar mal aus um zu sehen, was passiert.
      courseC_maze_debugging5_2018:
        courseC_maze_debugging5_c: Du kannst die Richtung des Kurvenblocks ändern,
          indem du auf die Dropdown-Liste klickst.
      courseC_maze_debugging5_2019:
        courseC_maze_debugging5_c: Du kannst die Richtung des Kurvenblocks ändern,
          indem du auf die Dropdown-Liste klickst.
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: Stell dir diesen Weg aufgeteilt in zwei verschiedene
          Teilstücke vor. Jedes hat ein Muster, welches du wiederholen kannst.
        courseC_maze_loops_challenge1_b: Kannst du dich erinnern, wie du Schleifen
          verwendet hast um das Treppenmuster zu wiederholen?
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: Stell dir diesen Weg aufgeteilt in zwei verschiedene
          Teilstücke vor. Jedes hat ein Muster, welches du wiederholen kannst.
        courseC_maze_loops_challenge1_b: Kannst du dich erinnern, wie du Schleifen
          verwendet hast um das Treppenmuster zu wiederholen?
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: Stell dir diesen Weg aufgeteilt in zwei verschiedene
          Teilstücke vor. Jedes hat ein Muster, welches du wiederholen kannst.
        courseC_maze_loops_challenge1_b: Kannst du dich erinnern, wie du Schleifen
          verwendet hast um das Treppenmuster zu wiederholen?
      courseC_maze_programming1:
        courseC_maze_programming1_0: Überprüfe, ob alle Blöcke richtig zusammengeschnappt
          sind und klicke dann nochmals auf 'Ausführen'.
      courseC_maze_programming1_2018:
        courseC_maze_programming1_0: Überprüfe, ob alle Blöcke richtig zusammengeschnappt
          sind und klicke dann nochmals auf 'Ausführen'.
      courseC_maze_programming1_2019:
        courseC_maze_programming1_0: Überprüfe, ob alle Blöcke richtig zusammengeschnappt
          sind und klicke dann nochmals auf 'Ausführen'.
      courseC_maze_programming2:
        courseC_maze_programming2_a: Um einen <xml><block type="maze_moveForward"/></xml>
          Block zu benutzen, ziehe ihn aus dem Werkzeugkasten und lass ihn beim <xml><block
          type="when_run"/></xml> einschnappen.
        courseC_maze_programming2_b: Überprüfe, ob alle Blöcke richtig zusammengeschnappt
          sind und klicke dann nochmals auf 'Ausführen'.
      courseC_maze_programming2_2018:
        courseC_maze_programming2_a: Um einen <xml><block type="maze_moveForward"/></xml>
          Block zu benutzen, ziehe ihn aus dem Werkzeugkasten und lass ihn beim <xml><block
          type="when_run"/></xml> einschnappen.
        courseC_maze_programming2_b: Überprüfe, ob alle Blöcke richtig zusammengeschnappt
          sind und klicke dann nochmals auf 'Ausführen'.
      courseC_maze_programming2_2019:
        courseC_maze_programming2_a: Um einen <xml><block type="maze_moveForward"/></xml>
          Block zu benutzen, ziehe ihn aus dem Werkzeugkasten und lass ihn beim <xml><block
          type="when_run"/></xml> einschnappen.
        courseC_maze_programming2_b: Überprüfe, ob alle Blöcke richtig zusammengeschnappt
          sind und klicke dann nochmals auf 'Ausführen'.
      courseC_maze_programming3:
        courseC_maze_programming3_a: Versuche zuerst einmal den Code auszuführen,
          um zu sehen was falsch läuft.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Um einen Block aus der Mitte deines Codes zu löschen, ziehe alle Blöcke darunter in einen anderen Teil des Arbeitsbereiches.

          Ziehe den Block, den du löschen möchtest, zurück in den Werkzeugkasten.

          Danach setzt du die anderen Blöcke wieder dorthin wo sie hingehören.
      courseC_maze_programming3_2018:
        courseC_maze_programming3_a: Versuche zuerst einmal den Code auszuführen,
          um zu sehen was falsch läuft.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Um einen Block aus der Mitte deines Codes zu löschen, ziehe alle Blöcke darunter in einen anderen Teil des Arbeitsbereiches.

          Ziehe den Block, den du löschen möchtest, zurück in den Werkzeugkasten.

          Danach setzt du die anderen Blöcke wieder dorthin wo sie hingehören.
      courseC_maze_programming3_2019:
        courseC_maze_programming3_a: Versuche zuerst einmal den Code auszuführen,
          um zu sehen was falsch läuft.
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)

          Um einen Block aus der Mitte deines Codes zu löschen, ziehe alle Blöcke darunter in einen anderen Teil des Arbeitsbereiches.

          Ziehe den Block, den du löschen möchtest, zurück in den Werkzeugkasten.

          Danach setzt du die anderen Blöcke wieder dorthin wo sie hingehören.
      courseC_maze_programming4:
        courseC_maze_programming4_a: Vergiss nicht, dass du dich in die Richtung vom
          _Vogel_ aus gesehen drehst. Wenn du nach rechts drehst, wird der Vogel nach
          unten schauen.
        courseC_maze_programming4_b: |-
          Um dem Weg zu folgen:

          -   vorwärts bewegen
          -   in eine Richtung drehen
          -   vorwärts bewegen
          -   in die andere Richtung drehen
          -   vorwärts bewegen
      courseC_maze_programming4_2018:
        courseC_maze_programming4_a: Vergiss nicht, dass du dich in die Richtung vom
          _Vogel_ aus gesehen drehst. Wenn du nach rechts drehst, wird der Vogel nach
          unten schauen.
        courseC_maze_programming4_b: |-
          Um dem Weg zu folgen:

          -   vorwärts bewegen
          -   in eine Richtung drehen
          -   vorwärts bewegen
          -   in die andere Richtung drehen
          -   vorwärts bewegen
      courseC_maze_programming4_2019:
        courseC_maze_programming4_a: Vergiss nicht, dass du dich in die Richtung vom
          _Vogel_ aus gesehen drehst. Wenn du nach rechts drehst, wird der Vogel nach
          unten schauen.
        courseC_maze_programming4_b: |-
          Um dem Weg zu folgen:

          -   vorwärts bewegen
          -   in eine Richtung drehen
          -   vorwärts bewegen
          -   in die andere Richtung drehen
          -   vorwärts bewegen
      courseC_maze_programming5:
        courseC_maze_programming5_b: Der Vogel muss sich einmal drehen um die Aufgabe
          zu lösen. Findest du heraus in welche Richtung?
        courseC_maze_programming5_c: In der Lösung werden zwei 'vorwärts bewegen'
          Blöcke, eine Drehung und zwei weitere 'vorwärts bewegen' Blöcke sein.
      courseC_maze_programming5_2018:
        courseC_maze_programming5_b: Der Vogel muss sich einmal drehen um die Aufgabe
          zu lösen. Findest du heraus in welche Richtung?
        courseC_maze_programming5_c: In der Lösung werden zwei 'vorwärts bewegen'
          Blöcke, eine Drehung und zwei weitere 'vorwärts bewegen' Blöcke sein.
      courseC_maze_programming5_2019:
        courseC_maze_programming5_b: Der Vogel muss sich einmal drehen um die Aufgabe
          zu lösen. Findest du heraus in welche Richtung?
        courseC_maze_programming5_c: In der Lösung werden zwei 'vorwärts bewegen'
          Blöcke, eine Drehung und zwei weitere 'vorwärts bewegen' Blöcke sein.
      courseC_maze_programming6:
        courseC_maze_programming6_a: Es gibt zwei Möglichkeiten um dieses Puzzle zu
          lösen!
        courseC_maze_programming6_b: Verfolge mit dem Finger den Weg vom Vogel zum
          Schwein. Welche Schritte hast du gemacht?
        courseC_maze_programming6_c: Vergiss nicht, dich zuerst zu drehen, weil der
          Vogel am Anfang genau auf eine Wand schaut.
        courseC_maze_programming6_d: Steckst du fest? Schau dir diesen Weg an!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Es gibt zwei Möglichkeiten um dieses Puzzle zu
          lösen!
        courseC_maze_programming6_b: Verfolge mit dem Finger den Weg vom Vogel zum
          Schwein. Welche Schritte hast du gemacht?
        courseC_maze_programming6_c: Vergiss nicht, dich zuerst zu drehen, weil der
          Vogel am Anfang genau auf eine Wand schaut.
        courseC_maze_programming6_d: Steckst du fest? Schau dir diesen Weg an!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Es gibt zwei Möglichkeiten um dieses Puzzle zu
          lösen!
        courseC_maze_programming6_b: Verfolge mit dem Finger den Weg vom Vogel zum
          Schwein. Welche Schritte hast du gemacht?
        courseC_maze_programming6_c: Vergiss nicht, dich zuerst zu drehen, weil der
          Vogel am Anfang genau auf eine Wand schaut.
        courseC_maze_programming6_d: Steckst du fest? Schau dir diesen Weg an!
      courseC_maze_programming7:
        courseC_maze_programming7_a: Vergiss nicht, die "Schritt" Taste zu benutzen
          um Block für Block die Fehler zu suchen.
        courseC_maze_programming7_b: Wenn du Probleme hast diese Aufgabe zu lösen,
          versuche alle Bewegungen auf ein Blatt Papier zu schreiben.
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: Vergiss nicht, die "Schritt" Taste zu benutzen
          um Block für Block die Fehler zu suchen.
        courseC_maze_programming7_b: Wenn du Probleme hast diese Aufgabe zu lösen,
          versuche alle Bewegungen auf ein Blatt Papier zu schreiben.
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: Vergiss nicht, die "Schritt" Taste zu benutzen
          um Block für Block die Fehler zu suchen.
        courseC_maze_programming7_b: Wenn du Probleme hast diese Aufgabe zu lösen,
          versuche alle Bewegungen auf ein Blatt Papier zu schreiben.
      courseC_maze_programming8:
        courseC_maze_programming8_a: Vergiss nicht, dass du die "Schritt" Taste benutzen
          kannst falls du stecken bleibst, um deinen Code Zeile für Zeile zu prüfen.
        courseC_maze_programming8_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: Vergiss nicht, dass du die "Schritt" Taste benutzen
          kannst falls du stecken bleibst, um deinen Code Zeile für Zeile zu prüfen.
        courseC_maze_programming8_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: Vergiss nicht, dass du die "Schritt" Taste benutzen
          kannst falls du stecken bleibst, um deinen Code Zeile für Zeile zu prüfen.
        courseC_maze_programming8_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: Es gibt viele Möglichkeiten, zum Schwein
          zu kommen. Benutze deinen Finger um einen Weg zu finden und dann programmiere
          ihn!
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: Es gibt viele Möglichkeiten, zum Schwein
          zu kommen. Benutze deinen Finger um einen Weg zu finden und dann programmiere
          ihn!
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: Es gibt viele Möglichkeiten, zum Schwein
          zu kommen. Benutze deinen Finger um einen Weg zu finden und dann programmiere
          ihn!
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: _"Pass sehr gut auf, dass ich mich
          in die richtige Richtung drehe, wenn du mich rückwärts laufen lässt!"_
        courseC_maze_programming_challenge2_b: |-
          Die kürzeste Lösung braucht nur 5 Blöcke, aber dieser Block wird benötigt:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: _"Pass sehr gut auf, dass ich mich
          in die richtige Richtung drehe, wenn du mich rückwärts laufen lässt!"_
        courseC_maze_programming_challenge2_b: |-
          Die kürzeste Lösung braucht nur 5 Blöcke, aber dieser Block wird benötigt:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: _"Pass sehr gut auf, dass ich mich
          in die richtige Richtung drehe, wenn du mich rückwärts laufen lässt!"_
        courseC_maze_programming_challenge2_b: |-
          Die kürzeste Lösung braucht nur 5 Blöcke, aber dieser Block wird benötigt:

          <xml><block type="controls_repeat_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: BB-8 hebt den Metallschrott automatisch auf, wenn
          er darüber fährt.
        courseC_starWars_loops1_c: Du musst den Block 'vorwärts bewegen' 5 mal verwenden
          um diese Aufgabe zu lösen.
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: Schaut dieses Muster nicht wie eine Riesentreppe
          aus? Schau, ob du verwenden kannst was du in den letzten Aufgaben schon
          gelernt hast um alle Drehungen richtig hinzubekommen.
        courseC_starWars_loops10_b: |-
          Wenn du weniger Code verwenden möchtest, kannst du auch eine 'wiederholen' in eine andere setzen!\
          So etwas heisst dann **verschachtelte Schleife**.
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: Schaut dieses Muster nicht wie eine Riesentreppe
          aus? Schau, ob du verwenden kannst was du in den letzten Aufgaben schon
          gelernt hast um alle Drehungen richtig hinzubekommen.
        courseC_starWars_loops10_b: |-
          Wenn du weniger Code verwenden möchtest, kannst du auch eine 'wiederholen' in eine andere setzen!\
          So etwas heisst dann **verschachtelte Schleife**.
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: Schaut dieses Muster nicht wie eine Riesentreppe
          aus? Schau, ob du verwenden kannst was du in den letzten Aufgaben schon
          gelernt hast um alle Drehungen richtig hinzubekommen.
        courseC_starWars_loops10_b: |-
          Wenn du weniger Code verwenden möchtest, kannst du auch eine 'wiederholen' in eine andere setzen!\
          So etwas heisst dann **verschachtelte Schleife**.
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: BB-8 hebt den Metallschrott automatisch auf, wenn
          er darüber fährt.
        courseC_starWars_loops1_c: Du musst den Block 'vorwärts bewegen' 5 mal verwenden
          um diese Aufgabe zu lösen.
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: BB-8 hebt den Metallschrott automatisch auf, wenn
          er darüber fährt.
        courseC_starWars_loops1_c: Du musst den Block 'vorwärts bewegen' 5 mal verwenden
          um diese Aufgabe zu lösen.
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: Um Code zu wiederholen, nimm eine 'wiederholen'
          Schleife und setze dann den Block, den du möchtest hinein.
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: Um Code zu wiederholen, nimm eine 'wiederholen'
          Schleife und setze dann den Block, den du möchtest hinein.
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: Um Code zu wiederholen, nimm eine 'wiederholen'
          Schleife und setze dann den Block, den du möchtest hinein.
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: Wenn du auf den kleinen Pfeil neben "links drehen"
          im Drehen Block klickst, kannst du ihn auf "rechts drehen" ändern.
        courseC_starWars_loops4_a: Benutze zwei `wiederhole` Bausteine.
        courseC_starWars_loops4_b: 'Jede ''wiederholen'' Schleife wird nur einen Befehl
          enthalten: ''vorwärts bewegen''.'
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: Wenn du auf den kleinen Pfeil neben "links drehen"
          im Drehen Block klickst, kannst du ihn auf "rechts drehen" ändern.
        courseC_starWars_loops4_a: Benutze zwei `wiederhole` Bausteine.
        courseC_starWars_loops4_b: 'Jede ''wiederholen'' Schleife wird nur einen Befehl
          enthalten: ''vorwärts bewegen''.'
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: Wenn du auf den kleinen Pfeil neben "links drehen"
          im Drehen Block klickst, kannst du ihn auf "rechts drehen" ändern.
        courseC_starWars_loops4_a: Benutze zwei `wiederhole` Bausteine.
        courseC_starWars_loops4_b: 'Jede ''wiederholen'' Schleife wird nur einen Befehl
          enthalten: ''vorwärts bewegen''.'
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: Um nach unten zu gehen, musst du dich zuerst in
          die Richtung drehen und dann wieder vorwärts gehen.
        courseC_starWars_loops5_a: Die beste Lösung benutzt eine Drehung, dann ein
          einzelnes 'vorwärts bewegen', nochmal eine Drehung und dann eine Schleife.
      courseC_starWars_loops5_2018:
        courseC_starWars_loops5_a: Die beste Lösung besteht aus einem einzigen "bewege
          vorwärts", dann einer Kurve und dann einer Schleife.
      courseC_starWars_loops5_2019:
        courseC_starWars_loops5_a: Die beste Lösung besteht aus einem einzigen "bewege
          vorwärts", dann einer Kurve und dann einer Schleife.
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: Versuche einmal alle nötigen Bewegungen auf ein
          Papier zu zeichnen und suche dann nach einem Muster.
        courseC_starWars_loops6_b: |-
          Wenn du weniger Code verwenden möchtest, kannst du auch eine 'wiederholen' in eine andere setzen!\
          So etwas heisst dann **verschachtelte Schleife**.
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: Versuche einmal alle nötigen Bewegungen auf ein
          Papier zu zeichnen und suche dann nach einem Muster.
        courseC_starWars_loops6_b: |-
          Wenn du weniger Code verwenden möchtest, kannst du auch eine 'wiederholen' in eine andere setzen!\
          So etwas heisst dann **verschachtelte Schleife**.
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: Versuche einmal alle nötigen Bewegungen auf ein
          Papier zu zeichnen und suche dann nach einem Muster.
        courseC_starWars_loops6_b: |-
          Wenn du weniger Code verwenden möchtest, kannst du auch eine 'wiederholen' in eine andere setzen!\
          So etwas heisst dann **verschachtelte Schleife**.
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: Dieses Muster sieht schwieriger aus, als es ist!
          Fang mit einer einfachen Treppenstufe an. Bekommst du damit den ganzen Metallschrott?
        courseC_starWars_loops7_b: Wenn du mit dieser Aufgabe Probleme hast, versuche
          einmal alle Bewegungen auf ein Blatt Papier zu schreiben und suche dann
          ein Muster.
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: Dieses Muster sieht schwieriger aus, als es ist!
          Fang mit einer einfachen Treppenstufe an. Bekommst du damit den ganzen Metallschrott?
        courseC_starWars_loops7_b: Wenn du mit dieser Aufgabe Probleme hast, versuche
          einmal alle Bewegungen auf ein Blatt Papier zu schreiben und suche dann
          ein Muster.
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: Dieses Muster sieht schwieriger aus, als es ist!
          Fang mit einer einfachen Treppenstufe an. Bekommst du damit den ganzen Metallschrott?
        courseC_starWars_loops7_b: Wenn du mit dieser Aufgabe Probleme hast, versuche
          einmal alle Bewegungen auf ein Blatt Papier zu schreiben und suche dann
          ein Muster.
      courseC_starWars_loops8:
        course_starWars_loops8_a: Versuche, das Problem in kleine Teile zu zerlegen.
          Lass dir Zeit. Du musst die Aufgabe nicht gleich beim ersten Versuch lösen!
        course_starWars_loops8_b: Schau dir die erste Hälfte der Aufgabe so an, als
          wäre es ein Treppenstufen Rätsel. Wie hast du das vorhin gelöst?
        course_starWars_loops8_c: |-
          Schau dir diesen Pfad an.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_a: Versuche, das Problem in kleine Teile zu zerlegen.
          Lass dir Zeit. Du musst die Aufgabe nicht gleich beim ersten Versuch lösen!
        course_starWars_loops8_b: Schau dir die erste Hälfte der Aufgabe so an, als
          wäre es ein Treppenstufen Rätsel. Wie hast du das vorhin gelöst?
        course_starWars_loops8_c: |-
          Schau dir diesen Pfad an.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_a: Versuche, das Problem in kleine Teile zu zerlegen.
          Lass dir Zeit. Du musst die Aufgabe nicht gleich beim ersten Versuch lösen!
        course_starWars_loops8_b: Schau dir die erste Hälfte der Aufgabe so an, als
          wäre es ein Treppenstufen Rätsel. Wie hast du das vorhin gelöst?
        course_starWars_loops8_c: |-
          Schau dir diesen Pfad an.

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: Du kannst mehr als einen Block in eine 'wiederholen'
          Schleife setzen.
        course_starWars_loops9_c: |-
          Du musst dich nicht nach links drehen um dieses Rätsel zu lösen. Alle deine Drehungen können nach rechts gehen.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: Du kannst mehr als einen Block in eine 'wiederholen'
          Schleife setzen.
        course_starWars_loops9_c: |-
          Du musst dich nicht nach links drehen um dieses Rätsel zu lösen. Alle deine Drehungen können nach rechts gehen.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: Du kannst mehr als einen Block in eine 'wiederholen'
          Schleife setzen.
        course_starWars_loops9_c: |-
          Du musst dich nicht nach links drehen um dieses Rätsel zu lösen. Alle deine Drehungen können nach rechts gehen.

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_2_2018:
        courseD_artist_project1_b: Erinner dich, dass `bewege` eine Linie zieht, während
          `springe` dies nicht tut.
      courseD_artist_2_2018_2019:
        courseD_artist_project1_b: Erinner dich, dass `bewege` eine Linie zieht, während
          `springe` dies nicht tut.
      courseD_artist_5_2018:
        '1': Wenn du deine Formen wechselst, vergiss nicht, dass du auch ihre Winkel
          wechseln musst!
      courseD_artist_5_2018_2019:
        '1': Wenn du deine Formen wechselst, vergiss nicht, dass du auch ihre Winkel
          wechseln musst!
      courseD_artist_binary_challenge2_2018:
        courseD_artist_binary_challenge2_a: Im Originalprogramm sind nur wenige Zeilen
          falsch.
      courseD_artist_binary_challenge2_2019:
        courseD_artist_binary_challenge2_a: Im Originalprogramm sind nur wenige Zeilen
          falsch.
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_a: |-
          Du musst insgesamt 6 Dreiecke zeichnen (Tipp: benutze deinen Code aus dem letzten Rätsel, um zu beginnen). Nachdem du jedes Dreieck fertig gezeichnet hast, drehst du dich um 60 Grad und fängst das nächste Dreieck an.

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
      courseD_bee_conditionals5_2018:
        courseD_bee_conditionals5_a: Betrachte jede Seite des rechteckigen Pfades
          als einen Weg für sich. Richte eine verschachtelte Schleife mit einem `Wiederholungsblock`
          auf der Außenseite und einer `währenden Weg vorwärts` Schleife auf der Innenseite
          ein. Wie viele Wege muss die Biene zurücklegen, wenn die Biene auf jeder
          Seite mit einer Blume zurückschlagen muss?
        courseD_bee_conditionals5_b: Innerhalb des Bausteins`solange ein Pfad vor
          Dir liegt` müsst ihr euch vorwärts bewegen und nach einer Blume Ausschau
          halten. Wie prüft man, ob eine Blume vorhanden ist? Was tust du, wenn eine
          Blume vorhanden ist?
      courseD_bee_conditionals5_2019:
        courseD_bee_conditionals5_a: Wenn Sie einen \`wenn an der Blume'-Baustein
          verwenden, kannst du dies mit einer verschachtelten Schleife lösen. Schreibe
          ein Programm für den linken und unteren Pfad und wiederhole dann alles zweimal!
        courseD_bee_conditionals5_c: Um den Weg weiterzugehen, muss die Biene `vorwärts`
          gehen. Wenn sie sich bewegt, muss die Biene nach einer Blume suchen. `Wenn
          an der Blume`, sollte die Biene `Nektar sammeln`.
      courseD_bounce_events10s_2018:
        courseD_bounce_events10s_a: |-
          Du solltest diese beiden Ereignisse in deinem Code haben:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block></xml>
      courseD_bounce_events10s_2019:
        courseD_bounce_events10s_a: |-
          Du solltest diese beiden Ereignisse in deinem Code haben:

          <xml><block type="bounce_whenBallInGoal" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">swish</title><next><block type="bounce_incrementPlayerScore"></block></next></block></next></block><block type="bounce_whenBallMissesPaddle" deletable="false"><next><block type="bounce_playSound"><title name="SOUND">whistle</title><next><block type="bounce_incrementOpponentScore"></block></next></block></next></block></xml>
      courseD_bounce_events11s_2018:
        courseD_bounce_events11s_a: Du musst einen Ball werfen, wenn das Spiel beginnt,
          wenn du den Korb triffst und wenn die Hand den Ball verfehlt.
      courseD_bounce_events11s_2019:
        courseD_bounce_events11s_a: Du musst einen Ball werfen, wenn das Spiel beginnt,
          wenn du den Korb triffst und wenn die Hand den Ball verfehlt.
      courseD_bounce_events12s_2018:
        courseD_bounce_events12s_a: Du kannst den Basketball oder die Hand beschleunigen,
          indem du diese Bausteine an das Ereignis `wenn Ausführen` anbringst.
        courseD_bounce_events12s_b: Versuche, dass jeder Schuss 2 Punkte wert ist
          und ändere das Mannschaftslogo in das Ihrer Heimatstadt!
      courseD_bounce_events12s_2019:
        courseD_bounce_events12s_a: Du kannst den Basketball oder die Hand beschleunigen,
          indem du diese Bausteine an das Ereignis `wenn Ausführen` anbringst.
        courseD_bounce_events12s_b: Versuche, dass jeder Schuss 2 Punkte wert ist
          und ändere das Mannschaftslogo in das Ihrer Heimatstadt!
      courseD_bounce_events1s_2018:
        courseD_bounce_events1s_a: |-
          Du musst den Block `move left` zum Ereignis `when arrow` hinzufügen, damit dieses Spiel funktioniert:

           <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
          </xml>
        courseD_bounce_events1s_b: Vergiss nicht, "Ausführen" zu drücken und die Hand
          in den Korb zu legen, um dieses Rätsel zu lösen.
      courseD_bounce_events1s_2019:
        courseD_bounce_events1s_a: |-
          Du musst den Block `move left` zum Ereignis `when arrow` hinzufügen, damit dieses Spiel funktioniert:

           <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
          </xml>
        courseD_bounce_events1s_b: Vergiss nicht, "Ausführen" zu drücken und die Hand
          in den Korb zu legen, um dieses Rätsel zu lösen.
      courseD_bounce_events2s_2018:
        courseD_bounce_events2s_a: |-
          Du musst zweimal das`move` Ereignissen verwenden, damit dies funktioniert:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events2s_2019:
        courseD_bounce_events2s_a: |-
          Du musst zweimal das`move` Ereignissen verwenden, damit dies funktioniert:

          <xml>
            <block type="bounce_whenLeft" deletable="false" x="20" y="20">
              <next>
                <block type="bounce_moveLeft"/>
              </next>
            </block>
            <block type="bounce_whenRight" deletable="false" x="180" y="20">
              <next>
                <block type="bounce_moveRight"/>
              </next>
            </block>
          </xml>
      courseD_bounce_events5s_2018:
        courseD_bounce_events5s_a: Sie müssen die Hand nicht bewegen, um dieses Rätsel
          zu lösen.
        courseD_bounce_events5s_b: |-
          Stelle sicher, dass du diesen Code in deinem Arbeitsbereich hinzugefügt hast:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events5s_2019:
        courseD_bounce_events5s_a: Sie müssen die Hand nicht bewegen, um dieses Rätsel
          zu lösen.
        courseD_bounce_events5s_b: |-
          Stelle sicher, dass du diesen Code in deinem Arbeitsbereich hinzugefügt hast:

          <xml>  <block type="bounce_whenPaddleCollided" deletable="false"> <next> <block type="bounce_bounceBall"/></next></block></xml>
      courseD_bounce_events6s_2018:
        courseD_bounce_events6s_a: |-
          Hast du eine Ereignis, das so aussieht?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Wenn du den Code richtig geschrieben hast, musst
          du nicht die Hand bewegen, um zu gewinnen.
      courseD_bounce_events6s_2019:
        courseD_bounce_events6s_a: |-
          Hast du eine Ereignis, das so aussieht?

          <xml><block type="bounce_whenWallCollided" deletable="false"><next><block type="bounce_bounceBall"></block></next></block></block></xml>
        courseD_bounce_events6s_b: Wenn du den Code richtig geschrieben hast, musst
          du nicht die Hand bewegen, um zu gewinnen.
      courseD_bounce_events7s_2018:
        courseD_bounce_events7s_a: Du kannst Sounds an mehreren Stellen hinzufügen,
          wenn du Lust dazu hast!
      courseD_bounce_events7s_2019:
        courseD_bounce_events7s_a: Du kannst Sounds an mehreren Stellen hinzufügen,
          wenn du Lust dazu hast!
      courseD_collector_debugging2a_2018:
        courseD_collector_debugging2a_c: |-
          Was passiert dann?

          Was soll passieren?

          Was sagt dir das?
      courseD_collector_debugging2a_2019:
        courseD_collector_debugging2a_c: |-
          Was passiert dann?

          Was soll passieren?

          Was sagt dir das?
      courseD_collector_debugging5a_2018:
        courseD_collector_debugging5a_a: |-
          Was bewirkt es?

          Was soll es bewirken?

          Was sagt dir das?
        courseD_collector_debugging5a_b: Sobald du die erste Reihe an Schätzen gesammelt
          hast, was bleibt in deinem Code übrig?
      courseD_collector_debugging5a_2019:
        courseD_collector_debugging5a_a: |-
          Was bewirkt es?

          Was soll es bewirken?

          Was sagt dir das?
        courseD_collector_debugging5a_b: Sobald du die erste Reihe an Schätzen gesammelt
          hast, was bleibt in deinem Code übrig?
      courseD_collector_debugging6a_2018:
        courseD_collector_debugging6_b: Es sieht so aus, als ob sich alle benötigten
          Bausteine im Arbeitsbereich befinden. Versuche auf "Neuanfang" zu klicken,
          wenn es zu verwirrend wird.
      courseD_collector_debugging6a_2019:
        courseD_collector_debugging6_b: Es sieht so aus, als ob sich alle benötigten
          Bausteine im Arbeitsbereich befinden. Versuche auf "Neuanfang" zu klicken,
          wenn es zu verwirrend wird.
      courseD_collector_nested_loops_challenge2:
        courseD_bee_nested_loops_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018:
        courseD_bee_nested_loops_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2019:
        courseD_bee_nested_loops_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_dropdown">
                  <title name="TIMES" config="3-10">3</title>
                  <statement name="DO">
                    <block type="maze_move">
                      <title name="DIR">moveForward</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                      <next>
                        <block type="controls_repeat_dropdown">
                          <title name="TIMES" config="3-10">3</title>
                          <statement name="DO">
                            <block type="collector_collect">
                              <next>
                                <block type="controls_repeat_dropdown">
                                  <title name="TIMES" config="3-10">3</title>
                                  <statement name="DO">
                                    <block type="maze_move">
                                      <title name="DIR">moveForward</title>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="controls_repeat_dropdown">
                                          <title name="TIMES" config="3-10">3</title>
                                          <statement name="DO">
                                            <block type="maze_move">
                                              <title name="DIR">moveForward</title>
                                            </block>
                                          </statement>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseD_collector_ramp10:
        courseD_artist_ramp10_a: |-
          Anstatt vier `bewege vorwärts` für jede Seite zu verwenden, versuche einen `bewege vorwärts`-Baustein innerhalb einer `wiederhole`-Schleife zu platzieren, so wie hier:

          <xml><block type="controls_repeat">
                                                      <title name="TIMES">4</title>
                                                      <statement name="DO">
                                                        <block type="maze_moveForward"/>
                                                      </statement>
                                                    </block></xml>
        courseD_artist_ramp10_b: Vergiss nicht, ein Stück des Schatzes einzusammeln,
          und dreh Dich dann um, um auf einer neuen Seite des Platzes zu beginnen!
        courseD_artist_ramp10_c: Wenn du deinen Code vereinfachen möchtest, kannst
          du eine Wiederholungsschleife in eine andere einfügen! Dies wird eine **geschachtelte
          Schleife** genannt.
      courseD_collector_ramp8:
        courseD_collector_ramp8_a: Wenn du zu einem Platz mit einem Schatz kommst,
          benutze "Sammeln", um ihn aufzuheben. Für dieses Rätsel musst du mehr als
          einmal einen Schatz sammeln!
      courseD_collector_ramp9:
        courseD_collector_ramp9_a: Beginne damit, Laurel zum ersten Schatz zu bringen
          und diesen dann einzusammeln. Kannst du diese Sequenz wiederholen, um den
          zweiten Stapel zu bekommen?
        courseD_collector_ramp9_b: Wenn du deinen Code vereinfachen möchtest, kannst
          du eine Wiederholungsschleife in eine andere einfügen! Dies wird eine **geschachtelte
          Schleife** genannt.
      courseD_farmer_condLoops6_2018:
        courseD_farmer_condLoops6_a: Verwende eine `Solange ein Weg vor Dir liegt`
          Schleife oder einen `Wenn Weg voraus / sonst` Baustein, um den Farmer jedes
          Stück der Spirale nach unten zu bewegen.
        courseD_farmer_condLoops6_b: Du musst nur während der meiste Zeit der Ernte
          nach Mais suchen.  Wähle einfach einen Kürbis am Ende deines Programms.
      courseD_farmer_condLoops6_2019:
        courseD_farmer_condLoops6_a: Verwende eine `Solange ein Weg vor Dir liegt`
          Schleife oder einen `Wenn Weg voraus / sonst` Baustein, um den Farmer jedes
          Stück der Spirale nach unten zu bewegen.
        courseD_farmer_condLoops6_b: Du musst nur während der meiste Zeit der Ernte
          nach Mais suchen.  Wähle einfach einen Kürbis am Ende deines Programms.
      courseD_farmer_condLoops7_2019:
        courseD_farmer_condLoops7_b: Versuche ˋSo lange ein Weg vor dir liegtˋ zu
          benutzen um den Gärtner die richtige Anzahl von Schritten gehen zu lassen.
      courseD_iceage_loops1:
        courseD_iceage_loops1_a: Vorsicht bei gebrochenem Eis! Scrat fällt gleich
          durch!
        courseD_iceage_loops1_b: |-
          Du musst diesen Block benutzen:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops10:
        courseB_iceage_loops10_a: Vorsicht bei gebrochenem Eis! Scrat fällt dort ins
          Wasser!
        courseB_iceage_loops10_c: Das ist ein langes Rätsel! Folge diesem Weg.
      courseD_iceage_loops10_2019:
        courseB_iceage_loops10_a: Vorsicht bei gebrochenem Eis! Scrat fällt dort ins
          Wasser!
        courseB_iceage_loops10_c: Das ist ein langes Rätsel! Folge diesem Weg.
      courseD_iceage_loops1_2019:
        courseD_iceage_loops1_a: Vorsicht bei gebrochenem Eis! Scrat fällt gleich
          durch!
        courseD_iceage_loops1_b: |-
          Du musst diesen Block benutzen:

          <xml><block type="maze_moveForward"/></xml>
      courseD_iceage_loops2:
        courseD_iceage_loops2_b: Wenn du nicht weiterkommst, versuche die Schritte
          laut zu sagen.
        courseD_iceage_loops2_c: Folgt diesem Weg, um Scrat zur Eichel zu bringen.
      courseD_iceage_loops2_2019:
        courseD_iceage_loops2_b: Wenn du nicht weiterkommst, versuche die Schritte
          laut zu sagen.
        courseD_iceage_loops2_c: Folgt diesem Weg, um Scrat zur Eichel zu bringen.
      courseD_iceage_loops3:
        courseB_iceage_loops3_a: |-
          Verwende diesen neuen Baustein! <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
        courseB_iceage_loops3_b: Um den Code zu wiederholen, ziehe einen `wiederhole`-Baustein
          auf die Arbeitsfläche und setze dann den zu wiederholenden Block hinein.
      courseD_iceage_loops3_2019:
        courseB_iceage_loops3_a: |-
          Benutze diesen neuen Block!

           <xml><block type="controls_repeat_dropdown">
              <title name="TIMES" config="2-10">5</title>
            </block></xml>
        courseB_iceage_loops3_b: Um den Code zu wiederholen, ziehe einen `wiederhole`-Baustein
          auf die Arbeitsfläche und setze dann den zu wiederholenden Block hinein.
      courseD_iceage_loops4:
        courseD_iceage_loops4_a: Scheue Dich nicht, Deinen Programmcode auszuführen
          und schau, was passiert!
        courseD_iceage_loops4_b: Versuche die Schritte aufzuschreiben, die Scrat unternehmen
          würde, um an die Eichel zu gelangen.  Siehst du ein Muster?
        courseD_iceage_loops4_c: Das ist der Weg, den Scrat einschlagen sollte.
      courseD_iceage_loops4_2019:
        courseD_iceage_loops4_a: Scheue Dich nicht, Deinen Programmcode auszuführen
          und schau, was passiert!
        courseD_iceage_loops4_b: Versuche die Schritte aufzuschreiben, die Scrat unternehmen
          würde, um an die Eichel zu gelangen.  Siehst du ein Muster?
        courseD_iceage_loops4_c: Das ist der Weg, den Scrat einschlagen sollte.
      courseD_iceage_loops6:
        courseD_iceage_loops6_a: Dein endgültiger Code wird **drei** `bewege vorwärts`-Bausteine
          haben.
        courseD_iceage_loops6_b: Du musst nur **eine** weitere Schleife hinzufügen!
        courseD_iceage_loops6_c: Am Ende sollte Dein Weg so aussehen.
      courseD_iceage_loops6_2019:
        courseD_iceage_loops6_a: Dein endgültiger Code wird **drei** `bewege vorwärts`-Bausteine
          haben.
        courseD_iceage_loops6_b: Du musst nur **eine** weitere Schleife hinzufügen!
        courseD_iceage_loops6_c: Am Ende sollte Dein Weg so aussehen.
      courseD_iceage_loops7:
        courseB_iceage_loops7_a: Versuche die Schritte auf ein Blatt Papier zu schreiben,
          wenn du nicht mehr weiter kommst. Siehst du ein Muster?
        courseB_iceage_loops7_b: Das ist der Weg, den Scrat nehmen sollte, um zur
          Eichel zu gelangen.
      courseD_iceage_loops7_2019:
        courseB_iceage_loops7_a: Versuche die Schritte auf ein Blatt Papier zu schreiben,
          wenn du nicht mehr weiter kommst. Siehst du ein Muster?
        courseB_iceage_loops7_b: Das ist der Weg, den Scrat nehmen sollte, um zur
          Eichel zu gelangen.
      courseD_iceage_loops8:
        courseD_iceage_loops8_a: Sind die `drehe`-Bausteine richtig? Was kann man
          noch ändern?
        courseD_iceage_loops8_c: Benutze Schleifen, um Scrat zu helfen, diesem Weg
          zu folgen.
      courseD_iceage_loops8_2019:
        courseD_iceage_loops8_a: Sind die `drehe`-Bausteine richtig? Was kann man
          noch ändern?
        courseD_iceage_loops8_c: Benutze Schleifen, um Scrat zu helfen, diesem Weg
          zu folgen.
      courseD_iceage_loops9:
        courseD_iceage_loops9_a: Hast du Probleme? Versuche, dieses Puzzle in kleinere
          Stücke zu zerlegen. Scheue Dich nicht davor, Dein Puzzle zu lösen, während
          Du den Code schreibst!
        courseD_iceage_loops9_b: Dein endgültiger Code sollte **4** Schleifen haben.
        courseD_iceage_loops9_c: Scrat sollte diesem Weg folgen, um die Eichel zu
          bekommen.
      courseD_iceage_loops9_2019:
        courseD_iceage_loops9_a: Hast du Probleme? Versuche, dieses Puzzle in kleinere
          Stücke zu zerlegen. Scheue Dich nicht davor, Dein Puzzle zu lösen, während
          Du den Code schreibst!
        courseD_iceage_loops9_b: Dein endgültiger Code sollte **4** Schleifen haben.
        courseD_iceage_loops9_c: Scrat sollte diesem Weg folgen, um die Eichel zu
          bekommen.
      courseD_maze_intro4_2019:
        courseC_maze_programming4_a: Aus Sicht von Red kannst du dich nach rechts
          oder links wenden. Wenn Red nach rechts schau, wird eine Drehung nach rechts
          ihn nach unten führen.
        courseC_maze_programming4_b: Um dem Weg zu folgen, bewege Dich vorwärts und
          drehe dich in eine Richtung. Gehe anschließend weiter und drehen dich dann
          in die andere Richtung. Zuletzt bewege dich noch ein weiteres Mal vorwärts,
          um die Eichel zu erreichen.
      courseD_maze_intro5a_2019:
        courseC_maze_programming5_b: Denke daran, dass Kurven aus Sicht von Red zu
          sehen sind.
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp1:
        courseC_maze_programming1_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp1_2018:
        courseC_maze_programming1_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp1_2019:
        courseC_maze_programming1_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp4_2019:
        courseC_maze_programming4_a: Aus Sicht von Scrat kannst du dich nach rechts
          oder links wenden. Wenn Scrat nach rechts schau, wird eine Drehung nach
          rechts ihn nach unten führen.
        courseC_maze_programming4_b: Um dem Weg zu folgen, bewege Dich vorwärts und
          drehe dich in eine Richtung. Gehe anschließend weiter und drehen dich dann
          in die andere Richtung. Zuletzt bewege dich noch ein weiteres Mal vorwärts,
          um die Eichel zu erreichen.
      courseD_maze_ramp5:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5_2018:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5_2019:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5a:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5a_2018:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5a_2019:
        courseC_maze_programming5_b: Denke daran, dass Kurven aus Sicht von Scrat
          zu sehen sind.
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5b:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5b_2018:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp5b_2019:
        courseC_maze_programming5_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Es gibt zwei Möglichkeiten um dieses Puzzle zu
          lösen!
        courseC_maze_programming6_b: Der Vogel fängt an, mit dem Gesicht gegen eine
          Wand zu fliegen, also denke daran, dich umzudrehen, bevor du Dich bewegst.
        courseC_maze_programming6_c: Denke daran, dass du ein Stück des Codes auf
          einmal schreiben kannst, dann lass es laufen, um herauszufinden, wohin du
          von dort aus gehen musst.
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: Vergiss nicht, die "Schritt" Taste zu benutzen um Block
          für Block die Fehler zu suchen.
        courseD_maze_ramp7_a: Verwende Wiederholungs-Bausteine, um entweder einen
          einzelnen Baustein oder ein Stück Code immer wieder auszuführen.
        courseD_maze_ramp7_c: Wenn du deinen Code vereinfachen möchtest, kannst du
          eine Wiederholungsschleife in eine andere einfügen! Dies wird eine **geschachtelte
          Schleife** genannt.
      courseD_scrat_ramp1:
        courseC_maze_programming1_a: Wenn Scrat nicht zur Eichel kommt, stelle sicher,
          dass alle drei Blöcke vollständig eingerastet sind, und klicke dann erneut
          auf "Ausführen".
        courseC_maze_programming1_b: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_scrat_ramp4:
        courseC_maze_programming4_a: Aus Sicht von Scrat kannst du dich nach rechts
          oder links wenden. Wenn Scrat nach rechts schau, wird eine Drehung nach
          rechts ihn nach unten führen.
        courseC_maze_programming4_b: Um dem Weg zu folgen, bewege Dich vorwärts und
          drehe dich in eine Richtung. Gehe anschließend weiter und drehen dich dann
          in die andere Richtung. Zuletzt bewege dich noch ein weiteres Mal vorwärts,
          um die Eichel zu erreichen.
        courseC_maze_programming4_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Es gibt zwei Möglichkeiten um dieses Puzzle
          zu lösen!
        courseD_scrat_programming6_c: Hab keine Angst, einen Fehler zu machen! Versuche
          weitere Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es
          zu sehen was passiert, auch wenn du der Meinung bist, dass das Rätsel noch
          nicht gelöst ist.
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: Vergiss nicht, die "Schritt" Taste zu benutzen um Block
          für Block die Fehler zu suchen.
        courseD_maze_ramp7_a: Verwende Wiederholungs-Bausteine, um entweder einen
          einzelnen Baustein oder ein Stück Code immer wieder auszuführen.
        courseD_maze_ramp7_c: Hab keine Angst, einen Fehler zu machen! Versuche weitere
          Blöcke hinzuzufügen und den Code auszuführen. Manchmal hilft es zu sehen
          was passiert, auch wenn du der Meinung bist, dass das Rätsel noch nicht
          gelöst ist.
      courseE_artist_functions8:
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_g: "![](https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif)"
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="draw_colour" inline="true" id="draw-color">
                      <value name="COLOUR">
                        <block type="colour_picker">
                          <title name="COLOUR">#0000cd</title>
                        </block>
                      </value>
                      <next>
                        <block type="controls_for_counter" inline="true">
                        <mutation counter="counter"></mutation>
                          <value name="FROM">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <value name="TO">
                            <block type="math_number">
                              <title name="NUM">350</title>
                            </block>
                          </value>
                          <value name="BY">
                            <block type="math_number">
                              <title name="NUM">50</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="alpha" inline="true" id="alpha">
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">DIVIDE</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">2</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="math_number">
                                      <title name="NUM">4</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="draw_move" inline="true">
                                      <title name="DIR">moveForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">counter</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </statement>
                                  <next>
                                    <block type="jump" inline="true">
                                      <title name="DIR">jumpBackward</title>
                                      <value name="VALUE">
                                        <block type="math_number">
                                          <title name="NUM">25</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn" inline="true">
                                          <title name="DIR">turnRight</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                          <next>
                                            <block type="jump" inline="true">
                                              <title name="DIR">jumpBackward</title>
                                              <value name="VALUE">
                                                <block type="math_number">
                                                  <title name="NUM">25</title>
                                                </block>
                                              </value>
                                              <next>
                                                <block type="draw_turn" inline="true">
                                                  <title name="DIR">turnLeft</title>
                                                  <value name="VALUE">
                                                    <block type="math_number">
                                                      <title name="NUM">90</title>
                                                    </block>
                                                  </value>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </statement>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="draw_width" inline="false">
                  <value name="WIDTH">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_for_counter" inline="true">
                    <mutation counter="counter"></mutation>
                      <value name="FROM">
                        <block type="math_number">
                          <title name="NUM">5</title>
                        </block>
                      </value>
                      <value name="TO">
                        <block type="math_number">
                          <title name="NUM">250</title>
                        </block>
                      </value>
                      <value name="BY">
                        <block type="math_number">
                          <title name="NUM">2</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="draw_colour" inline="true" id="draw-color">
                          <value name="COLOUR">
                            <block type="colour_rgb" inline="false">
                              <value name="RED">
                                <block type="math_number">
                                  <title name="NUM">255</title>
                                </block>
                              </value>
                              <value name="GREEN">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <value name="BLUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="math_number">
                                      <title name="NUM">255</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block>
                          </value>
                          <next>
                            <block type="draw_move" inline="true">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">counter</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn" inline="true">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">80</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
      courseF_artist_variables4:
        courseF_artist_variables4_b: "![](https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif)"
      courseF_artist_variables4_2018:
        courseF_artist_variables4_a: Mach ihn bereit, das nächste Dreieck zu zeichnen.
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_artist_variables4_2019:
        courseF_artist_variables4_a: Dein Code wird nicht viel anders sein als im
          letzten Puzzle, außer dass du den Zeichner drehen musst, um herunterzuspringen,
          und ihn dann zurückdrehen musst, um dich darauf vorzubereiten, das nächste
          Dreieck zu zeichnen.
        courseF_artist_variables4_b: |-
          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="variables_set">
                  <title name="VAR">length</title>
                  <value name="VALUE">
                    <block type="math_number">
                      <title name="NUM">50</title>
                    </block>
                  </value>
                  <next>
                    <block type="controls_repeat_ext">
                      <value name="TIMES">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="controls_repeat_ext">
                          <value name="TIMES">
                            <block type="math_number">
                              <title name="NUM">3</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="draw_move">
                              <title name="DIR">moveForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnLeft</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">120</title>
                                    </block>
                                  </value>
                                </block>
                              </next>
                            </block>
                          </statement>
                          <next>
                            <block type="jump">
                              <title name="DIR">jumpForward</title>
                              <value name="VALUE">
                                <block type="variables_get">
                                  <title name="VAR">length</title>
                                </block>
                              </value>
                              <next>
                                <block type="draw_turn">
                                  <title name="DIR">turnRight</title>
                                  <value name="VALUE">
                                    <block type="math_number">
                                      <title name="NUM">90</title>
                                    </block>
                                  </value>
                                  <next>
                                    <block type="jump">
                                      <title name="DIR">jumpForward</title>
                                      <value name="VALUE">
                                        <block type="variables_get">
                                          <title name="VAR">length</title>
                                        </block>
                                      </value>
                                      <next>
                                        <block type="draw_turn">
                                          <title name="DIR">turnLeft</title>
                                          <value name="VALUE">
                                            <block type="math_number">
                                              <title name="NUM">90</title>
                                            </block>
                                          </value>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </statement>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_d: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_for" inline="true">
                  <title name="VAR">counter</title>
                  <value name="FROM">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <value name="TO">
                    <block type="math_number">
                      <title name="NUM">3</title>
                    </block>
                  </value>
                  <value name="BY">
                    <block type="math_number">
                      <title name="NUM">1</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="controls_repeat_ext" inline="true">
                      <value name="TIMES">
                        <block type="variables_get">
                          <title name="VAR">counter</title>
                        </block>
                      </value>
                      <statement name="DO">
                        <block type="maze_moveForward"/>
                      </statement>
                      <next>
                        <block type="controls_repeat_ext" inline="true">
                          <value name="TIMES">
                            <block type="variables_get">
                              <title name="VAR">counter</title>
                            </block>
                          </value>
                          <statement name="DO">
                            <block type="maze_nectar"/>
                          </statement>
                          <next>
                            <block type="maze_turn">
                              <title name="DIR">turnLeft</title>
                              <next>
                                <block type="controls_repeat_ext" inline="true">
                                  <value name="TIMES">
                                    <block type="variables_get">
                                      <title name="VAR">counter</title>
                                    </block>
                                  </value>
                                  <statement name="DO">
                                    <block type="maze_moveForward"/>
                                  </statement>
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnRight</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_turn">
                      <title name="DIR">turnRight</title>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="controls_for" inline="true">
                              <title name="VAR">counter</title>
                              <value name="FROM">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <value name="TO">
                                <block type="math_number">
                                  <title name="NUM">10</title>
                                </block>
                              </value>
                              <value name="BY">
                                <block type="math_number">
                                  <title name="NUM">2</title>
                                </block>
                              </value>
                              <statement name="DO">
                                <block type="maze_moveForward">
                                  <next>
                                    <block type="maze_turn">
                                      <title name="DIR">turnLeft</title>
                                      <next>
                                        <block type="maze_moveForward">
                                          <next>
                                            <block type="maze_turn">
                                              <title name="DIR">turnRight</title>
                                              <next>
                                                <block type="controls_repeat_ext" inline="true">
                                                  <value name="TIMES">
                                                    <block type="variables_get">
                                                      <title name="VAR">counter</title>
                                                    </block>
                                                  </value>
                                                  <statement name="DO">
                                                    <block type="maze_honey"/>
                                                  </statement>
                                                </block>
                                              </next>
                                            </block>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
          </xml>
      courseF_bee_functions3:
        courseF_bee_functions3_d: Sieh Dir diesen Weg an.
      courseF_bee_functions_challenge2:
        courseF_bee_functions_challenge2_b: |-
          **Lösung:**

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">4</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="maze_untilBlocked">
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="maze_if">
                              <title name="DIR">isPathRight</title>
                              <statement name="DO">
                                <block type="procedures_callnoreturn" id="function">
                                <mutation name="move and check"></mutation>
                                </block>
                              </statement>
                            </block>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnLeft</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
            <block type="procedures_defnoreturn" editable="false">
            <mutation></mutation>
              <title name="NAME">move and check</title>
              <statement name="STACK">
                <block type="controls_repeat_ext" inline="true">
                  <value name="TIMES">
                    <block type="math_number">
                      <title name="NUM">2</title>
                    </block>
                  </value>
                  <statement name="DO">
                    <block type="procedures_callnoreturn">
                    <mutation name="check nectar or honey"></mutation>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                          <next>
                            <block type="maze_untilBlocked">
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_turn">
                                  <title name="DIR">turnRight</title>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
            <block type="procedures_defnoreturn" editable="false" usercreated="true">
            <mutation></mutation>
              <title name="NAME">check nectar or honey</title>
              <statement name="STACK">
                <block type="bee_whileNectarAmount">
                  <title name="ARG1">nectarRemaining</title>
                  <title name="OP">&gt;</title>
                  <title name="ARG2">0</title>
                  <statement name="DO">
                    <block type="maze_nectar"/>
                  </statement>
                  <next>
                    <block type="bee_whileNectarAmount">
                      <title name="ARG1">honeyAvailable</title>
                      <title name="OP">&gt;</title>
                      <title name="ARG2">0</title>
                      <statement name="DO">
                        <block type="maze_honey"/>
                      </statement>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </xml>
      courseF_bee_variables_3_2018:
        courseF_beevariables_3a: |-
          Um eins von der Variable zu subtrahieren, kannst du diesen Code in deinem Programm verwenden:
          <xml><block type="variables_set" inline="false">
                              <title name="VAR">gather</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">gather</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block></xml>
      courseF_bee_variables_3_2019:
        courseF_bee_variables_3_2019_1: |-
          Um eins von der Variable zu subtrahieren, kannst du diesen Code in deinem Programm verwenden:
          <xml><block type="variables_set" inline="false">
                              <title name="VAR">gather</title>
                              <value name="VALUE">
                                <block type="math_arithmetic" inline="true">
                                  <title name="OP">MINUS</title>
                                  <value name="A">
                                    <block type="variables_get">
                                      <title name="VAR">gather</title>
                                    </block>
                                  </value>
                                  <value name="B">
                                    <block type="math_number">
                                      <title name="NUM">1</title>
                                    </block>
                                  </value>
                                </block>
                              </value>
                            </block></xml>
      courseF_bee_variables_4_2019:
        courseF_bee_variables_4_2019_1: Anstatt 1 von `gather` abzuziehen, addiere
          stattdessen jedesmal 1. Welchen Wert sollte die Variable zunächst haben?
      courseF_playlab_variables_challenge2:
        courseF_playlab_variables_challenge2_c: |-
          **Lösung:**

          <xml>
            <block type="studio_whenArrow">
              <title name="VALUE">up</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">1</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">down</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">4</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">left</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">8</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
                <block type="studio_moveDistanceParams" inline="true">
                  <title name="SPRITE">0</title>
                  <title name="DIR">2</title>
                  <value name="DISTANCE">
                    <block type="math_number">
                      <title name="NUM">25</title>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">1</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">0</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">ADD</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">3</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
            <block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">2</title>
              <next>
                <block type="studio_setScore" inline="false">
                  <value name="VALUE">
                    <block type="math_arithmetic" inline="true">
                      <title name="OP">MINUS</title>
                      <value name="A">
                        <block type="studio_getScore"/>
                      </value>
                      <value name="B">
                        <block type="math_number">
                          <title name="NUM">1</title>
                        </block>
                      </value>
                    </block>
                  </value>
                </block>
              </next>
            </block>
          </xml>
      coursea_maze_ramp1_2018:
        courseC_maze_programming1_a: Wenn der Vogel nicht zum Schwein gelangt, stelle
          sicher, dass beide Bausteine vollständig zusammengeklickt sind, und klicke
          dann erneut auf "Ausführen".
        courseC_maze_programming1_b: Hab keine Angst, einen Fehler zu machen! Probiere
          etwas aus, und wenn es nicht funktioniert, versuche etwas anderes!
      coursea_maze_ramp1_2019:
        courseC_maze_programming1_a: Wenn der Vogel nicht zum Schwein gelangt, stelle
          sicher, dass beide Bausteine vollständig zusammengeklickt sind, und klicke
          dann erneut auf "Ausführen".
        courseC_maze_programming1_b: Hab keine Angst, einen Fehler zu machen! Probiere
          etwas aus, und wenn es nicht funktioniert, versuche etwas anderes!
      iceage_warn_ice_age:
        iceage_warn_ice_age_a: 'Du solltest nur zwei Blöcke hinzufügen müssen, um
          dieses Puzzle zu vervollständigen. '
