---
pt-BR:
  data:
    authored_hints:
      2-3 Artist 1 new_authored_hint:
        2-3_Artist_1_new_a: Se você usar o bloco para me fazer `avançar por 100 pixels`,
          eu desenharei uma linha automaticamente.
        2-3_Artist_1_new_b: Você está tendo problemas para virar a esquina? Use o
          bloco 'virar à direita 90 graus'.
      2-3 Artist 11_authored_hint:
        2-3_Artist_11_a: 'Está tendo problemas com os ângulos? Você precisa percorrer
          360 graus em 8 rodadas. Quanto é 360/8? '
      2-3 Artist 12_authored_hint:
        2-3_Artist_12_a: Há 360 graus em uma circunferência, então se o artista virar
          1 grau de cada vez ao longo do loop, ele precisará fazer isso 360 vezes.
      2-3 Artist 2 new_authored_hint:
        2-3_Artist_2_new_a: A artista parece não estar apontando na direção correta.
          Você pode fazê-la virar-se antes de desenhar a linha?
      2-3 Artist 3new_authored_hint:
        2-3_Artist_3new_a: Quanto é 100-70? Com base no problema da história, essa
          é a altura que o chapéu precisa ter!
        2-3_Artist_3new_b: A artista parece não estar apontando na direção correta.
          Você pode fazê-la virar-se antes de desenhar a linha?
      2-3 Artist 4_authored_hint:
        2-3_Artist_4_a: Para terminar a casa, tudo o que precisamos fazer é desenhar
          um quadrado!
      2-3 Artist 6_authored_hint:
        2-3_Artist_6_a: 'Para fazer esses pequenos ângulos, você deve virar *um pouco
          mais* a cada vez do que você fez com o quadrado.   '
        2-3_Artist_6_b: Uma vez que eu já estou olhando para a direita, é mais fácil
          começar indo em frente e depois ir virando à esquerda para criar o triângulo.
        2-3_Artist_6_c: Cada lado do triângulo é do mesmo comprimento de cada lado
          do quadrado... 100 pixels!
      2-3 Artist 7_authored_hint:
        2-3_Artist_7_a: A maneira mais fácil de resolver este enigma é desenhar o
          primeiro quadrado e acabar com o artista apontando para baixo antes de começar
          o segundo quadrado.
      2-3 Artist 8_authored_hint:
        2-3_Artist_8_a: Se você cortar 200 ao meio, quantos pixels de largura cada
          quadrado precisa de ser?
      2-3 Artist 9 NEW_authored_hint:
        2-3_Artist_9_a: Este diamante é, na realidade, apenas um quadrado de lado
      2-3 Artist 9 REPLACEMENT_authored_hint:
        step_size: Cada etapa é de 100 pixels de largura e 100 pixels de altura.
      2-3 Artist 9_authored_hint:
        2-3_Artist_9_a: Este diamante é apenas um quadrado inclinado em 45 graus.
        2-3_Artist_9_b: Não se esqueça de girar o artista em 45 graus antes de começar
          a desenhar seu quadrado
      2-3 Artist Debugging 10_authored_hint:
        2-3_Artist_Debugging_10_a: 'Lembre-se: você quer o painel de controle mais
          largo em 10 pixels... Lembre-se de adicionar 10 a todos os números que você
          mudar.'
        2-3_Artist_Debugging_10_b: |-
          ** Tentativa e erro está perfeito aqui!**
          Comece mudando um número de cada vez.
          Quais números fazem o quê?
          Se você se perder e quiser reiniciar, basta clicar em "Começar de novo".
      2-3 Artist Debugging 2_authored_hint:
        2-3_Artist_Debugging_2_a: 'Dica: Cada bigode tem comprimento de 75 pixels.'
      2-3 Artist Debugging 3_authored_hint:
        2-3_Artist_Debugging_3_a: Uma das curvas está muito curta em 15 graus.
        2-3_Artist_Debugging_3_b: Se o programa é executado muito rápido para ver
          o que está acontecendo, tente diminuir o ritmo com o controle deslizante.
      2-3 Artist Debugging 7_authored_hint:
        2-3_Artist_Debugging_7_a: O que acontece se você tiver o artista mover-se
          ou saltar para trás depois que ele desenha a primeira linha?
      2-3 Artist Debugging 8_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Quantas vezes minha forma foi repetida?
          Quantas vezes a forma deveria ter sido repetida?
          Onde você pode mudar isso no programa?
      2-3 Artist Debugging 9_authored_hint:
        2-3_Artist_Debugging_9_a: O artista precisa virar 60 graus para a esquerda
          mais distante antes de começar a desenhar!
        2-3_Artist_Debugging_9_b: Você não precisa adicionar outro bloco para obter
          a volta completa, basta adicionar 60 graus ao bloco de 'virar à esquerda'
          que já está lá!
      2-3 Artist Functions 1 a_authored_hint:
        2-3_Artist_Functions_1_a: Cada um dos quadrados tem 100 de pixels de lado,
          o que significa que você terá que movê-lo para frente 175 pixels antes de
          desenhar o seu segundo quadrado.
        2-3_Artist_Functions_1_b: É okey desenhar linhas sobrepostas para fazer seus
          óculos.
      2-3 Artist Functions 1_authored_hint:
        2-3_Artist_Functions_1_a: Cada um dos quadrados tem 100 de pixels de lado,
          o que significa que você terá que movê-lo para frente 175 pixels antes de
          desenhar o seu segundo quadrado.
        2-3_Artist_Functions_1_b: É okey desenhar linhas sobrepostas para fazer seus
          óculos.
      2-3 Artist Functions 11 a_authored_hint:
        2-3_Artist_Functions_11_a: Você precisará mudar não só o número e o comprimento
          dos lados dentro da função, mas também o ângulo que o artista gira em cada
          lado.
      2-3 Artist Functions 11_authored_hint:
        2-3_Artist_Functions_11_a: Você precisará mudar não só o número e o comprimento
          dos lados dentro da função, mas também o ângulo que o artista gira em cada
          lado.
      2-3 Artist Functions 12 a_authored_hint:
        2-3_Artist_Functions_12_a: Tente executar o código primeiro para ver o que
          você precisa adicionar.
      2-3 Artist Functions 12_authored_hint:
        2-3_Artist_Functions_12_a: Tente executar o código primeiro para ver o que
          você precisa adicionar.
      2-3 Artist Functions 2 a_authored_hint:
        2-3_Artist_Functions_2_a: "Seu programa deve: \n-Usar função\n- Mover para
          frente 100 + 75 pixels\n- Usar função"
      2-3 Artist Functions 2_authored_hint:
        2-3_Artist_Functions_2_a: "Seu programa deve: \n-Usar função\n- Mover para
          frente 100 + 75 pixels\n- Usar função"
      2-3 Artist Functions 3 a_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 3_authored_hint:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4 a_authored_hint:
        2-3_Artist_Functions_4_a: A artista precisa girar 120 graus entre cada quadrado
          para concluir este projeto.
      2-3 Artist Functions 4_authored_hint:
        2-3_Artist_Functions_4_a: A artista precisa girar 120 graus entre cada quadrado
          para concluir este projeto.
      2-3 Artist Loops New 11_authored_hint:
        2-3_Artist_Loops_New_11_a: |-
          Lembre-se que o código do último quebra-cabeça era:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">8</title>
          <statement name="DO">
          <block type="draw_colour" inline="true">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">turnRight</title>
          <title name="VALUE" config="45,60,90,120,180">45</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">avançar</title>
          <title name="VALUE">50</title>
          <next>
          <block type="draw_turn_by_constant_dropdown">
          <title name="DIR">turnLeft</title>
          <title name="VALUE" config="45,60,90,120,180">90</title>
          <next>
          <block type="draw_move_by_constant">
          <title name="DIR">avançar</title>
          <title name="VALUE">50</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
        2-3_Artist_Loops_New_11_b: Sua próxima vez deve ir no * * fim * * do código,
          dentro do loop.
      2-3 Artist Loops New 12_authored_hint:
        2-3_Artist Loops_New_12_a: Antes de iniciar o diamante, o artista deve girar
          60 graus à esquerda para chegar no caminho certo.
        2-3_Artist Loops_New_12_b: Depois que o artista andar 100 pixels para frente,
          ele vai precisar girar 120 graus a direita para fazer um ângulo agudo.
        2-3_Artist Loops_New_12_c: A artista precisa girar apenas 60 graus para criar
          um ângulo obtuso.
      2-3 Artist Loops New 13_authored_hint:
        2-3_Artist_Loops_New_13_a: "Ao final de cada diamante, a artista já estará
          na direção certa para iniciar o novo. \nPor causa disso, não precisamos
          adicionar  mais um bloco 'vire à esquerda' antes de começar o próximo diamante."
        2-3_Artist_Loops_New_13_b: "Para fazer cada diamante, o artista precisa:\n-
          mover \n- virar a direita 120 graus\n- mover \n- virar a direita 60 graus\n\nE
          então, fazer tudo de novo!"
      2-3 Artist Loops New 9_authored_hint:
        2-3_Artist_Loops_New_9_a: O artista precisa girar 45 graus para a direita
          antes de começar o desenho.
        2-3_Artist_Loops_New_9_b: Este V é realmente apenas metade de um quadrado.  Qual
          seria o código para desenhar a metade de um quadrado?
      2-3 Artist Nested Loops 1_authored_hint:
        2-3_Artist_Nested_Loops_1_a: Lembre-se de colocar todos os blocos cinzas dentro
          de seu loop.
      2-3 Artist Nested Loops 3_authored_hint:
        2-3_Artist_Nested_Loops_3_a: |-
          Precisa de ajuda com os ângulos?
          * * 360/12 = 30 * *
        2-3_Artist_Nested_Loops_3_b: Lembre-se de colocar todo o código cinzento e
          virar o seu bloco dentro de um loop.
      2-3 Artist Nested Loops 4_authored_hint:
        2-3_Artist_Nested_Loops_3_a: |-
          Precisa de ajuda com os ângulos?
          * * 360/12 = 30 * *
      2-3 Artist Nested Loops 5_authored_hint:
        2-3_Artist_Nested_Loops_5_a: "Tente usar o bloco 'saltar para a frente' para
          conseguir ir do topo de um quadrado para o lugar onde você vai começar o
          próxima. \nSe seus quadrados tiverem 20 pixels de altura e estiverem separados
          por 20 pixels entre si, qual distância você precisa saltar?"
      2-3 Artist Nested Loops 7_authored_hint:
        2-3_Artist_Nested_Loops_7_a: |-
          Quão longe você deve virar em cada loop?

          Quanto é 360/10?
      2-3 Artist Nested Loops 9_authored_hint:
        2-3_Artist_Nested_Loops_9_a: "Precisa de ajuda para encontrar o ângulo correto?
          \n\n**360 / 12 = 30**"
      2-3 Bee Conditionals 14_authored_hint:
        2-3_Bee_Conditionals_14_a: Está tendo dificuldade em descobrir como abaixar
          os blocos?  Tente tratar a flor vermelha exatamente como uma flor roxa!
        2-3_Bee_Conditionals_14_b: Se as flores vermelhas fossem roxas, você conseguiria
          reduzir o código usando mais um ciclo 'repeat'?
        2-3_Bee_Conditionals_14_c: "Tente separar isso em dois códigos distintos:\n\n\n![](https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png)\n\n1)
          Coletar nectar 3 vezes\n  - Andar para frente 5 vezes\n  - Verifique se
          há nectar, se houver: pqgue\n  - Vire à esquerda\n  \n2) Fazer mel\n  -
          Andar para frente 1 vez\n  - Faça mel 2 vezes"
      2-3 Bee Conditionals 15_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Lembre-se: Flores roxas só tem 0 ou 1 néctar e
          eles podem mudar cada vez que você executar o programa.'
      2-3 Bee Conditionals 3_authored_hint:
        2-3_Bee_Conditionals_3_a: O código ficará mais curto se você usar um loop
          cada vez que andar para frente, outro loop para pegar o néctar e outro para
          fazer o mel.
      2-3 Bee Conditionals 6_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Lembre-se: Flores roxas mudam entre 0 e 1 néctar
          quando você executa o seu programa!'
      2-3 Bee Debugging 1_authored_hint:
        2-3_Bee_Debugging_1_a: Após encontrar e corrigir o bloco incorreto, você consegue
          ver quais padrões poderiam ser simplificados usando um ciclo 'repeat'?
      2-3 Bee Debugging 2_authored_hint:
        2-3_Bee_Debugging_2_a: Após encontrar e corrigir o bloco incorreto, você consegue
          ver quais padrões poderiam ser simplificados usando um ciclo 'repeat'?
      2-3 Bee Debugging 4_authored_hint:
        2-3_Bee_Debugging_4_a: Há algum lugar onde a abelha faz algo que não está
          faz sentido? O que acontece se você mudar esse bloco que não está fazendo
          sentido?
      2-3 Bee Functions 4_authored_hint:
        2-3_Bee_Functions_4_a: Você não precisa usar um loop com uma função. Tente
          mover, usando a função, e então, mover-se e usar a função novamente.
      2-3 Bee Functions 6_authored_hint:
        2-3_Bee_Functions_6_a: Você não precisa usar um loop com uma função. Tente
          mover, usando a função, e então, mover-se e usar a função novamente.
      2-3 Bee Functions 8_authored_hint:
        2-3_Bee_Functions_8_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!\n
          ! [a] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      2-3 Bee Functions 9_authored_hint:
        2-3_Bee_Functions_8_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
        2-3_Bee_Functions_8_b: "Lembre-se de construir o seu código dentro do bloco
          de função verde. \n! [a] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
      2-3 Bee Loops 2_authored_hint:
        2-3_Bee_Loops_2_a: Ao terminar, você deve ter cinco blocos dentro do seu loop.
      2-3 Bee Loops 3_authored_hint:
        2-3_Bee_Loops_3_a: Você deve ter 6 blocos dentro do seu loop.
      2-3 Bee Loops 3B_authored_hint:
        2-3_Bee_Loops_3B_a: Você vai precisar de dois loops 'Repetir' diferentes,
          um após o outro.
      2-3 Bee Loops 4_authored_hint:
        2-3_Bee_Loops_4_a: Você deve acabar com cinco blocos dentro do seu loop.
      2-3 Bee Loops 4A_authored_hint:
        2-3_Bee_Loops_4A_a: A primeira ação será uma virada, ao invés de um movimento.
        2-3_Bee_Loops_4A_b: A última instrução do programa pode ser terminada ao se
          escrever "code"  no final do programa, fora do loop.
        2-3_Bee_Loops_4A_c: Se você ainda não consegue visualizar os loops, tente
          programar de forma linear primeiro, e então, veja o que você pode combinar
          em um ciclo 'repeat' no final.
      2-3 Bee Loops 5_authored_hint:
        2-3_Bee_Loops_5_a: Se você ainda não sabe quais blocos vai colocar dentro
          do "repeat", tente ir programando passo a passo e depois procure por um
          padrão que se repete.
      2-3 Bee Loops 6_authored_hint:
        2-3_Bee_Loops_6_a: Se você ainda não sabe o que colocar dentro do loop "repeat",
          tente ir colocando os blocos um a um e depois procure por um padrão que
          se repete.
        2-3_Bee_Loops_6_b: Ao terminar, você deve ter 6 blocos dentro do seu loop
          "repeat".
      2-3 Bee Loops 7_authored_hint:
        2-3_Bee_Loops_7_a: A primeira ação será uma virada, ao invés de um movimento.
        2-3_Bee_Loops_7_b: 'Se você não consegue identificar o loop iniciantemente,
          tente ir programando e depois procure por um padrão que se repete.  '
      2-3 Maze 1_authored_hint:
        2-3_Maze_1_a: Para usar um bloco `Avançar`, arraste-o da área de blocos para
          fora, na área de trabalho e conecte-o ao bloco `quando executar`.
      2-3 Maze 16_authored_hint:
        2-3_Maze_16_a: Se o padrão está difícil de ser identificado, tente fazer toda
          a programação primeiro, veja quais partes se repetem várias vezes e então
          as substitua por um loop.
        2-3_Maze_16_b: Para colocar muitos blocos dentro de bloco `repita`, apenas
          arraste um repita para fora na área de Blocos, em seguida, arraste todos
          os blocos do programa inicial dentro dele.    Conecte tudo de volta no bloco
          `quando executar` e está pronto para executar!
      2-3 Maze 6_authored_hint:
        2-3_Maze_6_a: Existem duas maneiras de resolver este quebra-cabeças!
      2-3 Maze Loops 17_authored_hint:
        2-3_Maze_Loops_17_a: Se o padrão está difícil de ser identificado, tente fazer
          toda a programação primeiro, veja quais partes se repetem várias vezes e
          então as substitua por um loop.
        2-3_Maze_Loops_17_b: O código inicial foi excluído?  Clique em `Começar do
          Início` para ele voltar!
      2-3 Maze Loops 18_authored_hint:
        2-3_Maze_Loops_18_a: Se o padrão está difícil de ser identificado, tente fazer
          toda a programação primeiro, veja quais partes se repetem várias vezes e
          então as substitua por um loop.
      2-3 Maze Loops 19_authored_hint:
        2-3_Maze_Loops_19_a: Se você estiver preso, tente escrever o código sem loops
          primeiro e, depois, procure por padrões que se repetem.
        2-3_Maze_Loops_19_b: Colocar um loop "repeat" dentro de outro pode ajudar
          a diminuir o número de blocos utilizados.
      2-3 Maze Loops 20_authored_hint:
        2-3_Maze_Loops_20_a: Procure por um padrão de degrau neste labirinto para
          encontrar onde um `repita` pode ser usado.
      2-3 Maze Loops 21_authored_hint:
        2-3_Maze_Loops_21_a: Se você está tendo dificuldades para encontrar o padrão
          de degrau, tente cobrir os caminhos bloqueados com o dedo.
      4-5 Artist 1_authored_hint:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11_authored_hint:
        4-5_Artist_11_a: Dentro de seu loop, certifique-se que o artista salta para
          trás e para cima depois que desenha cada linha.
      4-5 Artist 3_authored_hint:
        4-5_Artist_3_a: 'Se o canteiro de flores retangular tem um perímetro de 600
          pixels e dois dos lados tem 200 pixels, aqui é a foma de descobrir o tamanho
          dos lados curtos: ** 600 - 200 - 200 = 200 ** Isso significa que ambos os
          lados curtos somam 200 pixels. ** Quanto é 200 / 2? **'
        4-5_Artist_3_b: Se você ainda não sabe onde o loop "repeat" se encaixa, tente
          fazer a programação completa e depois procure por um padrão que se repete.
      4-5 Artist 4_authored_hint:
        4-5_Artist_4_a: Há 360 graus em um círculo! Isso é o número de vezes que você
          precisa repetir esse código (virando 1 grau por vez) antes que o círculo
          esteja completo!
      4-5 Artist 5_authored_hint:
        4-5_Artist_5_a: Tentativa e erro é um ótimo método, mas você também pode resolver
          o problema dividindo o ângulo de 90 graus em três. ** 90 / 3 = _____ **
      4-5 Artist 7_authored_hint:
        4-5_Artist_7_a: 'Qual ângulo é o menor?  Em qual ângulo o artista está? '
      4-5 Artist 8_authored_hint:
        4-5_Artist_8_a: 'Os lados mais longos possuem 240 pixels cada.  Isso significa
          que os 2 lados curtos devem totalizar: **800 - 240 - 240 = 320** Quanto
          é **320/2**? '
        4-5_Artist_8_b: Esta imagem pode ser feita de 2 maneiras!   - Desenhe dois
          retângulos que possuem **120** de extensão e **160** de altura, com um lado
          sobreposto -Desenhe um retângulo que é * * 240** de extensão e **160** de
          altura, em seguida, adicione uma linha no meio.
      4-5 Artist 9_authored_hint:
        4-5_Artist_9_a: "Quando um triângulo é um equilátero, todos os lados e todos
          os ângulos são iguais.  \n"
        4-5_Artist_9_b: Você precisará desenhar três triângulos do mesmo tamanho.
          Não se esqueça de pular para sua nova posição depois de cada um.
      4-5 Artist Assessment 1_authored_hint:
        4-5_Artist_Assessment_1_a: Você só precisa desenhar o triângulo exterior para
          completar este puzzle.
      4-5 Artist Patterns 11_authored_hint:
        4-5_Artist_Patterns_11_a: Se há 360 graus em um círculo e cada repetição gira
          3 graus, quantas vezes você precisaria repetir o desenho para desenhar a
          metade de um círculo completo?
      4-5 Artist Patterns 2_authored_hint:
        4-5_Artist_Patterns_2_a: Observe que, dado que os quadrados tem 20 pixels
          de largura, você precisará saltar 20 pixels antes de começar seu próximo
          quadrado.
      4-5 Artist Patterns 3_authored_hint:
        4-5_Artist_Patterns_3_a: Tenha cuidado ao retirar o bloco cheio de "código
          na barra de Blocos, cada vez que você tentar um novo bloco.
        4-5_Artist_Patterns_3_b: Se seu código ficar muito confuso, você pode sempre
          clicar em "Começar do Início" e tentar novamente!
      4-5 Artist Patterns 5_authored_hint:
        4-5_Artist_Patterns_5_a: Agora, quando a artista terminar cada diamante, ele
          está virado para a direção oposta de onde ele precisa estar para começar
          a próxima.    Quantos graus ele precisa ser girado para ficar na posição
          inicial correta?
      4-5 Bee Conditionals 4_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      4-5 Bee Conditionals 5_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      4-5 Bee Conditionals 6_authored_hint:
        4-5 Bee Conditionals 6_a: Você pode resolver esse problema usando apenas os
          blocos na área de trabalho. Em qual ordem eles devem ficar?
        4-5 Bee Conditionals 6_b: Certifique-se de que você está verificando para
          ver se a flor tem mais de * * 0 * * néctares pelo menos * * 3 * * vezes
          para resolver este enigma.
      4-5 Bee Debugging 1_authored_hint:
        4-5_Bee_Debugging_1_a: Se você está tendo problemas para descobrir o que não
          está certo, tente executá-lo para ver onde as coisas dão errado.
      4-5 Bee Nested Loops Rows_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Tente tratar esse quebra-cabeça como um longo
          retângulo onde a abelha precisa avançar e, em seguida, virar à esquerda
          várias vezes para completar o caminho.
      4-5 Maze 10_authored_hint:
        4-5_Maze_10_a: "Se não consegue ver como usar repetições para resolver o quebra-cabeça
          de uma vez, tente resolvê-lo do jeito longo primeiro e, em seguida, procure
          um padrão. \n\nO que você deveria colocar dentro de um 'Repetir' para tornar
          o código mais curto?"
      4-5 Maze 4_authored_hint:
        4-5_Maze_4_a: Se você está achando difícil descobrir onde colocar o laço de
          repetição, tente tudo codificar tudo e procurar por um padrão de codificação.
      4-5 Maze 5_authored_hint:
        4-5_Maze_5_a: Tente usar um laço 'repetir', sempre que você precisar 'mover
          para frente' mais de duas vezes.
        4-5_Maze_5_b: Você pode usar mais de um laço 'Repetir' em um enigma.
      4-5 Maze 6_authored_hint:
        4-5_Maze_6_a: |-
          Tente traçar um caminho com o seu dedo.
          Esse é o caminho mais curto que você consegue achar?
      4-5 Maze 7_authored_hint:
        4-5_Maze_7_a: "** Quer fazer o seu código o mais curto possivel? ** procure
          padrões em seus blocos. Você vê algo que se repete? Tente colocar uma repetição
          em torno dele!"
      4-5 Nested Loops 12_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      4-5 Nested Loops 6_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Não esqueça de fazer uma virada depois da sua repetição interna.

          você vai estar repetindo 6 triangulos sobre 360 graus.

          **360 / 6 = ?**
      4-5 Nested Loops 7_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este desenho vai se repetir 10 vezes para cobrir os 360 graus.

          **360 / 10 = ?**
      4-5 Nested Loops 8_authored_hint:
        4-5_Nested_Loops_8_a: Você vai estar repetindo essa forma 6 vezes para cobrir
          os 360 graus
      4-5 While Loops 8_authored_hint:
        4-5_While_Loops_8_a: Cada item vai precisar da sua própria repetição 'Enquanto'.
      Artist Autorun Test_authored_hint:
        2-3_Artist_Functions_4_a: A artista precisa girar 120 graus entre cada quadrado
          para concluir este projeto.
      Artist Inspiration_authored_hint:
        brush_width: Nós escolhemos a largura do pincel para 1, e depois a cor azul
          antes de fazer qualquer outra coisa.
        double_loop: Tente colocar uma 'repetição para' dentro de uma repetição 'repetir'.
        specifics: |-
          A `repetição para` é executada entre 3 e 17 para cada uma das seis "pétalas" antes de passar para criar a próxima, desenhando formas com apenas um número ímpar de lados.

          O bloco `escolher alfa` usa divisão para enfraquecer a cor quando o contador aumenta.
        after: Quando você acabar com cada "pétala", certifique-se de 'Avançar' 20
          pixels antes de você fazer uma rotação de 60 graus.
        solution: |-
          **Solução**


          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      Bergeron Robot Maze1_authored_hint:
        2-3_Maze_1_a: Para usar um bloco `Avançar`, arraste-o da área de blocos para
          fora, na área de trabalho e conecte-o ao bloco `quando executar`.
      Course 4 Artist 11_authored_hint:
        Course_4_Artist_11_a: 'O metade-hexágono tem um ** comprimento de 30 ** e
          gira para a direita em ** 60 graus **.  '
        Course_4_Artist_11_b: 'Os 2/3 do triângulo tem um ** comprimento de 80 **
          e gira para a direita em ** 120 graus **. '
      Course 4 Artist 12_authored_hint:
        Course_4_Artist_12_a: 'Cada forma repetida é a combinação de ** metade de
          um hexágono **, seguido de ** 2/3 de um triângulo **. '
        Course_4_Artist_12_b: 'A forma da unidade é quase a mesma que no último quebra-cabeça,
          exceto que o meio-hexágono é um pouco maior. '
        Course_4_Artist_12_c: "1) As três primeiras linhas tem 60 pixels de comprimento
          e você precisa de girar 60 graus.\n2) As próximas duas linhas tem 80 pixels
          de comprimento e você precisa girar 120 graus "
        Course_4_Artist_12_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">6</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">3</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">60</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">60</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="draw_move_by_constant">
          <title name="DIR">moveForward</title>
          <title name="VALUE">80</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">120</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist 6_authored_hint:
        Course_4_Artist_6_a: Existem 3 triângulos dentro a rotação de 360 graus...
          quantas vezes 3 cabe em 360?
      Course 4 Artist 8a_authored_hint:
        Course_4_Artist_8a: Precisa de ajuda para descobrir quando deve girar? Existem
          3 triângulos dentro a rotação de 360 graus. Quantas vezes 3 cabe em 360?
      Course 4 Artist 9_authored_hint:
        Course_4_Artist_9_a: "Precisa saber quanto para virar? \nQuanto é 360 dividido
          por 10?"
      Course 4 Artist Binary Free Play 2b_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Esse código usa duas `repetições para`.
          Uma conta de 1 a 8, a outra conta de 8 a 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Cada `repetição para` tem três repetições.  A
          primeira desenha o conjunto mais à esquerda de 1s, A segunda desenha os
          0s no meio e a terceira desenha os 1s à direita.
        Course_4_Artist_Binary_Free_Play_2b_c: Em cada repetição você precisa de um
          `contador` para uns (1s) e `16-(2 x contador)` para zeros (0s).
        Course_4_Artist_Binary_Free_Play_2b_d: |-
          **Solução:**

          <xml><block type="when_run" deletable="false" movable="false"><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">1</title></block></value><value name="TO"><block type="math_number"><title name="NUM">8</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type="controls_for_counter" inline="true"><mutation counter="counter"></mutation><value name="FROM"><block type="math_number"><title name="NUM">8</title></block></value><value name="TO"><block type="math_number"><title name="NUM">1</title></block></value><value name="BY"><block type="math_number"><title name="NUM">1</title></block></value><statement name="DO"><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="math_arithmetic" inline="true"><title name="OP">MINUS</title><value name="A"><block type="math_number"><title name="NUM">16</title></block></value><value name="B"><block type="math_arithmetic" inline="true"><title name="OP">MULTIPLY</title><value name="A"><block type="variables_get"><title name="VAR">counter</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">0</title></block></value></block></statement><next><block type="controls_repeat_ext" inline="true"><value name="TIMES"><block type="variables_get"><title name="VAR">counter</title></block></value><statement name="DO"><block type="procedures_callnoreturn" inline="true"><mutation name="draw"><arg name="binary"></arg></mutation><value name="ARG0"><block type="text"><title name="TEXT">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>
      Course 4 Artist For Loops 11_authored_hint:
        Course_4_Artist_For_Loops_11_a: "O ângulo de curva vai mudar com cada forma!\n\nUse
          o bloco de matemática para inserir 360 dividido pelo número de lados que
          a forma tem, para acertar o ângulo. "
      Course 4 Artist For Loops 11a_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dividido pelo número de lados de que
          uma forma tem é o número de graus que você precisa virar. '
        Course_4_Artist_For_Loops_11a_b: 'Cada vez, você precisará Avançar por 10
          vezes o comprimento do atual número de lados. '
      Course 4 Artist For Loops 3_authored_hint:
        Course_4_Artist_For_Loops_3_a: Para que a repetição `para` comande seu movimento,
          certifique-se de que você está usando `contador` como sua distância.
      Course 4 Artist For Loops 4_authored_hint:
        Course_4_Artist_For_Loops_4_a: |-
          **Qual o menor número que você precisa?
          Qual é o maior número?
          De quanto é o aumento cada vez?**

          Essas são as questões que você precisa responder para preencher as lacunas no laço `para`.
      Course 4 Artist For Loops Challenge_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: A maior forma tem 19 lados. A menor
          tem apenas dois.
        Course_4_Artist_For_Loops_Challenge_b: O laço `para` adiciona de dois cada
          vez que executa.
      Course 4 Artist For Loops Challenge_a_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: O maior polígono tem 19 lados.
        Course_4_Artist_For_Loops_Challenge_b: Cada polígono está incompleto, com
          um lado a menos do que deveria ter.
      Course 4 Artist For Loops inspire_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: A base deste código é a mesma que a solução
          para o desafio do quebra-cabeça anterior... com algumas mudanças.
        Course_4_Artist_For_Loops_inspire_b: Tente um laço `para` que vá de 3 a 10
          com o incremento de 1.
        Course_4_Artist_For_Loops_inspire_c: Existem duas iterações do mesmo laço
          de repetição dentro do laço `para`, mas a segunda repetição vai na direção
          contrária.
        Course_4_Artist_For_Loops_inspire_d: "**Solução:**  \n\n<xml>\n  <block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\"
          inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n
          \       <value name=\"FROM\">\n          <block type=\"math_number\">\n
          \           <title name=\"NUM\">3</title>\n          </block>\n        </value>\n
          \       <value name=\"TO\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value
          name=\"BY\">\n          <block type=\"math_number\">\n            <title
          name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement
          name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n
          \           <value name=\"TIMES\">\n              <block type=\"math_arithmetic\"
          inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value
          name=\"A\">\n                  <block type=\"variables_get\">\n                    <title
          name=\"VAR\">counter</title>\n                  </block>\n                </value>\n
          \               <value name=\"B\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">1</title>\n                  </block>\n
          \               </value>\n              </block>\n            </value>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move\"
          inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n
          \               <value name=\"VALUE\">\n                  <block type=\"math_number\">\n
          \                   <title name=\"NUM\">40</title>\n                  </block>\n
          \               </value>\n                <next>\n                  <block
          type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n
          \                   <value name=\"VALUE\">\n                      <block
          type=\"math_arithmetic\" inline=\"true\">\n                        <title
          name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n
          \                         <block type=\"math_number\">\n                            <title
          name=\"NUM\">360</title>\n                          </block>\n                        </value>\n
          \                       <value name=\"B\">\n                          <block
          type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </value>\n                  </block>\n                </next>\n
          \             </block>\n            </statement>\n            <next>\n              <block
          type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n
          \                 <block type=\"math_arithmetic\" inline=\"true\">\n                    <title
          name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block
          type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n
          \                     </block>\n                    </value>\n                    <value
          name=\"B\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">1</title>\n                      </block>\n                    </value>\n
          \                 </block>\n                </value>\n                <statement
          name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n
          \                   <title name=\"DIR\">moveForward</title>\n                    <value
          name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title
          name=\"NUM\">40</title>\n                      </block>\n                    </value>\n
          \                   <next>\n                      <block type=\"draw_turn\"
          inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n
          \                       <value name=\"VALUE\">\n                          <block
          type=\"math_arithmetic\" inline=\"true\">\n                            <title
          name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n
          \                             <block type=\"math_number\">\n                                <title
          name=\"NUM\">360</title>\n                              </block>\n                            </value>\n
          \                           <value name=\"B\">\n                              <block
          type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n
          \                             </block>\n                            </value>\n
          \                         </block>\n                        </value>\n                      </block>\n
          \                   </next>\n                  </block>\n                </statement>\n
          \             </block>\n            </next>\n          </block>\n        </statement>\n
          \     </block>\n    </next>\n  </block>\n</xml>"
      Course 4 Artist Functions Inspiration_authored_hint:
        Course_4_Artist_Functions_Inspiration_a: Comece com o código do último quebra-cabeça
          e adicione um `vire à direita` extra de três graus dentro do laço de repetição.
        Course_4_Artist_Functions_Inspiration_b: Tente virar mais de 90 graus fora
          do `laço repetir`, mas dentro do `laço para`.
        Course_4_Artist_Functions_Inspiration_c: |-
          **Solução:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">14</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a square 20"></mutation>
          <next>
          <block type="jump_by_constant">
          <title name="DIR">jumpForward</title>
          <title name="VALUE">20</title>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">3</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnLeft</title>
          <title name="VALUE">100</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Functions challenge_authored_hint:
        Course_4_Artist_Functions_challenge_a: Parte da compreensão de como usar funções
          é descobrir quais você precisa, e quais você não precisa.
        Course_4_Artist_Functions_challenge_b: Use um `laço for`, então use sua variável
          contadora dentro de um laço `repeat` aninhado.
        Course_4_Artist_Functions_challenge_c: A cada iteração, você deve desenhar
          um quadrado e então pular para frente.
        Course_4_Artist_Functions_challenge_d: Você precisará virar 90 graus à esquerda
          do lado de fora de seu `repeat`, mas ainda dentro do `laço for`.
      Course 4 Artist Inspire_authored_hint:
        Course_4_Artist_Inspire_a: Depois que você completar um quadrado, tente pular
          metade do seu comprimento para frente antes de virar e fazer outro.
        Course_4_Artist_Inspire_b: Cada quadrado e pulo é repetido quatro vezes (usando
          um giro para a esquerda entre eles) para criar uma unidade completa semelhante
          a um cata-vento.
        Course_4_Artist_Inspire_c: Cada cata-vento também é repetido quatro vezes,
          com um giro para a direita de **360/lados**.
        Course_4_Artist_Inspire_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#843179</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 Artist Vars 13_authored_hint:
        Course_4_Artist_Vars_13_a: Você precisa de dois laços de repetição (um dentro
          do outro) ambos repetindo `quantidade de lados` vezes.
        Course_4_Artist_Vars_13_b: "O laço de repetição interior desenha um octógono
          (virando para a esquerda).   \n\nPosteriormente, você precisa mover para
          frente e virar para a direita apenas dentro do laço exterior."
        Course_4_Artist_Vars_13_c: Para ajustar a forma para que permaneça com o mesmo
          tamanho quando o número de lados muda, use o bloco de matemática para dividir
          o comprimento em pixels pelo número de lados.
      Course 4 Artist Vars 6_authored_hint:
        Course_4_Artist_Vars_6_a: Para desenhar um polígono regular, vire **360/lados**
          cada vez.
      Course 4 Artist Vars 8_authored_hint:
        Course_4_Artist_Vars_8_a: Se você dividir seu comprimento inicial pelo número
          de lados, o comprimento de cada lado ficará menor a medida que o número
          de lados fica maior.
      Course 4 Bee Params 7_authored_hint:
        notice_pattern: 'Você vê um padrão em como o número de néctar muda? '
        count_with_for: Note que o néctar sobe em etapas. Que tipo de bloco você pode
          usar para realizar a mesma coisa várias vezes enquanto vai contando?
      Course 4 Bee Params 8_authored_hint:
        Course_4_Bee_Params_8_a: Está tudo bem em pedir por um número de mel e um
          número de néctar cada vez. Se não houver nenhum de algo, o número pode ser
          0.
      Course 4 Play Lab Params 2_authored_hint:
        Course_4_Play_Lab_Params_2_a: Você precisará clicar em "editar" na função
          de pulo e atualizá-la para que ela use o parâmetro `altura`.
      Course 4 Play Lab Vars 2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Certifique-se de defininir o número para `velocidade_do_cachorro`
          como sendo maior do que o de `velocidade_do_gato`.
      Course 4 Play Labs For Loops 2_authored_hint:
        Course_4_Play_Labs_For_Loops_2_a: O que você adicionaria no seu laço `for`
          toda vez para ele ignorar os números pares?
      Course 4 Playlab For Loops 4b_authored_hint:
        Course_4_Playlab_For_Loops_4b_a: As bandeiras estão em torno de 330 pixels
          de distância dos personagens.
        Course_4_Playlab_For_Loops_4b_b: Como você pode fazer cada personagem alcançar
          330 pixels no mesmo número de movimentos com diferentes números de partida
          e parada?
        Course_4_Playlab_For_Loops_4b_c: Lembre-se, não importa o quanto um personagem
          passe da bandeira no seu último passo, contanto que cada personagem use
          o mesmo número de passos para chegar à bandeira.
      Course 4 Playlab For Loops 5b_authored_hint:
        Course_4_Playlab_For_Loops_5b_a: Os personagens estão em torno de 175 pixels
          longe do centro.
        Course_4_Playlab_For_Loops_5b_b: Lembre-se, o próximo passo de um personagem
          será maior que seu último, já que o contador continua aumentando.
      Course 4 SCF 1_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tem 40 pixels de lado.
        Course_4_SCF_1_b: Há um salto de 120 pixels entre cada hexágono em cada linha
          horizontal.
        Course_4_SCF_1_c: "Antes de você desenhar a segunda linha de hexágonos, você
          precisa virar à direita 60 graus e pular adiante 40 pixels. \n\nAssim que
          você estiver na localização vertical correta, você tem que virar seu artista
          novamente para trás e pular para trás 320 pixels."
        Course_4_SCF_1_d: "Antes de desenhar a terceira linha de hexágonos, você precisa
          virar à direita em 60 graus e avançar 40 pixels.\n\nUma vez que você esteja
          no local vertical correto, você tem que virar seu artista de volta e retroceder
          440 pixels (120 pixels mais distante do que a função `deslocar para baixo
          / para frente`. "
        Course_4_SCF_1_e: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/forward"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="draw a line of hexagons"></mutation>
          <next>
          <block type="procedures_callnoreturn">
          <mutation name="shift down/backward"></mutation>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a hexagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/backward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">440</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">draw a line of hexagons</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="draw a hexagon"></mutation>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">120</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn">
          <mutation></mutation>
          <title name="NAME">shift down/forward</title>
          <statement name="STACK">
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">40</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">320</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1a_authored_hint:
        Course_4_SCF_1a_a: Lembre-se de suas funções da fase 16.
        Course_4_SCF_1a_b: |-
          Veja este caminho como sua rota principal:

          ![](https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png)
        Course_4_SCF_1a_c: Você deve considerar usar um laço `para`. Não para as etapas,
          mas para o parâmetro da função.
        Course_4_SCF_1a_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false" uservisible="false" y="14">
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">left</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false" uservisible="false">
          <title name="VAR">right</title>
          <value name="VALUE">
          <block type="math_number" uservisible="false">
          <title name="NUM">0</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">21</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathLeft</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="get nectar">
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">right</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="dir"></arg>
          <arg name="counter"></arg>
          </mutation>
          <title name="NAME">get nectar</title>
          <statement name="STACK">
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"></block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="controls_if" inline="false">
          <mutation else="1"></mutation>
          <value name="IF0">
          <block type="logic_compare" inline="true" movable="false">
          <title name="OP">EQ</title>
          <value name="A">
          <block type="parameters_get">
          <title name="VAR">dir</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">left</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO0">
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 1b_authored_hint:
        Course_4_SCF_1b_a: |-
          Observe que a forma de todos os pontos de mel é semelhante.

          Bom lugar para uma função!
        Course_4_SCF_1b_b: "Veja esta idéia de como a abelha pode viajar: \n\n![](https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png)"
        Course_4_SCF_1b_c: Você deve considerar o uso de um laço 'para' na distância
          percorrida pela abelha.
        Course_4_SCF_1b_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="make honey up and over"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">make honey up and over</title>
          <statement name="STACK">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_honey">
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      Course 4 SCF 2_authored_hint:
        Course_4_SCF_2_a: Cada octógono tem 40 pixels de lado.
        Course_4_SCF_2_b: Há um salto de 136 pixels entre cada octógono em cada linha
          horizontal.
        Course_4_SCF_2_c: "Antes de desenhar a segunda linha de octógonos, você precisa
          virar à direita em 45 graus e avançar 96 pixels. \n\nQuando estiver no local
          vertical correto, você terá que virar seu artista de volta novamente e retroceder
          408 pixels. "
        Course_4_SCF_2_d: |-
          Observe que, como há menos octógonos nas linhas pares, você não precisa retroceder mais para chegar ao ponto inicial das linhas ímpares.

          Isso significa que você pode usar a mesma função para todas as linhas.
        Course_4_SCF_2_e: |-
          ** Solução: **

          ![Solução blocos] (https://images.code.org/de5a99b0fb4c079504ff7cca9a249f02-image-1469727175091.png)
      Course 4 SCF 3_authored_hint:
        Course_4_SCF_3_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        Course_4_SCF_3_b: 'Esta é uma série de octógonos com lados que são de comprimento
          do ''contador'' em pixels. '
        Course_4_SCF_3_c: 'Cada octógono é chamado de dentro de um laço ''for'' que
          vai de 200 até 2 por 2. '
        Course_4_SCF_3_d: 'Não esqueça de virar 22,5 graus no final de cada iteração. '
        Course_4_SCF_3_e: Tanto a cor de cada octógono como a largura da caneta são
          controladas pela variável 'contador'.
        Course_4_SCF_3_f: |-
          **Solução:**

          <xml>
          <block type="procedures_defnoreturn" editable="false">
          <mutation>
          <arg name="length"></arg>
          </mutation>
          <title name="NAME">draw an octagon</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">8</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">45</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw an octagon">
          <arg name="length"></arg>
          </mutation>
          <value name="ARG0">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">22.5</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1_authored_hint:
        Course_4_SCFL_1_a: "Dê uma olhada nesta opção de movimento:  \n\n! [a] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        Course_4_SCFL_1_b: 'Tente usar dois laços ''para'': um para subir e pegar
          o néctar e o outro para descer e fazer mel.'
        Course_4_SCFL_1_c: "Observe que um laço 'para' precisa de várias execuções
          de seu interior que se repetem o número de vezes do 'contador' para seguir
          o padrão da escada. \n\nO outro laço 'para' só precisa de uma execução para
          fazer do 'contador' a quantidade de mel."
        Course_4_SCFL_1_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1a_authored_hint:
        Course_4_SCFL_1a_a: Você pode ter que viajar mais longe no geral para usar
          o menor número de blocos.
        Course_4_SCFL_1a_b: "Dê uma olhada nesta opção de movimento:  \n\n![](https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png)"
        Course_4_SCFL_1a_c: Um laço 'para' irá ajudá-lo a executar o mesmo padrão,
          mas com uma mudança no número de passos. Observe que o número de passos
          necessários diminui de 7 para 5 por 1.
        Course_4_SCFL_1a_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">7</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 1b_authored_hint:
        Course_4_SCFL_1b_a: Tente usar um laço 'para'.
        Course_4_SCFL_1b_b: "Dê uma olhada nesta opção de movimento:  \n\n![](https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png)"
        Course_4_SCFL_1b_c: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 2_authored_hint:
        Course_4_SCFL_2_a: "Dê uma olhada nesta opção de movimento:  \n\n![](https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png)"
        Course_4_SCFL_2_b: Observe que há três pontos durante cada iteração deste
          laço 'para' onde você para de interagir com objetos.
        Course_4_SCFL_2_c: Durante cada iteração do laço `for`, o número de cada objeto
          se relaciona com a variável `contador` de alguma forma.
        Course_4_SCFL_2_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">POWER</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 3_authored_hint:
        Course_4_SCFL_3_a: A `largura da caneta` é 1. O primeiro quadrado tem lados
          de 50 pixels, e cada quadrado é 50 pixels mais largo do que o último.
        Course_4_SCFL_3_b: A opacidade no pincel é sempre `contador`/2.
        Course_4_SCFL_3_c: Depois de fazer cada quadrado, não se esqueça de pular
          pra trás, virar, pular novamente, então virar de volta!
        Course_4_SCFL_3_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 4_authored_hint:
        Course_4_SCFL_4_a: A mudança de cor acontece usando o bloco `defina a cor
          com vermelho, verde, azul`. Vermelho é sempre o valor do `contador`, verde
          é sempre `255 - contador`, e azul permanece constante exatamente em 255.
        Course_4_SCFL_4_b: Cada forma é um quadrado com os lados que possuem `contador`
          pixels de comprimento, começando com 5px, e aumentando em 5px até completar
          200px.
        Course_4_SCFL_4_c: O artista gira 15 graus entre cada quadrado.
        Course_4_SCFL_4_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn_by_constant">
          <title name="DIR">turnRight</title>
          <title name="VALUE">90</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">15</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 6_authored_hint:
        Course_4_SCFL_6_a: A mudança de cor acontece usando o bloco `defina a cor
          com vermelho, verde, azul`. Vermelho é definido constante em 255, verde
          é sempre o valor do`contador`, e azul é sempre `255 - contador`.
        Course_4_SCFL_6_b: O código para isso é muito mais simples do que você imagina.
          Apenas defina a cor dentro do `laço for`, mova pra frente, então vire.
        Course_4_SCFL_6_c: 'O `laço for` vai de 5 a 250 de 2 em 2. '
        Course_4_SCFL_6_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCFL 7_authored_hint:
        Course_4_SCFL_7_a: A mudança de cor acontece usando o bloco `defina a cor
          com vermelho, verde, azul`. Vermelho é definido no`contador`. Verde é `255
          - contador`, e azul é definido constante em 255.
        Course_4_SCFL_7_b: 'Este desenho é feito usando dois ''for loops'' similares.
          Um vai de 5 a 200 por 2, o outro vai de 200 a 5 por 2. '
        Course_4_SCFL_7_c: Dentro de cada 'for loop' você avança 5 pixels antes de
          virar por '360/counter'. Não esqueça de configurar seu pincel para a largura
          'counter' antes de fazer!
        Course_4_SCFL_7_d: Você precisará virar a esquerda por 225 graus entre dois
          'for loops'.
        Course_4_SCFL_7_e: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_number_dropdown">
          <title name="NUM" config="100,90,80,70,60,50,40,30,20,10,0">20</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">225</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 1_authored_hint:
        Course_4_SCV_1_a: 'Variáveis são úteis porque você pode adicionar à elas cada
          vez por um laço. '
        Course_4_SCV_1_b: Este enigma contém um laço que cria o polígono, um laço
          que repete o polígono 'sides' vezes, então outro laço que faz tudo isto
          de novo após adicionar 5 à 'sides'.
        Course_4_SCV_1_c: Usando uma variável para 'sides' e uma para 'length' torna
          o código mais limpo porque você pode repetir o mesmo código múltiplas vezes,
          ao invés de criar uma nova cópia para cada conjunto de números.
        Course_4_SCV_1_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_random"/>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 2_authored_hint:
        Course_4_SCV_2_a: "A imagem completa é feita de 10 destas \"flores\": \n![](https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png)\n\n...que
          são feitas de 10 destes decágonos:  \n![](https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png)"
        Course_4_SCV_2_b: 'Este projeto usa laços aninhados (três profundos). Todos
          os laços percorrem ''sides'' vezes. '
        Course_4_SCV_2_c: O artista vira à esquerda quando cria cada decágono, mas
          vira a direita em todos os outros laços.
        Course_4_SCV_2_d: Para prevenir que todas as suas "flores" de 10 pétalas sejam
          desenhadas no mesmo lugar, assegure-se de pular pra frente por 'length'
          / 'sides' antes de de virar 360/'sides' graus como parte do seu laço mais
          externo.
        Course_4_SCV_2_e: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">400</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#ff0000</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 3_authored_hint:
        Course_4_SCV_3_a: 'Use seu bloco de matemática para adicionar e subtrair pontos
          da variável ''point'' quando os desenhos colidem. '
        Course_4_SCV_3_b: Você pode mudar o parâmetro para quão longe você move seu
          desenho toda vez que uma das teclas de seta forem pressionadas.
        Course_4_SCV_3_c: |-
          **Solução:**

          <xml><block type="when_run"><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_number"><title name="NUM">0</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">up</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">1</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">down</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">4</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">left</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">8</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenArrow"><title name="VALUE">right</title><next><block type="studio_moveDistanceParams" inline="true"><title name="SPRITE">0</title><title name="DIR">2</title><value name="DISTANCE"><block type="math_number"><title name="NUM">25</title></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">1</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">2</title></block></value></block></value></block></next></block><block type="studio_whenSpriteCollided"><title name="SPRITE1">0</title><title name="SPRITE2">2</title><next><block type="variables_set" inline="false"><title name="VAR">points</title><value name="VALUE"><block type="math_arithmetic" inline="true"><title name="OP">ADD</title><value name="A"><block type="variables_get"><title name="VAR">points</title></block></value><value name="B"><block type="math_number"><title name="NUM">3</title></block></value></block></value></block></next></block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">points</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">points</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 4_authored_hint:
        Course_4_SCV_4_a: Três variáveis irão ajudá-lo. Uma para unidades de néctar,
          uma para unidades de mel, e uma para quão longe a abelha deve mover em cada
          iteração.
        Course_4_SCV_4_b: 'Será bastante útil usar três laços dentro de seu laço principal.
          Um para mover para frente, um para coletar o néctar e um para fazer mel. '
        Course_4_SCV_4_c: "Veja esta opção para movimento: \n\n![](https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png)"
        Course_4_SCV_4_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 5_authored_hint:
        Course_4_SCV_5_a: "Veja esta opção para movimento: \n\n![](https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png)"
        Course_4_SCV_5_b: Toda vez dentro do laço, as flores terão duas vezes menos
          néctar e a abelha precisará fazer mais um mel.
        Course_4_SCV_5_c: Veja que no começo do laço externo a abelha se move tantas
          vezes quanto há de néctar na próxima flor.
        Course_4_SCV_5_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">honey</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">honey</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">nectar</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">nectar</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      Course 4 SCV 6_authored_hint:
        Course_4_SCV_6_a: |-
          Veja como uma forma completa se parece

          ![](https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png)
        Course_4_SCV_6_b: 'Você se beneficiará criando 8 variáveis: red1, green1,
          blue1, red2, green2, blue2, length e sides.'
        Course_4_SCV_6_c: Cada uma das formas de 5 lados está dividida em peças de
          'length' / 'sides onde o zigue é verde-azulado (rgb = 0,175,200) e o zague
          é roxo (rgb = 100,50,150).
        Course_4_SCV_6_d: 'Para o zigue, vire a esquerda por ''360'' / ''sides''.
          Para o zague, vire a direita por  ''360'' / ''sides''. '
        Course_4_SCV_6_f: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">0</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">175</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue1</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">200</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">red2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">100</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">green2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">blue2</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">150</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">70</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">sides</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MULTIPLY</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red1</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green1</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue1</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="variables_get">
          <title name="VAR">red2</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">green2</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="variables_get">
          <title name="VAR">blue2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">360</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">180</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">sides</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      CourseF_PlayLab_vars2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Certifique-se de defininir o número para `velocidade_do_cachorro`
          como sendo maior do que o de `velocidade_do_gato`.
      Function intro Ryan_authored_hint:
        Function_intro_Ryan_a: Você pode executar uma função muitas vezes dentro de
          seu programa! Tente executá-la duas vezes para resolver este enigma.
      HOC 2018 Level_10_authored_hint:
        voyage_aquatic_10a: "Vê as **Lanternas do Mar** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Como você pode usar uma condicional nos itens para chegar ao Monumento Oceânico?\n\n"
      HOC 2018 Level_9b_authored_hint:
        voyage_aquatic_9a: Que recife de corais bonito! O coral azul parece ser o
          caminho **direito**, e lembre-se também de deixar o coral vermelho no caminho
          **esquerdo**.
      Inspirational Artwork_authored_hint:
        brush_width: Nós escolhemos a largura do pincel para 1, e depois a cor azul
          antes de fazer qualquer outra coisa.
        double_loop: Tente colocar uma 'repetição para' dentro de uma repetição 'repetir'.
        specifics: |-
          A `repetição para` é executada entre 3 e 17 para cada uma das seis "pétalas" antes de passar para criar a próxima, desenhando formas com apenas um número ímpar de lados.

          O bloco `escolher alfa` usa divisão para enfraquecer a cor quando o contador aumenta.
        after: Quando você acabar com cada "pétala", certifique-se de 'Avançar' 20
          pixels antes de você fazer uma rotação de 60 graus.
        solution: |-
          **Solução**


          ![Image of Solution Blocks](https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png)
      K2.0 sequence 10_authored_hint:
        K2.0_sequence_10_a: Se você estiver tendo problemas, tente escrever os passos
          em um pedaço de papel primeiro.
      K2.0 sequence 3_authored_hint:
        K2.0_sequence_3_a: Se você estiver tendo problemas, tente descobrir qual o
          caminho correto e então remova o bloco que não serve.
      K2.0 sequence 6_authored_hint:
        K2.0_sequence_6_a: Há 1 bloco que você precisa adicionar para mover o pássaro
          até o porco.
        K2.0_sequence_6_b: Se você não consegue descobrir o que fazer, tente desenhar
          o quebra-cabeça no papel e usar o seu dedo para descobrir em qual caminho
          seguir.
      K2.0 sequence 7_authored_hint:
        K2.0_sequence_7_a: Se você estiver preso, tente desenhar a imagem no papel
          para ver como o pássaro deveria se mover.
      K2.0 sequence 8_authored_hint:
        K2.0_sequence_8_a: Preso? Tente traçar o caminho do pássaro com o seu dedo.
      K2.0 sequence 9_authored_hint:
        K2.0_sequence_9_a: Se você estiver tendo problemas, tente escrever os passos
          em um pedaço de papel primeiro.
      K2.0 sequence FP_authored_hint:
        K2.0_sequence_FP_a: Se o caminho que você precisa não estiver claro, use o
          seu dedo para traçar seu caminho do pássaro até o porco.
      MC Agent Freeplay_authored_hint:
        MC_HOC_2017_13_Cole_a: Tente fazer com que o Agent construa algumas pontes
          para que Alex ou Steve possa andar além dos limites do mapa.
      MC_HOC_2017_01_Cole_authored_hint:
        MC_HOC_2017_01_Cole_a: Use as teclas de seta para direcionar o jogador pela
          casa. Termine no quadrado laranja para vencer.
      MC_HOC_2017_01_RETRY_authored_hint:
        MC_HOC_2017_01_RETRY_a: Arraste um bloco 'mover para a frente' da caixa de
          ferramentas para a área de trabalho e fixe-o abaixo do bloco 'ao rodar'.
        MC_HOC_2017_01_RETRY_b: Não esqueça de clicar em "Executar" para executar
          o código para o Agent.
        MC_HOC_2017_01_RETRY_c: Depois que o Agent executar todo o código, você poderá
          se mover com o jogador com as teclas de seta!
      MC_HOC_2017_02_Cole_authored_hint:
        MC_HOC_2017_02_Cole_a: Ande com o Agent dois espaços para a frente e permaneça
          sobre a placa de pressão. Isso abrirá a porta para o seu jogador.
        MC_HOC_2017_02_Cole_b: "Pressione \"Executar\"! \nVocê pode executar seu código,
          mesmo se ele não estiver certo. Execute e redefina seu código repetidamente,
          até descobrir o que está acontecendo de errado."
        MC_HOC_2017_02_Cole_c: Depois que o Agent abrir a porta, use as teclas de
          seta para mover o jogador pelo mapa!
      MC_HOC_2017_02_Will_authored_hint:
        MC_HOC_2017_02_Cole_a: Ande com o Agent dois espaços para a frente e permaneça
          sobre a placa de pressão. Isso abrirá a porta para o seu jogador.
        MC_HOC_2017_02_Cole_b: "Pressione \"Executar Agent\"! \nVocê pode executar
          seu código, mesmo se ele não estiver certo. Execute e redefina seu código
          repetidamente, até descobrir o que está acontecendo de errado."
        MC_HOC_2017_02_Cole_c: Depois que o Agent abrir a porta, use as teclas de
          seta para mover o jogador para o quadrado laranja!
      MC_HOC_2017_03_Cole_authored_hint:
        MC_HOC_2017_03_Cole_a: Quando o Agent chegar à placa de pressão, você pode
          usar as setas do teclado para levar o jogador até a bússola!
        MC_HOC_2017_03_Cole_b: Parece que o código é um pouco longo? Tente usar um
          ciclo 'Repetir' e ver se você consegue descobrir como deixá-lo mais curto!
      MC_HOC_2017_04POINT5_Cole_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: "Cruzar essas duas placas de pressão abrirá o
          caminho para o jogador. \n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
      MC_HOC_2017_04POINT5_RYAN_authored_hint:
        MC_HOC_2017_04POINT5_RYAN_b: 'Use o bloco ''virar à direita'' para mudar a
          direção do Agent '
        MC_HOC_2017_04POINT5_RYAN_a: O Agent só precisa chegar até a primeira placa
          de pressão para passar o Alex ou o Steve pelo machado.
      MC_HOC_2017_04_Cole_authored_hint:
        MC_HOC_2017_04_Cole_a: O Agent precisa 'mover-se para frente' 7 vezes. Como
          é possível usar o ciclo 'Repetir' para que isso aconteça?
        MC_HOC_2017_04_Cole_c: "Pressione \"Executar\"! \nVocê pode executar seu código,
          mesmo se ele não estiver certo. Execute e redefina seu código repetidamente,
          até descobrir o que está acontecendo de errado."
        MC_HOC_2017_04_Cole_b: Quando o Agent chegar à placa de pressão, ele abrirá
          a porta para o jogador.
      MC_HOC_2017_05_Cole_authored_hint:
        MC_HOC_2017_05_Cole_a: Você sabia que você pode colocar mais de um código
          dentro de um ciclo? Tente colocar uma tábua **e** avançar em vez de 'repetir'
          para completar este enigma.
      MC_HOC_2017_05_Josh_authored_hint:
        MC_HOC_2017_05_Cole_a: Você sabia que você pode colocar mais de um código
          dentro de um ciclo? Tente colocar uma tábua **e** avançar em vez de 'repetir'
          para completar este enigma.
      MC_HOC_2017_06_Cole_authored_hint:
        MC_HOC_2017_06_Cole_a: Quantas vezes este ciclo é executado? Quantas vezes
          ele *deve* ser executado?
      MC_HOC_2017_06_Josh_authored_hint:
        MC_HOC_2017_06_Cole_a: Tente colocar mais de uma instrução dentro do um ciclo
          'Repetir'!
      MC_HOC_2017_07_Cole_authored_hint:
        MC_HOC_2017_07_Cole_a: Para resolver este enigma, descubra o que a função
          'abrir caminho' faz e use-a quantas vezes precisar usando o pequeno bloco
          'abrir caminho' da caixa de ferramentas.
        MC_HOC_2017_07_Cole_b: Tente misturar os blocos de função com outros blocos
          da caixa de ferramentas para ajudá-lo a resolver este enigma.
      MC_HOC_2017_08_RY_authored_hint:
        MC_HOC_2017_08_RY_a: "Pressione \"Executar Agent\"! \nVocê pode executar seu
          código, mesmo se ele não estiver certo. Execute e redefina seu código repetidamente,
          até descobrir o que está acontecendo de errado."
        MC_HOC_2017_08_RY_b: Há MUITAS maneiras de resolver esse enigma. Tente algumas
          delas!
      MC_HOC_2017_08_Will_authored_hint:
        MC_HOC_2017_08_RY_a: "Pressione \"Executar Agent\"! \nVocê pode executar seu
          código, mesmo se ele não estiver certo. Execute e redefina seu código repetidamente,
          até descobrir o que está acontecendo de errado."
        MC_HOC_2017_08_RY_b: Há MUITAS maneiras de resolver esse enigma. Tente algumas
          delas!
      MC_HOC_2017_10_Cole_authored_hint:
        MC_HOC_2017_10_Cole_a: Use as funções para resolver este enigma com mais facilidade!
      MC_HOC_2017_10_RETRY_authored_hint:
        MC_HOC_2017_10_Cole_a: Use as funções para resolver este enigma com mais facilidade!
      MC_HOC_2017_13_Cole_authored_hint:
        MC_HOC_2017_13_Cole_a: Tente fazer com que o Agent construa algumas pontes
          para que Alex ou Steve possa andar além dos limites do mapa.
      MC_HOC_2017_4.5v2_authored_hint:
        MC_HOC_2017_04POINT5_Cole_a: "Cruzar essas duas placas de pressão abrirá o
          caminho para o jogador. \n![](https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png)"
      MC_HOC_2017_Ali_authored_hint:
        MC_HOC_2017_08_RY_a: "Pressione \"Executar\"! \nVocê pode executar seu código,
          mesmo se ele não estiver certo. Execute e redefina seu código repetidamente,
          até descobrir o que está acontecendo de errado."
        MC_HOC_2017_08_RY_b: Há MUITAS maneiras de resolver esse enigma. Tente algumas
          delas!
      MC_HOC_2017_FP20x20_authored_hint:
        MC_HOC_2017_13_Cole_a: Tente fazer com que o Agent construa algumas pontes
          para que Alex ou Steve possa andar além dos limites do mapa.
      NEW Course 4 Artist Params inspire_authored_hint:
        brush_width: Nós escolhemos a largura do pincel para 1, e depois a cor azul
          antes de fazer qualquer outra coisa.
        double_loop: Tente colocar uma 'repetição para' dentro de uma repetição 'repetir'.
        specifics: |-
          A `repetição para` é executada entre 3 e 17 para cada uma das seis "pétalas" antes de passar para criar a próxima, desenhando formas com apenas um número ímpar de lados.

          O bloco `escolher alfa` usa divisão para enfraquecer a cor quando o contador aumenta.
        after: Quando você acabar com cada "pétala", certifique-se de 'Avançar' 20
          pixels antes de você fazer uma rotação de 60 graus.
        solution: |-
          **Solução**


          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">6</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">17</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">500</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="procedures_callnoreturn" inline="false">
          <mutation name="draw a polygon">
          <arg name="length"></arg>
          <arg name="sides"></arg>
          </mutation>
          <value name="ARG0">
          <block type="math_number">
          <title name="NUM">30</title>
          </block>
          </value>
          <value name="ARG1">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">20</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">60</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      New Minecraft Hero Project_authored_hint:
        MC_HOC_2017_13_Cole_a: Tente fazer com que o Agent construa algumas pontes
          para que Alex ou Steve possa andar além dos limites do mapa.
      Quantum Bee - Ryan_authored_hint:
        test_hint: Isso é uma dica-teste.
      aE3_authored_hint:
        aE3_d: Se seu código ficar muito confuso, você pode sempre clicar em "Começar
          do Início" e tentar novamente!
      aE3alternate_authored_hint:
        aE3alternate_d: Se seu código ficar muito confuso, você pode sempre clicar
          em "Começar do Início" e tentar novamente!
      aE3alternateB_authored_hint:
        aE4alternateB_d: Se seu código ficar muito confuso, você pode sempre clicar
          em "Começar do Início" e tentar novamente!
      aE4_authored_hint:
        aE4_d: Se seu código ficar muito confuso, você pode sempre clicar em "Começar
          do Início" e tentar novamente!
      artistDebugVideo1_authored_hint:
        courseA_artist_loops7_a: Não consegue descobrir onde colocar o laço? Tente
          escrever o código passo-a-passo e procure um padrão.
      course1_artist_loops_challenge1_authored_hint:
        courseA_artist_loops_challenge1_a: |
          Você pode usar laços como esse para criar as paredes e o teto. Tente repetir blocos diferentes.



          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          Faça o seu próprio ou clique o ![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) para algumas ideias!
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png)"
      course1_artist_loops_challenge3_authored_hint:
        courseA_artist_loops_challenge2_a: 'Blocos como este: <xml><block type="simple_move_up_left"/></xml>
          permitirão que o seu artista se mova em uma inclinação!'
        courseA_artist_loops_challenge2_b: Quando você terminar uma casa de pássaro,
          'pule' para a próxima!
        courseA_artist_loops_challenge2_c: Você vai precisar de MUITOS blocos dentro
          do laço para esse desafio.
      course1_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Tente mudar os números em cada laço
          se alguma coisa der errado.
        courseA_collector_loops_challenge1_b: Você não precisa de usar um laço se
          você está fazendo algo apenas uma vez.
        courseA_collector_loops_challenge1_c: Existem 6 gemas no lado direito da caverna,
          porém você precisa apenas se mover e coletar 5 vezes. Você sabe porquê?
      course1_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: Você precisa usar apenas um bloco ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) para resolver isto.
        courseA_collector_loops_challenge2_a: |-
          Você pode se mover de volta pelo caminho uma segunda vez antes de se mover ao sul.

          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      course1_maze_debugging_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Alguns caminhos levarão a TNT, se você se mover
          para muito longe.
      course1_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Tente contar os espaços com o seu dedo. Lembre-se
          de não contar o espaço onde você inicia!
      course1_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_b: Tente se mover para o oeste para começar.
      course1_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: |-
          Faça Waddles, o Pinguim, aparecer quando você clicar em Robin!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">2</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">3</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_b: |-
          Faça Boo, o Fantasma, aparecer quando você clicar em Wendel!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">3</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">4</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_c: |-
          Faça Jayden, o Monstro Felpudo, aparecer quando você clicar em Boo!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">4</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">5</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_d: |-
          Faça Spiff, o Robô, aparecer quando você clicar no monstro!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">5</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">6</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_e: "Finalmente, faça Wendel o Mago aparecer
          quando você clica em Spiff!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      course1_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: |-
          Você pode fazer um pássaro cantar.
          <xml>   <block type="studio_whenSpriteClicked">     <title name="SPRITE">2</title>     <next>           <block type="studio_saySprite">             <title name="SPRITE">2</title>             <title name="TEXT">Tweet</title>           </block>     </next>   </block></xml>
        courseA_playlab_events_challenge2_b: |-
          Você pode fazer um robô emitir um bipe.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                  <block type="studio_playSound">
                    <title name="SOUND">ponto de vitória</title>
                  </block>
               </next>

          </block></xml>
        courseA_playlab_events_challenge2_c: |-
          Você pode fazer um monstro furioso rosnar.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Rosnar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      course2_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge2_a: Tente contar os espaços com o seu dedo. Lembre-se
          de não contar o espaço onde você inicia!
      course2_maze_seq_challenge2_authored_hint:
        courseB_maze_seq_challenge1_b: Tente se mover para o oeste para começar.
      course3_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'O metade-hexágono tem um ** comprimento
          de 30 ** e gira para a direita em ** 60 graus **.  '
        courseE_artist_concept_challenge1_b: 'Os 2/3 do triângulo tem um ** comprimento
          de 80 ** e gira para a direita em ** 120 graus **. '
      course3_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Se o quebra-cabeça parece desafiador,
          tente construir sua função aos poucos.\nAdicione alguns blocos e os experimente.
          Adicione mais alguns e experimente novamente.  \nEm breve, você terá sua
          função!"
      course3_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Se o quebra-cabeça parece desafiador,
          tente construir sua função aos poucos.\nAdicione alguns blocos e os experimente.
          Adicione mais alguns e experimente novamente.  \nEm breve, você terá sua
          função!"
      course3_bee_functions_challenge4_authored_hint:
        courseF_bee_functions_challenge2_b: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"/>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation/>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_ifElseFlower">
          <title name="LOC">atFlower</title>
          <statement name="DO">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block>
          </statement>
          <statement name="ELSE">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" deletable="false" movable="false" editable="false">
          <mutation/>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"/>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          </xml>
      course3_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_d: |-
          Aqui está a solução completa para esse quebra-cabeças.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      course4_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_e: |-
          Aqui está a solução.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      course4_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_a: 'Variáveis são úteis porque você pode
          adicionar à elas cada vez por um laço. '
        courseF_artist_variables_challenge2_b: Este enigma contém um laço que cria
          o polígono, um laço que repete o polígono 'sides' vezes, então outro laço
          que faz tudo isto de novo após adicionar 5 à 'sides'.
        courseF_artist_variables_challenge2_c: Usando uma variável para 'sides' e
          uma para 'length' torna o código mais limpo porque você pode repetir o mesmo
          código múltiplas vezes, ao invés de criar uma nova cópia para cada conjunto
          de números.
        courseF_artist_variables_challenge2_d: |-
          **Solução:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      course4_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_e: |
          **Aqui está a solução:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      course4_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_d: |-
          **Solução:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseA_artist_loops2_authored_hint:
        courseA_artist_loops2_a: Não consegue descobrir como  desenhar a linha? Comece
          ligando os blocos ao <xml><block type="when_run"/></xml> bloco para ver
          o que acontece.
        courseA_artist_loops2_b: Utilize esse bloco <xml><block type="simple_move_right"/></xml>
          para resolver essa charada.
      courseA_artist_loops2_2018_authored_hint:
        courseA_artist_loops2_a: Não consegue descobrir como  desenhar a linha? Comece
          ligando os blocos ao <xml><block type="when_run"/></xml> bloco para ver
          o que acontece.
        courseA_artist_loops2_b: Utilize esse bloco <xml><block type="simple_move_right"/></xml>
          para resolver essa charada.
      courseA_artist_loops3_authored_hint:
        courseA_artist_loops3_a: Trace lentamente através do programa com o seu dedo
          para ver onde está errado.
        courseA_artist_loops3_b: |-
          Você vai querer usar um bloco como esse para resolver a charada.

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops3_2018_authored_hint:
        courseA_artist_loops3_a: Trace lentamente através do programa com o seu dedo
          para ver onde está errado.
        courseA_artist_loops3_b: |-
          Você vai querer usar um bloco como esse para resolver a charada.

          ![](https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png)
      courseA_artist_loops4_authored_hint:
        courseA_artist_loops4_b: Já que você só pode usar um bloco <xml><block type="simple_move_right"/></xml>,
          tente colocá-lo dentro do laço <block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block>.
      courseA_artist_loops4_2018_authored_hint:
        courseA_artist_loops4_b: Já que você só pode usar um bloco <xml><block type="simple_move_right"/></xml>,
          tente colocá-lo dentro do laço <block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="2-6">5</title></block>.
      courseA_artist_loops5_authored_hint:
        courseA_artist_loops5_a: Tente usar o que você aprendeu sobre blocos <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          para completar esse desafio!
        courseA_artist_loops5_c: Já que você pode usar apenas um <xml><block type="simple_move_right"/></xml>bloco,
          tente colocá-lo dentro de uma repetição <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops5_2018_authored_hint:
        courseA_artist_loops5_a: Tente usar o que você aprendeu sobre blocos <xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          para completar esse desafio!
        courseA_artist_loops5_c: Já que você pode usar apenas um <xml><block type="simple_move_right"/></xml>bloco,
          tente colocá-lo dentro de uma repetição <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>.
      courseA_artist_loops6_authored_hint:
        courseA_artist_loops6_a: Não consegue descobrir como fazer a colina? Tente
          brincar com os blocos um pouco para ver o que cada um desenha.
        courseA_artist_loops6_b: Você vai precisar de 2 blocos em 2 direções para
          resolver essa charada.
      courseA_artist_loops6_2018_authored_hint:
        courseA_artist_loops6_a: Não consegue descobrir como fazer a colina? Tente
          brincar com os blocos um pouco para ver o que cada um desenha.
        courseA_artist_loops6_b: Você vai precisar de 2 blocos em 2 direções para
          resolver essa charada.
      courseA_artist_loops7_authored_hint:
        courseA_artist_loops7_a: Não consegue descobrir onde colocar o laço? Tente
          escrever o código passo-a-passo e procure um padrão.
        courseA_artist_loops7_b: Escreva o código para uma onda primeiro, depois repita
          para desenhar as outras duas.
        courseA_artist_loops7_c: |-
          Lembre-se que você pode olocar mais de um bloco em um laço <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_2018_authored_hint:
        courseA_artist_loops7_a: Não consegue descobrir onde colocar o laço? Tente
          escrever o código passo-a-passo e procure um padrão.
        courseA_artist_loops7_b: Escreva o código para uma onda primeiro, depois repita
          para desenhar as outras duas.
        courseA_artist_loops7_c: |-
          Lembre-se que você pode olocar mais de um bloco em um laço <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops7_forVideo_authored_hint:
        courseA_artist_loops7_a: Não consegue descobrir onde colocar o laço? Tente
          escrever o código passo-a-passo e procure um padrão.
        courseA_artist_loops7_b: Escreva o código para uma onda primeiro, depois repita
          para desenhar as outras duas.
        courseA_artist_loops7_c: |-
          Lembre-se que você pode olocar mais de um bloco em um laço <xml><block type="controls_repeat">
          <title name="TIMES">???</title>
          </block></xml>.
      courseA_artist_loops8_authored_hint:
        courseA_artist_loops8_a: Tente rodar o código para ver o que foi escrito para
          você.
        courseA_artist_loops8_b: Como você colocaria o código dado a você em um laço?
        courseA_artist_loops8_c: |-
          O que esse código faz?
          O que ele deveria fazer?
          O que isso te diz?
      courseA_artist_loops8_2018_authored_hint:
        courseA_artist_loops8_a: Tente rodar o código para ver o que foi escrito para
          você.
        courseA_artist_loops8_b: Como você colocaria o código dado a você em um laço?
        courseA_artist_loops8_c: |-
          O que esse código faz?
          O que ele deveria fazer?
          O que isso te diz?
      courseA_artist_loops9_authored_hint:
        courseA_artist_loops9_a: Adicione outro bloco ao código dado a você, para
          desenhar o resto das escadas.
        courseA_artist_loops9_b: |-
          O bloco que você adicionar deve ir dentro do laço <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Se você não consegue descobrir onde colocar o laço
          de repetição, tente escrever seu código passo a passo e procurar por um
          padrão.
      courseA_artist_loops9_2018_authored_hint:
        courseA_artist_loops9_a: Adicione outro bloco ao código dado a você, para
          desenhar o resto das escadas.
        courseA_artist_loops9_b: |-
          O bloco que você adicionar deve ir dentro do laço <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml>.
        courseA_artist_loops9_c: Se você não consegue descobrir onde colocar o laço
          de repetição, tente escrever seu código passo a passo e procurar por um
          padrão.
      courseA_artist_loops_challenge2_authored_hint:
        courseA_artist_loops_challenge2_a: Blocos como este <xml><block type="simple_move_up_left"/></xml>
          permitirão que seu artista se mova em uma inclinação!
        courseA_artist_loops_challenge2_b: Quando você terminar uma casa de pássaro,
          'pule' para a próxima!
        courseA_artist_loops_challenge2_c: Você vai precisar de MUITOS blocos dentro
          do laço para esse desafio.
      courseA_artist_loops_challenge2a_authored_hint:
        courseA_artist_loops_challenge2_a: Blocos como este <xml><block type="simple_move_up_left"/></xml>
          permitirão que seu artista se mova em uma inclinação!
        courseA_artist_loops_challenge2_b: Quando você terminar uma tenda, 'pule'
          duas vezes para chegar a próxima!
        courseA_artist_loops_challenge2_c: Todos os seus blocos precisam estar dentro
          de uma repetição para terminar este quebra-cabeça.
      courseA_artist_loops_challenge2a_2018_authored_hint:
        courseA_artist_loops_challenge2_a: Blocos como este <xml><block type="simple_move_up_left"/></xml>
          permitirão que seu artista se mova em uma inclinação!
        courseA_artist_loops_challenge2_b: Quando você terminar uma tenda, 'pule'
          duas vezes para chegar a próxima!
        courseA_artist_loops_challenge2_c: Todos os seus blocos precisam estar dentro
          de uma repetição para terminar este quebra-cabeça.
      courseA_bee_seq1_authored_hint:
        courseA_bee_seq1_a: |-
          Use este bloco para obter néctar assim que a abelha encontrar uma flor.

          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_bee_seq12_authored_hint:
        courseA_bee_seq1_a: |-
          Use este bloco para obter néctar assim que a abelha encontrar uma flor.

          <xml>
          <block type="maze_nectar"/>
          </xml>
      courseA_collector_loops1_authored_hint:
        courseA_collector_loops1_a: |-
          Após você ter se movido para um quadrado com tesouro, use esse bloco para pegá-lo.
          <xml> <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Uma solução simples seria mover para o Oeste 2
          vezes, então pegar o tesouro.
      courseA_collector_loops1_2018_authored_hint:
        courseA_collector_loops1_a: |-
          Após você ter se movido para um quadrado com tesouro, use esse bloco para pegá-lo.
          <xml> <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: Uma solução simples seria mover para o Oeste 2
          vezes, então pegar o tesouro.
      courseA_collector_loops2_authored_hint:
        courseA_collector_loops2_a: Você terá que se mover antes de conseguir coletar
          qualquer tesouro.
        courseA_collector_loops2_b: |-
          Após você ter se movido para um quadrado com tesouro, use esse bloco para pegá-lo.
          <xml> <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018_authored_hint:
        courseA_collector_loops2_a: Você terá que se mover antes de conseguir coletar
          qualquer tesouro.
        courseA_collector_loops2_b: |-
          Após você ter se movido para um quadrado com tesouro, use esse bloco para pegá-lo.
          <xml> <block type="collector_collect"/></xml>
      courseA_collector_loops3_authored_hint:
        courseA_collector_loops3_a: Tente usar um laço <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_collector_loops3_b: Lembre-se, você pode colocar mais de 1 bloco dentro
          de um laço <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>.
      courseA_collector_loops3_2018_authored_hint:
        courseA_collector_loops3_a: Tente usar um laço <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>!
        courseA_collector_loops3_b: Lembre-se, você pode colocar mais de 1 bloco dentro
          de um laço <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml>.
      courseA_collector_loops4_authored_hint:
        courseA_collector_loops4_a: Para mudar o quão longe vai Laurel, mude o número
          de vezes que o laço executa.
        courseA_collector_loops4_b: Não se esqueça que Laurel precisa descer e coletar
          o tesouro depois que ela terminar o <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laço!
      courseA_collector_loops4_2018_authored_hint:
        courseA_collector_loops4_a: Para mudar o quão longe vai Laurel, mude o número
          de vezes que o laço executa.
        courseA_collector_loops4_b: Não se esqueça que Laurel precisa descer e coletar
          o tesouro depois que ela terminar o <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laço!
      courseA_collector_loops5_authored_hint:
        courseA_collector_loops5_a: Se você não consegue descobrir a resposta imediatamente,
          tente usar um pedaço de papel para descobrir quais setas você vai precisar
          e procure por um padrão.
        courseA_collector_loops5_b: Tente dividir o problema em duas partes, movendo
          de lado e então para baixo.
        courseA_collector_loops5_c: Você vai querer começar com um <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laço que move Laurel
          a oeste e recolhe o tesouro.
      courseA_collector_loops5_2018_authored_hint:
        courseA_collector_loops5_a: Se você não consegue descobrir a resposta imediatamente,
          tente usar um pedaço de papel para descobrir quais setas você vai precisar
          e procure por um padrão.
        courseA_collector_loops5_b: Tente dividir o problema em duas partes, movendo
          de lado e então para baixo.
        courseA_collector_loops5_c: Você vai querer começar com um <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laço que move Laurel
          a oeste e recolhe o tesouro.
      courseA_collector_loops6_authored_hint:
        courseA_collector_loops6_a: Não consegue descobrir o que está errado? Tente
          rodar o código algumas vezes para ver o que acontece.
        courseA_collector_loops6_b: A solução mais curta tem 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laços, um após o outro.
      courseA_collector_loops6_2018_authored_hint:
        courseA_collector_loops6_a: Não consegue descobrir o que está errado? Tente
          rodar o código algumas vezes para ver o que acontece.
        courseA_collector_loops6_b: A solução mais curta tem 2 <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laços, um após o outro.
      courseA_collector_loops7_authored_hint:
        courseA_collector_loops7_a: Se você não consegue descobrir o que vem em seguida,
          tente rodar o código para ver onde Laurel vai estar ao final.
      courseA_collector_loops7_2018_authored_hint:
        courseA_collector_loops7_a: Se você não consegue descobrir o que vem em seguida,
          tente rodar o código para ver onde Laurel vai estar ao final.
      courseA_collector_loops8_authored_hint:
        courseA_collector_loops8_a: Se você está tendo problemas para descobrir como
          resolver este quebra-cabeça, tente escrever os movimentos em um pedaço de
          papel e procure por um padrão.
        courseA_collector_loops8_b: Tente quebrar este quebra-cabeça em 3 problemas
          separados, e escreva laços para cada um deles.
        courseA_collector_loops8_c: Lembre-se de que você pode escrever um pedaço
          de código de cada vez, e então pressione "Rodar" para descobrir para onde
          você precisa ir a partir de lá.
      courseA_collector_loops8_2018_authored_hint:
        courseA_collector_loops8_a: Se você está tendo problemas para descobrir como
          resolver este quebra-cabeça, tente escrever os movimentos em um pedaço de
          papel e procure por um padrão.
        courseA_collector_loops8_b: Tente quebrar este quebra-cabeça em 3 problemas
          separados, e escreva laços para cada um deles.
        courseA_collector_loops8_c: Lembre-se de que você pode escrever um pedaço
          de código de cada vez, e então pressione "Rodar" para descobrir para onde
          você precisa ir a partir de lá.
      courseA_collector_loops9_authored_hint:
        courseA_collector_loops9_a: Se você não consegue descobrir os melhores lugares
          para usar laços, tente codificá-lo passo-a-passo e procure por um padrão.
        courseA_collector_loops9_b: Tente colocar 2 de seus <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laços um dentro do
          outro para tornar o seu código ainda mais curto!
      courseA_collector_loops9_2018_authored_hint:
        courseA_collector_loops9_a: Se você não consegue descobrir os melhores lugares
          para usar laços, tente codificá-lo passo-a-passo e procure por um padrão.
        courseA_collector_loops9_b: Tente colocar 2 de seus <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> laços um dentro do
          outro para tornar o seu código ainda mais curto!
      courseA_collector_loops_challenge1_authored_hint:
        courseA_collector_loops_challenge1_a: Tente alterar os números em cada laço
          se algo parecer estar errado.
        courseA_collector_loops_challenge1_b: Você não precisa de usar um laço se
          você está fazendo algo apenas uma vez.
        courseA_collector_loops_challenge1_c: Existem 6 gemas no lado direito da caverna
          no início, mas você precisa pegar o tesouro 5 vezes movendo-se para o Sul.
          Você sabe por quê?
        courseA_collector_loops_challenge1_d: |-
          O programa inicial não coleta as ultimas 2 gemas. Tente adicionar esse code ao final:
          <xml><block type="maze_moveEast"> <next> <block type="collector_collect_simplified"> <next> <block type="maze_moveSouth"> <next> <block type="collector_collect"/> </next> </block> </next> </block> </next> </block></xml>
      courseA_collector_loops_challenge1_2018_authored_hint:
        courseA_collector_loops_challenge1_a: Tente alterar os números em cada laço
          se algo parecer estar errado.
        courseA_collector_loops_challenge1_b: Você não precisa de usar um laço se
          você está fazendo algo apenas uma vez.
        courseA_collector_loops_challenge1_c: Existem 6 gemas no lado direito da caverna
          no início, mas você precisa pegar o tesouro 5 vezes movendo-se para o Sul.
          Você sabe por quê?
        courseA_collector_loops_challenge1_d: |-
          O programa inicial não coleta as ultimas 2 gemas. Tente adicionar esse code ao final:
          <xml><block type="maze_moveEast"> <next> <block type="collector_collect_simplified"> <next> <block type="maze_moveSouth"> <next> <block type="collector_collect"/> </next> </block> </next> </block> </next> </block></xml>
      courseA_collector_loops_challenge2_authored_hint:
        courseA_collector_loops_challenge2_b: Você precisa usar apenas 1 bloco para
          resolver isso.
        courseA_collector_loops_challenge2_a: Você pode se mover pelo caminho uma
          segunda vez antes de se mover para o sul.
      courseA_collector_loops_challenge2kp_authored_hint:
        courseA_collector_loops_challenge2kp_b: Tente esse caminho para chegar a solução.
        courseA_collector_loops_challenge2kp_a: Você consegue usar laços para resolver
          esse problema?
      courseA_collector_loops_challenge2kp_2018_authored_hint:
        courseA_collector_loops_challenge2kp_b: Tente esse caminho para chegar a solução.
        courseA_collector_loops_challenge2kp_a: Você consegue usar laços para resolver
          esse problema?
      courseA_collector_preLoops4_authored_hint:
        courseA_collector_preLoops4_a: "Para pegar o tesouro, encaixe dois blocos
          ![](https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png)
          blocks and one ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          ao final do programa e clique em \"Executar\"!\n\n"
      courseA_collector_preLoops5_authored_hint:
        courseA_collector_preLoops5_a: Você vai precisar ir em duas direções diferentes
          para pegar uma única gema!
      courseA_collector_preLoops6_authored_hint:
        courseA_collector_preLoops6_a: Você vai precisar usar dois blocos ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
          para resolver esse problema.
      courseA_collector_preLoops7_authored_hint:
        courseA_collector_loops2_b: |-
          Após você ter se movido para um quadrado com tesouro, use esse bloco para pegá-lo.
          <xml> <block type="collector_collect"/></xml>
      courseA_harvester_forVideo_authored_hint:
        courseA_harvester_loops3_a: |-
          Use um bloco 'repetir' como esse para te ajudar!
          <xml><block type="controls_repeat_simplified_dropdown"> <title name="TIMES" config="2-10">3</title> </block></xml>
      courseA_harvester_loops1_authored_hint:
        courseA_harvester_loops1_a: |-
          Quando você se mover até algum milho, use esse bloco para pegá-lo!
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_loops2_authored_hint:
        courseA_harvester_loops2_a: "Seu código terá **quatro** blocos 'mover para
          oeste'\n<xml><block type=\"maze_moveWest\"/></xml> e **quatro** blocos  <xml>
          'pegar milho' <block type=\"harvester_corn\"/>. "
      courseA_harvester_loops3_authored_hint:
        courseA_harvester_loops3_a: |-
          Use um bloco `repetição` como este para te ajudar!
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-10">4</title></block></xml>
        courseA_harvester_loops3_b: Para repetir o código, arraste um laço de `repetição`
          (<xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-10">4</title></block></xml>), e então coloque o bloco que você
          quiser dentro dele.
      courseA_harvester_loops4_authored_hint:
        courseA_harvester_loops4_a: Não fique com medo de apertar 'Executar' para
          ver o que acontece!
        courseA_harvester_loops4_b: Quantos pedaços de milho existem ali? Quantas
          vezes o seu código repete?
      courseA_harvester_loops5_authored_hint:
        courseA_harvester_loops5_a: Se você ficar preso, tente resolver esse desafio
          em 2 partes, uma parte antes do canto e outra depois do canto.
        courseA_harvester_loops5_b: Seu código final terá **um** laço de `repetição`
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-10">6</title></block></xml>, **um** bloco `mover ao Sul` <xml><block
          type="maze_moveSouth" limit="1"/></xml>, e **um** bloco `mover a leste`
          <xml><block type="maze_moveEast" limit="1"/></xml>.
        courseA_harvester_loops5_c: Use esse caminho para pegar todo o milho!
      courseA_harvester_loops5a_authored_hint:
        courseA_harvester_loops5a_a: Você irá precisar de um laço de `repetição`<xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="2-10">6</title></block></xml>
          após o outro.
        courseA_harvester_loops5a_b: Um laço irá repetir o `mover ao Sul` <xml><block
          type="maze_moveSouth" limit="1"/></xml>, e o outro irá repetir o `mover
          a Leste` <xml><block type="maze_moveEast" limit="1"/></xml>
        courseA_harvester_loops5a_c: Use esse caminho para se mover em uma direção,
          depois para a outra.
      courseA_harvester_loops5b_authored_hint:
        courseA_harvester_loops5b_a: Pressione 'Executar' e veja o que acontece!
        courseA_harvester_loops5b_b: Seus laços estão repetindo o numero certo de
          vezes?
        courseA_harvester_loops5b_c: Mova-se em uma direção, depois na outra direção
          com esse caminho.
      courseA_harvester_loops6_authored_hint:
        courseA_harvester_loops6_a: Se você ficar preso, tente escrever os passos
          no papel e olhar por padrões que se repetem.
        courseA_harvester_loops6_b: Esse ~e o caminho que você deveria pegar para
          colher todo o milho.
      courseA_harvester_loops7_authored_hint:
        courseA_harvester_loops7_a: Você irá precisar de dois laços de `repetição`
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-10">5</title></block></xml> um após o outro!
        courseA_harvester_loops7_b: Use dois laços de repetição para seguir este caminho.
      courseA_harvester_loops9_authored_hint:
        courseA_harvester_loops9_a: Divida esse problema em três partes diferentes.
          Uma parte para o primeiro canto, uma parte para o segundo canto e uma parta
          para o fim.
        courseA_harvester_loops9_b: Não tenha medo de executar o seu código após cada
          parte para ver o que acontece!
        courseA_harvester_loops9_c: Siga este caminho para coletar todo o milho.
      courseA_harvester_seq1_authored_hint:
        courseA_harvester_seq1_a: |-
          Use este bloco para coletar o milho quando a colheitadeira o encontrar!

          <xml>
          <block type="harvester_corn"/>
          </xml>
        courseA_harvester_seq1_b: |-
          A colheitadeira precisará mover a Leste três vezes para chegar ao milho. Use este bloco:
          <xml>
          <block type="maze_moveEast"/>
          </xml>
      courseA_harvester_seq10_authored_hint:
        courseA_harvester_seq10_a: Você está preso? Tente escrever os passos em um
          pedaço de papel.
        courseA_harvester_seq10_b: Você precisa `Mover a Leste`, e então `Mover ao
          Norte`. Faça isto duas vezes. Não se esqueça de coletar todo o milho também!
        courseA_harvester_seq10_c: Tente usar este caminho para pegar todo o milho.
      courseA_harvester_seq13_authored_hint:
        courseA_bee_seq1_a: |-
          Use esse bloco para colher o milho quando a colheitadeira chegar até ele.

          <xml>
          <block type="harvester_corn"/>
          </xml>
      courseA_harvester_seq2_authored_hint:
        courseA_harvester_seq2_a: Não se esqueça de usar <xml><block type="harvester_corn"/></xml>
          para colher o milho!
        courseA_harvester_seq2_b: Tente escrever os passos no papel para encontrar
          uma solução!
      courseA_harvester_seq3_authored_hint:
        courseA_harvester_seq3_a: |-
          Você se lembrou de usar esse bloco?
          <xml><block type="harvester_corn"/></xml>
        courseA_harvester_seq3_b: Diga os passos em voz alta e veja se te ajuda a
          descobrir a resposta.
      courseA_harvester_seq4_authored_hint:
        courseA_harvester_seq4_a: Quantos espaços existem entre a Colheitadeira e
          o milho? Quantos blocos já estão na sua área de trabalho?
        courseA_harvester_seq4_b: |-
          Você vai precisar de cinco blocos 'Mover Leste' e um bloco 'Colher Milho':
          <xml><block type="harvester_corn"/></xml>
      courseA_harvester_seq5_authored_hint:
        courseA_harvester_seq5_a: Quais blocos movem a colheitadeira para o caminho
          errado?
        courseA_harvester_seq5_b: Você precisa remover um bloco.
        courseA_harvester_seq5_c: |-
          Jogue esse bloco no lixo!
          <xml><block type="maze_moveNorth"/></xml>
      courseA_harvester_seq6_authored_hint:
        courseA_harvester_seq6_a: Se você está preso, tente falar os passos em voz
          alta. Isso pode te ajudar a descobrir o caminho certo.
      courseA_harvester_seq7_authored_hint:
        courseA_harvester_seq7_a: Tente resolver esse desafio em 2 partes, uma parte
          antes do canto e outra depois do canto.
        courseA_harvester_seq7_b: Está tendo problemas? Esse é o caminho que a colheitadeira
          deve tomar.
      courseA_harvester_seq9_authored_hint:
        courseA_harvester_seq9_a: Rode o código algumas vezes e veja o que acontece.
          Onde a colheitadeira parou?
        courseA_harvester_seq9_b: Não se esqueça de colher todo o milho! Você vai
          precisar de **3** blocos de colher milho.
        courseA_harvester_seq9_c: Você deve usar esse caminho para colher todo o milho.
      courseA_maze_ramp2_2018_authored_hint:
        '1': |-
          Seu código deve se parecer com esse:
          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> </block> </next> </block> </next> </block> </xml>
      courseA_maze_ramp2a_2018_authored_hint:
        '1': Conecte ambos os blocos `Leste` embaixo do bloco `quando executar`.
      courseA_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      courseA_maze_ramp3a_2018_authored_hint:
        '1': "Seu código deve se parecer com: \n<xml>\n<block type=\"when_run\" deletable=\"false\"
          movable=\"false\">\n<next>\n<block type=\"maze_moveEast\">\n<next>\n<block
          type=\"maze_moveEast\">\n<next>\n<block type=\"maze_moveNorth\"/>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>\n"
      courseA_maze_ramp3b_2018_authored_hint:
        '1': "Seu código deve se parecer com: \n\n<xml>\n<block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n<next>\n<block type=\"maze_moveSouth\">\n<next>\n<block
          type=\"maze_moveWest\">\n<next>\n<block type=\"maze_moveWest\"/>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>\n"
      courseA_maze_ramp4a_2018_authored_hint:
        '1': "Seu código deve se parecer com: \n\n<xml>\n<block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n<next>\n<block type=\"maze_moveEast\">\n<next>\n<block
          type=\"maze_moveEast\">\n<next>\n<block type=\"maze_moveSouth\"/>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      courseA_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
        courseC_maze_programming5_b: Lembre-se de que viradas são na perspectiva do
          pássaro.
        courseC_maze_programming5_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseA_maze_ramp5a_2018_authored_hint:
        '1': "Seu código deve se parecer com: \n\n<xml>\n<block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n<next>\n<block type=\"maze_moveWest\">\n<next>\n<block
          type=\"maze_moveWest\">\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      courseA_maze_seq1_authored_hint:
        courseA_maze_seq1_a: |-
          Se você estiver tendo problemas para fazer o pássaro se mover, certifique-se de que os blocos estejam conectados no lugar em baixo de <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          O pássaro precisará mover a Oeste 3 vezes para chegar ao porco. Use este bloco:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10_authored_hint:
        courseA_maze_seq10_a: Se você estiver tendo problemas, tente escrever os passos
          em um pedaço de papel primeiro.
        courseA_maze_seq10_b: Você vai precisar de ir em 3 direções para resolver
          este quebra-cabeça.
      courseA_maze_seq10_2018_authored_hint:
        courseA_maze_seq10_a: Se você estiver tendo problemas, tente escrever os passos
          em um pedaço de papel primeiro.
        courseA_maze_seq10_b: Você vai precisar de ir em 3 direções diferentes para
          resolver este quebra-cabeça.
      courseA_maze_seq13_authored_hint:
        courseA_maze_seq13_a: Se o caminho que você precisa não estiver claro, use
          o seu dedo para traçar seu caminho do pássaro até o porco.
        courseA_maze_seq13_b: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer.
        courseA_maze_seq13_c: Estes <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> blocos irão te ajudar a se aproximar do porco.
      courseA_maze_seq13_2018_authored_hint:
        courseA_maze_seq13_a: Se o caminho que você precisa não estiver claro, use
          o seu dedo para traçar seu caminho do pássaro até o porco.
        courseA_maze_seq13_b: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer.
        courseA_maze_seq13_c: Estes <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> blocos irão te ajudar a se aproximar do porco.
      courseA_maze_seq1_2018_authored_hint:
        courseA_maze_seq1_a: |-
          Se você estiver tendo problemas para fazer o pássaro se mover, certifique-se de que os blocos estejam conectados no lugar em baixo de <xml>
          <block type="when_run"/>
          </xml>
        courseA_maze_seq1_b: |-
          O pássaro precisará mover a Oeste 3 vezes para chegar ao porco. Use este bloco:
          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2_authored_hint:
        courseA_maze_seq2_a: Está faltando 1 bloco nesse programa. Você consegue descobrir
          qual?
        courseA_maze_seq2_b: Tente executar o código primeiro para ver onde o pássaro
          vai parar. Onde você precisa ir a partir dai?
      courseA_maze_seq2_2018_authored_hint:
        courseA_maze_seq2_a: Está faltando 1 bloco nesse programa. Você consegue descobrir
          qual?
        courseA_maze_seq2_b: Tente executar o código primeiro para ver onde o pássaro
          vai parar. Onde você precisa ir a partir dai?
      courseA_maze_seq3_authored_hint:
        courseA_maze_seq3_a: 1 dos blocos está movendo o pássaro na direção errada.
          Você consegue descobrir qual e substituir pelo bloco correto?
        courseA_maze_seq3_b: Tente usar o botão de passos para descobrir onde que
          o programa está errado. É o passo 1? É o 2?
        courseA_maze_seq3_c: Este <xml><block type="maze_moveNorth"/></xml> bloco
          não parece estar movendo o pássaro na direção correta. Você pode trocá-lo
          por um bloco diferente?
      courseA_maze_seq3_2018_authored_hint:
        courseA_maze_seq3_a: 1 dos blocos está movendo o pássaro na direção errada.
          Você consegue descobrir qual e substituir pelo bloco correto?
        courseA_maze_seq3_b: Tente usar o botão de passos para descobrir onde que
          o programa está errado. É o passo 1? É o 2?
        courseA_maze_seq3_c: Este <xml><block type="maze_moveNorth"/></xml> bloco
          não parece estar movendo o pássaro na direção correta. Você pode trocá-lo
          por um bloco diferente?
      courseA_maze_seq4_authored_hint:
        courseA_maze_seq4_a: Se você estiver tendo problemas, tente descobrir qual
          o caminho correto e então remova o bloco que não serve.
        courseA_maze_seq4_b: Tente executar o código do jeito que ele está. Algo dá
          errado? Qual bloco você pode remover? Como você pode consertá-lo?
      courseA_maze_seq4_2018_authored_hint:
        courseA_maze_seq4_a: Se você estiver tendo problemas, tente descobrir qual
          o caminho correto e então remova o bloco que não serve.
        courseA_maze_seq4_b: Tente executar o código do jeito que ele está. Algo dá
          errado? Qual bloco você pode remover? Como você pode consertá-lo?
      courseA_maze_seq4a_authored_hint:
        courseA_maze_seq4_a: Se você estiver tendo problemas, tente usar o seu dedo
          para descobrir o caminho correto apontando para ele no mapa. Quais movimentos
          o seu dedo fez?
      courseA_maze_seq5_authored_hint:
        courseA_maze_seq5_a: Tente escrever os passos no papel para encontrar uma
          solução!
        courseA_maze_seq5_b: Você precisará de 2 blocos, apontando para 2 direções.
      courseA_maze_seq5_2018_authored_hint:
        '1': Tente escrever os passos no papel para encontrar uma solução!
        '2': |-
          Você vai precisar usar este bloco:

          <xml><block type="maze_moveSouth"/></xml>
      courseA_maze_seq5a_2018_authored_hint:
        '1': Diga os passos em voz alta e veja se te ajuda a descobrir a resposta.
      courseA_maze_seq6_authored_hint:
        courseA_maze_seq6_a: Seu código final deve ter 3 blocos de movimento.
        courseA_maze_seq6_b: Se você ficar preso, tente resolver esse desafio em 2
          partes, uma parte antes do canto e outra depois do canto.
      courseA_maze_seq6_2018_authored_hint:
        courseA_maze_seq6_a: Seu código final deve ter 3 blocos de movimento.
        courseA_maze_seq6_b: Se você ficar preso, tente resolver esse desafio em 2
          partes, uma parte antes do canto e outra depois do canto.
      courseA_maze_seq7_authored_hint:
        courseA_maze_seq7_a: Há 1 bloco que você precisa adicionar para mover o pássaro
          até o porco.
        courseA_maze_seq7_b: Se você não consegue descobrir o que fazer, tente desenhar
          o quebra-cabeça no papel e usar o seu dedo para descobrir em qual caminho
          seguir.
      courseA_maze_seq7_2018_authored_hint:
        courseA_maze_seq7_a: Há 1 bloco que você precisa adicionar para mover o pássaro
          até o porco.
        courseA_maze_seq7_b: Se você não consegue descobrir o que fazer, tente desenhar
          o quebra-cabeça no papel e usar o seu dedo para descobrir em qual caminho
          seguir.
      courseA_maze_seq8_authored_hint:
        courseA_maze_seq8_a: Se você estiver preso, tente desenhar a imagem no papel
          para ver como o pássaro deveria se mover.
      courseA_maze_seq8_2018_authored_hint:
        courseA_maze_seq8_a: Se você estiver preso, tente desenhar a imagem no papel
          para ver como o pássaro deveria se mover.
      courseA_maze_seq9_authored_hint:
        courseA_maze_seq9_a: Preso? Tente traçar o caminho do pássaro com o seu dedo.
        courseA_maze_seq9_b: Se você não tem certeza sobre o que fazer, tente pressionar
          "Recomeçar" e executar o código para ver o que está errado.
        courseA_maze_seq9_c: Você precisará mover em 3 direções para resolver este
          quebra-cabeça.
      courseA_maze_seq9_2018_authored_hint:
        courseA_maze_seq9_a: Preso? Tente traçar o caminho do pássaro com o seu dedo.
        courseA_maze_seq9_b: Se você não tem certeza sobre o que fazer, tente pressionar
          "Recomeçar" e executar o código para ver o que está errado.
        courseA_maze_seq9_c: Você precisará mover em 3 direções para resolver este
          quebra-cabeça.
      courseA_maze_seq_challenge1_authored_hint:
        courseA_maze_seq_challenge1_a: Existem duas soluções para este quebra-cabeça.
      courseA_maze_seq_challenge1_2018_authored_hint:
        courseA_maze_seq_challenge1_a: Existem duas soluções para este quebra-cabeça.
      courseA_maze_seq_challenge2_authored_hint:
        courseA_maze_seq_challenge2_a: Tente contar os espaços com o seu dedo. Lembre-se
          de não contar o espaço onde você inicia!
      courseA_maze_seq_challenge2_2018_authored_hint:
        courseA_maze_seq_challenge2_a: Tente contar os espaços com o seu dedo. Lembre-se
          de não contar o espaço onde você inicia!
      courseA_playLab_events2_authored_hint:
        courseA_playLab_events2_a: Procure por um bloco que faça o cachorro dizer
          algo.
        courseA_playLab_events2_b: |-
          Este é o código que você precisa para completar este quebra-cabeça:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Olá.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events2_2018_authored_hint:
        courseA_playLab_events2_a: Procure por um bloco que faça o cachorro dizer
          algo.
        courseA_playLab_events2_b: |-
          Este é o código que você precisa para completar este quebra-cabeça:

          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
          <title name="SPRITE">1</title>
          <title name="VALUE">Olá.</title>
          </block>
          </next>
          </block>
          </xml>
      courseA_playLab_events3_authored_hint:
        courseA_playLab_events3_a: |-
          Arraste este bloco <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> para fora e conecte-o embaixo do bloco à <xml><block type="studio_whenArrow"><title name="VALUE"> esquerda</title>
          </block></xml>
        courseA_playLab_events3_b: Lembre-se de usar a seta para a esquerda para mover
          Jorge para a bandeira assim que você tiver escrito o seu programa. Quando
          a bandeira ficar verde, você terá terminado!
      courseA_playLab_events3_2018_authored_hint:
        courseA_playLab_events3_a: |-
          Arraste este bloco <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">8</title>
          </block></xml> para fora e conecte-o embaixo do bloco à <xml><block type="studio_whenArrow"><title name="VALUE"> esquerda</title>
          </block></xml>
        courseA_playLab_events3_b: Lembre-se de usar a seta para a esquerda para mover
          Jorge para a bandeira assim que você tiver escrito o seu programa. Quando
          a bandeira ficar verde, você terá terminado!
      courseA_playLab_events4_authored_hint:
        courseA_playLab_events4_a: |-
          Aqui está o bloco de evento que você vai precisar para mover Jorge para a direita:
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Este é o código que você vai precisar para completar este quebra-cabeça:

          <xml><block type="studio_whenArrow"><title name="VALUE">direita</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events4_2018_authored_hint:
        courseA_playLab_events4_a: |-
          Aqui está o bloco de evento que você vai precisar para mover Jorge para a direita:
          <xml><block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></xml>
        courseA_playLab_events4_b: |-
          Este é o código que você vai precisar para completar este quebra-cabeça:

          <xml><block type="studio_whenArrow"><title name="VALUE">direita</title>
          <next>
          <block type="studio_move">
          <title name="SPRITE">1</title>
          <title name="DIR">2</title>
          </block></next></block></xml>
      courseA_playLab_events5_authored_hint:
        courseA_playLab_events5_a: |-
          Aqui estão os blocos de evento que você vai precisar usar para mover Jorge para cima e para baixo:

          <xml><block type="studio_whenArrow">
            <title name="VALUE">acima</title>
            </block></xml>

          e
          <xml><block type="studio_whenArrow">
            <title name="VALUE">abaixo</title>
          </block></xml>
        courseA_playLab_events5_b: |-
          Você sabia que você pode mudar a chave para a seta de evento clicando na imagem no bloco e escolhendo uma nova chave?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018_authored_hint:
        courseA_playLab_events5_a: |-
          Aqui estão os blocos de evento que você vai precisar usar para mover Jorge para cima e para baixo:

          <xml><block type="studio_whenArrow">
            <title name="VALUE">acima</title>
            </block></xml>

          e
          <xml><block type="studio_whenArrow">
            <title name="VALUE">abaixo</title>
          </block></xml>
        courseA_playLab_events5_b: |-
          Você sabia que você pode mudar a chave para a seta de evento clicando na imagem no bloco e escolhendo uma nova chave?

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6_authored_hint:
        courseA_playLab_events6_a: |-
          Aqui está o bloco de evento que você vai usar para que Jorge faça algo quando você clicar nele:

          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Aqui está o bloco que você vai usar para alterar o fundo:

          <xml><block type="studio_setBackground">
          <title name="VALUE">aleatório</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Aqui está o bloco que você usaria para tocar um som aleatório:

          <xml><block type="studio_playSound">
          <title name="SOUND">aleatório</title>
          </block></xml>
      courseA_playLab_events6_2018_authored_hint:
        courseA_playLab_events6_a: |-
          Aqui está o bloco de evento que você vai usar para que Jorge faça algo quando você clicar nele:

          <xml><block type="studio_whenSpriteClicked">
          <title name="SPRITE">1</title>
          </block></xml>
        courseA_playLab_events6_b: |-
          Aqui está o bloco que você vai usar para alterar o fundo:

          <xml><block type="studio_setBackground">
          <title name="VALUE">aleatório</title>
          </block></xml>
        courseA_playLab_events6_c: |-
          Aqui está o bloco que você usaria para tocar um som aleatório:

          <xml><block type="studio_playSound">
          <title name="SOUND">aleatório</title>
          </block></xml>
      courseA_playLab_events7_authored_hint:
        courseA_playLab_events7_a: |-
          Use este bloco para controlar o que acontece quando os atores se chocam.

          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playLab_events7_2018_authored_hint:
        courseA_playLab_events7_a: |-
          Use este bloco para controlar o que acontece quando os atores se chocam.

          <xml><block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">0</title>
          </block></xml>
      courseA_playlab_events_challenge1_authored_hint:
        courseA_playlab_events_challenge1_a: |-
          Faça Waddles, o Pinguim, aparecer quando você clicar em Robin!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">2</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">3</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_b: |-
          Faça Boo, o Fantasma, aparecer quando você clicar em Wendel!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">3</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">4</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_c: |-
          Faça Jayden, o Monstro Felpudo, aparecer quando você clicar em Boo!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">4</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">5</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_d: |-
          Faça Spiff, o Robô, aparecer quando você clicar no monstro!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">5</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">6</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_e: |-
          Finalmente, faça Wendel, o Mago, aparecer quando você clicar em Spiff!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">6</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">7</title>
              </block>
            </next>
          </block></xml>
      courseA_playlab_events_challenge1_2018_authored_hint:
        courseA_playlab_events_challenge1_a: |-
          Faça Waddles, o Pinguim, aparecer quando você clicar em Robin!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">2</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">3</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_b: |-
          Faça Boo, o Fantasma, aparecer quando você clicar em Wendel!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">3</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">4</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_c: |-
          Faça Jayden, o Monstro Felpudo, aparecer quando você clicar em Boo!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">4</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">5</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_d: |-
          Faça Spiff, o Robô, aparecer quando você clicar no monstro!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">5</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">6</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_e: |-
          Finalmente, faça Wendel, o Mago, aparecer quando você clicar em Spiff!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">6</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">7</title>
              </block>
            </next>
          </block></xml>
      courseA_playlab_events_challenge1a_authored_hint:
        courseA_playlab_events_challenge1_a: |-
          Você pode fazer um pássaro cantar.
          <xml>   <block type="studio_whenSpriteClicked">     <title name="SPRITE">2</title>     <next>           <block type="studio_saySprite">             <title name="SPRITE">2</title>             <title name="TEXT">Tweet</title>           </block>     </next>   </block></xml>
        courseA_playlab_events_challenge1_b: |-
          Você pode fazer um robô emitir um bipe.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                  <block type="studio_playSound">
                    <title name="SOUND">ponto de vitória</title>
                  </block>
               </next>

          </block></xml>
        courseA_playlab_events_challenge1_c: |-
          Você pode fazer um monstro furioso rosnar.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Rosnar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_authored_hint:
        courseA_playlab_events_challenge2_a: |-
          Você pode fazer um pássaro cantar.
          <xml>   <block type="studio_whenSpriteClicked">     <title name="SPRITE">2</title>     <next>           <block type="studio_saySprite">             <title name="SPRITE">2</title>             <title name="TEXT">Tweet</title>           </block>     </next>   </block></xml>
        courseA_playlab_events_challenge2_b: |-
          Você pode fazer um robô emitir um bipe.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                  <block type="studio_playSound">
                    <title name="SOUND">ponto de vitória</title>
                  </block>
               </next>

          </block></xml>
        courseA_playlab_events_challenge2_c: |-
          Você pode fazer um monstro furioso rosnar.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Rosnar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challenge2_2018_authored_hint:
        courseA_playlab_events_challenge2_a: |-
          Você pode fazer um pássaro cantar.
          <xml>   <block type="studio_whenSpriteClicked">     <title name="SPRITE">2</title>     <next>           <block type="studio_saySprite">             <title name="SPRITE">2</title>             <title name="TEXT">Tweet</title>           </block>     </next>   </block></xml>
        courseA_playlab_events_challenge2_b: |-
          Você pode fazer um robô emitir um bipe.
          <xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                  <block type="studio_playSound">
                    <title name="SOUND">ponto de vitória</title>
                  </block>
               </next>

          </block></xml>
        courseA_playlab_events_challenge2_c: |-
          Você pode fazer um monstro furioso rosnar.

          <xml>  <block type="studio_whenSpriteClicked">
          <title name="SPRITE">5</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">2</title>
          <next>
          <block type="studio_saySprite">
          <title name="SPRITE">5</title>
          <title name="TEXT">Rosnar!</title>
          <next>
          <block type="studio_setSpriteEmotion">
          <title name="SPRITE">5</title>
          <title name="VALUE">0</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block></xml>
      courseA_playlab_events_challengeClone_authored_hint:
        courseA_playlab_events_challenge1_a: |-
          Faça Waddles, o Pinguim, aparecer quando você clicar em Robin!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">2</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">3</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_b: |-
          Faça Boo, o Fantasma, aparecer quando você clicar em Wendel!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">3</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">4</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_c: |-
          Faça Jayden, o Monstro Felpudo, aparecer quando você clicar em Boo!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">4</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">5</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_d: |-
          Faça Spiff, o Robô, aparecer quando você clicar no monstro!
          <xml>

          <block type="studio_whenSpriteClicked">
            <title name="SPRITE">5</title>
            <next>
              <block type="studio_setSprite">
                <title name="VALUE">"visível"</title>
                <title name="SPRITE">6</title>
              </block>
            </next>
          </block></xml>
        courseA_playlab_events_challenge1_e: "Finalmente, faça Wendel o Mago aparecer
          quando você clica em Spiff!\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n
          \     </block>\n    </next>\n  </block></xml>"
      courseB_Scrat_ramp1_2018_authored_hint:
        '1': If Scrat isn't doing what you want, make sure both of the blocks have
          been fully clicked together, then click "Run" again.
        '2': Não tenha medo de errar! Tente algo, e se não funcionar, tente algo diferente!
      courseB_Scrat_ramp2_2018_authored_hint:
        '1': |-
          Seu código deve se parecer com esse:
          <xml> <block type="when_run" deletable="false" movable="false"> <next> <block type="maze_moveEast"> <next> <block type="maze_moveEast"> </block> </next> </block> </next> </block> </xml>
      courseB_Scrat_ramp3a_2018_authored_hint:
        '1': "Seu código deve se parecer com: \n<xml>\n<block type=\"when_run\" deletable=\"false\"
          movable=\"false\">\n<next>\n<block type=\"maze_moveEast\">\n<next>\n<block
          type=\"maze_moveEast\">\n<next>\n<block type=\"maze_moveNorth\"/>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>\n"
      courseB_Scrat_ramp3b_2018_authored_hint:
        '1': |
          Your code should look like this:

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="maze_moveSouth">
          <next>
          <block type="maze_moveEast">
          <next>
          <block type="maze_moveEast"/>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseB_Scrat_ramp4a_2018_authored_hint:
        '1': "Seu código deve se parecer com: \n\n<xml>\n<block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n<next>\n<block type=\"maze_moveEast\">\n<next>\n<block
          type=\"maze_moveEast\">\n<next>\n<block type=\"maze_moveSouth\"/>\n</next>\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      courseB_Scrat_ramp5a_2018_authored_hint:
        '1': "Seu código deve se parecer com: \n\n<xml>\n<block type=\"when_run\"
          deletable=\"false\" movable=\"false\">\n<next>\n<block type=\"maze_moveWest\">\n<next>\n<block
          type=\"maze_moveWest\">\n</block>\n</next>\n</block>\n</next>\n</block>\n</xml>"
      courseB_artist_loops9_authored_hint:
        courseB_artist_loops9_c: Não consegue descobrir onde colocar o laço? Tente
          escrever o código passo-a-passo e procure um padrão.
      courseB_artist_loops9_2018_authored_hint:
        courseB_artist_loops9_c: Não consegue descobrir onde colocar o laço? Tente
          escrever o código passo-a-passo e procure um padrão.
      courseB_collector_loops2_authored_hint:
        courseB_collector_loops2_a: Você terá que se mover antes de conseguir coletar
          qualquer tesouro.
      courseB_collector_loops2_2018_authored_hint:
        courseB_collector_loops2_a: Você terá que se mover antes de conseguir coletar
          qualquer tesouro.
      courseB_collector_loops4_authored_hint:
        courseB_collector_loops4_b: Para mudar o quão longe vai Laurel, mude o número
          de vezes que o laço executa.
      courseB_collector_loops4_2018_authored_hint:
        courseB_collector_loops4_b: Para mudar o quão longe vai Laurel, mude o número
          de vezes que o laço executa.
      courseB_collector_loops_challenge`_authored_hint:
        courseA_collector_loops_challenge2_b: Você precisa usar apenas um bloco ![](https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png) para resolver isto.
        courseA_collector_loops_challenge2_a: |-
          Você pode se mover de volta pelo caminho uma segunda vez antes de se mover ao sul.

          ![](https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png)
      courseB_maze_seq8_authored_hint:
        courseB_maze_seq8_b: Existem duas maneiras de resolver este quebra-cabeças!
      courseB_maze_seq8_2018_authored_hint:
        courseB_maze_seq8_b: Existem duas maneiras de resolver este quebra-cabeças!
      courseB_maze_seq9_authored_hint:
        courseB_maze_seq9_d: Ficou preso? Tente esse caminho!
      courseB_maze_seq9_2018_authored_hint:
        courseB_maze_seq9_d: Ficou preso? Tente esse caminho!
      courseB_maze_seqCold_authored_hint:
        courseB_maze_seqCold_a: Preso? Tente traçar o caminho do pássaro com o seu
          dedo.
      courseB_maze_seqOld_authored_hint:
        courseB_maze_seqOld_a: Se você estiver tendo problemas, tente escrever os
          passos em um pedaço de papel primeiro.
      courseC_artist_prog2_authored_hint:
        courseC_artist_prog2_a: Se você usar o bloco para me fazer `avançar por 100
          pixels`, eu desenharei uma linha automaticamente.
        courseC_artist_prog2_b: Você está tendo problemas para virar a esquina? Use
          o bloco 'virar à direita 90 graus'.
      courseC_artist_prog2_2018_authored_hint:
        courseC_artist_prog2_a: Se você usar o bloco para me fazer `avançar por 100
          pixels`, eu desenharei uma linha automaticamente.
        courseC_artist_prog2_b: Você está tendo problemas para virar a esquina? Use
          o bloco 'virar à direita 90 graus'.
      courseC_artist_prog5_authored_hint:
        courseC_artist_prog5_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_artist_prog5_2018_authored_hint:
        courseC_artist_prog5_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_artist_prog7_authored_hint:
        courseC_artist_prog7_e: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_artist_prog7_2018_authored_hint:
        courseC_artist_prog7_e: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_collector_prog2_authored_hint:
        courseC_collector_prog2_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_collector_prog2_2018_authored_hint:
        courseC_collector_prog2_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_collector_prog4_authored_hint:
        courseC_collector_prog4_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_collector_prog4_2018_authored_hint:
        courseC_collector_prog4_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_harvester_loops2_authored_hint:
        courseC_harvester_loops2_a: Se você ficar preso, tente escrever os passos
          no papel e olhar por padrões que se repetem.
      courseC_harvester_loops2_2018_authored_hint:
        courseC_harvester_loops2_a: Se você ficar preso, tente escrever os passos
          no papel e olhar por padrões que se repetem.
      courseC_maze_debugging2_authored_hint:
        courseC_maze_debugging2_c: Não consegue descobrir o que está errado? Tente
          rodar o código algumas vezes para ver o que acontece.
      courseC_maze_debugging2_2018_authored_hint:
        courseC_maze_debugging2_c: Não consegue descobrir o que está errado? Tente
          rodar o código algumas vezes para ver o que acontece.
      courseC_maze_debugging3_authored_hint:
        courseC_maze_debugging3_b: Não consegue descobrir o que está errado? Tente
          rodar o código algumas vezes para ver o que acontece.
      courseC_maze_debugging3_2018_authored_hint:
        courseC_maze_debugging3_b: Não consegue descobrir o que está errado? Tente
          rodar o código algumas vezes para ver o que acontece.
      courseC_maze_loops6_authored_hint:
        courseC_maze_loops6_b: Para colocar muitos blocos dentro de bloco `repita`,
          apenas arraste um repita para fora na área de Blocos, em seguida, arraste
          todos os blocos do programa inicial dentro dele.    Conecte tudo de volta
          no bloco `quando executar` e está pronto para executar!
      courseC_maze_loops7_authored_hint:
        courseC_maze_loops7_a: Se o padrão está difícil de ser identificado, tente
          fazer toda a programação primeiro, veja quais partes se repetem várias vezes
          e então as substitua por um loop.
      courseC_maze_programming5_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
      courseC_maze_programming5_2018_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
      courseC_maze_programming6_authored_hint:
        courseC_maze_programming6_a: Existem duas maneiras de resolver este quebra-cabeças!
      courseC_maze_programming6_2018_authored_hint:
        courseC_maze_programming6_a: Existem duas maneiras de resolver este quebra-cabeças!
      courseC_maze_programming8_authored_hint:
        courseC_maze_programming8_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseC_maze_programming8_2018_authored_hint:
        courseC_maze_programming8_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_artist_5_2018_authored_hint:
        '1': If you are switching your shapes, don't forget that you will need to
          switch their angles, too!
      courseD_artist_functions2_authored_hint:
        courseD_artist_functions2_a: "Seu programa deve: \n-Usar função\n- Mover para
          frente 100 + 75 pixels\n- Usar função"
      courseD_artist_nestedLoops3_authored_hint:
        courseD_artist_nestedLoops3_a: "Tente usar o bloco 'saltar para a frente'
          para conseguir ir do topo de um quadrado para o lugar onde você vai começar
          o próxima. \nSe seus quadrados tiverem 20 pixels de altura e estiverem separados
          por 20 pixels entre si, qual distância você precisa saltar?"
      courseD_artist_nestedLoops3_2018_authored_hint:
        courseD_artist_nestedLoops3_a: "Tente usar o bloco 'saltar para a frente'
          para conseguir ir do topo de um quadrado para o lugar onde você vai começar
          o próxima. \nSe seus quadrados tiverem 20 pixels de altura e estiverem separados
          por 20 pixels entre si, qual distância você precisa saltar?"
      courseD_bee_conditionals8_authored_hint:
        courseD_bee_conditionals8_a: "** Lembre-se: ** este quebra-cabeça muda cada
          vez que ele é executado.    Você vai querer usar um bloco condicional (`se`
          ou  `se/senão`) para resolver o desafio."
      courseD_bee_conditionals8_2018_authored_hint:
        courseD_bee_conditionals8_a: "** Lembre-se: ** este quebra-cabeça muda cada
          vez que ele é executado.    Você vai querer usar um bloco condicional (`se`
          ou  `se/senão`) para resolver o desafio."
      courseD_collector_debugging_challenge2_authored_hint:
        courseD_collector_debugging_challenge2_d: |-
          Aqui está a solução completa para esse quebra-cabeças.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_debugging_challenge2_2018_authored_hint:
        courseD_collector_debugging_challenge2_d: |-
          Aqui está a solução completa para esse quebra-cabeças.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">4</title>
          <statement name="DO">
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat">
          <title name="TIMES">2</title>
          <statement name="DO">
          <block type="collector_collect"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_authored_hint:
        courseD_bee_nested_loops_challenge2_d: |-
          **Solução:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_collector_nested_loops_challenge2_2018_authored_hint:
        courseD_bee_nested_loops_challenge2_d: |-
          **Solução:**
          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="collector_collect">
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_dropdown">
          <title name="TIMES" config="3-10">3</title>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseD_maze_ramp1_authored_hint:
        courseC_maze_programming1_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      courseD_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      courseD_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
        courseC_maze_programming5_b: Lembre-se de que viradas são na perspectiva do
          pássaro.
        courseC_maze_programming5_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
        courseC_maze_programming5_b: Lembre-se de que viradas são na perspectiva do
          pássaro.
        courseC_maze_programming5_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp5a_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
        courseC_maze_programming5_b: Lembre-se de que viradas são na perspectiva do
          pássaro.
        courseC_maze_programming5_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp5a_2018_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
        courseC_maze_programming5_b: Lembre-se de que viradas são na perspectiva do
          pássaro.
        courseC_maze_programming5_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp5b_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
        courseC_maze_programming5_b: Lembre-se de que viradas são na perspectiva do
          pássaro.
        courseC_maze_programming5_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp5b_2018_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
        courseC_maze_programming5_b: Lembre-se de que viradas são na perspectiva do
          pássaro.
        courseC_maze_programming5_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Existem duas maneiras de resolver este quebra-cabeças!
      courseD_scrat_ramp1_authored_hint:
        courseC_maze_programming1_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_scrat_ramp1_2018_authored_hint:
        courseC_maze_programming1_b: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_scrat_ramp3_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      courseD_scrat_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      courseD_scrat_ramp4_authored_hint:
        courseC_maze_programming4_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_scrat_ramp4_2018_authored_hint:
        courseC_maze_programming4_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_scrat_ramp5_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
      courseD_scrat_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
      courseD_scrat_ramp7_authored_hint:
        courseD_scrat_programming6_a: Existem duas maneiras de resolver este quebra-cabeças!
        courseD_scrat_programming6_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_scrat_ramp7_2018_authored_hint:
        courseD_scrat_programming6_a: Existem duas maneiras de resolver este quebra-cabeças!
        courseD_scrat_programming6_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseD_scrat_ramp8_authored_hint:
        courseD_maze_ramp7_c: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer, mesmo se você achar que
          ainda não resolveu o quebra-cabeça.
      courseD_scrat_ramp8_2018_authored_hint:
        courseD_maze_ramp7_c: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer, mesmo se você achar que
          ainda não resolveu o quebra-cabeça.
      courseE_artist_concept_challenge1_authored_hint:
        courseE_artist_concept_challenge1_a: 'O metade-hexágono tem um ** comprimento
          de 30 ** e gira para a direita em ** 60 graus **.  '
        courseE_artist_concept_challenge1_b: 'Os 2/3 do triângulo tem um ** comprimento
          de 80 ** e gira para a direita em ** 120 graus **. '
      courseE_artist_concept_challenge1_2018_authored_hint:
        courseE_artist_concept_challenge1_a: 'O metade-hexágono tem um ** comprimento
          de 30 ** e gira para a direita em ** 60 graus **.  '
        courseE_artist_concept_challenge1_b: 'Os 2/3 do triângulo tem um ** comprimento
          de 80 ** e gira para a direita em ** 120 graus **. '
      courseE_artist_functions1_authored_hint:
        courseE_artist_functions1_a: Cada um dos quadrados tem 100 de pixels de lado,
          o que significa que você terá que movê-lo para frente 175 pixels antes de
          desenhar o seu segundo quadrado.
        courseE_artist_functions1_b: É okey desenhar linhas sobrepostas para fazer
          seus óculos.
      courseE_artist_functions1_2018_authored_hint:
        courseE_artist_functions1_a: Cada um dos quadrados tem 100 de pixels de lado,
          o que significa que você terá que movê-lo para frente 175 pixels antes de
          desenhar o seu segundo quadrado.
        courseE_artist_functions1_b: É okey desenhar linhas sobrepostas para fazer
          seus óculos.
      courseE_artist_functions2_authored_hint:
        courseD_artist_functions2_a: "Seu programa deve: \n-Usar função\n- Mover para
          frente 100 + 75 pixels\n- Usar função"
      courseE_artist_functions2_2018_authored_hint:
        courseD_artist_functions2_a: "Seu programa deve: \n-Usar função\n- Mover para
          frente 100 + 75 pixels\n- Usar função"
      courseE_artist_ramp10_authored_hint:
        courseD_artist_ramp10_c: |-
          Este artista irá desenhar, ao todo, seis triângulos:

          ![](https://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2_solution2.gif)
      courseE_bee_functions6_authored_hint:
        courseE_bee_functions6_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!\n
          ! [a] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions6_2018_authored_hint:
        courseE_bee_functions6_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!\n
          ! [a] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions6test_authored_hint:
        courseE_bee_functions6_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!\n
          ! [a] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseE_bee_functions7_authored_hint:
        courseE_bee_functions7_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
        courseE_bee_functions7_b: "Lembre-se de construir o seu código dentro do bloco
          de função verde. \n! [a] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
      courseE_bee_functions7_2018_authored_hint:
        courseE_bee_functions7_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
        courseE_bee_functions7_b: "Lembre-se de construir o seu código dentro do bloco
          de função verde. \n! [a] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
      courseE_bee_functions_challenge1_authored_hint:
        courseE_bee_functions_challenge1_a: "Se o quebra-cabeça parece desafiador,
          tente construir sua função aos poucos.\nAdicione alguns blocos e os experimente.
          Adicione mais alguns e experimente novamente.  \nEm breve, você terá sua
          função!"
      courseE_bee_functions_challenge1_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Se o quebra-cabeça parece desafiador,
          tente construir sua função aos poucos.\nAdicione alguns blocos e os experimente.
          Adicione mais alguns e experimente novamente.  \nEm breve, você terá sua
          função!"
      courseE_bee_functions_challenge2_authored_hint:
        courseE_bee_functions_challenge1_a: "Se o quebra-cabeça parece desafiador,
          tente construir sua função aos poucos.\nAdicione alguns blocos e os experimente.
          Adicione mais alguns e experimente novamente.  \nEm breve, você terá sua
          função!"
      courseE_bee_functions_challenge2_2018_authored_hint:
        courseE_bee_functions_challenge1_a: "Se o quebra-cabeça parece desafiador,
          tente construir sua função aos poucos.\nAdicione alguns blocos e os experimente.
          Adicione mais alguns e experimente novamente.  \nEm breve, você terá sua
          função!"
      courseE_farmer_concept4_authored_hint:
        4-5_Artist_Patterns_3_a: Tenha cuidado ao retirar o bloco cheio de "código
          na barra de Blocos, cada vez que você tentar um novo bloco.
        4-5_Artist_Patterns_3_b: Se seu código ficar muito confuso, você pode sempre
          clicar em "Começar do Início" e tentar novamente!
      courseE_farmer_ramp12e_authored_hint:
        courseE_farmer_ramp12e_b: A solução deste quebra-cabeças vai ser muito parecida
          com a do anterior, mas virando em outra direção.
      courseE_farmer_ramp12e_2018_authored_hint:
        courseE_farmer_ramp12e_b: A solução deste quebra-cabeças vai ser muito parecida
          com a do anterior, mas virando em outra direção.
      courseE_maze_ramp3_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      courseE_maze_ramp3_2018_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      courseE_maze_ramp4_authored_hint:
        courseC_maze_programming4_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseE_maze_ramp4_2018_authored_hint:
        courseC_maze_programming4_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseE_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
      courseE_maze_ramp5_2018_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
      courseE_maze_ramp6_authored_hint:
        courseC_maze_programming6_a: Existem duas maneiras de resolver este quebra-cabeças!
        courseC_maze_programming6_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseE_maze_ramp6_2018_authored_hint:
        courseC_maze_programming6_a: Existem duas maneiras de resolver este quebra-cabeças!
        courseC_maze_programming6_c: Não tenha medo de cometer um erro! Tente adicionar
          blocos e executar o código para ver o que vai acontecer, mesmo se você achar
          que ainda não resolveu o quebra-cabeça.
      courseE_maze_ramp7_authored_hint:
        courseD_maze_ramp7_c: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer, mesmo se você achar que
          ainda não resolveu o quebra-cabeça.
      courseE_maze_ramp7_2018_authored_hint:
        courseD_maze_ramp7_c: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer, mesmo se você achar que
          ainda não resolveu o quebra-cabeça.
      courseE_multi_maze_ramp5_authored_hint:
        courseC_maze_programming5_a: Tente usar o botão "Passo" para executar o seu
          código linha a linha. Você consegue descobrir o que você precisa fazer em
          seguida?
      courseF_artist_for4_authored_hint:
        courseF_artist_for4_a: |-
          **Qual o menor número que você precisa?
          Qual é o maior número?
          De quanto é o aumento cada vez?**

          Essas são as questões que você precisa responder para preencher as lacunas no laço `para`.
      courseF_artist_for4_2018_authored_hint:
        courseF_artist_for4_a: |-
          **Qual o menor número que você precisa?
          Qual é o maior número?
          De quanto é o aumento cada vez?**

          Essas são as questões que você precisa responder para preencher as lacunas no laço `para`.
      courseF_artist_for_challenge1_authored_hint:
        courseF_artist_for_challenge1_a: A `largura da caneta` é 1. O primeiro quadrado
          tem lados de 50 pixels, e cada quadrado é 50 pixels mais largo do que o
          último.
        courseF_artist_for_challenge1_b: A opacidade no pincel é sempre `contador`/2.
        courseF_artist_for_challenge1_c: Depois de fazer cada quadrado, não se esqueça
          de pular pra trás, virar, pular novamente, então virar de volta!
        courseF_artist_for_challenge1_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge1_2018_authored_hint:
        courseF_artist_for_challenge1_a: A `largura da caneta` é 1. O primeiro quadrado
          tem lados de 50 pixels, e cada quadrado é 50 pixels mais largo do que o
          último.
        courseF_artist_for_challenge1_b: A opacidade no pincel é sempre `contador`/2.
        courseF_artist_for_challenge1_c: Depois de fazer cada quadrado, não se esqueça
          de pular pra trás, virar, pular novamente, então virar de volta!
        courseF_artist_for_challenge1_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_picker">
          <title name="COLOUR">#0000cd</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">350</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">50</title>
          </block>
          </value>
          <statement name="DO">
          <block type="alpha" inline="true" id="alpha">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">DIVIDE</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="jump" inline="true">
          <title name="DIR">jumpBackward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_for_challenge2_authored_hint:
        courseF_artist_for_challenge2_c: 'O `laço for` vai de 5 a 250 de 2 em 2. '
        courseF_artist_for_challenge2_a: A mudança de cor acontece usando o bloco
          `defina a cor com vermelho, verde, azul`. Vermelho é definido constante
          em 255, verde é sempre o valor do`contador`, e azul é sempre `255 - contador`.
        courseF_artist_for_challenge2_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_for_challenge2_2018_authored_hint:
        courseF_artist_for_challenge2_c: 'O `laço for` vai de 5 a 250 de 2 em 2. '
        courseF_artist_for_challenge2_a: A mudança de cor acontece usando o bloco
          `defina a cor com vermelho, verde, azul`. Vermelho é definido constante
          em 255, verde é sempre o valor do`contador`, e azul é sempre `255 - contador`.
        courseF_artist_for_challenge2_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="draw_width" inline="false">
          <value name="WIDTH">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <next>
          <block type="controls_for_counter" inline="true">
          <mutation counter="counter"></mutation>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">5</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">250</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_colour" inline="true" id="draw-color">
          <value name="COLOUR">
          <block type="colour_rgb" inline="false">
          <value name="RED">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="GREEN">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <value name="BLUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="math_number">
          <title name="NUM">255</title>
          </block>
          </value>
          <value name="B">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">80</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>

          ![](https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png)
      courseF_artist_fwp_challenge2_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Esta é uma série de octógonos com lados
          que são de comprimento do ''contador'' em pixels. '
        courseF_artist_fwp_challenge1_c: 'Cada octógono é chamado de dentro de um
          laço ''for'' que vai de 200 até 2 por 2. '
        courseF_artist_fwp_challenge1_d: 'Não esqueça de virar 22,5 graus no final
          de cada iteração. '
        courseF_artist_fwp_challenge1_e: Tanto a cor de cada octógono como a largura
          da caneta são controladas pela variável 'contador'.
        courseF_artist_fwp_challenge1_f: |-
          **Solução:**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_fwp_challenge2_2018_authored_hint:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif)"
        courseF_artist_fwp_challenge1_b: 'Esta é uma série de octógonos com lados
          que são de comprimento do ''contador'' em pixels. '
        courseF_artist_fwp_challenge1_c: 'Cada octógono é chamado de dentro de um
          laço ''for'' que vai de 200 até 2 por 2. '
        courseF_artist_fwp_challenge1_d: 'Não esqueça de virar 22,5 graus no final
          de cada iteração. '
        courseF_artist_fwp_challenge1_e: Tanto a cor de cada octógono como a largura
          da caneta são controladas pela variável 'contador'.
        courseF_artist_fwp_challenge1_f: |-
          **Solução:**

          ![Solution Blocks](https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png)
      courseF_artist_ramp10_authored_hint:
        courseF_artist_ramp10_c: |-
          Você irá desenhar, ao todo, seis triângulos:

          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_ramp10_2018_authored_hint:
        courseF_artist_ramp10_c: |-
          Você irá desenhar, ao todo, seis triângulos:

          ![](https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif)
      courseF_artist_variables_challenge1_authored_hint:
        courseF_artist_variables_challenge1_e: |-
          Aqui está a solução.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1_2018_authored_hint:
        courseF_artist_variables_challenge1_e: |-
          Aqui está a solução.

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">18</title>
          </block>
          </value>
          <statement name="DO">
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnLeft</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          <next>
          <block type="draw_move" inline="true">
          <title name="DIR">moveForward</title>
          <value name="VALUE">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <next>
          <block type="variables_set" inline="false">
          <title name="VAR">length</title>
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="variables_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          </block>
          </value>
          <next>
          <block type="draw_turn" inline="true">
          <title name="DIR">turnRight</title>
          <value name="VALUE">
          <block type="math_number">
          <title name="NUM">90</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_artist_variables_challenge1a_authored_hint:
        courseF_artist_variables_challenge1_a: 'Variáveis são úteis porque você pode
          adicionar à elas cada vez por um laço. '
        courseF_artist_variables_challenge1_b: Este enigma contém um laço que cria
          o polígono, um laço que repete o polígono 'sides' vezes, então outro laço
          que faz tudo isto de novo após adicionar 5 à 'sides'.
        courseF_artist_variables_challenge1_c: Usando uma variável para 'sides' e
          uma para 'length' torna o código mais limpo porque você pode repetir o mesmo
          código múltiplas vezes, ao invés de criar uma nova cópia para cada conjunto
          de números.
        courseF_artist_variables_challenge1_d: |-
          **Solução:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_authored_hint:
        courseF_artist_variables_challenge2_d: |-
          **Solução:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_artist_variables_challenge2_2018_authored_hint:
        courseF_artist_variables_challenge2_d: |-
          **Solução:**

          ![Solution](https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png)
      courseF_bee_conditionals8_authored_hint:
        courseF_bee_conditionals8_a: "** Lembre-se: ** este quebra-cabeça muda cada
          vez que ele é executado.    Você vai querer usar um bloco condicional (`se`
          ou  `se/senão`) para resolver o desafio."
      courseF_bee_conditionals8_2018_authored_hint:
        courseF_bee_conditionals8_a: "** Lembre-se: ** este quebra-cabeça muda cada
          vez que ele é executado.    Você vai querer usar um bloco condicional (`se`
          ou  `se/senão`) para resolver o desafio."
      courseF_bee_for_challenge2_authored_hint:
        courseF_bee_for_challenge2_a: "Dê uma olhada nesta opção de movimento:  \n\n!
          [a] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Tente usar dois laços ''para'': um para subir
          e pegar o néctar e o outro para descer e fazer mel.'
        courseF_bee_for_challenge2_c: "Observe que um laço 'para' precisa de várias
          execuções de seu interior que se repetem o número de vezes do 'contador'
          para seguir o padrão da escada. \n\nO outro laço 'para' só precisa de uma
          execução para fazer do 'contador' a quantidade de mel."
        courseF_bee_for_challenge2_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge2_2018_authored_hint:
        courseF_bee_for_challenge2_a: "Dê uma olhada nesta opção de movimento:  \n\n!
          [a] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Tente usar dois laços ''para'': um para subir
          e pegar o néctar e o outro para descer e fazer mel.'
        courseF_bee_for_challenge2_c: "Observe que um laço 'para' precisa de várias
          execuções de seu interior que se repetem o número de vezes do 'contador'
          para seguir o padrão da escada. \n\nO outro laço 'para' só precisa de uma
          execução para fazer do 'contador' a quantidade de mel."
        courseF_bee_for_challenge2_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_for_challenge3_authored_hint:
        courseF_bee_for_challenge2_a: "Dê uma olhada nesta opção de movimento:  \n\n!
          [a] (https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png)"
        courseF_bee_for_challenge2_b: 'Tente usar dois laços ''para'': um para subir
          e pegar o néctar e o outro para descer e fazer mel.'
        courseF_bee_for_challenge2_c: "Observe que um laço 'para' precisa de várias
          execuções de seu interior que se repetem o número de vezes do 'contador'
          para seguir o padrão da escada. \n\nO outro laço 'para' só precisa de uma
          execução para fazer do 'contador' a quantidade de mel."
        courseF_bee_for_challenge2_d: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward"/>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <value name="TO">
          <block type="math_number">
          <title name="NUM">10</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="maze_moveForward">
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </xml>
      courseF_bee_functions6_authored_hint:
        courseF_bee_functions6_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!\n
          ! [a] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseF_bee_functions6_2018_authored_hint:
        courseF_bee_functions6_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!\n
          ! [a] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      courseF_bee_functions8a_authored_hint:
        courseF_bee_functions8a_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
      courseF_bee_functions8a_2018_authored_hint:
        courseF_bee_functions8a_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
      courseF_bee_functionsPre7_authored_hint:
        courseF_bee_functions7_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
      courseF_bee_functionsPre7_2018_authored_hint:
        courseF_bee_functions7_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
      courseF_bee_functions_challenge2_authored_hint:
        courseF_bee_functions_challenge2_b: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_2018_authored_hint:
        courseF_bee_functions_challenge2_b: |-
          **Solução:**

          <xml>
          <block type="when_run" deletable="false" movable="false">
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">4</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="maze_if">
          <title name="DIR">isPathRight</title>
          <statement name="DO">
          <block type="procedures_callnoreturn" id="function">
          <mutation name="move and check"></mutation>
          </block>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </next>
          </block>
          <block type="procedures_defnoreturn" editable="false">
          <mutation></mutation>
          <title name="NAME">move and check</title>
          <statement name="STACK">
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="math_number">
          <title name="NUM">2</title>
          </block>
          </value>
          <statement name="DO">
          <block type="procedures_callnoreturn">
          <mutation name="check nectar or honey"></mutation>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          <next>
          <block type="maze_untilBlocked">
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </statement>
          </block>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation></mutation>
          <title name="NAME">check nectar or honey</title>
          <statement name="STACK">
          <block type="bee_whileNectarAmount">
          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          <next>
          <block type="bee_whileNectarAmount">
          <title name="ARG1">honeyAvailable</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>
          <statement name="DO">
          <block type="maze_honey"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          </block>
          </xml>
      courseF_bee_functions_challenge2_recursion_authored_hint:
        courseF_bee_functions8a_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
      courseF_bee_fwp_challenge1_authored_hint:
        courseF_bee_fwp_challenge1_e: |
          **Aqui está a solução:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_bee_fwp_challenge1_2018_authored_hint:
        courseF_bee_fwp_challenge1_e: |
          **Aqui está a solução:**

          <xml>
          <block type="procedures_defnoreturn" editable="false" usercreated="true">
          <mutation>
          <arg name="length"/>
          </mutation>
          <title name="NAME">pick row</title>
          <statement name="STACK">
          <block type="maze_turn">
          <title name="DIR">turnLeft</title>
          <next>
          <block type="controls_for" inline="true">
          <title name="VAR">counter</title>
          <value name="FROM">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <value name="TO">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <value name="BY">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveForward</title>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="variables_get">
          <title name="VAR">counter</title>
          </block>
          </value>
          <statement name="DO">
          <block type="harvester_corn"/>
          </statement>
          </block>
          </next>
          </block>
          </statement>
          <next>
          <block type="controls_repeat_ext" inline="true">
          <value name="TIMES">
          <block type="parameters_get">
          <title name="VAR">length</title>
          </block>
          </value>
          <statement name="DO">
          <block type="maze_move">
          <title name="DIR">moveBackward</title>
          </block>
          </statement>
          <next>
          <block type="maze_turn">
          <title name="DIR">turnRight</title>
          </block>
          </next>
          </block>
          </next>
          </block>
          </next>
          </block>
          </statement>
          </block></xml>
      courseF_maze_ramp5_authored_hint:
        courseF_maze_ramp5_a: Tente usar o botão "Passo" para executar o seu código
          linha a linha. Você consegue descobrir o que você precisa fazer em seguida?
      courseF_maze_ramp5_2018_authored_hint:
        courseF_maze_ramp5_a: Tente usar o botão "Passo" para executar o seu código
          linha a linha. Você consegue descobrir o que você precisa fazer em seguida?
      courseF_maze_ramp6_authored_hint:
        courseF_maze_ramp6_a: Existem duas maneiras de resolver este quebra-cabeças!
        courseF_maze_ramp6_c: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer, mesmo se você achar que
          ainda não resolveu o quebra-cabeça.
      courseF_maze_ramp6_2018_authored_hint:
        courseF_maze_ramp6_a: Existem duas maneiras de resolver este quebra-cabeças!
        courseF_maze_ramp6_c: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer, mesmo se você achar que
          ainda não resolveu o quebra-cabeça.
      courseF_maze_ramp7_authored_hint:
        courseF_maze_ramp7_c: Não tenha medo de cometer um erro! Tente adicionar blocos
          e executar o código para ver o que vai acontecer, mesmo se você achar que
          ainda não resolveu o quebra-cabeça.
      courseF_playlab_variables_challenge2_authored_hint:
        courseF_playlab_variables_challenge2_c: |-
          **Solução:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      courseF_playlab_variables_challenge2_2018_authored_hint:
        courseF_playlab_variables_challenge2_c: |-
          **Solução:**

          <xml>
          <block type="studio_whenArrow">
          <title name="VALUE">up</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">1</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">down</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">4</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">left</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">8</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenArrow">
          <title name="VALUE">right</title>
          <next>
          <block type="studio_moveDistanceParams" inline="true">
          <title name="SPRITE">0</title>
          <title name="DIR">2</title>
          <value name="DISTANCE">
          <block type="math_number">
          <title name="NUM">25</title>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">1</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">0</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">ADD</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">3</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          <block type="studio_whenSpriteCollided">
          <title name="SPRITE1">1</title>
          <title name="SPRITE2">2</title>
          <next>
          <block type="studio_setScore" inline="false">
          <value name="VALUE">
          <block type="math_arithmetic" inline="true">
          <title name="OP">MINUS</title>
          <value name="A">
          <block type="studio_getScore"/>
          </value>
          <value name="B">
          <block type="math_number">
          <title name="NUM">1</title>
          </block>
          </value>
          </block>
          </value>
          </block>
          </next>
          </block>
          </xml>
      coursea_maze_ramp1_2018_authored_hint:
        courseC_maze_programming1_a: Se o pássaro não estiver chegando ao porco, certifique-se
          de que ambos os blocos foram completamente conectados, e então clique em
          "Executar" de novo.
        courseC_maze_programming1_b: Não tenha medo de errar! Tente algo, e se não
          funcionar, tente algo diferente!
      coursef_maze_ramp3_authored_hint:
        courseF_maze_ramp3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      coursef_maze_ramp3_2018_authored_hint:
        courseF_maze_ramp3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      drawings!_authored_hint:
        triangle_geometry_hint: 'Lembre-se: um triângulo equilátero tem 3 lados com
          60 graus de de angulo entre eles!'
        repeat_pointer: You tem que desenhar um lado e virar 3 vezes... qual bloco
          você pode usar para executar as mesmas instruções varias vezes?
        repeat_bottom_out: Use um bloco `repetir 3 vezes`!
      grade1_adventurer_loops10_authored_hint:
        grade1_adventurer_loops10_a: Você vai precisar de 3 repetições `repetir` para
          resolver esse enigma.
      grade1_adventurer_loops3_authored_hint:
        grade1_adventurer_loops3_a: Alguma coisa não está certa? Tente usar o botão
          de passo para entender onde as coisas deram errado.
      grade1_adventurer_loops4_authored_hint:
        grade1_adventurer_loops4_a: Tente usar mais de uma repetição para finalizar
          o trabalho.
      grade1_adventurer_loops7_challenge_authored_hint:
        grade1_adventurer_loops7_challenge_a: 'Se você não consegue descobrir onde
          colocar os laços de repetições, tente escrever seu código passo a passo
          e procurar por um padrão. '
        grade1_adventurer_loops7_challenge_b: O seu código parece um pouco longo?
          você pode torna-lo menor movendo duas das suas repetições `repeat` para
          dentro de outra repetição.
      grade1_adventurer_loops9_authored_hint:
        grade1_adventurer_loops9_a: 'Isso parece muito difícil? quebre o problema
          em 4 problemas menores para fazer ficar mais facil.  '
      grade1_artist_loops6_authored_hint:
        grade1_artist_loops6_b: Observe que cada repetição faz um padrão de escada
          que viaja em uma direção diferente. ! [a] (https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
      grade1_artist_loops7a_authored_hint:
        artistLoopsK9_b: Observe que cada repetição faz um padrão de escada que viaja
          em uma direção diferente. ! [a] (https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif)
      grade1_maze_sequence10_authored_hint:
        grade1_maze_sequence10_a: Se você estiver tendo problemas, tente escrever
          os passos em um pedaço de papel primeiro.
      grade1_maze_sequence6_authored_hint:
        K2.0_sequence_6_a: Há 1 bloco que você precisa adicionar para mover o pássaro
          até o porco.
      grade1_maze_sequence7_authored_hint:
        grade1_maze_sequence7a: Se você está preso, tente addicionar um bloco de cada
          vez, até você solucionar o enigma.
      grade1_maze_sequence8_authored_hint:
        grade1_maze_sequence8_a: Preso? Tente traçar o caminho do pássaro com o seu
          dedo.
      grade1_maze_sequence9_authored_hint:
        grade1_maze_sequence9_a: Se você estiver tendo problemas, tente escrever os
          passos em um pedaço de papel primeiro.
      grade1_maze_sequenceA_authored_hint:
        grade1_maze_sequence10_a: Se você estiver tendo problemas, tente escrever
          os passos em um pedaço de papel primeiro.
      grade1_maze_sequenceB_authored_hint:
        grade1_maze_sequenceB_a: Se você estiver tendo problemas, tente escrever os
          passos em um pedaço de papel primeiro.
      grade1_maze_sequenceC_authored_hint:
        grade1_maze_sequenceC_a: Se você estiver tendo problemas, tente escrever os
          passos em um pedaço de papel primeiro.
      grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint:
        courseC_maze_programming3_a: "! [] (https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          \nPara excluir um bloco de no meio do seu código, arraste todos os blocos
          abaixo dele para a direita solte-os na área de trabalho por um tempo.\n\nClique
          sobre o bloco que você deseja excluir e arraste-o de volta à caixa de ferramentas.
          \n\nFinalmente, coloque seus outros blocos no lugar onde eles pertencem.\n"
      grade2_CaringForNewPet_4_authored_hint:
        2-3_Maze_6_a: Existem duas maneiras de resolver este quebra-cabeças!
      grade2_MakeDogTag_1_authored_hint:
        2-3_Artist_1_new_a: Se você usar o bloco para me fazer `avançar por 100 pixels`,
          eu desenharei uma linha automaticamente.
        2-3_Artist_1_new_b: Você está tendo problemas para virar a esquina? Use o
          bloco 'virar à direita 90 graus'.
      grade2_MakeDogTag_9_authored_hint:
        2-3_Artist_Loops_New_11_b: Sua próxima vez deve ir no * * fim * * do código,
          dentro do loop.
      grade2_PuppyLoops_10_authored_hint:
        2-3_Artist_Debugging_8_a: |-
          Quantas vezes minha forma foi repetida?
          Quantas vezes a forma deveria ter sido repetida?
          Onde você pode mudar isso no programa?
      grade2_PuppyLoops_6_authored_hint:
        2-3_Maze_16_a: Se o padrão está difícil de ser identificado, tente fazer toda
          a programação primeiro, veja quais partes se repetem várias vezes e então
          as substitua por um loop.
        2-3_Maze_16_b: Para colocar muitos blocos dentro de bloco `repita`, apenas
          arraste um repita para fora na área de Blocos, em seguida, arraste todos
          os blocos do programa inicial dentro dele.    Conecte tudo de volta no bloco
          `quando executar` e está pronto para executar!
      grade2_PuppyLoops_7_authored_hint:
        2-3_Maze_Loops_17_a: Se o padrão está difícil de ser identificado, tente fazer
          toda a programação primeiro, veja quais partes se repetem várias vezes e
          então as substitua por um loop.
        2-3_Maze_Loops_17_b: O código inicial foi excluído?  Clique em `Começar do
          Início` para ele voltar!
      grade2_PuppyLoops_8_authored_hint:
        2-3_Artist_Debugging_2_a: 'Dica: Cada bigode tem comprimento de 75 pixels.'
      grade2_PuppyLoops_9_authored_hint:
        2-3_Artist_Debugging_7_a: O que acontece se você tiver o artista mover-se
          ou saltar para trás depois que ele desenha a primeira linha?
      grade2_collector_2_authored_hint:
        hint1: Você pode usar quatro blocos `avançar` ou usar o bloco `repetir 4 vezes`
          para fazer o seu programa mais curto.
      grade2_puppy_loops6_authored_hint:
        2-3_Maze_16_a: Se o padrão está difícil de ser identificado, tente fazer toda
          a programação primeiro, veja quais partes se repetem várias vezes e então
          as substitua por um loop.
        2-3_Maze_16_b: Para colocar muitos blocos dentro de bloco `repita`, apenas
          arraste um repita para fora na área de Blocos, em seguida, arraste todos
          os blocos do programa inicial dentro dele.    Conecte tudo de volta no bloco
          `quando executar` e está pronto para executar!
      grade2_puppy_loops7_authored_hint:
        2-3_Maze_Loops_17_a: Se o padrão está difícil de ser identificado, tente fazer
          toda a programação primeiro, veja quais partes se repetem várias vezes e
          então as substitua por um loop.
      grade3_ConditionalsElse_4_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      grade3_ConditionalsElse_5_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      grade3_ConditionalsElse_TeacherIDo_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      grade3_Conditionals_10 BAD_authored_hint:
        4-5_Bee_Nested_Loops_Rows_a: Tente tratar esse quebra-cabeça como um longo
          retângulo onde a abelha precisa avançar e, em seguida, virar à esquerda
          várias vezes para completar o caminho.
      grade3_Conditionals_11_authored_hint:
        2-3_Bee_Conditionals_14_a: Está tendo dificuldade em descobrir como abaixar
          os blocos?  Tente tratar a flor vermelha exatamente como uma flor roxa!
        2-3_Bee_Conditionals_14_b: Se as flores vermelhas fossem roxas, você conseguiria
          reduzir o código usando mais um ciclo 'repeat'?
      grade3_Conditionals_12_authored_hint:
        2-3_Bee_Conditionals_15_a: 'Lembre-se: Flores roxas só tem 0 ou 1 néctar e
          eles podem mudar cada vez que você executar o programa.'
      grade3_Conditionals_2_authored_hint:
        2-3_Bee_Conditionals_3_a: O código ficará mais curto se você usar um loop
          cada vez que andar para frente, outro loop para pegar o néctar e outro para
          fazer o mel.
      grade3_Conditionals_4_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Lembre-se: Flores roxas mudam entre 0 e 1 néctar
          quando você executa o seu programa!'
      grade3_Conditionals_TeacherIDo_authored_hint:
        2-3_Bee_Conditionals_6_a: 'Lembre-se: Flores roxas mudam entre 0 e 1 néctar
          quando você executa o seu programa!'
      grade3_Debugging_1_authored_hint:
        2-3_Bee_Debugging_1_a: Após encontrar e corrigir o bloco incorreto, você consegue
          ver quais padrões poderiam ser simplificados usando um ciclo 'repeat'?
      grade3_Debugging_TeacherIDo_authored_hint:
        2-3_Bee_Debugging_4_a: Há algum lugar onde a abelha faz algo que não está
          faz sentido? O que acontece se você mudar esse bloco que não está fazendo
          sentido?
      grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Você deve acabar com cinco blocos dentro do seu loop.
      grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Se você ainda não sabe quais blocos vai colocar dentro
          do "repeat", tente ir programando passo a passo e depois procure por um
          padrão que se repete.
      grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Se você ainda não sabe o que colocar dentro do loop "repeat",
          tente ir colocando os blocos um a um e depois procure por um padrão que
          se repete.
        2-3_Bee_Loops_6_b: Ao terminar, você deve ter 6 blocos dentro do seu loop
          "repeat".
      grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Você vai precisar de dois loops 'Repetir' diferentes,
          um após o outro.
      grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: A primeira ação será uma virada, ao invés de um movimento.
        2-3_Bee_Loops_7_b: 'Se você não consegue identificar o loop iniciantemente,
          tente ir programando e depois procure por um padrão que se repete.  '
      grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: A primeira ação será uma virada, ao invés de um movimento.
        2-3_Bee_Loops_4A_b: A última instrução do programa pode ser terminada ao se
          escrever "code"  no final do programa, fora do loop.
        2-3_Bee_Loops_4A_c: Se você ainda não consegue visualizar os loops, tente
          programar de forma linear primeiro, e então, veja o que você pode combinar
          em um ciclo 'repeat' no final.
      grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Ao terminar, você deve ter cinco blocos dentro do seu loop.
      grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Você deve ter 6 blocos dentro do seu loop.
      grade3_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      grade3_maze_loops2_authored_hint:
        grade3_maze_loops2_b: Se o padrão está difícil de ser identificado, tente
          fazer toda a programação primeiro, veja quais partes se repetem várias vezes
          e então as substitua por um loop.
      grade3_maze_loops5_authored_hint:
        2-3_Maze_Loops_21_a: Se você está tendo dificuldades para encontrar o padrão
          de degrau, tente cobrir os caminhos bloqueados com o dedo.
      grade4_arist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este desenho vai se repetir 10 vezes para cobrir os 360 graus.

          **360 / 10 = ?**
      grade4_arist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: Você vai estar repetindo essa forma 6 vezes para cobrir
          os 360 graus
      grade4_arist_nested_loop_triangles3_authored_hint:
        4-5_Nested_Loops_6_a: |-
          Não esqueça de fazer uma virada depois da sua repetição interna.

          você vai estar repetindo 6 triangulos sobre 360 graus.

          **360 / 6 = ?**
      grade4_arist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_artist_functions1_authored_hint:
        2-3_Artist_Functions_1_a: Cada um dos quadrados tem 100 de pixels de lado,
          o que significa que você terá que movê-lo para frente 175 pixels antes de
          desenhar o seu segundo quadrado.
        2-3_Artist_Functions_1_b: É okey desenhar linhas sobrepostas para fazer seus
          óculos.
      grade4_artist_functions2_authored_hint:
        2-3_Artist_Functions_2_a: "Seu programa deve: \n-Usar função\n- Mover para
          frente 100 + 75 pixels\n- Usar função"
      grade4_artist_functions_challenge_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tem 40 pixels de lado.
        Course_4_SCF_1_b: Há um salto de 120 pixels entre cada hexágono em cada linha
          horizontal.
        Course_4_SCF_1_c: "Antes de você desenhar a segunda linha de hexágonos, você
          precisa virar à direita 60 graus e pular adiante 40 pixels. \n\nAssim que
          você estiver na localização vertical correta, você tem que virar seu artista
          novamente para trás e pular para trás 320 pixels."
        Course_4_SCF_1_d: "Antes de desenhar a terceira linha de hexágonos, você precisa
          virar à direita em 60 graus e avançar 40 pixels.\n\nUma vez que você esteja
          no local vertical correto, você tem que virar seu artista de volta e retroceder
          440 pixels (120 pixels mais distante do que a função `deslocar para baixo
          / para frente`. "
      grade4_artist_functions_challenge2_authored_hint:
        Course_4_SCF_1_a: Cada hexágono tem 40 pixels de lado.
        Course_4_SCF_1_b: Há um salto de 120 pixels entre cada hexágono em cada linha
          horizontal.
        Course_4_SCF_1_c: "Antes de você desenhar a segunda linha de hexágonos, você
          precisa virar à direita 60 graus e pular adiante 40 pixels. \n\nAssim que
          você estiver na localização vertical correta, você tem que virar seu artista
          novamente para trás e pular para trás 320 pixels."
        Course_4_SCF_1_d: "Antes de desenhar a terceira linha de hexágonos, você precisa
          virar à direita em 60 graus e avançar 40 pixels.\n\nUma vez que você esteja
          no local vertical correto, você tem que virar seu artista de volta e retroceder
          440 pixels (120 pixels mais distante do que a função `deslocar para baixo
          / para frente`. "
      grade4_artist_nestedLoops_challenge2_authored_hint:
        Course_4_Artist_11_a: 'O metade-hexágono tem um ** comprimento de 30 ** e
          gira para a direita em ** 60 graus **.  '
        Course_4_Artist_11_b: 'Os 2/3 do triângulo tem um ** comprimento de 80 **
          e gira para a direita em ** 120 graus **. '
      grade4_artist_nested_loop_polygons1_authored_hint:
        4-5_Nested_Loops_7_a: |-
          Este desenho vai se repetir 10 vezes para cobrir os 360 graus.

          **360 / 10 = ?**
      grade4_artist_nested_loop_polygons2_authored_hint:
        4-5_Nested_Loops_8_a: Você vai estar repetindo essa forma 6 vezes para cobrir
          os 360 graus
      grade4_artist_nested_loop_triangles6_authored_hint:
        4-5_Nested_Loops_12_a: "**360 / 36 = ?**"
      grade4_bee_conditionals_quantum4_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      grade4_bee_conditionals_quantum5_authored_hint:
        remember_quantum: "** Lembre-se: ** este quebra-cabeça muda cada vez que ele
          é executado.    Você vai querer usar um bloco condicional (`se` ou  `se/senão`)
          para resolver o desafio."
      grade4_bee_functions7_authored_hint:
        2-3_Bee_Functions_8_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!\n
          ! [a] (https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)"
      grade4_bee_functions8_authored_hint:
        2-3_Bee_Functions_8_a: "Se o quebra-cabeça parece desafiador, tente construir
          sua função aos poucos.\nAdicione alguns blocos e os experimente. Adicione
          mais alguns e experimente novamente.  \nEm breve, você terá sua função!"
        2-3_Bee_Functions_8_b: "Lembre-se de construir o seu código dentro do bloco
          de função verde. \n! [a] (https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)"
      grade4_review_artist1_authored_hint:
        2-3_Artist_1_new_a: Se você usar o bloco para me fazer `avançar por 100 pixels`,
          eu desenharei uma linha automaticamente.
        2-3_Artist_1_new_b: Você está tendo problemas para virar a esquina? Use o
          bloco 'virar à direita 90 graus'.
      grade4_review_artist2_authored_hint:
        2-3_Artist_6_a: 'Para fazer esses pequenos ângulos, você deve virar *um pouco
          mais* a cada vez do que você fez com o quadrado.   '
        2-3_Artist_6_b: Uma vez que eu já estou olhando para a direita, é mais fácil
          começar indo em frente e depois ir virando à esquerda para criar o triângulo.
        2-3_Artist_6_c: Cada lado do triângulo é do mesmo comprimento de cada lado
          do quadrado... 100 pixels!
      grade4_review_bee1_authored_hint:
        2-3_Bee_Loops_3B_a: Você vai precisar de dois loops 'Repetir' diferentes,
          um após o outro.
      grade4_review_bee2_authored_hint:
        2-3_Bee_Loops_3_a: Você deve ter 6 blocos dentro do seu loop.
      grade4_review_bee3_authored_hint:
        2-3_Bee_Loops_4_a: Você deve acabar com cinco blocos dentro do seu loop.
      grade5_artist_binary10_authored_hint:
        Course_4_Artist_Binary_Free_Play_2b_a: Esse código usa duas `repetições para`.
          Uma conta de 1 a 8, a outra conta de 8 a 1.
        Course_4_Artist_Binary_Free_Play_2b_b: Cada `repetição para` tem três repetições.  A
          primeira desenha o conjunto mais à esquerda de 1s, A segunda desenha os
          0s no meio e a terceira desenha os 1s à direita.
        Course_4_Artist_Binary_Free_Play_2b_c: Em cada repetição você precisa de um
          `contador` para uns (1s) e `16-(2 x contador)` para zeros (0s).
      grade5_artist_for_loops10_authored_hint:
        Course_4_Artist_For_Loops_Challenge_a: O maior polígono tem 19 lados.
        Course_4_Artist_For_Loops_Challenge_b: Cada polígono está incompleto, com
          um lado a menos do que deveria ter.
      grade5_artist_for_loops4_authored_hint:
        Course_4_Artist_For_Loops_4_a: |-
          **Qual o menor número que você precisa?
          Qual é o maior número?
          De quanto é o aumento cada vez?**

          Essas são as questões que você precisa responder para preencher as lacunas no laço `para`.
      grade5_artist_for_loops8_authored_hint:
        Course_4_Artist_For_Loops_11_a: "O ângulo de curva vai mudar com cada forma!\n\nUse
          o bloco de matemática para inserir 360 dividido pelo número de lados que
          a forma tem, para acertar o ângulo. "
      grade5_artist_for_loops9_authored_hint:
        Course_4_Artist_For_Loops_11a_a: '360 dividido pelo número de lados de que
          uma forma tem é o número de graus que você precisa virar. '
        Course_4_Artist_For_Loops_11a_b: 'Cada vez, você precisará Avançar por 10
          vezes o comprimento do atual número de lados. '
      grade5_artist_for_loopsfreeplay11_authored_hint:
        Course_4_Artist_For_Loops_inspire_a: A base deste código é a mesma que a solução
          para o desafio do quebra-cabeça anterior... com algumas mudanças.
        Course_4_Artist_For_Loops_inspire_b: Tente um laço `para` que vá de 3 a 10
          com o incremento de 1.
        Course_4_Artist_For_Loops_inspire_c: Existem duas iterações do mesmo laço
          de repetição dentro do laço `para`, mas a segunda repetição vai na direção
          contrária.
      grade5_artist_functionparameters10_authored_hint:
        brush_width: Nós escolhemos a largura do pincel para 1, e depois a cor azul
          antes de fazer qualquer outra coisa.
        double_loop: Tente colocar uma 'repetição para' dentro de uma repetição 'repetir'.
        specifics: |-
          A `repetição para` é executada entre 3 e 17 para cada uma das seis "pétalas" antes de passar para criar a próxima, desenhando formas com apenas um número ímpar de lados.

          O bloco `escolher alfa` usa divisão para enfraquecer a cor quando o contador aumenta.
        after: Quando você acabar com cada "pétala", certifique-se de 'Avançar' 20
          pixels antes de você fazer uma rotação de 60 graus.
      grade5_artist_variables_freeplay10_authored_hint:
        Course_4_Artist_Vars_8_a: Se você dividir seu comprimento inicial pelo número
          de lados, o comprimento de cada lado ficará menor a medida que o número
          de lados fica maior.
      grade5_artist_variables_freeplay15_authored_hint:
        Course_4_Artist_Inspire_a: Depois que você completar um quadrado, tente pular
          metade do seu comprimento para frente antes de virar e fazer outro.
        Course_4_Artist_Inspire_b: Cada quadrado e pulo é repetido quatro vezes (usando
          um giro para a esquerda entre eles) para criar uma unidade completa semelhante
          a um cata-vento.
        Course_4_Artist_Inspire_c: Cada cata-vento também é repetido quatro vezes,
          com um giro para a direita de **360/lados**.
      grade5_artist_variables_octagons13_authored_hint:
        Course_4_Artist_Vars_13_a: Você precisa de dois laços de repetição (um dentro
          do outro) ambos repetindo `quantidade de lados` vezes.
        Course_4_Artist_Vars_13_b: "O laço de repetição interior desenha um octógono
          (virando para a esquerda).   \n\nPosteriormente, você precisa mover para
          frente e virar para a direita apenas dentro do laço exterior."
        Course_4_Artist_Vars_13_c: Para ajustar a forma para que permaneça com o mesmo
          tamanho quando o número de lados muda, use o bloco de matemática para dividir
          o comprimento em pixels pelo número de lados.
      grade5_artist_variables_square7_authored_hint:
        Course_4_Artist_Vars_6_a: Para desenhar um polígono regular, vire **360/lados**
          cada vez.
      grade5_artist_variables_triangles1_authored_hint:
        grade5_artist_variables_triangles1_a: Para fazer um ângulo interno de 60 graus
          nesse triângulo, se lembre de virar o artista 120 graus.
        grade5_artist_variables_triangles1_b: Use a repetição `repetir` para encurtar
          o seu código.
        grade5_artist_variables_triangles1_c: Dentro da sua repetição, você vai querer
          avançar 50 pixels, então virar a esquerda 120 graus.
      grade5_artist_variables_triangles1_2018_authored_hint:
        grade5_artist_variables_triangles1_a: Para fazer um ângulo interno de 60 graus
          nesse triângulo, se lembre de virar o artista 120 graus.
        grade5_artist_variables_triangles1_b: Use a repetição `repetir` para encurtar
          o seu código.
        grade5_artist_variables_triangles1_c: Dentro da sua repetição, você vai querer
          avançar 50 pixels, então virar a esquerda 120 graus.
      grade5_playlab_variables2_authored_hint:
        Course_4_Play_Lab_Vars_2_a: Certifique-se de defininir o número para `velocidade_do_cachorro`
          como sendo maior do que o de `velocidade_do_gato`.
      gradeK_sequence_4_authored_hint:
        gradeK_sequence_4_a: Tente escrever os passos no papel para encontrar uma
          solução!
      gradek_adventurer_loops3_authored_hint:
        gradek_adventurer_loops3_a: Para mudar quão longe a aventureira vai, mude
          o número de vezes que a repetição executa.
        gradek_adventurer_loops3_b: Não esqueça que a aventureira precisa de descer
          e coletar ouro depois que ela termina a repetição `repetir`!
      gradek_adventurer_loops4_authored_hint:
        gradek_adventurer_loops4_a: Se você não consegue descobrir a resposta imediatamente,
          tente usar um pedaço de papel para descobrir quais setas você vai precisar
          e procure por um padrão.
      gradek_adventurer_loops5_authored_hint:
        gradek_adventurer_loops5_a: Se você não consegue descobrir o que vem em seguida,
          tente rodar o código para ver onde Laurel vai estar ao final.
      gradek_adventurer_loops7_challenge_authored_hint:
        gradek_adventurer_loops7_challenge_a: O código parece realmente longo? tente
          colocar duas das suas repetições `repetir` dentro de outra repetição para
          assim encurta-lo bastante!
      gradek_artist_loops5_authored_hint:
        gradek_artist_loops5_a: Não consegue descobrir como fazer a colina? Tente
          brincar com os blocos um pouco para ver o que cada um desenha.
      gradek_artist_loops6_authored_hint:
        gradek_artist_loops6_a: Não consegue descobrir onde colocar o laço? Tente
          escrever o código passo-a-passo e procure um padrão.
      gradek_artist_loops7_authored_hint:
        gradek_artist_loops7_a: Tente rodar o código para ver o que foi escrito para
          você.
        gradek_artist_loops7_b: Como você colocaria o código dado a você em um laço?
        gradek_artist_loops7_c: |-
          O que esse código faz?
          O que ele deveria fazer?
          O que isso te diz?
      iceage_hello1_authored_hint:
        iceage_hello1_a: Você precisa apenas de adicionar um bloco para resolver este
          enigma. Arraste o bloco `dizer` da barra de ferramentas e conecte-o ao bloco
          de evento `quando executar` que já está na área de trabalho. Depois, digite
          "Olá!" dentro dele.
      iceage_hello1_2018_authored_hint:
        iceage_hello1_a: Você precisa apenas de adicionar um bloco para resolver este
          enigma. Arraste o bloco `dizer` da barra de ferramentas e conecte-o ao bloco
          de evento `quando executar` que já está na área de trabalho. Depois, digite
          "Olá!" dentro dele.
      level 'grade3_Loops_10_authored_hint:
        2-3_Bee_Loops_4_a: Você deve acabar com cinco blocos dentro do seu loop.
      level 'grade3_Loops_11_authored_hint:
        2-3_Bee_Loops_5_a: Se você ainda não sabe quais blocos vai colocar dentro
          do "repeat", tente ir programando passo a passo e depois procure por um
          padrão que se repete.
      level 'grade3_Loops_12_authored_hint:
        2-3_Bee_Loops_6_a: Se você ainda não sabe o que colocar dentro do loop "repeat",
          tente ir colocando os blocos um a um e depois procure por um padrão que
          se repete.
        2-3_Bee_Loops_6_b: Ao terminar, você deve ter 6 blocos dentro do seu loop
          "repeat".
      level 'grade3_Loops_4_authored_hint:
        2-3_Bee_Loops_3B_a: Você vai precisar de dois loops 'Repetir' diferentes,
          um após o outro.
      level 'grade3_Loops_5_authored_hint:
        2-3_Bee_Loops_7_a: A primeira ação será uma virada, ao invés de um movimento.
        2-3_Bee_Loops_7_b: 'Se você não consegue identificar o loop iniciantemente,
          tente ir programando e depois procure por um padrão que se repete.  '
      level 'grade3_Loops_6_authored_hint:
        2-3_Bee_Loops_4A_a: A primeira ação será uma virada, ao invés de um movimento.
        2-3_Bee_Loops_4A_b: A última instrução do programa pode ser terminada ao se
          escrever "code"  no final do programa, fora do loop.
        2-3_Bee_Loops_4A_c: Se você ainda não consegue visualizar os loops, tente
          programar de forma linear primeiro, e então, veja o que você pode combinar
          em um ciclo 'repeat' no final.
      level 'grade3_Loops_8_authored_hint:
        2-3_Bee_Loops_2_a: Ao terminar, você deve ter cinco blocos dentro do seu loop.
      level 'grade3_Loops_9_authored_hint:
        2-3_Bee_Loops_3_a: Você deve ter 6 blocos dentro do seu loop.
