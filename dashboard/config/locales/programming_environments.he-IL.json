{
  "he-IL": {
    "data": {
      "programming_environments": {
        "weblab": {
          "name": "מעבדת האתרים"
        },
        "gamelab": {
          "name": "מעבדת המשחקים",
          "categories": {
            "game_lab": {
              "name": "מעבדת המשחקים",
              "expressions": {
                "mouseIsOver": {
                  "palette_params": {
                    "sprite": {
                      "type": "ספרייט"
                    }
                  }
                },
                "mousePressedOver": {
                  "palette_params": {
                    "sprite": {
                      "type": "ספרייט"
                    }
                  }
                },
                "mouseWentDown": {
                  "examples": {
                    "Black and White": {
                      "name": "שחור לבן"
                    }
                  }
                },
                "playSound": {
                  "short_description": "מנגן קובץ שמע MP3 מתוך כתובת URL שצוינה."
                },
                "showMobileControls": {
                  "content": "משנה את הפקדים הניידים הנראים מתחת למרחב המשחק.",
                  "short_description": "משנה את הפקדים הניידים הנראים מתחת למרחב המשחק."
                }
              }
            },
            "sprites": {
              "name": "דמויות",
              "expressions": {
                "getSpeed": {
                  "examples": {
                    "Spiral": {
                      "name": "ספירלה"
                    }
                  }
                },
                "sprite.height": {
                  "return_value": "גובה ספרייט."
                },
                "sprite.width": {
                  "return_value": "רוחבו של ספרייט."
                }
              }
            },
            "groups": {
              "name": "קבוצות",
              "expressions": {
                "add": {
                  "palette_params": {
                    "sprite": {
                      "type": "ספרייט"
                    }
                  }
                },
                "contains": {
                  "palette_params": {
                    "sprite": {
                      "type": "ספרייט"
                    }
                  }
                },
                "remove": {
                  "palette_params": {
                    "sprite": {
                      "type": "ספרייט"
                    }
                  }
                },
                "setColorEach": {
                  "palette_params": {
                    "color": {
                      "type": "צבע"
                    }
                  }
                },
                "setTintEach": {
                  "palette_params": {
                    "color": {
                      "type": "צבע"
                    }
                  }
                }
              }
            },
            "drawing": {
              "name": "ציור",
              "expressions": {
                "shape": {
                  "examples": {
                    "Star": {
                      "name": "כוכב"
                    }
                  }
                }
              }
            },
            "control": {
              "expressions": {
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "description": "מספר אלפיות השנייה בין כל ביצוע של הפונקציה."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "description": "מספר אלפיות השנייה להמתין לפני ביצוע הפונקציה."
                    }
                  }
                }
              }
            },
            "math": {
              "name": "מתמטיקה",
              "expressions": {
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "description": "המספר המינימלי המוחזר"
                    },
                    "max": {
                      "description": "המספר המקסימלי המוחזר"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "description": "המספר המינימלי המוחזר"
                    },
                    "max": {
                      "description": "המספר המקסימלי המוחזר"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "משתנים",
              "expressions": {
                "assign_x": {
                  "short_description": "מקצה ערך למשתנה קיים. לדוגמא: x=0;"
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "המחרוזת לחיפוש."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "המחרוזת לחיפוש."
                    }
                  }
                },
                "length": {
                  "return_value": "אורכו של המחרוזת"
                }
              }
            },
            "functions": {
              "name": "פונקציות"
            }
          }
        },
        "applab": {
          "name": "מעבדת היישומים",
          "description": "מעבדת האפליקציות זו סביבת תכנות שבה תוכל לייצר אפליקציות פשוטות. תכנן אפליקציה, קודד אותה בעזרת בלוקים או JavaScript כדי לגרום לזה לעבוד, לאחר מכן שתף את האפליקציה בתוך שניות.",
          "categories": {
            "ui_controls": {
              "expressions": {
                "button": {
                  "short_description": "יוצר כפתור על המסך המציג את הטקסט שסופק והפניה על ידי מזהה נתון במיקום ברירת המחדל (0,0)."
                },
                "onEvent": {
                  "palette_params": {
                    "callback": {
                      "type": "פונקציה"
                    }
                  }
                },
                "playSound": {
                  "short_description": "מנגן קובץ שמע MP3 מתוך כתובת URL שצוינה."
                },
                "setProperty": {
                  "palette_params": {
                    "property": {
                      "description": "המאפיין לשנות."
                    }
                  },
                  "short_description": "מגדיר מאפיין לערך חדש עבור הרכיב שצוין."
                },
                "setScreen": {
                  "short_description": "מגדיר את המסך ל- ScreenID הנתון."
                },
                "showElement": {
                  "short_description": "מציג את הרכיב עם המזהה המסופק."
                },
                "textLabel": {
                  "short_description": "יוצר תווית טקסט על המסך המציג את הטקסט שסופק והפניה על ידי מזהה נתון במיקום ברירת המחדל (0,0)."
                }
              }
            },
            "canvas": {
              "expressions": {
                "circle": {
                  "palette_params": {
                    "radius": {
                      "description": "רדיוס המעגל, בפיקסלים."
                    }
                  }
                },
                "drawImage": {
                  "palette_params": {
                    "id": {
                      "description": "מיקום x בפיקסלים של הפינה השמאלית העליונה של התמונה לציור."
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים של הפינה השמאלית העליונה של התמונה לציור."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים של הפינה השמאלית העליונה של התמונה לצייר."
                    }
                  }
                },
                "getAlpha": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    }
                  },
                  "short_description": "החזרת כמות האלפא (אטימות) (הנעה בין 0 ל- 255) בצבע הפיקסל הממוקם במיקום הנתון x ו- y בנתוני התמונה הנתונים."
                },
                "getBlue": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    }
                  }
                },
                "getGreen": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    }
                  }
                },
                "getImageData": {
                  "palette_params": {
                    "x": {
                      "description": "מיקום x בפיקסלים כדי להתחיל את הלכידה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים כדי להתחיל את הלכידה."
                    },
                    "width": {
                      "description": "רוחב המלבן התוחם ללכידת נתוני התמונה."
                    },
                    "height": {
                      "description": "גובה המלבן התוחם ללכידת נתוני התמונה."
                    }
                  }
                },
                "getRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    }
                  }
                },
                "putImageData": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה כדי למקם את הנתונים על בד הציור."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה כדי למקם את הנתונים על בד הציור."
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "description": "מיקום x בפיקסלים של הפינה השמאלית העליונה של המלבן."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים של הפינה השמאלית העליונה של המלבן."
                    },
                    "width": {
                      "description": "הרוחב האופקי בפיקסלים של המלבן."
                    },
                    "height": {
                      "description": "הגובה האנכי בפיקסלים של המלבן."
                    }
                  }
                },
                "setAlpha": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "alphaValue": {
                      "description": "כמות האלפא (אטימות) (מ- 0 עד 255) להגדרה בפיקסל."
                    }
                  },
                  "short_description": "קובע את כמות האלפא (אטימות) (בטווח שבין 0 ל- 255) בצבע הפיקסל הממוקם במיקום x ו- y הנתון בנתוני התמונה שנמסרו."
                },
                "setBlue": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "blueValue": {
                      "description": "כמות הכחול (מ- 0 עד 255) להגדרה בפיקסל."
                    }
                  },
                  "short_description": "קובע את כמות הכחול (החל מ- 0 עד 255) בצבע הפיקסל הממוקם במיקום הנתון x ו- y בנתוני התמונה הנתונים לסכום הקלט של BlueVaLue."
                },
                "setGreen": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "greenValue": {
                      "description": "כמות הירוק (מ- 0 עד 255) להגדרה בפיקסל."
                    }
                  },
                  "short_description": "קובע את כמות הירוק (החל מ- 0 עד 255) בצבע הפיקסל הממוקם במיקום x ו- y הנתון בנתוני התמונה הנתונים לסכום הקלט GreenValue."
                },
                "setRGB": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "red": {
                      "description": "כמות אדום (מ 0 עד 255) כדי להגדיר בפיקסל."
                    },
                    "green": {
                      "description": "כמות הירוק (מ- 0 עד 255) להגדרה בפיקסל."
                    },
                    "blue": {
                      "description": "כמות הכחול (מ- 0 עד 255) להגדרה בפיקסל."
                    },
                    "alpha": {
                      "description": "אופציונלי. כמות האטימות (מ- 0 עד 255) להגדרה בפיקסלים. ברירת המחדל היא 255 (אטימות מלאה)."
                    }
                  }
                },
                "setRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "אובייקט"
                    },
                    "x": {
                      "description": "מיקום x בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "y": {
                      "description": "מיקום y בפיקסלים החל מהפינה השמאלית העליונה של התמונה."
                    },
                    "redValue": {
                      "description": "כמות אדום (מ 0 עד 255) כדי להגדיר בפיקסל."
                    }
                  },
                  "short_description": "קובע את כמות הצבע האדום (החל מ- 0 עד 255) בצבע הפיקסל הממוקם במיקום x ו- y הנתון בנתוני התמונה הנתונים לסכום הקלט RedValue."
                }
              }
            },
            "data": {
              "name": "נתונים",
              "expressions": {
                "createRecord": {
                  "palette_params": {
                    "record": {
                      "type": "אובייקט"
                    }
                  }
                },
                "deleteRecord": {
                  "palette_params": {
                    "record": {
                      "type": "אובייקט"
                    }
                  }
                },
                "drawChart": {
                  "palette_params": {
                    "options": {
                      "type": "אובייקט"
                    }
                  }
                },
                "drawChartFromRecords": {
                  "palette_params": {
                    "tableName": {
                      "description": "השם של הטבלה כדי לאחזר רשומות מ."
                    },
                    "options": {
                      "type": "אובייקט"
                    }
                  }
                },
                "getKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "שם המפתח שיש לאחזר."
                    }
                  }
                },
                "getPrediction": {
                  "palette_params": {
                    "callback": {
                      "type": "פונקציה"
                    }
                  }
                },
                "getUserId": {
                  "short_description": "מקבל מזהה ייחודי עבור המשתמש הנוכחי של יישום זה."
                },
                "onRecordEvent": {
                  "palette_params": {
                    "table": {
                      "description": "שם הטבלה שעליה חל מטפל אירוע זה."
                    }
                  }
                },
                "readRecords": {
                  "palette_params": {
                    "terms": {
                      "type": "אובייקט"
                    }
                  }
                },
                "setKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "שם המפתח שיש לאחסן."
                    },
                    "value": {
                      "description": "הנתונים שיש לאחסן."
                    }
                  },
                  "short_description": "מאחסן זוג מפתח/ערך באחסון הנתונים של מפתח/ערך של App Lab, וקורא לפונקציית ההתקשרות כאשר הפעולה מסתיימת."
                },
                "startWebRequest": {
                  "palette_params": {
                    "url": {
                      "description": "כתובת האינטרנט של שירות המחזיר נתונים."
                    }
                  }
                },
                "updateRecord": {
                  "palette_params": {
                    "record": {
                      "type": "אובייקט"
                    }
                  }
                }
              }
            },
            "turtle": {
              "expressions": {
                "arcLeft": {
                  "short_description": "מזיז את הצב קדימה ומשמאל בקשת חלקה ומעגלית."
                },
                "getX": {
                  "short_description": "מקבל את הקואורדינטות x הנוכחיות בפיקסלים של הצב."
                },
                "getY": {
                  "short_description": "מקבל את הקואורדינטות y הנוכחיות בפיקסלים של הצב."
                },
                "hide": {
                  "short_description": "הופך את הצב לבלתי נראה במיקומו הנוכחי."
                },
                "move": {
                  "palette_params": {
                    "x": {
                      "description": "מספר הפיקסלים להזזת הצב ימינה."
                    },
                    "y": {
                      "description": "מספר הפיקסלים כדי להזיז את הצב למטה."
                    }
                  }
                },
                "moveBackward": {
                  "short_description": "מזיז את הצב אחורה מספר נתון של פיקסלים מהכיוון הנוכחי."
                },
                "moveForward": {
                  "short_description": "מזיז את הצב קדימה למספר נתון של פיקסלים בכיוון הנוכחי."
                },
                "moveTo": {
                  "short_description": "מזיז את הצב למיקום מסוים (x, y) על המסך."
                },
                "penColor": {
                  "short_description": "קובע את צבע העט המשמש את הצב לציור קווים ונקודות."
                },
                "penDown": {
                  "short_description": "מוריד את העט כך שהצב מצייר קו מאחוריו כשהוא זז."
                },
                "penRGB": {
                  "short_description": "באמצעות ערכי RGBA, קובע את צבע העט המשמש את הצב לציור קווים ונקודות."
                },
                "penUp": {
                  "short_description": "מרים את העט כך הצב לא לצייר קו כפי שהוא נע."
                },
                "penWidth": {
                  "short_description": "קובע את רוחב הקו בפיקסלים שהצב מצייר מאחוריו כשהוא זז."
                },
                "show": {
                  "short_description": "הופך את הצב לגלוי במיקומו הנוכחי."
                },
                "speed": {
                  "short_description": "קובע את המהירות לביצוע האפליקציה, הכוללת את מהירות הצב."
                },
                "turnLeft": {
                  "short_description": "מסובב את הצב שמאלה בזווית שצוינה. המיקום של הצב נשאר זהה."
                },
                "turnRight": {
                  "short_description": "מסובב את הצב ימינה בזווית שצוינה. המיקום של הצב נשאר זהה."
                },
                "turnTo": {
                  "short_description": "משנה את כיוון הצב לזווית מסוימת. 0 הוא למעלה, 90 הוא ימין, 180 הוא למטה, ו 270 הוא שמאל."
                }
              }
            },
            "control": {
              "expressions": {
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "description": "הערך המוחזר על-ידי הפונקציה setTimeout לביטול."
                    }
                  }
                },
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "description": "מספר אלפיות השנייה בין כל ביצוע של הפונקציה."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "description": "מספר אלפיות השנייה להמתין לפני ביצוע הפונקציה."
                    }
                  }
                },
                "timedLoop": {
                  "palette_params": {
                    "callback": {
                      "type": "פונקציה"
                    }
                  }
                }
              }
            },
            "math": {
              "name": "מתמטיקה",
              "expressions": {
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "description": "המספר המינימלי המוחזר"
                    },
                    "max": {
                      "description": "המספר המקסימלי המוחזר"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "description": "המספר המינימלי המוחזר"
                    },
                    "max": {
                      "description": "המספר המקסימלי המוחזר"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "משתנים",
              "expressions": {
                "declareAssign_list_123": {
                  "short_description": "להכריז ולהקצות מערך למשתנה"
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "המחרוזת לחיפוש."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "המחרוזת לחיפוש."
                    }
                  }
                },
                "addPair": {
                  "return_value": "כלום"
                },
                "length": {
                  "return_value": "אורכו של המחרוזת"
                }
              }
            },
            "functions": {
              "name": "פונקציות"
            },
            "advanced": {
              "name": "מתקדם"
            }
          }
        },
        "spritelab": {
          "categories": {
            "sprites": {
              "name": "דמויות"
            },
            "world": {
              "name": "עולם"
            },
            "location": {
              "name": "מיקומים"
            },
            "actions": {
              "name": "פעולות"
            },
            "events": {
              "name": "אירועים"
            },
            "behaviors": {
              "name": "התנהגויות"
            },
            "loops": {
              "name": "חזרות"
            },
            "variables": {
              "name": "משתנים"
            },
            "math": {
              "name": "מתמטיקה"
            },
            "logic": {
              "name": "לוגיקה"
            },
            "functions": {
              "name": "פונקציות"
            },
            "text": {
              "name": "טקסט"
            },
            "comments": {
              "name": "תגובות"
            }
          }
        }
      }
    }
  }
}