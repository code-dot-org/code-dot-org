---
zh-CN:
  data:
    short_instructions:
      2-3 Artist 1 new: 您好，我是一个艺术家。你写的代码可以让我画任何的东西。 用几个程序模块来让我画一些灰色线条吧。 (每一行是100个像素长)
      2-3 Artist 12: |-
        画一个圆圈来完成这个眼球！

        如果每次都是转1度，你需要重复次才能完成这个圈？180 、360 、还是500次呢？
      2-3 Artist 2 new: 这所房子的墙已经完成了一半。每边都是 100，但是完成了一半的墙是只有 50。把剩下的墙补充完整。
      2-3 Artist 3.4: |-
        “跳”模块会移动艺术家但不画线。通过使用“向前跳”模块和“向前移动”模块来画出虚线。
        每行是50像素长。
      2-3 Artist 4: 帮我为小猫盖好房子
      2-3 Artist 6: 这所房子需要一个屋顶 ！绘制三角形。提示： 所有三个方面都具有相同的长度。
      2-3 Artist 9 NEW: 完成这只风筝
      2-3 Artist Free Play: 自己玩吧！想画什么就画什么。
      2-3 Artist Functions 1: "“我，僵尸艺术家，爱画画 ！” \n\n请帮助僵尸画出方形眼镜。 \n\n正方形的宽度是100像素，镜框之间的连接正方形边长短25像素。"
      2-3 Artist Functions 2: |-
        函数能让你定义新的指令块。

        我们将画正方形的模块挪到了一个叫做“画一个正方形”的函数里。这次，用“画一个正方形”函数来画个眼镜吗。

        正方形间隔75像素。
      2-3 Artist Functions 3: |-
        编辑这个函数来画一个边长115像素的正方形，从而能够画出一个更大的眼镜。

        正方形的间隔为45个像素。
      2-3 Artist Functions 4: 现在，将函数放到循环里来画这三个正方形。
      2-3 Artist Loops New 15: 现在，随便画你喜欢的东西吧！
      2-3 Artist Nested Loops 10: 让这段代码循环12次来完成这个图案。
      2-3 Artist Nested Loops 12: 让这段代码循环12次就可完成这个弯曲的图案。
      2-3 Artist Nested Loops Free Play: 自由发挥，用嵌套循环画一些很酷的东西
      2-3 Bee Conditionals 9: 收集每朵花的花蜜。
      2-3 Bee Functions 3: 收集每朵花的花蜜。
      2-3 Bee Functions 6: 现在用同样的函数来从三朵花里收集花蜜。
      2-3 Bee Loops 2A: 这次，用循环来收集所有花蜜。
      2-3 Bee Loops 3A: 用一个“重复”循环来收集所有花蜜。
      2-3 Maze 10: 带我去找那个绿色的小恶魔！（小心 TNT 炸药）
      2-3 Maze 2: 这只猪弄乱了我的羽毛！帮我抓住他！
      2-3 Maze 4: 带我去找那个绿色的小恶魔！（小心 TNT 炸药）
      2-3 Maze 6: 保持冷静，帮我找到那只坏猪。不然我要被它气死了！
      2-3 Maze 7: 带我去找那个绿色的小恶魔！（小心 TNT 炸药）
      2-3 Maze 8: 帮我到达那只猪。
      2-3 Maze 9: 带我去找那个绿色的小恶魔！（小心 TNT 炸药）
      2-3 Maze Loops 17: 用你学会的知识让我到达太阳花那里！
      2-3 Maze Loops 20: 你能用最少的模块来让我达到向日葵吗？
      2-3 Maze Loops Assessment 1: '评估：只用5个模块帮我到达太阳花！ '
      4-5 Artist 1: '帮我完成画箱子。(每一行是300像素长) '
      4-5 Artist 11: 完成这些绿线。它们有300像素长，相隔15像素。
      4-5 Artist 2: 使用“重复”指令块来画出这个正方形。
      4-5 Artist 3: 这个长方形的花床周长是600。长边是200。用最少的指令块来画出这个长方形。
      4-5 Artist 3.5: 试着了解这段代码会发生什么（或者点击"运行"来试试）。然后，重复它来完成这幅图！
      4-5 Artist 4: 一个圆有多少度？循环这些模块来创造一个彩色的圆圈。
      4-5 Artist 5: 在“???”里应该放什么，才能让僵尸用循环来完成这幅画呢？
      4-5 Artist 6: 等边三角形每个角的度数都是60。每条边是200像素。完成这幅画。
      4-5 Artist 7: 直角三角形的各个角分别是30、60、90度。斜边（弦）的长度是200像素。完成这幅画。
      4-5 Artist 8: |-
        足球场中线与边线是垂直的。
        这个场地的周长是800像素，长是240像素。它有多高？

        画出球场的边线和中线。
      4-5 Artist 9: 画出这幅图的另一半，使得这个图变得对称。这是个等边三角形，边长为50像素。
      4-5 Artist Assessment 1: 评估：用循环来画等边三角形。每条边是300像素。
      4-5 Artist Free Draw 1: 自由发挥！想画什么就画什么。
      4-5 Artist Patterns 7: 让我们来修改上一关的代码来适应更复杂的这一关。注意这些菱形的重叠方式，尝试将第一个“向后跳跃”的距离从100变到50（一半的距离）-那么现在小艺术家在第二个“向后跳跃”的时候应该跳多远。
      4-5 Artist Patterns Free Play: 自由发挥 - 试着亲手画一个自己的图案！
      4-5 Bee Debugging 10: 找到错误，并修好它们。
      4-5 Bee Debugging 11: 这里的计数对吗？
      4-5 Bee Debugging 2: 帮助蜜蜂得到花蜜，并酿造蜂蜜。
      4-5 Bee Debugging 3: 找到错误，并修好它们。
      4-5 Bee Debugging 4: 这些模块不能正常工作。怎样才是正确的？
      4-5 Bee Debugging 5: 哪里有些不对...
      4-5 Bee Debugging 7: 这个函数少了什么...
      4-5 Bee Debugging 9: 为什么蜜蜂不能制作出足够的蜂蜜？
      4-5 Bee Debugging Assessment 1: '评估: 修复代码。'
      4-5 Bee Nested Loops 1: 用循环来收集所有的花蜜。
      4-5 Bee Nested Loops 5: 创建一个嵌套循环来收集所有花蜜。
      4-5 Maze 1: 亲爱的人类，我...僵尸...必须...得到...那朵太阳花.
      4-5 Maze 10: 你能只用4个模块就帮我得到太阳花吗？
      4-5 Maze 11: 你能只用6个模块就到达向日葵吗？
      4-5 Maze 12: 好，现在有一点不一样。你能只用6个模块就成功吗？
      4-5 Maze 2: 让僵尸到向日葵那里，但要躲开食人花！
      4-5 Maze 3: 必须... 得到... 那朵花。
      4-5 Maze 4: 使用"重复"的块来迅速解决这一关......
      4-5 Maze 5: 你能用最少的模块来通过这关吗？
      4-5 Maze 6: 你能用最少的模块来让我达到向日葵吗？
      4-5 Maze 7: 让僵尸快速的到达向日葵的位置！你能使用11个以下的指令块来解决这道题吗？
      4-5 Maze 8: |-
        用尽可能少的指令块让僵尸到达向日葵的位置。
        （躲开食人花！）
      4-5 Maze 9: |-
        现在，我们用一个新的，叫做`重复直到`的指令块。
        这个指令会循环执行，直到僵尸到达向日葵的位置。

        使用新的`重复直到`指令块和最少的指令来解决这道题。
      4-5 Maze Assessment 1: 评估：用尽可能少的指令块到达向日葵的位置。
      4-5 Nested Loops 12: 你能用嵌套循环画出36个三角形吗？
      4-5 Nested Loops 5: 循环下面的代码来创建一个风车。
      4-5 Nested Loops 9: 画出鳄鱼嘴里的牙齿！
      4-5 While Loops 1: 将我移到坑旁边，使用“填满”指令块，铲两铲土填满它。
      4-5 While Loops 2: 将我移到土堆那里，然后用“移除”模块来移除五铲土。
      4-5 While Loops 5: 哇，这里有三堆土！你能写一个程序，将它们一铲铲移除，直到地面平整吗？
      4-5 While Loops 6: 哇，这里有三堆土！你能写一个程序，将它们一铲铲移除，直到地面平整吗？
      4-5 While Loops 7: 哇，这里有三堆土！你能写一个程序，将它们一铲铲移除，直到地面平整吗？
      Alien Defender: 项目创意：在游戏实验室里制作一个塔防游戏！
      CSD U3 Boolean Modify: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Boolean Modify_2018: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Boolean Modify_2019: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Boolean Predict: 你认为这个代码在执行时会做什么？预测一下每个console.log() （控制台.日志）命令会打印什么，然后运行程序来检查一下你的预测。
      CSD U3 Boolean Predict_2018: 你认为这个代码在执行时会做什么？预测一下每个console.log() （控制台.日志）命令会打印什么，然后运行程序来检查一下你的预测。
      CSD U3 Boolean Predict_2019: 你认为这个代码在执行时会做什么？预测一下每个console.log() （控制台.日志）命令会打印什么，然后运行程序来检查一下你的预测。
      CSD U3 Keypress Boolean: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Keypress Boolean_2018: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Keypress Boolean_2018_2019: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Keypress Watchers: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Keypress Watchers_2018: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 Keypress Watchers_2019: 修改代码，以便使所有的console.log命令打印“真”。
      CSD U3 L5 Freeplay: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 L5 Freeplay_2018: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 L5 Freeplay_2019: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Mouse Input Bee 2: 这样做
      CSD U3 Mouse Input Bee 2_2018: 这样做
      CSD U3 Mouse Input Bee 2_2019: 这样做
      CSD U3 Sprites intro sprites: 做这个
      CSD U3 Sprites intro sprites_2018: 做这个
      CSD U3 Sprites intro sprites_2019: 做这个
      CSD U3 Variables change circle size: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables change circle size_2018: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables change circle size_2019: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables naming rules v2: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables naming rules v2_2018: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables naming rules v2_2018_2019: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables random with assignment: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables random with assignment_2018: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U3 Variables random with assignment_2019: 试着调整petalSize（花瓣尺寸）的值几次，绘制的图形会如何变化呢？
      CSD U5 black white images pixelation: 通过键入0和1来完成图形X
      CSD U5 black white images pixelation 2: 绘制一个笑脸(点击此处看图)
      CSD U5 black white images pixelation 2_2018: 绘制一个笑脸(点击此处看图)
      CSD U5 black white images pixelation 2_2019: 绘制一个笑脸(点击此处看图)
      CSD U5 black white images pixelation 3: 调整宽度和高度滑杆找到图案(点击此处查看更多)
      CSD U5 black white images pixelation 3_2018: 调整宽度和高度滑杆找到图案(点击此处查看更多)
      CSD U5 black white images pixelation 3_2019: 调整宽度和高度滑杆找到图案(点击此处查看更多)
      CSD U5 black white images pixelation 4: 给笑脸添加眉毛(点击此处查看图像)
      CSD U5 black white images pixelation 4_2018: 给笑脸添加眉毛(点击此处查看图像)
      CSD U5 black white images pixelation 4_2019: 给笑脸添加眉毛(点击此处查看图像)
      CSD U5 black white images pixelation 5: 绘制任何你喜欢的图案
      CSD U5 black white images pixelation 5_2018: 绘制任何你喜欢的图案
      CSD U5 black white images pixelation 5_2019: 绘制任何你喜欢的图案
      CSD U5 black white images pixelation_2018: 通过键入0和1来完成图形X
      CSD U5 black white images pixelation_2019: 通过键入0和1来完成图形X
      CSD U6 params modify clouds: |-
        # 云

        当你吹声音传感器的时候, 这个程序会让云朵移动。但它还没完成。

        # 这样做

        -   创建一个新函数`moveCloud(name)`（移动云朵 名称），它将移动任何云朵。
        -   （提示: 代码几乎和`moveCloud0`函数相同）
        -   在事件模块内调用新的`moveCloud(name)`函数, 每个云朵名称一次。
        -   （提示: 这类似于 `loopCloud(name)` 函数被多次调用的方式。）
      CSD U6 params modify clouds_2018: |-
        # 云

        当你吹声音传感器的时候, 这个程序会让云朵移动。但它还没完成。

        # 这样做

        -   创建一个新函数`moveCloud(name)`（移动云朵 名称），它将移动任何云朵。
        -   （提示: 代码几乎和`moveCloud0`函数相同）
        -   在事件模块内调用新的`moveCloud(name)`函数, 每个云朵名称一次。
        -   （提示: 这类似于 `loopCloud(name)` 函数被多次调用的方式。）
      CSD U6 params modify planes: |-
        # 多飞机控制器

        此程序使用主板加速度计和屏幕上的复选框来移动三架飞机。现在只有红色的飞机起作用。

        # 这样做

        -   创建一个新的`movePlane(name)`函数，它可以移动任何飞机。
        -   在事件模块内调用`movePlane(name)`函数, 这样它只在选中复选框时移动。

        _挑战：现在飞机的移动速度太快了。 你能想出如何更改代码, 使它们移动得慢一些吗？_
      CSD U6 params modify planes_2018: |-
        # 多飞机控制器

        此程序使用主板加速度计和屏幕上的复选框来移动三架飞机。现在只有红色的飞机起作用。

        # 这样做

        -   创建一个新的`movePlane(name)`函数，它可以移动任何飞机。
        -   在事件模块内调用`movePlane(name)`函数, 这样它只在选中复选框时移动。

        _挑战：现在飞机的移动速度太快了。 你能想出如何更改代码, 使它们移动得慢一些吗？_
      CSD U6 params modify planes_2019: |-
        # 多飞机控制器

        此程序使用主板加速度计和屏幕上的复选框来移动三架飞机。现在只有红色的飞机起作用。

        # 这样做

        -   创建一个新的`movePlane(name)`函数，它可以移动任何飞机。
        -   在事件模块内调用`movePlane(name)`函数, 这样它只在选中复选框时移动。

        _挑战：现在飞机的移动速度太快了。 你能想出如何更改代码, 使它们移动得慢一些吗？_
      CSDU6 arrays select rainbow: 按数字顺序将数组的内容写入屏幕。(点击查看完整说明)
      CSDU6 arrays select rainbow_2018: 按数字顺序将数组的内容写入屏幕。(点击查看完整说明)
      CSDU6 arrays select rainbow_2019: 按数字顺序将数组的内容写入屏幕。(点击查看完整说明)
      CSDU6 arrays select random: 编写一个程序, 从数组中显示随机选择的颜色。（点击查看完整说明)
      CSDU6 arrays select random_2018: 编写一个程序, 从数组中显示随机选择的颜色。（点击查看完整说明)
      CSDU6 arrays select random_2019: 编写一个程序, 从数组中显示随机选择的颜色。（点击查看完整说明)
      CSDU6 arrays select variable: 编写一个程序, 从数组中显示随机选择的颜色。（点击查看完整说明)
      CSDU6 arrays select variable_2018: 编写一个程序, 从数组中显示随机选择的颜色。（点击查看完整说明)
      CSDU6 arrays select variable_2019: 编写一个程序, 从数组中显示随机选择的颜色。（点击查看完整说明)
      Choose Your Own Adventure: 你可以在游戏实验室做任何你想做的事! 下面是一个在游戏实验室中选择自己的冒险故事的例子。
      Course 4 Artist Binary 3: 你能通过循环3个二进制位（0和1）来画出这个图形吗？
      Course 4 Artist Binary 4: 每个二进制字符串表达这个图形中的一行。你能重新排列他们，从而能够画出一张笑脸，而不是皱眉的脸吗？
      Course 4 Artist Binary 5: 哪个6位的二进制字符串重复11次后能够画出这个图形?
      Course 4 Artist Binary 6: 能让你重复并画出这个图形的最短的二进制字符串是什么?
      Course 4 Artist Binary 7: 完成这幅画。
      Course 4 Artist Binary Free Play 2: 自由发挥：这是一张空白的画布。尽情画吧！
      Course 4 Artist Binary Free Play 2a: |-
        这是更高分辨率的画布 - 16像素乘以16像素！

        看看你用二进制位能创造出什么？
      Course 4 Artist Binary Free Play 2b: 单击此处查看提示。
      Course 4 Artist Binary pre1: 用下面的模块来让小画家在第一行画出二进制字符串“01010101”。
      Course 4 Artist For Loops 6a: 将上一关的代码做三个小小的改动来画出这个！
      Course 4 Bee Params 5: 让我们从头开始，你能创建一个含有方向参数的“拿5罐花蜜”的新函数吗？
      Course 4 EC 1a: 没有规则。没有线索。只有挑战！
      Course 4 EC 1b: 没有规则。没有线索。只有挑战！
      Course 4 EC 2a: 没有规则。没有线索。只有挑战！
      Course 4 EC 2b: 没有规则。没有线索。只有挑战！
      Course 4 EC 2c: 没有规则。没有线索。只有挑战！
      Course 4 Maze 2: 躲开TNT！
      Course 4 Maze 3: '编写程序帮愤怒的小鸟到那只猪那里！ '
      Course 4 Maze 5: 你能用最少的模块来通过这关吗？
      Course 4 SCFL 1: 使用尽可能少的模块来解决这个关卡。
      Course 4 SCFL 2: 使用尽可能少的模块来解决这个关卡。
      Course 4 SCFL 3: 你能想出如何重新创建这幅画吗？
      Course 4 SCFL 4: 你能想出如何重新创建这幅画吗？
      Course 4 SCFL 6: 你能想出如何使用一个简单的循环来重新创建这幅画吗？
      Course 4 SCV 1: 点击这里再看一遍介绍。
      Course 4 SCV 2: 点击这里再看一遍介绍。
      Course 4 SCV 4: 用最少的模块来通过这一关。
      Course 4 SCV 5: 用最少的模块来通过这一关。
      Course 4 SCV 6: 点击这里再看一遍介绍。
      CourseD_Dance_Party_01: 将`新建`模块拖到工作区，并关联到`设置`模块。
      CourseD_Dance_Party_02: 让驼鹿在 4 个小节后做新动作！
      CourseD_Dance_Party_03: 现在让舞者在 6 个小节后开始做新动作！
      CourseD_Dance_Party_04: 为程序添加背景效果。
      CourseD_Dance_Party_05: 使用其他新模块让舞者每 2 个小节变换动作。
      CourseD_Dance_Party_06: 创建名为“backup\_dancer1”的伴舞，与猫一起跳舞。
      CourseD_Dance_Party_08: 你能让两个伴舞的大小相同吗？
      CourseD_Dance_Party_09: 使用`设置色彩`模块，更改一个舞者的颜色。
      CourseD_Dance_Party_10: 使用`开始跟随`模块，让另一个舞者也对音乐做出响应。
      CourseD_Dance_Party_11: "`当按下上方向键时`模块可以在按下上方向键时运行代码。尝试让舞者在按下上方向键时快速移动。"
      CourseD_Dance_Party_11_5: 使用“所有鸭子”模块，让鸭子一起跳舞。
      CourseD_Dance_Party_11b: 让机器人在按下右方向键时“掉落”，在按下上方向键时"鼓掌"。做掉落-鼓掌舞动作要尽可能快！
      CourseD_Dance_Party_12: 随着节奏律动吧！创建自己的舞蹈，并与朋友分享。
      CourseE_HOC 2018 Level_1: 从箱子中拿出一艘船。
      CourseE_HOC 2018 Level_10: 前往海底遗迹的入口。
      CourseE_HOC 2018 Level_11: '在海底遗迹内使用海晶石制作一个潮涌核心。  '
      CourseE_HOC 2018 Level_2: 前往船坞的尽头。
      CourseE_HOC 2018 Level_3: 穿过开阔水域寻找鳕鱼。
      CourseE_HOC 2018 Level_4: 用循环到达海豚。
      CourseE_HOC 2018 Level_5: 探索沉船，找到箱子。
      CourseE_HOC 2018 Level_6: 穿过海冰，找到鲑鱼。
      CourseE_HOC 2018 Level_7a: 搜索水下废墟，寻找箱子。
      CourseE_HOC 2018 Level_9b: 把珊瑚当做航标，找到宝藏。
      Crack Random Substitution: 说明
      Crack a Caesar Cipher: 说明
      Dance Party 1-validated: '当点击这个外星人的时候, 你认为会发生什么？  '
      Dance Party 2: 改变 `___ begins ___` 模块内的行为, 使外星人开始旋转。
      Dance Party 2_2019: 改变 `___ begins ___` 模块内的行为, 使外星人开始旋转。
      Dance Party 3: '先创造一个叫`外星人2`的图形，然后让它在被点击时完成一个新的舞步。  '
      Dance Party 3_2019: '先创造一个叫`外星人2`的图形，然后让它在被点击时完成一个新的舞步。  '
      Dance Party 4: '创建一个名为 `alien3` 的第三个精灵, 并让所有的外星人站在一条线上。 '
      Dance Party 4_2019: '创建一个名为 `alien3` 的第三个精灵, 并让所有的外星人站在一条线上。 '
      Dance Party 5: 添加代码以在单击时更改每个外星人的颜色。
      Dance Party 5_2019: 添加代码以在单击时更改每个外星人的颜色。
      Dance Party 6: 这些外星人太调皮了！使用`停止所有`模块，在点击时让每个外星人都停下来。
      Dance Party 6_2019: 这些外星人太调皮了！使用`停止所有`模块，在点击时让每个外星人都停下来。
      Dance Party 7: 添加一个样子是钟，名字叫 `myBell` 的精灵, 功能是在被点击时使所有的外星人开始跳同样的舞蹈。
      Dance Party 7_2019: 添加一个样子是钟，名字叫 `myBell` 的精灵, 功能是在被点击时使所有的外星人开始跳同样的舞蹈。
      Dance Party Freeplay: 现在来一段你自创的外星迪斯科吧！
      Dance Party Freeplay_2019: 现在来一段你自创的外星迪斯科吧！
      Dance Party Predict: '当点击这个外星人的时候, 你认为会发生什么？  '
      Dance Party Predict_2019: '当点击这个外星人的时候, 你认为会发生什么？  '
      Dance_Party_01: 将`新建`模块拖到工作区，并关联到`设置`模块。
      Dance_Party_02: 让驼鹿在 4 个小节后做新动作！
      Dance_Party_03: 现在让舞者在 6 个小节后开始做新动作！
      Dance_Party_04: 为程序添加背景效果。
      Dance_Party_05: 使用其他新模块让舞者每 2 个小节变换动作。
      Dance_Party_06: 创建名为“backup\_dancer1”的伴舞，与猫一起跳舞。
      Dance_Party_08: 你能让两个伴舞的大小相同吗？
      Dance_Party_09: 使用`设置色彩`模块，更改一个舞者的颜色。
      Dance_Party_10: 使用`开始跟随`模块，让另一个舞者也对音乐做出响应。
      Dance_Party_11: "`当按下上方向键时`模块可以在按下上方向键时运行代码。尝试让舞者在按下上方向键时快速移动。"
      Dance_Party_11_5: 使用“所有鸭子”模块，让鸭子一起跳舞。
      Dance_Party_11b: 让机器人在按下右方向键时“掉落”，在按下上方向键时"鼓掌"。做掉落-鼓掌舞动作要尽可能快！
      Dance_Party_12: 随着节奏律动吧！创建自己的舞蹈，并与朋友分享。
      Find the Wizard: 随便创造一个东西。这是一个猜数游戏的例子！
      Fish Tank 2-validated: 改变达斯汀（风滚草）为鱼。
      Fish Tank 2-validated_2019: 改变达斯汀（风滚草）为鱼。
      Fish Tank 3-validated: 改动一下鱼的行为，让它沿着水缸边缘游。
      Fish Tank 3-validated_2019: 改动一下鱼的行为，让它沿着水缸边缘游。
      Fish Tank 4-validated: 加入`"background-color"`（背景颜色）模块将背景改为蓝色。
      Fish Tank 4-validated_2019: 加入`"background-color"`（背景颜色）模块将背景改为蓝色。
      Fish Tank 5-validated: 鱼有些孤单。在鱼缸内创造一个新的精灵。
      Fish Tank 5-validated_2019: 鱼有些孤单。在鱼缸内创造一个新的精灵。
      Fish Tank 6-validated: 给鱼的新朋友添加一种新行为。
      Fish Tank 6-validated_2019: 给鱼的新朋友添加一种新行为。
      Fish Tank 7-validated: 使用一些新的模块让鱼缸变得与众不同！
      Fish Tank 7-validated_2019: 使用一些新的模块让鱼缸变得与众不同！
      FoodFight: 这是一个可以在游戏实验室里玩的游戏的示例。
      Frequency Analysis: 测试
      Function intro Ryan: 使用"建造桥梁"功能两次，制造一条通往红石火把的路径。
      Function intro Ryan_2019: 使用"建造桥梁"功能两次，制造一条通往红石火把的路径。
      Geometric Sun: 项目创意：使用例如形状的几何概念来创建图案。这需要坚持和计划！
      Geometric Sun_2018: 项目创意：使用例如形状的几何概念来创建图案。这需要坚持和计划！
      Guess The Number: 随便创造一个东西。这是一个猜数游戏的例子！
      HOC 2018 Level_1: 从箱子中拿出一艘船。
      HOC 2018 Level_10: 前往海底遗迹的入口。
      HOC 2018 Level_11: '在海底遗迹内使用海晶石制作一个潮涌核心。  '
      HOC 2018 Level_12: 设计自己的水下世界，自己做主！
      HOC 2018 Level_2: 前往船坞的尽头。
      HOC 2018 Level_3: 穿过开阔水域寻找鳕鱼。
      HOC 2018 Level_4: 用循环到达海豚。
      HOC 2018 Level_5: 探索沉船，找到箱子。
      HOC 2018 Level_6: 穿过海冰，找到鲑鱼。
      HOC 2018 Level_7a: 搜索水下废墟，寻找箱子。
      HOC 2018 Level_9b: 把珊瑚当做航标，找到宝藏。
      Infinity_catch: 你能用方向键让爱莎（演员2）追上安娜吗？
      Infinity_finale: 创建并分享你想的任何东西！
      Infinity_move_collide: 阿宽是演员1。让他向右走到大白那里，当他们碰到一起时播放声音。
      Infinity_move_directions: 大白是演员2。添加移动模块，然后用方向键移动大白。让他到达另外两个演员那里。
      Infinity_move_right: 阿宽是演员1。让他移动到大白那里。
      Infinity_repeat: 用“一直重复”模块让安娜不停上下移动400像素。
      Infinity_say: 使用“说”模块让安娜说“你好”。
      Infinity_shoot: 大白是“演员2”。让大白向阿宽扔一枚火箭。
      Infinity_shoot_directions: 阿宽是“演员3”。让阿宽向这4个演员都扔一枚火箭。每次扔火箭之间等1秒。
      Infinity_touch_score: 当安娜碰到一片雪花时，就得一分。然后点击“运行”后控制她碰一下每片雪花。
      InspirationalArtwork: 如果这张照片启发了你，试着做一些类似的东西。否则。也可以创建你自己的东西。
      InspirationalArtwork_2018: 如果这张照片启发了你，试着做一些类似的东西。否则。也可以创建你自己的东西。
      K-1 Artist Loops 1: 向东移动4次来画出这条线。
      K-1 Artist Loops 2: 现在，用循环来画出同样的线。
      K-1 Artist Loops 3: 你能循环这些模块画出6条线吗？
      K-1 Artist Loops 4: 你能用循环帮我们画出城堡顶吗？
      K-1 Artist Loops 5: 将哪些模块重复4次能画出这些楼梯？
      K-1 Artist Loops 7: 循环可以帮助你完成这个图形。
      K-1 Artist Loops 8: 这个楼梯比较长。
      K-1 Artist Loops 9: 用什么方法来画这些楼梯最容易？
      K-1 Artist Loops Free Play: 自由发挥，画一些有趣的东西！
      K-1 Artist1 1: 用一行来画这个人的脚。
      K-1 Artist1 2: 用两行来画出小猫的胡须。
      K-1 Artist1 4: 画出上下左右的线来完成这个城堡！
      K-1 Artist1 5: 用两条线画这个花的茎。
      K-1 Artist1 6: 用“跳”模块来完成这幅画！
      K-1 Artist1 9: 用跳和画来画出虚线。
      K-1 Artist2 1: 在三角形下方画一个正方形。
      K-1 Artist2 2: 跳到房子旁边并画出一个正方形。
      K-1 Artist2 3: 在正方形上画出另一个正方形。
      K-1 Artist2 4: 画一个长方形来完成这座桥。
      K-1 Artist2 5: 画一个长方形来完成这个桥的支柱。
      K-1 Artist2 6: 画两个正方形来形成一个长方形！
      K-1 Artist2 Assessment1: 评估：在正方形旁边再画一个正方形。
      K-1 Artist2 Free Draw: 随便画些什么！
      K-1 Artist2_7: 画一个矩形来给梳妆台最上面装上一个抽屉！
      K-1 Bee 11: 获得3个花蜜，然后酿1个蜂蜜。
      K-1 Bee 13: 获得3个花蜜，然后酿1个蜂蜜。
      K-1 Bee 15: 采两个花蜜来酿两个蜂蜜！
      K-1 Bee 4: 采两个花蜜，然后酿两个蜂蜜！
      K-1 Bee 5: 采3个花蜜，然后酿3个蜂蜜！
      K-1 Bee 6: 采两个花蜜，然后酿两个蜂蜜！
      K-1 Bee 7: 获得3个花蜜，然后酿2个蜂蜜。
      K-1 Bee 9: 采两个花蜜，然后酿两个蜂蜜！
      K-1 Bee Loops 1: 采花蜜来酿蜂蜜！
      K-1 Bee Loops 10: 采集所有的花蜜，然后酿蜂蜜。
      K-1 Bee Loops 11: 得到所有的花蜜，并且酿蜂蜜！
      K-1 Bee Loops 12: 得到所有的花蜜，然后酿蜂蜜。
      K-1 Bee Loops 5: 用重复循环来采花蜜，酿蜂蜜！
      K-1 Bee Loops 7: 采花蜜，酿蜂蜜！
      K-1 Bee Loops 8: 采花蜜，酿蜂蜜！
      K-1 Bee Loops 9: 采集所有的花蜜，然后酿蜂蜜。
      K-1 Bee Puzzle 12: 获得3个花蜜，然后酿两个蜂蜜。
      K-1 Maze 10: '绕过炸药，让我到达那只猪！ '
      K-1 Maze 2: 把我移到东边到达那只猪！
      K-1 Maze 3: 把我移到南边到达那只猪！
      K-1 Maze 4: 把我移到北边到达那只猪！
      K-1 Maze 5: 把我移到东边到达那只猪！
      K-1 Maze 6: 向一个方向移动，然后往另一个方向移动来帮我到达猪那里！
      K-1 Maze 7: 向一个方向移动，然后往另一个方向移动来帮我到达猪那里！
      K-1 Maze 8: 向一个方向移动，然后往另一个方向移动来帮我到达猪那里！
      K-1 Maze 9: 向一个方向移动，然后往另一个方向移动来帮我到达猪那里！
      K-1 Maze Loops 1: 帮我到达那只猪。
      K-1 Maze Loops 2: 用重复模块让我到达那只猪！
      K-1 Maze Loops 3: 帮我到达那只猪！一定要用重复循环。
      K-1 Maze Loops 5: 帮我到达那只猪！一定要用重复循环。
      K-1 Maze Loops 6: 帮我到达那只猪！一定要用重复循环。
      K-1 Maze Loops 7: 帮我到达那只猪！一定要用重复循环。
      K-1 Maze Loops 8: 用重复循环来帮我到达那只猪。
      K-1 artist 1 level 9: 用三行画出它。
      K-1 maze debug 1: 修改代码来让我到达那只猪！
      MC HOC 2016 Level 10: 现在，是制作您自己的 我的世界 的时候了！生成生物，让它们做你要它们做的事。祝您玩得愉快！
      MC HOC 2016 Level 2-2: 鸡一动不动。在`当生成时`栏中放置`移动`和`转向`方格，让它动起来。
      MC HOC 2016 Level 3: 好极了，鸡动起来了！不过她又停了。在游戏中，鸡永远走来走去。使用`永远执行`循环，让这些鸡一直走动。
      MC HOC 2016 Level 4: 现在鸡都朝同一个方向走动，显得很奇怪。游戏可利用随机移动，让事物看起来真实。让鸡`随机转向`。
      MC HOC 2016 Level 5: 这些牛迷路了！在`永远执行`循环中使用`向目标移动一步`方块，带它们找到草。
      MC HOC 2016 Level 6: 现在你来做出僵尸。使用`生成`方块，在夜晚降临时做出 3 只僵尸。让它们朝您移动。坚持存活到天明。
      MC HOC 2016 Level 8: 您去羊那里的路被一面石头墙挡住了。很走运，这儿有一只爬行者。爬行者会在您碰过它们之后爆炸。让爬行者炸掉墙壁，你才能到达羊身边！
      MC HOC 2016 New Drop: 在 我的世界 中，羊会掉落羊毛。在`当使用时`方块中放置`掉落`方块，然后走过去，让羊掉落物品。
      MC HOC 2016 New Spawn: 在游戏中，生成表示添加一些事物到世界里。在`当运行时`下方放置`生成`方块，在游戏开始时生成事物。
      MC HOC 2016 New Walk: 我们来探索世界吧！用方向箭移动，按空格键或轻按游戏板使用物品。用门进入房屋。
      MC HOC 2016 SCORE LEVEL: 有的游戏会让你保留分数。跟这些铁傀儡玩捉迷藏，用`增加 1 分`方块，让您在标记它们时给自己得一分。达到五分就算赢！
      MC HOC 2016 Village Test: 哦不好！僵尸将您困在里面了！编码让铁傀儡追踪并攻击僵尸！
      MC_HOC_2017_01_RETRY: '使代理人抵达压力板，然后按"运行"并使用方向键将玩家移出房屋以收集箱子。 '
      MC_HOC_2017_01_RETRY_2019: '使代理人抵达压力板，然后按"运行"并使用方向键将玩家移出房屋以收集箱子。 '
      MC_HOC_2017_02_Cole: '移动特工到压力板, 使{currentPlayerName} 可以到达地图。 '
      MC_HOC_2017_02_Cole_2019: '移动特工到压力板, 使{currentPlayerName} 可以到达地图。 '
      MC_HOC_2017_03_Cole: '编码让特工可以打开大门 '
      MC_HOC_2017_03_Cole_2019: '编码让特工可以打开大门 '
      MC_HOC_2017_04POINT5_RYAN: 让特工到达压力板。
      MC_HOC_2017_04POINT5_RYAN_2019: 让特工到达压力板。
      MC_HOC_2017_04_Cole: 让特工到达压力板。
      MC_HOC_2017_04_Cole_2019: 让特工到达压力板。
      MC_HOC_2017_05_Cole: 让玩家到铲子那里。
      MC_HOC_2017_05_Cole_2019: 让玩家到铲子那里。
      MC_HOC_2017_06_Cole: 完成代码，帮助特工造一座过河的桥。
      MC_HOC_2017_06_Cole_2019: 完成代码，帮助特工造一座过河的桥。
      MC_HOC_2017_07_Cole: 摧毁冰块，让{currentPlayerName} 到达矿车。
      MC_HOC_2017_07_Cole_2019: 摧毁冰块，让{currentPlayerName} 到达矿车。
      MC_HOC_2017_10_RETRY: 创建一个函数以帮助您完成此矿车。
      MC_HOC_2017_10_RETRY_2019: 创建一个函数以帮助您完成此矿车。
      MC_HOC_2017_Ali: 使用这些功能找到一种越过岩浆的办法。
      MC_HOC_2017_Ali_2019: 使用这些功能找到一种越过岩浆的办法。
      MC_HOC_2017_FP20x20: "**自由游戏时间：** 是时候自行探索了！"
      MC_HOC_2017_FP20x20_2019: "**自由游戏时间：** 是时候自行探索了！"
      NEW Course 4 Artist Functions 14: '自由游戏时间！ '
      NEW Course 4 Artist Params 2: 从头开始创建一个 "绘制三角形" 函数，使三角形具有50像素边。
      NEW Course 4 Artist Params 9: 点击“编辑”来填写这个“画一个正方形”函数的定义，并且加一个参数。它应该像三角形一样有一个长度参数。这次，画三个正方形，边长分别为25，50，75像素，每个相隔100像素。
      NEW Course 4 Bee For Loops 1: 用循环从每朵花里采集花蜜。
      NEW Course 4 Bee For Loops 8: 你已经明白了！应该递增多少来收集3，6，9，12，15个花蜜？
      Overworld Avoid Monsters: 碰到苦力怕是个坏主意。小心避过苦力怕安全到家。
      Overworld Avoid Monsters_2019: 碰到苦力怕是个坏主意。小心避过苦力怕安全到家。
      Overworld Chop Tree: 木材是非常重要的资源。很多东西都是由它制成的。走到树边, 用 "摧毁模块" 指令把它砍下来。
      Overworld Chop Tree_2019: 木材是非常重要的资源。很多东西都是由它制成的。走到树边, 用 "摧毁模块" 指令把它砍下来。
      Overworld Chop Trees: 我们需要在太阳下山之前建一所房子。房子需要很多木头。砍掉所有的3棵树。
      Overworld Chop Trees_2019: 我们需要在太阳下山之前建一所房子。房子需要很多木头。砍掉所有的3棵树。
      Overworld Free Play 20x20: 恭喜！你完成了我们所有谜题！现在，快用你至今为止学会的知识，采矿、建造和创造一些独特的东西吧。
      Overworld Free Play 20x20_2019: 恭喜！你完成了我们所有谜题！现在，快用你至今为止学会的知识，采矿、建造和创造一些独特的东西吧。
      Overworld House Frame Chosen: 用你喜欢的任何材料建造房子的其余部分。"重复" 指令将会派上用场。
      Overworld House Frame Chosen_2019: 用你喜欢的任何材料建造房子的其余部分。"重复" 指令将会派上用场。
      Overworld Move to Sheep: 添加第二个 `向前移动` 模块达到绵羊的位置。
      Overworld Move to Sheep_2019: 添加第二个 `向前移动` 模块达到绵羊的位置。
      Overworld Place Wall: 每栋房子都是从墙开始的。在重复循环中放置 "放置"和 "向前移动" 指令来建造房子的第一部分。
      Overworld Place Wall_2019: 每栋房子都是从墙开始的。在重复循环中放置 "放置"和 "向前移动" 指令来建造房子的第一部分。
      Overworld Plant Crops: 提前计划很好。在水的两边种庄稼, 这样你以后就不会挨饿了。
      Overworld Plant Crops_2019: 提前计划很好。在水的两边种庄稼, 这样你以后就不会挨饿了。
      Overworld Powered Minecart: 干得好! 你收集了大量的资源, 建造了一个合适的家。现在把铁轨从地图的边缘铺放到你家门口。
      Overworld Powered Minecart_2019: 干得好! 你收集了大量的资源, 建造了一个合适的家。现在把铁轨从地图的边缘铺放到你家门口。
      Overworld Shear Sheep: 剪羊毛的时候到了！用 "剪" 指令从两只绵羊身上收集羊毛。
      Overworld Shear Sheep_2019: 剪羊毛的时候到了！用 "剪" 指令从两只绵羊身上收集羊毛。
      Robot Doodle: 项目想法：创建一个真实世界中熟悉的事物的图片。这需要坚持和规划！
      Robot Doodle_2018: 项目想法：创建一个真实世界中熟悉的事物的图片。这需要坚持和规划！
      Standalone_Artist_1: 欢迎小艺术家！首先，一起用“右转“块和”向前移“块来画一个简单的正方形。正方形每边的长度是100像素。
      Standalone_Artist_2: 用 120 度和 60 度的角度，再加上长达150像素的边来画个钻石型。
      Standalone_Artist_3: 能够用100 像素的边和 60度的转度来绘制一个六边形吗？
      Standalone_Artist_4: 现在你已获得一个新的块—循环，该块可以重复执行一连串的指令。如果你循环这些指令6次，看看会发生什么？
      Standalone_Artist_5: 你需要循环多少次钻石才能化成这朵花呢？
      Standalone_Artist_5.5: 注意：如何将画钻石的代码转换成“循环”块来精简代码。你可以通过循环整个事件12次来花一朵花。提示：在每个画钻石的循环结束后，你需要向左（或右）转30°，这样你就不会总是在一个地方画钻石了。
      Standalone_Artist_6: |-
        通过循环画六边形6次来创建一个图形。每次你需要转动多少度呢？
        提示：用一个圆周的度数除以你循环的次数。
      Standalone_Artist_7: 函数是另一种帮助避免重复工作的编程工具。这个函数会画一朵花，因此你可以在任何想画一朵花的时候使用它。用这个和新的“跳”模块来画这些花。提示：花之间相隔150像素。
      Standalone_Artist_8: 这里有一个叫做“画一个形状”的函数，我们用它来画一个六边形。运行这个代码来看看它做了什么，然后试试用这个函数看看发生什么。你能用它找到一个能画出正方形，三角形，或者八边形的模式吗？
      Standalone_Artist_9: 现在制作任何你想要的图片吧！你设置可以从一个空函数开始，来做到你想的事！
      U4 Model Design 1: 使用设计模式在屏幕上添加一个大的红色按钮。(单击以获取完整说明。）
      U4 Model Design 1_2018: 使用设计模式在屏幕上添加一个大的红色按钮。(单击以获取完整说明。）
      U4 Model Design 1_2019: 使用设计模式在屏幕上添加一个大的红色按钮。(单击以获取完整说明。）
      Underground Avoiding Lava: 熔岩隐藏在这些模块的下面, 你需要在前进之前把它掩盖起来。"如果"指令将在这里派上用场。在正确的位置添加
        "向前移动"指令来挖掘这些模块。
      Underground Avoiding Lava_2019: 熔岩隐藏在这些模块的下面, 你需要在前进之前把它掩盖起来。"如果"指令将在这里派上用场。在正确的位置添加
        "向前移动"指令来挖掘这些模块。
      Underground If Statements: 现在事情变得越来越棘手了。挖掘3块红石, 但不要落入熔岩。使用 "如果" 指令将圆石放置在任何未掩盖的熔岩上。
      Underground If Statements_2019: 现在事情变得越来越棘手了。挖掘3块红石, 但不要落入熔岩。使用 "如果" 指令将圆石放置在任何未掩盖的熔岩上。
      Underground Iron: 走进熔岩是个坏主意。放置圆石来创建一座桥梁, 然后挖掘至少两个铁模块。
      Underground Iron_2019: 走进熔岩是个坏主意。放置圆石来创建一座桥梁, 然后挖掘至少两个铁模块。
      Underground Mining Coal: 你可以在地底下找到最宝贵的资源，但下面很暗。请至少放上 2 根火把，并开采至少 2 块煤炭。
      Underground Mining Coal_2019: 你可以在地底下找到最宝贵的资源，但下面很暗。请至少放上 2 根火把，并开采至少 2 块煤炭。
      Vigenere: 测试
      Virtual Pet 1: 你觉得如果你按下 "运行" 然后点击她，会发生什么？
      Virtual Pet 1 Predict: '当点击这个外星人的时候, 你认为会发生什么？  '
      Virtual Pet 2: 创建 **事件** 使杰拉尔丁掉到泥坑时，她的颜色变成褐色。
      Virtual Pet 3: 在屏幕上添加一个肥皂。 是否能实现当长颈鹿和肥皂接触时，长颈鹿变回原有的颜色？
      Virtual Pet 4: 为肥皂添加行为使其变得可拖动，完成后拖动它来清洁长颈鹿。
      Virtual Pet 5: 向每个事件添加动作, 使长颈鹿与每个精灵碰撞时, 它的尺寸会收缩5。
      Virtual Pet 6: 添加一个苹果，这个苹果可以在与长颈鹿相碰时使长颈鹿回到原来的尺寸。
      Virtual Pet 8_2019: '自由发挥：你的长颈鹿还能做些什么呢？ '
      Virtual Pet Freeplay: '自由发挥：你的长颈鹿还能做些什么呢？ '
      'Widget: Text Compression': 在文本中找到规律（如重复的单词或词组）。在右侧的词典中输入你所发现的规律。当你将其输入到字典中时，以文本形式表现的规律就会用符号替代。
      bounce_1: 在“当按左方向键时”模块下面添加模块，然后按“运行”。使用左方向键来移动挡板来到达终点目标。
      bounce_10: 顶部有一个目标。添加 "得分点" 和 "得分对手点" 方块到"当球在球门" 和 "当球错过桨" 方块，来做一个游戏。看看你能在对手得分两次之前得分多少分。
      bounce_10_basketball: 现在，目标在顶部！将"得分"和"对手得分"模块附加到到“当进球得分”和"当球未命中手"块来制作游戏。看看在对手获得两分前，你可以获得多少分。
      bounce_10_sports: 现在，目标在顶部！将"得分"和"对手得分"模块附加到到“当进球得分”和"当球未命中手"模块来制作游戏。看看在对手获得两分前，你可以获得多少分。
      bounce_11: 现在，你可以在"运行时"模块下附加模块了. 你必须在多个地方附加新的"启动新球"模块. 此外，试着改变场景或球拍和球的速度，看看在你对手得两分之前你能得多少分.
      bounce_11_basketball: 现在，你可以在"运行时"模块下附加模块了. 你必须在多个地方附加新的"扔新球"模块. 此外，试着改变场景或手和球的速度，看看在你对手得两分之前你能得多少分.
      bounce_11_sports: 现在，你可以在"运行时"模块下附加模块了. 你必须在多个地方附加新的"扔新球"模块. 此外，试着改变场景或手和球的速度，看看在你对手得两分之前你能得多少分.
      bounce_12: 创建您自己的弹跳游戏。您可以更改所有的视觉效果和规则。单击完成，让朋友在手机上试试你的游戏。
      bounce_12_basketball: 创建您自己的篮球游戏。您可以更改所有规则。单击完成，让朋友在手机上试试你的游戏。
      bounce_12_sports: 创建你自己的游戏！这里一切由你做主：你可以改变所有的规则，混合搭配运动，创造！当你完成后，点击“完成”来让你的朋友在他们的手机上尝试你的游戏。
      bounce_1_basketball: 在“当按左方向键时”模块下面添加模块，然后按“运行”。使用左方向键移动手来到达终点目标。
      bounce_1_sports: 到旗帜那儿！将一个模块附加到“当按左方向键时”模块，并点按“运行”以将玩家移动到旗帜那里。
      bounce_2: 在"当按左方向键时"块和“当按右方向键时”块下面添加块，然后按"运行程序"。移动球拍到达两边的目标。
      bounce_2_basketball: 在"当按左方向键时"块和“当按右方向键时”块下面添加块，然后按"运行"。移动手到达两边的目标。
      bounce_2_sports: 现在有两个旗帜了！将一个模块附加到“当按左方向键时”模块和“当按右方向键时”模块来让你的玩家向两个方向移动。
      bounce_3: 现在，尝试类似的做法用"当按上键时"块，来移动球拍到顶部目标。
      bounce_4: 这次你需要添加四个块。移动到所有四个球拍完成目标，以完成这个关卡。
      bounce_5: 我们要将球发向球拍。将一个模块附加到"当球击中桨"模块以确保球能到达目标。
      bounce_5_basketball: 我们要将球发向手。将一个模块附加到"当球击中手"模块以确保球能到达旗帜。
      bounce_5_sports: 冰球将至上而下地飞到玩家！将一个模块附加到“当球击中玩家”模块后来击中旗帜。
      bounce_6: 现在完成的目标是在顶上。您需要将模块附加到这两个"当球击中"模块中以通过这关。
      bounce_6_basketball: 现在旗帜是在顶上。您需要将模块附加到这两个"当球击中"模块中以通过这关。
      bounce_6_sports: 现在旗帜是在顶上。您需要将模块附加到这两个"当球击中"模块中以通过这关。
      bounce_7: 将模块附加到每个"当.... 时"中模块。弹起球，直到它击中目标。
      bounce_7_basketball: 将模块附加到每个"当"模块。弹起球，直到它击中旗帜。
      bounce_7_sports: 将模块附加到每个"当"模块。弹起球，直到它击中旗帜。
      comment_intro_maze_2018: 用新的`注释`模块来给自己一个快速提醒。
      course1_artist_loops_challenge3: '"你能帮我做两个鸟舍吗？"'
      course1_artist_loops_challenge4: '"是时候掷骰子了! 你能帮我画这些吗？"'
      course1_collector_loops_challenge4: 让我们去拿宝藏吧! 帮助我越过每一行, 然后回来开始下一行。你能找到规律吗？
      course1_maze_debugging_challenge2: 调试本关卡。这些模块是正确的, 但他们的顺序错了!
      course1_maze_seq_challenge1: '"沿着这条路带我去找那只笨猪。躲开 TNT 炸药，不然我的羽毛就要被炸飞了！"'
      course2_artist_nestedLoops_challenge1: 你能想出怎么制作出这样的照片吗？
      course2_artist_nestedLoops_challenge2: 你能想出怎么制作出这样的照片吗？
      course2_bee_conditionals_challenge1: 收集所有的花蜜或制作蜂蜜。
      course2_bee_conditionals_challenge2: 收集所有的花蜜或制作蜂蜜。
      course2_collector_loops_challenge2: 得到所有的宝藏!
      course2_harvester_loops_challenge1: 收集所有的玉米。
      course2_harvester_loops_challenge2: 收集所有的莴苣。避开树木和田野!
      course2_maze_loops_challenge1: '现在, 斯奎特想尝试使用循环来找到他的橡子! '
      course2_maze_programming_challenge2: 有时, 解决同一问题的方法不止一种。有时候向后走比前进快!
      course3_artist_functions_challenge1: 一旦你定义了一个函数, 你可以随心所欲一次又一次地调用它! 尝试此代码, 看看它是如何工作的,
        然后改变它, 让您自己的设计更出色！
      course3_artist_functions_challenge2: 试试此代码, 看看它是如何工作的, 然后试着自己编程!
      course3_bee_functions_challenge1: 你得独立接受这个挑战。这可能比看起来更难!
      course3_bee_functions_challenge3: 创建一个新的函数, 当前方有路的时候，收集所有的花蜜和蜂蜜。用它来完成关卡!
      course3_bee_functions_challenge4: 用你所学的来解决这个关卡。
      course3_farmer_condLoops_challenge2: 收集一切作物来通过这关。
      course3_farmer_until_challenge2: 使用如果/否则模块来跟随这条曲线的路。在每个转角处，用循环里的`移除一个`来清理土堆。
      course3_maze_debugging_challenge1: _"我一直在绕圈子吗？"_
      course3_maze_debugging_challenge2: _"如果转向得太多可能会把我搞头晕! 请帮助我使用四个`转向`指令块来拿到坚果。"_
      course3_maze_until_challenge1: 没有提示，只有挑战。把僵尸带到向日葵那里。
      course3_playLab_challenge1: |-
        当你有足够的分数，或者分数不够时，应该有一些后果。添加一些代码到`游戏胜利`和`游戏失败`函数中来确保游戏按照它y应该的方式进行。

        点击提示来获得一些主意！
      course4_artist_binary_challenge1: 在这个谜题中，您只能使用每个二进制值 (0或1) 一次。请尝试使用嵌套循环来画这幅图。
      course4_artist_binary_challenge2: 你是否有足够的毅力让这个标志回到正常状态？
      course4_artist_concept_challenge2: 使用下面的代码创建五个风车的设计。
      course4_artist_functions_challenge2: 试试此代码, 看看它是如何工作的, 然后试着自己编程!
      course4_artist_fwp_challenge1: 请尝试运行此程序，并进行更改，看看会发生什么。你能弄清楚它是如何工作的吗？（或者你可以把这段程序删掉并且重写成其他任何你想要的程序）
      course4_bee_fwp_challenge1: 在函数中使用一个`计数循环`来收集所有的玉米。通过使用`length`（长度）参数，同样的`计数循环`可以数到不同的最大值。
      course4_collector_nested_loops_challenge2: 帮助收藏家只使用你工具箱里的块来拿到至少两堆宝藏。这里可能收集到所有4堆。
      course4_harvester_nested_loops_challenge1: '"在农场上，我需要一些帮助！只用工具箱里的模块来帮我收获玉米。"'
      courseA_artist_loops1: 这是一种叫"小艺术家" 的新类型关卡。试试各关卡并画些有趣的东西。
      courseA_artist_loops10: 帮我放下石头, 免得我掉下去!
      courseA_artist_loops10_2018: 帮我放下石头, 免得我掉下去!
      courseA_artist_loops10_2019: 帮我放下石头, 免得我掉下去!
      courseA_artist_loops11: 帮助我建楼梯, 让我可以看着船驶离。
      courseA_artist_loops11_2018: 帮助我建楼梯, 让我可以看着船驶离。
      courseA_artist_loops11_2019: 帮助我建楼梯, 让我可以看着船驶离。
      courseA_artist_loops12: 艺术家在远处看到了一些有趣的东西。 画出你认为他看到的东西。
      courseA_artist_loops12_2018: 艺术家在远处看到了一些有趣的东西。 画出你认为他看到的东西。
      courseA_artist_loops12_2019: 艺术家在远处看到了一些有趣的东西。 画出你认为他看到的东西。
      courseA_artist_loops1_2018: 这是一种叫"小艺术家" 的新类型关卡。试试各关卡并画些有趣的东西。
      courseA_artist_loops1_2019: 这是一种叫"小艺术家" 的新类型关卡。试试各关卡并画些有趣的东西。
      courseA_artist_loops2: 帮助艺术家两次向前来画这条线。
      courseA_artist_loops2_2018: 帮助艺术家两次向前来画这条线。
      courseA_artist_loops2_2019: 帮助艺术家两次向前来画这条线。
      courseA_artist_loops3: 往前画一条线五次。
      courseA_artist_loops3_2018: 往前画一条线五次。
      courseA_artist_loops3_2019: 往前画一条线五次。
      courseA_artist_loops4: 现在, 使用 `重复`循环来绘制这条线五次!
      courseA_artist_loops4_2018: 现在, 使用 `重复`循环来绘制这条线五次!
      courseA_artist_loops4_2019: 现在, 使用 `重复`循环来绘制这条线五次!
      courseA_artist_loops5: 画一条七步长的线。这将成为我们的地平线。
      courseA_artist_loops5_2018: 画一条七步长的线。这将成为我们的地平线。
      courseA_artist_loops5_2019: 画一条七步长的线。这将成为我们的地平线。
      courseA_artist_loops6: 让我们在后面放一座漂亮的小山。
      courseA_artist_loops6_2018: 让我们在后面放一座漂亮的小山。
      courseA_artist_loops6_2019: 让我们在后面放一座漂亮的小山。
      courseA_artist_loops7: 使用 "重复" 循环在水中添加波浪。
      courseA_artist_loops7_2018: 使用 "重复" 循环在水中添加波浪。
      courseA_artist_loops7_2019: 使用 "重复" 循环在水中添加波浪。
      courseA_artist_loops8: 我们需要一个梯子到船上去。
      courseA_artist_loops8_2018: 我们需要一个梯子到船上去。
      courseA_artist_loops8_2019: 我们需要一个梯子到船上去。
      courseA_artist_loops9: '挑战: 修楼梯。'
      courseA_artist_loops9_2018: '挑战: 修楼梯。'
      courseA_artist_loops9_2019: '挑战: 修楼梯。'
      courseA_artist_loops_challenge1: 你能画房子吗？让它看起来和你喜欢的一样!
      courseA_artist_loops_challenge1_2018: 你能画房子吗？让它看起来和你喜欢的一样!
      courseA_artist_loops_challenge1_2019: 你能画房子吗？让它看起来和你喜欢的一样!
      courseA_artist_loops_challenge2a: _"帮我把这三个帐篷搭建起来!"_
      courseA_artist_loops_challenge2a_2018: _"帮我把这三个帐篷搭建起来!"_
      courseA_artist_loops_challenge2a_2019: _"帮我把这三个帐篷搭建起来!"_
      courseA_collector_loops1: 四处移动罗瑞尔, 得到尽可能多的宝藏!
      courseA_collector_loops10: 帮助罗瑞尔沿着这条道路得到所有的宝藏。
      courseA_collector_loops10_2018: 帮助罗瑞尔沿着这条道路得到所有的宝藏。
      courseA_collector_loops10_2019: 帮助罗瑞尔沿着这条道路得到所有的宝藏。
      courseA_collector_loops11: 帮助罗瑞尔从这个洞穴得到所有的宝藏。
      courseA_collector_loops11_2018: 帮助罗瑞尔从这个洞穴得到所有的宝藏。
      courseA_collector_loops11_2019: 帮助罗瑞尔从这个洞穴得到所有的宝藏。
      courseA_collector_loops12: _"发现宝藏了! 得到尽可能多的财富!"_
      courseA_collector_loops12_2018: _"发现宝藏了! 得到尽可能多的财富!"_
      courseA_collector_loops12_2019: _"发现宝藏了! 得到尽可能多的财富!"_
      courseA_collector_loops1_2018: 四处移动罗瑞尔, 得到尽可能多的宝藏!
      courseA_collector_loops1_2019: 四处移动罗瑞尔, 得到尽可能多的宝藏!
      courseA_collector_loops2: 收集所有三个土堆来通关。
      courseA_collector_loops2_2018: 收集所有三个土堆来通关。
      courseA_collector_loops4: 修复罗瑞尔的路径得到所有这些宝藏。
      courseA_collector_loops4_2018: 修复罗瑞尔的路径得到所有这些宝藏。
      courseA_collector_loops4_2019: 修复罗瑞尔的路径得到所有这些宝藏。
      courseA_collector_loops5: 用你学到的东西来获取所有的宝藏。
      courseA_collector_loops5_2018: 用你学到的东西来获取所有的宝藏。
      courseA_collector_loops5_2019: 用你学到的东西来获取所有的宝藏。
      courseA_collector_loops6: 在此代码中添加块以获取所有的宝藏。
      courseA_collector_loops6_2018: 在此代码中添加块以获取所有的宝藏。
      courseA_collector_loops6_2019: 在此代码中添加块以获取所有的宝藏。
      courseA_collector_loops7: 你应该添加什么到这个代码来获得所有的宝藏？
      courseA_collector_loops7_2018: 你应该添加什么到这个代码来获得所有的宝藏？
      courseA_collector_loops7_2019: 你应该添加什么到这个代码来获得所有的宝藏？
      courseA_collector_loops8: 编写代码来获取所有这些宝藏。
      courseA_collector_loops8_2018: 编写代码来获取所有这些宝藏。
      courseA_collector_loops8_2019: 编写代码来获取所有这些宝藏。
      courseA_collector_loops9: "\\*\\* 挑战: \\*\\* 宝藏在楼梯最上面! 编写代码来帮助罗瑞尔得到所有宝藏。"
      courseA_collector_loops9_2018: "\\*\\* 挑战: \\*\\* 宝藏在楼梯最上面! 编写代码来帮助罗瑞尔得到所有宝藏。"
      courseA_collector_loops9_2019: "\\*\\* 挑战: \\*\\* 宝藏在楼梯最上面! 编写代码来帮助罗瑞尔得到所有宝藏。"
      courseA_collector_loops_challenge1: _"你能帮我找出一些错误吗？"_
      courseA_collector_loops_challenge1_2018: _"你能帮我找出一些错误吗？"_
      courseA_collector_loops_challenge1_2019: _"你能帮我找出一些错误吗？"_
      courseA_collector_loops_challenge2: '得到所有的宝藏！ '
      courseA_collector_loops_challenge2kp: 收集至少 **3** 件的宝藏通过这个关。
      courseA_collector_loops_challenge2kp_2018: 收集至少 **3** 件的宝藏通过这个关。
      courseA_collector_loops_challenge2kp_2019: 收集至少 **3** 件的宝藏通过这个关。
      courseA_collector_preLoops7: 收集所有三个土堆来通关。
      courseA_harvester_loops1: 帮助收割者采摘所有的玉米！
      courseA_harvester_loops10: 帮助收割者捡起所有5束玉米！
      courseA_harvester_loops10_2019: 帮助收割者捡起所有5束玉米！
      courseA_harvester_loops11: 试试自己做一个！
      courseA_harvester_loops11_2019: 试试自己做一个！
      courseA_harvester_loops1_2019: 帮助收割者采摘所有的玉米！
      courseA_harvester_loops2: 确保采摘了所有的玉米！
      courseA_harvester_loops2_2019: 确保采摘了所有的玉米！
      courseA_harvester_loops3: 你能只用**一个**移动模块来采摘所有玉米吗？
      courseA_harvester_loops3_2019: 你能只用**一个**移动模块来采摘所有玉米吗？
      courseA_harvester_loops4: 你能帮助收割者找到她代码里的缺陷吗?
      courseA_harvester_loops4_2019: 你能帮助收割者找到她代码里的缺陷吗?
      courseA_harvester_loops5: 自己试一试！你能也采摘最后的玉米吗？
      courseA_harvester_loops5_2019: 自己试一试！你能也采摘最后的玉米吗？
      courseA_harvester_loops5a: 看看所有的玉米！你能自己采摘它们吗？
      courseA_harvester_loops5a_2019: 看看所有的玉米！你能自己采摘它们吗？
      courseA_harvester_loops5b: 你能改变代码来让收割者采摘所有玉米吗？
      courseA_harvester_loops5b_2019: 你能改变代码来让收割者采摘所有玉米吗？
      courseA_harvester_loops6: 你要用**一个**`向南移动`模块和**一个**`向西移动`模块。
      courseA_harvester_loops6_2019: 你要用**一个**`向南移动`模块和**一个**`向西移动`模块。
      courseA_harvester_loops7: '自己试试吧！ '
      courseA_harvester_loops7_2019: '自己试试吧！ '
      courseA_harvester_loops9: 你能想出如何收集所有玉米吗？
      courseA_harvester_loops9_2019: 你能想出如何收集所有玉米吗？
      courseA_harvester_seq1: 摆弄这些模块来帮助收割者收获这个玉米。
      courseA_harvester_seq10: 确保采摘了所有的玉米！
      courseA_harvester_seq10_2019: 确保采摘了所有的玉米！
      courseA_harvester_seq11: 自己试试吧！采摘所有玉米。
      courseA_harvester_seq11_2019: 自己试试吧！采摘所有玉米。
      courseA_harvester_seq12: 捡起所有玉米。
      courseA_harvester_seq12_2019: 捡起所有玉米。
      courseA_harvester_seq13: 摆弄这些模块来帮助收割者收获玉米。
      courseA_harvester_seq13_2019: 摆弄这些模块来帮助收割者收获玉米。
      courseA_harvester_seq1_2019: 摆弄这些模块来帮助收割者收获这个玉米。
      courseA_harvester_seq2: 用三个`向西移动`模块和一个`采摘玉米`模块来通过这关。
      courseA_harvester_seq2_2019: 用三个`向西移动`模块和一个`采摘玉米`模块来通过这关。
      courseA_harvester_seq3: 用三个`向西移动`模块和一个`采摘玉米`模块。
      courseA_harvester_seq3_2019: 用三个`向西移动`模块和一个`采摘玉米`模块。
      courseA_harvester_seq4: 添加一个模块来帮助收割者采摘玉米。
      courseA_harvester_seq4_2019: 添加一个模块来帮助收割者采摘玉米。
      courseA_harvester_seq5: 找到缺陷，并修复它！
      courseA_harvester_seq5_2019: 找到缺陷，并修复它！
      courseA_harvester_seq6: 自己试一试！
      courseA_harvester_seq6_2019: 自己试一试！
      courseA_harvester_seq7: 自己试一试！
      courseA_harvester_seq7_2019: 自己试一试！
      courseA_harvester_seq8: 现在收割者需要采摘玉米两次！
      courseA_harvester_seq8_2019: 现在收割者需要采摘玉米两次！
      courseA_harvester_seq9: 添加两个模块来完成这个关卡！
      courseA_harvester_seq9_2019: 添加两个模块来完成这个关卡！
      courseA_maze_ramp2_2018: 将所有模块接到一起来完成你的代码，然后点击"运行"。
      courseA_maze_ramp2_2019: 将所有模块接到一起来完成你的代码，然后点击"运行"。
      courseA_maze_ramp3a_2018: 在其它模块下面添加一个`向北`模块来完成代码，然后点击"▶运行"。
      courseA_maze_ramp3a_2019: 在其它模块下面添加一个`向北`模块来完成代码，然后点击"▶运行"。
      courseA_maze_ramp3b_2018: 在其它模块下面添加一个`向北`模块来完成代码，然后点击"运行"。
      courseA_maze_ramp3b_2019: 在其它模块下面添加一个`向北`模块来完成代码，然后点击"运行"。
      courseA_maze_ramp4a_2018: 你能想出要在这些模块下面增加什么模块来完成这段代码吗？
      courseA_maze_ramp4a_2019: 你能想出要在这些模块下面增加什么模块来完成这段代码吗？
      courseA_maze_ramp5a_2018: 帮小鸟到达那只猪！
      courseA_maze_ramp5a_2019: 帮小鸟到达那只猪！
      courseA_maze_seq1: 帮小鸟到达那只坏猪！
      courseA_maze_seq10: '挑战: 绕开TNT炸药, 把鸟撞到猪身上。 '
      courseA_maze_seq10_2018: '挑战: 绕开TNT炸药, 让鸟到达猪那里！ '
      courseA_maze_seq10_2019: '挑战: 绕开TNT炸药, 让鸟到达猪那里！ '
      courseA_maze_seq11: 向一个方向移动，然后往另一个方向移动来帮鸟到达猪那里！
      courseA_maze_seq11_2018: 向一个方向移动，然后往另一个方向移动来帮鸟到达猪那里！
      courseA_maze_seq11_2019: 向一个方向移动，然后往另一个方向移动来帮鸟到达猪那里！
      courseA_maze_seq12: '去找那头猪! '
      courseA_maze_seq12_2018: '去找那头猪! '
      courseA_maze_seq12_2019: '去找那头猪! '
      courseA_maze_seq13: 用各种方法把那头猪抓来!
      courseA_maze_seq13_2018: 用各种方法把那头猪抓来!
      courseA_maze_seq13_2019: 用各种方法把那头猪抓来!
      courseA_maze_seq1_2018: 帮小鸟到达那只坏猪！
      courseA_maze_seq1_2019: 帮小鸟到达那只坏猪！
      courseA_maze_seq2: 修改代码来让我到达那只猪！
      courseA_maze_seq3: 修复代码, 让鸟到猪那!
      courseA_maze_seq4: 移除一个模块, 让鸟到猪那!
      courseA_maze_seq5: 从头开始尝试这一个。
      courseA_maze_seq5_2018: 尝试一下。
      courseA_maze_seq5_2019: 尝试一下。
      courseA_maze_seq5a_2018: 你能在代码最后加上什么来让小鸟到达猪那里？
      courseA_maze_seq5a_2019: 你能在代码最后加上什么来让小鸟到达猪那里？
      courseA_maze_seq6: 往一条路走，然后走另一条把鸟带到猪那里！
      courseA_maze_seq6_2018: 往一条路走，然后走另一条把鸟带到猪那里！
      courseA_maze_seq6_2019: 往一条路走，然后走另一条把鸟带到猪那里！
      courseA_maze_seq7: 想想这里缺了什么，然后添加模块让鸟到达那只猪那！
      courseA_maze_seq8: 通过这关，把鸟带到猪那！
      courseA_maze_seq8_2018: 通过这关，把鸟带到猪那！
      courseA_maze_seq8_2019: 通过这关，把鸟带到猪那！
      courseA_maze_seq9: 通过添加块来调试这关，让鸟到达猪那里!
      courseA_maze_seq_challenge1: 这里出了点问题。帮助修复代码, 让鸟到达猪那里!
      courseA_maze_seq_challenge1_2018: 这里出了点问题。帮助修复代码, 让鸟到达猪那里!
      courseA_maze_seq_challenge1_2019: 这里出了点问题。帮助修复代码, 让鸟到达猪那里!
      courseA_maze_seq_challenge2: 沿着这条路带我去找那只笨猪。躲开 TNT 炸药，不然我的羽毛就要被炸飞了！
      courseA_maze_seq_challenge2_2018: 沿着这条路带我去找那只笨猪。躲开 TNT 炸药，不然我的羽毛就要被炸飞了！
      courseA_maze_seq_challenge2_2019: 沿着这条路带我去找那只笨猪。躲开 TNT 炸药，不然我的羽毛就要被炸飞了！
      courseA_playLab_events1: 这是一个游戏实验室关卡。 把模块移到工作区看会发生什么!
      courseA_playLab_events1_2018: 这是一个游戏实验室关卡。 把模块移到工作区看会发生什么!
      courseA_playLab_events2: 乔治狗想说“大家好”。你可以帮它吗？
      courseA_playLab_events2_2018: 乔治狗想说“大家好”。你可以帮它吗？
      courseA_playLab_events3: 将`向左移动`模块连接到工作区中的`当点击向左时`的事件模块下。
      courseA_playLab_events3_2018: 将`向左移动`模块连接到工作区中的`当点击向左时`的事件模块下。
      courseA_playLab_events3_2019: 将`向左移动`模块连接到工作区中的`当点击向左时`的事件模块下。
      courseA_playLab_events4: 添加模块，在点击`右`按钮时向右移动。
      courseA_playLab_events4_2018: 添加另一个时间模块，在按下`右`按钮时，让乔治向右移动。
      courseA_playLab_events4_2019: 添加另一个时间模块，在按下`右`按钮时，让乔治向右移动。
      courseA_playLab_events5: 添加事件让乔治在`上`和`下`按钮被点击时，向上和下移动。
      courseA_playLab_events5_2018: 添加事件让乔治在`上`和`下`按钮被点击时，向上和下移动。
      courseA_playLab_events5_2019: 添加事件让乔治在`上`和`下`按钮被点击时，向上和下移动。
      courseA_playLab_events6: 当乔治被点击的时候，改变背景和播放随机声音来添加一些乐趣。
      courseA_playLab_events6_2018: 当乔治被点击的时候，改变背景和播放随机声音来添加一些乐趣。
      courseA_playLab_events6_2019: 当乔治被点击的时候，改变背景和播放随机声音来添加一些乐趣。
      courseA_playLab_events7: 添加任何你想要的到此游戏中。你能否让恐龙在乔治碰上它时消失？
      courseA_playLab_events7_2018: _自由发挥_：把觉得好玩的东西添加到游戏里。
      courseA_playLab_events7_2019: _自由发挥_：把觉得好玩的东西添加到游戏里。
      courseA_playlab_events_challenge1: 你能写代码, 以显示我的其他朋友吗？提示能够一步一步的帮助你完成这个项目。
      courseA_playlab_events_challenge1_2018: 你能写代码, 以显示我的其他朋友吗？提示能够一步一步的帮助你完成这个项目。
      courseA_playlab_events_challenge1_2019: 你能写代码, 以显示我的其他朋友吗？提示能够一步一步的帮助你完成这个项目。
      courseA_playlab_events_challenge2: 当你点击它们时，让每个人做点什么。
      courseA_playlab_events_challenge2_2018: 当你点击它们时，让每个人做点什么。
      courseA_playlab_events_challenge2_2019: 当你点击它们时，让每个人做点什么。
      courseA_video_events: 需要更好的游戏实验室/事件组合
      courseA_video_events_2018: 需要更好的游戏实验室/事件组合
      courseA_video_events_2019: 需要更好的游戏实验室/事件组合
      courseB_Scrat_ramp1_2018: 在这一关中，将所有模块拼到一起，并点击"▶运行"！
      courseB_Scrat_ramp1_2019: 在这一关中，将所有模块拼到一起，并点击"▶运行"！
      courseB_Scrat_ramp2_2018: 将所有模块接到一起来完成你的代码，然后点击"运行"。
      courseB_Scrat_ramp2_2019: 将所有模块接到一起来完成你的代码，然后点击"运行"。
      courseB_Scrat_ramp3a_2018: 在其它模块下面添加一个`向北`模块来完成代码，然后点击"▶运行"。
      courseB_Scrat_ramp3a_2019: 在其它模块下面添加一个`向北`模块来完成代码，然后点击"▶运行"。
      courseB_Scrat_ramp3b_2018: 将多余的块拖回工具箱即可将其删除。
      courseB_Scrat_ramp3b_2019: 将多余的块拖回工具箱即可将其删除。
      courseB_Scrat_ramp4a_2018: 你能想出要在这些模块下面增加什么模块来完成这段代码吗？
      courseB_Scrat_ramp4a_2019: 你能想出要在这些模块下面增加什么模块来完成这段代码吗？
      courseB_Scrat_ramp5a_2018: 试试自己完成它！
      courseB_Scrat_ramp5a_2019: 试试自己完成它！
      courseB_artist_loops1: 这是一种叫"小艺术家" 的新类型关卡。试试各关卡并画些有趣的东西。
      courseB_artist_loops10: 用你已经学到的画一副你想让艺术家回到家里看到的画。
      courseB_artist_loops10_2018: 用你已经学到的画一副你想让艺术家回到家里看到的画。
      courseB_artist_loops10_2019: 用你已经学到的画一副你想让艺术家回到家里看到的画。
      courseB_artist_loops1_2018: 这是一种叫"小艺术家" 的新类型关卡。试试各关卡并画些有趣的东西。
      courseB_artist_loops1_2019: 这是一种叫"小艺术家" 的新类型关卡。试试各关卡并画些有趣的东西。
      courseB_artist_loops2: 艺术家试图画一条线 \*\* 6 \*\* 次, 但还没画好。 你能帮忙吗？
      courseB_artist_loops2_2018: 艺术家试图画一条线 \*\* 6 \*\* 次, 但还没画好。 你能帮忙吗？
      courseB_artist_loops2_2019: 艺术家试图画一条线 \*\* 6 \*\* 次, 但还没画好。 你能帮忙吗？
      courseB_artist_loops3: 帮助艺术家画一条线7次, 来做花园墙。
      courseB_artist_loops3_2018: 帮助艺术家画一条线7次, 来做花园墙。
      courseB_artist_loops3_2019: 帮助艺术家画一条线7次, 来做花园墙。
      courseB_artist_loops4: 现在我们要准备好种植用的土壤。在代码中寻找缺陷并帮助艺术家准备好地面。
      courseB_artist_loops4_2018: 现在我们要准备好种植用的土壤。在代码中寻找缺陷并帮助艺术家准备好地面。
      courseB_artist_loops4_2019: 现在我们要准备好种植用的土壤。在代码中寻找缺陷并帮助艺术家准备好地面。
      courseB_artist_loops5: 该去修楼梯了! 重复这个图案 \*\* 5\*\* 次, 这样艺术家就可以到达灌木丛的顶端。
      courseB_artist_loops5_2018: 该去修楼梯了! 重复这个图案 \*\* 5\*\* 次, 这样艺术家就可以到达灌木丛的顶端。
      courseB_artist_loops5_2019: 该去修楼梯了! 重复这个图案 \*\* 5\*\* 次, 这样艺术家就可以到达灌木丛的顶端。
      courseB_artist_loops6: 爬上藤蔓, 看看它延到哪里？
      courseB_artist_loops6_2018: 爬上藤蔓, 看看它延到哪里？
      courseB_artist_loops6_2019: 爬上藤蔓, 看看它延到哪里？
      courseB_artist_loops7: "**挑战：**这是一个隐藏的花园！让我们四处走一走。"
      courseB_artist_loops7_2018: "**挑战：**这是一个隐藏的花园！让我们四处走一走。"
      courseB_artist_loops7_2019: "**挑战：**这是一个隐藏的花园！让我们四处走一走。"
      courseB_artist_loops8: 该回家了。你可以只用一个模块就能修好这个梯子让艺术家下来吗？
      courseB_artist_loops8_2018: 该回家了。你可以只用一个模块就能修好这个梯子让艺术家下来吗？
      courseB_artist_loops8_2019: 该回家了。你可以只用一个模块就能修好这个梯子让艺术家下来吗？
      courseB_artist_loops9: 让我们走捷径回家，越过池塘。你能帮助艺术家待在石头上吗？
      courseB_artist_loops9_2018: 让我们走捷径回家，越过池塘。你能帮助艺术家待在石头上吗？
      courseB_artist_loops9_2019: 让我们走捷径回家，越过池塘。你能帮助艺术家待在石头上吗？
      courseB_artist_loops_challenge1: '"是时候掷骰子了! 你能帮我画这些吗？"'
      courseB_artist_loops_challenge1_2018: '"是时候掷骰子了! 你能帮我画这些吗？"'
      courseB_artist_loops_challenge1_2019: '"是时候掷骰子了! 你能帮我画这些吗？"'
      courseB_artist_loops_challenge2: |-
        让我们玩游戏吧! 尽可能多地画 X。
        你可以做到一排放3 个吗？
      courseB_artist_loops_challenge2_2018: |-
        让我们玩游戏吧! 尽可能多地画 X。
        你可以做到一排放3 个吗？
      courseB_artist_loops_challenge2_2019: |-
        让我们玩游戏吧! 尽可能多地画 X。
        你可以做到一排放3 个吗？
      courseB_collector_loops1: 这是冒险家罗瑞尔! 你能把她带到附近去找宝藏吗？
      courseB_collector_loops10: 帮助罗瑞尔从这个洞穴得到所有的宝藏。
      courseB_collector_loops10_2018: 帮助罗瑞尔从这个洞穴得到所有的宝藏。
      courseB_collector_loops10_2019: 帮助罗瑞尔从这个洞穴得到所有的宝藏。
      courseB_collector_loops11: 发现宝藏了! 得到尽可能多的财富!
      courseB_collector_loops11_2018: 发现宝藏了! 得到尽可能多的财富!
      courseB_collector_loops11_2019: 发现宝藏了! 得到尽可能多的财富!
      courseB_collector_loops1_2018: 这是冒险家罗瑞尔! 你能把她带到附近去找宝藏吗？
      courseB_collector_loops1_2019: 这是冒险家罗瑞尔! 你能把她带到附近去找宝藏吗？
      courseB_collector_loops2: 收集所有四个土堆来通关。
      courseB_collector_loops2_2018: 收集所有四个土堆来通关。
      courseB_collector_loops2_2019: 收集所有四个土堆来通关。
      courseB_collector_loops3: 罗瑞尔怎么能只用一个 "向东" 模块来得到五堆财宝呢？
      courseB_collector_loops3_2018: 罗瑞尔怎么能只用一个 "向东" 模块来得到五堆财宝呢？
      courseB_collector_loops3_2019: 罗瑞尔怎么能只用一个 "向东" 模块来得到五堆财宝呢？
      courseB_collector_loops4: 修复罗瑞尔的路径得到所有这些宝藏！
      courseB_collector_loops4_2018: 修复罗瑞尔的路径得到所有这些宝藏！
      courseB_collector_loops4_2019: 修复罗瑞尔的路径得到所有这些宝藏！
      courseB_collector_loops5: '添加代码到最后的关卡，得到所有的宝藏。 '
      courseB_collector_loops5_2018: '添加代码到最后的关卡，得到所有的宝藏。 '
      courseB_collector_loops5_2019: '添加代码到最后的关卡，得到所有的宝藏。 '
      courseB_collector_loops6: 写出代码, 帮助罗瑞尔得到所有的宝藏!
      courseB_collector_loops6_2018: 写出代码, 帮助罗瑞尔得到所有的宝藏!
      courseB_collector_loops6_2019: 写出代码, 帮助罗瑞尔得到所有的宝藏!
      courseB_collector_loops7: 编写代码来获取所有这些宝藏。
      courseB_collector_loops7_2018: 编写代码来获取所有这些宝藏。
      courseB_collector_loops7_2019: 编写代码来获取所有这些宝藏。
      courseB_collector_loops8: "\\*\\* 挑战: \\*\\* 宝藏在楼梯最底下! 编写代码来帮助罗瑞尔得到所有宝藏。"
      courseB_collector_loops8_2018: "\\*\\* 挑战: \\*\\* 宝藏在楼梯最底下! 编写代码来帮助罗瑞尔得到所有宝藏。"
      courseB_collector_loops8_2019: "\\*\\* 挑战: \\*\\* 宝藏在楼梯最底下! 编写代码来帮助罗瑞尔得到所有宝藏。"
      courseB_collector_loops9: '"帮我从这个深谷里得到宝藏"\*'
      courseB_collector_loops9_2018: '"帮我从这个深谷里得到宝藏"\*'
      courseB_collector_loops9_2019: '"帮我从这个深谷里得到宝藏"\*'
      courseB_collector_loops_challenge1: '这次你的模块有限。得到所有的宝藏! '
      courseB_collector_loops_challenge1_2018: '这次你的模块有限。得到所有的宝藏! '
      courseB_collector_loops_challenge1_2019: '这次你的模块有限。得到所有的宝藏! '
      courseB_collector_loops_challenge2: 让我们去拿宝藏吧! 帮助我越过每一行, 然后回来开始下一行。你能找到规律吗？
      courseB_collector_loops_challenge2a: 帮助罗瑞尔获得至少**5**份财宝来通过这关。
      courseB_collector_loops_challenge2a_2018: 帮助罗瑞尔获得至少**5**份财宝来通过这关。
      courseB_collector_loops_challenge2a_2019: 帮助罗瑞尔获得至少**5**份财宝来通过这关。
      courseB_iceage_loops1: 帮助斯奎特穿过冰去拿到橡子！
      courseB_iceage_loops10: 帮助斯奎特走过去拿到橡子！
      courseB_iceage_loops10_2019: 帮助斯奎特走过去拿到橡子！
      courseB_iceage_loops11: 帮助斯奎特得到橡子！
      courseB_iceage_loops11_2019: 帮助斯奎特得到橡子！
      courseB_iceage_loops12: 用各种方法来拿到橡子！
      courseB_iceage_loops12_2019: 用各种方法来拿到橡子！
      courseB_iceage_loops1_2019: 帮助斯奎特穿过冰去拿到橡子！
      courseB_iceage_loops2: 用两个不同的移动模块来获得橡子！
      courseB_iceage_loops2_2019: 用两个不同的移动模块来获得橡子！
      courseB_iceage_loops3: 你能只用一个`W`模块来得到橡子吗？
      courseB_iceage_loops3_2019: 你能只用一个`W`模块来得到橡子吗？
      courseB_iceage_loops4: 再添加一个模块来让斯奎特用各种方法到达橡子！
      courseB_iceage_loops4_2019: 再添加一个模块来让斯奎特用各种方法到达橡子！
      courseB_iceage_loops6: 你能增加一个循环到达橡子吗？
      courseB_iceage_loops6_2019: 你能增加一个循环到达橡子吗？
      courseB_iceage_loops7: 斯奎特真的想要那个橡子！
      courseB_iceage_loops7_2019: 斯奎特真的想要那个橡子！
      courseB_iceage_loops8: '你能修好这段代码吗？ '
      courseB_iceage_loops8_2019: '你能修好这段代码吗？ '
      courseB_iceage_loops9: 橡子太远了！你能用循环帮助斯奎特到达那里吗？
      courseB_iceage_loops9_2019: 橡子太远了！你能用循环帮助斯奎特到达那里吗？
      courseB_maze_seq1: "玩一玩这些模块, 看看他们能让小鸟做什么吧! \n\n把鸟送到猪那里来完成这关。"
      courseB_maze_seq10: 修复缺陷，让鸟到猪那。
      courseB_maze_seq10_2018: 修复缺陷，来帮助斯奎特到达橡子。
      courseB_maze_seq10_2019: 修复缺陷，来帮助斯奎特到达橡子。
      courseB_maze_seq11: 都靠你了！让小鸟到达猪那里。
      courseB_maze_seq11_2018: 都靠你了！让斯奎特得到橡子。
      courseB_maze_seq11_2019: 都靠你了！让斯奎特得到橡子。
      courseB_maze_seq12: 现在不管用什么办法，抓到那头猪!
      courseB_maze_seq12_2018: 现在不管用什么办法，抓到那头猪!
      courseB_maze_seq12_2019: 现在不管用什么办法，抓到那头猪!
      courseB_maze_seq1_2018: "玩一玩这些模块, 看看他们能让斯奎特做什么吧! \n\n把斯奎特送到橡子那里来完成这关。"
      courseB_maze_seq1_2019: "玩一玩这些模块, 看看他们能让斯奎特做什么吧! \n\n把斯奎特送到橡子那里来完成这关。"
      courseB_maze_seq2: "\"有错误! 修复代码把我带到猪那里。\\*"
      courseB_maze_seq3: '"修复代码来让我到达那只猪！"'
      courseB_maze_seq4: 添加两个模块, 让鸟到猪那。
      courseB_maze_seq4_2018: 添加**两个**移动模块, 让斯奎特到达橡子那里。
      courseB_maze_seq4_2019: 添加**两个**移动模块, 让斯奎特到达橡子那里。
      courseB_maze_seq5: 现在从开始试试这一关！
      courseB_maze_seq5_2018: 这一关有点棘手！
      courseB_maze_seq5_2019: 这一关有点棘手！
      courseB_maze_seq6: 往一条路走，然后走另一条把鸟带到猪那里！
      courseB_maze_seq6_2018: 向一个方向移动，然后往另一个方向移动来帮鸟到达猪那里！
      courseB_maze_seq6_2019: 向一个方向移动，然后往另一个方向移动来帮鸟到达猪那里！
      courseB_maze_seq7: 想想这里缺了什么，然后添加模块让鸟到达那只猪那！
      courseB_maze_seq7_2018: 想想这里缺了什么，然后添加模块让鸟到达那只猪那！
      courseB_maze_seq7_2019: 想想这里缺了什么，然后添加模块让鸟到达那只猪那！
      courseB_maze_seq8: 该你了！ 你要怎么做才能把鸟送到猪那里？
      courseB_maze_seq8_2018: 该你了！ 你要怎么做才能把斯奎特送到橡子那里？
      courseB_maze_seq8_2019: 该你了！ 你要怎么做才能把斯奎特送到橡子那里？
      courseB_maze_seq9: '挑战: 绕开TNT炸药, 让鸟到达猪那里。'
      courseB_maze_seq9_2018: '挑战: 绕开破冰，让斯奎特到达橡子那里。'
      courseB_maze_seq9_2019: '挑战: 绕开破冰，让斯奎特到达橡子那里。'
      courseB_maze_seq_challenge1: 在你用完所有模块之前, 你能找到一条路吗？
      courseB_maze_seq_challenge1_2018: 在你用完所有模块之前, 你能找到一条路吗？
      courseB_maze_seq_challenge1_2019: 在你用完所有模块之前, 你能找到一条路吗？
      courseB_maze_seq_challenge2: 调试本关卡。这些模块是正确的, 但他们的顺序错了!
      courseB_maze_seq_challenge2_2018: 调试本关卡。这些模块是正确的, 但他们的顺序错了!
      courseB_maze_seq_challenge2_2019: 调试本关卡。这些模块是正确的, 但他们的顺序错了!
      courseB_playLab_events1: 看看你是否明白每个方块是做什么的。
      courseB_playLab_events1_2018: 看看你是否明白每个方块是做什么的。
      courseB_playLab_events1_2019: 看看你是否明白每个方块是做什么的。
      courseB_playlab_events2: 当你点击"运行"时，让黛西龙说点什么。
      courseB_playlab_events2_2018: 当你点击"运行"时，让黛西龙说点什么。
      courseB_playlab_events2_2019: 当你点击"运行"时，让黛西龙说点什么。
      courseB_playlab_events3: 使用事件在你点击她的时候，让黛西龙切换到随机的心情。
      courseB_playlab_events3_2018: 使用事件在你点击她的时候，让黛西龙切换到随机的心情。
      courseB_playlab_events3_2019: 使用事件在你点击她的时候，让黛西龙切换到随机的心情。
      courseB_playlab_events4: 骑士时间到了！添加一个事件, 当左箭头被点击的时候让骑士移向龙。
      courseB_playlab_events4_2018: 让龙完成这一关！
      courseB_playlab_events4_2019: 让龙完成这一关！
      courseB_playlab_events5: 现在添加一个事件，当你按下右箭头时，让骑士跑离龙。
      courseB_playlab_events5_2018: 添加一个事件，当你按下右箭头时，让骑士跑离龙。
      courseB_playlab_events5_2019: 添加一个事件，当你按下右箭头时，让骑士跑离龙。
      courseB_playlab_events6: |-
        帮助你的骑士得到所有的旗帜！

        要做到这个，你需要添加事件来帮助骑士上下左右移动。
      courseB_playlab_events6_2018: |-
        帮助你的骑士得到所有的旗帜！

        要做到这个，你需要添加事件来帮助骑士上下左右移动。
      courseB_playlab_events6_2019: |-
        帮助你的骑士得到所有的旗帜！

        要做到这个，你需要添加事件来帮助骑士上下左右移动。
      courseB_playlab_events7: 让这个游戏有趣，设置骑士在去往旗子的路上碰到龙的时候消失！当他们碰撞时播放声音使感觉更真实。
      courseB_playlab_events7_2018: "1.  设置骑士，让他碰到龙时消失。 \n2.  当他们碰撞时播放声音，这样感觉更真实。
        \ "
      courseB_playlab_events7_2019: "1.  设置骑士，让他碰到龙时消失。 \n2.  当他们碰撞时播放声音，这样感觉更真实。
        \ "
      courseB_playlab_eventsFP: 运用你的想象力。你能做些什么让这个游戏更有趣？
      courseB_playlab_eventsFP_2018: "**自由发挥：** 运用你的想象力。你能做些什么让这个游戏更有趣？"
      courseB_playlab_eventsFP_2019: "**自由发挥：** 运用你的想象力。你能做些什么让这个游戏更有趣？"
      courseB_playlab_events_challenge1: '当你按下时, 让动物们往下移动。 '
      courseB_playlab_events_challenge1_2018: '当你按下时, 让动物们往下移动。 '
      courseB_playlab_events_challenge1_2019: '当你按下时, 让动物们往下移动。 '
      courseB_playlab_events_challenge2: 当点击动物时，让它们消失。
      courseB_playlab_events_challenge2_2018: 当点击动物时，让它们消失。
      courseB_playlab_events_challenge2_2019: 当点击动物时，让它们消失。
      courseB_starWars_prog1: "\"去收集废金属, BB-8!”"
      courseB_starWars_prog10: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog10_2018: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog10_2019: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog11: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog11_2018: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog11_2019: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog1_2018: "\"去收集废金属, BB-8!”"
      courseB_starWars_prog1_2019: "\"去收集废金属, BB-8!”"
      courseB_starWars_prog2: 把所有的金属都收集起来。
      courseB_starWars_prog2_2018: 把所有的金属都收集起来。
      courseB_starWars_prog2_2019: 把所有的金属都收集起来。
      courseB_starWars_prog3: 得到所有的废金属
      courseB_starWars_prog3_2018: 得到所有的废金属
      courseB_starWars_prog3_2019: 得到所有的废金属
      courseB_starWars_prog4: 得到所有的废金属
      courseB_starWars_prog4_2018: 得到所有的废金属
      courseB_starWars_prog4_2019: 得到所有的废金属
      courseB_starWars_prog5: 获取废旧金属
      courseB_starWars_prog5_2018: 获取废旧金属
      courseB_starWars_prog5_2019: 获取废旧金属
      courseB_starWars_prog6: 得到所有的废金属
      courseB_starWars_prog6_2018: 得到所有的废金属
      courseB_starWars_prog6_2019: 得到所有的废金属
      courseB_starWars_prog7: 去拿!
      courseB_starWars_prog7_2018: 去拿!
      courseB_starWars_prog7_2019: 去拿!
      courseB_starWars_prog8: "\\*\\* 挑战: \\*\\* 帮助 BB-8 收集发光的废旧金属"
      courseB_starWars_prog8_2018: "\\*\\* 挑战: \\*\\* 帮助 BB-8 收集发光的废旧金属"
      courseB_starWars_prog8_2019: "\\*\\* 挑战: \\*\\* 帮助 BB-8 收集发光的废旧金属"
      courseB_starWars_prog9: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog9_2018: 帮助 BB-8 收集发光的废旧金属
      courseB_starWars_prog9_2019: 帮助 BB-8 收集发光的废旧金属
      courseC19_playLab_EOC1: 选择一个背景和地图，然后选择一个演员来作为你的游戏里的英雄。
      courseC19_playLab_EOC2: 用事件处理函数和行动来帮助你的英雄移动。
      courseC19_playLab_EOC3: 添加两个或更多的演员到你的游戏中，并让它们移动。
      courseC19_playLab_EOC4: 找一些有趣的方法来改变游戏的分数。让分数不为零，然后再继续。
      courseC19_playLab_EOC5: 现在，花一些时间来让游戏按照你想的方式运行。包括游戏失败或胜利的方法，然后玩游戏，直到某个条件达成。
      courseC19_playLab_EOC6: 完成了！现在你可以玩自己的游戏，或者分享给你的朋友或同学了！
      courseC_PlayLab_events1: 让乔治狗 (演员 1) 说 "大家好。“
      courseC_PlayLab_events1_2018: 让乔治狗 (演员 1) 说 "大家好。“
      courseC_PlayLab_events1_2019: 让乔治狗 (演员 1) 说 "大家好。“
      courseC_PlayLab_events2: 你能让乔治狗 (演员 1) 说点什么, 然后让奥丽芙 (演员 2) 接着说些什么吗？
      courseC_PlayLab_events2_2018: 你能让乔治狗 (演员 1) 说点什么, 然后让奥丽芙 (演员 2) 接着说些什么吗？
      courseC_PlayLab_events2_2019: 你能让乔治狗 (演员 1) 说点什么, 然后让奥丽芙 (演员 2) 接着说些什么吗？
      courseC_PlayLab_events3: 你可以写一个程序来将乔治（演员1）移动到奥丽芙猫那里吗？
      courseC_PlayLab_events3_2018: 你可以写一个程序来将乔治（演员1）移动到奥丽芙猫那里吗？
      courseC_PlayLab_events3_2019: 你可以写一个程序来将乔治（演员1）移动到奥丽芙猫那里吗？
      courseC_PlayLab_events4: 你能写一个程序让乔治 (演员 1) 移到奥丽芙猫那里, 并在乔治到的时候让奥丽芙说 "你好"？
      courseC_PlayLab_events4_2018: 你能写一个程序让乔治 (演员 1) 移到奥丽芙猫那里, 并在乔治到的时候让奥丽芙说 "你好"？
      courseC_PlayLab_events4_2019: 你能写一个程序让乔治 (演员 1) 移到奥丽芙猫那里, 并在乔治到的时候让奥丽芙说 "你好"？
      courseC_PlayLab_events5: 你能写一个程序让章鱼奥克塔维亚在被点击的时候说 "有什么新鲜事吗？"？
      courseC_PlayLab_events5_2018: 你能写一个程序让章鱼奥克塔维亚在被点击的时候说 "有什么新鲜事吗？"？
      courseC_PlayLab_events5_2019: 你能写一个程序让章鱼奥克塔维亚在被点击的时候说 "有什么新鲜事吗？"？
      courseC_PlayLab_events6: 现在，写一个程序让企鹅四处移动，使用上/下/左/右键命中所有目标！
      courseC_PlayLab_events6_2018: 现在，写一个程序让企鹅四处移动，使用上/下/左/右键命中所有目标！
      courseC_PlayLab_events6_2019: 现在，写一个程序让企鹅四处移动，使用上/下/左/右键命中所有目标！
      courseC_PlayLab_events7: "`一直重复` 模块允许你一次又一次一直运行代码。使用这个模块让恐龙迪诺 (演员 2) 一直上下移动400像素。"
      courseC_PlayLab_events7_2018: "`一直重复` 模块允许你一次又一次一直运行代码。使用这个模块让恐龙迪诺 (演员 2) 一直上下移动400像素。"
      courseC_PlayLab_events7_2019: "`一直重复` 模块允许你一次又一次一直运行代码。使用这个模块让恐龙迪诺 (演员 2) 一直上下移动400像素。"
      courseC_PlayLab_events8: |-
        你能让企鹅 (演员 1) 在碰到恐龙时播放 "命中" 的声音并说 "哎呀!”吗？
        当你完成的时候，玩游戏来试试。
      courseC_PlayLab_events8_2018: |-
        你能让企鹅 (演员 1) 在碰到恐龙时播放 "命中" 的声音并说 "哎呀!”吗？
        当你完成的时候，玩游戏来试试。
      courseC_PlayLab_events8_2019: |-
        你能让企鹅 (演员 1) 在碰到恐龙时播放 "命中" 的声音并说 "哎呀!”吗？
        当你完成的时候，玩游戏来试试。
      courseC_PlayLab_events9: |-
        你可以添加一个模块让企鹅（演员1）在碰到章鱼奥克塔维亚（演员3）的时候得一分吗？
        玩此游戏，用箭头移动企鹅直到得分！
      courseC_PlayLab_events9_2018: |-
        你可以添加一个模块让企鹅（演员1）在碰到章鱼奥克塔维亚（演员3）的时候得一分吗？
        玩此游戏，用箭头移动企鹅直到得分！
      courseC_PlayLab_events9_2019: |-
        你可以添加一个模块让企鹅（演员1）在碰到章鱼奥克塔维亚（演员3）的时候得一分吗？
        玩此游戏，用箭头移动企鹅直到得分！
      courseC_PlayLab_eventsA: |-
        添加模块到`当运行时`事件来更改背景场面以及企鹅的速度。

        玩此游戏，用箭头移动企鹅直到得分。
      courseC_PlayLab_eventsA_2018: |-
        添加模块到`当运行时`事件来更改背景场面以及企鹅的速度。

        玩此游戏，用箭头移动企鹅直到得分。
      courseC_PlayLab_eventsA_2019: |-
        添加模块到`当运行时`事件来更改背景场面以及企鹅的速度。

        玩此游戏，用箭头移动企鹅直到得分。
      courseC_PlayLab_eventsA_embed_2019: 让我们玩个游戏。当把企鹅挪到章鱼那里时，得到5分。
      courseC_PlayLab_eventsFP: 创造你自己的故事。完成后, 单击 "完成" 以与朋友共享。在提示中有故事的想法。
      courseC_PlayLab_eventsFP_2018: 创造你自己的故事。完成后, 单击 "完成" 以与朋友共享。在提示中有故事的想法。
      courseC_PlayLab_eventsFP_2019: 创造你自己的故事。完成后, 单击 "完成" 以与朋友共享。在提示中有故事的想法。
      courseC_PlayLab_events_challenge1: |-
        用一块新模块，让企鹅在碰到恐龙和得分的时候能自动回到原点。
        玩这个游戏，并用箭头移动企鹅，直到你得到足够的分数。
      courseC_PlayLab_events_challenge1_2018: |-
        用一块新模块，让企鹅在碰到恐龙和得分的时候能自动回到原点。
        玩这个游戏，并用箭头移动企鹅，直到你得到足够的分数。
      courseC_PlayLab_events_challenge1_2019: |-
        用一块新模块，让企鹅在碰到恐龙和得分的时候能自动回到原点。
        玩这个游戏，并用箭头移动企鹅，直到你得到足够的分数。
      courseC_artist_loop1: 让我们添加一些活泼的东西!
      courseC_artist_loop1_2018: 让我们添加一些活泼的东西!
      courseC_artist_loop1_2019: 让我们添加一些活泼的东西!
      courseC_artist_loops1a: '把艺术家带到游戏区的中心, 然后用贴纸画一只鸟。 '
      courseC_artist_loops1a_2018: '把艺术家带到游戏区的中心, 然后用贴纸画一只鸟。 '
      courseC_artist_loops1a_2019: '把艺术家带到游戏区的中心, 然后用贴纸画一只鸟。 '
      courseC_artist_loops1b_2019: '在代码中用“旋转/turn”命令，修改你的贴纸的朝向。 '
      courseC_artist_loops2a: 现在, 用一个循环旋转你的鸟大约12次, 每次转30度。
      courseC_artist_loops2a_2018: 现在, 用一个循环旋转你的鸟大约12次, 每次转30度。
      courseC_artist_loops2a_2019: 现在，使用循环来创建更多的同样的贴纸。 尝试更改旋转的角度和重复的次数，以生成不同的图案。
      courseC_artist_loops3a: 现在添加一只蝙蝠!
      courseC_artist_loops3a_2018: 现在添加一只蝙蝠!
      courseC_artist_loops3a_2019: 现在添加一只蝙蝠!
      courseC_artist_loops4a: 尝试向前跳跃75像素。
      courseC_artist_loops4a_2018: 尝试向前跳跃75像素。
      courseC_artist_loops4a_2019: 尝试向前跳跃75像素。
      courseC_artist_loops5a: 尝试新的贴纸!
      courseC_artist_loops5a_2018: 尝试新的贴纸!
      courseC_artist_loops5a_2019: 尝试新的贴纸!
      courseC_artist_loops5b: 尝试添加线条!
      courseC_artist_loops5b_2018: 尝试添加线条!
      courseC_artist_loops5b_2019: 尝试添加线条!
      courseC_artist_loops6a: 添加另一个标签!
      courseC_artist_loops6a_2018: 添加另一个标签!
      courseC_artist_loops6a_2019: 添加另一个标签!
      courseC_artist_loops7a: 操练循环和角度。
      courseC_artist_loops7a_2018: 操练循环和角度。
      courseC_artist_loops7a_2019: 操练循环和角度。
      courseC_artist_loops8a: 现在尝试自己练习!
      courseC_artist_loops8a_2018: 现在尝试自己练习!
      courseC_artist_loops8a_2019: 现在尝试自己练习!
      courseC_artist_loopsPre1a: 是时候把那条线转过来了!
      courseC_artist_loopsPre1a_2018: 是时候把那条线转过来了!
      courseC_artist_loopsPre1a_2019: 是时候把那条线转过来了!
      courseC_artist_loopsPrePre1a: '把艺术家带到游戏区的中心, 然后画一条线。 '
      courseC_artist_loopsPrePre1a_2018: '把艺术家带到游戏区的中心, 然后画一条线。 '
      courseC_artist_loopsPrePre1a_2019: '把艺术家带到游戏区的中心, 然后画一条线。 '
      courseC_artist_prog1: 试试工具箱里的模块看他们能做什么！
      courseC_artist_prog1_2018: 试试工具箱里的模块看他们能做什么！
      courseC_artist_prog1_2019: 试试工具箱里的模块看他们能做什么！
      courseC_artist_prog2: 将模块拖到屏幕上，让艺术家在图中灰色线上画线。(每行100像素长)
      courseC_artist_prog2_2018: 将模块拖到屏幕上，让艺术家在图中灰色线上画线。(每行100像素长)
      courseC_artist_prog2_2019: 将模块拖到屏幕上，让艺术家在图中灰色线上画线。(每行100像素长)
      courseC_artist_prog3: 内部的正方形每条边是100像素，所有的角都是90度。
      courseC_artist_prog3_2018: 内部的正方形每条边是100像素，所有的角都是90度。
      courseC_artist_prog3_2019: 内部的正方形每条边是100像素，所有的角都是90度。
      courseC_artist_prog4: 完成斯黛拉的火箭, 这样她就可以追逐她的宠物。
      courseC_artist_prog4_2018: 完成斯黛拉的火箭, 这样她就可以追逐她的宠物。
      courseC_artist_prog4_2019: 完成斯黛拉的火箭, 这样她就可以追逐她的宠物。
      courseC_artist_prog5: |-
        沿外部绘制一个矩形来完成此捉人游戏。
        （长边200像素，短边100像素）
      courseC_artist_prog5_2018: |-
        沿外部绘制一个矩形来完成此捉人游戏。
        （长边200像素，短边100像素）
      courseC_artist_prog5_2019: |-
        沿外部绘制一个矩形来完成此捉人游戏。
        （长边200像素，短边100像素）
      courseC_artist_prog6: 绘制200像素边的菱形。
      courseC_artist_prog6_2018: 绘制200像素边的菱形。
      courseC_artist_prog6_2019: 绘制200像素边的菱形。
      courseC_artist_prog7: "\\*\\* 挑战: \\*\\* 这个捉人游戏很特别! 你能想出如何画边框吗？"
      courseC_artist_prog7_2018: "\\*\\* 挑战: \\*\\* 这个捉人游戏很特别! 你能想出如何画边框吗？"
      courseC_artist_prog7_2019: "\\*\\* 挑战: \\*\\* 这个捉人游戏很特别! 你能想出如何画边框吗？"
      courseC_artist_prog8: |-
        再来一个捉人游戏。这是一个派的三角形。
        （每边为150像素）
      courseC_artist_prog8_2018: |-
        再来一个捉人游戏。这是一个派的三角形。
        （每边为150像素）
      courseC_artist_prog8_2019: |-
        再来一个捉人游戏。这是一个派的三角形。
        （每边为150像素）
      courseC_artist_prog_challenge1: '为每种动物绘制房间。 '
      courseC_artist_prog_challenge1_2018: '为每种动物绘制房间。 '
      courseC_artist_prog_challenge1_2019: '为每种动物绘制房间。 '
      courseC_artist_prog_challenge2a: _"帮我在这条路上画黄线!"_
      courseC_artist_prog_challenge2a_2018: _"帮我在这条路上画黄线!"_
      courseC_artist_prog_challenge2a_2019: _"帮我在这条路上画黄线!"_
      courseC_collector_loops_challenge2: 得到至少**5**个宝藏!
      courseC_collector_loops_challenge2_2018: 得到至少**5**个宝藏!
      courseC_collector_loops_challenge2_2019: 得到至少**5**个宝藏!
      courseC_collector_prog1: 试试这些模块，看看你能不能帮助罗瑞尔收集一些宝藏。
      courseC_collector_prog1_2018: 试试这些模块，看看你能不能帮助罗瑞尔收集一些宝藏。
      courseC_collector_prog1_2019: 试试这些模块，看看你能不能帮助罗瑞尔收集一些宝藏。
      courseC_collector_prog2: 把罗瑞尔移到宝藏上, 然后用 "收藏" 来捡起来。
      courseC_collector_prog2_2018: 把罗瑞尔移到宝藏上, 然后用 "收藏" 来捡起来。
      courseC_collector_prog2_2019: 把罗瑞尔移到宝藏上, 然后用 "收藏" 来捡起来。
      courseC_collector_prog3: 排列这些模块收集宝藏并通过此关卡。
      courseC_collector_prog3_2018: 排列这些模块收集宝藏并通过此关卡。
      courseC_collector_prog3_2019: 排列这些模块收集宝藏并通过此关卡。
      courseC_collector_prog4: 排列这些模块来收集所有的宝藏并通过此关卡。
      courseC_collector_prog4_2018: 排列这些模块来收集所有的宝藏并通过此关卡。
      courseC_collector_prog4_2019: 排列这些模块来收集所有的宝藏并通过此关卡。
      courseC_collector_prog5: 这些模块的顺序不对。你能修好它们吗？
      courseC_collector_prog5_2018: 这些模块的顺序不对。你能修好它们吗？
      courseC_collector_prog5_2019: 这些模块的顺序不对。你能修好它们吗？
      courseC_collector_prog6: 重新排列模块来收集所有的宝藏。
      courseC_collector_prog6_2018: 重新排列模块来收集所有的宝藏。
      courseC_collector_prog6_2019: 重新排列模块来收集所有的宝藏。
      courseC_collector_prog7: 使用工具箱中的模块来收集所有的宝藏。
      courseC_collector_prog7_2018: 使用工具箱中的模块来收集所有的宝藏。
      courseC_collector_prog7_2019: 使用工具箱中的模块来收集所有的宝藏。
      courseC_collector_prog8: _"继续保持良好的工作! 帮我收集所有的宝藏。“_
      courseC_collector_prog8_2018: _"继续保持良好的工作! 帮我收集所有的宝藏。“_
      courseC_collector_prog8_2019: _"继续保持良好的工作! 帮我收集所有的宝藏。“_
      courseC_collector_prog9: _"让我们得到所有的宝藏!_
      courseC_collector_prog9_2018: _"让我们得到所有的宝藏!_
      courseC_collector_prog9_2019: _"让我们得到所有的宝藏!_
      courseC_collector_prog_challenge1: 仔细看! 你能收集所有 **10** 块宝藏吗？
      courseC_collector_prog_challenge1_2018: 仔细看! 你能收集所有 **10** 块宝藏吗？
      courseC_collector_prog_challenge1_2019: 仔细看! 你能收集所有 **10** 块宝藏吗？
      courseC_collector_prog_challenge2: 收集至少**10**个宝藏完成这一挑战!
      courseC_collector_prog_challenge2_2018: 收集至少**10**个宝藏完成这一挑战!
      courseC_collector_prog_challenge2_2019: 收集至少**10**个宝藏完成这一挑战!
      courseC_data wizard: "点击 运行/run. \n向导会让动物们显示出来。\n\n数一下，你发现了多少个？"
      courseC_flappy_events1: 将 "拍打正常数量" 块附加到 "单击时" 情景, 然后按 "运行"。单击或点击播放空间, 将像素鸟移动到目的地。
      courseC_flappy_events10: '创建自己的像素鸟游戏! '
      courseC_flappy_events10_2018: '创建自己的像素鸟游戏! '
      courseC_flappy_events10_2019: '创建自己的像素鸟游戏! '
      courseC_flappy_events1_2018: 将 "拍打正常数量" 块附加到 "单击时" 情景, 然后按 "运行"。单击或点击播放空间, 将像素鸟移动到目的地。
      courseC_flappy_events1_2019: 将 "拍打正常数量" 块附加到 "单击时" 情景, 然后按 "运行"。单击或点击播放空间, 将像素鸟移动到目的地。
      courseC_flappy_events2: 在按下 "运行" 按钮时, 尝试添加一个设置速度级别的模块。 玩游戏并飞到目的地来继续。
      courseC_flappy_events2_2018: 在按下 "运行" 按钮时, 尝试添加一个设置速度级别的模块。 玩游戏并飞到目的地来继续。
      courseC_flappy_events2_2019: 在按下 "运行" 按钮时, 尝试添加一个设置速度级别的模块。 玩游戏并飞到目的地来继续。
      courseC_flappy_events3: 附加 ' 结束游戏 ' 块到 ' 当击中地面 ' 时的下面。  玩游戏, 把小鸟撞向地面来继续。
      courseC_flappy_events3_2018: 附加 ' 结束游戏 ' 块到 ' 当击中地面 ' 时的下面。  玩游戏, 把小鸟撞向地面来继续。
      courseC_flappy_events3_2019: 附加 ' 结束游戏 ' 块到 ' 当击中地面 ' 时的下面。  玩游戏, 把小鸟撞向地面来继续。
      courseC_flappy_events4: 附加一个块到 ' 当击中障碍 ' 事件中，以便在像素鸟撞到第一条管道时，游戏结束。
      courseC_flappy_events4_2018: 附加一个块到 ' 当击中障碍 ' 事件中，以便在像素鸟撞到第一条管道时，游戏结束。
      courseC_flappy_events4_2019: 附加一个块到 ' 当击中障碍 ' 事件中，以便在像素鸟撞到第一条管道时，游戏结束。
      courseC_flappy_events5: 在 "通过障碍" 情况时添加一个块, 然后等像素鸟飞过第一组管道的时候，按 "运行" 得一分。
      courseC_flappy_events5_2018: 在 "通过障碍" 情况时添加一个块, 然后等像素鸟飞过第一组管道的时候，按 "运行" 得一分。
      courseC_flappy_events5_2019: 在 "通过障碍" 情况时添加一个块, 然后等像素鸟飞过第一组管道的时候，按 "运行" 得一分。
      courseC_flappy_events6: 看你是否可以在每次你点击的时候，让像素鸟拍打更大或更小的距离，来得分。
      courseC_flappy_events6_2018: 看你是否可以在每次你点击的时候，让像素鸟拍打更大或更小的距离，来得分。
      courseC_flappy_events6_2019: 看你是否可以在每次你点击的时候，让像素鸟拍打更大或更小的距离，来得分。
      courseC_flappy_events7: 接下来, 尝试通过将一个模块附加到 "运行时" 事件来更改场景。
      courseC_flappy_events7_2018: 接下来, 尝试通过将一个模块附加到 "运行时" 事件来更改场景。
      courseC_flappy_events7_2019: 接下来, 尝试通过将一个模块附加到 "运行时" 事件来更改场景。
      courseC_flappy_events8: 当其他事件发生时, 尝试设置一个 **随机** 场景.....比如，当通过一个障碍物时。
      courseC_flappy_events8_2018: 当其他事件发生时, 尝试设置一个 **随机** 场景.....比如，当通过一个障碍物时。
      courseC_flappy_events8_2019: 当其他事件发生时, 尝试设置一个 **随机** 场景.....比如，当通过一个障碍物时。
      courseC_flappy_events9: 把事情混合起来, 在像素鸟击倒障碍物的时候不是让游戏停止，试着把分数归零。
      courseC_flappy_events9_2018: 把事情混合起来, 在像素鸟击倒障碍物的时候不是让游戏停止，试着把分数归零。
      courseC_flappy_events9_2019: 把事情混合起来, 在像素鸟击倒障碍物的时候不是让游戏停止，试着把分数归零。
      courseC_harvester_loops1: 使用循环来捡起所有的南瓜。
      courseC_harvester_loops10: 收集所有玉米和南瓜。
      courseC_harvester_loops10_2018: 收集所有玉米和南瓜。
      courseC_harvester_loops10_2019: 收集所有玉米和南瓜。
      courseC_harvester_loops11: 收集所有玉米和南瓜。
      courseC_harvester_loops11_2018: 收集所有玉米和南瓜。
      courseC_harvester_loops11_2019: 收集所有玉米和南瓜。
      courseC_harvester_loops1_2018: 使用循环来捡起所有的南瓜。
      courseC_harvester_loops1_2019: 使用循环来捡起所有的南瓜。
      courseC_harvester_loops2: 你能混合两个不同的循环来朝着南瓜移动，并收集它们吗？
      courseC_harvester_loops2_2018: 你能混合两个不同的循环来朝着南瓜移动，并收集它们吗？
      courseC_harvester_loops2_2019: 你能混合两个不同的循环来朝着南瓜移动，并收集它们吗？
      courseC_harvester_loops3: 收集所有南瓜。
      courseC_harvester_loops3_2018: 收集所有南瓜。
      courseC_harvester_loops3_2019: 收集所有南瓜。
      courseC_harvester_loops4: 收集所有玉米和南瓜。
      courseC_harvester_loops4_2018: 收集所有玉米和南瓜。
      courseC_harvester_loops4_2019: 收集所有玉米和南瓜。
      courseC_harvester_loops5: 收集所有玉米和南瓜。
      courseC_harvester_loops5_2018: 收集所有玉米和南瓜。
      courseC_harvester_loops5_2019: 收集所有玉米和南瓜。
      courseC_harvester_loops6: 收集所有玉米和南瓜。
      courseC_harvester_loops6_2018: 收集所有玉米和南瓜。
      courseC_harvester_loops6_2019: 收集所有玉米和南瓜。
      courseC_harvester_loops7: 收集所有玉米和南瓜。
      courseC_harvester_loops7_2018: 收集所有玉米和南瓜。
      courseC_harvester_loops7_2019: 收集所有玉米和南瓜。
      courseC_harvester_loops8: "**挑战：**收集所有玉米和南瓜。"
      courseC_harvester_loops8_2018: "**挑战：**收集所有玉米和南瓜。"
      courseC_harvester_loops8_2019: "**挑战：**收集所有玉米和南瓜。"
      courseC_harvester_loops9: 收集所有玉米和南瓜。
      courseC_harvester_loops9_2018: 收集所有玉米和南瓜。
      courseC_harvester_loops9_2019: 收集所有玉米和南瓜。
      courseC_harvester_loops_challenge1a: 收集所有的玉米。
      courseC_harvester_loops_challenge1a_2018: 收集所有的玉米。
      courseC_harvester_loops_challenge1a_2019: 收集所有的玉米。
      courseC_harvester_loops_challenge2: 收集所有的莴苣。避开树木和田野!
      courseC_harvester_loops_challenge2_2018: 收集所有的莴苣。避开树木和田野!
      courseC_harvester_loops_challenge2_2019: 收集所有的莴苣。避开树木和田野!
      courseC_maze_debugging1: 修好代码，来帮助斯奎特到达橡子。
      courseC_maze_debugging1_2018: 修好代码，来帮助斯奎特到达橡子。
      courseC_maze_debugging1_2019: 修好代码，来帮助斯奎特到达橡子。
      courseC_maze_debugging2: 用你的调试技能来帮助斯奎特到达橡子。
      courseC_maze_debugging2_2018: 用你的调试技能来帮助斯奎特到达橡子。
      courseC_maze_debugging2_2019: 用你的调试技能来帮助斯奎特到达橡子。
      courseC_maze_debugging3: 移除模块来帮助斯奎特到达橡子！
      courseC_maze_debugging3_2018: 移除模块来帮助斯奎特到达橡子！
      courseC_maze_debugging3_2019: 移除模块来帮助斯奎特到达橡子！
      courseC_maze_debugging4: 某些人的方向搞混了！你能帮忙吗？
      courseC_maze_debugging4_2018: 某些人的方向搞混了！你能帮忙吗？
      courseC_maze_debugging4_2019: 某些人的方向搞混了！你能帮忙吗？
      courseC_maze_debugging5: 通过重新排列和改动模块来调试这一关。
      courseC_maze_debugging5_2018: 通过重新排列和改动模块来调试这一关。
      courseC_maze_debugging5_2019: 通过重新排列和改动模块来调试这一关。
      courseC_maze_debugging6: 找出什么地方错了，并让斯奎特到达橡子。
      courseC_maze_debugging6_2018: 找出什么地方错了，并让斯奎特到达橡子。
      courseC_maze_debugging6_2019: 找出什么地方错了，并让斯奎特到达橡子。
      courseC_maze_debugging7: "\\*\\* 挑战: \\*\\* 通过重新排列，添加和删除模块来调试这关。"
      courseC_maze_debugging7_2018: "\\*\\* 挑战: \\*\\* 通过重新排列，添加和删除模块来调试这关。"
      courseC_maze_debugging7_2019: "\\*\\* 挑战: \\*\\* 通过重新排列，添加和删除模块来调试这关。"
      courseC_maze_debugging9: 调试这一关，让斯奎特到达橡子。
      courseC_maze_debugging9_2018: 调试这一关，让斯奎特到达橡子。
      courseC_maze_debugging9_2019: 调试这一关，让斯奎特到达橡子。
      courseC_maze_debugging_challenge1: 帮助斯奎特决定往哪条路转，才能得到橡子。
      courseC_maze_debugging_challenge1_2018: 帮助斯奎特决定往哪条路转，才能得到橡子。
      courseC_maze_debugging_challenge1_2019: 帮助斯奎特决定往哪条路转，才能得到橡子。
      courseC_maze_debugging_challenge2: 帮助斯奎特只用4次`转向`命令来获得橡子。
      courseC_maze_debugging_challenge2_2018: 帮助斯奎特只用4次`转向`命令来获得橡子。
      courseC_maze_debugging_challenge2_2019: 帮助斯奎特只用4次`转向`命令来获得橡子。
      courseC_maze_loops_challenge1a: '现在, 斯奎特想尝试使用循环来找到他的橡子! '
      courseC_maze_loops_challenge1a_2018: '现在, 斯奎特想尝试使用循环来找到他的橡子! '
      courseC_maze_loops_challenge1a_2019: '现在, 斯奎特想尝试使用循环来找到他的橡子! '
      courseC_maze_programming1: 对于这个关卡，把所有的方块拖在一起，并点击 "运行" 开始!
      courseC_maze_programming1_2018: 对于这个关卡，把所有的方块拖在一起，并点击 "运行" 开始!
      courseC_maze_programming1_2019: 对于这个关卡，把所有的方块拖在一起，并点击 "运行" 开始!
      courseC_maze_programming2: 从工具箱中拖出另一个`向前移动`模块来完成代码。
      courseC_maze_programming2_2018: 从工具箱中拖出另一个`向前移动`模块来完成代码。
      courseC_maze_programming2_2019: 从工具箱中拖出另一个`向前移动`模块来完成代码。
      courseC_maze_programming3: 有一个额外的块将导致鸟坠落。将其拖回工具箱中扔掉它。
      courseC_maze_programming3_2018: 有一个额外的块将导致鸟坠落。将其拖回工具箱中扔掉它。
      courseC_maze_programming3_2019: 有一个额外的块将导致鸟坠落。将其拖回工具箱中扔掉它。
      courseC_maze_programming4: 躲开TNT炸药，否则羽毛会被炸飞！
      courseC_maze_programming4_2018: 躲开TNT炸药，否则羽毛会被炸飞！
      courseC_maze_programming4_2019: 躲开TNT炸药，否则羽毛会被炸飞！
      courseC_maze_programming5: 躲开TNT炸药！
      courseC_maze_programming5_2018: 躲开TNT炸药！
      courseC_maze_programming5_2019: 躲开TNT炸药！
      courseC_maze_programming6: "\"保持冷静，帮助我找到那只坏猪。否则我会生气的!“"
      courseC_maze_programming6_2018: "\"保持冷静，帮助我找到那只坏猪。否则我会生气的!“"
      courseC_maze_programming6_2019: "\"保持冷静，帮助我找到那只坏猪。否则我会生气的!“"
      courseC_maze_programming7: "**挑战：**这个代码有很多雪线。你需要移除一些模块，然后再加上另一些。"
      courseC_maze_programming7_2018: "**挑战：**这个代码有很多雪线。你需要移除一些模块，然后再加上另一些。"
      courseC_maze_programming7_2019: "**挑战：**这个代码有很多雪线。你需要移除一些模块，然后再加上另一些。"
      courseC_maze_programming8: _"保持冷静，帮我找到那只坏猪。"_
      courseC_maze_programming8_2018: _"保持冷静，帮我找到那只坏猪。"_
      courseC_maze_programming8_2019: _"保持冷静，帮我找到那只坏猪。"_
      courseC_maze_programming8_predict1: _"保持冷静，帮我找到那只坏猪。"_
      courseC_maze_programming8_predict1_2018: _"保持冷静，帮我找到那只坏猪。"_
      courseC_maze_programming8_predict1_2019: _"保持冷静，帮我找到那只坏猪。"_
      courseC_maze_programming9: _"现在，用任何方法让我偷偷到达猪那里！"_
      courseC_maze_programming9_2018: _"现在，用任何方法让我偷偷到达猪那里！"_
      courseC_maze_programming9_2019: _"现在，用任何方法让我偷偷到达猪那里！"_
      courseC_maze_programming_challenge1: '猪藏起来了，目标是找到它。 '
      courseC_maze_programming_challenge1_2018: '猪藏起来了，目标是找到它。 '
      courseC_maze_programming_challenge1_2019: '猪藏起来了，目标是找到它。 '
      courseC_maze_programming_challenge2: 有时, 解决同一问题的方法不止一种。有时候向后走比前进快!
      courseC_maze_programming_challenge2_2018: 有时, 解决同一问题的方法不止一种。有时候向后走比前进快!
      courseC_maze_programming_challenge2_2019: 有时, 解决同一问题的方法不止一种。有时候向后走比前进快!
      courseC_starWars_loops1: BB-8 会在他通过的地方捡起任何金属废料。用同一个模块5次, 让 BB-8 捡起场地中所有的废旧金属。
      courseC_starWars_loops10: 你做得很好! 继续!
      courseC_starWars_loops10_2018: 你做得很好! 继续!
      courseC_starWars_loops10_2019: 你做得很好! 继续!
      courseC_starWars_loops10_predict2: 你做得很好! 继续!
      courseC_starWars_loops10_predict2_2018: 你做得很好! 继续!
      courseC_starWars_loops10_predict2_2019: 你做得很好! 继续!
      courseC_starWars_loops11: 快要成功了！这次，选择你喜欢的路！
      courseC_starWars_loops11_2018: 快要成功了！这次，选择你喜欢的路！
      courseC_starWars_loops11_2019: 快要成功了！这次，选择你喜欢的路！
      courseC_starWars_loops1_2018: BB-8 会在他通过的地方捡起任何金属废料。用同一个模块5次, 让 BB-8 捡起场地中所有的废旧金属。
      courseC_starWars_loops1_2019: BB-8 会在他通过的地方捡起任何金属废料。用同一个模块5次, 让 BB-8 捡起场地中所有的废旧金属。
      courseC_starWars_loops1_predict1: BB-8 会在他通过的地方捡起任何金属废料。用同一个模块5次, 让 BB-8 捡起场地中所有的废旧金属。
      courseC_starWars_loops1_predict1_2018: BB-8 会在他通过的地方捡起任何金属废料。用同一个模块5次, 让 BB-8
        捡起场地中所有的废旧金属。
      courseC_starWars_loops1_predict1_2019: BB-8 会在他通过的地方捡起任何金属废料。用同一个模块5次, 让 BB-8
        捡起场地中所有的废旧金属。
      courseC_starWars_loops2: 要获取所有的废金属, 请尝试创建一个在 "重复"模块内只有一个模块的循环。
      courseC_starWars_loops2_2018: 要获取所有的废金属, 请尝试创建一个在 "重复"模块内只有一个模块的循环。
      courseC_starWars_loops2_2019: 要获取所有的废金属, 请尝试创建一个在 "重复"模块内只有一个模块的循环。
      courseC_starWars_loops4: 在这个关卡中, 两个`重复`循环将帮你用最少的模块获得 BB-8 的所有金属废料。
      courseC_starWars_loops4_2018: 在这个关卡中, 两个`重复`循环将帮你用最少的模块获得 BB-8 的所有金属废料。
      courseC_starWars_loops4_2019: 在这个关卡中, 两个`重复`循环将帮你用最少的模块获得 BB-8 的所有金属废料。
      courseC_starWars_loops5: 让 BB-8 尽快拿起所有的废金属!
      courseC_starWars_loops5_2018: 让 BB-8 尽快拿起所有的废金属!
      courseC_starWars_loops5_2019: 让 BB-8 尽快拿起所有的废金属!
      courseC_starWars_loops6: 循环里能放多于一个模块！你能循环这个序列吗？
      courseC_starWars_loops6_2018: 循环里能放多于一个模块！你能循环这个序列吗？
      courseC_starWars_loops6_2019: 循环里能放多于一个模块！你能循环这个序列吗？
      courseC_starWars_loops7: 你能试着只用一个循环就能得到所有的废金属吗？尝试先把所有代码写出来出来, 然后找到重复的代码放入循环中。
      courseC_starWars_loops7_2018: 你能试着只用一个循环就能得到所有的废金属吗？尝试先把所有代码写出来出来, 然后找到重复的代码放入循环中。
      courseC_starWars_loops7_2019: 你能试着只用一个循环就能得到所有的废金属吗？尝试先把所有代码写出来出来, 然后找到重复的代码放入循环中。
      courseC_starWars_loops9: 用你所学的东西来捡起所有的废铁!
      courseC_starWars_loops9_2018: 用你所学的东西来捡起所有的废铁!
      courseC_starWars_loops9_2019: 用你所学的东西来捡起所有的废铁!
      courseD_artist_1_2018: 画一个**50**像素边长的六边形。
      courseD_artist_1_2018_2019: 画一个**50**像素边长的六边形。
      courseD_artist_2_2018: 现在，向右转**60**度，然后画一条**150**像素长的直线，并跳回到区域中心。
      courseD_artist_2_2018_2019: 现在，向右转**60**度，然后画一条**150**像素长的直线，并跳回到区域中心。
      courseD_artist_3_2018: '将所有代码嵌入到另一个`重复`循环中，并运行**6**次。 '
      courseD_artist_3_2018_2019: '将所有代码嵌入到另一个`重复`循环中，并运行**6**次。 '
      courseD_artist_4_2018: 在线的末尾增加一个小形状！
      courseD_artist_4_2018_2019: 在线的末尾增加一个小形状！
      courseD_artist_5_2018: 玩一玩雪花功能!
      courseD_artist_5_2018_2019: 玩一玩雪花功能!
      courseD_artist_6_2018: 画一个阶梯楼梯模式, 使用75和105度之间的角度来转弯。
      courseD_artist_6_2018_2019: 画一个阶梯楼梯模式, 使用75和105度之间的角度来转弯。
      courseD_artist_binary1: 用下面的模块来让小画家在第一行画出二进制字符串“01010101”。
      courseD_artist_binary1_2018: 用下面的模块来让小画家在第一行画出二进制字符串“01010101”。
      courseD_artist_binary1_2019: 用下面的模块来让小画家在第一行画出二进制字符串“01010101”。
      courseD_artist_binary2: 运行代码来看看小艺术家如何用二进制画出这幅图案。
      courseD_artist_binary2_2018: 运行代码来看看小艺术家如何用二进制画出这幅图案。
      courseD_artist_binary2_2019: 运行代码来看看小艺术家如何用二进制画出这幅图案。
      courseD_artist_binary3: 哪个二进制字符串能让你循环8次来画出这个图像？
      courseD_artist_binary3_2018: 哪个二进制字符串能让你循环8次来画出这个图像？
      courseD_artist_binary3_2019: 哪个二进制字符串能让你循环8次来画出这个图像？
      courseD_artist_binary4: 你能通过循环3个二进制位（0和1）来画出这个图形吗？
      courseD_artist_binary4_2018: 你能通过循环3个二进制位（0和1）来画出这个图形吗？
      courseD_artist_binary4_2019: 你能通过循环3个二进制位（0和1）来画出这个图形吗？
      courseD_artist_binary5: |-
        下面的每个二进制字符串表达了这个图片的一行。

        你能重新排列它们，用笑脸代替皱眉吗？
      courseD_artist_binary5_2018: |-
        下面的每个二进制字符串表达了这个图片的一行。

        你能重新排列它们，用笑脸代替皱眉吗？
      courseD_artist_binary5_2019: |-
        下面的每个二进制字符串表达了这个图片的一行。

        你能重新排列它们，用笑脸代替皱眉吗？
      courseD_artist_binary6: 哪个6位的二进制字符串重复11次后能够画出这个图形?
      courseD_artist_binary6_2018: 哪个6位的二进制字符串重复11次后能够画出这个图形?
      courseD_artist_binary6_2019: 哪个6位的二进制字符串重复11次后能够画出这个图形?
      courseD_artist_binary7: 能让你重复并画出这个图形的最短的二进制字符串是什么?
      courseD_artist_binary7_2018: 能让你重复并画出这个图形的最短的二进制字符串是什么?
      courseD_artist_binary7_2019: 能让你重复并画出这个图形的最短的二进制字符串是什么?
      courseD_artist_binary8: 完成代码来创建此图。
      courseD_artist_binary8_2018: 完成代码来创建此图。
      courseD_artist_binary8_2019: 完成代码来创建此图。
      courseD_artist_binary8_predict1: 完成代码来创建此图。
      courseD_artist_binary8_predict1_2018: 完成代码来创建此图。
      courseD_artist_binary8_predict1_2019: 完成代码来创建此图。
      courseD_artist_binaryFP: |-
        这是更高分辨率的画布 - 16像素乘以16像素！

        看看你用二进制位能创造出什么？
      courseD_artist_binaryFP8: "**自由发挥：**用二进制画出任何你想的！ "
      courseD_artist_binaryFP_2018: |-
        这是更高分辨率的画布 - 16像素乘以16像素！

        看看你用二进制位能创造出什么？
      courseD_artist_binaryFP_2019: |-
        这是更高分辨率的画布 - 16像素乘以16像素！

        看看你用二进制位能创造出什么？
      courseD_artist_binary_challenge1_2018: 在这个谜题中，您只能使用每个二进制值 (0或1) 一次。请尝试使用嵌套循环来画这幅图。
      courseD_artist_binary_challenge1_2019: 在这个谜题中，您只能使用每个二进制值 (0或1) 一次。请尝试使用嵌套循环来画这幅图。
      courseD_artist_binary_challenge2_2018: 你是否有足够的毅力让这个标志回到正常状态？
      courseD_artist_binary_challenge2_2019: 你是否有足够的毅力让这个标志回到正常状态？
      courseD_artist_nestedLoops1: |-
        画一个三角形来开始这个阶段。
        （每条边是100像素长，你需要在每个外角转120度。）
      courseD_artist_nestedLoops10: 从以前的代码里活动的正方形，但这次只需要7个，并将它们排成一行。
      courseD_artist_nestedLoops10_2018: 从以前的代码里活动的正方形，但这次只需要7个，并将它们排成一行。
      courseD_artist_nestedLoops10_2019: 从以前的代码里活动的正方形，但这次只需要7个，并将它们排成一行。
      courseD_artist_nestedLoops1_2018: |-
        画一个三角形来开始这个阶段。
        （每条边是100像素长，你需要在每个外角转120度。）
      courseD_artist_nestedLoops1_2019: |-
        画一个三角形来开始这个阶段。
        （每条边是100像素长，你需要在每个外角转120度。）
      courseD_artist_nestedLoops1a: 现在循环6次三角形。
      courseD_artist_nestedLoops1a_2018: 现在循环6次三角形。
      courseD_artist_nestedLoops1a_2019: 现在循环6次三角形。
      courseD_artist_nestedLoops2: 这次，用尽可能少的模块完成这关。
      courseD_artist_nestedLoops2_2018: 这次，用尽可能少的模块完成这关。
      courseD_artist_nestedLoops2_2019: 这次，用尽可能少的模块完成这关。
      courseD_artist_nestedLoops3: |-
        用你的新技能来快速的画出这个建筑物的最后一行窗户。

        窗户是20像素的正方形，每个之间相隔20像素。
      courseD_artist_nestedLoops3_2018: |-
        用你的新技能来快速的画出这个建筑物的最后一行窗户。

        窗户是20像素的正方形，每个之间相隔20像素。
      courseD_artist_nestedLoops3_2019: |-
        用你的新技能来快速的画出这个建筑物的最后一行窗户。

        窗户是20像素的正方形，每个之间相隔20像素。
      courseD_artist_nestedLoops4: 太好了！用这些圆圈做同样的事情。
      courseD_artist_nestedLoops4_2018: 太好了！用这些圆圈做同样的事情。
      courseD_artist_nestedLoops4_2019: 太好了！用这些圆圈做同样的事情。
      courseD_artist_nestedLoops5: 如果在圆圈之间你也转90度，会如何？
      courseD_artist_nestedLoops5_2018: 如果在圆圈之间你也转90度，会如何？
      courseD_artist_nestedLoops5_2019: 如果在圆圈之间你也转90度，会如何？
      courseD_artist_nestedLoops7: 用你学到的知识来创建这幅图。
      courseD_artist_nestedLoops7_2018: 用你学到的知识来创建这幅图。
      courseD_artist_nestedLoops7_2019: 用你学到的知识来创建这幅图。
      courseD_artist_nestedLoops8: 用你在前几关学到的，从头创建这幅图。
      courseD_artist_nestedLoops8_2018: 用你在前几关学到的，从头创建这幅图。
      courseD_artist_nestedLoops8_2019: 用你在前几关学到的，从头创建这幅图。
      courseD_artist_nestedLoops9: "\\*\\* 挑战: \\*\\* 你能想出如何制作这样的照片吗？"
      courseD_artist_nestedLoops9_2018: "\\*\\* 挑战: \\*\\* 你能想出如何制作这样的照片吗？"
      courseD_artist_nestedLoops9_2019: "\\*\\* 挑战: \\*\\* 你能想出如何制作这样的照片吗？"
      courseD_artist_nestedLoops9_predict1: "\\*\\* 挑战: \\*\\* 你能想出如何制作这样的照片吗？"
      courseD_artist_nestedLoops9_predict1_2018: "\\*\\* 挑战: \\*\\* 你能想出如何制作这样的照片吗？"
      courseD_artist_nestedLoops9_predict1_2019: "\\*\\* 挑战: \\*\\* 你能想出如何制作这样的照片吗？"
      courseD_artist_nestedLoopsFP: 现在到你了。用你学到的技能，创造一些自己喜欢的东西吧！
      courseD_artist_nestedLoopsFP_2018: 现在到你了。用你学到的技能，创造一些自己喜欢的东西吧！
      courseD_artist_nestedLoopsFP_2019: 现在到你了。用你学到的技能，创造一些自己喜欢的东西吧！
      courseD_artist_nestedLoops_challenge1: 你能想出怎么制作出这样的照片吗？
      courseD_artist_nestedLoops_challenge1_2018: 你能想出怎么制作出这样的照片吗？
      courseD_artist_nestedLoops_challenge1_2019: 你能想出怎么制作出这样的照片吗？
      courseD_artist_nestedLoops_challenge2: 修复代码来制作这张图！
      courseD_artist_nestedLoops_challenge2_2018: 修复代码来制作这张图！
      courseD_artist_nestedLoops_challenge2_2019: 修复代码来制作这张图！
      courseD_artist_project1: '绘制一个小形状, 介于 \*\* 20 和50 \*\*像素宽之间。 它可以是任何你喜欢的形状。  '
      courseD_artist_project1_2018: '绘制一个小形状, 介于 \*\* 20 和50 \*\*像素宽之间。 它可以是任何你喜欢的形状。  '
      courseD_artist_project1_2019: '绘制一个小形状, 介于 \*\* 20 和50 \*\*像素宽之间。 它可以是任何你喜欢的形状。  '
      courseD_artist_project1a: 画一个阶梯楼梯模式, 使用75和105度之间的角度来转弯。
      courseD_artist_project1a_2018: 画一个阶梯楼梯模式, 使用75和105度之间的角度来转弯。
      courseD_artist_project1a_2019: 画一个阶梯楼梯模式, 使用75和105度之间的角度来转弯。
      courseD_artist_project2: 现在用你选的形状连续画两或三个！
      courseD_artist_project2_2018: 现在用你选的形状连续画两或三个！
      courseD_artist_project2_2019: 现在用你选的形状连续画两或三个！
      courseD_artist_project2a: 现在，转180度，再次绘制楼梯图案!
      courseD_artist_project2a_2018: 现在，转180度，再次绘制楼梯图案!
      courseD_artist_project2a_2019: 现在，转180度，再次绘制楼梯图案!
      courseD_artist_project3: 让我们旋转那个形状的线吧!
      courseD_artist_project3_2018: 让我们旋转那个形状的线吧!
      courseD_artist_project3_2019: 让我们旋转那个形状的线吧!
      courseD_artist_project3a: 在一个圆圈内旋转该形状大约5或6次。
      courseD_artist_project3a_2018: 在一个圆圈内旋转该形状大约5或6次。
      courseD_artist_project3a_2019: 在一个圆圈内旋转该形状大约5或6次。
      courseD_artist_project4: 是时候把这些形状分层了!
      courseD_artist_project4_2018: 是时候把这些形状分层了!
      courseD_artist_project4_2019: 是时候把这些形状分层了!
      courseD_artist_project4a: "试着改动一下你所创造的东西。画任何你喜欢的东西! \n\n-   如果你在台阶上使用两个不同的角度,
        会发生什么？\n-   如果你把你的钻石图案变长或变短, 会发生什么？\n-   如果把两片雪花叠起来是什么样的？"
      courseD_artist_project4a_2018: "试着改动一下你所创造的东西。画任何你喜欢的东西! \n\n-   如果你在台阶上使用两个不同的角度,
        会发生什么？\n-   如果你把你的钻石图案变长或变短, 会发生什么？\n-   如果把两片雪花叠起来是什么样的？"
      courseD_artist_project4a_2019: "试着改动一下你所创造的东西。画任何你喜欢的东西! \n\n-   如果你在台阶上使用两个不同的角度,
        会发生什么？\n-   如果你把你的钻石图案变长或变短, 会发生什么？\n-   如果把两片雪花叠起来是什么样的？"
      courseD_artist_project5: 玩一玩雪花功能!
      courseD_artist_project5_2018: 玩一玩雪花功能!
      courseD_artist_project5_2019: 玩一玩雪花功能!
      courseD_artist_ramp11: 现在用艺术家做一个正方形!
      courseD_artist_ramp12: 用你学过的东西在正方形里面画这个三角形。
      courseD_autorun_binary2_2019: 运行代码来看看小艺术家如何用二进制画出这幅图案。
      courseD_autorun_binary3_2019: 哪个二进制字符串能让你循环8次来画出这个图像？
      courseD_autorun_binary4_2019: 你能通过循环3个二进制位（0和1）来画出这个图形吗？
      courseD_autorun_binary5_2019: |-
        下面的每个二进制字符串表达了这个图片的一行。

        你能重新排列它们，用笑脸代替皱眉吗？
      courseD_autorun_binary6_2019: 哪个6位的二进制字符串重复11次后能够画出这个图形?
      courseD_autorun_binary7_2019: 能让你重复并画出这个图形的最短的二进制字符串是什么?
      courseD_autorun_binary8_2019: 完成代码来创建此图。
      courseD_autorun_binary8_predict1_2019: 完成代码来创建此图。
      courseD_bee_conditionals10: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals10_2018: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals10_2019: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals1_predict1: 看看云下是否有朵花。如果有一朵花, 就采集花蜜。
      courseD_bee_conditionals1_predict1_2018: 看看云下是否有朵花。如果有一朵花, 就采集花蜜。
      courseD_bee_conditionals1_predict1_2019: 看看云下是否有朵花。如果有一朵花, 就采集花蜜。
      courseD_bee_conditionals2: '在采集花蜜前，检查每朵云下面是不是有花。  '
      courseD_bee_conditionals2_2018: '在采集花蜜前，检查每朵云下面是不是有花。  '
      courseD_bee_conditionals2_2019: '在采集花蜜前，检查每朵云下面是不是有花。  '
      courseD_bee_conditionals3: |-
        帮助蜜蜂采集所有的花蜜。

        只能从花中采到花蜜，但可以查看任何地方看那里是不是有朵花。
      courseD_bee_conditionals3_2018: |-
        帮助蜜蜂采集所有的花蜜。

        只能从花中采到花蜜，但可以查看任何地方看那里是不是有朵花。
      courseD_bee_conditionals3_2019: |-
        帮助蜜蜂采集所有的花蜜。

        只能从花中采到花蜜，但可以查看任何地方看那里是不是有朵花。
      courseD_bee_conditionals4: 使用尽可能少的模块来收集所有的花蜜。
      courseD_bee_conditionals4_2018: 使用尽可能少的模块来收集所有的花蜜。
      courseD_bee_conditionals4_2019: 使用尽可能少的模块来收集所有的花蜜。
      courseD_bee_conditionals5: 使用尽可能少的模块来收集所有的花蜜。
      courseD_bee_conditionals5_2018: 使用尽可能少的模块来收集所有的花蜜。
      courseD_bee_conditionals5_2019: 使用尽可能少的模块来收集所有的花蜜。
      courseD_bee_conditionals6: 有些云下面可能有蜂窝。 一定要检查是否有蜂窝藏在每朵云后面!
      courseD_bee_conditionals6_2018: 有些云下面可能有蜂窝。 一定要检查是否有蜂窝藏在每朵云后面!
      courseD_bee_conditionals6_2019: 有些云下面可能有蜂窝。 一定要检查是否有蜂窝藏在每朵云后面!
      courseD_bee_conditionals7: 使用 "如果/否则" 模块收集花朵的花蜜, 在蜂窝里制作蜂蜜。
      courseD_bee_conditionals7_2018: 使用 "如果/否则" 模块收集花朵的花蜜, 在蜂窝里制作蜂蜜。
      courseD_bee_conditionals7_2019: 使用 "如果/否则" 模块收集花朵的花蜜, 在蜂窝里制作蜂蜜。
      courseD_bee_conditionals7_predict2: 使用 "如果/否则" 模块收集花朵的花蜜, 在蜂窝里制作蜂蜜。
      courseD_bee_conditionals7_predict2_2018: 使用 "如果/否则" 模块收集花朵的花蜜, 在蜂窝里制作蜂蜜。
      courseD_bee_conditionals7_predict2_2019: 使用 "如果/否则" 模块收集花朵的花蜜, 在蜂窝里制作蜂蜜。
      courseD_bee_conditionals8: |-
        如果有花，收集花蜜。
        否则, 酿蜂蜜（因为那里有蜂窝）。
      courseD_bee_conditionals8_2018: |-
        如果有花，收集花蜜。
        否则, 酿蜂蜜（因为那里有蜂窝）。
      courseD_bee_conditionals8_2019: |-
        如果有花，收集花蜜。
        否则, 酿蜂蜜（因为那里有蜂窝）。
      courseD_bee_conditionals9: 收集所有的花蜜或制作蜂蜜。
      courseD_bee_conditionals9_2018: 收集所有的花蜜或制作蜂蜜。
      courseD_bee_conditionals9_2019: 收集所有的花蜜或制作蜂蜜。
      courseD_bee_conditionals_challenge1: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals_challenge1_2018: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals_challenge1_2019: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals_challenge2: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals_challenge2_2018: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_conditionals_challenge2_2019: 收集所有的花蜜并制作蜂蜜。
      courseD_bee_debugging_challenge1: 看蜜蜂如何得到花蜜。你能用同一种图案来帮助蜜蜂制造所有的蜂蜜吗？
      courseD_bee_debugging_challenge1a: 看蜜蜂如何得到花蜜。你能用同一种图案来帮助蜜蜂制造所有的蜂蜜吗？
      courseD_bee_nestedLoops1: 帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops1_2018: 帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops1_2019: 帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops1a: 帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops1a_2018: 帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops1a_2019: 帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops2: 这一次, 使用尽可能少的模块帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops2_2018: 这一次, 使用尽可能少的模块帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops2_2019: 这一次, 使用尽可能少的模块帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops2_predict1: 这一次, 使用尽可能少的模块帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops2_predict1_2018: 这一次, 使用尽可能少的模块帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops2_predict1_2019: 这一次, 使用尽可能少的模块帮助蜜蜂收集所有的花蜜。
      courseD_bee_nestedLoops7: '挑战: 找出如何只用现有的模块得到所有的花蜜。'
      courseD_bee_nestedLoops7_2018: '挑战: 找出如何只用现有的模块得到所有的花蜜。'
      courseD_bee_nestedLoops7_2019: '挑战: 找出如何只用现有的模块得到所有的花蜜。'
      courseD_bee_nestedLoops8: '从所有的花里收集花蜜，然后在蜂窝那里酿花蜜。 '
      courseD_bee_nestedLoops8_2018: '从所有的花里收集花蜜，然后在蜂窝那里酿花蜜。 '
      courseD_bee_nestedLoops8_2019: '从所有的花里收集花蜜，然后在蜂窝那里酿花蜜。 '
      courseD_bee_nestedLoops9: 酿蜂蜜。
      courseD_bee_nestedLoops9_2018: 酿蜂蜜。
      courseD_bee_nestedLoops9_2019: 酿蜂蜜。
      courseD_bee_nestedLoops9_predict2: 酿蜂蜜。
      courseD_bee_nestedLoops9_predict2_2018: 酿蜂蜜。
      courseD_bee_nestedLoops9_predict2_2019: 酿蜂蜜。
      courseD_bounce_events10s_2018: '把 "得分点" 块加到“当球击中”的事件上。将 '' 对手得分点 '' 模块加到“球错过球拍”的事件上。这样来创建这个游戏。 '
      courseD_bounce_events10s_2019: '把 "得分点" 块加到“当球击中”的事件上。将 '' 对手得分点 '' 模块加到“球错过球拍”的事件上。这样来创建这个游戏。 '
      courseD_bounce_events11s_2018: '在所有需要新球的游戏里面加上"扔出新球" 模块。 '
      courseD_bounce_events11s_2019: '在所有需要新球的游戏里面加上"扔出新球" 模块。 '
      courseD_bounce_events12s_2018: 让这个游戏成为你自己的。你可以改变所有的视觉效果和规则。完成后, 单击 "完成", 让朋友在手机上试用您的游戏。
      courseD_bounce_events12s_2019: 让这个游戏成为你自己的。你可以改变所有的视觉效果和规则。完成后, 单击 "完成", 让朋友在手机上试用您的游戏。
      courseD_bounce_events1s_2018: 将一个模块加到 "当按下左键时"模块下，并按 "运行" 将播放机移动到网上。
      courseD_bounce_events1s_2019: 将一个模块加到 "当按下左键时"模块下，并按 "运行" 将播放机移动到网上。
      courseD_bounce_events2s_2018: 现在, 在 "当向右时" 中附加一个方块, 这样手就可以够到两个篮子。
      courseD_bounce_events2s_2019: 现在, 在 "当向右时" 中附加一个方块, 这样手就可以够到两个篮子。
      courseD_bounce_events5s_2018: 将一个方块连接到 ' 当球击中手 ' 情景, 以确保球到达篮框。
      courseD_bounce_events5s_2019: 将一个方块连接到 ' 当球击中手 ' 情景, 以确保球到达篮框。
      courseD_bounce_events6s_2018: 添加代码, 使球弹跳时, 可以击中墙壁, 这样你才可以通关。
      courseD_bounce_events6s_2019: 添加代码, 使球弹跳时, 可以击中墙壁, 这样你才可以通关。
      courseD_bounce_events7s_2018: 加入声音模块，当你击中篮筐时, 网会发出沙沙声。当球没碰到你的手时, 哨子会响。弹起球, 直到它击中完成目标。
      courseD_bounce_events7s_2019: 加入声音模块，当你击中篮筐时, 网会发出沙沙声。当球没碰到你的手时, 哨子会响。弹起球, 直到它击中完成目标。
      courseD_collector_debugging1: 修复错误来收集所有的宝藏。
      courseD_collector_debugging1a_2018: 修复错误来收集所有的宝藏。
      courseD_collector_debugging1a_2019: 修复错误来收集所有的宝藏。
      courseD_collector_debugging2: 修复错误来收集所有的宝藏。
      courseD_collector_debugging2a_2018: 修复错误来收集所有的宝藏。
      courseD_collector_debugging2a_2019: 修复错误来收集所有的宝藏。
      courseD_collector_debugging3: 修复错误来收集所有的宝藏。
      courseD_collector_debugging3a_2018: 修复错误来收集所有的宝藏。
      courseD_collector_debugging3a_2019: 修复错误来收集所有的宝藏。
      courseD_collector_debugging4: 修复错误来收集所有的宝藏。
      courseD_collector_debugging4a_2018: 修复错误来收集所有的宝藏。
      courseD_collector_debugging4a_2019: 修复错误来收集所有的宝藏。
      courseD_collector_debugging5: 所有你需要的指令已经在这里了... 现在，运用你的调试技巧来找出如何过关。
      courseD_collector_debugging5a_2018: 所有你需要的指令已经在这里了... 现在，运用你的调试技巧来找出如何过关。
      courseD_collector_debugging5a_2019: 所有你需要的指令已经在这里了... 现在，运用你的调试技巧来找出如何过关。
      courseD_collector_debugging6: '挑战: 使用调试技巧来修复错误并收集所有的宝藏。'
      courseD_collector_debugging6a_2018: '挑战: 使用工作区的代码得到至少 \*\* 6 \*\* 块宝藏!'
      courseD_collector_debugging6a_2019: '挑战: 使用工作区的代码得到至少 \*\* 6 \*\* 块宝藏!'
      courseD_collector_debugging_challenge2: 您是嵌套循环的专家吗？使用你所学到的收集所有的宝藏!
      courseD_collector_nested_loops_challenge2: 帮助收藏家只使用你工具箱里的块来拿到至少两堆宝藏。这里可能收集到所有4堆。
      courseD_collector_nested_loops_challenge2_2018: 帮助收藏家只使用你工具箱里的块来拿到至少两堆宝藏。这里可能收集到所有4堆。
      courseD_collector_nested_loops_challenge2_2019: 帮助收藏家只使用你工具箱里的块来拿到至少两堆宝藏。这里可能收集到所有4堆。
      courseD_collector_nested_loops_challenge2a: 帮助收藏家只使用你工具箱里的块来拿到至少两堆宝藏。这里可能收集到所有4堆。
      courseD_collector_ramp10: 帮助罗瑞尔收集所有的宝藏。
      courseD_collector_ramp8: 帮助罗瑞尔收集所有的宝藏。
      courseD_collector_ramp9: 帮助罗瑞尔收集所有的宝藏。
      courseD_farmer_condLoops1: 用条件来确保只有某处有玉米时，才捡起它。
      courseD_farmer_condLoops1_2018: 用条件来确保只有某处有玉米时，才捡起它。
      courseD_farmer_condLoops1_2019: 用条件来确保只有某处有玉米时，才捡起它。
      courseD_farmer_condLoops2: 帮助收割者从田里收集玉米和莴苣。
      courseD_farmer_condLoops2_2018: 帮助收割者从田里收集玉米和莴苣。
      courseD_farmer_condLoops2_2019: 帮助收割者从田里收集玉米和莴苣。
      courseD_farmer_condLoops3: _"玉米、莴苣和南瓜！帮我全收集起来。"_
      courseD_farmer_condLoops3_2018: _"玉米、莴苣和南瓜！帮我全收集起来。"_
      courseD_farmer_condLoops3_2019: _"玉米、莴苣和南瓜！帮我全收集起来。"_
      courseD_farmer_condLoops4: 在移动到下一捆之前，帮收割者先收集所有的莴苣。
      courseD_farmer_condLoops4_2018: 在移动到下一捆之前，帮收割者先收集所有的莴苣。
      courseD_farmer_condLoops4_2019: 在移动到下一捆之前，帮收割者先收集所有的莴苣。
      courseD_farmer_condLoops5: 收集所有的玉米和莴苣，然后最后去拿南瓜。
      courseD_farmer_condLoops5_2018: 收集所有的玉米和莴苣，然后最后去拿南瓜。
      courseD_farmer_condLoops5_2019: 收集所有的玉米和莴苣，然后最后去拿南瓜。
      courseD_farmer_condLoops6: 你能找出如何捡起所有的南瓜吗？确保沿着路收集所有的玉米！
      courseD_farmer_condLoops6_2018: 你能找出如何捡起所有的南瓜吗？确保沿着路收集所有的玉米！
      courseD_farmer_condLoops6_2019: 你能找出如何捡起所有的南瓜吗？确保沿着路收集所有的玉米！
      courseD_farmer_condLoops7: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops7_2018: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops7_2019: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops8: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops8_2018: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops8_2019: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops9: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops9_2018: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops9_2019: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops9_predict1: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops9_predict1_2018: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops9_predict1_2019: 收集所有的玉米和莴苣，然后捡起南瓜。
      courseD_farmer_condLoops_challenge1: 收集所有的一切来过这关。每个隐藏的作物只有一个玉米或莴苣。
      courseD_farmer_condLoops_challenge1_2018: 收集所有的一切来过这关。每个隐藏的作物只有一个玉米或莴苣。
      courseD_farmer_condLoops_challenge1_2019: 收集所有的一切来过这关。每个隐藏的作物只有一个玉米或莴苣。
      courseD_farmer_condLoops_challenge2: 收集一切作物来通过这关。
      courseD_farmer_condLoops_challenge2_2018: 收集一切作物来通过这关。
      courseD_farmer_condLoops_challenge2_2019: 收集一切作物来通过这关。
      courseD_farmer_until_challenge2: 使用如果/否则模块来跟随这条曲线的路。在每个转角处，用循环里的`移除一个`来清理土堆。
      courseD_farmer_while1: 向土堆移动，并用`移除`模块来移除它。
      courseD_farmer_while10: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while10_2018: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while10_2019: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while10_predict2: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while10_predict2_2018: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while10_predict2_2019: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while1_2018: 向土堆移动，并用`移除`模块来移除它。
      courseD_farmer_while1_2019: 向土堆移动，并用`移除`模块来移除它。
      courseD_farmer_while2: 向土堆移动，并用`填满`模块来用6铲土填平它。
      courseD_farmer_while2_2018: 向土堆移动，并用`填满`模块来用6铲土填平它。
      courseD_farmer_while2_2019: 向土堆移动，并用`填满`模块来用6铲土填平它。
      courseD_farmer_while3: 用尽可能少的模块来通过这关。
      courseD_farmer_while3_2018: 用尽可能少的模块来通过这关。
      courseD_farmer_while3_2019: 用尽可能少的模块来通过这关。
      courseD_farmer_while4: 用`当`循环来帮助农夫移除整个土堆。
      courseD_farmer_while4_2018: 用`当`循环来帮助农夫移除整个土堆。
      courseD_farmer_while4_2019: 用`当`循环来帮助农夫移除整个土堆。
      courseD_farmer_while4_predict1: 用`当`循环来帮助农夫移除整个土堆。
      courseD_farmer_while4_predict1_2018: 用`当`循环来帮助农夫移除整个土堆。
      courseD_farmer_while4_predict1_2019: 用`当`循环来帮助农夫移除整个土堆。
      courseD_farmer_while5: '帮我移除所有的土。 '
      courseD_farmer_while5_2018: '帮我移除所有的土。 '
      courseD_farmer_while5_2019: '帮我移除所有的土。 '
      courseD_farmer_while6: 使用`当`循环能够很容易的填满所有的洞。
      courseD_farmer_while6_2018: 使用`当`循环能够很容易的填满所有的洞。
      courseD_farmer_while6_2019: 使用`当`循环能够很容易的填满所有的洞。
      courseD_farmer_while7: 填满每条路尽头的洞。
      courseD_farmer_while7_2018: 填满每条路尽头的洞。
      courseD_farmer_while7_2019: 填满每条路尽头的洞。
      courseD_farmer_while8: '挑战：用尽可能少的模块来填满这些洞。 '
      courseD_farmer_while8_2018: '挑战：用尽可能少的模块来填满这些洞。 '
      courseD_farmer_while8_2019: '挑战：用尽可能少的模块来填满这些洞。 '
      courseD_farmer_while9: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while9_2018: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while9_2019: '用尽可能少的模块来弄平所有土堆。 '
      courseD_farmer_while_challenge1: 填补所有的洞, 并移走所有的土堆。
      courseD_farmer_while_challenge1_2018: 填补所有的洞, 并移走所有的土堆。
      courseD_farmer_while_challenge1_2019: 填补所有的洞, 并移走所有的土堆。
      courseD_farmer_while_challenge2: 填补所有的洞, 并移走所有的土堆。
      courseD_harvester_nested_loops_challenge1: '"在农场上，我需要一些帮助！只用工具箱里的模块来帮我收获玉米。"'
      courseD_harvester_nested_loops_challenge1_2018: '"在农场上，我需要一些帮助！只用工具箱里的模块来帮我收获玉米。"'
      courseD_harvester_nested_loops_challenge1_2019: '"在农场上，我需要一些帮助！只用工具箱里的模块来帮我收获玉米。"'
      courseD_iceage_loops1: 帮助斯奎特穿过冰去拿到橡子！
      courseD_iceage_loops10: 帮助斯奎特走过去拿到橡子！
      courseD_iceage_loops10_2019: 帮助斯奎特走过去拿到橡子！
      courseD_iceage_loops11: 帮助斯奎特得到橡子！
      courseD_iceage_loops11_2019: 帮助斯奎特得到橡子！
      courseD_iceage_loops12: 用各种方法来拿到橡子！
      courseD_iceage_loops12_2019: 用各种方法来拿到橡子！
      courseD_iceage_loops1_2019: 帮助斯奎特穿过冰去拿到橡子！
      courseD_iceage_loops2: 使用一个`向左转`模块来到达橡子！
      courseD_iceage_loops2_2019: 使用一个`向左转`模块来到达橡子！
      courseD_iceage_loops3: 你能只用一个`向前移动`模块来得到橡子吗？
      courseD_iceage_loops3_2019: 你能只用一个`向前移动`模块来得到橡子吗？
      courseD_iceage_loops4: 再添加一个模块来让斯奎特用各种方法到达橡子！
      courseD_iceage_loops4_2019: 再添加一个模块来让斯奎特用各种方法到达橡子！
      courseD_iceage_loops6: 你能增加一个循环到达橡子吗？
      courseD_iceage_loops6_2019: 你能增加一个循环到达橡子吗？
      courseD_iceage_loops7: 斯奎特真的想要那个橡子！
      courseD_iceage_loops7_2019: 斯奎特真的想要那个橡子！
      courseD_iceage_loops8: '你能修好这段代码吗？ '
      courseD_iceage_loops8_2019: '你能修好这段代码吗？ '
      courseD_iceage_loops9: 橡子太远了！你能用循环帮助斯奎特到达那里吗？
      courseD_iceage_loops9_2019: 橡子太远了！你能用循环帮助斯奎特到达那里吗？
      courseD_maze_intro5a_2019: 注意顺序，看看你能否找出如何到达那头猪！
      courseD_maze_nestedLoops3: 用尽可能少的模块让僵尸到达向日葵。
      courseD_maze_nestedLoops3_2018: 用尽可能少的模块让僵尸到达向日葵。
      courseD_maze_nestedLoops3_2019: 用尽可能少的模块让僵尸到达向日葵。
      courseD_maze_nestedLoops4: '用尽可能少的模块让僵尸到达向日葵！  '
      courseD_maze_nestedLoops4_2018: '用尽可能少的模块让僵尸到达向日葵！  '
      courseD_maze_nestedLoops4_2019: '用尽可能少的模块让僵尸到达向日葵！  '
      courseD_maze_nestedLoops5: 用尽可能少的模块让僵尸到达向日葵！
      courseD_maze_nestedLoops5_2018: 用尽可能少的模块让僵尸到达向日葵！
      courseD_maze_nestedLoops5_2019: 用尽可能少的模块让僵尸到达向日葵！
      courseD_maze_nestedLoops6: 只使用已有的模块把僵尸带到向日葵那里。
      courseD_maze_nestedLoops6_2018: 只使用已有的模块把僵尸带到向日葵那里。
      courseD_maze_nestedLoops6_2019: 只使用已有的模块把僵尸带到向日葵那里。
      courseD_maze_ramp1: 对于这个关卡，把所有的块都拼在一起，并点击"运行"来看看！
      courseD_maze_ramp1_2018: 对于这个关卡，把所有的块都拼在一起，并点击"运行"来看看！
      courseD_maze_ramp1_2019: 对于这个关卡，把所有的块都拼在一起，并点击"运行"来看看！
      courseD_maze_ramp2: 将额外的`向前移动`块拖出工具箱, 然后将所有块附加到`当运行时`以完成代码。
      courseD_maze_ramp2_2018: 将额外的`向前移动`块拖出工具箱, 然后将所有块附加到`当运行时`以完成代码。
      courseD_maze_ramp2_2019: 将额外的`向前移动`块拖出工具箱, 然后将所有块附加到`当运行时`以完成代码。
      courseD_maze_ramp3: 有一个额外的块将导致鸟坠落。将其拖回工具箱中扔掉它。
      courseD_maze_ramp3_2018: 有一个额外的块将导致鸟坠落。将其拖回工具箱中扔掉它。
      courseD_maze_ramp3_2019: 有一个额外的块将导致鸟坠落。将其拖回工具箱中扔掉它。
      courseD_maze_ramp4: 躲开TNT炸药，否则羽毛会被炸飞！
      courseD_maze_ramp4_2018: 躲开TNT炸药，否则羽毛会被炸飞！
      courseD_maze_ramp4_2019: 躲开TNT炸药，否则羽毛会被炸飞！
      courseD_maze_ramp5: 躲开TNT炸药！
      courseD_maze_ramp5_2018: 躲开TNT炸药！
      courseD_maze_ramp5_2019: 躲开TNT炸药！
      courseD_maze_ramp5a: 注意顺序，看看你能否找出如何到达那头猪！
      courseD_maze_ramp5a_2018: 注意顺序，看看你能否找出如何到达那头猪！
      courseD_maze_ramp5a_2019: 注意顺序，看看你能否找出如何到达那头猪！
      courseD_maze_ramp5b: 在这个迷宫中领航，帮助小鸟找到猪！
      courseD_maze_ramp5b_2018: 在这个迷宫中领航，帮助小鸟找到猪！
      courseD_maze_ramp5b_2019: 在这个迷宫中领航，帮助小鸟找到猪！
      courseD_maze_ramp5c: 帮小鸟到达猪那里。
      courseD_maze_ramp5c_2018: 帮小鸟到达猪那里。
      courseD_maze_ramp5d: 帮小鸟到达那只猪。
      courseD_maze_ramp5d_2018: 帮小鸟到达那只猪。
      courseD_maze_ramp5d_2019: 帮小鸟到达那只猪。
      courseD_maze_ramp6: "\"保持冷静，帮助我找到那只坏猪。否则我会生气的!“"
      courseD_maze_ramp7: 帮小鸟到达那只猪！
      courseD_maze_until1: 帮愤怒的小鸟到达那只猪。
      courseD_maze_until10: 帮助僵尸到达向日葵。
      courseD_maze_until10_2018: 帮助僵尸到达向日葵。
      courseD_maze_until10_2019: 帮助僵尸到达向日葵。
      courseD_maze_until10_predict2: 帮助僵尸到达向日葵。
      courseD_maze_until10_predict2_2018: 帮助僵尸到达向日葵。
      courseD_maze_until10_predict2_2019: 帮助僵尸到达向日葵。
      courseD_maze_until1_2018: 帮愤怒的小鸟到达那只猪。
      courseD_maze_until1_2019: 帮愤怒的小鸟到达那只猪。
      courseD_maze_until3: 帮小鸟到达那只猪。
      courseD_maze_until3_2018: 帮小鸟到达那只猪。
      courseD_maze_until3_2019: 帮小鸟到达那只猪。
      courseD_maze_until4: 你能只使用已有的模块把僵尸带到向日葵那里吗？
      courseD_maze_until4_2018: 你能只使用已有的模块把僵尸带到向日葵那里吗？
      courseD_maze_until4_2019: 你能只使用已有的模块把僵尸带到向日葵那里吗？
      courseD_maze_until5: 用`如果`模块来帮助僵尸决定何时转弯，然后让僵尸到达向日葵那里。
      courseD_maze_until5_2018: 用`如果`模块来帮助僵尸决定何时转弯，然后让僵尸到达向日葵那里。
      courseD_maze_until5_2019: 用`如果`模块来帮助僵尸决定何时转弯，然后让僵尸到达向日葵那里。
      courseD_maze_until6: 帮助僵尸到达向日葵。
      courseD_maze_until6_2018: 帮助僵尸到达向日葵。
      courseD_maze_until6_2019: 帮助僵尸到达向日葵。
      courseD_maze_until7: 帮助僵尸到达向日葵。
      courseD_maze_until7_2018: 帮助僵尸到达向日葵。
      courseD_maze_until7_2019: 帮助僵尸到达向日葵。
      courseD_maze_until8: 帮助僵尸到达向日葵。
      courseD_maze_until9: "**挑战：** 躲开食人花，让僵尸到达向日葵那里。"
      courseD_maze_until9_2018: "**挑战：** 躲开食人花，让僵尸到达向日葵那里。"
      courseD_maze_until9_2019: "**挑战：** 躲开食人花，让僵尸到达向日葵那里。"
      courseD_maze_until_challenge1: 没有提示，只有挑战。把僵尸带到向日葵那里。
      courseD_playLab_cond1: 让海盗得到旗帜来通过这关。
      courseD_playLab_cond1_2018: 让海盗得到旗帜来通过这关。
      courseD_playLab_cond2: '每次海盗到龙那里的时候得一分。 '
      courseD_playLab_cond2_2018: '每次海盗到龙那里的时候得一分。 '
      courseD_playLab_cond3: '让龙的情绪每秒随机改变一次。  '
      courseD_playLab_cond3_2018: '让龙的情绪每秒随机改变一次。  '
      courseD_playLab_cond3a: 当Pegleg到达龙那里时, 如果龙是快乐的，得到2分, 否则1分。
      courseD_playLab_cond3a_2018: 当Pegleg到达龙那里时, 如果龙是快乐的，得到2分, 否则1分。
      courseD_playLab_cond4: 添加一些代码，让忍者 (演员 3) 在游戏一开始就开始追逐海盗。 如果忍者抓住了海盗，游戏就以失败告终。
      courseD_playLab_cond4_2018: 添加一些代码，让忍者 (演员 3) 在游戏一开始就开始追逐海盗。 如果忍者抓住了海盗，游戏就以失败告终。
      courseD_playLab_cond5: 添加一个`一直重复`循环, 让它不断检查, 如果比分大于 5, 就以胜利结束此游戏。
      courseD_playLab_cond5_2018: 添加一个`一直重复`循环, 让它不断检查, 如果比分大于 5, 就以胜利结束此游戏。
      courseD_playLab_cond6: "1.  在设置忍者 (演员 3) 追逐海盗前，让他先慢下来。 \n2.  如果海盗大于225像素时，设置忍者**逃离**海盗。否则,
        设置忍者 \\*追逐\\*\\*海盗。  "
      courseD_playLab_cond6_2018: "1.  在设置忍者 (演员 3) 追逐海盗前，让他先慢下来。 \n2.  如果海盗大于225像素时，设置忍者**逃离**海盗。否则,
        设置忍者 \\*追逐\\*\\*海盗。  "
      courseD_playLab_cond6a: 如果海盗在安全区, 等一秒钟，如果他还停留在章鱼线之下，就扣除一分。
      courseD_playLab_cond6a_2018: 如果海盗在安全区, 等一秒钟，如果他还停留在章鱼线之下，就扣除一分。
      courseD_playLab_condFP: 现在，创建你自己的游戏，给朋友们看看吧！
      courseD_playLab_condFP_2018: 现在，创建你自己的游戏，给朋友们看看吧！
      courseD_scrat_ramp1: 对于这个关卡，把所有的块都拼在一起，并点击"运行"来看看！
      courseD_scrat_ramp2: 将额外的`向前移动`块拖出工具箱, 然后将所有块附加到`当运行时`以完成代码。
      courseD_scrat_ramp3: 有一个额外的块将导致鸟坠落。将其拖回工具箱中扔掉它。
      courseD_scrat_ramp4: 躲开TNT炸药，否则羽毛会被炸飞！
      courseD_scrat_ramp5: 躲开TNT炸药！
      courseD_scrat_ramp6: |-
        _"保持冷静，帮我找到那只坏猪。否则，我会生气的！"_

        当你将几个同样的模块排成一列时，试试将它们挪到`重复`循环里。这能更少的代码做到相同的事情！
      courseD_scrat_ramp7: 帮助斯奎特得到橡子！
      courseD_scrat_ramp8: 用你学到的东西让斯奎特得到橡子!
      courseE_artist_concept1: '重新创建这幅图。 '
      courseE_artist_concept1_2018: '重新创建这幅图。 '
      courseE_artist_concept4: 重新创建这幅图。
      courseE_artist_concept4_2018: 重新创建这幅图。
      courseE_artist_concept_challenge1: '帮助小艺术家画出这副独特的图。 '
      courseE_artist_concept_challenge1_2018: '帮助小艺术家画出这副独特的图。 '
      courseE_artist_concept_challenge2: 使用下面的代码创建五个风车的设计。
      courseE_artist_concept_challenge2_2018: 使用下面的代码创建五个风车的设计。
      courseE_artist_functions1: |-
        帮助僵尸艺术家画一个边长为100像素的眼镜。
        眼镜之间的桥梁长75像素。
      courseE_artist_functions10: 这次，用8个（25像素边长的）六边形的线。
      courseE_artist_functions10_2018: 这次，用8个（25像素边长的）六边形的线。
      courseE_artist_functions10_2019: 这次，用8个（25像素边长的）六边形的线。
      courseE_artist_functions2: '这一次, 使用`draw a square`（画一个正方形）函数来创建眼镜。 '
      courseE_artist_functions2_2018: '这一次, 使用`draw a square`（画一个正方形）函数来创建眼镜。 '
      courseE_artist_functions2_2019: '这一次, 使用`draw a square`（画一个正方形）函数来创建眼镜。 '
      courseE_artist_functions3: 可以通过添加重复模块来绘制此画。
      courseE_artist_functions3_2018: 构建一个能创造这个星星的函数。
      courseE_artist_functions3_2019: 构建一个能创造这个星星的函数。
      courseE_artist_functions4: 现在你能画一个星星了，试试画4个星星！
      courseE_artist_functions5: 只画3个星星来完成这关。
      courseE_artist_functions5_2018: 只画3个星星来完成这关。
      courseE_artist_functions5_2019: 只画3个星星来完成这关。
      courseE_artist_functions6: 通过画一个正方形来制作这个窗口，然后在画另一个前转90度，等等。
      courseE_artist_functions7: 创建`画一个窗口`，然后调用它5次来通过这一关。小心门！
      courseE_artist_functions7_2018: 创建`画一个窗口`，然后调用它5次来通过这一关。小心门！
      courseE_artist_functions7_2019: 创建`画一个窗口`，然后调用它5次来通过这一关。小心门！
      courseE_artist_functions8: 挑战：创建你能想到的尽可能多的函数来画出这个50像素的正方形的图案。
      courseE_artist_functions8_2018: 挑战：创建你能想到的尽可能多的函数来画出这个50像素的正方形的图案。
      courseE_artist_functions8_2019: 挑战：创建你能想到的尽可能多的函数来画出这个50像素的正方形的图案。
      courseE_artist_functions8a_2018: 为单个正方形创建函数
      courseE_artist_functions8a_2019: 为单个正方形创建函数
      courseE_artist_functions8b_2018: 在`draw a line of squares`（用正方形画一条线）函数里调用`draw
        a square`（画一个正方形）函数，来让它变得更容易！
      courseE_artist_functions8b_2019: 在`draw a line of squares`（用正方形画一条线）函数里调用`draw
        a square`（画一个正方形）函数，来让它变得更容易！
      courseE_artist_functions8c_2018: 再添加一个函数来创建交错的正方形堆栈。
      courseE_artist_functions8c_2019: 再添加一个函数来创建交错的正方形堆栈。
      courseE_artist_functions9: 只用提供的模块来画出这个图。
      courseE_artist_functions9_2018: "**挑战：**只用提供的模块来画出这个图。"
      courseE_artist_functions9_2019: "**挑战：**只用提供的模块来画出这个图。"
      courseE_artist_functionsProj_2018: "**灵感：**用你学会的做想做的事情！"
      courseE_artist_functionsProj_2019: "**灵感：**用你学会的做想做的事情！"
      courseE_artist_functions_challenge1: 一旦你定义了一个函数, 你可以随心所欲一次又一次地调用它! 尝试此代码, 看看它是如何工作的,
        然后改变它, 让您自己的设计更出色！
      courseE_artist_functions_challenge1_2018: 一旦你定义了一个函数, 你可以随心所欲一次又一次地调用它! 尝试此代码,
        看看它是如何工作的, 然后改变它, 让您自己的设计更出色！
      courseE_artist_functions_challenge1_2019: 一旦你定义了一个函数, 你可以随心所欲一次又一次地调用它! 尝试此代码,
        看看它是如何工作的, 然后改变它, 让您自己的设计更出色！
      courseE_artist_functions_challenge2: 试试此代码, 看看它是如何工作的, 然后试着自己编程!
      courseE_artist_functions_challenge2_2018: 试试此代码, 看看它是如何工作的, 然后试着自己编程!
      courseE_artist_functions_challenge2_2019: 试试此代码, 看看它是如何工作的, 然后试着自己编程!
      courseE_artist_ramp8: 现在用艺术家做一个正方形!
      courseE_artist_ramp8_2: 现在用艺术家做一个正方形!
      courseE_artist_ramp9: 用你学过的画这个三角形。
      courseE_artist_ramp9_2: 用你学过的画这个三角形。
      courseE_bee_concept1: 收集每朵花的花蜜。
      courseE_bee_concept1_2018: 收集每朵花的花蜜。
      courseE_bee_concept2: 帮助蜜蜂酿制所有的蜂蜜。
      courseE_bee_concept2_2018: 帮助蜜蜂酿制所有的蜂蜜。
      courseE_bee_concept3: 使用尽可能少的模块来收集所有的花蜜。
      courseE_bee_concept3_2018: 使用尽可能少的模块来收集所有的花蜜。
      courseE_bee_concept4: 啊哦! 蜜蜂不确定它应该收集花蜜或还是酿制蜂蜜。你能帮它吗？
      courseE_bee_concept4_2018: 啊哦! 蜜蜂不确定它应该收集花蜜或还是酿制蜂蜜。你能帮它吗？
      courseE_bee_concept5: 你能帮助蜜蜂从花朵收集花蜜吗？
      courseE_bee_concept5_2018: 你能帮助蜜蜂从花朵收集花蜜吗？
      courseE_bee_functions1: 收集每朵花的花蜜。
      courseE_bee_functions10: 创建一个函数帮助蜜蜂在回到主路前得到所有的蜂蜜来过此关。
      courseE_bee_functions2: 使用`收集2个花蜜`函数来收集每朵花的花蜜。
      courseE_bee_functions3: 构建`获取5个`函数, 以便在这个关卡中使用。
      courseE_bee_functions4: |-
        “移动并获得花蜜”函数会让蜜蜂转身并收集花蜜，然后会让蜜蜂返回出发的地方。

        用这个函数收集所有的花蜜。
      courseE_bee_functions5: 现在编写函数来采花蜜。
      courseE_bee_functions6: 创建一个函数, 并调用它来收集每朵花的花蜜, 并在每个蜂窝酿制蜂蜜。
      courseE_bee_functions7: 创建自己的函数，沿着路径往下走, 采集花蜜, 酿蜂蜜, 然后让蜜蜂返回到路径的顶端。收集所有的花蜜并酿制所有的蜂蜜!
      courseE_bee_functions8: 创建一个函数, 收集每朵花的所有花蜜。
      courseE_bee_functions9: 创建一个函数, 收集每朵花的所有花蜜。
      courseE_bee_functions_challenge1: 你得独立接受这个挑战。这可能比看起来更难!
      courseE_bee_functions_challenge2: 你得独立接受这个挑战。酷毙了！
      courseE_farmer_concept1: 你能写一个程序来填补这些洞直到地面平了吗？
      courseE_farmer_concept1_2018: 你能写一个程序来填补这些洞直到地面平了吗？
      courseE_farmer_concept2: 收集所有南瓜。
      courseE_farmer_concept2_2018: 收集所有南瓜。
      courseE_farmer_concept3: 填满每条路尽头的洞。
      courseE_farmer_concept3_2018: 填满每条路尽头的洞。
      courseE_farmer_functions1: 帮助收割者到达南瓜那里并采摘它。
      courseE_farmer_functions10a1_2018: 用你学到的知识来解决难题！
      courseE_farmer_functions10a1_2019: 用你学到的知识来解决难题！
      courseE_farmer_functions10b: 用新函数两次来过关。
      courseE_farmer_functions13_2018: 用23个或更少的模块来解决这个难题。
      courseE_farmer_functions13_2019: 用23个或更少的模块来解决这个难题。
      courseE_farmer_functions1_2018: 帮助收割者到达南瓜那里并采摘它。
      courseE_farmer_functions1_2019: 帮助收割者到达南瓜那里并采摘它。
      courseE_farmer_functions1a: 现在帮收割者采摘玉米，莴苣，**和** 南瓜。
      courseE_farmer_functions1a_2018: 帮收割者采摘所有玉米，和南瓜。
      courseE_farmer_functions1a_2019: 帮收割者采摘所有玉米，和南瓜。
      courseE_farmer_functions2b: 帮助收割者采摘玉米和南瓜。
      courseE_farmer_functions2b_2018: 帮助收割者采摘玉米和南瓜。
      courseE_farmer_functions2b_2019: 帮助收割者采摘玉米和南瓜。
      courseE_farmer_functions2ba: 帮助农民用`玉米和南瓜`函数来采摘玉米和南瓜。
      courseE_farmer_functions2ba_2018: 帮助农民用`玉米和南瓜`函数来采摘玉米和南瓜。
      courseE_farmer_functions2ba_2019: 帮助农民用`玉米和南瓜`函数来采摘玉米和南瓜。
      courseE_farmer_functions3c: 现在, 从代码中拉出模块并将它们放到 \*\* 函数定义 \*\* 中来填充函数。
      courseE_farmer_functions3c1_2018: 这个函数调用了其它函数！
      courseE_farmer_functions3c1_2019: 这个函数调用了其它函数！
      courseE_farmer_functions3c_2018: 现在, 从代码中拉出模块并将它们放到 \*\* 函数定义 \*\* 中来填充函数。
      courseE_farmer_functions3c_2019: 现在, 从代码中拉出模块并将它们放到 \*\* 函数定义 \*\* 中来填充函数。
      courseE_farmer_functions4b: 使用你的新函数来通关。
      courseE_farmer_functions5c: 你的函数能在这里派上用场。
      courseE_farmer_functions6c: 你需要添加什么样的程序来检查一个新芽是玉米还是莴苣？
      courseE_farmer_functions7a1_2018: 创建函数来让收割者走到正方形路径上，从每行的中间采摘单个莴苣。
      courseE_farmer_functions7a1_2019: 创建函数来让收割者走到正方形路径上，从每行的中间采摘单个莴苣。
      courseE_farmer_functions7b: 帮助收割者找到她的路，这些混乱的路径中左转右转能到达南瓜、玉米和莴苣。
      courseE_farmer_functions8a1_2018: 你的函数还有用吗？
      courseE_farmer_functions8a1_2019: 你的函数还有用吗？
      courseE_farmer_functions8b: "**挑战：** 用上一关中学到的方法收集所有的南瓜。 "
      courseE_farmer_functions9a1_2018: 你的函数还有用吗？
      courseE_farmer_functions9a1_2019: 你的函数还有用吗？
      courseE_farmer_functions9b: 你能找出解决这个关卡所需的规律吗？
      courseE_farmer_ramp11a: 当有一堆土，移走它。
      courseE_farmer_ramp11a_2018: 当有一堆土，移走它。
      courseE_farmer_ramp11a_2019: 当有一堆土，移走它。
      courseE_farmer_ramp11b: 当有一堆土，移走它。
      courseE_farmer_ramp11b_2018: 当有一堆土，移走它。
      courseE_farmer_ramp11b_2019: 当有一堆土，移走它。
      courseE_farmer_ramp12_forswap: 现在，使用嵌套循环来通过这关。
      courseE_farmer_ramp12_forswap_2018: 现在，使用嵌套循环来通过这关。
      courseE_farmer_ramp12_forswap_2019: 现在，使用嵌套循环来通过这关。
      courseE_farmer_ramp12b: 当有莴苣的时候,，捡起莴苣！
      courseE_farmer_ramp12b_2018: 当有莴苣的时候,，捡起莴苣！
      courseE_farmer_ramp12b_2019: 当有莴苣的时候,，捡起莴苣！
      courseE_farmer_ramp12c: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12c_2018: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12c_2019: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12d: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12d_2018: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12d_2019: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12e: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12e_2018: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12e_2019: 向前移动直到到达莴苣，然后用一个`当`循环来捡起所有的莴苣。
      courseE_farmer_ramp12f: 向前走, 直到你到达莴苣，然后**如果** 有一条路径向左，就左转。否则就右拐。
      courseE_farmer_ramp12f_2018: 向前走, 直到你到达莴苣，然后**如果** 有一条路径向左，就左转。否则就右拐。
      courseE_farmer_ramp12f_2019: 向前走, 直到你到达莴苣，然后**如果** 有一条路径向左，就左转。否则就右拐。
      courseE_farmer_ramp12g: 向前走, 直到你到达莴苣，然后**如果** 有一条路径向左，就左转。否则就右拐。
      courseE_farmer_ramp12g_2018: 向前走, 直到你到达莴苣，然后**如果** 有一条路径向左，就左转。否则就右拐。
      courseE_farmer_ramp12g_2019: 向前走, 直到你到达莴苣，然后**如果** 有一条路径向左，就左转。否则就右拐。
      courseE_playLab_challenge1: |-
        当你有足够的分数，或者分数不够时，应该有一些后果。添加一些代码到`游戏胜利`和`游戏失败`函数中来确保游戏按照它y应该的方式进行。

        点击提示来获得一些主意！
      courseE_playLab_scaffold1: 选择一个背景和地图，然后选择一个演员来作为你的游戏里的英雄。
      courseE_playLab_scaffold2: 用事件处理函数和行动来帮助你的英雄移动。
      courseE_playLab_scaffold3: 添加两个或更多的演员到你的游戏中，并让它们移动。
      courseE_playLab_scaffold4: 找一些有趣的方法来改变游戏的分数。让分数不为零，然后再继续。
      courseE_playLab_scaffold5: 现在，花一些时间来让游戏按照你想的方式运行。包括游戏失败或胜利的方法，然后玩游戏，直到某个条件达成。
      courseE_playLab_scaffold6: 完成了！现在你可以玩自己的游戏，或者分享给你的朋友或同学了！
      courseE_video_createFunctions: 我们还没有创建函数的视频。这是一个占位符。。。
      courseE_video_createFunctions2: 我们还没有创建函数的视频。这是一个占位符。。。
      courseE_video_createFunctions2_2018: 我们还没有创建函数的视频。这是一个占位符。。。
      courseE_video_createFunctions2_2019: 我们还没有创建函数的视频。这是一个占位符。。。
      courseF_artist_for1: 试验`计数循环`，并试试`counter`（计数器）变量。
      courseF_artist_for10: 自由发挥：试试用`counter`（计数器）变量和其它画图元素来画出这样的神奇的图画。
      courseF_artist_for10_2018: 自由发挥：试试用`counter`（计数器）变量和其它画图元素来画出这样的神奇的图画。
      courseF_artist_for10_2019: 自由发挥：试试用`counter`（计数器）变量和其它画图元素来画出这样的神奇的图画。
      courseF_artist_for1_2018: 试验`计数循环`，并试试`counter`（计数器）变量。
      courseF_artist_for1_2019: 试验`计数循环`，并试试`counter`（计数器）变量。
      courseF_artist_for2: 创建这堆边长从50到100像素的三角形。
      courseF_artist_for2_2018: 创建这堆边长从50到100像素的三角形。
      courseF_artist_for2_2019: 创建这堆边长从50到100像素的三角形。
      courseF_artist_for3: '这些三角形的边长从20像素到200像素，并且每个三角形比上一个大20像素。 '
      courseF_artist_for3_2018: '这些三角形的边长从20像素到200像素，并且每个三角形比上一个大20像素。 '
      courseF_artist_for3_2019: '这些三角形的边长从20像素到200像素，并且每个三角形比上一个大20像素。 '
      courseF_artist_for4: '这些正方形从15像素长开始。最大的是300像素长，每个都比上一个大15像素。 '
      courseF_artist_for4_2018: '这些正方形从15像素长开始。最大的是300像素长，每个都比上一个大15像素。 '
      courseF_artist_for4_2019: '这些正方形从15像素长开始。最大的是300像素长，每个都比上一个大15像素。 '
      courseF_artist_for5: 只从上一关的代码中改动一处就能创建出这幅图像。你能找到什么需要改动吗？
      courseF_artist_for5_2018: 只从上一关的代码中改动一处就能创建出这幅图像。你能找到什么需要改动吗？
      courseF_artist_for5_2019: 只从上一关的代码中改动一处就能创建出这幅图像。你能找到什么需要改动吗？
      courseF_artist_for6: 从上一关的代码开始重新创建，但需要转89度来让正方形产生一点螺旋。
      courseF_artist_for6_2018: 从上一关的代码开始重新创建，但需要转89度来让正方形产生一点螺旋。
      courseF_artist_for6_2019: 从上一关的代码开始重新创建，但需要转89度来让正方形产生一点螺旋。
      courseF_artist_for7: 将上一关的代码做三个小小的改动来画出这个！
      courseF_artist_for7_2018: 将上一关的代码做三个小小的改动来画出这个！
      courseF_artist_for7_2019: 将上一关的代码做三个小小的改动来画出这个！
      courseF_artist_for8: 将角度改小为72度来得到一个螺旋状的五边形。
      courseF_artist_for8_2018: 将角度改小为72度来得到一个螺旋状的五边形。
      courseF_artist_for8_2019: 将角度改小为72度来得到一个螺旋状的五边形。
      courseF_artist_for9: |-
        **灵感：** 用 Use the counter inside
        the `set alpha` block to get this faded center.`set alpha`（设置透明度）模块中的计数器来获得淡出的中心。
      courseF_artist_for9_2018: |-
        **灵感：** 用 Use the counter inside
        the `set alpha` block to get this faded center.`set alpha`（设置透明度）模块中的计数器来获得淡出的中心。
      courseF_artist_for9_2019: |-
        **灵感：** 用 Use the counter inside
        the `set alpha` block to get this faded center.`set alpha`（设置透明度）模块中的计数器来获得淡出的中心。
      courseF_artist_for_challenge1: 你能想出如何重新创建这幅画吗？
      courseF_artist_for_challenge1_2018: 你能想出如何重新创建这幅画吗？
      courseF_artist_for_challenge1_2019: 你能想出如何重新创建这幅画吗？
      courseF_artist_for_challenge2: 你能想出如何使用一个简单的循环来重新创建这幅画吗？
      courseF_artist_for_challenge2_2018: 你能想出如何使用一个简单的循环来重新创建这幅画吗？
      courseF_artist_for_challenge2_2019: 你能想出如何使用一个简单的循环来重新创建这幅画吗？
      courseF_artist_fwp1: 编辑函数`draw a square`（画一个正方形）来查找缺陷。
      courseF_artist_fwp2: 编辑函数以接收一个叫做 "长度" 的参数。
      courseF_artist_fwp2_predict1: 编辑函数以接收一个叫做 "长度" 的参数。
      courseF_artist_fwp3: 创建一个名为 "绘制正方形" 的函数, 并使用它用参数来来描这四个盒子。
      courseF_artist_fwp4: 编辑此函数，添加一个多边形边数的参数。
      courseF_artist_fwp5: '使用最后一个关卡中的函数来绘制这一系列形状。  '
      courseF_artist_fwp6: '挑战: 用`length`（长度）和`sides`（边长）参数来编辑`画一个螺旋边缘`函数, 然后重新创建这些形状。'
      courseF_artist_fwp7: 完成`画一个螺旋边缘`的函数来要求螺旋的中心也需要一个最小长度。
      courseF_artist_fwp8: 你能想出如何使用刚才创建的函数来绘制这个图吗？
      courseF_artist_fwp9: '自由发挥: 画一些很棒的东西！ 调整笔的宽度来看看画出来的图像有什么不同！'
      courseF_artist_fwp_challenge1: 你能弄清楚这个程序是如何工作的吗？
      courseF_artist_fwp_challenge2: 用你在上一关卡中学到的东西来画这样的图像。
      courseF_artist_variables10: '这是最后一个关卡中的代码。请尝试以其他方式编辑该变量。  '
      courseF_artist_variables10_2018: '这是最后一个关卡中的代码。请尝试以其他方式编辑该变量。  '
      courseF_artist_variables10_2019: '这是最后一个关卡中的代码。请尝试以其他方式编辑该变量。  '
      courseF_artist_variables2: '现在画出三个三角形, 让它们彼此挨着。   '
      courseF_artist_variables2_2018: '现在画出三个三角形, 让它们彼此挨着。   '
      courseF_artist_variables2_2019: '现在画出三个三角形, 让它们彼此挨着。   '
      courseF_artist_variables3: 将长度50移动到一个变量中，这样我们能在下面几关用到它。
      courseF_artist_variables3_2018: 将长度50移动到一个变量中，这样我们能在下面几关用到它。
      courseF_artist_variables3_2019: 将长度50移动到一个变量中，这样我们能在下面几关用到它。
      courseF_artist_variables4: 现在，用`length`（长度）变量来让小艺术家在三角形之间向前跳`length`（长度）像素。
      courseF_artist_variables4_2018: 现在，用`length`（长度）变量来让小艺术家在三角形之间向前跳`length`（长度）像素。
      courseF_artist_variables4_2019: 现在，用`length`（长度）变量来让小艺术家在三角形之间向前跳`length`（长度）像素。
      courseF_artist_variables5: 在代码的末尾添加另一组循环来再增加三个三角形。这次，向前移动，并向上！
      courseF_artist_variables5_2018: 在代码的末尾添加另一组循环来再增加三个三角形。这次，向前移动，并向上！
      courseF_artist_variables5_2019: 在代码的末尾添加另一组循环来再增加三个三角形。这次，向前移动，并向上！
      courseF_artist_variables6: '现在，让三角形是60像素宽，并跳60像素。  '
      courseF_artist_variables6_2018: '现在，让三角形是60像素宽，并跳60像素。  '
      courseF_artist_variables6_2019: '现在，让三角形是60像素宽，并跳60像素。  '
      courseF_artist_variables6a: 用80像素边长的正方形来制作这个图案，并且在每个之间，让小艺术家跳过80像素。
      courseF_artist_variables6a_2018: 用80像素边长的正方形来制作这个图案，并且在每个之间，让小艺术家跳过80像素。
      courseF_artist_variables6a_2019: 用80像素边长的正方形来制作这个图案，并且在每个之间，让小艺术家跳过80像素。
      courseF_artist_variables7: '画一个150像素边长的三角形。 '
      courseF_artist_variables7_2018: '画一个150像素边长的三角形。 '
      courseF_artist_variables7_2019: '画一个150像素边长的三角形。 '
      courseF_artist_variables8: 用上一关的来重建这个三角形的代码，但这次用`设置长度为`模块，来在循环的末尾处重置`length`（长度）变量为`length`+10。
      courseF_artist_variables8_2018: 用上一关的来重建这个三角形的代码，但这次用`设置长度为`模块，来在循环的末尾处重置`length`（长度）变量为`length`+10。
      courseF_artist_variables8_2019: 用上一关的来重建这个三角形的代码，但这次用`设置长度为`模块，来在循环的末尾处重置`length`（长度）变量为`length`+10。
      courseF_artist_variables9: 看看当你重复最后一个关卡的代码30次, 而不是3次会是什么结果! 你可以选择任何颜色的线条或图案，
      courseF_artist_variables9_2018: 看看当你重复最后一个关卡的代码30次, 而不是3次会是什么结果! 你可以选择任何颜色的线条或图案，
      courseF_artist_variables9_2019: 看看当你重复最后一个关卡的代码30次, 而不是3次会是什么结果! 你可以选择任何颜色的线条或图案，
      courseF_artist_variablesFP: "**自由发挥：** 用你学到的知识来创建自己的图画。 "
      courseF_artist_variablesFP_2018: "**自由发挥：** 用你学到的知识来创建自己的图画。 "
      courseF_artist_variablesFP_2019: "**自由发挥：** 用你学到的知识来创建自己的图画。 "
      courseF_artist_variables_challenge1: 你能创建一个`length`（长度）变量，并用它来创建这个图案吗？
      courseF_artist_variables_challenge1_2018: 你能创建一个`length`（长度）变量，并用它来创建这个图案吗？
      courseF_artist_variables_challenge1_2019: 你能创建一个`length`（长度）变量，并用它来创建这个图案吗？
      courseF_artist_variables_challenge2: 现在你已经学到了做这个图案需要的所有东西！
      courseF_artist_variables_challenge2_2018: 现在你已经学到了做这个图案需要的所有东西！
      courseF_artist_variables_challenge2_2019: 现在你已经学到了做这个图案需要的所有东西！
      courseF_bee_conditionals10: 收集所有的花蜜并制作蜂蜜。
      courseF_bee_conditionals1_predict1: 看看云下是否有朵花。如果有一朵花, 就采集花蜜。
      courseF_bee_conditionals2: '在采集花蜜前，检查每朵云下面是不是有花。  '
      courseF_bee_conditionals3: '帮助蜜蜂收集所有的花蜜。 '
      courseF_bee_conditionals4: 使用尽可能少的模块来收集所有的花蜜。
      courseF_bee_conditionals5: 使用尽可能少的模块来收集所有的花蜜。
      courseF_bee_conditionals7_predict2: 使用 "如果/否则" 模块收集花朵的花蜜, 在蜂窝里制作蜂蜜。
      courseF_bee_conditionals8: |-
        如果有花，收集花蜜。
        否则, 酿蜂蜜（因为那里有蜂窝）。
      courseF_bee_for1: 用尽可能少的模块来从每朵花里收集花蜜。
      courseF_bee_for10: "**挑战：** 用你学会的关于`计数循环`循环的知识来试着解决这个问题。 "
      courseF_bee_for10_2018: "**挑战：** 用你学会的关于`计数循环`循环的知识来试着解决这个问题。 "
      courseF_bee_for10_2019: "**挑战：** 用你学会的关于`计数循环`循环的知识来试着解决这个问题。 "
      courseF_bee_for11: 你应该增加多少来收集15，然后12，然后9，6，3个花蜜？
      courseF_bee_for11_2018: 你应该增加多少来收集15，然后12，然后9，6，3个花蜜？
      courseF_bee_for11_2019: 你应该增加多少来收集15，然后12，然后9，6，3个花蜜？
      courseF_bee_for1_2018: 用尽可能少的模块来从每朵花里收集花蜜。
      courseF_bee_for1_2019: 用尽可能少的模块来从每朵花里收集花蜜。
      courseF_bee_for2: 写出代码来帮助蜜蜂收集所有的花蜜。
      courseF_bee_for2_2018: 写出代码来帮助蜜蜂收集所有的花蜜。
      courseF_bee_for2_2019: 写出代码来帮助蜜蜂收集所有的花蜜。
      courseF_bee_for4: 帮助蜜蜂收集所有的花蜜。
      courseF_bee_for4_2018: 帮助蜜蜂收集所有的花蜜。
      courseF_bee_for4_2019: 帮助蜜蜂收集所有的花蜜。
      courseF_bee_for5: 使用`counter`（计数器）变量两次来通过这关。
      courseF_bee_for5_2018: 使用`counter`（计数器）变量两次来通过这关。
      courseF_bee_for5_2019: 使用`counter`（计数器）变量两次来通过这关。
      courseF_bee_for6: 通过从5到1每次减1，来收集花蜜。
      courseF_bee_for6_2018: 通过从5到1每次减1，来收集花蜜。
      courseF_bee_for6_2019: 通过从5到1每次减1，来收集花蜜。
      courseF_bee_for7: 通过每次增加2来收集所有的花。
      courseF_bee_for7_2018: 通过每次增加2来收集所有的花。
      courseF_bee_for7_2019: 通过每次增加2来收集所有的花。
      courseF_bee_for8: 你已经明白了！应该递增多少来收集3，6，9，12，15个花蜜？
      courseF_bee_for8_2018: 你已经明白了！应该递增多少来收集3，6，9，12，15个花蜜？
      courseF_bee_for8_2019: 你已经明白了！应该递增多少来收集3，6，9，12，15个花蜜？
      courseF_bee_for9: 用`counter`（计数器）变量来用尽可能少的模块来走过这个花园。
      courseF_bee_for9_2018: 用`counter`（计数器）变量来用尽可能少的模块来走过这个花园。
      courseF_bee_for9_2019: 用`counter`（计数器）变量来用尽可能少的模块来走过这个花园。
      courseF_bee_for_challenge1: '用`计数循环`来收集所有的花蜜。 '
      courseF_bee_for_challenge1_2018: '用`计数循环`来收集所有的花蜜。 '
      courseF_bee_for_challenge1_2019: '用`计数循环`来收集所有的花蜜。 '
      courseF_bee_for_challenge2: 使用尽可能少的模块来解决这个关卡。
      courseF_bee_for_challenge2_2018: 使用尽可能少的模块来解决这个关卡。
      courseF_bee_for_challenge2_2019: 使用尽可能少的模块来解决这个关卡。
      courseF_bee_functions2: 使用`只收集花蜜`函数来收集每朵花的花蜜。
      courseF_bee_functions3: 点击 "编辑" 把代码放入`只酿蜂蜜`函数，然后用它来通过这个关卡。
      courseF_bee_functions3a: 写一个函数，如果蜜蜂在一朵花上就采花蜜，否则就酿蜂蜜。用函数来通过这关！
      courseF_bee_functions4: |-
        “移动并获得花蜜”函数会让蜜蜂转身并收集花蜜，然后会让蜜蜂返回出发的地方。

        用这个函数收集所有的花蜜。
      courseF_bee_functions5a: 使用`移动和检查`函数来收集所有的花蜜。
      courseF_bee_functions6: 帮助蜜蜂通过在花那里左转，并在蜂窝那里右转来穿过迷宫。
      courseF_bee_functions7: 从最后一个关卡重建你的函数, 来通过这个迷宫。
      courseF_bee_functions8a: 收集所有的花蜜或酿造所有的蜂蜜!
      courseF_bee_functionsPre7: 现在尝试构建一个函数来通过这个迷宫。 这和上次有什么不同？
      courseF_bee_functions_challenge1: 创建一个新的函数，当前方有路的时候，收集所有的花蜜和蜂蜜。
      courseF_bee_functions_challenge2: 用你所学的来解决这个关卡。
      courseF_bee_fwp2: 将此代码拉入一个函数, 然后调用该函数以检查此行是否有花蜜。
      courseF_bee_fwp3: 让我们看看这个函数是否能使收集这三行花蜜变得更加容易。
      courseF_bee_fwp4: 向函数中添加一个`length`（长度）参数, 以便它在该行的长度不同时仍能正常工作。
      courseF_bee_fwp5: 使用此函数收集花蜜。
      courseF_bee_fwp6: 为这个关卡建立一个简短而优美的解决方案。
      courseF_bee_fwp7: "\\*\\* 挑战: \\*\\* 修改你的函数也能酿蜂蜜。"
      courseF_bee_fwp8: 使用你的新函数来解决这个螺旋。
      courseF_bee_fwp9_predict1: 使用你的新函数来通关。
      courseF_bee_fwp_challenge1: 使用一个有`length`（长度）参数的函数，并在里面使用`计数循环`来收集所有玉米。
      courseF_bee_fwp_challenge2: '使用一个有`length`（长度）参数的函数，并在里面使用`计数循环`来收集每一行的蔬菜。 '
      courseF_bee_variables_1_2018: 完成代码，让蜜蜂能够收集所有蜂蜜和花蜜。
      courseF_bee_variables_1_2019: 完成代码，让蜜蜂能够收集所有蜂蜜和花蜜。
      courseF_bee_variables_2_2018: 在一处编辑代码，让蜜蜂能收集所有的蜂蜜和花蜜。
      courseF_bee_variables_2_2019: 在一处编辑代码，让蜜蜂能收集所有的蜂蜜和花蜜。
      courseF_bee_variables_3_2018: 如果想用同样的函数来通过这关，要在每次循环时从这个变量上减一。
      courseF_bee_variables_3_2019: 如果想用同样的函数来通过这关，要在每次循环时从这个变量上减一。
      courseF_bee_variables_4_2018: 为这一关编辑代码。
      courseF_bee_variables_4_2019: 为这一关编辑代码。
      courseF_bee_variables_5_2018: 创建自己的代码来解决这个难题。
      courseF_bee_variables_5_2019: 创建自己的代码来解决这个难题。
      courseF_bee_variables_6_2018: "**挑战** 现在试试这个难题！"
      courseF_bee_variables_6_2019: "**挑战** 现在试试这个难题！"
      courseF_bee_variables_7_2018: 这个难题有点不同。需要什么来解决它？
      courseF_bee_variables_7_2019: 这个难题有点不同。需要什么来解决它？
      courseF_bee_variables_8_2018: 蜜蜂会从这朵花中收集多少花蜜？
      courseF_bee_variables_8_2019: 蜜蜂会从这朵花中收集多少花蜜？
      courseF_playlab_variables1a: 变量能够用来存放晚一些想用的文本。通过将这个文本赋值给`shout`（喊叫）变量，让足球运动员琪琪喊出："进球了！"
      courseF_playlab_variables2b: 把变量“color”（颜色）放在“join”（加入）模块的空插槽中来把它放到这句话的中间。
      courseF_playlab_variables3b_josh: '帮助琪琪和布赖恩对话，使用变量`age`来放到所有需要使用年龄`12`的地方。 '
      courseF_playlab_variables4b: 将变量放到正确的位置来创建这个对话。
      courseF_playlab_variables5c: 让我们把`问`模块和一个`如果/否则`语句组合起来来做一些有趣的事情！
      courseF_playlab_variables6c: 在这一阶段的剩余部分，我们要建立一个由你来控制的游戏！
      courseF_playlab_variables7b: 创建一些问题，并将答案编织在一起做成你自己的故事。
      courseF_playlab_variables7c: 通过让用户来猜颜色，来让这个游戏做点什么。
      courseF_playlab_variables8c: 使用变量来使你的游戏更个性化。
      courseF_playlab_variables_challenge1: '使用这些模块使演员分享一个敲门问答的笑话。 '
      courseF_playlab_variables_challenge2: 这个游戏将使用变量来保存得分。捉住小猫得2分。捉住企鹅得3分。当小猫和企鹅碰到时，分数就没了。正好得到10分时就赢了！
      courseF_video_createFunctions: 我们还没有创建函数的视频。这是一个占位符。。。
      coursea_maze_ramp1_2018: 在这一关中，将所有模块拼到一起，并点击"▶运行"！
      coursea_maze_ramp1_2019: 在这一关中，将所有模块拼到一起，并点击"▶运行"！
      flappy_1: 将一个模块附加到"单击时"模块上，然后按"运行"。单击或点击屏幕去移动像素鸟到目标.
      flappy_11: 创建你自己的像素鸟游戏。你可以改变所有的有视效果，所有的规则，甚至重力。当你完成后，单击完成，让朋友在他们手机上试试你的手机游戏。
      flappy_2: 现在我们已经添加了一些地面。将一个块附加到"撞到地面时"块。当像素鸟撞地时，您的代码需要 ' 结束游戏 '。
      flappy_3: "“运行时”块允许你在游戏开始时运行你的代码. 尝试设置水平速度和扑向目标。"
      flappy_4: Flappy将会穿越障碍，除非你编写代码使他碰撞上。将一个模块附加到"当击中一个障碍"块。当Flappy 撞上到第一组管道时，您的代码需要
        ' 结束游戏 '。
      flappy_5: 让我们添加一个记分牌。当 Flappy 穿过障碍计分数。将添加到"当通过一个障碍"块，然后当像素鸟通过第一个管道后得分。
      flappy_6: 在使得像素鸟飞的距离更小或更大之后，看看是否你仍然能得分。
      flappy_7: 接下来, 请尝试将另一个块附加到"运行时"块来更改场景.
      flappy_8: 不只是在游戏开始时，您可以随时设置的视觉效果。请尝试在其他事件发生时设置一个随机场景，例如，在通过障碍时。
      flappy_9: 现在我们要把前面学的全部混在一起啦，当击中一个障碍物，请尝试把分数设置回0分，而不是将游戏结束。
      frozen circle: 圆形是一种特殊的形. 你可以计算出什么号码能取代问号来画圆形吗?
      frozen circle function: 使用新的"创建一个圆"块来创建 10 个相互重叠的圆圈。画圈之间别忘了跳一下哦。
      frozen circle function in circle: 现在让我们创建20个交叠的圆圈，在每圆圈之间转18度。
      frozen circle function with parameter: 这里有一个“创建圆圈”的模块，可以画不同大小的圆圈。你可以用它来创建一个5像素的小圆圈和10像素的大圆圈吗?
      frozen cross: 将这些命令放到“重复”模块里来画一个加号。你注意到爱莎可以前后移动了吗？
      frozen cross rotate: 现在请尝试重复 10 次。每个行之间你需要转多少度？
      frozen cross rotate dense: 让我们重复90次！ 90进入360是多少次？提示：这是一个非常小的数目。
      frozen diamond: 将这些模块放到一个重复模块里来创建一个平行四边形。它和长方形很像，但是角度不同。这个平行四边形的角是60度和120度，而正方形的所有角度都是90度。
      frozen diamond mini snowflake: 你知道每个雪花的形状都不同吗？让我们用另一个循环来重复平行四边形4次来创建一个新的雪花。在每个平行四边形之间转90度。
      frozen diamond snowflake: 現在，让我们创建一个新的雪花, 使用“重复”块来重复一个平行四边形10次，把每一个平行四边形之间转右36度
      frozen freeplay: 你已经正式成为艺术大师！创建一个冬季仙境。
      frozen line: 你好！我是艾伦代尔的艾莎公主。请你帮我画一条直线。
      frozen perpendicular: 现在让我们看看我们是否可以画两条直线，前提是彼此必须存着90度角的相位关系。您将需要使用“转向”块和“移动”块。
      frozen snowflake branch: 试试用“创建雪花分支”模块来创建三个分支，来让它看起来像一片雪花。
      frozen snowflake full: 现在，让我们重复8次，做一个漂亮的雪花!
      frozen snowflower: 错综复杂的雪花模式可以用非常简单的形状来创建。 你可以重复5个大小为5的圆圈和5个大小为10的圆圈来做成一个模式吗?
      frozen square iterative: 我们好像已经成功地绘制了半个正方形。来，我们一起把四行条线组合起来绘制一个完整的正方形。
      frozen square loop: 你好！我是艾伦代尔的安娜公主！我们一起应用“重复“块绘制一个正方形。这样一来，我们可以减少必须使用的代码块。你觉得“重复”块必须循环多少次（???）才能让里面的代码块绘制出一个正方形呢？
      frozen square loop 3x: 让我们绘制三个正方形，每绘制一个正方形后，别忘了先转120度后再继续绘制下一个正方形。
      frozen square snowflake: 你可以试试绘制一朵雪花。用“重复”块绘制10个正方形，而且记得在绘制成每个正方形移之后，先把它移转36度后才开始画下一个正方形。
      grade2_collector_10: 快要完成了！收集尽可能多的宝藏来完成这个阶段！
      grade2_collector_10_2018: 快要完成了！收集尽可能多的宝藏来完成这个阶段！
      grade2_collector_10_2019: 快要完成了！收集尽可能多的宝藏来完成这个阶段！
      grade2_collector_A: 帮助罗瑞尔收集所有的宝藏。
      grade2_collector_A_2018: 帮助罗瑞尔收集所有的宝藏。
      grade2_collector_A_2019: 帮助罗瑞尔收集所有的宝藏。
      grade5_artist_binary11: 自由发挥：这是一张空白的画布。尽情画吧！
      grade5_artist_binary4: 你能通过循环3个二进制位（0和1）来画出这个图形吗？
      grade5_artist_binary5: 每个二进制字符串表达这个图形中的一行。你能重新排列他们，从而能够画出一张笑脸，而不是皱眉的脸吗？
      grade5_artist_binary8: 完成这幅画。
      grade5_artist_binary9: |-
        这是更高分辨率的画布 - 16像素乘以16像素！

        看看你用二进制位能创造出什么？
      grade5_pixelation: 用二进制来编码任何你喜欢的图像。二进制语言将只用“0”和“1”来表示。
      iceage_click_hello: '你能帮助喜得，在点击他的时候呼叫他的朋友们吗？ '
      iceage_free_play: 是时候创造你自己的游戏或故事了！
      iceage_hello1: 通过拖拽`说`模块出来，并连接`当运行时`事件下来帮助喜得说“你好！”
      iceage_hello2: 使用`演员___ 说`模块两次来帮助曼尼和喜得相互打招呼。
      iceage_move_events: 写代码, 帮助 斯奎特 得到所有的橡子!
      iceage_move_to_actor: 当迭戈发现曼尼时, 通过将一个方块连接到`当演员触碰`事件下来播放声音。
      iceage_move_to_flag: 斯奎特 在找他的橡子! 你能帮他移动最后200像素吗？
      iceage_repeat: 重复左右移动来帮助格瑞尼做锻炼。
      iceage_sound_and_points: '你可以完成这个程序，使它在喜得和格瑞尼相撞的时候同时**发出声音**并**得一分**吗？ '
      iceage_throw_hearts: 使用 "演员 \_\_ 抛出" 命令让 喜得 (演员 1) 把心扔向格瑞尼 (演员 2), 并设置格瑞尼的心情,
        让她在被击中时高兴。
      iceage_warn_ice_age: 把场景切换到一个冰雪的背景，并且设定喜得 (演员1) 的速度为快速。
      k-1 maze 1: 你能将我移到西边到达那只猪吗？
      ramp_artist_loops1: 向前移动60像素, 来完成这个关卡。
      ramp_artist_loops1_2018: 向前移动60像素, 来完成这个关卡。
      ramp_artist_loops1_2019: 向前移动60像素, 来完成这个关卡。
      ramp_artist_loops2: 向前移动五次, 画这条彩色线。
      ramp_artist_loops2_2018: 向前移动五次, 画这条彩色线。
      ramp_artist_loops2_2019: 向前移动五次, 画这条彩色线。
      ramp_artist_loops3: 使用 "重复" 循环绘制五色虚线。
      ramp_artist_loops3_2018: 使用 "重复" 循环绘制五色虚线。
      ramp_artist_loops3_2019: 使用 "重复" 循环绘制五色虚线。
      ramp_artist_loops4: 当您在循环的最后添加了右转72度后, 会发生什么？
      ramp_artist_loops4_2018: 当您在循环的最后添加了右转72度后, 会发生什么？
      ramp_artist_loops5: 使用循环来绘制这个楼梯。
      ramp_artist_loops5_2018: 使用循环来绘制这个楼梯。
      ramp_artist_loops5_2019: 使用循环来绘制这个楼梯。
      ramp_artist_loops6: 编辑您的循环来绘制此楼梯。
      ramp_artist_loops6_2018: 编辑您的循环来绘制此楼梯。
      ramp_artist_loops6_2019: 编辑您的循环来绘制此楼梯。
      ramp_artist_loops7: 寻找规律，使用循环使此代码更短！
      ramp_artist_loops7_2018: 寻找规律，使用循环使此代码更短！
      ramp_artist_loops7_2019: 寻找规律，使用循环使此代码更短！
      ramp_artist_loops8: 寻找规律，使用循环使此代码更短。
      ramp_artist_loops8_2018: 寻找规律，使用循环使此代码更短。
      ramp_artist_loops8_2019: 寻找规律，使用循环使此代码更短。
      ramp_artist_loops9: 通过绘制正方形来解决这个关卡。
      ramp_artist_loops9_2018: 通过绘制正方形来解决这个关卡。
      ramp_artist_loops9_2019: 通过绘制正方形来解决这个关卡。
      scrat 16: 橡子！橡子！橡子！使用“如果”的代码块让我到哪里，最好用最少的代码块。
      scrat 17: 好吧，我们再做一遍吧-这个与上一个差不多，但是小心墙壁！
      scrat 18: 这个“如果-否则”代码块检查这个条件是否成立，然后做一件事或另一件事。如果想让我得到橡子的活，你需要尝试使用这个“如果-否则”代码块。
      scrat 19: 让我们来再练习一次使用“如果/否则”块，你能第一次就成功么？
      scrat 20: 你可以只添加3个代码块就帮我解决一个更复杂的迷宫吗？如果你做对了，我能走任何长度的曲线了。快一点！冰在融化！
