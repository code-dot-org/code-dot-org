"zh":
  data:
    script:
      name:
        20-hour:
          desc: K-8 计算机科学课程简介
          Unplug1: 第一阶段
          Maze: 第二阶段
          Unplug2: 第三阶段
          Unplug3: 第四阶段
          Artist: 第五阶段
          Unplug4: 第六阶段
          Artist2: 第七阶段
          Unplug5: 第八阶段
          Farmer: 第九阶段
          Unplug6: 阶段 10
          Artist3: 阶段 11
          Unplug7: 阶段 12
          Farmer2: 阶段 13
          Unplug8: 阶段 14
          Artist4: 阶段 15
          Unplug9: 阶段 16
          Farmer3: 阶段 17
          Unplug10: 阶段 18
          Artist5: 阶段 19
          Unplug11: 阶段 20
        Hour of Code:
          desc: 编程一小时
          Maze: 第一阶段
        Edit Code:
          desc: |
            编辑代码 (测试版)
          MazeEC: 第一阶段
        2014 Levels:
          desc: 反弹 (测试版)
          Bounce: 第一阶段
        Builder Levels:
          desc: 创建用户的谜题 （测试版）
          Custom: 第一阶段
        Flappy Levels:
          desc: Flappy Bird
          Flappy: 第一阶段
        Jigsaw Levels:
          desc: 拼图 (测试版)
          Jigsaw: 第一阶段
        Step Levels:
          desc: 迷宫 (测试版)
          MazeStep: 阶段一步
        edit-code:
          desc: |
            编辑代码 (测试版)
          MazeEC: 第一阶段
          Webapp: 第二阶段
          ArtistEC: 第三阶段
          StudioEC: 第四阶段
        events:
          desc: 反弹 (测试版)
          Bounce: 第一阶段
          Studio: 第二阶段
        builder:
          desc: 创建用户的谜题 （测试版）
          Custom: 第一阶段
        flappy:
          desc: Flappy Bird
          Flappy: 第一阶段
        jigsaw:
          desc: 拼图 (测试版)
          Jigsaw: 第一阶段
        step:
          desc: 迷宫 (测试版)
          MazeStep: 阶段一步
        wordsearch:
          desc: 拼字比赛 (测试版)
          WordSearch: 第一阶段
    game:
      name:
        Unplug1: 计算机科学导论
        Maze: 迷宫
        Multi: 选择题的东西
        Unplug2: 计算性思维
        Unplug3: 方格纸编程
        Artist: 艺术家
        Unplug4: 算法
        Artist2: 艺术家 2
        Unplug5: 函数
        Farmer: 农夫
        Unplug6: 条件语句
        Artist3: 艺术家 3
        Unplug7: 歌曲写作
        Farmer2: 农民 2
        Unplug8: 抽象化
        Artist4: 艺术家 4
        Unplug9: 编程接力
        Farmer3: ' 农夫3'
        Unplug10: 互联网
        Artist5: 艺术家 5
        Unplug11: 总结
        MazeEC: 迷宫
        Bounce: 跳
        Flappy: Flappy Bird
        Jigsaw: 拼图
        MazeStep: 迷宫步模式
        Wordsearch: 字谜
        Webapp: Web 应用程序
        ArtistEC: 艺术家
        TextMatch: 文本匹配
        StudioEC: 播放实验室
    trophy:
      name:
        Bronze: 铜色
        Silver: 银色
        Gold: 金色
    concept:
      description:
        sequence: 序列
        if: 如果块
        if_else: ”假设其他“板块
        loop_times: 重复次数块
        loop_until: 重复直到块
        loop_while: 当块
        loop_for: “计数器”块
        function: 函数
        parameters: 有参数的函数
    level:
      instructions:
        maze_2_2: '你可以帮我抓住这只淘气猪吗？把两个“向前移动”块堆在一起，然后按"运行程序"来帮我。 '
        maze_2_1: 这只猪让我生气。帮我抓住他！
        maze_2_2_5: 沿着这条路带我去找那只笨猪。躲开 TNT 炸药，不然我的羽毛就要被炸飞了！
        maze_2_3: 带我去找那个绿色的小恶魔！（小心 TNT 炸药）
        maze_2_4: 保持冷静，帮我找到那只坏猪。不然我要被它气死了！
        maze_2_5: 有一种方法可以只用两个块就抓到这只笨猪。你能想出来它是什么么？
        maze_2_6: 只用3个块，帮我抓住那只绿色的人侵者！
        maze_2_7: 用尽量少得快帮我驱逐这只坏猪。试试看使用“重复多次”块。
        maze_2_8: 当一个块是灰色的，这表示你不能删除它。解决这个难题，使用"重复"块，重复 3 次。试着把这3个区块放在灰色的"重复"块中： 移动、
          移动、 转。
        maze_2_9: 好的，试试看新的“重复直到”块，它会一直重复直到我抓到那只讨人厌的猪。
        maze_2_10: 好了，最后一次的联系 —— 你可以只用 4 块块来解决这个问题吗？
        maze_2_11: 亲爱的人类。我是一只僵尸。我饿了。我必须......得到向日葵......你可以用5块块让我到达那里吗？
        maze_2_12: 好的，这道题目很相似，但略有不同。你可以只用5块块解决它吗？
        maze_2_13: 用新的"如果"块让我来决定什么时候转弯。提示： 你只需要加一个块，但记住那些块是怎么排列的，这样下次你就会自己写了。
        maze_2_14: 好啦，这是最后一个谜题了，但你学会怎么使用"如果"块和"重复"块了么？
        maze_2_15: 我想要向日葵 ！使用"如果"块，让我用最少的块到达那里。
        maze_2_16: 好啦，让我们再来试一次 —— 这和之前的差不多，小心别被食人花吃了！
        maze_2_17: “如果 - 其他”块检查当前是否满足一个条件，并通过结果执行相应地块。试试用这个新的块让我得到那个向日葵。
        maze_2_18: 让我们来再联系一次使用“如果 - 其他”块，你能一次就让我达成目的么？
        maze_2_19: 你能不能加三个块来帮我走出这个复杂的迷宫？如果你做对了，那我就可以通过任何长度的弯曲路径了。
        turtle_1_1: 你好，我是一个艺术家。您可以用代码让我画任何东西。使用几个块让我画出图中的灰色线条。
        turtle_1_2: 现在，让我们来画个正方形。注意： 你可以用新的"设置颜色"块选择你最喜欢的颜色。
        turtle_1_3: 用三个块画一个正方形。
        turtle_1_4: 让我们来画一个三条边都是不同颜色的三角形。你可以用“随机颜色”块来选择不同的颜色。提示：你得在“转向”块上写上需要转多少度。
        turtle_1_5: 现在，让我们来画一个信封。先画一个三角形，再画一个正方形。
        turtle_1_6: 你能想出来怎么能画个三角形和正方形吗？提示： 第一，先画三角形，然后转个弯，来画正方形。
        turtle_1_7: 好的，让我们来试试更难一点的 —— 看看你能不能画一个绿色的眼镜。正方形的每边长为100个像素。两个正方形之间相距50像素。别忘了把它画成绿色！
        turtle_1_8: 好的，试试看运行这段代码会发生什么（按下"运行"）。然后，重复它来完成我们要画的图。每次的颜色都会不同。
        turtle_1_9: 如果要画一个圆，你知道应该在画问号的地方填上什么数字么？
        turtle_1_10: 你成功了 ！现在，画你想要画的吧。一些有趣的想法： 棒图、 雪花、 或螺旋线。记得试试看新的"设置宽度"块。玩得愉快！
        turtle_4_1: 你能只用三个块来画一个三角形么（每边100像素）？提示：使用“重复”块。
        turtle_4_2: 绘制这些三角形的工作区中添加某个地方在该程序已经出"正确的 90 度转向"块。
        turtle_4_3: 好的，这里是你写的画一个三角形的代码。你可以加一个"重复"和"转向"块来一朵漂亮的花吗？
        turtle_4_4: 这个是之前谜题的代码，但每画一个三角形只旋转36度。我们需要重复这段代码多少次呢?（提示： 画一个圆需要转360度)
        turtle_4_5: 这个是之前谜题的代码，但是重复了36度。我们每次需要转多少度呢?（提示： 画一个圆需要转360度)
        turtle_4_6: 你可以只用3个块来画一个边长为20像素的正方形吗？
        turtle_4_7: 这是你在上一个谜题写的画正方形的代码。你能重复它来画一个由10个相邻的正方形组成的梯子么？
        turtle_4_8: 这是你在上一个谜题写的代码。你能只加2个块来完成这幅画么？
        turtle_4_9: 这是你在上一个谜题写的代码。要完成这幅画，你需要转多少度呢？（你可能需要猜几次）
        turtle_4_10: 这是你在上一个谜题写的代码。你需要重复多少次来完成这幅画呢？
        turtle_4_11: 试试看改变“转向”块和“重复”块上的数字来画不同的花样。或者，试试看改变其余的代码来画你想要画的东西。
        maze_karel_1_1: 你好，我是一个农夫。我需要你帮我把一块地翻平来为种植做准备。把我移动到那堆土上面，并使用"删除"块来移除它。
        maze_karel_1_2: 下一步，把我移动到那个洞，并且用“填充”块来把它填平。这个洞需要两铲子土。
        maze_karel_1_3: 把我移到那堆土那里，告诉我需要多少铲子才能把这堆土移除。尽量使用少的块来解开这个谜题。
        maze_karel_1_4: 你能帮我移除这所有四堆土么？提示：试试用”重复“块。
        maze_karel_1_5: 帮我用五铲子的土来填充这些洞。提示： 你可以把"重复"块放在"当"块里面试试。
        maze_karel_1_6: 删除所有的土堆，尽可能使用尽量少的块。在”当“块的下拉菜单中有新的选项，它能告诉我现在是否站在一个土堆或一个洞上。
        maze_karel_1_7: 哇，我发现一个很深的洞 ！我不知道它需要多少铲子的土。您能不能编一个程序，往洞里填土直到地面被填平？
        maze_karel_1_8: 用尽量少的块帮我把田地那边的洞填平。
        maze_karel_1_9: 请尝试用尽可能少的块来移除所有的土堆。提示：请尝试使用‘while'块
        maze_karel_1_10: 我工作的太晚了，外面天都黑了。我没办法知道那些土堆有多大了。所以”当“块上的某些选项消失了。把我挪到田地的另一头，如果遇到一个土堆，就移除它。
        maze_karel_1_11: 外面还是一片漆黑。让我移动到田地的另一边。如果遇到一个土堆，就移除它。相对的，如果遇到一个洞，就填平他。提示：你可以使用”如果“块的下拉菜单中的选项。
        turtle_2_1: 你好。我是僵尸艺术家。我喜欢画画 ！帮我画一个有颜色的正方形。说明： 现在你可以用的块都被放在了目录里了。
        turtle_2_2: 欢迎使用函数功能来定义新的块！在”函数“目录下，找到”画一个正方形“块，用它画一个 50 x 50 的绿色小正方形。
        turtle_2_3: 用 （在"循环"目录下） 的"重复"块画 3 个大小为100的正方形，每个相隔120度。试试用3种不同的随机颜色。
        turtle_2_4: 现在，让我们画更复杂的图案吧。更改代码来画36个正方形，100像素大小，每个相隔10度。提示： 你可以使用滑块来让我走得更快。
        turtle_2_5: 试试画大小为50，60，70，80，和90的正方形。你可以使用五次"画一个正方形"函数。
        turtle_2_6: 好的，在这个程序中将要使用计数器，来画一个和上次一样的正方形。你要画的正方形大小和计数器当前数字的大小相同。试试看怎么用“计数器”块。提示：
          它是在『变量』分类中。
        turtle_2_7: 这个程序可以画一个螺旋，但我们已经禁用了这些块，所以它们不能运行。你能不能试试看用 (在循环目录下的）"计数"块 和(在变量类别）"计数器"块
          画一个相同的螺旋。
        turtle_2_7_5: (在函数目录中）有一个新的函数："画一个雪人"。画两个雪人，一个高为250像素，一个高为100像素。
        turtle_2_8: 这个题目有点儿难。试试使用"画一个雪人"的函数和（在动作目录中）新的"向前跳"块。画3个颜色不同的雪人，每两个之间相隔 100
          个像素。
        turtle_2_9: 用一个"计数"循环块来画雪人一家人。他们的高度分别是110， 100， 90， 80，和 70，每两个之间相隔60像素。
        turtle_2_10: 试试用这些代码来画不同的螺旋。如果你改变旋转的次数会怎么样？或者在循环中设置随机的颜色？画你喜欢的。
        maze_karel_2_1: 请帮助我移除所有的土堆，填平地上所有的洞。 尝试使用循环来节省块。提示：你可以将一个循环放在另一个循环里。
        maze_karel_2_2: 我们定义了一个新块："填充5"，在函数目录中。用它来帮我把这个洞填平。
        maze_karel_2_3: 使用新的"填充 5"函数块来帮我填平所有的洞。你得从函数目录里拖出"填充 5"块。
        maze_karel_2_4: 定义一个新的函数：”移除 7“。然后用它编写一个程序来帮我删除所有土堆。
        maze_karel_2_5: 创建一个新的函数，从一个土堆中”移除 6“铲子土，并用它来帮我移平所有的土堆。
        maze_karel_2_6: 用这两个新的函数，"填充 8"和"移除 8"，帮我移除所有的土堆并填平所有的洞。
        maze_karel_2_7: 在我的田里有一头牛！编写一个新的函数，帮助我躲开母牛并且移除一个土堆。把你所有需要用到的块都放到新函数块里面。
        maze_karel_2_8: 使用这个新功能，"避免母牛和移除 1"，来帮我移除所有的土堆。
        maze_karel_2_9: 好的，这个函数能移除4个一列的土堆。试试把它放在循环里面，看看你能不能只用几个新的块来移除所有的土堆。
        maze_karel_2_10: 我要走到田地的另一边，用这两个函数帮我来移除所有的土堆并且填充所有的洞。
        turtle_3_1: 我们在这个谜题里给了你两个函数，"画一个正方形"和"画一个圆"，的定义。只是定义一个函数是不会运行其中的块的。你必须拖出来"画一个正方形"块才能让它画一个正方形给你。
        turtle_3_2: 用”画一个正方形“作为例子，创建一个新的函数，”画一个三角形“，并使用它。
        turtle_3_3: 在猫周围画一个三角形围栏，然后在牛周围画一个四方形围栏。提示：请边做边测试
        turtle_3_4: 你能否使用“画一个正方形”和“画一个三角形”（和其他一些块）来在狮子周围画一座房子？
        turtle_3_5: 现在创建一个新的"画房子"函数，使用它来圈住两只猫。提示： 使用"做点什么"块创建一个新的函数，并给它命名。
        turtle_3_6: 以"画一个正方形"为例，给"画一个三角形"加一个“长度”变量。然后画出不同大小的三角形。（提示： 请单击星星标志来为一个函数添加变量)
        turtle_3_7: 为“画房子”函数添加一个“长度”变量。给大象建一所大房子（边长150像素）
        turtle_3_8: 这儿是之前那道谜题用到的全部的块。编辑“画房子”函数，使得最后一笔落在右下角。用这个编辑过的函数画三个房子。
        turtle_3_9: 你能在不看帮助的情况下自己重新创建“画房子”函数吗？试试看！然后画一排房子。
        turtle_3_10: 你已经学会了很多东西了！试着用他们画任何你想画的图案。试着画一颗星星，一个螺旋或者一片好看的雪花。
        maze_karel_debug_seq_1: 欢迎来到代码调试环节！我的代码不能正常工作。你能研究并且解决一下这个问题吗？我想要把地面铲平以便种植作物。
        maze_karel_debug_seq_2: 这段程序错在哪里？你应该怎么修改才能让我移除那块土堆？
        maze_karel_debug_repeat: 帮我调试一下这段程序。我希望我的地看起来很平整。
        maze_karel_debug_while: 怎么修改这段程序才能帮我填上这个洞？
        maze_karel_debug_if: 求助！请调试这段程序使得我的地完全平整。
        maze_karel_debug_if_else: 请调试这段程序，使得我能把洞填上并且移除所有的土堆。
        maze_karel_debug_function_1: 你应该怎么修改这段程序才能够帮我移除所有的土堆呢？
        maze_karel_debug_function_2: 你能调试一下这段程序来帮助我铲平我的地吗？
        maze_karel_debug_function_3: 请编辑这段程序来使得我能够移除地上所有的土堆。
        turtle_5_1: 请尝试运行此程序，并进行更改，看看会发生什么。你能弄清楚它是如何工作的吗？（或者你可以把这段程序删掉并且重写成其他任何你想要的程序）
        turtle_5_2: 请尝试运行此程序，并进行更改，看看会发生什么。你能弄清楚它是如何工作的吗？（或者你可以把这段程序删掉并且重写成其他任何你想要的程序）
        turtle_5_3: 请尝试运行此程序，并进行更改，看看会发生什么。你能弄清楚它是如何工作的吗？（或者你可以把这段程序删掉并且重写成其他任何你想要的程序）
        turtle_5_4: 请尝试运行此程序，并进行更改，看看会发生什么。你能弄清楚它是如何工作的吗？（或者你可以把这段程序删掉并且重写成其他任何你想要的程序）
        turtle_5_5: 请尝试运行此程序，并进行更改，看看会发生什么。你能弄清楚它是如何工作的吗？（或者你可以把这段程序删掉并且重写成其他任何你想要的程序）
        turtle_5_6: 请尝试运行此程序，并进行更改，看看会发生什么。你能弄清楚它是如何工作的吗？（或者你可以把这段程序删掉并且重写成其他任何你想要的程序）
        maze_3_1: 我想要抓住那只猪！输入几个 move(); 语句，我就可以拿回我的蛋了。
        maze_3_2: 给我写一个程序，让我能够到达那只猪。
        maze_3_3: 我怎样才能抓住那只猪？小心别让我撞上TNT炸弹！
        maze_3_4: 写个程序，让我绕过那些TNT炸药，抓住那只猪。
        bounce_1: 附加块在“左箭头时”块上，然后按“运行”。使用左箭头来移动挡板来到达终点目标。
        bounce_2: 附加一个块到"当左箭头"块和“当右键头”块，然后按"运行程序"。移动球拍到达两个结束目标。
        bounce_3: 现在，尝试类似的做法同"当上箭头"块。移动球拍到顶部目标。
        bounce_4: 这次你需要添加四个块。移动到所有四个球拍完成目标，以完成这个谜题。
        bounce_5: 我们要发送球飞向球拍。将一个块附加到"当球击中桨"块以确保球到达完成目标。
        bounce_6: 现在完成的目标是在顶上。您需要将块附加到两个"当球命中"块以解决这一难题。
        bounce_7: 将块附加到每个"当"块。跳起球，直到它击中完成目标。
        bounce_10: 现在有一个目标在顶部。附加上"得分点"和"分数对手点"块"当球在目标中"和"当球未命中桨"块去做一场游戏。看看你可以获得多少分，在你对手得分两次之前。
        bounce_11: 现在，你可以在"运行时"的块附加块. 你必须附加新的"启动新球"块在多个​​位置中. 此外，试着改变场景或球拍和球的速度，看看在你对手得两次分数之前你能得多少分.
        bounce_12: 創建你自己的彈跳遊戲。你可以改變所有的可視效果和規則。當你完成後，單擊Finish（完成）以讓朋友在他們的手機上試試你的手機遊戲。
        Custom_builder: 将块从工具箱中拖动到工作区来绘制你想创建的水平。当你准备好时, 按"运行"。
        flappy_1: 将一块附加到"单击时"块中，然后按"运行"。单击或点击屏幕去移动Flappy到目标.
        flappy_2: 现在我们已经添加了一些地面。将一个块附加到"撞到地面时"块。Flappy 撞了时，您的代码需要 ' 结束游戏 '。
        flappy_3: “运行时”块允许你在游戏开始时运行你的代码. 尝试设置水平速度和扑向目标。
        flappy_4: Flappy将会穿越障碍，除非你编写代码使他崩溃。将一个块附加到"命中障碍时"块。当Flappy 撞上到第一组管道时，您的代码需要
          ' 结束游戏 '。
        flappy_5: 让我们添加一个记分牌。当 Flappy 穿过障碍计分数。将添加到"当通过障碍"块，然后得分当 Flappy 通过第一套管道。
        flappy_6: 看看是否你仍然能得分，在使得 Flappy 飞得距离更小或更大之后。
        flappy_7: 接下来, 请尝试将另一个块附加到"运行时"块来更改现场.
        flappy_8: 不只是在游戏开始时，您可以随时设置的视觉效果。请尝试在其他事件发生时设置一个随机场景，例如，在通过障碍时。
        flappy_9: 去搀混它们，当击中障碍或者掉到地上，不只是结束游戏，尝试设置分数为0。
        flappy_11: 创建你自己的Flappy游戏。你可以改变所有的有视效果，所有的规则，甚至重力。当你完成后，单击Finish（完成），让朋友在他们手机上试试你的手机游戏。
        flappy_k1_1: 玩Flappy游戏
        flappy_k1_2: 将一块附加到"单击时"块中，然后按"运行"。单击或点击屏幕去移动Flappy到目标.
        flappy_k1_3: 现在我们已经添加了一些地面。将一个块附加到"撞到地面时"块。Flappy 撞了时，您的代码需要 ' 结束游戏 '。
        flappy_k1_4: “运行时”块允许你在游戏开始时运行你的代码. 尝试设置水平速度和扑向目标。
        flappy_k1_5: Flappy将会穿越障碍，除非你编写代码使他崩溃。将一个块附加到"命中障碍时"块。当Flappy 撞上到第一组管道时，您的代码需要
          ' 结束游戏 '。
        flappy_k1_6: 让我们添加一个记分牌。当 Flappy 穿过障碍计分数。将添加到"当通过障碍"块，然后得分当 Flappy 通过第一套管道。
        flappy_k1_7: 看看你能不能超越障碍来得多分点
        flappy_k1_8: 接下来, 请尝试将另一个块附加到"运行时"块来更改现场.
        flappy_k1_9: 试图附加一个“设置玩家”块到“运行时”块上来更改玩家.
        jigsaw_1: 单击块
        jigsaw_2: 将块拖到目标
        jigsaw_3: 排列块以形成图像
        jigsaw_4: 排列块以形成图像
        jigsaw_5: 排列块以形成图像
        jigsaw_6: 排列块以形成图像
        jigsaw_7: 排列块以形成图像
        jigsaw_8: 排列块以形成图像
        jigsaw_9: 排列块以形成图像
        jigsaw_10: 排列块以形成图像
        jigsaw_11: 排列块以形成图像
        jigsaw_12: 排列块以形成图像
        jigsaw_13: 解决这一难题 ！
        mazestep_1: 迷宫步骤说明在这里
        mazestep_2: 迷宫步骤说明在这里
        mazestep_3: 迷宫步骤说明在这里
        mazestep_4: 迷宫步骤说明在这里
        mazestep_5: 迷宫步骤说明在这里
        studio_c2_1: 你可以让这个狗说"你好世界"吗？
        studio_c2_2: 你可以让狗说些什么，然后让猫说些什么吗？
        studio_c2_3: 你可以写一个程序来将这只狗移动到那只猫处吗？
        studio_c2_4: 你可以写一个程序来将这只狗移动到那只猫处, 当狗到达时, 让猫对他说“你好”?
        studio_c2_5: 你可以写一个程序来使章鱼说“你好”, 当它被点击时？
        studio_c2_6: 你可以写一个程序，用上/下/左/右按键使这个企鹅走动去打的所有目标吗？
        studio_c2_7: '"永远重复"块允许您连续运行代码。您可以附加块来使这只恐龙反复向上向下移动吗？'
        studio_c2_8: '你可以令企鹅说: "哎哟!" 并播放“打”声音，如果他碰到恐龙时，然后将企鹅按照箭头移动使其发生.'
        studio_c2_9: 你可以添加一个模块, 当企鹅碰到章鱼时得一分点，然​​后将企鹅按照箭头移动，直到你获得分数?
        studio_c2_10: 你可以添加模块, 以更改背景和企鹅的速度，然​​后将企鹅按照箭头移动，直到你获得分数?
        studio_c2_11: 创建你自己的故事。当你完成后，单击Finish（完成），让朋友在他们手机上试试你的故事.
        studio_c3_story_1: 你可以让这个狗说"你好世界"吗？
        studio_c3_story_2: 你可以让狗说些什么，然后让猫说些什么吗？
        studio_c3_story_3: 你可以写一个程序来将这只狗移动到那只猫处吗？
        studio_c3_story_4: 你可以写一个程序来将这只狗移动到那只猫处, 当狗到达时, 让猫对他说“你好”?
        studio_c3_story_5: 你可以添加一个模块，使八达通快乐吗？
        studio_c3_story_6: 创建你自己的故事。当你完成后，单击Finish（完成），让朋友在他们手机上试试你的故事.
        studio_c3_game_1: 你可以写一个程序来使章鱼说“你好”, 当它被点击时？
        studio_c3_game_2: 你可以写一个程序，用上/下/左/右按键使这个企鹅走动去打的所有目标吗？
        studio_c3_game_3: '"永远重复"块允许您连续运行代码。您可以附加块来使这只恐龙反复向上向下移动吗？'
        studio_c3_game_4: '你可以令企鹅说: "哎哟!" 并播放“打”声音，如果他碰到恐龙时，然后将企鹅按照箭头移动使其发生.'
        studio_c3_game_5: 你可以添加一个模块, 当企鹅碰到章鱼时得一分点，然​​后将企鹅按照箭头移动，直到你获得分数?
        studio_c3_game_6: 你可以添加模块, 以更改背景和企鹅的速度，然​​后将企鹅按照箭头移动，直到你获得分数?
        studio_c3_game_7: 创建你自己的游戏。当你完成后时，单击Finish（完成），让朋友在他们手机上试试你的游戏。
        studio_playlab_1: 企鹅想要说"你好"— — 你能帮助他吗？
        studio_playlab_2: 洞穴男孩 （演员 1） 和洞穴女孩 （演员 2） 想向对方说"你好"。你能帮助他们通过使用"说"块两次吗？
        studio_playlab_3: 你能帮网球女孩到达旗子标志吗？
        studio_playlab_4: 你能帮网球男孩 (演员 1) 到达网球女孩 （演员 2）那里 和当他到达时播放一个声音吗？
        studio_playlab_5: 你能帮 Spacebot当被点击时 说"问候地球人"单击吗?你点击运行后, 别忘了点击它.
        studio_playlab_6: 你可以帮助女巫使用上/下/左/右方向键来走动到达所有的魔法火球吗?
        studio_playlab_7: '"永远重复"块允许您连续运行代码。您可以附加块来帮助巫師反复向右和左移动吗？'
        studio_playlab_8: 当独角兽跑进该向导中时，添加一个模块来得分和一个模块播放声音，然后用箭头移动它们直到你得分，好吗？
        studio_playlab_9: Can you add blocks to change the background and the speed
          of the penguin, and then move him with the arrows until you score?
        studio_playlab_10: 创建你自己的游戏。当你完成后时，单击Finish（完成），让朋友在他们手机上试试你的游戏。
        studio_full_sandbox: 创建你自己的游戏。当你完成后时，单击Finish（完成），让朋友在他们手机上试试你的游戏。
        studio_k1_1: 你可以让这个狗说"你好世界"吗？
        studio_k1_2: 你可以让狗说些什么，然后让猫说些什么吗？
        studio_k1_3: 你可以写一个程序来将这只狗移动到那只猫处吗？
        studio_k1_4: 把狗移动到貓那处, 當他到达时让猫说"你好".
        studio_k1_5: 你可以添加一个模块，使八达通快乐吗？
        studio_k1_6: 创建你自己的故事 ！左右移动猫和狗，让他们说东西。
        maze_wordsearch_k_1: 移动我拼写单词EAST
        maze_wordsearch_k_2: 移动我拼写单词SOUTH
        maze_wordsearch_k_3: 移动我拼写单词WEST
        maze_wordsearch_k_4: 移动我拼写单词NORTH
        maze_wordsearch_k_6: 把我向東 然后向南移动来拼寫單詞JUMP
        maze_wordsearch_k_9: 把我向这边 然后向另一边移动来拼寫單詞CODE
        maze_wordsearch_k_13: 把我向这边 然后向另一边移动来拼寫單詞DEBUG
        maze_wordsearch_k_15: 把我向这边 然后向另一边移动来拼寫單詞ABOVE
        maze_wordsearch_k_16: 把我向这边 然后向另一边移动来拼寫單詞BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell
          the word STORY
        webapp_ec_simple: Create your web app by using createHtmlBlock.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking
          it in the new "penColour" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas:
          a stick figure, snowflake, or spiral. Also try the new "penWidth" block.
          Have fun!'
        studio_ec_sandbox: 创建你自己的游戏。当你完成后时，单击Finish（完成），让朋友在他们手机上试试你的游戏。
    levelbuilder:
      frozen line:
        instructions: 你好！我是艾伦代尔的艾莎公主。请你帮我画一条直线。
      frozen perpendicular:
        instructions: 现在让我们看看我们是否可以画两条直线，前提是彼此必须存着90度角的相位关系。您将需要使用“转向”块和“移动”块。
      frozen square iterative:
        instructions: 我们好像已经成功地绘制了半个正方形。来，我们一起把四行条线组合起来绘制一个完整的正方形。
      frozen square loop:
        instructions: 你好！我是艾伦代尔的安娜公主！我们一起应用“重复“块绘制一个正方形。这样一来，我们可以减少我们必须使用的代码块。你说“重复”块必须循环多少次（？）才能促使块内的其他代码块绘制出一个正方形呢？
      frozen square loop 3x:
        instructions: 让我们绘制三个正方形，每绘制一个正方形后，请别忘了先把它转120度后再继续绘制下一个正方形。
      frozen square snowflake:
        instructions: 你可以试试绘制一朵雪花。用“重复”块绘制10个正方形，而且记得在绘制成每个正方形移之后，先把它移转36度后才开始画下一个正方形。
      frozen cross:
        instructions: 利用“重复”块来绘制一个十字（加）号。您注意到艾莎可以向前和向后移动吗？
      frozen cross rotate:
        instructions: 现在请尝试重复 10 次。每个行之间你需要转多少度？
      frozen cross rotate dense:
        instructions: 让我们重复90次！ 90进入360是多少次？提示：这是一个非常小的数目。
      frozen diamond:
        instructions: 让我们创建一个平行四边形。它就像一个方形，但有不同的角度：60和120度角，而不是90度角。
      frozen diamond mini snowflake:
        instructions: 你知道每个雪花是一个不同的形嗎? 让我们创建一个新的雪花, 使用“重复”块来重复一个平行四边形4次，把每一个平行四边形之间转右90度.
      frozen diamond snowflake:
        instructions: 現在，让我们创建一个新的雪花, 使用“重复”块来重复一个平行四边形10次，把每一个平行四边形之间转右36度
      frozen circle:
        instructions: 圆形是一种特殊的形. 你可以计算出什么号码能取代问号来画圆形吗?
      frozen circle function:
        instructions: 使用新的“创建圈子”功能块来创建10个交叠的圆圈. 不要忘了在每个圆圈之间跳跃前进.
      frozen circle function in circle:
        instructions: 现在让我们创建20个交叠的圆圈，在每圆圈之间转18度。
      frozen circle function with parameter:
        instructions: 这里有一个“创建圈子”块，可以做不同大小的圆圈.  你可以用它来创建一个5号码的小圆圈和10号码的大圆圈吗?
      frozen snowflower:
        instructions: 错综复杂的雪模式可以用非常简单的形状来创建。 你可用重复5个5号码的圈和5个10号码的圈来做一个模式吗?
      frozen snowflake branch:
        instructions: 尝试使用“创建雪花分支”块创建三个分支，看起来它开始像一片雪花。
      frozen snowflake full:
        instructions: 现在，让我们重复8次，做一个漂亮的雪花!
      frozen freeplay:
        instructions: 你已经正式成为艺术大师！创建一个冬季仙境.
      scrat 16:
        instructions: 橡果！橡果！橡果！使用“如果”块让我用最少块数到达那里.
      scrat 17:
        instructions: 好，接下来让我们再练习一次 - 这不会非常不一样，但要当心那堵墙！
      scrat 18:
        instructions: '"If-else"块会检查一个条件，然后做一件事或另一件。为了帮助拿到我的橡子，试试这个新的块。'
      scrat 19:
        instructions: 让我们来再联系一次使用“如果 - 其他”块，你能一次就让我达成目的么？
      scrat 20:
        instructions: 你可以只添加3块就帮我解答一个更复杂的迷宫吗？如果你做对了，我可以走任何长度和任意弯曲的路径。加油！冰正在融化 ！
      Standalone_Artist_1:
        instructions: Welcome to Artist! First off, let's try to make a simple square
          using the turn right block and move forward block. Each side should be 100
          pixels long.
      Standalone_Artist_2:
        instructions: Draw this diamond with 120 and 60 degree angles and 150 pixel
          long sides.
      Standalone_Artist_3:
        instructions: Can you draw this hexagon with 100 pixel sides and 60 degree
          turns?
      Standalone_Artist_4:
        instructions: Now you've got a new block to play with, the loop. This will
          repeat a set of commands. What happens if you loop these commands 6 times?
      Standalone_Artist_5:
        instructions: How many times do you need to loop this diamond to draw the
          flower?
      Standalone_Artist_5.5:
        instructions: 'Notice how we simplified the diamond code by turning it into
          a loop. You can loop that whole sequence 12 times to draw the flower. Hint:
          You''ll need to turn 30 degrees after your diamond loop so you don''t keep
          drawing over the same diamond.'
      Standalone_Artist_6:
        instructions: 'Loop this hexagon code 6 times to create the design. How many
          degrees will you need to turn each time? Hint: divide the number of degrees
          in a circle by the number of times you are looping.'
      Standalone_Artist_7:
        instructions: 'A function is another programming tool to help you avoid repeating
          yourself. This function draws a flower, so you can use it any time you want
          to draw a flower. Use this and the new jump block to draw these flowers.
          Hint: The flowers are 150 pixels apart'
      Standalone_Artist_8:
        instructions: Here's a function called "Draw a shape" that we've programmed
          to draw hexagons. Run the code to see what it does and then experiment with
          the function to see what happens. Can you make it draw a pattern of squares,
          triangles, or octagons?
      Standalone_Artist_9:
        instructions: Now go ahead and make whatever picture you'd like! You've even
          got an empty function that you can make do whatever you want!
    video:
      name:
        maze_intro: 迷宫简介
        artist_intro: 艺术家简介
        farmer_intro: 农夫简介
        flappy_intro: Flappy简介
        loop_times: 重复次数块
        loop_until: 重复直到块
        if: 如果块
        if_else: 如果/那么块
        if_else_scrat: 如果/那么块
        function: 函数
        loop_while: 当块
        loop_for: “计数”循环块
        parameters: 有参数的函数
        hoc_wrapup: 编程一小时总结
        Unplug1: What is CS?
        Unplug2: 计算性思维
        Unplug3: 方格纸编程
        Unplug4: 算法
        Unplug5: 函数
        Unplug6: 条件语句
        Unplug7: Songwriting
        Unplug8: 抽象化
        Unplug9: Relay programming
        Unplug10: Internet
        Unplug11: 总结
        C1_happy_maps_unplugged: Happy Maps
        C1_moveitmoveit_unplugged: Move It, Move It
        C1_bigevent_unplugged: The Big Event
        C1_getting_loopy: Getting Loopy
        C1_pair_programming: Pair Programming
        C1_maze_intro_sequencing: Maze Sequencing Intro
        C1_maze_debugging: Maze Debugging
        C1_bee_level_intro: Bee Level - Intro
        C1_artist_intro: 艺术家简介
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: Maze Loops
        C1_bee_loops: Bee Loops
        C1_maze_loops: Maze Loops
        C1_playlab_storytelling: Play Lab - Create a Story
        C1_planting_seed: Planting a Seed
        C1_building_foundation: Building a Foundation
        C1_going_places_safely: Going Places Safely
        C2_maze_intro: 迷宫简介
        C2_artist_intro: 艺术家简介
        C2_zuck_repeat_loop: Maze Loops
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: Bee Loops
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: Bee Conditionals
        C2_playlab_createstory: Play Lab - Create a Story
        C2_graph_paper: 方格纸编程
        C2_conditionals_with_cards: 条件语句
        C2_binary_bracelets: Binary Bracelets
        C2_relay_programming: 编程接力
        C2_paper_airplanes: Paper Airplanes
        C2_digital_footprint: Your Digital Footprint
        C3_maze_level_4: Maze Loops
        C3_artist_intro: 艺术家简介
        C3_artist_functions: Artist Functions
        C3_bee_functions: Bee Functions
        C3_bee_conditionals: Bee Conditionals
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: Nested Loops
        C3_farmer_while: While Loops
        C3_bee_nested_loops: Nested Loops
        C3_bee_debugging: Bee Debugging
        C3_bounce: 跳
        C3_playlab_create_game: Play Lab - Create a Game
        C3_computational_thinking: 计算性思维
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Functional Suncatchers
        C3_songwriting_with_parameters: Songwriting With Parameters
        C4_intro: Introduction
        C4_bee_conditional: Bee Conditionals
        C4_variables_artist: Variables - Artist
        C4_variables_playlab: Variables - Play Lab
        C4_for_loops: For Loops
        C4_math_artist: Programming the Artist with Math
        C4_function_edit: Editing Functions
        C4_function_create: Creating Functions
        C4_function_parameters: 有参数的函数
        C4_conditionals: 条件语句
        C4_unplugged_algorithms: Algorithms with Tangrams
        C4_unplugged_madlibs: Mad Libs
        C4_unplugged_variables: Variables in Envelopes
        C4_unplugged_forloops: For Loops
        C4_unplugged_parameters: Songwriting with Parameters
        C4_unplugged_binary: Binary
        frozen_intro: Hour of Code Intro
        frozen_loops: Introduction to Loops
        frozen_functions: Introduction to Functions
        playlab_intro: Introduction to Play Lab
        playlab_events: Play Lab Events
        playlab_repeat_forever: Play Lab Repeat Forever
    callout:
      text:
        drag_blocks: 拖动一个"移动"的块和捕捉低于它的其他块
        run: 点击"运行"以尝试您的程序
        watch_again: 单击此处可再次观看视频
        gray_block_explanation: 在灰色的块不能移动或删除。你能解决这个难题吗？
        show_code_explanation: 单击此处查看你的程序的代码
        instructions_repeat_explanation: 在这里重复每个谜题的说明
        category_explanation: 你有同样的块，但他们现在已经安排在类别
        set_sprite_image: Attach a "set actor to image" block to the "when story starts"
          block to enable an actor for this story
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: 单击此块 ！
        move_elsa_forward: Drag a "Move Forward" block and snap it below the "When
          Run" block to make Elsa move forward
        turn_elsa: Use the "Turn" block to make Elsa turn. The number in the drop-down
          determines how much Elsa turns
        replace_questions: Use the drop-down to replace "???" with a number
        replace_questions_degree: Use the drop-down to replace "???" with the correct
          degree to turn
        repeat_blocks: Use the "Repeat" block and wrap it around the blocks in the
          workspace
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the
          workspace
        repeat_blocks_2: (2) Move the "Repeat" block here, and place the gray blocks
          inside
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each
          angle in degrees.
        set_sides: Use this block to set "sides" to the number needed to complete
          the puzzle.
        set_length: Use this block to set "length" to the correct value.
        which_equation: Which equation makes each side shorter for shapes with more
          sides?  Try each equation!
        get_nectar: 使用新的"得到花蜜"块。
        actions_category: The tool box got a new look! The "Actions" blocks are in
          here now.
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: 单击此处来编辑您的函数。
        create_function: Click here to open the "Functions" flyout, then click the
          "Create a Function" button.
        house_hint: It's ok if the picture doesn't look like a house yet. We will
          fix it in the next puzzle.
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction
          the Bee will turn to get the nectar.
        logic_category: Open the "Logic" flyout to find the "if/else" block.
        length_parameter: Can you update this function so it uses the "length" parameter?
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: Don't forget to turn after creating
          each circle.
        frozen_circle_function_with_parameter_circle: Use the "create a circle" block
          and change the size.
        frozen_snowflake_branch: Use the "create a snowflake branch" block
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: Drag the "say" block here and type "hello"
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: Use the "move right" block to move Tennis Girl
        playlab_play_sound: 添加"播放声音"的块
        playlab_arrow_keys: Remember to use these to move the witch after clicking
          on Run
        playlab_add_move: Add "move" blocks inside this repeat block
        playlab_add_score: 添加分数块在这里
        playlab_add_blocks: 添加您的块在这里
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect
          here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: This is your function definition. These blocks
          run everytime you use the "draw a square" block
        change_here: 在这里更改
        write_draw_square_function: Drag blocks from the toolbox into here that draw
          a square
        write_draw_triangle_function: Drag blocks from the toolbox into here that
          draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add,
          and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor
          (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: Use the "if" block to decide if the bee should get nectar
        if_else_bee: Use the "if/else" block so that the Bee gets nectar from a flower,
          and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to
          make a full circle
        place_length_variable: Drag the length variable here to replace the question
          marks
        arrows_move_actor: Use the arrows to move the actor
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: Write the name of your function here
