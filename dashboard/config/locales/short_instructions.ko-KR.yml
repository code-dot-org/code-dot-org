---
ko-KR:
  data:
    short_instructions:
      2-3 Artist 1 new: |-
        안녕하세요. 저는 화가입니다. 여러분들이 코드를 작성하면 원하는 모든 것들을 그릴 수 있습니다.
        블록들을 사용해서 그림의 회색 선들을 그려보세요.(각 선들은 100 픽셀 길이입니다.)
      2-3 Artist 11: '각 변의 길이가 100 픽셀인, 8각형을 만들어 정지 표지판을 만들어보세요.  '
      2-3 Artist 12: "눈알을 완성하기 위해서 원을 그려보세요!\\\r\n\\\r\n만약,\n 한 번 움직일 때마다 1도씩 오른쪽으로
        움직인다고 한다면, 하나의 원을 완성시키기 위해 몇 번을 반복하면 될까요? 180? 360? 500?"
      2-3 Artist 2 new: '이 집의 벽은 다 완성되지 않았습니다. 각 측면은 100이지만, 완성되지 않은 벽은 50입니다. 벽을
        완성해보세요. '
      2-3 Artist 3new: "빨간 모자의 높이는 100픽셀입니다.\n이것보다 더 낮은 70픽셀 높이의 검은 모자를 그려보세요.\\\r\n(주의:
        각 모자의 너비는 50픽셀입니다.)"
      2-3 Artist 4: 고양이를 위한 집을 완성해주세요.
      2-3 Artist 6: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      2-3 Artist 7: "교실의 모두가 창밖을 볼 수 있도록, 창문들을 학교에 그려주세요.\n각 창 틀의 길이는 25 픽셀 크기입니다. "
      2-3 Artist 9 NEW: 이 연을 완성해주세요.
      2-3 Artist Assessment 1: |-
        형성 평가: 마지막 이빨을 그려주세요.
        가로 25 픽셀, 세로 25 픽셀입니다.
      2-3 Artist Debugging 1: 이 모자의 윗 부분은 50 픽셀이 되어야 합니다. 고쳐 주실 수 있나요?
      2-3 Artist Debugging 2: "고양이 수염을 그리는 코드에 문제가 있습니다.\n\\\r\n\\\r\n고양이 수염의 길이가
        같도록 코드를 고쳐주세요."
      2-3 Artist Debugging 8: 바람개비가 완성되지 않았습니다. 완성하려면 얼마나 반복해야 할까요?
      2-3 Artist Debugging 9: "뭔가 이상해요!\\\r\n\\\r\n줄기를 그리는 코드가 틀렸네요. 화가가 줄기를 정확히 그리려면
        어떻게 해야할까요?"
      2-3 Artist Free Play: '자유 플레이: 원하는 것을 그려보세요.'
      2-3 Artist Functions 10: |-
        여기에 두 개의 함수가 있습니다. 하나는 큰 기어를 그리는 것이고, 하나는 작은 기어를 그리는 것입니다.
        기계의 내부를 그리는데 사용해보세요!
      2-3 Artist Functions 11: "“사각형 그리기” 함수의 이름을 “육각형 그리기”로 바꿨지만, 여전히 이 함수는 사각형을
        그리고 있습니다!\n\"육각형 그리기\" 함수를 수정해서, 한 변의 길이가 50 픽셀인 육각형을 그려보세요. \\\r\n\\\r\n새로운
        함수를 사용하여 그림을 그려보세요."
      2-3 Artist Functions 11.5: "똑같은 '육각형 그리기' 함수가 있습니다. \\\r\n\\\r\n반복할 때마다 60도씩
        회전하는 프로그램을 6번 반복시키면 어떻게 될까요?"
      2-3 Artist Functions 12: "함수를 사용하면 복잡한 모양을 가진 그림을 그리기에 아주 좋습니다. \\\r\n\\\r\n\"꽃
        그리기\" 함수를 사용해서 나머지 꽃 묘목 상자를 채워주세요.\\\r\n꽃들은 100 픽셀 간격으로 놓여져 있습니다."
      2-3 Artist Functions 2: "함수들로 새로운 블록들을 만들어낼 수 있습니다! \\\r\n\\\r\n\"사각형 그리기\"
        라는 함수에 사각형 1개를 그리는 블록들을 넣었습니다.\n\"사각형 그리기\" 함수를 이용해서 안경을 그려보세요. \n\\\r\n\\\r\n사각형들은
        75 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 3: "더 큰 안경을 그리기 위해 함수를 한 변의 길이가 115 인 정사각형이 되도록 수정하세요.\\\r\n\\\r\n정사각형들은
        이제 45 픽셀 만큼 떨어져 있습니다."
      2-3 Artist Functions 4: 이제, 함수를 "반복" 블록 안에 넣고 3개의 사각형을 그려보세요.
      2-3 Artist Functions 9: |-
        여기 눈송이 함수가 있습니다.
        겨울 풍경을 만들어내기 위해서 실험해보세요! 이 판은 자유 플레이입니다.
        풀어야 할 퍼즐이 아니니까, 재미있게 놀아보세요!
      2-3 Artist Loops New 1: |-
        이 로봇의 머리를 그려보세요!
        한 변의 길이가 100 픽셀인 사각형을 그려보세요.
      2-3 Artist Loops New 10: 이제 여러 개의 'V'자를 연결해서, 반복 실행 구조 안에 넣어보세요.
      2-3 Artist Loops New 11: |-
        이번에는 멋진 것을 만들어 볼 시간입니다!
        왼쪽으로 30도 회전하기를 추가한 후, 7번 대신에 24번을 반복 시켜보세요.
      2-3 Artist Loops New 12: 한 변의 길이가 100 픽셀인 다이아몬드를 그려보세요.
      2-3 Artist Loops New 13: "여러분은 몇 개의 코드(회색) 로 하나의 다이아몬드를 만들 것입니다. \\\r\n\\\r\n이런
        재미있는 패턴을 만들기 위해서 회색 코드를 반복시켜보세요!"
      2-3 Artist Loops New 14: |-
        다이아몬드 코드를 살펴보고 어떤 패턴들을 만들어낼 수 있는지 생각해보세요.
        각도와 반복 횟수를 변화시켜가면서 테스트 해보세요.
      2-3 Artist Loops New 15: 이제, 그리고 싶은 것들을 그려보세요.
      2-3 Artist Loops New 2: "방금 풀었던 퍼즐과 같은 퍼즐이지만, 이번에는 한 개의 '앞으로 직진' 블럭과 한 개의 '돌기'
        블럭만 사용할 수 있습니다.\\\r\n\\\r\n퍼즐을 해결하기 위해 '반복' 블럭을 사용할 수 있나요?"
      2-3 Artist Loops New 9: |-
        화살 그림을 완성하기 위해서,
        양쪽 모두 50 픽셀인 간단한 V 자를 그려보세요.
      2-3 Artist Nested Loops 1: 패턴을 그리기 위해서, 이 코드 전체를 '반복' 블록에 넣으세요.
      2-3 Artist Nested Loops 10: 패턴을 완성시키기 위해서 이 코드를 12번 반복해 보세요.
      2-3 Artist Nested Loops 11: 이 코드를 4번 반복해서 패턴을 완성하고 90도 만큼 회전해 다른 원을 그리세요.
      2-3 Artist Nested Loops 12: 이 코드를 12번 반복시켜서 곱슬곱슬한 그림을 그려보세요.
      2-3 Artist Nested Loops 2: |-
        삼각형을 6번 반복해 그리세요.
        삼각형을 한 번 그리고 난 후에, 60도씩 회전하면 됩니다.
      2-3 Artist Nested Loops 3: "이 패턴을 그리려면, 삼각형을 12번 반복해서 그려야 합니다. \\\r\n\\\r\n원
        중심의 각(360 도) 을 그리려고 하는 모양의 개수(12 개) 로 나누면,\n모양을 한 번 그린 후 몇 도를 회전시켜야 하는지 알
        수 있습니다."
      2-3 Artist Nested Loops 5: "이 건물의 창들을 중첩 반복을 이용해 채워보세요. \\\r\n\\\r\n창들은 20 픽셀
        크기로 20 픽셀 만큼 씩 떨어져 있습니다."
      2-3 Artist Nested Loops 6: "이 공룡은 꼬리에 8개의 뾰족한 뿔이 나 있습니다.\\\r\n각 뿔의 길이는 30 픽셀입니다.\n삼각형을
        8번 반복해 그려주세요. 1개를 그리면 그 다음에는 앞으로 이동해야 합니다."
      2-3 Artist Nested Loops 7: "이 삼각형을 10번 반복시켜서 태양을 그려보세요. \\\r\n\\\r\n삼각형 1개를
        그리고 난 후에는 이동하고 회전해야 합니다. \\\r\n\\\r\n원 안에서 몇 개의 모양을 그리게 되며 몇 도씩 회전해야 할지 알아내
        보세요."
      2-3 Artist Nested Loops 8: |-
        자 이제 그림에 잔디를 그려보세요.
        잔디 1개는 50 픽셀 만큼 씩 떨어져 있습니다.
      2-3 Artist Nested Loops Free Play: |-
        자유 플레이시간입니다.
        중첩 반복을 이용해서 원하는 것을 그려보세요.
      2-3 Bee Conditionals 12: 최대한 적은 블록들을 사용해서 꽃꿀을 찾아낼 수 있도록 도와주세요!
      2-3 Bee Conditionals 13: "와 이번에는 여러 가지들이 있네요!\\\r\n\\\r\n여러분들이 배운 것들을 이용해 꽃꿀을
        모아 꿀을 만들어보세요."
      2-3 Bee Conditionals 14: "자 이제 다 모아봅시다!\\\r\n\\\r\n지금까지 배운 것들을 이용해서 최소한의 블록들로
        꽃꿀이 있는 꽃에서 꽃꿀을 모아 보세요.\n마지막에는 꿀을 만들어야 합니다."
      2-3 Bee Conditionals 15: "계단 모양의 패턴은 많이 익숙합니다. \\\r\n\\\r\n최소한의 블록들만 사용해서 꽃꿀이
        있는 꽃에서만 꽃꿀을 모아보세요."
      2-3 Bee Conditionals 2: "저는 배고픈 꿀벌입니다! \\\r\n최소한의 블록만 사용해서 꽃꿀을 모두 모을 수 있게 해주세요."
      2-3 Bee Conditionals 3: "저 꽃꿀들을 보세요!\\\r\n\\\r\n최소한의 블록들을 사용해서 꽃꿀을 모아 꿀을 만들어보세요.
        \ "
      2-3 Bee Conditionals 5: "꽃꿀이 없는 자주색 꽃에서 꽃꿀을 모으지 않도록 조심하세요. \\\r\n먼저 '꽃꿀이 있으면'
        블록을 이용해서 꽃꿀의 양이 1인지 확인해야합니다."
      2-3 Bee Conditionals 6: '"만약" 블록을 사용해서 이 꽃에 꽃꿀이 있는지 확인해보세요.'
      2-3 Bee Conditionals 7: 꽃꿀이 있는 꽃에서만 꽃꿀을 모아보세요.
      2-3 Bee Conditionals 8: |-
        이 꽃밭에는 빨강 꽃과 자주색 꽃이 있습니다.
        빨강 꽃은 꽃꿀이 얼마나 있는지 나타나있지만, 자주색 꽃에는 얼마나 있는지 알 수 없습니다.
        꽃꿀을 모두 모아 보세요.
      2-3 Bee Conditionals 9: 각 꽃에서 꽃꿀을 모두 모아주세요.
      2-3 Bee Conditionals Assessment 1: |-
        형성평가: 꽃꿀을 모두 모아주세요.
        자주색 꽃에 꽃꿀이 없으면 꽃꿀을 뽑지 않도록 주의하세요.
      2-3 Bee Debugging 1: |-
        이 블록들에는 오류들이 있어서 짜증이 나네요.
        모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류들을 수정해주세요.
      2-3 Bee Debugging 10: "이 블록들에는 오류들이 있어서 짜증이 나네요. \\\r\n모든 꽃꿀을 모아서 꿀을 만들 수 있도록
        오류(들)을 수정해주세요."
      2-3 Bee Debugging 2: "문제점을 찾을 수 있으세요?\\\r\n모든 꽃꿀을 모을 수 있도록 오류(들)을 수정해주세요."
      2-3 Bee Debugging 4: |-
        이 블록들에는 오류들이 있어서 짜증이 나네요.
        모든 꽃꿀을 모아서 꿀을 만들 수 있도록 오류(들)을 수정해주세요.
      2-3 Bee Debugging 5: "꽃들이 맛있어보여요! \\\r\n\\\r\n모든 꽃꿀들을 모을 수 있도록 오류(들)을 고쳐주세요.
        단계별 실행을 사용할 수 있습니다."
      2-3 Bee Debugging 7: 모든 꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요.
      2-3 Bee Debugging 9: "\"벌벌\" 떨지 마세요! \\\r\n\\\r\n모든 꽃꿀들을 모아 꿀을 만들 수 있도록, 이 프로그램의
        오류들을 고쳐야 합니다."
      2-3 Bee Debugging Assessment 1: "형성평가: 이제 여러분들이 아는 것들을 보여줄 시간입니다!\\\r\n\\\r\n모든
        꽃꿀들을 모아 꿀을 만들 수 있도록 오류(들)을 고쳐주세요."
      2-3 Bee Functions 1: |-
        함수들은 어떤 작업을 수행할 때 사용하는 블럭들의 집합이라고 할 수 있습니다.
        "꽃꿀 2번 모으기" 를 이용해서 각 꽃들에서 꽃꿀을 모아보세요.
      2-3 Bee Functions 10: "퍼즐을 실행 할때마다 자주색 꽃들에는 꽃꿀이 1개 또는 0 개 있을 수 있습니다.   \\\r\n\\\r\n자주색
        꽃에 꽃꿀이 있을 때에만 꽃꿀을 모으는 함수를 만들어보세요."
      2-3 Bee Functions 2: "함수들은 어떤 작업을 수행하는데 블럭들의 모임이라고 볼 수 있습니다.  \\\r\n\\\r\n\"5번
        모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      2-3 Bee Functions 3: 각 꽃에서 꽃꿀을 모두 모아주세요.
      2-3 Bee Functions 4: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는
        함수입니다.  \\\r\n\\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      2-3 Bee Functions 5: |-
        꽃들에 더 많은 꽃꿀이 들어있어요.
        주어진 함수를 수정해서, 꽃꿀을 4번 얻을 수 있게 하고 모든 꽃들로 부터 모든 꽃꿀을 모으세요.
      2-3 Bee Functions 6: 이제 같은 함수를 사용해서, 3개의 꽃들로 부터 꽃꿀을 모으도록 해보세요.
      2-3 Bee Functions 8: |-
        꽃꿀을 7번 모으고, 앞으로 이동한 후, 7개의 꿀을 만드는 함수를 만들어보세요.
        그 함수를 사용해서 각 꽃들로부터 꽃꿀을 모으고, 각 벌집에 꿀을 만들어 넣으세요.
      2-3 Bee Functions 9: 길을 따라 아래로 내려간 후, 꽃꿀을 얻고, 꿀을 만들고, 다시 처음 위치로 돌아가는 함수를 만들어보세요.
      2-3 Bee Functions Assessment 1: '형성평가: 주어진 함수를 이용해서 각 꽃에서 꽃꿀을 모아보세요.'
      2-3 Bee Functions Assessment 2: '형성평가: 꿀벌이 앞으로 이동해서 3개의 꿀을 만들고, 다시 돌아오는 함수를
        만들어보세요.'
      2-3 Bee Loops 1: "저 꽃들이 달콤해 보여요!\\\r\n\\\r\n최대한 적은 블록들을 사용해 각 꽃들에서 꽃꿀을 모아보세요."
      2-3 Bee Loops 10: 모든 꽃꿀을 모을 수 있도록, 다른 2개의 반복 구조 안에 반복 구조를 넣으세요.
      2-3 Bee Loops 13: '형성평가: 최대한 적은 블록들을 사용해서 꽃꿀을 모아보세요.'
      2-3 Bee Loops 1A: "안녕하세요! 여러분? 저는 꿀벌입니다.\n이 꽃들로부터 꽃꿀을 모을 수 있게 도와주세요. "
      2-3 Bee Loops 2: 최대한 적은 블록들을 사용해서 모든 꽃꿀을 모으고 꿀을 만들어 보세요.
      2-3 Bee Loops 2A: 이번에는, 1개의 반복 구조를 사용해서 모든 꿀을 모아보세요.
      2-3 Bee Loops 3: |-
        최대한 적은 블록들을 사용해서
        각 꽃에서 꽃꿀을 모은 후, 각각의 벌집에 꿀을 만들어 넣어 보세요.
      2-3 Bee Loops 3A: 모든 꽃꿀을 모으기 위해, 반복 구조를 사용해보세요.
      2-3 Bee Loops 3B: 반복 블록을 사용해서, 꽃꿀을 모두 모으고 꿀을 만들어보세요.
      2-3 Bee Loops 4: "꿀벌이 엄청 바쁘네요!\\\r\n\\\r\n최대한 적은 블록들을 사용해서\n꽃꿀을 모으고 꿀을 만들 수
        있도록 꿀벌을 도와 주세요."
      2-3 Bee Loops 4A: "이 퍼즐을 해결하려면 몇 번 반복해야할까요? \\\r\n\\\r\n반복 실행 구조는 매우 편리합니다!\n반복
        실행 구조를 사용해서 최대한 적은 블록들로 해결해 보세요."
      2-3 Bee Loops 5: "이 길의 모양은 다른 것들과 다릅니다. \\\r\n\\\r\n최대한 적은 블록들을 사용해서 꽃꿀을 모두
        모아보세요."
      2-3 Bee Loops 6: 꿀벌이 꽃꿀을 모으고 꿀을 만들 수 있는 가장 빠른 방법을 찾을 수 있나요?
      2-3 Bee Loops 7: |-
        와 꽃밭이 이쁘네요!
        7 블록보다 적은 블록을 사용해서 꿀벌이 모든 꽃들을 살펴볼 수 있게 해주세요.
      2-3 Bee Loops 8: "자주색 꽃들이 몇 개의 꽃꿀을 가지고 있는지 알 수 없습니다. \\\r\n\\\r\n\"꽃꿀이 있으면\"
        반복 블록을 이용해서, 모든 꽃꿀을 모아보세요. \\\r\n\\\r\n이 반복 구조는 조건이 참인 동안 계속 반복됩니다. 이 경우에서는
        '꽃꿀의 개수>0' 인 동안 반복되는 것입니다."
      2-3 Bee Loops Assessment 1: '형성평가: ''~인 동안'' 반복 구조를 이용해서, 이 꽃에서 꽃꿀을 모두 모아보세요.'
      2-3 Maze 1: '나쁜 돼지를 잡을 수 있게 도와주세요! "실행하면" 블록 아래에 `앞으로 이동` 블록들을 여러 개 쌓아 붙인 후,
        `실행`을 눌러보세요. '
      2-3 Maze 10: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 12: 1개의 '반복' 블록 안에 1개의 '앞으로 이동' 블록이 들어있는 반복 실행 구조를 이용해서 돼지에게로 이동시켜주세요.
      2-3 Maze 15: 이 퍼즐에서는 두 개의 반복(횟수) 블록을 이용하면 블록들을 최소한으로 사용할 수 있습니다.
      2-3 Maze 16: 반복 실행 구조 안에는 여러 개의 블록을 넣을 수 있습니다! 이 단계들을 반복 실행시켜 좀비를 해바라기로 이동시켜주세요.
      2-3 Maze 16 before: 어떻게 하면 돼지에게로 최대한 빠르게 이동할 수 있을까요?
      2-3 Maze 2: 돼지가 내 깃털들을 마구 헤집어 놓으며 다니고 있어요. 저를 돼지에게 보내주세요!
      2-3 Maze 3: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이 날라다니지 않도록 해야 돼!
      2-3 Maze 4: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 6: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!
      2-3 Maze 7: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze 8: 저를 돼지에게 이동시켜 주세요.
      2-3 Maze 9: 초록색 나쁜 놈에게 데려다 줘!(TNT 폭탄 조심)
      2-3 Maze Loops 17: 해바라기로 이동하기 위해서 여러분들이 배운 것들을 사용해보세요!
      2-3 Maze Loops 18: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복 실행 구조 안에 1개의
        반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      2-3 Maze Loops 19: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복 실행 구조를 사용해서
        해바라기로 이동시켜주세요."
      2-3 Maze Loops 20: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      2-3 Maze Loops 21: 블록들을 최대한 적게 사용해서 해바라기로 이동시켜주세요!
      2-3 Maze Loops Assessment 1: '형성평가: 5개의 블록만 사용해서, 저를 해바라기로 보내주세요! '
      4-5 Artist 1: "상자 그리기를 완성할 수 있도록 도와주세요.\n(선의 길이는 300 픽셀입니다.) "
      4-5 Artist 11: |-
        녹색 줄들을 다 그리세요. 줄들의 길이는 300 픽셀로
        15 픽셀 만큼씩 떨어져 있습니다.
      4-5 Artist 2: 사각형을 완성할 수 있도록 '반복' 블록으로 이 코드를 반복시켜주세요.
      4-5 Artist 3: |-
        이 사각형 꽃 침대는 주변 둘레가 600입니다.
        긴 쪽의 길이는 200 입니다. 가능한 적은 블록을 사용하여 사각형을 그려보세요.
      4-5 Artist 3.5: "그럼 이번에 이 코드를 실행(또는 \"실행\" 누르기) 하면 \n무슨일이 벌어질지 생각해 보세요. 그 다음에
        여러 번 반복해서 그림을 완성해 보세요!"
      4-5 Artist 4: |-
        하나의 원 안에는 얼마나 많은 각이 있을까요? 블록들을 반복
        실행해서 무지개색의 원을 한 개 만들어 보세요.
      4-5 Artist 5: 좀비가 주어진 루프를 이용하여 이 그림을 정확하게 완성하도록 하려면 "???"를 무엇으로 바꿔야 할까요?
      4-5 Artist 6: |-
        이 정삼각형의 안쪽 각도는 60, 60, 60 도 입니다.
        각 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요.
      4-5 Artist 7: |-
        이 직각삼각형의 안쪽 각도는 30, 60, 90 도 입니다.
        기울어진 변의 길이는 200 픽셀입니다. 그림을 완성해 보세요.
      4-5 Artist 8: "축구장의 중앙선은 사이드 라인과 직각입니다. \n이 경기장은 800 픽셀의 둘레를 가지고 있고 세로가 240
        픽셀입니다. 가로의 길이는 얼마일까요? \n\n경계선과 중앙선을 그려주세요."
      4-5 Artist 9: 디자인이 대칭이 되도록 나머지 반을 그려보세요. 삼각형들은 한 변의 길이가 50 픽셀인 정삼각형입니다.
      4-5 Artist Assessment 1: |-
        형성평가: 정삼각형을 그릴 수 있도록 반복 구조를 사용해 보세요.
        각 변의 길이는 300 픽셀입니다.
      4-5 Artist Free Draw 1: |-
        자유롭게 그려보세요!
        무엇이든지 그리고 싶은 것을 그려보세요.
      4-5 Artist Patterns 10: '이 코드는 두 줄의 육각형을 만들어 줍니다. - 전체 벌집을 다 그리기 위해서 4번 반복 실행하면
        됩니다. 힌트: 가장 마지막 반복에서 120 픽셀 만큼 뒤로 뛰어야, 화가가 화면을 벗어나지 않습니다.'
      4-5 Artist Patterns 11: '반 원을 그리기 위해서 얼마나 반복시켜야 할까요? '
      4-5 Artist Patterns 12: "반복하는 것을 복사하는데 오른쪽으로 돌기를 왼쪽으로 돌기로 바꾸면 어떻게 될까요? \\\r\n\\\r\n이
        웨이브를 만들기 위해서 반복해 주세요."
      4-5 Artist Patterns 13: "그림 틀을 만들기 위해서 전체를 4번 반복시켜 보세요. 모서리에 주의하세요 - 90도만 돌면
        안됩니다! \\\r\n\\\r\n3도씩 60번 돌면 반 원을 만들 수 있습니다. 이 코드 블록들 중 어느 것으로 모서리에 사분원(1/4
        원) 을 만들 수 있을까요?"
      4-5 Artist Patterns 2: 어떤 반복 구조 안에 다른 반복 구조를 넣으면, 중첩 반복이라고 부릅니다. 15개의 모든 사각형들이
        한 줄로 서려면 바깥쪽 반복 구조를 어떻게 추가해야 할까요?
      4-5 Artist Patterns 3: 좀더 어려운 것을 해보아요! 반복 구조 안에 반복 구조를 넣어봤는데, 다음 줄을 그리려면 화가를
        다시 이전 위치로 돌려 놓아야 해요. 전체 격자를 그리기 위해서 가장 바깥쪽 반복의 끝에 어떤 블록들을 놓아야 할까요?
      4-5 Artist Patterns 4: 이 다이아몬드는 각 변이 50 픽셀이고, 120도 각과 60도 각으로 이루어져 있습니다. 다이아몬드를
        그려보세요.
      4-5 Artist Patterns 6: 다이아몬드 격자를 그리기 위해서는 얼마나 많이 반복해야 할까요?
      4-5 Artist Patterns 7: 이전 퍼즐에서 사용했던 코드를 변형해서 더 복잡한 패턴을 만들어보세요. 다이아몬드들이 얼마나 겹쳐
        그려지는지 살펴보고, 첫 번째 "뒤로 점프하기"를 100에서 50사이 정도로 바꿔보세요. - 그리고 나서 두 번째 "뒤로 점프하기"는
        얼마나 더 멀리 해야 할까요?
      4-5 Artist Patterns 8: 반복 구조를 사용해서 각 변의 길이가 40 픽셀이면서 내각의 크기가 60 도인 육각형을 만들어
        보세요.
      4-5 Artist Patterns 9: "주어진 코드를 3번 반복시켜서 모든 줄을 그려보세요. \\\r\n\\\r\n각각의 6각형들은
        왼쪽 끝에서 오른쪽 끝까지의 너비가 80픽셀입니다."
      4-5 Artist Patterns 9.5: 이 코드를 반복시켜서 두 줄로 육각형들을 만들어보세요. 두 번째 줄이 오른쪽으로 얼마나 빗겨
        그려져 있는지 살펴보세요.
      4-5 Artist Patterns Free Play: 마음대로 그리기 - 원하는 패턴을 직접 만들어보세요.
      4-5 Bee Conditionals 1: |-
        구름으로 가려 잘 보이지 않습니다!
        구름 아래에 꽃이 있는지 살펴보고, 꽃이 있는 경우에만 꽃꿀을 모아보세요.
        주의하세요, 계속 바뀝니다!
      4-5 Bee Conditionals 3: |-
        이제 꿀을 만들고 싶습니다.
        이 구름들 중 아래에 벌집이 있을 것입니다. 각 구름을 검사해야합니다!
      4-5 Bee Conditionals 4: 이 구름들은 꽃이나 벌집을 가립니다! 만약/아니면 블록을 사용해서 꽃인 경우에 꽃꿀을 모으고,
        꽃이 아닌 경우(즉, 벌집인 경우)에는 꿀을 만들도록 해주세요.
      4-5 Bee Conditionals 5: "이 안개 구름들 아래에는 꽃이나 벌집이 있을 수 있습니다.\\\r\n\\\r\n'만약/그렇지않으면'
        블록을 이용해서 꽃이면 꽃꿀을 모으고\\\r\n아니면 (즉, 벌집이라면) 꿀을 만들도록 해보세요."
      4-5 Bee Conditionals 6: "이 자주색 꽃에는 꽃꿀이 1, 2, 3개 있을 수 있습니다. \\\r\n\\\r\n이 \"만약\"
        블록은 다른 \"만약/아니면\" 블록과 결합되어서, \"만약/(아니고 만약/모두 아니면)\" 명령을 만들어낼 수 있습니다. \n\\\r\n\\\r\n꽃꿀의
        양을 모르는 경우에도 꽃꿀을 모두 얻을 수 있게 해보세요."
      4-5 Bee Conditionals 7: "자주색 꽃은 꽃꿀이 3, 2, 1 중 하나입니다. \n\\\r\n\\\r\n\"자주색 꽃 확인\"
        함수를 완성하고 이용해서 꽃의 모든 꽃꿀들을 모을 수 있도록 해보세요."
      4-5 Bee Conditionals 8: "\"꽃을 확인하고 꿀 만들기\" 함수의 내부를 완성해 주세요. \\\r\n\\\r\n자주색
        꽃의 꽃꿀이 3, 2, 1 인 경우에는 모든 꽃꿀을 모으세요. \\\r\n그 후에 앞으로 이동해서 꿀을 만들면 됩니다."
      4-5 Bee Conditionals Assessment 1: "**형성평가:** 이 구름은 한 개의 꽃꿀을 가지고 있는 꽃 아니면 한
        개의 꿀을 필요로 하는 벌집을 숨기고 있습니다. \\\r\n\\\r\n\"꽃꿀을 모으거나 꿀 만들기\" 함수를 완성하고 나서 그 함수를
        사용하여 꽃꿀이나 꿀을 모으도록 만들어 주세요.\\\r"
      4-5 Bee Debugging 1: "이 블록들이 왜 안되는지 진짜 잘 모르겠어요. \\\r\n\\\r\n고쳐주세요."
      4-5 Bee Debugging 10: 오류들을 찾아 고쳐주세요.
      4-5 Bee Debugging 11: 반복 횟수가 정확한가요?
      4-5 Bee Debugging 2: 꿀벌이 꽃꿀을 모아 꿀을 만들 수 있도록 도와주세요.
      4-5 Bee Debugging 3: 오류들을 찾아 고쳐주세요.
      4-5 Bee Debugging 4: |-
        이 블록들은 제대로 동작하지 않습니다.
        어떤 패턴인가요?
      4-5 Bee Debugging 5: 뭔가 틀린 것 같습니다...
      4-5 Bee Debugging 6: "자주색 꽃에는 꽃꿀이 얼마나 있는지 알 수가 없습니다. \\\r\n\\\r\n퍼즐이 실행될 때마다
        꽃에서 모든 꽃꿀을 뽑을 수 있도록, 블록들을 수정해보세요."
      4-5 Bee Debugging 7: 함수에 뭔가 빠졌습니다...
      4-5 Bee Debugging 8: 함수는 맞는데, 정확히 사용되지는 않았습니다.
      4-5 Bee Debugging 9: 왜 꿀벌이 충분한 꿀을 만들지 못 할까요?
      4-5 Bee Debugging Assessment 1: '형성평가: 코드를 수정해 주세요.'
      4-5 Bee Nested Loops 1: 꽃꿀을 모두 모으기 위해서 반복 구조를 사용해보세요.
      4-5 Bee Nested Loops 2: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      4-5 Bee Nested Loops 3: 중첩 반복 안에 시작 코드를 넣어서 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops 4: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩 반복을
        사용하면 됩니다. "
      4-5 Bee Nested Loops 5: 중첩 반복 구조를 만들어서 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops 7: 반복 구조를 다른 반복 구조 안에 넣어 중첩 반복을 만든 후 꽃에서 모든 꽃꿀을 모을 수 있도록
        해보세요.
      4-5 Bee Nested Loops 9: 반복 구조 안에 반복 구조를 중첩시켜서 이 꽃들로 부터 모든 꽃꿀을 모아보세요.
      4-5 Bee Nested Loops Assessment 1: "**형성평가:** 반복 구조들을 사용해서 모든 꽃꿀을 모으고 꿀을 만드세요."
      4-5 Bee Nested Loops Rows: 꽃들로 부터 꽃꿀을 모으세요. 중첩 반복을 사용하면 됩니다.
      4-5 Maze 1: 여보세요.. 저.. 좀비.. 해바라기.. 가야함..
      4-5 Maze 10: 4개의 블럭만 사용해서 해바라기로 갈 수 있나요?
      4-5 Maze 11: 6개의 블록만 사용해서 해바라기로 갈 수 있나요?
      4-5 Maze 12: |-
        좋아요. 이건 약간 다르네요.
        6개의 블록만으로 해보세요.
      4-5 Maze 2: 좀비를 해바라기로 이동시키되, 식충식물은 피해야 합니다.
      4-5 Maze 3: 해바라기.. 로.. 꼭.. 가야합니다.
      4-5 Maze 4: 퍼즐을 보다 빨리 해결하기 위해서 "반속" 블록을 사용하세요.
      4-5 Maze 5: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 6: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      4-5 Maze 8: "가능한 적은 블록을 사용해서 좀비가 해바라기로 가도록 해주세요. \\\r\n(식충식물들은 피해야 합니다!)"
      4-5 Maze 9: "\"~할 때까지 반복\" 이라고 부르는 새로운 블럭이 있습니다. \\\r\n이 블록은 좀비가 해바라기에게 갈 때까지
        명령을 반복하도록 해줍니다. \\\r\n\\\r\n\"~할 때까지 반복\" 블록을 사용하고 가능한 적은 블록으로 퍼즐을 해결해 보세요."
      4-5 Maze Assessment 1: '형성평가: 최대한 적은 블록을 사용하여 해바라기로 가기'
      4-5 Maze Conditionals 1: |-
        "~할 때까지 반복" 블록을 이용해서,
        좀비를 해바라기로 이동시켜주세요.
      4-5 Maze Conditionals 10: "블럭을 3개 더 붙여서, 좀비가 좀 더 복잡한 미로를 빠져나갈 수 있도록 도와주세요.\\\r
        \n\\\r \n성공한다면 아무리 크고 복잡한 미로라고 하더라도 거뜬히 통과할 수 있을거예요."
      4-5 Maze Conditionals 2: |-
        "~할 때까지 반복" 블록을 이용해서,
        좀비를 해바라기로 이동시켜주세요.
      4-5 Maze Conditionals 4: 음... 이번이 마지막 퍼즐입니다! "만약" 블록과 "반복" 블록을 함께 사용해야 합니다.
      4-5 Maze Conditionals 6: "\"해바라기 먹어!\" \\\r\n\\\r\n\"만약\" 블록을 사용하고 최대한 적은 블록만
        사용해서 좀비를 해바라기로 보내주세요."
      4-5 Maze Conditionals 7: 이 퍼즐을 해결하는 것이 그리 어렵지는 않지만, 식충 식물을 조심하세요!
      4-5 Maze Conditionals 8: "\"조건/선택\" 블럭은 조건을 검사한 다음에 그 결과에 따라 하나의 작업을 선택해 실행해
        줍니다. \\\r\n\\\r\n이 블록을 사용해서 저를 해바라기로 보내주세요."
      4-5 Maze Conditionals 9: "\"조건/선택\" 블록을 다시 한 번 사용해 보겠습니다. \\\r\n\\\r\n손가락으로
        따라가 보세요. 한 번에 성공할 수 있겠어요?"
      4-5 Maze Conditionals Assessment 1: '**형성평가:** "~할 때까지 반복" 블록과 "만약/아니면" 블록을
        사용하고 가능한 적은 블록으로 저를 해바라기로 보내주세요.'
      4-5 Nested Loops 1: '이 삼각형들을 그리는 코드를 완성시켜 주세요. 첫 번째 것은 만들어져 있습니다. 힌트: 360 도
        방향으로 3개의 삼각형들이 있습니다.'
      4-5 Nested Loops 11: 중첩 반복을 사용해서 사람다니는 길에 10개의 사각형들을 그려주세요. 각 사각형들은 30 픽셀입니다.
      4-5 Nested Loops 12: 중첩 반복을 이용해서 36개의 삼각형들을 그려주세요.
      4-5 Nested Loops 2: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 \"중첩\" 반복이라고
        합니다.  "
      4-5 Nested Loops 3: "다른 반복 안에 시작 코드를 중첩시켜 넣어서 해를 만들어 주세요. \\\r\n\\\r\n이렇게 가운데가
        빈 멋진 디자인을 얻기 위해서는 회전하기 전에 삼각형의 길이만큼 앞으로 점프해야 합니다."
      4-5 Nested Loops 5: 주어진 코드를 반복시켜서 풍차를 만들어 주세요.
      4-5 Nested Loops 6: 삼각형 코드를 반복시켜서 육각형을 그려 주세요.
      4-5 Nested Loops 9: 악어 입 안에 이빨을 그려주세요!
      4-5 Nested Loops Assessment 1: '형성평가: 중첩 반복을 사용해서 디자인을 완성시켜주세요.'
      4-5 While Loops 1: 구덩이로 이동해서 "메우기" 블록으로 흙을 2번 메우기 해주세요.
      4-5 While Loops 2: 흙더미로 이동하고 "치우기 1" 블록으로 흙을 5번 치우기 해주세요.
      4-5 While Loops 3: "블록을 가능한 적게 사용해서 퍼즐을 해결하세요. \\\r\n\\\r\n흙더미로 이동해서 흙을 모두 치우고,
        구덩이로 이동해서 흙을 모두 메워 주세요."
      4-5 While Loops 5: 와! 이번에는 깊은 구덩이가 2개 입니다. 2개의 구덩이를 모두 채워주세요.
      4-5 While Loops 6: 와우, 저기 엄청 큰 흙더미가 있네요! 흙더미를 모두 치워보세요.
      4-5 While Loops 7: 와우, 이제는 3개의 흙더미가 있습니다! 3개의 흙더미를 모두 치워주세요.
      4-5 While Loops 8: " 진짜 깊은 구덩이와 진짜 큰 흙더미가 있습니다. 구덩이를 메우려면 흙더미를 몇 번 옮겨야 할까요?"
      4-5 While Loops Assessment 1: 구덩이와 흙더미가 많이 있습니다. 모든 구덩이와 흙더미를 없애주세요.
      CSD U6 params modify clouds: |-
        # 구름

        이 프로그램은 당신이 음향 센서를 불면 구름이 움직이도록 만들지만 그것이 끝은 아닙니다.

        # 이렇게 해보세요

        -   구름을 움직이게 할 새로운 함수 '구름이동(이름)'을 만들어 주세요.
        -   (힌트: '구름이동0'함수와 거의 같은 함수를 만들어 주세요)
        -   이벤트 상자안에서 각각 한번씩 구름 이름에 대해 새로운 '구름이동(이름)' 함수를 불러주세요.
        -   (힌트: '반복구름(이름)'함수를 여러번 불렀던 방법과 유사합니다.
      CSD U6 params modify clouds_2018: |-
        # 구름

        이 프로그램은 당신이 음향 센서를 불면 구름이 움직이도록 만들지만 그것이 끝은 아닙니다.

        # 이렇게 해보세요

        -   구름을 움직이게 할 새로운 함수 '구름이동(이름)'을 만들어 주세요.
        -   (힌트: '구름이동0'함수와 거의 같은 함수를 만들어 주세요)
        -   이벤트 상자안에서 각각 한번씩 구름 이름에 대해 새로운 '구름이동(이름)' 함수를 불러주세요.
        -   (힌트: '반복구름(이름)'함수를 여러번 불렀던 방법과 유사합니다.
      Course 4 Artist 1: "상자를 그릴 수 있도록 도와주세요.\n(각 선의 길이는 200 픽셀입니다.) "
      Course 4 Artist 10: "힌트를 다시 보려면 여기를 눌러보세요!\\\r\n\\\r\n재미있는 모양을 위한 코드가 있습니다.
        한 번 실행할 때마다 회전시키면 어떤 일이 일어날까요? 이 모양의 각도는 420도까지 가능하고, 실행할 때마다 화가가 바라보는 방향이
        바뀔 것입니다. 그리고 그 각도는 정확히 60도 입니다."
      Course 4 Artist 11: 자 이제 도전해보세요! 실패하더라도 계속 도전해 보세요. 한 번에 성공하는 사람은 거의 없습니다. 힌트가
        필요하다고요? 여기를 눌러보세요!
      Course 4 Artist 12: "멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\\\r\n\\\r\n아니면, 자유롭게
        디자인해 보세요!"
      Course 4 Artist 13: 계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요.
      Course 4 Artist 2: 이 코드를 반복시켜서 회색 사각형을 그려주세요. (각 변의 길이는 300픽셀입니다.)
      Course 4 Artist 20: 계속 하고 있나요? 빈 캔버스가 있습니다. 마음대로 그려보세요.
      Course 4 Artist 3: 이 코드를 실행(또는 실행 누르기) 하면 어떻게 될지 생각해 보세요. 그 다음에 그림을 완성할 때까지
        충분히 여러 번 시도해 보세요.
      Course 4 Artist 4: 원 안에는 얼마나 많은 각이 있을까요? 색 원들을 만들어내기 위해서 필요한 수를 반복 블록에 채워넣어주세요.
      Course 4 Artist 5: '이 디자인의 나머지 반을 만들어서 대칭이 되도록 만들어 보세요. 삼각형들은 변들이 같고 50 픽셀 길이입니다.
        힌트: 추가해야 할 모든 블록들을 찾아내기 위해서 코드를 여러 번 실행시켜봐야 할 수도 있습니다.'
      Course 4 Artist 6: "이 삼각형들을 그리기 위한 코드를 완성시켜보세요. \\\r\n\\\r\n각 정삼각형의 한 변의 길이는
        100 픽셀입니다. "
      Course 4 Artist 7: "이번에는 반복을 다른 반복에 넣어서 10개의 삼각형을 그려보세요.\n이러한 것을 중첩 반복이라고 합니다.
        힌트: 360도를 돌며 10개의 삼각형을 그려야 합니다.  "
      Course 4 Artist 8: 이 코드 블록을 여러번 반복시켜 해를 그려보세요.
      Course 4 Artist 8a: 이 모양이 기억이 나나요? 이제 처음에 아무 블록들이 없는 상태로 만들어내야 합니다!
      Course 4 Artist 9: "이 디자인을 10번 반복 시키면서, 한 번 그릴 때마다 회전시켜보세요.\\\r"
      Course 4 Artist Binary 1: "여기에 1, 0 로만 이루어진 문자열을 입력해서, 화가를 왼쪽에서 오른쪽으로, 위에서 아래로
        움직이는 함수가 있습니다. 화가는 1을 보면 사각형을 채우고, 0이면 무시할 것입니다. \\\r\n\\\r\n이 코드를 실행시킨 후,
        화가가 2진 정보를 이용해서 이 패턴을 그려내는 것을 살펴보세요."
      Course 4 Artist Binary 2: 이 이미지를 그려내기 위해서, 어떤 2진 문자열이 8번 반복시켜 줄까요?
      Course 4 Artist Binary 3: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      Course 4 Artist Binary 4: 각 2진 문자는 이 그림의 한 줄을 의미합니다. 2진 문자열을 재배치해서 찡그린 얼굴 모양을
        웃는 얼굴 모양으로 만들어 주세요.
      Course 4 Artist Binary 5: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      Course 4 Artist Binary 6: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      Course 4 Artist Binary 7: 이 그림을 마무리 해보세요.
      Course 4 Artist Binary Free Play 2: '자유 플레이: 빈 캔버스가 있습니다. 마음대로 재미있게 그려보세요!'
      Course 4 Artist Binary Free Play 2a: "좀 더 높은 해상도로 표현할 수 있는 캔버스가 여기 있습니다. - 16
        픽셀 \\* 16 픽셀!\\\r\n\\\r\n2진 비트 문자열로 어떤 것이 그려지는 지 살펴보세요."
      Course 4 Artist Binary Free Play 2b: 여기를 눌러 힌트를 살펴보세요.
      Course 4 Artist Binary pre1: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는
        0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      Course 4 Artist For Loops 1: 반복 블록을 1개 사용하여 너비가 50 픽셀인 삼각형을 그려주세요.
      Course 4 Artist For Loops 11: '이전 스테이지에서 어떤 모양의 변의 길이를 조절하기 위해 사용했던 변수에 대해서
        생각해 보세요. 이번에는 "카운터" 변수라는 것을 이용해서 같은 작업을 해 보도록 하겠습니다. 이 패턴은 삼각형으로 시작하고, 한 변을
        붙이면서 10각형(10개의 변을 가진 다각형) 을 그립니다. 각 변의 길이는 100 픽셀 입니다. '
      Course 4 Artist For Loops 11a: "자 이제 모두 함께 사용해 봅시다! \"반복(~인 동안)\"과 \"카운터\" 변수를
        이용해서, 앞의 것보다 2개 더 많은 변을 가지고 있는 각각의 도형들을 만들어보세요. 각 변의 길이는 각 다각형의 변의 개수의 10배이어야
        합니다.\\\r\n\\\r\n아주 적은 코드가 미리 주어져 있습니다."
      Course 4 Artist For Loops 14: 일반적인 도형들에 사용하는 각 보다 조금 더 많거나 적게 각을 회전시키면 멋진 효과를
        만들어낼 수 있습니다. 이전 레벨에서의 코드를 이용해 실험해 보는데, 89도를 사용하면 이런 비틀어진 사각형 나선 구조를 만들어 낼
        수 있습니다.
      Course 4 Artist For Loops 15: '자유 플레이: "반복(~동안)"을 이용해서 원하는 그림들을 만들어보세요. 여러분이
        사용할 수 있는 편리한 변수들을 몇 개 더 추가했습니다.'
      Course 4 Artist For Loops 2: '50 부터 100 까지 10씩 올리며 카운트하는 반복(~동안) 구조 안에 삼각형을
        그리는 코드를 넣어 두었습니다. 참고: "실행"을 누르기 전에 코드를 먼저 살펴보세요.'
      Course 4 Artist For Loops 3: |-
        이번 퍼즐을 해결하기 위해서, 이전 퍼즐을 참고하세요.
        가장 작은 삼각형의 크기는 한 변이 20 픽셀이고, 가장 큰 삼각형의 크기는 한 변이 200 픽셀입니다.
        각 삼각형들은 바로 전 삼각형 보다 20 픽셀 만큼 씩 더 큽니다.
      Course 4 Artist For Loops 4: "이 사각형들을 그리려면 배웠던 것들에서 어떤 것을 바꾸면 될까요?\n한 변의 길이가
        15 픽셀인 사각형으로 시작하고, 가장 큰 사각형은 한 변이 300 픽셀입니다.\n각 사각형은 바로 전 사각형 보다 15 픽셀 만큼
        씩 더 큽니다. "
      Course 4 Artist For Loops 6a: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      Course 4 Artist For Loops 8: "이전 그림에서 1가지만 바꾸면 이 그림을 만들 수 있습니다. 어떤 것을 바꾼 것인지
        찾아낼 수 있나요?\\\r\n\\\r\n힌트: 뭔가 제거하면 됩니다!"
      Course 4 Artist For Loops inspire: "멋진 자유 플레이: 여러분은 이제 이런 패턴을 만들기 위해 필요한 모든
        것들을 배웠습니다! 이 그림이 여러분이 느끼기에 멋지다면, 비슷한 것을 한 번 만들어 보세요. 아니면, 만들고 싶은 것을 자유롭게 만들어도
        됩니다.\\\r\n\\\r\n힌트가 필요한가요? 여기를 클릭하세요."
      Course 4 Artist Functions Inspiration: 여기를 눌러 힌트를 다시 살펴보세요.
      Course 4 Artist Functions challenge: 여기를 눌러 힌트를 다시 살펴보세요.
      Course 4 Artist Inspire: "멋진 디자인을 위한 도움말이나 힌트가 필요하면? 여기를 클릭하세요!\\\r\n\\\r\n아니면,
        자유롭게 디자인해 보세요!"
      Course 4 Artist Vars 11: |-
        이전 퍼즐에서와 같은 개념들을 사용하는 좀 더 복잡한 코드입니다.

        -   사각형들로 만들어진 이 그림을 그리기 위해서 "변" 변수를 어떻게 설정해야 할까요?
      Course 4 Artist Vars 12: |-
        자 이제 "면" 변수를 살펴보세요.

        5.  이 알고리즘에 더 많은 면 개수를 추가하면 할 수록, 전체 패턴이 더 커집니다! 그리고 "길이"라는 변수가 더 있습니다. 그리고 이제 "앞으로 이동" 블록이 없어도 할 수 있습니다. 모양을 만들려면 "길이" 변수를 75로 설정하세요.
      Course 4 Artist Vars 13: "전체 패턴을 화면에 맞추기 위해서는, 도형에 여러 개의 변들이 있을 때 각 변들의 길이를
        줄여야 합니다.\n\\\r\n이 멋진 패턴을 만들어낸 알고리즘을 새롭게 만들어보세요. 각각의 모양을 정확히 맞추기 위해서 \"변\"
        변수와 함께 수학 블록을 사용해서, \"길이\" 변수의 값을 계산할 수 있도록 하면 됩니다. 각 다각형의 둘레는 300 픽셀입니다.\\\r\n힌트가
        필요한가요? 여기를 눌러보세요."
      Course 4 Artist Vars 14: "자유 플레이: 확인해보세요! 여러분의 알고리즘은 반복 구조가 한 번 이상 중첩되어있습니다.
        두 개의 변수 값들을 바꾸어 멋진 패턴들을 만들어보면서 실험해 보세요.\\\r\n\\\r\n더 멋지게 만들어 보려면, 색을 사용해 보세요!\n반복
        구조들 안에 랜덤색을 사용해서 디자인이 어떻게 변화 되는지 살펴보세요."
      Course 4 Artist Vars 2: 이번에는 "앞으로 150 만큼 이동"을 사용하는 대신에 "이동" 블록이 "길이"라는 변수에 저장되어있는
        값을 이용합니다. 삼각형을 그리기 위해서 "길이"를 150 으로 입력해 보세요.
      Course 4 Artist Vars 4: 이번에는 너비의 2배 만큼 높이를 가진 사각형을 만들어보세요. "너비"라는 변수를 100 으로
        설정하면 됩니다. 수학 블록들을 이용해 코드를 완성해 주세요.
      Course 4 Artist Vars 6: "모든 정 다각형들을 만들 수 있는 코드가 있습니다.\n그 값이 4 로 입력되어있는 새 변수가
        있습니다. (수학 블록과 함께) 면 수 변수를 사용해서, 다각형의 면들이 몇 개인지에 상관없이 자동으로 회전시켜보세요.\\\r\n\\\r\n여기를
        눌러 힌트를 다시 살펴보세요."
      Course 4 Artist Vars 7: "이전 퍼즐을 통해서 배웠던 것을 이용하면 됩니다. \"면\" 변수를 사용해서 육각형을 만들어보세요.\\\r\n\\\r\n변수
        값 하나만 변화시키면, 삼각형, 사각형, 오각형,..., 팔각형을 모두 만들 수 있습니다."
      Course 4 Artist Vars 8: '자유 플레이: 이 도형의 면의 수로 실험해 보세요. 면의 개수가 어떻게 바뀌든지 상관없이,
        도형의 크기는 같아지도록 알고리즘을 수정해 주세요. 힌트: 처음 시작하는 길이를 면의 개수로 나누면, 면의 개수가 많아지는 만큼 각
        면의 길이는 짧아집니다.'
      Course 4 Bee 2: '"만약/아니면" 블록으로 꽃인지? 아니면 벌집인지? 확인하도록 해 보세요. 만약 꽃이면 꽃꿀을 모으고...
        아니면, 꿀을 만들어보세요!'
      Course 4 Bee 3: |-
        물체는 꽃이거나 벌집입니다.
        이번에는 "만약/아니면" 블록을 이용해서 꽃이면 꽃꿀을 얻고, 아니면(꽃이 아니면 벌집이므로) 꿀을 만들게 해보세요.
      Course 4 Bee Loops 5 NEW: 3개의 꽃이 있습니다. 가장 적은 블록 개수로 꽃꿀을 모을 수 있도록, 3번 반복시키는 명령
        패턴을 찾아보세요.
      Course 4 Bee Loops 5a NEW: |-
        이제 최대한 적은 블록들을 사용해서
        벌집까지 가는 길에 있는 꽃들의 모든 꽃꿀을 모을 수 있도록 해주세요. 마지막에는 꿀을 만들면 됩니다.
      Course 4 Bee Params 1: '"꽃꿀 3번 모으기" 를 이용해서 꽃꿀을 모두 모으기 위한 순서를 만들어 보세요. 꽃꿀을 모으기
        위해 돌고 움직인 다음에 원래 위치로 돌아오면 됩니다.'
      Course 4 Bee Params 2: '"꽃꿀 3번 모으기" 함수를 수정해서 꽃을 향해 왼쪽으로 도는 대신 오른쪽으로 돌도록 해주세요.'
      Course 4 Bee Params 3: "양쪽에 꽃들이 있네요!\n\"왼쪽\", \"오른쪽\" 이라는 변수와 \"방향\"이라는 매개변수를
        \"꽃꿀 3번 얻기\" 함수에 붙여두었습니다.\n\"꽃꿀 3번 얻기\" 함수를 수정해서, \"왼쪽\" 또는 \"오른쪽\" 변수의 값이
        전달될 때,\n지정한 방향으로 회전하도록 바꿔보세요.  "
      Course 4 Bee Params 4: 꽃들에서 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요. 왼쪽/오른쪽 변수를 사용하세요.
      Course 4 Bee Params 5: 시험삼아 해보세요. - 방향 변수를 이용해서 "꽃꿀 5번 모으기" 함수를 만들어보세요.
      Course 4 Bee Params 6: |-
        이 모든 꽃꿀들을 1개의 함수로 모을 수 있다면 얼마나 좋을까요?
        "꽃꿀 개수"라는 매개 변수를 함수에 추가해서, 뽑아낼 꽃꿀의 양을 제어해 보세요.
        아마도 함수 이름을 바꾸고 싶기도 할 것입니다!
      Course 4 Bee Params 7: 모든 꽃꿀을 수집하기 위해서 새로운 함수를 사용해보세요.
      Course 4 Bee Params 8: |-
        도전해보세요: 으, 이번에도 다루어야 할 꿀들이 있네요.
        꿀의 개수와, 꽃꿀의 개수를 모두 사용하는 함수를 다시 만들어보세요.
        2가지 가지 값들에 대해서 어떻게 해야할까요?
      Course 4 EC 1a: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 1b: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2a: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2b: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 EC 2c: 규칙이 없습니다. 힌트도 없습니다. 도전해보세요!
      Course 4 Maze 2: TNT를 피해 움직이세요!
      Course 4 Maze 3: '새를 돼지에게 이동시킬 수 있도록 프로그래밍 해보세요. '
      Course 4 Maze 4: |-
        이 퍼즐을 풀기 위해서...
        더 적은 블록들을 사용하는 "반복" 블록을 사용해보세요.
      Course 4 Maze 5: 블록을 최대한 적게 사용해서, 이 퍼즐을 해결해보세요.
      Course 4 Play Lab Params 3: "점프 함수에 다른 매개 변수를 더 추가해서, 다른 캐릭터들도 사용할 수 있게 되었습니다.\n각각의
        캐릭터들은 1부터 시작되는 수로 나타내져 있습니다.\n\"점프\" 함수를 수정해서 \"캐릭터\" 매개 변수로 적당한 캐릭터가 점프하도록
        만들어보세요. "
      Course 4 Play Lab Params 5: |-
        "순찰" 함수에 "캐릭터" 매개변수를 추가해서, 원하는 캐릭터를 화면에 나타낼 수 있도록 해보세요.
        캐릭터들은 1, 2, 3 으로 선택할 수 있도록 해주세요.
      Course 4 Play Lab Params 6: '"순찰" 함수에 "속도" 매개변수를 더 추가해 보세요. 다른 캐릭터들이 깃발을 잡기
        전에 펭귄이 깃발들을 잡을 수 있도록 "속도" 매개변수를 "속도 설정" 블록에 사용하세요.'
      Course 4 Play Lab Vars 1: |-
        이번에는 코드를 작성할 필요가 없습니다. "실행"을 눌러 실행시켜보세요! 이번 게임에서,
        여러분은 고양이보다 더 많은 깃발을 모으기 위해 노력하는 강아지입니다. "아래" 방향키를 이용해서
        강아지를 움직여보세요. 그만하려면 "마치기"를 누르면 됩니다.
      Course 4 Play Lab Vars 2: 이전 퍼즐은 공정하지 않았습니다! "강아지 속도" 변수의 값을 바꿔서 고양이보다 더 많은
        깃발을 모을 수 있도록 해보세요. 10 개의 깃발을 먼저 모으면 이깁니다!
      Course 4 Play Lab Vars 4: |-
        이제 "높이" 라는 변수를 사용해서 강아지가 뛰는 높이를 조정할 수 있습니다.
        모든 깃발에 닿을 수 있도록 "높이" 변수를 조정해주세요.
      Course 4 Play Lab Vars 5: "자 이제 게임을 만들어보세요!\n일단 먼저 점수가 필요합니다. 이전 레벨에서 보았던 코드를
        다시 만들어서\n점수를 10으로 설정해주세요. "
      Course 4 Play Lab Vars 6: "오른쪽 방향키를 이용해 하트를 맞춰보세요.\\\r\n\\\r\n이 게임에서는 어떻게 포인트를
        올려야 할까요?\n강아지가 하트로 고양이를 맞출 때마다 \"점수\" 변수에 1씩 더해보세요.\n\"캐릭터 2가 물체에 닿으면\" 이벤트를
        이용해 점수를 업데이트하면 됩니다. \"점수=점수+1\"로 설정해서\n변수의 값을 하나씩 올리면 됩니다. 점수를 10 까지(한 번에
        1 씩) 올려서 이 레벨을 통과해보세요."
      Course 4 Play Lab Vars 7: |-
        좋아요. 이제 이 게임을 좀더 어렵게 만들어보세요. 강아지(캐릭터 1) 가 고양이(캐릭터 2) 가 발사한
        노란 하트를 맞으면, 점수를 잃어야 합니다. 10 포인트에서 시작하기 때문에 아주 어렵지는 않습니다.
        10 부터 0 까지 포인트를 내려서 이 레벨을 통과해보세요.
      Course 4 Play Lab Vars 9: "자유롭게 만들어보세요! 여기에는 지금까지 이 과정에서 사용했던 모든 변수들이 모두 있고,\\\r\n필요한
        몇 가지가 더 있습니다.\\\r\n\\\r\n도구 상자에 블록들이 아주 많은데 적당히 분류해야할 것 같습니다!\n이제, 각 블록들을
        적당한 카테고리로 묶어 두었습니다. 블록들을 충분히 살펴보세요.\n다 살펴본 이후에 반복 구조, 변수, 이벤트를 이용해 게임이나 이야기를
        만들어보세요. \\\r\n\\\r\n힌트: 모든 명령들을 작업 공간에서 살펴보려면 스크롤해 내려보세요."
      Course 4 Play Labs For Loops 1: |-
        강아지가 1부터 100까지 모든 자연수를 말하도록 해보세요.
        1개의 반복 구조와 카운터 블록을 이용해서, 한 번 실행될 때마다 카운터 값을 말하도록 하면 됩니다.
      Course 4 Play Labs For Loops 2: 이번에는 Olive가 1부터 101사이에 있는 홀수만 셀수 있도록 도와주세요
      Course 4 Play Labs For Loops 3: |-
        더 큰 수 만큼씩 카운터 값을 올리면,
        같은 시간에 더 큰 값 범위를 카운트 할 수 있습니다.
        10 부터 1000 까지, 한 번에 10 만큼 씩 증가시키며, 카운트 할 수 있게 해보세요.
      Course 4 Playlab For Loop Freeplay: '자유 놀이: 지금까지 배운 모든 것을 사용하여 "for(~동안)" 반복문을
        포함하는 게임을 만들어 보세요!'
      Course 4 Playlab For Loops 4b: "자, 이제 이 두 캐릭터는 경주를 할 것입니다. \\\r\n\\\r\n캐릭터들은
        한 번에 \"카운터(counter)\"만큼씩 이동할 것입니다. 그러나 \"for(~동안)\" 반복문으로 인해 그 \"카운터\" 들은
        서로 다른 값을 가질 것입니다. \\\r\n\\\r\n반복문 중 하나의 증가값을 바꿔서 경주가 무승부가 되도록 해 줄래요?"
      Course 4 Playlab For Loops 5b: 두 캐릭터가 정확히 같은 장소에서 끝내도록 "for(~동안)" 반복문의 간격을 조절하세요.
      Course 4 Playlab For Loops 6b: "여러분이 재미있게 즐길 수 있는 게임을 만들기 위해 이 \"for(~동안)\"
        반복문을 편집하세요.\\\r\n\\\r\n\"실행\" 버튼을 누르고 유니콘을 네 번 클릭하여 우승하게 해 보세요. "
      Course 4 SCF 1: |-
        4줄의 육각형들을 그리기 위해서 주어진 함수들을 사용해보세요.
        짝수 줄의 육각형들은 오른쪽으로 얼마나 이동되어 그려져 있을까요?
      Course 4 SCF 1a: 어떻게 하면 최대한 가장 적은 블록들을 사용해서, 모든 꽃꿀들을 모을 수 있을까요?
      Course 4 SCF 2: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더
        간단하게 만들 수 있습니다. '
      Course 4 SCF 3: '이런 이미지를 그려내기 위해서 이전 레벨에서 배웠던 것들을 사용해 보세요. 참고: 매개변수들을 사용하면 더
        간단하게 만들 수 있습니다. '
      Course 4 SCFL 1: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      Course 4 SCFL 1a: 최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요.
      Course 4 SCFL 1b: 최대한 적은 블록들을 사용해서 스크랫이 도토리를 잡을 수 있게 해주세요.
      Course 4 SCFL 2: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      Course 4 SCFL 3: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 4: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 6: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      Course 4 SCFL 7: 화가가 물결무늬들을 잡고 싶어합니다! 어떻게 하면 다시 그려낼 수 있을까요?
      Course 4 SCV 1: 설명을 다시 보려면 여기를 클릭하세요.
      Course 4 SCV 2: 설명을 다시 보려면 여기를 클릭하세요.
      Course 4 SCV 3: "이번에는 잡기 게입입니다! 고양이를 잡으면 2 포인트, 펭귄을 잡으면 3 포인트를 얻게 해보세요.\n10
        포인트를 먼저 얻으면 이깁니다!\\\r\n하지만, 고양이와 펭귄이 서로 잡으면, 점수를 잃습니다.\\\r\n\\\r\n위에서 설명한
        것처럼 게임이 동작하도록 필요한 블록들을 붙이세요. 방향키를 눌러 강아지를 4방향으로 움직이도록 하려면 어떻게 하면 될까요?\n강아지가
        고양이나 펭귄을 잡으면 어떻게 점수를 얻게 할 수 있을까요? 고양이와 펭귄에 동시에 닿으면 어떻게 점수를 잃게 할 수 있을까요?"
      Course 4 SCV 4: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      Course 4 SCV 5: 최대한 가장 적은 개수의 블록을 사용해서 이 퍼즐을 풀어보세요.
      Course 4 SCV 6: 설명을 다시 보려면 여기를 클릭하세요.
      CourseD_Dance_2020_01: "‘새로 만들기’ 블록을 작업공간에 드래그하고, ‘설정’ 블록 안에서 연결하세요."
      CourseD_Dance_2020_02: "‘위쪽 키가 눌리면’ 블록을 사용하면 위쪽 화살표 키를 눌렀을 때 코드가 실행됩니다. 위쪽 화살표
        키를 눌렀을 때 댄서가 손뼉을 치게 만들거나 다른 동작을 시험해 보세요!"
      CourseD_Dance_2020_03: 춤출 시간입니다! 각기 다른 키를 눌렀을 때 각 댄서가 움직이도록 설정하세요. 좋아하는 동작을
        골라 각 댄서에게 배정하거나 “(Random)”으로 설정해 예측 불가한 댄스를 펼치세요!
      CourseD_Dance_2020_04: 네 번째 마디 이후에 댄서가 새 동작을 시작하게 하세요.
      CourseD_Dance_2020_05: 이제 댄서가 6번째 마디 후 새로운 움직임을 시작하도록 하세요!
      CourseD_Dance_2020_06: 리드 댄서를 가운데 두고 주변으로 백업 댄서들을 배치해 보세요.
      CourseD_Dance_2020_07: 백업 댄서 그룹의 규모를 변경하세요.
      CourseD_Dance_2020_08: 한 댄서(또는 그룹 전체) 의 색조를 바꾸어 보세요!
      CourseD_Dance_2020_09: 이 새 블록들로 창의성을 발휘하세요!
      CourseD_Dance_2020_10: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      CourseD_Dance_2020_bonus1: 앞뒤로! (자세한 내용은 “더 보기” 클릭)
      CourseD_Dance_2020_bonus3: 의 형성에 가자! (자세한 내용은 “자세히”를 클릭하십시오)
      CourseD_Dance_Party_01: "‘새로 만들기’ 블록을 작업공간에 드래그하고, ‘설정’ 블록 안에서 연결하세요."
      CourseD_Dance_Party_02: 4번째 마디 후 사슴이 새로운 움직임을 시작하도록 하세요!
      CourseD_Dance_Party_03: 이제 댄서가 6번째 마디 후 새로운 움직임을 시작하도록 하세요!
      CourseD_Dance_Party_04: 프로그램 배경 효과를 추가하세요.
      CourseD_Dance_Party_05: 다른 새로운 블록을 사용하여 댄서가 두 마디마다 움직임을 변경하도록 하세요.
      CourseD_Dance_Party_06: 고양이와 함께 춤을 추는 'backup\_dancer1'라는 백업 댄서를 만드세요.
      CourseD_Dance_Party_08: 두 백업 댄서를 모두 같은 크기로 만들 수 있나요?
      CourseD_Dance_Party_09: 댄서의 색상을 변경하려면 `색조 설정` 블록을 사용하세요.
      CourseD_Dance_Party_10: "`따라하기 시작` 블록을 사용하여 다른 댄서도 음악에 맞춰 반응하도록 하세요."
      CourseD_Dance_Party_11: "‘위쪽 누를 때’ 블록을 사용하면 위쪽 화살표를 눌러서 코드를 실행할 수 있습니다. 위쪽 화살표를
        누를 때 댄서가 빠른 움직임을 하도록 하세요."
      CourseD_Dance_Party_11_5: '"모든 오리" 블록을 사용하여 오리들이 함께 춤을 추도록 하세요.'
      CourseD_Dance_Party_11b: 오른쪽 화살표 키를 누를 때 로봇이 "드롭"하도록 하고, 위쪽 화살표 키를 누를 때 “플로스”하게
        하세요. 드롭-플로스를 최대한 빨리해보세요!
      CourseD_Dance_Party_12: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      CourseE_HOC 2018 Level_1: 상자에서 보트를 얻으세요.
      CourseE_HOC 2018 Level_10: 이 바다 유적의 입구에 가세요.
      CourseE_HOC 2018 Level_10_2020: 이 바다 유적의 입구에 가세요.
      CourseE_HOC 2018 Level_11: 바다 유적 안에 프리즈머린으로 도관을 만드세요.
      CourseE_HOC 2018 Level_11_2020: 바다 유적 안에 프리즈머린으로 도관을 만드세요.
      CourseE_HOC 2018 Level_1_2020: 상자에서 보트를 얻으세요.
      CourseE_HOC 2018 Level_2: 부두 끝으로 가세요.
      CourseE_HOC 2018 Level_2_2020: 부두 끝으로 가세요.
      CourseE_HOC 2018 Level_3: 바다를 건너 대구를 잡으세요.
      CourseE_HOC 2018 Level_3_2020: 바다를 건너 대구를 잡으세요.
      CourseE_HOC 2018 Level_4: 루프를 사용해서 돌고래에게 다가가세요.
      CourseE_HOC 2018 Level_4_2020: 루프를 사용해서 돌고래에게 다가가세요.
      CourseE_HOC 2018 Level_5: 난파선을 탐험해서 상자에 도달하세요.
      CourseE_HOC 2018 Level_5_2020: 난파선을 탐험해서 상자에 도달하세요.
      CourseE_HOC 2018 Level_6: 얼음을 지나 항해해서 연어에 도달하세요.
      CourseE_HOC 2018 Level_6_2020: 얼음을 지나 항해해서 연어에 도달하세요.
      CourseE_HOC 2018 Level_7a: 이 수중 유적을 탐색해서 상자를 찾으세요.
      CourseE_HOC 2018 Level_7a_2020: 이 수중 유적을 탐색해서 상자를 찾으세요.
      CourseE_HOC 2018 Level_9b: 산호를 보물에 도달하기 위한 경유지로 사용하세요.
      CourseE_HOC 2018 Level_9b_2020: 산호를 보물에 도달하기 위한 경유지로 사용하세요.
      Crack Random Substitution: 소개
      Crack a Caesar Cipher: 소개
      Dance_2019_01: "‘새로 만들기’ 블록을 작업공간에 드래그하고, ‘설정’ 블록 안에서 연결하세요."
      Dance_2019_02: "‘위쪽 키가 눌리면’ 블록을 사용하면 위쪽 화살표 키를 눌렀을 때 코드가 실행됩니다. 위쪽 화살표 키를 눌렀을
        때 댄서가 손뼉을 치게 만들거나 다른 동작을 시험해 보세요!"
      Dance_2019_03: 춤출 시간입니다! 각기 다른 키를 눌렀을 때 각 댄서가 움직이도록 설정하세요. 좋아하는 동작을 골라 각 댄서에게
        배정하거나 “(Random)”으로 설정해 예측 불가한 댄스를 펼치세요!
      Dance_2019_04: 네 번째 마디 이후에 댄서가 새 동작을 시작하게 하세요.
      Dance_2019_05: 이제 댄서가 6번째 마디 후 새로운 움직임을 시작하도록 하세요!
      Dance_2019_06: 리드 댄서를 가운데 두고 주변으로 백업 댄서들을 배치해 보세요.
      Dance_2019_07: 백업 댄서 그룹의 규모를 변경하세요.
      Dance_2019_08: 한 댄서(또는 그룹 전체) 의 색조를 바꾸어 보세요!
      Dance_2019_09: 이 새 블록들로 창의성을 발휘하세요!
      Dance_2019_10: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      Dance_Party_01: "‘새로 만들기’ 블록을 작업공간에 드래그하고, ‘설정’ 블록 안에서 연결하세요."
      Dance_Party_02: 4번째 마디 후 사슴이 새로운 움직임을 시작하도록 하세요!
      Dance_Party_03: 이제 댄서가 6번째 마디 후 새로운 움직임을 시작하도록 하세요!
      Dance_Party_04: 프로그램 배경 효과를 추가하세요.
      Dance_Party_05: 다른 새로운 블록을 사용하여 댄서가 두 마디마다 움직임을 변경하도록 하세요.
      Dance_Party_06: 고양이와 함께 춤을 추는 'backup\_dancer1'라는 백업 댄서를 만드세요.
      Dance_Party_08: 두 백업 댄서를 모두 같은 크기로 만들 수 있나요?
      Dance_Party_09: 댄서의 색상을 변경하려면 `색조 설정` 블록을 사용하세요.
      Dance_Party_10: "`따라하기 시작` 블록을 사용하여 다른 댄서도 음악에 맞춰 반응하도록 하세요."
      Dance_Party_11: "‘위쪽 누를 때’ 블록을 사용하면 위쪽 화살표를 눌러서 코드를 실행할 수 있습니다. 위쪽 화살표를 누를 때
        댄서가 빠른 움직임을 하도록 하세요."
      Dance_Party_11_5: '"모든 오리" 블록을 사용하여 오리들이 함께 춤을 추도록 하세요.'
      Dance_Party_11b: 오른쪽 화살표 키를 누를 때 로봇이 "드롭"하도록 하고, 위쪽 화살표 키를 누를 때 “플로스”하게 하세요.
        드롭-플로스를 최대한 빨리해보세요!
      Dance_Party_12: 이제 리듬을 타보세요! 자신만의 댄스를 만들어 친구와 공유하세요.
      Dance_Party_extras_alternate_2019: 앞뒤로! (자세한 내용은 “더 보기” 클릭)
      Dance_Party_extras_battle: 댄스 승무원 (자세한 내용은 “자세히”를 클릭)
      Dance_Party_extras_battle_2019: 댄스 승무원 (자세한 내용은 “자세히”를 클릭)
      Dance_Party_extras_every_beat: 분기 노트 (자세한 내용은 “자세히”를 클릭하십시오.)
      Dance_Party_extras_every_beat_2019: 분기 노트 (자세한 내용은 “자세히”를 클릭하십시오.)
      Dance_Party_extras_layout: 의 형성에 가자! (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_layout_2019: 의 형성에 가자! (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_mixed_2019: 더 많은 단추(자세한 내용은 “더 보기” 클릭)
      Dance_Party_extras_on_beat: 저음, 중음, 고음 (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_on_beat_2019: 저음, 중음, 고음 (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_speed: 속도를 높이고 속도를 낮추십시오 (자세한 내용은 “자세히”를 클릭하십시오).
      Dance_Party_extras_speed_2019: 속도를 높이고 속도를 낮추십시오 (자세한 내용은 “자세히”를 클릭하십시오).
      Dance_Party_extras_visible: 그들은 어디로 갔어? (자세한 내용은 “자세히”를 클릭하십시오)
      Dance_Party_extras_visible_2019: 그들은 어디로 갔어? (자세한 내용은 “자세히”를 클릭하십시오)
      Function intro Ryan: "'다리 짓기' 함수를 두 번 사용해서 횃불로 가는 길을 만드세요."
      Function intro Ryan_2019: "'다리 짓기' 함수를 두 번 사용해서 횃불로 가는 길을 만드세요."
      Function intro Ryan_2020: "'다리 짓기' 함수를 두 번 사용해서 횃불로 가는 길을 만드세요."
      HOC 2018 Level_1: 상자에서 보트를 얻으세요.
      HOC 2018 Level_10: 이 바다 유적의 입구에 가세요.
      HOC 2018 Level_11: 바다 유적 안에 프리즈머린으로 도관을 만드세요.
      HOC 2018 Level_12: 여러분만의 수중 환경을 설계하세요. 취향대로 꾸밀 수 있어요!
      HOC 2018 Level_2: 부두 끝으로 가세요.
      HOC 2018 Level_3: 바다를 건너 대구를 잡으세요.
      HOC 2018 Level_4: 루프를 사용해서 돌고래에게 다가가세요.
      HOC 2018 Level_5: 난파선을 탐험해서 상자에 도달하세요.
      HOC 2018 Level_6: 얼음을 지나 항해해서 연어에 도달하세요.
      HOC 2018 Level_7a: 이 수중 유적을 탐색해서 상자를 찾으세요.
      HOC 2018 Level_9b: 산호를 보물에 도달하기 위한 경유지로 사용하세요.
      Infinity_catch: 방향키를 이용해서 엘사("캐릭터 2") 가 안나를 잡아보세요.
      Infinity_finale: 원하는대로 만들고 친구들에게 공유해 보세요.
      Infinity_move_collide: |-
        히로는 "캐릭터 1" 입니다. 히로를 오른쪽에 있는 베이맥스에게 움직이고,
        베이맥스에 닿으면 소리가 나게 해보세요.
      Infinity_move_directions: |-
        베이맥스는 "캐릭터 2" 입니다. 이동 블록들을 추가해서 방향키로 베이맥스를 움직여보세요.
        베이맥스를 다른 캐릭터 2개에 닿게 해보세요.
      Infinity_move_right: 히로는 "캐릭터 1" 입니다. 이동 블록을 사용해서 히로가 오른쪽 베이맥스에 닿게 해보세요.
      Infinity_repeat: |-
        "반복(무한)" 블록을 이용해서 안나가 400 픽셀 만큼 씩
        위, 아래로 움직이도록 해보세요.
      Infinity_say: 말하기 블록을 이용해서 안나가 "안녕 여러분" 이라고 말하도록 해 보세요.
      Infinity_shoot: 베이맥스는 "캐릭터 2" 입니다. 베이맥스가 히로에게 로켓을 던지게 해보세요.
      Infinity_shoot_directions: 히로는 "캐릭터 3" 입니다. 히로가 4개의 캐릭터들에게 각각 발사체를 하나씩 쏘도록 해주세요.
        1초 간격으로 하나씩 쏘도록 해주세요.
      Infinity_touch_score: 안나가 눈송이에 닿으면 점수를 올리도록 만들어보세요. 그 다음에 "실행"을 누르고 안나를 움직여
        눈송이에 닿게 해보세요.
      K-1 Artist Loops 1: 오른쪽으로 4번 이동해서 이 선을 그려보세요.
      K-1 Artist Loops 2: 1개의 반복 구조를 이용해서 같은 선을 그려보세요.
      K-1 Artist Loops 3: 이 블록들을 반복시켜서 6개의 선을 그려보세요.
      K-1 Artist Loops 4: 반복 구조를 사용하면, 이 성의 꼭대기를 그리는데 도움이 될까요?
      K-1 Artist Loops 5: 이 계단들을 그리기 위해서 4번 반복시켜보세요.
      K-1 Artist Loops 6: |-
        2 개의 반복구조가 필요합니다: 하나는 위로 올라가는 것이고,
        다른 하나는 아래로 내려가는 것입니다.
      K-1 Artist Loops 7: 2개의 반복 구조를 이용해서 이 패턴을 완성해보세요.
      K-1 Artist Loops 8: 이번 계단은 더 많습니다.
      K-1 Artist Loops 9: '형성평가: 반복 구조 1개를 사용해서 계단을 그려보세요.'
      K-1 Artist Loops Free Play: 자유 시간입니다. 재미있는 것을 그려보세요!
      K-1 Artist1 1: 1개의 선으로 남자의 발을 그려보세요.
      K-1 Artist1 10: 보물 X 까지 파선(----) 을 그려보세요.
      K-1 Artist1 2: 선 2개로 고양이 수염을 그려보세요!
      K-1 Artist1 3: 왼쪽으로 2개의 선을 그리고, 위쪽으로 2개의 선을 그려 집을 완성해보세요!
      K-1 Artist1 4: 선을 위로/옆으로/아래로 그려 성을 완성해보세요!
      K-1 Artist1 5: 2개의 선을 그어 이꽃의 줄기를 그려보세요.
      K-1 Artist1 6: 점프 블록을 사용해서 그림을 완성해보세요!
      K-1 Artist1 9: 선을 그린 다음에 점프해서 파선을 만들어보세요.
      K-1 Artist2 1: 삼각형 아래에 사각형을 그려보세요.
      K-1 Artist2 2: 집 옆으로 점프해서 사각형을 그려보세요.
      K-1 Artist2 3: 다른 사각형 위에 사각형을 그려보세요.
      K-1 Artist2 4: 사각형을 그려 다리를 완성해 보세요.
      K-1 Artist2 5: 사각형을 그려 다리의 기둥을 완성해보세요.
      K-1 Artist2 6: 두 개의 사각형을 더 그려 완성 시켜보세요!
      K-1 Artist2 Assessment1: '형성평가: 다른 사각형 옆에 사각형을 그려보세요.'
      K-1 Artist2 Free Draw: 아무거나 그려보세요.
      K-1 Artist2_7: 옷장 맨 위 서랍에 사각형을 그려보세요.
      K-1 Bee 1: |-
        제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.
        그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요.
      K-1 Bee 11: 꽃꿀을 3개 모아 꿀을 만들어보세요.
      K-1 Bee 13: 꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!
      K-1 Bee 14: 꽃꿀로 이동해서 꽃꿀을 얻고, 꿀로 이동해서, 꿀을 만들게 해 주세요.
      K-1 Bee 15: 2개의 꿀을 만들기 위해서 2개의 꽃꿀을 모아보세요!
      K-1 Bee 2: |-
        제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.
        그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요.
      K-1 Bee 3: |-
        제가 꿀을 얻을 수 있게 꽃으로 데려다 주세요.
        그리고나서 벌집으로 이동해서, 꿀을 만들 수 있게 해주세요.
      K-1 Bee 4: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 5: 꽃꿀을 3개 모은 후, 1개의 꿀을 만들어보세요!
      K-1 Bee 6: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 7: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee 9: 꽃꿀을 2개 모은 후, 2개의 꿀을 만들어보세요!
      K-1 Bee Loops 1: 꿀을 만들기 위해, 꽃꿀을 모으세요.
      K-1 Bee Loops 10: 모든 꽃꿀을 모아 꿀을 만들어보세요.
      K-1 Bee Loops 11: 모든 꽃꿀과 꿀을 모아보세요.
      K-1 Bee Loops 12: 모든 꽃꿀과 꿀을 모아보세요.
      K-1 Bee Loops 2: 1개의 반복 구조를 사용해서 이동한 후, 꽃꿀을 모으고, 꿀을 만드세요!
      K-1 Bee Loops 3: 3개의 반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들어보세요!
      K-1 Bee Loops 4: 반복(횟수) 구조를 사용해서, 꽃꿀을 모으고 꿀을 만들고, 이동해 보세요!
      K-1 Bee Loops 5: 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모아보세요!
      K-1 Bee Loops 6: 1개의 반복(횟수) 구조를 사용해서, 꽃꿀과 꿀을 모으고, 이동해 보세요!
      K-1 Bee Loops 7: 꽃꿀을 모아 꿀을 만들어보세요!
      K-1 Bee Loops 8: 꽃꿀을 모아 꿀을 만들어보세요!
      K-1 Bee Loops 9: 꽃꿀을 모두 모아 꿀을 만들어 보세요.
      K-1 Bee Puzzle 12: 꽃꿀을 3개 모은 후, 2개의 꿀을 만들어보세요.
      K-1 Building a Foundation Assessment: 3단계 피라미드를 만들어보세요. 한 조각 씩 그려 완성해보세요!
      K-1 Maze 10: 'TNT를 피해 돼지에게 이동시켜주세요! '
      K-1 Maze 11: '길을 따라가서 돼지를 잡게 해주세요. TNT를 피해가지 않으면 깃털들이 날리게 될 거에요! 힌트: TNT는 내
        아래에 있습니다.'
      K-1 Maze 2: 오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!
      K-1 Maze 3: 돼지를 잡을 수 있도록, 저를 아래쪽으로 보내주세요!
      K-1 Maze 4: 돼지를 잡을 수 있도록, 저를 위쪽으로 보내주세요!
      K-1 Maze 5: 오른쪽으로 이동해서 돼지를 잡을 수 있게 해주세요!
      K-1 Maze 6: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 7: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 8: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze 9: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 Maze Loops 1: 저를 돼지에게 이동시켜 주세요.
      K-1 Maze Loops 10: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용해 더 쉽게 해보세요.
      K-1 Maze Loops 11: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다.
      K-1 Maze Loops 12: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하면 쉽습니다.
      K-1 Maze Loops 2: 돼지에게 갈 수 있도록, 반복(횟수) 블록을 사용해보세요.
      K-1 Maze Loops 3: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 5: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 6: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 7: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 반드시 사용하세요.
      K-1 Maze Loops 8: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요.
      K-1 Maze Loops Assessment 1: |-
        지금까지 배웠던 것을 잘 살펴보세요!
        반복(횟수) 구조를 사용해 돼지에게 보내주세요!
      K-1 Maze Loops Assessment 2: 돼지에게 갈 수 있도록 해주세요! 반복(횟수) 구조를 사용하세요.
      K-1 Maze Sequence Assessment 1: "배운 것을 살펴봅시다!\\\r\n한 방향으로 움직이다가 다른 방향으로 움직여서
        돼지에게 갈 수 있도록 해주세요."
      K-1 Maze Sequence Assessment 2: 돼지를 잡을 수 있도록, 한 쪽으로 가다가 다시 다른 쪽으로 움직여주세요!
      K-1 artist 1 level 10: 점프, 그리기 블록을 이용해서 파선(----) 을 그려보세요.
      K-1 artist 1 level 9: 세 개의 선을 이용하여 이것을 그려보세요.
      K-1 maze debug 1: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      K-1 maze debug 10: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 11: "연습해보세요!\\\r\n디버깅해서 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요."
      K-1 maze debug 2: 어떤 것이 빠졌는지 살펴본 후, 블록들을 추가해서 돼지에게 갈 수 있도록 해주세요!
      K-1 maze debug 3: 어떤 것이 빠졌는지 살펴본 후, 블록들을 제거해서 돼지에게 갈 수 있도록 해주세요!
      K-1 maze debug 4: 이 블록들을 실행해보고 고쳐주세요! 제가 생각하기에 다른 방향으로 가고 있는 것 같아요.
      K-1 maze debug 5: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 6: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 7: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 8: 돼지에게 갈 수 있도록 블록들을 추가하거나 다시 배치 해주세요.
      K-1 maze debug 9: 돼지에게 갈 수 있도록, 디버깅하고 블록들을 추가하거나 다시 배치 해주세요.
      MC HOC 2016 Level 10: 이제 자신만의 Minecraft를 만들 수 있습니다! 마음껏 생물들을 생성하고 원하는 일을 지시해보세요.
        즐거운 시간 되세요!
      MC HOC 2016 Level 2-2: 닭이 움직이지 않는 상태입니다. '이동'과 '회전' 블록을 '생성 시' 슬롯에 넣어 움직이게 해보세요.
      MC HOC 2016 Level 3: 닭이 움직이는군요. 잘했습니다! 그러고는 멈췄네요. 게임에서 닭은 끊임없이 움직입니다. '영원히 수행'
        루프를 추가하여 닭들이 계속 움직이게 하세요.
      MC HOC 2016 Level 4: 닭들이 모두 같은 방향으로 움직이니 이상하네요. 게임에서는 무작위 이동을 넣어 현실감을 더할 수 있습니다.
        닭들이 '무작위 회전'을 하도록 해보세요.
      MC HOC 2016 Level 5: 소들이 헤매고 있네요! '영원히 수행'에 '한 걸음 다가가기' 블록을 넣고 루프를 만든 뒤 소들이
        잔디로 다가가게 하세요.
      MC HOC 2016 Level 6: 이제 좀비를 생성하세요. 밤이 되면 3마리의 좀비가 생성되도록 '생성' 블록을 사용하세요. 좀비가
        자신 쪽으로 오게 하세요. 아침까지 살아남으세요.
      MC HOC 2016 Level 8: 양에게 가는 길이 돌벽으로 막혀 있습니다. 다행히 여기에 크리퍼가 하나 있네요. 크리퍼는 닿으면 폭발합니다.
        크리퍼를 사용하여 벽을 폭발시키고 양에게 다가가세요!
      MC HOC 2016 New Drop: Minecraft에서 양은 양털을 떨어뜨립니다. '사용했을 때'에 '떨어뜨리기' 블록을 놓은 뒤,
        양에게 다가가 양이 아이템을 떨어뜨리게 하세요.
      MC HOC 2016 New Spawn: 게임에서 생성이란 월드에 뭔가를 더한다는 뜻입니다. '실행 시' 아래 '생성' 블록을 놓고 게임이
        시작할 때 뭔가가 생성되게 만드세요.
      MC HOC 2016 New Walk: 이제 월드를 탐험해 보죠! 화살표 키로 이동하고, 스페이스 바나 게임판을 터치하여 아이템을 사용할
        수 있습니다. 문을 사용하여 집 안으로 들어가세요.
      MC HOC 2016 SCORE LEVEL: 일부 게임에서는 점수를 얻을 수 있습니다. 철 골렘과 술래잡기를 하세요. 철 골렘을 건드리면
        점수를 얻을 수 있도록  '1점 추가' 블록을 사용하세요. 5점을 획득하여 승리하세요!
      MC HOC 2016 Village Test: 이런! 좀비들에게 포위되었습니다! 철 골렘이 좀비를 쫓아가 공격하는 코드를 짜세요.
      MC_HOC_2017_01_RETRY: 'Agent를 감압판 위로 움직인 다음 ''실행''을 누르고 방향키를 사용해 플레이어를 집 밖으로
        움직여 상자를 집게 하세요. '
      MC_HOC_2017_01_RETRY_2019: 'Agent를 감압판 위로 움직인 다음 ''실행''을 누르고 방향키를 사용해 플레이어를
        집 밖으로 움직여 상자를 집게 하세요. '
      MC_HOC_2017_01_RETRY_2020: 'Agent를 감압판 위로 움직인 다음 ''실행''을 누르고 방향키를 사용해 플레이어를
        집 밖으로 움직여 상자를 집게 하세요. '
      MC_HOC_2017_02_Cole: 'Agent를 감압판 위로 움직여 {currentPlayerName}이(가) 지도가 있는 곳으로 갈
        수 있게 해주세요. '
      MC_HOC_2017_02_Cole_2019: 'Agent를 감압판 위로 움직여 {currentPlayerName}이(가) 지도가 있는
        곳으로 갈 수 있게 해주세요. '
      MC_HOC_2017_02_Cole_2020: 'Agent를 감압판 위로 움직여 {currentPlayerName}이(가) 지도가 있는
        곳으로 갈 수 있게 해주세요. '
      MC_HOC_2017_03_Cole: '코드를 사용해 Agent가 문을 열게 하세요. '
      MC_HOC_2017_03_Cole_2019: '코드를 사용해 Agent가 문을 열게 하세요. '
      MC_HOC_2017_03_Cole_2020: '코드를 사용해 Agent가 문을 열게 하세요. '
      MC_HOC_2017_04POINT5_RYAN: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04POINT5_RYAN_2019: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04POINT5_RYAN_2020: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_Cole: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_Cole_2019: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_04_Cole_2020: Agent를 감압판 위로 움직이세요.
      MC_HOC_2017_05_Cole: 플레이어를 삽 쪽으로 움직이세요.
      MC_HOC_2017_05_Cole_2019: 플레이어를 삽 쪽으로 움직이세요.
      MC_HOC_2017_05_Cole_2020: 플레이어를 삽 쪽으로 움직이세요.
      MC_HOC_2017_06_Cole: 코드의 잘못된 부분을 수정해서 Agent가 강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_06_Cole_2019: 코드의 잘못된 부분을 수정해서 Agent가 강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_06_Cole_2020: 코드의 잘못된 부분을 수정해서 Agent가 강을 건너는 다리를 짓게 하세요.
      MC_HOC_2017_07_Cole: 얼음을 제거하고 {currentPlayerName}이(가) 광물 수레로 갈 수 있게 도와주세요.
      MC_HOC_2017_07_Cole_2019: 얼음을 제거하고 {currentPlayerName}이(가) 광물 수레로 갈 수 있게 도와주세요.
      MC_HOC_2017_07_Cole_2020: 얼음을 제거하고 {currentPlayerName}이(가) 광물 수레로 갈 수 있게 도와주세요.
      MC_HOC_2017_10_RETRY: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_RETRY_2019: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_10_RETRY_2020: 광물 수레를 완성할 수 있는 함수를 만드세요.
      MC_HOC_2017_Ali: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_Ali_2019: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_Ali_2020: 함수를 사용해 용암을 건널 방법을 찾으세요.
      MC_HOC_2017_FP20x20: "**무료플레이:** 스스로 직접 탐험해보세요!"
      MC_HOC_2017_FP20x20_2019: "**무료플레이:** 스스로 직접 탐험해보세요!"
      MC_HOC_2017_FP20x20_2020: "**무료플레이:** 스스로 직접 탐험해보세요!"
      NEW Course 4 Artist Functions 1: 반복 구조를 이용해서 한 변의 길이가 100 픽셀인 사각형을 그려보세요.
      NEW Course 4 Artist Functions 11: |-
        한 줄에 6개의 사각형을 그리는 "사각형 한 줄 그리기" 함수를 만들어 보세요.
        이전에 만들어 보았던 "20 크기 사각형 그리기" 함수를 이용해서 만들면 됩니다.
      NEW Course 4 Artist Functions 12: |-
        이 패턴을 그리기 위해서, 마지막 퍼즐에서 사용했던
        "사각형 한 줄 그리기" 함수를 사용해보세요.
      NEW Course 4 Artist Functions 13: '"사각형 한 줄 그리기" 함수를 이용해서 별 모양을 그려보세요.  '
      NEW Course 4 Artist Functions 14: '자유 시간입니다! '
      NEW Course 4 Artist Functions 3: "여기에 \"함수\"라는 새로운 블록이 있습니다. \"수정하기\"를 눌러 한
        변의 길이가 100 픽셀인 사각형을 그릴 수 있도록 코드를 채워보세요. \\\r\n\\\r\n함수를 모두 수정하면 \"닫기\"를 누른
        후 프로그램을 실행시켜보세요."
      NEW Course 4 Artist Functions 4: '"사각형 그리기" 함수를 사용해서 이 패턴을 그려보세요.'
      NEW Course 4 Artist Functions 7: "함수 블록들을 사용하는 것이 어려운가요? 이 함수를 수정해서 200 픽셀 크기가
        되도록 바꿔보세요.\n\"사각형 그리기\" 함수에서 \"수정하기\"를 눌러서 고치면 됩니다.\n함수 수정을 끝내려면 \"닫기\"를 누르면
        됩니다. "
      NEW Course 4 Artist Functions 8: |-
        "삼각형 그리기"라는 새로운 함수를 만들었습니다.
        한 변의 길이가 100 픽셀인 삼각형을 그릴 수 있도록 함수 정의를 수정해보세요.
      NEW Course 4 Artist Functions 9: 블록 1개 만 더 추가해서 이 문제를 풀어보세요.
      NEW Course 4 Artist Params 1: |-
        한 변의 길이가 50 픽셀 크기인 사각형을 만들 수 있도록
        이 함수를 만들어 보세요. "수정"을 눌러 시작하세요.
      NEW Course 4 Artist Params 10: '"육각형 그리기" 함수 블록을 길이 변수값을 바꿀 수 있도록 만들어보세요. 이
        정육각형의 한 변의 길이는 100 픽셀입니다. '
      NEW Course 4 Artist Params 11: |-
        이 모양을 어떻게 그릴지 생각할 수 있나요?
        "한 변의 길이" 변수를 사용하기 위해 함수를 수정하세요.
      NEW Course 4 Artist Params 12: |-
        이 그림을 완성할 수 있겠나요?
        모든 모양의 한 변의 길이는 100 픽셀입니다.
      NEW Course 4 Artist Params 12a: |-
        이번 이미지는 이전 것과 비슷합니다.
        함수에 "~동안 반복" 을 이용해 이 디자인을 만들어보세요.
      NEW Course 4 Artist Params 13: "\"다각형 그리기\" 함수를 수정해 보세요. \"변의 길이\" 매개 변수가 있습니다.
        이제 \"길이\"를 매개 변수로 추가해 보세요. \\\r\n각 모양의 둘레의 길이는 200 픽셀입니다. 다각형에서 면의 개수가 달라질
        때, 같은 크기로 만드는 공식 기억하고 있으시죠?"
      NEW Course 4 Artist Params 14: |-
        "나선 그리기"를
        "길이"와 "한 변의 길이" 변수를 이용할 수 있도록 수정하고, 이 모양을 다시 만들어보세요.
      NEW Course 4 Artist Params 15: |-
        자유 플레이: 여기 여러분들이 작성한 함수들과 가지고 놀 수 있는 몇 개의 함수가 더 있습니다.
        멋진 것들을 그려보세요! 선 그리기로 얼마나 많은 것들을 그릴 수 있는지 해보세요.
      NEW Course 4 Artist Params 3: "이제 한 줄에 5개의 삼각형을 그리는 함수를 사용해보세요.\n각 삼각형들은 30
        픽셀씩 떨어져 있습니다.\\\r"
      NEW Course 4 Artist Params 4: |-
        이 함수 블록들이 뭔가 다르다는 것을 알아차리셨나요?
        "실행"을 눌러 어떤 일이 일어나나 살펴보세요.
      NEW Course 4 Artist Params 5: "입력 블록의 길이 매개변수에 입력 되어있는??? 를 채워보세요.\n육각형의 한 변의
        길이는 100 픽셀입니다. "
      NEW Course 4 Artist Params 6: |-
        이런 모양들을 그려내기 위해서, "???" 로 입력되어있는 "길이" 매개 변수의 정확한 값을 채워보세요.
        사각형과 삼각형의 각 변의 길이는 100 픽셀이고 육각형의 한 변의 길이는 75 픽셀입니다.
      NEW Course 4 Artist Params 7: 이 그림을 완성시켜보세요. 각 삼각형의 변의 길이는 바로 이전 것보다 25 픽셀만큼
        더 깁니다. 첫 번째 삼각형의 한 변의 길이는 25 픽셀입니다.
      NEW Course 4 Artist Params 8: |-
        이 삼각형 함수의 코드는 문제가 있습니다.
        함수를 고쳐서 25, 50, 75 길이의 삼각형을 그려보세요.
      NEW Course 4 Artist Params 9: |-
        "사각형 그리기" 함수의 정의를 "수정"해서 매개 변수를 추가해보세요.
        삼각형 그리기와 마찬가지로 길이를 매개 변수로 사용하면 됩니다.
        이번에는 3개의 사각형들을 그리면 됩니다: 한 변의 길이가 25, 50, 75 픽셀이고,
        100 픽셀 만큼씩 떨어져 있습니다.
      NEW Course 4 Artist Params inspire: "멋진 자유 플레이: 여러분들은 이런 패턴을 만들기 위해 필요한 모든 것들을
        배웠습니다.\n이 그림이 멋지다고 생각하면, 비슷하게 다른 것을 만들어보세요. 아니면, 만들고 싶은 것을\n만들어보세요.\\\r\n\\\r\n이런
        멋진 패턴이 어떻게 만들어졌는지 궁금한가요? "
      NEW Course 4 Artist Vars 12: |-
        자 이제, 이전 레벨에서의 알고리즘을 다시 만든 후,
        한 변의 길이가 150인 오각형을 만들어보세요.
      NEW Course 4 Artist Vars 2: '"길이 설정" 블록과 "\_번 반복하기" 블록에 숫자 블록을 넣어, 50 픽셀 크기의
        삼각형들을 만들어보세요.'
      NEW Course 4 Artist Vars 4: "다시 한 번 해보세요. \\\r\n\\\r\n육각형들로 이런 멋진 디자인을 만들기 위해
        \"길이\" 변수값을 60으로 설정해 보세요."
      NEW Course 4 Artist Vars 6: "\"길이\" 변수의 값을 정확히 입력하고 이 변수를 모든 알맞은 위치에 넣어서 100
        픽셀짜리 오각형 패턴을 그려보세요. \\\r\n\\\r\n길이 변수의 값을 한 번만 입력하면, 그 값을 계속 사용할 수 있다는 것을
        알 수 있습니다."
      NEW Course 4 Bee For Loops 1: 각 꽃에서 꽃꿀을 모으기 위해서 반복 구조를 사용하세요.
      NEW Course 4 Bee For Loops 10a: |-
        자 이제 도전해보세요! 반복에 대해 배웠던 것들을 이용해서, 이 문제를 풀어보세요.
        기억하세요: 어떤 단계들로 진행되는지 이해하기 위해서, 여러 번 실행시켜 봐야 할 거예요.
      NEW Course 4 Bee For Loops 2: |-
        꿀벌이 모든 꽃꿀을 모울 수 있도록 할 수 있는 코드를 추가해보세요.
        이 퍼즐을 해결하기 위해서, 코드가 얼마나 많이 필요한지 잘 살펴보세요!
        (다음 퍼즐에서는 더 간단한 방법을 배우게 될 것입니다.)
      NEW Course 4 Bee For Loops 3: "아! \"반복\" 구조는 더 쉽게 할 수 있어요! 필요한 모든 코드는 여기있으니,
        어떻게 사용할지 살펴본 후에\n\"실행\"을 눌러 결과를 살펴보세요. "
      NEW Course 4 Bee For Loops 4: '"반복(~인 동안)" 구조에서 ??? 부분에, 꿀벌이 모아야 하는 최대 꽃꿀의 양을
        입력해 보세요. '
      NEW Course 4 Bee For Loops 4 4: "이제 \"카운터\" 만큼 앞으로 이동시켜야 합니다.\n그 다음에 \"카운터\"
        만큼 꽃꿀을 얻으면 됩니다. 이 문제를 해결하기 위해서 \n2 개의 \"반복\" 블록을 사용하세요."
      NEW Course 4 Bee For Loops 5: |-
        카운트다운하는데 "반복(~인 동안)" 구조를 사용할 수도 있습니다.
        이 꽃꿀을 5 부터 1 까지, 1씩 카운트다운하면서 모아보세요.
      NEW Course 4 Bee For Loops 6: |-
        반복 함수의 마지막에 있는 수는 "증가값"이라고 부릅니다.
        반복 구조가 한 번 실행된 후에, 카운터에는 증가값만큼 더해집니다. 2만큼 증가시켜서
        이 꽃들로부터 모아보세요.
      NEW Course 4 Bee For Loops 7: "자 이제, \"카운터\" 변수를 수학 블록과 함께 사용해보세요!\n어떻게하면 최대한
        적은 블록들로, 이 정원을 돌아다닐 수 있을까요?\n이렇게 3, 6, 9, 12, 15 만큼씩 꽃꿀을 모으려면 어떻게 해야 할까요?\n\"카운터\"
        변수를 사용하면 됩니다!\\\r\n\\\r\n기억하시죠?: 반복 구조가 실행되면, 한 번 실행 하고 난 후에 \"카운터\"\n변수의
        값에 그 만큼 더합니다."
      NEW Course 4 Bee For Loops 8: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야
        할까요?
      NEW Course 4 Bee For Loops 9: |-
        반복 카운팅이 줄어드는 과정에서는 반복이 한 번씩 끝날 때마다 카운터 변수의 값이 줄어듭니다.
        15, 12, 9, 6, 3의 꽃꿀을 모으기 위해서는 카운터 변수에 더할 값이 어떻게 되어야 할까요?
      NEW Course 4 Play Lab Params 11: "자유 시간입니다!\n도구 상자에 있는 모든 블록들을 이용해보세요. "
      New Gumball Project: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Ice Age Project: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Infinity Project: 원하는대로 만들고 친구들에게 공유해 보세요.
      New Minecraft Hero Project: "**무료플레이:** 스스로 직접 탐험해보세요!"
      New Sports Project: |-
        게임을 직접 만들어보세요. 모든 것을 마음대로 할 수 있습니다: 모든 규칙들을 바꿀 수 있고, 여러
         가지 스포츠게임들을 창의적으로 섞을 수 있습니다! 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      Overworld Avoid Monsters: 크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요.
      Overworld Avoid Monsters_2019: 크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요.
      Overworld Avoid Monsters_2020: 크리퍼와 마주치는 건 좋지 않습니다. 크리퍼를 조심스럽게 지나쳐서 안전한 집에 도달하세요.
      Overworld Chop Tree: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록 부수기"
        명령을 이용해 나무를 베세요.
      Overworld Chop Tree_2019: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록
        부수기" 명령을 이용해 나무를 베세요.
      Overworld Chop Tree_2020: 나무는 매우 중요한 자원입니다. 나무로 많은 것들을 만들 수 있지요. 나무로 걸어간 후 "블록
        부수기" 명령을 이용해 나무를 베세요.
      Overworld Chop Trees: 해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를 모두 베세요.
      Overworld Chop Trees_2019: 해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를
        모두 베세요.
      Overworld Chop Trees_2020: 해가 지기 전에 집을 지어야 해요. 집을 지으려면 나무가 많이 필요하죠. 나무 3그루를
        모두 베세요.
      Overworld Free Play 20x20: 축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고 건설하며
        무언가 독특한 것을 만들어보세요.
      Overworld Free Play 20x20_2019: 축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고
        건설하며 무언가 독특한 것을 만들어보세요.
      Overworld Free Play 20x20_2020: 축하해요! 모든 퍼즐을 완료했어요! 이제 여태까지 배운 모든 것을 이용해서 채굴하고
        건설하며 무언가 독특한 것을 만들어보세요.
      Overworld House Frame Chosen: |-
        여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.
        "repeat" 명령은 편리하게 사용할 수 있습니다.
      Overworld House Frame Chosen_2019: |-
        여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.
        "repeat" 명령은 편리하게 사용할 수 있습니다.
      Overworld House Frame Chosen_2020: |-
        여러분이 원하는 재료를 이용해서, 집의 나머지 부분을 완성해보세요.
        "repeat" 명령은 편리하게 사용할 수 있습니다.
      Overworld Move to Sheep: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Move to Sheep_2019: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Move to Sheep_2020: 두 번째 "앞으로 이동" 명령을 더해서 양에게 도달하세요.
      Overworld Place Wall: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에 놓아서 집의
        첫 번째 부분을 지어보세요.
      Overworld Place Wall_2019: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에
        놓아서 집의 첫 번째 부분을 지어보세요.
      Overworld Place Wall_2020: 모든 집은 벽을 짓는 것부터 시작합니다. "놓기"와 "앞으로 이동" 명령을 반복문 안에
        놓아서 집의 첫 번째 부분을 지어보세요.
      Overworld Plant Crops: 미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요.
      Overworld Plant Crops_2019: 미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요.
      Overworld Plant Crops_2020: 미리 계획을 짜는 것이 좋습니다. 물의 양쪽에 작물을 심으면 나중에 배가 고프지 않아요.
      Overworld Powered Minecart: 잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서 여러분의
        집 문까지 레일을 놓으세요.
      Overworld Powered Minecart_2019: 잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서
        여러분의 집 문까지 레일을 놓으세요.
      Overworld Powered Minecart_2020: 잘했어요! 많은 자원을 모으고 안정적인 집을 지었어요. 이제 지도 가장자리에서
        여러분의 집 문까지 레일을 놓으세요.
      Overworld Shear Sheep: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Overworld Shear Sheep_2019: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Overworld Shear Sheep_2020: 양털 깎기 시간이에요! 두 마리 양에게서 양털을 채집하려면, "털 깎기" 명령을 사용하세요.
      Standalone_Artist_1: |-
        화가 퍼즐에 오신 것을 환영합니다.
        처음으로 오른쪽으로 이동 블럭과 앞으로 이동 블럭을 이용해서 간단한 사각형을 만들어 보겠습니다.
        한 변의 길이는 정확히 100 픽셀이 되어야 합니다.
      Standalone_Artist_2: 120도, 60도의 각과 150 픽셀 만큼의 길이로 이 다이아몬드를 그려보세요.
      Standalone_Artist_3: 100 픽셀 길이와 60도 회전으로 이 육각형을 그려 줄 수 있나요?
      Standalone_Artist_4: 이제 반복(loop) 이라는 새로운 블럭을 이용할 수 있습니다. 이 블럭은 원하는 명령어들을 반복시켜줄
        것입니다. 이 명령어들을 6번 반복하면 어떻게 될까요?
      Standalone_Artist_5: 이 다이아몬드 모양을 이용해서 꽃을 그리려면 반복(loop) 을 몇 번 시켜야 할까요?
      Standalone_Artist_5.5: '다이아몬드 모양을 반복 블럭 안에 넣어서 회전시키면서 아주 쉽게 코드를 만드는 방법을 잘 보세요.
        순서대로 실행시켜야하는 명령어들을 12번 반복시킬 수 있습니다. 힌트: 다이아몬드 반복(loop) 를 30도만큼 회전시키면 됩니다.
        다이아몬드를 또 그릴 필요가 없습니다.'
      Standalone_Artist_6: '이 6각형 코드를 반복적으로 이용해서 디자인 해보세요. 한 번 실행할 때마다 몇 도를 회전시켜야
        할까요? 힌트: 원의 각도를 반복시키려고 하는 횟수로 나누면 됩니다.'
      Standalone_Artist_7: '함수는 한번 만들어둔 것을 다시 사용하는 프로그래밍 방법입니다. 이 함수는 꽃을 그려주는데, 이
        함수를 이용하면 원하는 만큼의 꽃을 편리하게 그릴 수 있습니다. 이 함수와 점프 블록을 이용해서 이 꽃들을 그려주세요. 힌트: 꽃들은
        150 픽셀만큼 떨어져 있습니다.'
      Standalone_Artist_8: '"모양 그리기" 라는 이름의 6각형 그리기 함수 블럭이 있습니다. 일단 먼저 코드를 실행시켜 어떻게
        실행되는지 살펴보고, 실험해 보세요. 사각형, 삼각형, 8각형을 그릴 수 있겠어요?'
      Standalone_Artist_9: 자 이제 계속해서, 원하는 그림을 마음껏 그려보세요! 원하는 것이 어떤 것이든지, 빈 함수를 이용해
        마음대로 만들고 사용할 수 있습니다.
      Underground Avoiding Lava: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약)
        명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground Avoiding Lava_2019: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약)
        명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground Avoiding Lava_2020: 이 블록들 아래에 용암이 숨어있습니다. 앞으로 이동하기 전에 덮어야 해요. "if"(만약)
        명령은 여기서 유용할 거에요. 올바른 곳에 "앞으로 이동" 명령을 더해서 이 블록을 채굴하세요.
      Underground If Statements: 퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로 떨어지지는
        마세요. "if"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요.
      Underground If Statements_2019: 퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로
        떨어지지는 마세요. "if"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요.
      Underground If Statements_2020: 퍼즐이 점점 더 어려워지고 있어요. 레드스톤 3개를 채굴하세요. 하지만 용암으로
        떨어지지는 마세요. "if"(만약) 명령을 사용해서 발견한 용암 위에 조약돌을 놓으세요.
      Underground Iron: 녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철 블록을 2개
        이상 채굴하세요.
      Underground Iron_2019: 녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철
        블록을 2개 이상 채굴하세요.
      Underground Iron_2020: 녹은 용암 속으로 걸어 들어가는 건 좋은 생각이 아니에요. 조약돌을 놓아서 다리를 만든 후 철
        블록을 2개 이상 채굴하세요.
      Underground Mining Coal: 가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요. 횃불을 2개
        이상 놓고 석탄을 2개 이상 채굴하세요.
      Underground Mining Coal_2019: 가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요.
        횃불을 2개 이상 놓고 석탄을 2개 이상 채굴하세요.
      Underground Mining Coal_2020: 가장 귀중한 자원은 땅속에서 찾을 수 있어요. 하지만, 땅속은 어두울 수 있지요.
        횃불을 2개 이상 놓고 석탄을 2개 이상 채굴하세요.
      bounce_1: '"왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를 사용해 목표 지점까지
        이동시켜 보세요.'
      bounce_10: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때", "공이
        라켓을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수 있는지
        해보세요.
      bounce_10_basketball: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을
        때", "공이 손을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을
        수 있는지 해보세요.
      bounce_10_sports: 이번 목표지점은 위쪽입니다! "내 점수 올리기", "상대 점수 올리기" 블록을 붙여, "공이 들어갔을 때",
        "공이 손을 벗어났을 때" 블록으로 게임을 만들어 보세요. 상대방 점수가 내 점수의 2배가 되기 전까지 얼마나 많은 점수를 얻을 수
        있는지 해보세요.
      bounce_11: '"프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 만들기" 블럭을 한 군데 이상 붙여야
        합니다. 그리고 배경도 바꾸어 보고, 상대방 케릭터의 점수가 2배가 되지 않도록 케릭터의 스피드를 바꿔 보세요.'
      bounce_11_basketball: 이제 "프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 넣기" 블럭을
        한 군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 캐릭터의 점수가 2배가 되지 않도록 손의 스피드를 바꿔 보세요.
      bounce_11_sports: 이제 "프로그램을 실행하면" 블럭에 다른 블럭들을 붙일 수 있습니다. 새로운 "새 공 넣기" 블럭을 한
        군데 이상 붙여야 합니다. 그리고 배경도 바꾸어 보고, 상대방 캐릭터의 점수가 2배가 되지 않도록 손의 스피드를 바꿔 보세요.
      bounce_12: 바운스 게임을 직접 만들어보세요. 화면에 보이는 것들과 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을
        친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_12_basketball: 농구 게임을 직접 만들어보세요. 모든 규칙을 마음대로 바꿀 수 있습니다. 게임을 완성하면 만든 게임을
        친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_12_sports: |-
        게임을 직접 만들어보세요. 모든 것을 마음대로 할 수 있습니다: 모든 규칙들을 바꿀 수 있고, 여러
         가지 스포츠게임들을 창의적으로 섞을 수 있습니다! 게임을 완성하면 만든 게임을 친구들이 스마트폰에서 직접해 볼 수 있도록 마침을 누르세요.
      bounce_1_basketball: '"왼쪽 방향키가 눌렸을 때" 블록에 다른 블록을 붙인 후, "실행하기"를 눌러 보세요. 왼쪽 방향키를
        사용해 목표 지점까지 손을 이동시켜 보세요.'
      bounce_1_sports: 깃발을 잡으세요! "왼쪽 방향키를 누르면" 블록에 다른 블록을 붙이고, "실행하기"를 눌러 깃발로 이동시키세요.
      bounce_2: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의 목표 지점까지 이동시켜
        보세요.'
      bounce_2_basketball: '"오른쪽 방향키가 눌렸을 때", "왼쪽 방향키가 눌렸을 때" 블럭에 다른 블럭을 붙인 후, 양쪽의
        목표 지점까지 손을 이동시켜 보세요.'
      bounce_2_sports: 이번에는 두 개의 깃발이 있습니다! "왼쪽 방향키를 누르면" 블록과 "오른쪽 방향키를 누르면" 블록에 다른
        블록을 붙여 두 가지 방향으로 움직일 수 있도록 해보세요.
      bounce_3: '"위쪽 방향키가 눌렸을 때" 을 비슷하게 사용해 보세요. 위쪽 목표 지점까지 이동시켜 보세요.'
      bounce_4: 이번에는 4개의 블럭을 사용해야 합니다. 퍼즐을 해결하기 위해서 4개의 목표지점으로 이동시켜 보세요.
      bounce_5: 공을 아래로 내려보낼 것입니다. "라켓에 닿으면" 블럭을 붙여 공이 목표지점에 도착하게 만들어 보세요.
      bounce_5_basketball: 손을 향해 공을 아래로 내려보낼 것입니다. "공이 손에 닿으면" 블럭을 붙여 공이 깃발에 닿는 것을
        확인할 수 있게 해보세요.
      bounce_5_sports: 하키퍽이 플레이어를 향해 아래쪽으로 날라갑니다! "공이 플레이어에 맞으면" 블록을 붙여 깃발을 맞춰보세요.
      bounce_6: 이번 목표지점은 가장 위쪽 입니다. "공이 부딪치면"블럭을 사용해 퍼즐을 해결해 보세요.
      bounce_6_basketball: 이제 깃발이 가장 위에 있습니다. 이 퍼즐을 풀기 위해서는 "공이 닿으면" 블록의 양쪽에 블록들을
        붙여야 합니다.
      bounce_6_sports: 이제 깃발이 가장 위에 있습니다. 이 퍼즐을 풀기 위해서는 "공이 닿으면" 블록의 양쪽에 블록들을 붙여야
        합니다.
      bounce_7: '"~할 때" 블럭에 블럭들을 붙여보세요. 목표 지점에 닿을 때까지 공이 튀기도록 해보세요. '
      bounce_7_basketball: '"~할 때" 블록에 다른 블록들을 붙여보세요. 깃발에 닿을 때까지 공이 튀기도록 해보세요.'
      bounce_7_sports: '"~할 때" 블록에 다른 블록들을 붙여보세요. 깃발에 닿을 때까지 공이 튀기도록 해보세요.'
      course1_maze_seq_challenge1: 길을 따라 움직여서, 바보 같은 돼지 녀석을 잡아줘. TNT 폭탄을 피하고, 깃털들이
        헝클어지지 않도록 해야 돼!
      course2_artist_prog_challenge1: 동물들을 위한 공간을 그려주세요. 동물들을 위한 공간을 그리는 방법은 많이 있으니
        마음껏 시도해보세요.  가장 적은 블럭을 사용해서 그린다면 6블럭이면 돼요. 하지만 원하는 만큼 블럭을 사용해서 그려도 됩니다!!
      course2_artist_prog_challenge2: 길위에 있는 노란색 선을 그릴  수 있게 도와주세요!
      course2_maze_programming_challenge1: 돼지가 숨어 있어요! 돼지에게 가는 길을 찾을 수 있게 도와줄래요?
      course4_artist_fwp_challenge1: 프로그램을 실행시켜보고 어떤 일이 일어나는지 살펴보세요. 이해할 수 있을까요?(블럭들을
        모두 지우고 완전히 새로 만들어 봐도 됩니다.)
      courseA_maze_seq2: 코드를 수정해서 돼지를 잡을 수 있게 해주세요!
      courseC_PlayLab_events3: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_PlayLab_events3_2018: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_PlayLab_events3_2019: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_PlayLab_events3_2020: 이 강아지를 고양이에게 가도록 프로그램을 짜보세요!
      courseC_artist_prog5: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_artist_prog5_2018: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_artist_prog5_2019: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_artist_prog5_2020: |-
        이 집에는 지붕이 필요합니다! 삼각형을 그려주세요. 힌트:
        세 변의 길이는 모두 같습니다.
      courseC_maze_programming6: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날
        것 같아!
      courseC_maze_programming6_2018: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면,
        화가 날 것 같아!
      courseC_maze_programming6_2019: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면,
        화가 날 것 같아!
      courseC_maze_programming6_2020: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면,
        화가 날 것 같아!
      courseD_artist_binary1: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는 0
        으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      courseD_artist_binary1_2018: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는
        0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      courseD_artist_binary1_2019: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는
        0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      courseD_artist_binary1_2020: "2진은 단지 서로 다른 2가지 만 가지고 정보를 표현하는 방법입니다. \"off\"(또는
        0 으로 표현) 과 \"on\"(또는 1로 표현) 만 사용한다고 해봅시다.\\\r\n\\\r\n주어진 \"픽셀판\"이라는 격자를 사용하면,
        그 위를 이동하다가 특정 사각형들에서만 회전이 가능하게 해서 디자인들을 만들 수 있습니다. 화가가 첫 번째 줄에 2진수 표현으로 \"01010101\"을
        그리도록 해보세요."
      courseD_artist_binary4: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary4_2018: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary4_2019: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary4_2020: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_artist_binary6: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary6_2018: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것
        일까요?
      courseD_artist_binary6_2019: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것
        일까요?
      courseD_artist_binary6_2020: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것
        일까요?
      courseD_artist_binary7: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary7_2018: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary7_2019: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_binary7_2020: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_artist_nestedLoops1: |-
        이번 단계를 시작하기 위해 삼각형을 그리세요.
        (각각의 변은 100픽셀이고, 매번 바깥으로 120도를 돌아야 합니다.)
      courseD_artist_nestedLoops1_2018: |-
        이번 단계를 시작하기 위해 삼각형을 그리세요.
        (각각의 변은 100픽셀이고, 매번 바깥으로 120도를 돌아야 합니다.)
      courseD_artist_nestedLoops1_2019: |-
        이번 단계를 시작하기 위해 삼각형을 그리세요.
        (각각의 변은 100픽셀이고, 매번 바깥으로 120도를 돌아야 합니다.)
      courseD_artist_nestedLoops1_2020: |-
        이번 단계를 시작하기 위해 삼각형을 그리세요.
        (각각의 변은 100픽셀이고, 매번 바깥으로 120도를 돌아야 합니다.)
      courseD_artist_nestedLoops1a: '이번에는 삼각형을 6번 반복해서 그려보세요. '
      courseD_artist_nestedLoops1a_2018: '이번에는 삼각형을 6번 반복해서 그려보세요. '
      courseD_artist_nestedLoops1a_2019: '이번에는 삼각형을 6번 반복해서 그려보세요. '
      courseD_artist_nestedLoops1a_2020: '이번에는 삼각형을 6번 반복해서 그려보세요. '
      courseD_artist_nestedLoops2: 이번에는 가능한 한 가장 적은 개수의 블록을 사용해서 문제를 해결해보세요.
      courseD_artist_nestedLoops2_2018: 이번에는 가능한 한 가장 적은 개수의 블록을 사용해서 문제를 해결해보세요.
      courseD_artist_nestedLoops2_2019: 이번에는 가능한 한 가장 적은 개수의 블록을 사용해서 문제를 해결해보세요.
      courseD_artist_nestedLoops2_2020: 이번에는 가능한 한 가장 적은 개수의 블록을 사용해서 문제를 해결해보세요.
      courseD_artist_nestedLoops3: |-
        건물의 창문을 그리기 위해 새로운 기술을 사용하세요.

        창문은 한 변의 길이가 20픽셀인 정사각형이고, 각 창문은 20픽셀씩 떨어져 있습니다.
      courseD_artist_nestedLoops3_2018: |-
        건물의 창문을 그리기 위해 새로운 기술을 사용하세요.

        창문은 한 변의 길이가 20픽셀인 정사각형이고, 각 창문은 20픽셀씩 떨어져 있습니다.
      courseD_artist_nestedLoops3_2019: |-
        건물의 창문을 그리기 위해 새로운 기술을 사용하세요.

        창문은 한 변의 길이가 20픽셀인 정사각형이고, 각 창문은 20픽셀씩 떨어져 있습니다.
      courseD_artist_nestedLoops3_2020: |-
        건물의 창문을 그리기 위해 새로운 기술을 사용하세요.

        창문은 한 변의 길이가 20픽셀인 정사각형이고, 각 창문은 20픽셀씩 떨어져 있습니다.
      courseD_artist_nestedLoops4: 잘했어요! 원으로 똑같은 일을 해보세요.
      courseD_artist_nestedLoops4_2018: 잘했어요! 원으로 똑같은 일을 해보세요.
      courseD_artist_nestedLoops4_2019: 잘했어요! 원으로 똑같은 일을 해보세요.
      courseD_artist_nestedLoops4_2020: 잘했어요! 원으로 똑같은 일을 해보세요.
      courseD_artist_nestedLoops5: 만약 원 사이에서 90도 돌면 어떻게 될까요?
      courseD_artist_nestedLoops5_2018: 만약 원 사이에서 90도 돌면 어떻게 될까요?
      courseD_artist_nestedLoops5_2019: 만약 원 사이에서 90도 돌면 어떻게 될까요?
      courseD_artist_nestedLoops5_2020: 만약 원 사이에서 90도 돌면 어떻게 될까요?
      courseD_artist_nestedLoops7: 이 그림을 그리기 위해서 지금까지 배운 것들을 사용해보세요.
      courseD_artist_nestedLoops7_2018: 이 그림을 그리기 위해서 지금까지 배운 것들을 사용해보세요.
      courseD_artist_nestedLoops7_2019: 이 그림을 그리기 위해서 지금까지 배운 것들을 사용해보세요.
      courseD_artist_nestedLoops7_2020: 이 그림을 그리기 위해서 지금까지 배운 것들을 사용해보세요.
      courseD_artist_nestedLoopsFP: 이제 당신 차례입니다. 지금까지 배운 것들을 이용해 좋아하는 것을 그려보세요!
      courseD_artist_nestedLoopsFP_2018: 이제 당신 차례입니다. 지금까지 배운 것들을 이용해 좋아하는 것을 그려보세요!
      courseD_artist_nestedLoopsFP_2019: 이제 당신 차례입니다. 지금까지 배운 것들을 이용해 좋아하는 것을 그려보세요!
      courseD_artist_nestedLoopsFP_2020: 이제 당신 차례입니다. 지금까지 배운 것들을 이용해 좋아하는 것을 그려보세요!
      courseD_autorun_binary4_2019: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      courseD_autorun_binary6_2019: 이 이미지를 그리기 위해 11번을 반복 시킬 수 있는 6자리 2진 문자열은 어떤 것
        일까요?
      courseD_autorun_binary7_2019: 이 이미지를 그리기 위해 반복하는 것들 중에서 가장 짧은 2진 문자열은 어떤 것 일까요?
      courseD_bee_nestedLoops8: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2018: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2019: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_bee_nestedLoops8_2020: "각 꽃의 꽃꿀들을 모두 모아서\n벌집에서 꿀을 만들어 보세요. \\\r\n\\\r\n중첩
        반복을 사용하면 됩니다. "
      courseD_maze_nestedLoops4: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복 실행
        구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2018: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복
        실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2019: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복
        실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops4_2020: "블록들을 최소한으로 사용해서 해바라기로 이동시켜주세요!\\\r\n\\\r\n반복
        실행 구조 안에 1개의 반복 실행 구조를 넣어서 필요한 코드량을 줄여주세요."
      courseD_maze_nestedLoops6: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복 실행 구조를
        사용해서 해바라기로 이동시켜주세요."
      courseD_maze_nestedLoops6_2018: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복
        실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseD_maze_nestedLoops6_2019: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복
        실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseD_maze_nestedLoops6_2020: "다음 레벨로 가기 위해서 이번 레벨을 해결해 봅시다! \\\r\n최소한의 반복
        실행 구조를 사용해서 해바라기로 이동시켜주세요."
      courseD_maze_ramp6: 나쁜 돼지를 잡을 수 있게 도와줘, 침착하게 생각하면 돼. 돼지를 못 잡으면, 화가 날 것 같아!
      courseD_maze_until1: 화난 새를 돼지에게 이동시켜주세요!
      courseD_maze_until1_2018: 화난 새를 돼지에게 이동시켜주세요!
      courseD_maze_until1_2019: 화난 새를 돼지에게 이동시켜주세요!
      courseD_maze_until1_2020: 화난 새를 돼지에게 이동시켜주세요!
      courseE_artist_functions1: "\"나 화가. 좀비... 그리기 좋아..!\" \\\r\n\\\r\n사각형 안경을 그릴
        수 있게 도와주세요. \\\r\n\\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      courseE_artist_functions1_copy: "\"나 화가. 좀비... 그리기 좋아..!\" \\\r\n\\\r\n사각형 안경을
        그릴 수 있게 도와주세요. \\\r\n\\\r\n안경 알 사이의 다리는 안경 한 변의 길이보다 25 픽셀 만큼 작습니다."
      courseE_bee_concept1: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseE_bee_concept1_2018: "각 꽃에서 꽃꿀을 모두 모아주세요.\n반복을 중첩해서 사용하면 됩니다. "
      courseE_bee_functions1: 각 꽃에서 꽃꿀을 모두 모아주세요.
      courseE_bee_functions3: "함수들은 어떤 작업을 수행하는데 블럭들의 집합이라고 볼 수 있습니다.  \\\r\n\\\r\n\"5번
        모으기\" 함수를 이용해서 한 번에 5개의 꽃꿀을 모아보세요."
      courseE_bee_functions4: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는
        함수입니다.  \\\r\n\\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      courseF_artist_for7: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for7_2018: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for7_2019: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for7_2020: 이 레벨을 완료하기 위해서 지난 번 코드에서 3가지만 수정하면 됩니다.
      courseF_artist_for_challenge1: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge1_2018: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge1_2019: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge1_2020: 어떻게 하면 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2_2018: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2_2019: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_artist_for_challenge2_2020: 어떻게 하면, 반복 구조 하나를 사용해서 이 그림을 다시 그려낼 수 있을까요?
      courseF_bee_for8: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for8_2018: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for8_2019: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for8_2020: 잘 했어요! 꽃꿀 모으기를 3, 6, 9, 12, 15 로 증가시키려면 어떻게 해야 할까요?
      courseF_bee_for_challenge2: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2018: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2019: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_for_challenge2_2020: 가능한 적은 개수의 블록을 사용하여 이 퍼즐을 풀어보세요.
      courseF_bee_functions4: "\"움직여서 꽃꿀 얻기\" 함수는 꿀벌이 회전하고, 꽃꿀을 얻은 후 원래의 위치로 돌아오도록하는
        함수입니다.  \\\r\n\\\r\n이 함수를 사용해서 모든 꽃꿀을 모아보세요."
      flappy_1: '"클릭되면"블럭을 붙인 후 "실행하기"를 누르세요. 플래피 버드가 목표 지점에 도착할 수 있도록 화면을 클릭하거나 터치하면
        됩니다.'
      flappy_11: 자신만의 플래피 게임을 만들어보세요. 화면에 보이는 것들과 규칙들, 떨어지는 중력마저도 마음대로 만들어보세요. 친구들이
        스마트폰에서 해볼 수 있도록 공유해 보세요.
      flappy_2: 바닥 땅을 만들었습니다. "땅에 떨어지면" 블럭에 다른 블럭을 붙여보세요. 플래피가 땅에 닿으면 게임이 끝나도록 해야합니다.
      flappy_3: '"실행하면" 블럭은 프로그램을 실행시켰을 때 코드들이 동작하게 합니다. 목표 지점에 도착하기 위한 레벨, 스피드, 날개
        펄럭이기를 설정해 보세요.'
      flappy_4: 여러가지 물체에 부딪치지 않도록 플래피 버드를 날려 목적지에 도착하도록 해보세요. "물체에 부딪치면" 블럭을 사용하고,
        첫번째 파이프로 들어가면 "게임 끝"이 나오도록 해보세요.
      flappy_5: 스코어보드를 만들고 플래피 버드가 물체를 피해 지나가면 점수가 올라가게 해보세요. "물체를 피하면" 블럭을 사용하고,
        첫 번째 파이프에 도착하면 점수가 올라가게 해보세요.
      flappy_6: 플래피 버드의 펄럭이면 점수가 어떻게 올라가는지 확인해보세요.
      flappy_7: 자 이번에는 "실행하면" 블럭에 다른 블럭을 붙여 배경 그림을 바꾸어보세요.
      flappy_8: 화면에 보이는 것들은 언제 든지 바꿀 수 있습니다. 물체를 피해 통과하는 것과 같은 이벤트들이 발생했을 때 랜덤 배경으로
        바뀌도록 해보세요.
      flappy_9: 사물들을 뒤섞으려면, 장애물에 부딪혔을 때 게임을 끝내는 대신 점수를 0으로 설정하세요.
      frozen circle: 원은 특별한 도형입니다. 원을 그리기 위해서 물음표 부분에 어떤 수가 들어가야 할까요?
      frozen circle function: 새로운 "원 그리기" 블럭을 이용해 10개의 원을 겹쳐 그리세요. 원을 그리기 위해 점프 하는
        것을 잊지 마세요.
      frozen circle function in circle: 이제 20개의 원을 겹치고, 각각을 18도씩 회전시키세요.
      frozen circle function with parameter: 원하는 크기로 그릴 수 있는 "원 그리기" 블럭이 있습니다. 이 블럭을
        사용해 5 크기의 원과 10 크기의 원을 그릴 수 있겠어요?
      frozen cross: |-
        더하기 기호를 만들기 위해서 이 명령어들을 "반복" 블럭 안에 넣어보세요.
        엘사가 앞 뒤로 움직일 수 있는 것 아시죠?
      frozen cross rotate: 이제 10번 반복해보세요. 각 선들을 그리면서 회전하기 위해서 몇 도가 필요할까요?
      frozen cross rotate dense: '이제 90번 반복해 보세요. 360도를 회전하려면 90도를 몇 번 회전해야 할까요? 힌트:
        생각보다 작은 수입니다.'
      frozen diamond: |-
        이 블록들을 반복 블록 안에 넣어서 평행사변형을 만들어보세요.
        사각형하고 비슷하지만 각이 다릅니다. 4개의 각이 모두 90도가 아니라, 한 가지는 60도 이고 다른 한가지는 120도 입니다.
      frozen diamond mini snowflake: 모든 눈송이들이 서로 다른 모양을 하고 있다는 것을 아시나요? 평행 사변형을 4번
        그리기 위해 "반복"블럭을 사용하고, 각각을 90도 만큼씩 회전시켜 새로운 눈송이를 만들어보세요.
      frozen diamond snowflake: 이제, 평행 사변형을 10번 그릴 수 있도록 반복 블럭을 사용하고, 각각을 36도 만큼씩
        오른쪽으로 돌려 새로운 눈송이를 그려보겠습니다.
      frozen freeplay: 여러분은 이제 진짜 화가가 된 것 같아요! 겨울왕국을 만들어 보세요.
      frozen line: 안녕하세요! 저는 아렌델의 엘사입니다. 선 1개를 그릴 수 있도록 도와주세요.
      frozen perpendicular: 이제 두 개의 선을 90도 만큼 교차시켜 그릴 수 있는지 살펴보세요. "회전"블럭과 "이동" 블럭을
        사용해야 할 것 입니다.
      frozen snowflake branch: '"눈송이 가지 만들기" 블럭을 이용해 3개의 가지로 뻗어나가는 그럴 듯한 눈송이를 만들어보세요.'
      frozen snowflake full: 이제 이쁜 눈송이를 만들기 위해 8번 반복해 보세요.
      frozen snowflower: 아주 복잡한 눈송이 모양도 아주 간단한 모양들을 이용해 만들 수 있습니다. 5크기의 원을 5개, 10크기의
        원을 5개 이용해 패턴을 만들 수 있겠어요?
      frozen square iterative: 사각형을 만들기 위한 과정에 반 정도 왔습니다. 4개의 선을 모아 사각형을 그려보세요.
      frozen square loop: |-
        안녕하세요. 저는 아렌델의 안나입니다!
        더 적은 블록들을 사용하는 "반복" 블록을 이용해서 사각형을 1개 만들어보세요.
        사각형 1개를 만들기 위해서 "반복" 블록 안 (???) 값으로 얼마나 넣어야 할까요?
      frozen square loop 3x: 이제 3개의 사각형을 회전시켜 만들어 보세요! 새로운 사각형을 그리기 전에 120도 만큼 회전하는
        것을 잊지 마세요.
      frozen square snowflake: |-
        "반복" 블록을 사용해서 사각형을 10번 만들어 보세요.
        삼각형을 한 번씩 그릴 때마다, 회전 블록을 이용해서 36 도 만큼 씩 회전시켜주세요.
      grade5_artist_binary11: '자유 플레이: 빈 캔버스가 있습니다. 마음대로 재미있게 그려보세요!'
      grade5_artist_binary4: 3개의 2진수(0 또는 1) 를 반복시켜서 이 패턴을 그려주세요.
      grade5_artist_binary5: 각 2진 문자는 이 그림의 한 줄을 의미합니다. 2진 문자열을 재배치해서 찡그린 얼굴 모양을 웃는
        얼굴 모양으로 만들어 주세요.
      grade5_artist_binary8: 이 그림을 마무리 해보세요.
      grade5_artist_binary9: "좀 더 높은 해상도로 표현할 수 있는 캔버스가 여기 있습니다. - 16 픽셀 \\* 16 픽셀!\\\r\n\\\r\n2진
        비트 문자열로 어떤 것이 그려지는 지 살펴보세요."
      k-1 maze 1: 오른쪽 돼지에게 보내주세요.
