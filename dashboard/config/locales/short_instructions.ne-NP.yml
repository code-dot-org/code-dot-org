---
ne-NP:
  data:
    short_instructions:
      2-3 Artist 12: "Create a circle to finish the eyeball!\\\r\n\\\r\nIf\nthe artist
        turns 1 degree with each loop, how many times do you need to repeat\nthe code
        to draw a circle? 180? 360? 500?"
      2-3 Artist 2 new: "This house has a half-finished wall. Each side\nis 100, but
        the half-finished wall is only 50. Complete the wall. "
      2-3 Artist 4: Help me complete the house for this cat.
      2-3 Artist 9 NEW: Finish this kite
      2-3 Artist Free Play: Free-play! Draw anything you'd like.
      2-3 Artist Loops New 15: Now, draw anything you like!
      2-3 Artist Nested Loops 10: |-
        Loop this code 12 times to complete
        the pattern.
      2-3 Artist Nested Loops 12: |-
        Loop this code 12 times to complete
        the curls.
      2-3 Artist Nested Loops Free Play: |-
        Free play, draw something cool
        with nested loops.
      2-3 Bee Conditionals 9: Collect all the nectar from each flower.
      2-3 Bee Functions 3: Collect all the nectar from each flower.
      2-3 Bee Functions 6: |-
        Now use the same function to collect nectar
        from the three flowers.
      2-3 Bee Loops 2A: This time, use a loop to gather all of the nectar.
      2-3 Bee Loops 3A: Use a `repeat` loop to collect all of the nectar.
      2-3 Maze 10: Guide me to the green evilness! (Watch out for TNT)
      2-3 Maze 2: This pig is ruffling my feathers. Help me get to him!
      2-3 Maze 4: Guide me to the green evilness! (Watch out for TNT)
      2-3 Maze 6: |-
        Keep calm and help me find the bad pig. Otherwise
        I might get angry!
      2-3 Maze 7: Guide me to the green evilness! (Watch out for TNT)
      2-3 Maze 8: Get me to the pig!
      2-3 Maze 9: Guide me to the green evilness! (Watch out for TNT)
      2-3 Maze Loops 17: Use what you learned to get me to the sunflower!
      2-3 Maze Loops 20: |-
        Get me to the sunflower using the fewest number of
        blocks possible!
      2-3 Maze Loops Assessment 1: "Assessment:  Get me to the sunflower\nusing only
        5 blocks! "
      4-5 Artist 3.5: |-
        Try to figure out what happens if you run this
        code (or just press "Run" and try it). Next, repeat the code enough times
        to complete the drawing!
      4-5 Artist 4: |-
        How many degrees are in a circle?  Loop the blocks
        to create a circle of colors.
      4-5 Artist Assessment 1: |-
        Assessment: Use a loop to draw the equilateral
        triangle. Each side is 300 pixels.
      4-5 Artist Free Draw 1: |-
        Free Draw!  Draw whatever you are inspired
        to create.
      4-5 Artist Patterns 7: |-
        Let's modify the code from the last puzzle
        to make this more complex pattern. Notice how the diamonds overlap now, try
        changing the first "jump backwards" from 100 to 50 (half as far) - now how
        far should the artist go in the second "jump backwards"?
      4-5 Bee Debugging 10: Find the errors and fix them.
      4-5 Bee Debugging 11: Does this count correctly?
      4-5 Bee Debugging 2: Help the bee get the nectar and make honey.
      4-5 Bee Debugging 3: Find the errors and fix them.
      4-5 Bee Debugging 4: These blocks don't work. What's the pattern?
      4-5 Bee Debugging 5: Something isn't right here...
      4-5 Bee Debugging 7: The function is missing something...
      4-5 Bee Debugging 9: Why isn't the bee making enough honey?
      4-5 Bee Debugging Assessment 1: 'Assessment: Fix the code.'
      4-5 Bee Nested Loops 1: Use a loop to collect all of the nectar.
      4-5 Bee Nested Loops 5: |-
        Collect all of the nectar by creating
        a nested loop.
      4-5 Maze 1: Dear person. Me zombie. Must... get... to sunflower.
      4-5 Maze 10: Can you get to the sunflower using only four blocks?
      4-5 Maze 11: Can you get to the sunflower using only six blocks?
      4-5 Maze 12: |-
        Ok, this is slightly different. Can you do it in
        only six blocks?
      4-5 Maze 2: Get the zombie to the sunflower, but avoid the chomper!
      4-5 Maze 3: Must... get... to sunflower.
      4-5 Maze 5: |-
        Can you solve this puzzle using the fewest number
        of blocks possible?
      4-5 Maze 6: |-
        Get me to the sunflower using the fewest number of
        blocks possible!
      Course 4 Artist Binary 3: |-
        Can you draw this pattern by looping
        just three binary digits (0s and 1s)?
      Course 4 Artist Binary 4: |-
        Each binary string represents one row
        of this picture. Can you rearrange them so it draws a smiley face instead
        of a frowny face?
      Course 4 Artist Binary 5: |-
        Which 6 digit binary string, repeated
        11 times, will draw this image?
      Course 4 Artist Binary 6: |-
        What is the shortest binary string that
        you can repeat to draw this image?
      Course 4 Artist Binary 7: Finish this drawing.
      Course 4 Artist Binary Free Play 2: 'Free Play: Here''s a blank canvas for you
        to draw on. रमाईलो गर्नुहोस्!'
      Course 4 Artist Binary Free Play 2a: "Here's a higher resolution\ncanvas to
        draw on - 16 pixels by 16 pixels!\\\r\n\\\r\nSee what happens when we\nstart
        to get creative with the bits?"
      Course 4 Artist Binary Free Play 2b: Click here to see hints.
      Course 4 Artist Binary pre1: "Binary is a way of representing information\nusing
        only two options.  Here, we're going to use the options \"off\" (represented\nby
        the number 0) and \"on\" (represented by the number 1).  \\\r\n\\\r\nWe've\nprovided
        you with a grid of \"pixels\" that you can walk through and make\ndesigns
        by turning on only certain squares.  Can you have the artist draw\n\"01010101\"
        in binary in the first row?"
      Course 4 Artist For Loops 6a: |-
        Make three small changes to the
        code from the last level to get this!
      Course 4 Bee Params 5: |-
        Let's start from scratch - can you create
        a new function called "get 5 nectar" with a direction parameter?
      Course 4 EC 1a: No rules. No clues. Just the challenge!
      Course 4 EC 1b: No rules. No clues. Just the challenge!
      Course 4 EC 2a: No rules. No clues. Just the challenge!
      Course 4 EC 2b: No rules. No clues. Just the challenge!
      Course 4 EC 2c: No rules. No clues. Just the challenge!
      Course 4 Maze 2: Avoid the TNT!
      Course 4 Maze 3: 'Program the angry bird to get to the pig. '
      Course 4 Maze 5: |-
        Can you solve this puzzle using the fewest number
        of blocks possible?
      Course 4 SCFL 1: |-
        Solve this puzzle using the fewest number of
        blocks possible.
      Course 4 SCFL 2: |-
        Solve this puzzle using the fewest number of
        blocks possible.
      Course 4 SCFL 3: Can you figure out how to re-create this drawing?
      Course 4 SCFL 4: Can you figure out how to re-create this drawing?
      Course 4 SCFL 6: |-
        Can you figure out how to re-create this drawing
        with a single loop?
      Course 4 SCV 1: Click here to view the instructions again.
      Course 4 SCV 2: Click here to view the instructions again.
      Course 4 SCV 4: |-
        Solve this puzzle with the fewest number of blocks
        possible.
      Course 4 SCV 5: |-
        Solve this puzzle with the fewest number of blocks
        possible.
      Course 4 SCV 6: Click here to view the instructions again.
      Crack Random Substitution: Instructions
      Crack a Caesar Cipher: Instructions
      Infinity_catch: |-
        Can you make Elsa ("actor 2") catch up with
        Anna by using the arrow keys?
      Infinity_finale: Create anything you like and share it!
      Infinity_move_collide: |-
        Hiro is "actor 1".  Move him right to
        Baymax, and play a sound when they touch.
      Infinity_move_directions: |-
        Baymax is "actor 2".  Add Move blocks
        and then move Baymax using the arrows.  Make him touch the two other characters.
      Infinity_move_right: |-
        Hiro is "actor 1".  Use the Move block
        to move Hiro right to touch Baymax.
      Infinity_repeat: |-
        Use a "repeat forever" block to make Anna move
        up and down 400 pixels.
      Infinity_say: Make Anna say "Hi there." by using the Say block.
      Infinity_shoot: |-
        Baymax is "actor 2".  Make Baymax throw a rocket
        at Hiro.
      Infinity_shoot_directions: |-
        Hiro is "actor 3".  Make Hiro throw
        a projectile to each of the four characters.  Wait one second between each
        throw.
      Infinity_touch_score: |-
        Make Anna score a point when she touches
        a snowflake.  Then click "Run" and steer her to touch each snowflake once.
      K-1 Artist Loops 1: Draw this line by moving East 4 times.
      K-1 Artist Loops 2: Now, draw the same line using a loop.
      K-1 Artist Loops 3: Can you loop these blocks to draw 6 lines?
      K-1 Artist Loops 4: |-
        Could a loop help us draw the top of this
        castle?
      K-1 Artist Loops 5: What can you loop 4 times to draw these stairs?
      K-1 Artist Loops 7: Loops can help you finish this pattern.
      K-1 Artist Loops 8: This staircase has longer steps.
      K-1 Artist Loops 9: What is the easiest way to draw these stairs?
      K-1 Artist Loops Free Play: Free play, draw something fun!
      K-1 Artist1 1: Draw the foot of the man with one line
      K-1 Artist1 2: Draw the whisker on the cat with two lines!
      K-1 Artist1 4: Draw lines up, over, and down to complete the castle!
      K-1 Artist1 5: Draw the stem of this flower with two lines!
      K-1 Artist1 6: Finish the picture by using a jump block!
      K-1 Artist1 9: Draw and Jump to make the dashed line
      K-1 Artist2 1: Draw a square below the triangle.
      K-1 Artist2 2: Jump and draw a square next to the house.
      K-1 Artist2 3: Draw a square above the other square
      K-1 Artist2 4: Draw a rectangle to complete the bridge.
      K-1 Artist2 5: Draw a rectangle to complete the bridge supports
      K-1 Artist2 6: Draw two squares to make a rectangle!
      K-1 Artist2 Assessment1: |-
        Assessment: Draw a square next to the
        other square.
      K-1 Artist2 Free Draw: Draw anything!
      K-1 Artist2_7: Draw a rectangle to give the dresser a top drawer!
      K-1 Bee 11: Get three nectar and then make one honey
      K-1 Bee 13: Get three nectar and then make one honey!
      K-1 Bee 15: Get two nectar to make two honey!
      K-1 Bee 4: Get two nectar and then make two honey!
      K-1 Bee 5: Get three nectar and then make three honey!
      K-1 Bee 6: Get two nectar and then make two honey!
      K-1 Bee 7: Get three nectar and then make two honey!
      K-1 Bee 9: Get two nectar and then make two honey!
      K-1 Bee Loops 1: Get the nectar to make honey!
      K-1 Bee Loops 10: Get all of the nectar and make all of the honey.
      K-1 Bee Loops 11: Get all of the nectar and honey!
      K-1 Bee Loops 12: Get all of the nectar and all of the honey.
      K-1 Bee Loops 5: Use `repeat` loops to get the nectar and honey!
      K-1 Bee Loops 7: Get the nectar and make honey!
      K-1 Bee Loops 8: Get the nectar and make honey!
      K-1 Bee Loops 9: Get the all the nectar and make all of the honey.
      K-1 Maze 10: 'Go around the TNT to get me to the pig! '
      K-1 Maze 2: Move me East to get me to the pig!
      K-1 Maze 3: Move me South to get me to the pig!
      K-1 Maze 4: Move me North to get me to the pig!
      K-1 Maze 5: Move me East to get me to the pig!
      K-1 Maze 6: Move one way, then another to get me to the pig!
      K-1 Maze 7: Move one way, then another to get me to the pig!
      K-1 Maze 8: Move one way, then another to get me to the pig!
      K-1 Maze 9: Move one way, then another to get me to the pig!
      K-1 Maze Loops 1: Get me to the pig!
      K-1 Maze Loops 2: Use the `repeat` block to get me to the pig!
      K-1 Maze Loops 3: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 5: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 6: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 7: Get me to the pig! Be sure to use `repeat` loops.
      K-1 Maze Loops 8: Use `repeat` loops to get me to the pig.
      K-1 artist 1 level 9: Draw this using three lines
      K-1 maze debug 1: Change the code to get me to the pig!
      MC HOC 2016 Level 10: It's time to make your own Minecraft! Spawn creatures
        and then make them do whatever you want. रमाईलो गर्नुहोस्!
      MC HOC 2016 Level 2-2: |-
        The chicken is frozen. Place `move` and
        `turn` blocks in the `when spawned` slot to get it to move.
      MC HOC 2016 Level 3: "Great, the chicken moved! But then she stopped.\nIn games,
        chickens walk forever. Use a `forever do` loop to keep these chickens\nmoving.\\\r"
      MC HOC 2016 Level 4: |-
        Now the chickens look weird moving the same
        way. Games use random moves to make things look real. Make the chickens `turn
        random`.
      MC HOC 2016 Level 5: |-
        These cows are lost! Lead them to the grass
        with the `move a step toward` block in a `forever do` loop.
      MC HOC 2016 Level 6: |-
        Now you make the zombies. Use the `spawn`
        block to make 3 zombies when night falls. Get them to move towards you. Survive
        until morning.
      MC HOC 2016 Level 8: |-
        The path to your sheep is blocked by a stone
        wall. Luckily there is a Creeper here. Creepers explode after you touch them.
        Get the Creeper to explode the wall so you can reach your sheep!
      MC HOC 2016 New Drop: |-
        In Minecraft, sheep drop wool. Place the
        `drop` block in `when used`, then walk over and use the sheep to drop an item.
      MC HOC 2016 New Spawn: |-
        Now you can fill the world with what you
        want! Place`spawn` blocks under `when run` to spawn things when the game starts.
      MC HOC 2016 New Walk: |-
        Let's explore our world! Move with the
        arrows, and press the space bar or tap the game board to use items. Use the
        door to get inside the house.
      MC HOC 2016 SCORE LEVEL: |-
        Some games let you keep score. Play tag
        with these Iron Golems and use the `add 1 to score` block to give yourself
        a point when you tag them. Reach five points to win!
      MC HOC 2016 Village Test: हैन होला! Zombies have trapped you inside! Code the
        Iron Golem to chase and attack the zombies!
      NEW Course 4 Artist Functions 14: 'Free-play time! '
      NEW Course 4 Artist Params 9: |-
        Click "edit" to fill in the function
        definition of "draw a square" and add a parameter. It should take a length
        parameter, just like the triangle. This time, draw 3 squares: 25, 50 and 75
        pixels in length, each 100 pixels apart.
      NEW Course 4 Bee For Loops 1: |-
        Use a loop to collect the nectar from
        each flower.
      NEW Course 4 Bee For Loops 8: |-
        You've got this! What should your
        increment be to collect 3, 6, 9, 12, 15 nectar?
      Overworld Avoid Monsters: |-
        Running into a Creeper is a bad idea.
        Carefully move past the Creepers and reach the safety of your home.
      Overworld Avoid Monsters_2019: |-
        Running into a Creeper is a bad idea.
        Carefully move past the Creepers and reach the safety of your home.
      Overworld Chop Tree: |-
        Wood is a very important resource. Many things
        are made from it. Walk to the tree and use the “destroy block” command to
        chop it down.
      Overworld Chop Tree_2019: |-
        Wood is a very important resource. Many things
        are made from it. Walk to the tree and use the “destroy block” command to
        chop it down.
      Overworld Chop Trees: |-
        We need to build a house before the sun
        goes down. Houses require a lot of wood. Cut down all 3 trees.
      Overworld Chop Trees_2019: |-
        We need to build a house before the sun
        goes down. Houses require a lot of wood. Cut down all 3 trees.
      Overworld Free Play 20x20: |-
        Congratulations! You've completed
        all our puzzles! Now mine, build, and create something unique by using everything
        you've learned so far.
      Overworld Free Play 20x20_2019: |-
        Congratulations! You've completed
        all our puzzles! Now mine, build, and create something unique by using everything
        you've learned so far.
      Overworld House Frame Chosen: |-
        Build the rest of your house from
        any material you'd like. The "repeat" command will come in handy.
      Overworld House Frame Chosen_2019: |-
        Build the rest of your house from
        any material you'd like. The "repeat" command will come in handy.
      Overworld Move to Sheep: |-
        Add a second “move forward” command to
        reach the sheep.
      Overworld Move to Sheep_2019: |-
        Add a second “move forward” command to
        reach the sheep.
      Overworld Place Wall: |-
        Every house starts with a wall. Build the
        first part of your house by putting the "place" and "move forward" commands
        inside the repeat loop.
      Overworld Place Wall_2019: |-
        Every house starts with a wall. Build the
        first part of your house by putting the "place" and "move forward" commands
        inside the repeat loop.
      Overworld Plant Crops: |-
        It’s good to plan ahead. Plant crops on
        both sides of the water so you don’t get hungry later on.
      Overworld Plant Crops_2019: |-
        It’s good to plan ahead. Plant crops on
        both sides of the water so you don’t get hungry later on.
      Overworld Powered Minecart: |-
        Great job! You’ve gathered lots of
        resources and built a modest home. Now lay rail from the edge of the map to
        the door of your house.
      Overworld Powered Minecart_2019: |-
        Great job! You’ve gathered lots of
        resources and built a modest home. Now lay rail from the edge of the map to
        the door of your house.
      Overworld Shear Sheep: |-
        Sheep-shearing time! Use the “shear” command
        to gather wool from both sheep.
      Overworld Shear Sheep_2019: |-
        Sheep-shearing time! Use the “shear” command
        to gather wool from both sheep.
      Standalone_Artist_1: |-
        Welcome to Artist! First off, let's try
        to make a simple square using the turn right block and move forward block.
        Each side should be 100 pixels long.
      Standalone_Artist_8: |-
        Here's a function called "Draw a shape"
        that we've programmed to draw hexagons. Run the code to see what it does
        and then experiment with the function to see what happens. Can you make it
        draw a pattern of squares, triangles, or octagons?
      Underground Avoiding Lava: |-
        Lava is hiding beneath some of these
        blocks, which you'll need to cover up before moving forward. An "if" command
        will come in handy here. Add a "move forward" command in the correct place
        to mine these blocks.
      Underground Avoiding Lava_2019: |-
        Lava is hiding beneath some of these
        blocks, which you'll need to cover up before moving forward. An "if" command
        will come in handy here. Add a "move forward" command in the correct place
        to mine these blocks.
      Underground If Statements: |-
        Now things are getting tricky. Mine
        3 redstone, but don’t fall in the lava. Use an "If" command to place cobblestone
        over any lava you uncover.
      Underground If Statements_2019: |-
        Now things are getting tricky. Mine
        3 redstone, but don’t fall in the lava. Use an "If" command to place cobblestone
        over any lava you uncover.
      Underground Iron: |-
        Walking into molten lava is a bad idea. Place
        cobblestone to create a bridge, then mine at least two of the iron blocks.
      Underground Iron_2019: |-
        Walking into molten lava is a bad idea. Place
        cobblestone to create a bridge, then mine at least two of the iron blocks.
      Underground Mining Coal: |-
        You’ll find the most valuable resources
        underground, but it can get dark. Place at least 2 torches and mine at least
        2 coal.
      Underground Mining Coal_2019: |-
        You’ll find the most valuable resources
        underground, but it can get dark. Place at least 2 torches and mine at least
        2 coal.
      bounce_1: Attach a block to the "when left arrow" block and press "Run". Move
        the paddle using the left arrow to reach the finish target.
      bounce_10: There is now a goal at the top. Attach the "score point" and "score
        opponent point" blocks to the "when ball in goal" and "when ball misses paddle"
        blocks to make a game. See how many points you can score before your opponent
        scores twice.
      bounce_10_basketball: Now there is a goal at the top! Attach the "score point"
        and "score opponent point" blocks to the "when ball in goal" and "when ball
        misses hand" blocks to make a game. See how many points you can score before
        your opponent scores twice.
      bounce_10_sports: Now there is a goal at the top! Attach the "score point" and
        "score opponent point" blocks to the "when ball in goal" and "when ball misses
        hand" blocks to make a game. See how many points you can score before your
        opponent scores twice!
      bounce_11: You can now attach blocks to the "when run" block. You have to attach
        the new "launch new ball" block in more than one place. Also, try changing
        the scene or the speed of the paddle and the ball and see how many points
        you can score before your opponent scores twice.
      bounce_11_basketball: You can now attach blocks to the "when run" block. You
        have to attach the new "throw new ball" block in more than one place. Also,
        try changing the scene or the speed of the hand and the ball and see how many
        points you can score before your opponent scores twice!
      bounce_11_sports: You can now attach blocks to the "when run" block. You have
        to attach the new "throw new ball" block in more than one place. Also, try
        changing the scene or the speed of the hand and the ball and see how many
        points you can score before your opponent scores twice!
      bounce_12: Create your own Bounce game. You can change all the visuals and the
        rules. When you're done, click Finish to let friends try your game on their
        phones.
      bounce_12_basketball: Create your own Basketball game. You can change all the
        rules. When you're done, click Finish to let friends try your game on their
        phones.
      bounce_12_sports: 'Create your own game! You''re in charge here: you can change
        all the rules, mix and match sports, get creative! When you''re done, click
        Finish to let friends try your game on their phones.'
      bounce_1_basketball: Attach a block to the "when left arrow" block and press
        "Run". Move the hand using the left arrow to reach the finish target.
      bounce_1_sports: झण्डा सम्म पुग्नुहोस्! Attach a block to the "when left arrow"
        block and press "Run" to move the player to the flag.
      bounce_2: Attach a block to the "when right arrow" and "when left arrow" blocks.
        Move the paddle to reach both finish targets.
      bounce_2_basketball: Attach a block to the "when right arrow" and "when left
        arrow" blocks. Move the hand to reach both finish targets.
      bounce_2_sports: अब दुईवटा झण्डा छन्! Attach a block to the "when left arrow"
        and "when right arrow" blocks to make your player move in two directions.
      bounce_3: Now try something similar with the "when up arrow" block. Move the
        paddle to the finish target at the top.
      bounce_4: This time you need to add four blocks. Move the paddle to all four
        finish targets to complete this puzzle.
      bounce_5: We're going to send a ball flying down towards the paddle. Attach
        a block to the "when ball hits paddle" block to ensure the ball reaches the
        finish target.
      bounce_5_basketball: We're going to send a ball flying down towards the hand.
        Attach a block to the "when ball hits hand" block to ensure the ball reaches
        the flag.
      bounce_5_sports: The hockey puck is going to fly down toward the player! Attach
        a block to the "when ball hits player" block to hit the flag.
      bounce_6: Now the finish target is on the top. You need to attach blocks to
        both of the "when ball hits" blocks to solve this puzzle.
      bounce_6_basketball: Now the flag is on the top. You need to attach blocks to
        both of the "when ball hits" blocks to solve this puzzle.
      bounce_6_sports: Now the flag is on the top. You need to attach blocks to both
        of the "when ball hits" blocks to solve this puzzle.
      bounce_7: Attach blocks to each of the "when" blocks. Bounce the ball until
        it hits the finish target.
      bounce_7_basketball: Attach blocks to each of the "when" blocks. Bounce the
        ball until it hits the flag.
      bounce_7_sports: Attach blocks to each of the "when" blocks. Bounce the ball
        until it hits the flag.
      course4_artist_fwp_challenge1: Try running this program, and make changes to
        see what happens. Can you figure out how it works? (Or delete it and replace
        it with something totally different)
      courseA_maze_seq2: A bug! Fix the code to get me to the pig.
      courseC_PlayLab_events3: |-
        Can you write a program to make Jorge
        (actor 1) move toward Olive the Cat?
      courseC_PlayLab_events3_2018: |-
        Can you write a program to make Jorge
        (actor 1) move toward Olive the Cat?
      courseC_PlayLab_events3_2019: |-
        Can you write a program to make Jorge
        (actor 1) move toward Olive the Cat?
      courseD_artist_binary1: "Binary is a way of representing information\nusing
        only two options.  Here, we're going to use the options \"off\" (represented\nby
        the number 0) and \"on\" (represented by the number 1).  \\\r\n\\\r\nWe've\nprovided
        you with a grid of \"pixels\" that you can walk through and make\ndesigns
        by turning on only certain squares.  Can you have the artist draw\n\"01010101\"
        in binary in the first row?"
      courseD_artist_binary1_2018: "Binary is a way of representing information\nusing
        only two options.  Here, we're going to use the options \"off\" (represented\nby
        the number 0) and \"on\" (represented by the number 1).  \\\r\n\\\r\nWe've\nprovided
        you with a grid of \"pixels\" that you can walk through and make\ndesigns
        by turning on only certain squares.  Can you have the artist draw\n\"01010101\"
        in binary in the first row?"
      courseD_artist_binary1_2019: "Binary is a way of representing information\nusing
        only two options.  Here, we're going to use the options \"off\" (represented\nby
        the number 0) and \"on\" (represented by the number 1).  \\\r\n\\\r\nWe've\nprovided
        you with a grid of \"pixels\" that you can walk through and make\ndesigns
        by turning on only certain squares.  Can you have the artist draw\n\"01010101\"
        in binary in the first row?"
      courseD_artist_binary4: |-
        Can you draw this pattern by looping
        just three binary digits (0s and 1s)?
      courseD_artist_binary4_2018: |-
        Can you draw this pattern by looping
        just three binary digits (0s and 1s)?
      courseD_artist_binary4_2019: |-
        Can you draw this pattern by looping
        just three binary digits (0s and 1s)?
      courseD_artist_binary6: |-
        Which 6 digit binary string, repeated
        11 times, will draw this image?
      courseD_artist_binary6_2018: |-
        Which 6 digit binary string, repeated
        11 times, will draw this image?
      courseD_artist_binary6_2019: |-
        Which 6 digit binary string, repeated
        11 times, will draw this image?
      courseD_artist_binary7: |-
        What is the shortest binary string that
        you can repeat to draw this image?
      courseD_artist_binary7_2018: |-
        What is the shortest binary string that
        you can repeat to draw this image?
      courseD_artist_binary7_2019: |-
        What is the shortest binary string that
        you can repeat to draw this image?
      courseD_autorun_binary4_2019: |-
        Can you draw this pattern by looping
        just three binary digits (0s and 1s)?
      courseD_autorun_binary6_2019: |-
        Which 6 digit binary string, repeated
        11 times, will draw this image?
      courseD_autorun_binary7_2019: |-
        What is the shortest binary string that
        you can repeat to draw this image?
      courseE_bee_functions1: Collect all the nectar from each flower.
      courseF_artist_for7: |-
        Make three small changes to the
        code from the last level to get this!
      courseF_artist_for7_2018: |-
        Make three small changes to the
        code from the last level to get this!
      courseF_artist_for7_2019: |-
        Make three small changes to the
        code from the last level to get this!
      courseF_artist_for_challenge1: Can you figure out how to re-create this drawing?
      courseF_artist_for_challenge1_2018: Can you figure out how to re-create this
        drawing?
      courseF_artist_for_challenge1_2019: Can you figure out how to re-create this
        drawing?
      courseF_artist_for_challenge2: |-
        Can you figure out how to re-create this drawing
        with a single loop?
      courseF_artist_for_challenge2_2018: |-
        Can you figure out how to re-create this drawing
        with a single loop?
      courseF_artist_for_challenge2_2019: |-
        Can you figure out how to re-create this drawing
        with a single loop?
      courseF_bee_for8: |-
        You've got this! What should your
        increment be to collect 3, 6, 9, 12, 15 nectar?
      courseF_bee_for8_2018: |-
        You've got this! What should your
        increment be to collect 3, 6, 9, 12, 15 nectar?
      courseF_bee_for8_2019: |-
        You've got this! What should your
        increment be to collect 3, 6, 9, 12, 15 nectar?
      courseF_bee_for_challenge2: |-
        Solve this puzzle using the fewest number of
        blocks possible.
      courseF_bee_for_challenge2_2018: |-
        Solve this puzzle using the fewest number of
        blocks possible.
      courseF_bee_for_challenge2_2019: |-
        Solve this puzzle using the fewest number of
        blocks possible.
      flappy_1: Attach a block to the "when click" block, then press "Run". Click
        or tap the screen to move Flappy to the target.
      flappy_11: Create your own Flappy game. You can change all the visuals and all
        the rules, even the gravity. When you're done, click Finish to let friends
        try your game on their phones.
      flappy_2: Now we've added some ground.  Attach a block to the "when hit the
        ground" block.  Your code needs to 'END GAME' when Flappy crashes.
      flappy_3: The "when run" block allows you to run code when your game starts.  Try
        setting the level speed and flapping to the target.
      flappy_4: Flappy will fly through obstacles unless you write code to make him
        crash. Attach a block to the "when hit an obstacle" block. Your code needs
        to 'END GAME' when Flappy crashes into the first set of pipes.
      flappy_5: Let's add a scoreboard, and count points when Flappy makes it past
        obstacles. Add to the "when pass an obstacle" block, and then score a point
        by flying Flappy through the first set of pipes.
      flappy_6: See if you can still score a point after making Flappy flap either
        a smaller or larger amount.
      flappy_7: Next, try changing the scene by attaching another block to the "when
        run" block.
      flappy_8: You can set visuals anytime, not just when the game starts. Try setting
        a RANDOM scene when other events happen, for example, when passing an obstacle.
      flappy_9: To mix things up, when hitting an obstacle, instead of ending the
        game try setting the score back to 0.
      frozen circle: |-
        A circle is a special shape. Can you figure out
        what number to replace the question marks with to draw a circle?
      frozen circle function: |-
        Use the new “Create a circle” block to
        create 10 overlapping circles. Don't forget to jump forward between circles.
      frozen circle function in circle: |-
        Now let's create 20 overlapping
        circles, turning 18 degrees between each circle.
      frozen circle function with parameter: |-
        Here's a ”Create circle”
        block that can make circles of different sizes. Can you use this to create
        a small circle of size 5 and a larger circle of size 10?
      frozen cross: |-
        Wrap a “Repeat” block around these commands to create
        a plus sign. Did you notice Elsa can move forward and backward?
      frozen cross rotate: |-
        Now try repeating it 10 times. How many degrees
        do you need to turn between each line?
      frozen cross rotate dense: |-
        Let's repeat it 90 times! How many
        times does 90 go into 360? Hint: It's a really small number.
      frozen diamond: |-
        Use a repeat around these blocks to create a parallelogram.
        It's just like a rectangle but has different angles. This one has 60 degree
        and 120 degree angles instead of all 90 degree angles.
      frozen diamond mini snowflake: |-
        Did you know every snowflake is
        a different shape? Let's create a new snowflake by using another “Repeat"
        block to repeat a parallelogram 4 times, turning right by 90 degrees between
        each parallelogram.
      frozen diamond snowflake: |-
        Now, let's create a new snowflake by
        using the repeat block to repeat a parallelogram 10 times, turning right by
        36 degrees between each one.
      frozen freeplay: |-
        You've officially become a master artist!
        Create a winter wonderland.
      frozen line: |-
        Hi! I'm Elsa of Arendelle. Help me create a single
        line.
      frozen perpendicular: |-
        Now let's see if we can create two lines
        that are at a 90 degree angle to each other. You will need to use the "Turn"
        block as well as the "Move" block.
      frozen snowflake branch: |-
        Try using the ”Create a snowflake branch”
        block to create three branches, which starts to look like a snowflake.
      frozen snowflake full: |-
        Now let's repeat it 8 times to make a
        beautiful snowflake!
      frozen snowflower: |-
        Intricate snow patterns can be created with
        very simple shapes. Can you make a pattern by repeating 5 circles of size
        5 and 5 circles of size 10?
      frozen square iterative: |-
        It seems like we're halfway to making
        a square. Let's put 4 lines together to create a square.
      frozen square loop: |-
        Hi, I’m Anna of Arendelle! Let’s make a square
        with the “Repeat” block, which uses fewer blocks. How many times (???) should
        the “Repeat” block loop the blocks inside it to make a square?
      frozen square loop 3x: |-
        Let's create three squares, turning after
        each square. Be sure to turn by 120 degrees before each new square.
      frozen square snowflake: |-
        Can you create a snowflake using the
        “Repeat” block to make a square 10 times, and the “Turn” block to turn 36
        degrees between each square?
      grade5_artist_binary11: 'Free Play: Here''s a blank canvas for you to draw on.
        रमाईलो गर्नुहोस्!'
      grade5_artist_binary4: |-
        Can you draw this pattern by looping
        just three binary digits (0s and 1s)?
      grade5_artist_binary5: |-
        Each binary string represents one row
        of this picture. Can you rearrange them so it draws a smiley face instead
        of a frowny face?
      grade5_artist_binary8: Finish this drawing.
      grade5_artist_binary9: "Here's a higher resolution\ncanvas to draw on - 16 pixels
        by 16 pixels!\\\r\n\\\r\nSee what happens when we\nstart to get creative with
        the bits?"
      k-1 maze 1: Can you make me move West to get to the pig?
      scrat 16: |-
        Acorn! Acorn! Acorn! Use an "if" block to get me there
        with the fewest number of blocks.
      scrat 17: |-
        Ok, let's do that again for practice - this isn't
        very different, but watch out for the wall!
      scrat 18: |-
        The "If-else" blocks checks a condition, and then
        does one thing OR another. To get me to the acorn try to use this new block.
      scrat 19: |-
        One more practice of the "if-else" block, can you
        get it right on your first try?
      scrat 20: |-
        Can you add just 3 blocks to help me solve a more complex
        maze? If you do it right, I can walk any curvy path no matter the length.
        Hurry! The ice is melting!
