"bs":
  data:
    instructions:
      2-3 Artist 1 new_instruction: Zdravo, ja sam umjetnik. Možeš napisati kod pomoću
        kojeg ću ja nacrtati skoro sve što želiš. Koristi nekoliko blokova da bih
        ja nacrtao sive linije u slici. (Svaka linija je 100 piksela duga)
      2-3 Artist 11_instruction: 'Dodaj ivicu ovom stop znaku tako što ćeš napraviti
        osmougaonik gdje je svaka od osam strana 100 piksela duga. Za koliko stepeni
        moraš okretati? (Savjet: Koliko je 360 podijeljeno sa 8?)'
      2-3 Artist 12_instruction: Postavi "ponavljaj puta" blok tako da bi se napravio
        "krug" koji čini oko. Ako svaki pokret okreće na desno za jedan stepen, koliko
        puta moraš ponoviti da bi dobio cijeli krug? 180? 360? 500?
      2-3 Artist 2 new_instruction: Ova kuća ima napola gotov zid. Svaka stana je
        100, ali napola gotov zid ima samo 50. Dovrši zid.
      2-3 Artist 2_instruction: 'Ova kuća ima napola gotov zid. Svaka stana je 100,
        ali napola gotov zid ima samo 50. Dovrši zid. '
      2-3 Artist 3.4_instruction: Blok za skakanje pokreće umjetnika bez crtanja.
        Nacrtaj isprekidanu liniju koristeći u isto vrijeme blokove za crtanje i skakanje.
      2-3 Artist 3_instruction: Ovaj šešir je visok 100 piksela. Nacrtaj šešir koji
        ima 70 piksela manje.
      2-3 Artist 3new_instruction: Crveni šešir je visok 100 piksela. Dovrši scrtanje
        crnog šešira koji je kraći za 70 piksela. Širina crnog šešira je 50 piksela.
      2-3 Artist 4_instruction: Pomozi mi da završim kuću za ovu mačku.
      2-3 Artist 5_instruction: Zamijeni ovaj kod sa blokom "ponavljaj puta" da bi
        se nacrtala ista kuća sa samo 3 bloka.
      2-3 Artist 6_instruction: 'Ova kuća treba krov! Nacrtaj trokut. Savjet: sve
        tri stranice su iste dužine.'
      2-3 Artist 7_instruction: 'Završi sa crtanjem desne polovice zadnjeg prozora.
        Svaki kvadrat koji čini prozor je dug 25 piksela. '
      2-3 Artist 8_instruction: Dovrši sobu za svaku od životinja tako što ćeš podijeliti
        pravougaonik u 2 kvadrata iste veličine. Pravougaonik je širok 200 piksela
        i visok 100 piksela.
      2-3 Artist 9_instruction: Završi ovog zmaja
      2-3 Artist Assessment 1_instruction: 'Procjena: Dovrši crtanje zadnjeg zuba,
        širokog 25 piksela i visokog 25 piksela.'
      2-3 Artist Debugging 1_instruction: Možeš li napraviti ovaj šešir sa vrhom dužine
        100?
      2-3 Artist Debugging 10_instruction: 'Platforma za smjer na mom joystick-u je
        preuska. Savjet: Neka bude šira za 10 piksela'
      2-3 Artist Debugging 11_instruction: Pomozi mi da dovršim moju prelijepu pahuljicu
        snijega. Koliko puta trebam ponavljati da bi pahuljica bila završena?
      2-3 Artist Debugging 12_instruction: Trebam dodati morski talas u ovoj sceni.
        Možeš li mi pomoći?
      2-3 Artist Debugging 2_instruction: 'Kod za tri brka koji vidiš je pogrešan.
        Savjet: svaki brk je dug 70 piksela. Popravi ovaj kod da bi se nacrtali brkovi.'
      2-3 Artist Debugging 3_instruction: 'Moj čamac ima rupu na dnu! Možeš li to
        popraviti tako što ćeš promijeniti ugao linije? Savjet: zadnji ugao je pomaknut
        za 15 stepeni.'
      2-3 Artist Debugging 4_instruction: Koju sliku pokušavamo nacrtati ovdje? Poveži
        tačke koristeći odgovarajuće linije i uglove.
      2-3 Artist Debugging 5_instruction: 'Kod za nogu i stopalo koji vidiš ovdje
        je pogrešan. Savjet: Stopalo je predugo, i trebali bismo možda izbrisati jedan
        korak ("korak", smiješno zar ne? :))'
      2-3 Artist Debugging 6_instruction: Izgleda da sjedim na stolici kojoj fali
        noga. Uredi blokove da bi se nacrtala noga.
      2-3 Artist Debugging 7_instruction: Izgleda da je C u kodu nacrtano naopačke.
        Možeš li to popraviti da izgleda kao C?
      2-3 Artist Debugging 8_instruction: Moja vjetrenjača od papira nije završena.
        Koliko puta trebam ponoviti da bi bila završena?
      2-3 Artist Debugging 9_instruction: 'Kod za ovu stabljiku je pogrešan. Savjet:
        Ugao je pomjeren za 60 stepeni'
      2-3 Artist Debugging Assessment 1_instruction: 'Ovaj oblik je premalen. Možeš
        li napraviti da bude veći? Savjet: svaka strana bi trebala da bude duža za
        75 piksela.'
      2-3 Artist Free Play_instruction: Vrijeme za slobodno igranje! Nacrtaj šta god
        želiš.
      2-3 Artist Functions 1_instruction: 'Zdravo. Ja zombi umjetnik. Ja voljeti crtati!
        Pomozi mi da nacrtam kvadratne naočale. Savjet: premosnica između naočala
        je 25 piksela kraća od dužine kvadrata.'
      2-3 Artist Functions 10_instruction: Pogledaj ove dvije funkcije. Jedna je za
        crtanje velikog zupčanika, a jedna za crtanje malog zupčanika. Koristi ove
        dvije funkcije za crtanje unutrašnjosti mašine!
      2-3 Artist Functions 11.5_instruction: Pogledaj ovu istu "Nacrtaj šestouagonik"
        funkciju. Šta će se dogoditi ako izvršiš okretaj za samo 60 stepeni pri svakom
        prolazu kroz petlju?
      2-3 Artist Functions 11_instruction: |
        Promijenili smo ime "nacrtaj kvadrat" funkcije i sada se zove "nacrtaj šestougaonik", ali još uvijek crta kvadrate. Možeš li promijeniti funkciju
        "nacrtaj šestougaonik" da bi se nacrtao šestougaonik sa stranicama od 50 piksela?
      2-3 Artist Functions 12_instruction: 'Funkcije su stvarno super ako želiš nacrtati
        komplikovane stvari više puta. Možeš li iskorisititi "nacrtaj cvijet" funkciju
        da bi napunio ostatak kutije plantažera?(Savjet: Sve su biljke odvojene za
        100 piksela dužine)  '
      2-3 Artist Functions 13_instruction: Pružili smo ti 4 funkcije. Iskoristi ih
        kako god želiš unutar jedne ili više petlji da bi se nacrtale slike koje možeš
        podijeliti sa svojim prijateljima. Pokreni da bi vidjeo/la primjer.
      2-3 Artist Functions 2_instruction: Funkcije ti omogućuju da definiraš nove
        blokove! Premjestili smo blokove za crtanje kvadrata u funkciju sa nazivom
        "nacrtaj kvadrat". Možeš li iskoristiti funkciju "nacrtaj kvadrat" da bi napravio/la
        naočale? Kvadrati su odvojeni jedan od drugog za 75 piksela.
      2-3 Artist Functions 3_instruction: Promijeni funkciju da bi se nacrtao kvadrat
        sa stranicama od 115 i onda nacrtaj veće naočale. Kvadrati su sada odmaknuti
        za 45 piksela.
      2-3 Artist Functions 4_instruction: Iskoristi blok "ponavljaj" da bi se dobila
        ova 3 kvadrata.
      2-3 Artist Functions 7_instruction: 'Iskoristi "nacrtaj kuću" funkciju da bi
        nacrtao/la dvije kuće koristeći dva različita parametra.(Savjet: prva kuća
        je 100 piksela).'
      2-3 Artist Functions 9_instruction: Pogledaj ovu funkciju za sniježne pahuljice.
        Eksperimentiši sa njom da bi kreirao/la zimsku idilu! Ovo je level za slobodno
        igranje, tako da nema zadatka koji se mora riješiti. Zabavi se dobro!
      2-3 Artist Loops 1_instruction: Da bi se dovršila ćelija, možeš li napraviti
        šestougaonik sa stranicama dugim 100 piksela? Zapamti da ovo znači da trebaš
        okrenuti za 60 stepeni!
      2-3 Artist Loops 10_instruction: "Šta se dogodi sa ovim dizajnom ako načinimo
        zadnji korak upola manjim?  "
      2-3 Artist Loops 11_instruction: Hadje da sada postavimo *još jednu* petlju
        koja će obuhvatiti našu čitavu kreaciju! Nemoj zaboraviti da dodaš ugao na
        kraju vanjske petlje.
      2-3 Artist Loops 2_instruction: Sada iskoristi blok za ponavljanje da bi napravio
        oklop za ćeliju.
      2-3 Artist Loops 4_instruction: Hoćeš li da vidiš šta se dogodi ako ponovimo
        ovaj oblik iznova i iznova koristeći petlju?
      2-3 Artist Loops 5_instruction: Hadje sada da napravimo malu promjenu u petlji
        i vidimo kako će se naša slika promijeniti.
      2-3 Artist Loops 6_instruction: Dodaj još jedan pokret i još jedan okret unutar
        petlje i provjeri kako se naš dizajn mijenja.
      2-3 Artist Loops 7_instruction: Možemo koristiti petlje za pravljenje raznih
        poligona. Možeš li napraviti romb unutar ovog šestouagonika?
      2-3 Artist Loops 8_instruction: Hadje da stavimo oba elementa u petlju.
      2-3 Artist Loops 9_instruction: Sada ćemo prolaziti kroz iste elemente, ali
        ćemo dodati određenu razdaljinu između njih.\r Koristi isti kod kao i prije,
        ali dodaj korak naprijed na kraju vanjske petlje.
      2-3 Artist Loops New 1_instruction: Hajde da nacrtamo glavu ovog robota! Možeš
        li napraviti kvadrat sa stranicama od 100 piksela?
      2-3 Artist Loops New 10_instruction: Hajde da spojimo nekoliko V-ova zajedno
        tako što ćemo ih crtati koristeći petlju.
      2-3 Artist Loops New 11_instruction: Hajde da ih ovaj put nacrtamo 24 puta.
        Dodaj u ovaj kod okret ulijevo za 30 stepeni i stavi sve u blok ponavljanja.
      2-3 Artist Loops New 12_instruction: |
        Nacrtaj dijamant sa stranicama od 100 piksela.
      2-3 Artist Loops New 13_instruction: Sada nacrtaj dijamant 3 puta koristeći
        petlju.
      2-3 Artist Loops New 14_instruction: Hajde sada da nacrtamo dijamant 10 puta
        ali zarotiraj za 90 stepeni između svakog dijamanta.
      2-3 Artist Loops New 15_instruction: Nacrtaj nešto zabavno.
      2-3 Artist Loops New 2_instruction: Evo dio koda koji si koristio/la za crtanje
        kvadrata. Šta se desi ako pokreneš ovaj kod 4 puta koristeći blok ponavljanja?
      2-3 Artist Loops New 9_instruction: Nacrtaj jednostavno slovo V koje ima obje
        strane od 50 piksela.
      2-3 Artist Match Hex Pic_instruction: 'Upari: Pomozi da se ovaj Šesterougao
        završi.'
      2-3 Artist Match Rho Pic_instruction: 'Sparivanje: Završi nepotpun kod.'
      2-3 Artist Match Sq Pic_instruction: 'Sparivanje: Dovrši nepotpun kod'
      2-3 Artist Match Tri pic_instruction: 'Uparivanje: Dodaj kod koji nedostaje.'
      2-3 Artist Nested Loops 1_instruction: Do sada smo koristili petlje za crtanje
        raznih oblika, ali znaš li da možeš staviti petlju unutar druge petlje?\r
        Ponavljaj ovaj cijeli blok 3 puta da bi nacrtao uzorak.
      2-3 Artist Nested Loops 10_instruction: Ponavljaj ovaj kod 12 puta da bi se
        uzorak dovršio.
      2-3 Artist Nested Loops 11_instruction: Ponavljaj ovaj kod 4 puta da bi se uzorak
        dovršio. Okreni za 90 stepeni nakon svakog kruga.
      2-3 Artist Nested Loops 12_instruction: Ponavljaj ovaj kod 12 puta da vi se
        kovrdže dovršile.
      2-3 Artist Nested Loops 2_instruction: Sada ponovi trokut 6 puta. Nakon svakog
        trokuta, morati ćeš okrenuti za 60 stepeni prije nego nacrtaš slijedeći trokut.
      2-3 Artist Nested Loops 3_instruction: Morati ćeš ponoviti trokut 12 puta da
        bi se nacrtao uzorak. Podijeli broj stepeni kruga (360) za broj oblika koje
        crtaš (12) da bi se odredilo za koliko se treba rotirati nakon crtanja svakog
        oblika.
      2-3 Artist Nested Loops 4_instruction: 'Ponovi ovaj dijamant 12 puta da bi se
        nacrtao cvijet. Savjet: 12 dijamanata je identično sa crtanjem 12 trokuta
        koje smo već izvršili - za koliko trebaš rotirati nakon svakog oblika?'
      2-3 Artist Nested Loops 5_instruction: Nacrtaj prozore za ovu zgradu koristeći
        ugniježdenu petlju. Prozori su dugi 20 piksela i razmaknuti za 20 piksela.
      2-3 Artist Nested Loops 6_instruction: Ovaj dinosaur ima 8 šiljaka uzduž repa;
        svaki šiljak je dug 30 piksela. Ponovi trokut 8 puta, ali pazi da napraviš
        korak naprijed nakon crtanja svakog od njih.
      2-3 Artist Nested Loops 7_instruction: Ponovi ovaj trokut 10 puta da bi nacrtao
        sunce. Morati ćeš se pomaknuti i rotirati nakon svakog trokuta. Možeš skužiti
        za koliko stepeni trebaš rotirati tako što ćeš podijeliti broj stepeni kruga
        sa brojem oblika koje crtaš.
      2-3 Artist Nested Loops 8_instruction: Hajmo dodati malo trave u našu sliku.
        Buseni trave su razmaknuti za 50 piksela.
      2-3 Artist Nested Loops 9_instruction: Završiti ćemo ovu sliku tako što ćemo
        dodati svijet. Ponovi dijamant 12 puta da bi se nacrtao tvoj cvijet.
      2-3 Artist Nested Loops Free Play_instruction: A sada slobodno igranje. Nacrtaj
        nešto zabavno koristeći ugniježdene petlje.
      2-3 Bee Conditionals 1_instruction: Zdravo! Ja sam pčela. Pomozi mi da pokupim
        nektar iz cvijeta.
      2-3 Bee Conditionals 10_instruction: |
        Ljubičasti cvjetovi mogu imat ili 1 ili 0 za nektar. Pazi da ne pokupiš nektar iz ljubičastog cvijeta koji ga uopšte nema.\r
      2-3 Bee Conditionals 11_instruction: Pokupi nektar iz cvjetova koji ga imaju.
      2-3 Bee Conditionals 12_instruction: Koristi petlju za provjeru nektra u cvijetu
        i skupljanju nektra iz svih ovih cvjetova.
      2-3 Bee Conditionals 13_instruction: |
        Pokupi nektar i napravi med. Savjet: šta se desi ako upotrijebiš "ako nektar" uvjet na crvenom cvijetu? Možeš li ovo izvršiti sa petljom?
      2-3 Bee Conditionals 14_instruction: Pokupi nektar i napravi med. Pazi da ne
        pokupiš nektar iz ljubičastog cvijeta koji ga uopšte nema.
      2-3 Bee Conditionals 15_instruction: Pokupi nektar iz svih naših cvjetova.
      2-3 Bee Conditionals 2_instruction: Zdravo! Ja sam pčela. Pomozi mi da pokupim
        sav nektar iz cvjetova. Koristi petlju.
      2-3 Bee Conditionals 3_instruction: Pomozi mi da pokupim sav nektar iz cvjetova
        i napravim med. Koristi petlju.
      2-3 Bee Conditionals 4_instruction: Pomozi mi da pokupim sav nektar iz cvjetova
        i napravim sav med.
      2-3 Bee Conditionals 5_instruction: Ljubičasti cvjetovi mogu imat ili 1 ili
        0 za nektar, ali ne znaš koji i moraš to provjeriti! Pazi da ne pokupiš nektar
        iz ljubičastog cvijeta koji ga uopšte nema. Provjeri da li je nektar jednak
        1 korištenjem "ako" bloka.
      2-3 Bee Conditionals 6_instruction: Koristeći "if" blok, provjeri da li ovaj
        cvijet ima nektra na raspolaganju.
      2-3 Bee Conditionals 7_instruction: Pokupi nektar iz svakog cvijeta pod uslovom
        da cvijet ima nektra.
      2-3 Bee Conditionals 8_instruction: Ova livada ima crvene i ljubičaste cvjetove.
        Crveni cvjetovi imaju znanu količinu nektra, dok ljubičasti cvjetovi imaju
        nepoznatu količinu nektra. Pokupi sav nektar.
      2-3 Bee Conditionals 9_instruction: Pokupi sav nektar iz svakog cvijeta.
      2-3 Bee Conditionals Assessment 1_instruction: 'Procjena: Pokupi sav nektar.
        Pazi da ne pokupiš nektar iz ljubičastog cvijeta ako ga cvijet uopšte nema.'
      2-3 Bee Debugging 1_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging 10_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging 2_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging 3_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging 4_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging 5_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med. Sada možeš koristiti pokretanje
        programa i otkrivanje grešaka u koracima.
      2-3 Bee Debugging 6_instruction: 'Ovi blokovi me stvarno muče. Popravi grešku(e)
        da bi se pokupio sav nektar i napravio sav med. '
      2-3 Bee Debugging 7_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging 8_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging 9_instruction: Ovi blokovi me stvarno muče. Popravi grešku/greške
        da bi se pokupio sav nektar i napravio sav med.
      2-3 Bee Debugging Assessment 1_instruction: 'Procjena: Ovi blokovi me stvarno
        muče. Popravi grešku(e) da bi se pokupio sav nektar i napravio sav med.'
      2-3 Bee Functions 1_instruction: Funkcije su blokovi koda koji izvršavaju određeni
        zadatak. Upotrijebi "pokupi 2 nektra" funkciju da bi se pokupio nektar iz
        svakog cvijeta.
      2-3 Bee Functions 10_instruction: Ljubičasti cvjetovi mogu imati 1 ili 0 za
        nektar. Kreiraj funkciju kojom će se pokupiti nektar iz ljubičastog cvijeta
        samo onda kada ga on ima.
      2-3 Bee Functions 2_instruction: Funkcije su blokovi koda koji izvršavaju određeni
        zadatak. Upotrijebi "pokupi 5" funkciju da bi se pokupilo 5 nektara. Sjeti
        se da upotrijebiš petlju da bi se postigao blok brojanja.
      2-3 Bee Functions 3_instruction: Pokupi sav nektar iz svakog cvijeta.
      2-3 Bee Functions 4_instruction: Funkcije "pokreni se i pokupi nektar" funkcije
        čine da se pčela okrene, pokupi nektar i onda vrati odakle je krenula. Upotrijebi
        ovu funkciju da bi se pokupio sav nektar.
      2-3 Bee Functions 5_instruction: Sada imamo više nektra nego cvjetova. Izmjeni
        datu funkciju da bi se pokupila 4 nektra i upotrijebi je za kupljenje svog
        nektra iz svih cvjetova.
      2-3 Bee Functions 6_instruction: Sada upotrijebi istu funkciju da bi se pokupio
        nektar iz tri cvijeta.
      2-3 Bee Functions 7_instruction: Ovi cvjetovi su sada udaljeni. Izmjeni datu
        funkciju i upotrijebi je da bi se pokupio sav nektar iz cvjetova.
      2-3 Bee Functions 8_instruction: Kreiraj vlastitu funkciju koja kupi 7 nektara,
        pokreće naprijed, i pravi 7 medova. Upotrijebi funkciju da bi se sakupio nektar
        iz svakog cvijeta i napravio med u svakoj saći meda.
      2-3 Bee Functions 9_instruction: Kreiraj vlastitu funkciju koja ide niz putanju,
        pravi med i onda vraća pčelu na početak (vrh) putanje.
      2-3 Bee Functions Assessment 1_instruction: 'Procjena: Upotrijebi datu funkciju
        da bi se sakupio nektar iz svakog cvijeta.'
      2-3 Bee Functions Assessment 2_instruction: 'Porcjena: Upotrijebi funckiju za
        pravljenje 3 meda u isto vrijeme.'
      2-3 Bee Loops 1_instruction: 'Svaki cvijet sadrži jedinicu nektra. Sakupi nektar
        iz svakog od cvjetova. '
      2-3 Bee Loops 10_instruction: Možeš li upotrijebiti "dok" petlju unutar druge
        dvije petlje da bi se sakupio sav nektar?
      2-3 Bee Loops 11_instruction: Upotrijebi "dok" petlje za sakupljanje svog nektra
        iz cvjetova u ovoj livadi.
      2-3 Bee Loops 12_instruction: Upotrijebi "dok" petlje za sakupljanje svog nektra
        iz cvjetova u ovoj livadi.
      2-3 Bee Loops 13_instruction: 'Procjena: Upotrijebi blok za ponavljanje da bi
        sakupio/la sav nektar.'
      2-3 Bee Loops 1A_instruction: Zdravo ja sam pčela. Možeš li mi pomoći da sakupim
        nektar iz ovih cvjetova?
      2-3 Bee Loops 2_instruction: Upotrijebi petlju za sakupljanje nektra i pravljenje
        meda.
      2-3 Bee Loops 2A_instruction: Možeš li izvršiti isti zadatak na lakši način
        pomoću petlje?
      2-3 Bee Loops 3_instruction: Sakupi nektar iz svakog cvijeta i napravi med u
        svakoj saći meda.
      2-3 Bee Loops 3A_instruction: Možeš li upotrijebiti petlju da sakupiš sav taj
        nektar?
      2-3 Bee Loops 3B_instruction: Sada upotrijevi novi blok za ponavljanje da bi
        sakupio/la sav nektar i napravio/la sav med.
      2-3 Bee Loops 4_instruction: Upotrijebi sličnu petlju kao u prethodnom zadatku,
        ali sada ubaci zaokret.
      2-3 Bee Loops 4A_instruction: "Šta će se dogoditi ako ponoviš ovaj slijed 3
        puta? Ne zaboravi napraviti med na kraju!"
      2-3 Bee Loops 5_instruction: Upotrijebi petlju da bi se išlo prema dolje i sakupi
        nektar.
      2-3 Bee Loops 6_instruction: Upotrijebi petlju za sakupljanje nektra iz svakog
        cvijeta i napravi med u svakom saću meda.
      2-3 Bee Loops 7_instruction: Stavi ove blokove u petlju da bi se sakupio nektar
        iz svakog cvijeta.
      2-3 Bee Loops 8_instruction: Ovi ljubičasti cvjetovi imaju nepoznatu količinu
        nektra. Upotrijebi "dok nektar" petlju za sakupljanje svog nektra. Ova petlja
        će se izvršavati sve dok je uslov istinit. U ovom slučaju uslov je Nektar
        > 0.
      2-3 Bee Loops 9_instruction: '"Dok" petlja izvršava istu akciju na način kao
        kada bismo postavili "ako" izraz u petlju. Dodaj "dok" petlju u ovaj kod i
        izvrši isti zadatak.'
      2-3 Bee Loops Assessment 1_instruction: 'Procjena: Upotrijebi "dok" petlju i
        sakupi nektar iz ovog cvijeta.'
      2-3 Maze 1_instruction: 'Možeš li mi pomoći da uhvatim nevaljalu svinju? Naniži
        nekoliko "pokreni se naprijed" blokova i klikni na "Pokreni". '
      2-3 Maze 10_instruction: Vodi me do zelene zloće! (Pazi se TNT-a)
      2-3 Maze 11_instruction: Dovedi me do cvijeta jer osjećam glad! Koliko puta
        trebaš ponoviti blok ponavljanja?
      2-3 Maze 12 (copy 1)_instruction: 'Možeš li zamijeniti dva prethodna rješenja
        sa samo dva bloka? (Savjet: Kreiraj petlju koristeći "ponavljaj puta" blok.)'
      2-3 Maze 12 (copy 2)_instruction: 'Možeš li zamijeniti dva prethodna rješenja
        sa samo dva bloka? (Savjet: Kreiraj petlju koristeći "ponavljaj puta" blok.)'
      2-3 Maze 12 (old)_instruction: Dovedi me do svinje. Sada koristi "ponavljaj
        puta" blok!
      2-3 Maze 12_instruction: 'Možeš li zamijeniti ovih pet blokova sa samo dva bloka?
        (Savjet: Kreiraj petlju koristeći "ponavljaj puta" blok.)'
      2-3 Maze 13 (old)_instruction: Dovedi me do svinje. Sada koristi "ponavljaj
        dok" blok!
      2-3 Maze 13_instruction: Dovedi me do svinje koristeći samo dva bloka.
      2-3 Maze 14 (old)_instruction: Dovedi me do svinje sa "ponavljaj dok" blokom!
      2-3 Maze 14_instruction: Dovedi me do suncokreta! (Gdje je taj "ponavljaj puta"
        blok kada ga trebam?)
      2-3 Maze 15 (old)_instruction: Dovedi me do svinje sa "ponavljaj dok" blokom!
      2-3 Maze 15_instruction: Upotrijebi dvije petlje za dolaženje do svinje koristeći
        manji broj blokova.
      2-3 Maze 16 (old)_instruction: Dovedi me do svinje sa "ponavljaj dok" blokom!
      2-3 Maze 16 before_instruction: Dovedi me do svinje.
      2-3 Maze 16_instruction: Dovedi me do suncokreta. Stavi niz radnji u petlju!
      2-3 Maze 2_instruction: Svinja mi je nakostriješila perje. Pomozi mi da dođem
        do nje!
      2-3 Maze 3_instruction: Odredi putanju i dovedi me do šašave svinje. Izbjegni
        TNT ili će perje letjeti svuda!
      2-3 Maze 4_instruction: Vodi me do zelene zloće! (Pazi se TNT-a)
      2-3 Maze 5_instruction: Vodi me do zelene zloće! (Pazi se TNT-a)
      2-3 Maze 6_instruction: Smiri se i pomozi mi da nađem nevaljalu svinju. Inače
        ću se naljutiti!
      2-3 Maze 7_instruction: Vodi me do zelene zloće! (Pazi se TNT-a)
      2-3 Maze 8_instruction: Dovedi me do svinje!
      2-3 Maze 9_instruction: Vodi me do zelene zloće! (Pazi se TNT-a)
      2-3 Maze Loops 1_instruction: Možeš li me dovesti do svinje koristeći 5 blokova?
      2-3 Maze Loops 17_instruction: Dovedi me do suncokreta!
      2-3 Maze Loops 18_instruction: Dovedi me do suncokreta!
      2-3 Maze Loops 19_instruction: Dovedi me do suncokreta!
      2-3 Maze Loops 20_instruction: Dovedi me do suncokreta!
      2-3 Maze Loops 21_instruction: Dovedi me do suncokreta!
      2-3 Maze Loops Assessment 1_instruction: 'Procjena: Dovedi me do suncokreta
        koristeći samo 5 blokova! '
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: Dovedi me do svinje! Koji blokovi su se ponovili?
      2-3 Maze sq10v2_instruction: Dovedi me do svinje! Koji blokovi su se ponovili?
      2-3 maze sq11_instruction: Dovedi me do svinje! Koji blokovi su se ponovili?
      2-3 maze sq12_instruction: Možeš li zamijeniti prethodno rješenje sa petljom
        koja koristi "ponovi puta" blok?
      2-3 maze sq13_instruction: Draga osobo. Ja zombi. Moram...doći...do suncokreta.
        Napravi petlju sa "ponovi dok" blokom.
      2-3 maze sq14_instruction: Možeš li doći do suncokreta koristeći samo četiri
        bloka?
      2-3 maze sq15_instruction: Možeš li doći do suncokreta koristeći samo pet blokova?
      2-3 maze sq16_instruction: Ok, ovo je slično, ali malo različito. Možeš li ovo
        napraviti sa samo pet blokova?
      2-3 Maze sq2_instruction: Odredi putanju i dovedi me do šašave svinje. Izbjegni
        TNT ili će perje letjeti svuda!
      2-3 Maze sq3_instruction: Vodi me do zelene zloće! (Pazi se TNT-a)
      2-3 Maze sq4_instruction: Smiri se i pomozi mi da nađem nevaljalu svinju. Inače
        ću se naljutiti!
      2-3 Maze sq5_instruction: Dovedi me do svinje! Koliko puta moraš ponoviti blok?
      2-3 Maze sq6_instruction: 'Možeš li zamijeniti prethodno rješenje sa samo dva
        bloka? (Savjet: Napravi petlju koristeći "ponovi puta" blok.)'
      2-3 Maze sq7_instruction: Dovedi me do zelenog nametljivca koristeći samo tri
        bloka.
      2-3 Maze sq8_instruction: Dovedi me do svinje! (Gdje je taj "ponovi puta" blok
        kada ga trebam?)
      2-3 Maze sq9_instruction: Kreiraj petlje da bi došao/la do svinje koristeći
        manje blokova.
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Pomjeranjem naprijed pomozi ptici da uhvati nevaljalu
        svinju
      4-5 Artist 1_instruction: 'Pomozi mi da završim crtanjem moje kutije. (Svaka
        linija je duga 300 piksela) '
      4-5 Artist 10_instruction: Pritisni "Pokreni" da bi provjerio/la svoj kod. Onda
        ga ponovi dovoljno puta da bi se crtanje dovršilo. Boje će biti različite
        pri svakom pokretanju.
      4-5 Artist 11_instruction: Završi zelene linije. Linije su duge 300 piksela
        i razmaknute za 15 piksela.
      4-5 Artist 2_instruction: Možeš li ponoviti ovaj kod da bi dovršio/la kvadrat?
      4-5 Artist 3.5_instruction: Ok, pokušaj da skontaš sta se desi ako pokreneš
        ovaj kod (ili pritisni "Pokreni" da bi ga probao/la). Onda ponovi dovoljno
        puta da bi se crtež dovršio. Boje će (najvjerovatnije) biti različite pri
        svakom pokretanju.
      4-5 Artist 3_instruction: Ovaj trokutasta cvijetna gredica ima obim od 600.
        Duga strana ima dužinu od 200. Nacrtaj pravougaonik.
      4-5 Artist 4_instruction: Koliko krug ima stepeni? Ponavljaj blokove kroz petlju
        za bi nacrtao krug boja.
      4-5 Artist 5_instruction: Koji ugao koristiš?
      4-5 Artist 6_instruction: Ovaj jednakostranični trougao ima sva tri ugla od
        60 stepeni. Svaka strana ima 200 piksela. Dovrši crtanje.
      4-5 Artist 7_instruction: Ovaj pravougli trokut ima uglove od 30, 60 i 90 stepeni.
        Hipotenuza ima dužinu dva puta veću od visine trokuta od 100 piksela. Završi
        ovaj crtež.
      4-5 Artist 8_instruction: Središnja linija ovog fudbalskog terena je okomita
        na granične linije. Ovaj teren ima obim od 800 piksela i dužinu od 240 piksela.
        Koliko je širok ovaj teren? Nacrtaj granice i središnju liniju.
      4-5 Artist 9_instruction: Nacrtaj drugu polovicu tako da je crtež simetričan.
        Trokutovi su jednakostranični dugi 50 piksela.
      4-5 Artist Assessment 1_instruction: 'Procjena: Koristi petlju da bi se nacrtao
        jednakostranični trokut. Svaka stranica je duga 300 piksela.'
      4-5 Artist For Loops 1_instruction: Stavi brojeve od 1 do 10 u blokove namijenjene
        za širinu i pokreni kod.
      4-5 Artist For Loops 11_instruction: Dovrši "for" blok tako da broji 0, 20,
        40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'Šta se desi ako zamijeniš "od" i "do"
        brojeve? Dovrši "for" blok tako da broji 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: 'Ovaj dizajn je započeo bez "for" petlje
        i ima previše blokova! Upotrijebi "for" blok da bi se spirala završila. Savjet:
        dužina zadnje linije je 250 piksela.'
      4-5 Artist For Loops 14_instruction: 'Neko je započeo ovaj kod, ali je shvatio/la
        da mora postojati brži način! Upotrijebi "for" blok da bi zamijenio/la određeni
        broj blokova i završio/la trokutastu spiralu. (Savjet: dužina zadnje linije
        je 300 piksela.'
      4-5 Artist For Loops 15_instruction: 'Neko je započeo ovaj kod ali je shvatio/la
        da mora postojati brži način! Upotrijevi "od-do" blok da bi se dovršila šestougaona
        spirala. (Savjet: dužina zadnje linije je 200 piksela.'
      4-5 Artist For Loops 2_instruction: |
        This is a "for" block. Instead of typing
        1,2,3... 10, the "for" block can repeat the blocks inside it and count the
        numbers for you. Place the number 10 into the "to" section of the "for"
        block.
      4-5 Artist For Loops 3_instruction: Kako možemo brojati od 1 do 50? Izmjeni
        "od-do" blok.
      4-5 Artist For Loops 4_instruction: Dovrši "od-do" blok tako da broji od 1 do
        10 sa pomakom od 1.
      4-5 Artist For Loops 6_instruction: Nacrtaj kvadrat sa stranicama od 50, 60,
        70, 80 i 90 piksela. Morati ćeš koristiti "nacrtaj kvadrat" funkciju pet puta.
      4-5 Artist For Loops 7_instruction: 'Nacrtaj iste kvadrate ali upotrijebi "broji
        sa" blok da bi se promijenila veličina kvadrata. Postavi "brojač" blok u "nacrtaj
        kvadrat" funkciju. Savjet: Nalazi se u Varijable kategoriji.'
      4-5 Artist For Loops 8_instruction: Možeš li dovršiti program postavljanjem
        blokova unutar "od-do" bloka koji broji od 10 do 200 sa pomakom od 10? Blok
        "od-do" možeš pronaći u kategoriji Petlje.
      4-5 Artist For Loops 9_instruction: Ovi krugovi su veličine od 5, 10, 15, 20,
        25, 30 i 35. Nacrtaj krugove koristeći "od-do" blok.
      4-5 Artist Free Draw 1_instruction: Vrijeme za slobodno crtanje! Nacrtaj bilo
        šta što ti padne na pamet.
      4-5 Artist Functions 1_instruction: Upotrijebi petlju ponavljanja za crtanje
        ovog trokuta.
      4-5 Artist Functions 10a_instruction: Stavi ovaj kod u 'nacrtaj pahulju snijega'
        funkciju i zamijeni  broj 50 sa parametrom 'veličina'. Ova funkcija je već
        pozvana za pravljenje pahulje od 100 piksela.
      4-5 Artist Functions 10b_instruction: 'Upotrijebi ''nacrtaj pahulju snijega''
        funkciju za kreiranje pahulja različitih veličina. Savjet: prva pahulja je
        dužine od 25 i svaka pahulja je duplo veća od one prije nje.'
      4-5 Artist Functions 11_instruction: 'Ova "nacrtaj šestougaonik" funkciju koristeći
        "nacrtaj trokut" funkciju. Dovrši šestougaonik funkciju. (Savjet: Šestougaonik
        ima šest stranica, svaka duga 100 piksela)'
      4-5 Artist Functions 12_instruction: 'Dovrši ''nacrtaj talas'' funkciju. Svaki
        talas se sastoji od Gornjeg i Donjeg talasa. Savjet: Nacrtaj 5 plavih talasa.'
      4-5 Artist Functions 13 Free play_instruction: Evo nekih funkcija za crtanje
        planeta, zvijezda, raketa i robota. Upotrijebi ih kako god želiš da bi napravio/la
        slike koje možeš podijeliti sa svojim prijateljima.
      4-5 Artist Functions 14 Free play_instruction: Evo ovdje ti dajemo nekoliko
        funkcija. Upotrijebi ih kako god želiš unutar jedne ili više petlji da bi
        napravio/la slike koje možeš podijeliti sa svojim prijateljima. Klikni na
        "Pokreni" da bi vidjeo/la primjer.
      4-5 Artist Functions 15 Assessment_instruction: 'Procjena: Upotrijebi "nacrtaj
        kvadrat" funkciju za pravljenje kvadrata. Kvadrati su od 50, 100 i 150 piksela.'
      4-5 Artist Functions 2a_instruction: Sada stavi ove blokove u novu funkciju
        sa nazivom "nacrtaj mali trokut" i pozovi je.
      4-5 Artist Functions 2b_instruction: Sada napravi funkciju sa nazivom "nacrtaj
        mali trokut" koristeći obezbjeđene blokove.
      4-5 Artist Functions 3_instruction: 'Sada napravi funkcije "nacrtaj trokut srednje
        veličine" i "nacrtaj veliki trokut". Funkcija "nacrtaj mali trokut" je već
        data. Trokutovi imaju stranice od 50 (mali), 100 (srednje veličine) i 150
        (veliki). '
      4-5 Artist Functions 4_instruction: Ova nova "nacrtaj trokut" funkcija ima parametar
        i može odraditi sve što i tri funkcije od prije. Nacrtaj iste trokutove koristeći
        ovu novu funkciju.
      4-5 Artist Functions 5_instruction: Možeš li promijeniti "nacrtaj trokut" funkciju
        u "nacrtaj kvadrat" funkciju da bi se promijenio crtež?
      4-5 Artist Functions 6_instruction: 'Upotrijebi "nacrtaj kvadrat" i "nacrtaj
        trokut" funkcije da bi se nacrtala kuća. (Savjet: stranice kvadrata imaju
        200 piksela)'
      4-5 Artist Functions 6b_instruction: Upotrijebi funkcije za crtanje kvadrata
        i trokuta zajedno sa drugim blokovima da bi se napravila kuća. Dodaj ove funkcije
        u "nacrtaj kuću" funkciju i pozovi je.
      4-5 Artist Functions 7_instruction: Upotrijebi "nacrtaj kuću" funkciju za crtanje
        kuća koje su veličine od 100 i 50 piksela. Ove dvije kuće su razmaknute za
        50 piksela.
      4-5 Artist Functions 8_instruction: Funkcija "nacrtaj cvijet" ima parametar
        koja ti omogućava da postaviš visinu stabljike. Postavi je na 200 i vidi šta
        će se desiti.
      4-5 Artist Functions 9_instruction: Nacrtaj ova 3 cvijeta. Visina prvog je 100,
        a visina svakog slijedećeg je za 50 piksela veća od visine prethodnog cvijeta.
        Cvjetovi su također razmaknuti za 100 piksela.
      4-5 Artist Patterns 1_instruction: Možeš li nacrtati ovaj kvadrat korištenjem
        petlje? Svaka stranica je 20 piksela duga.
      4-5 Artist Patterns 10_instruction: 'Ovaj kod crta dva reda šestougaonika -
        ponovi ovo sve 4 puta da bi se dobilo saće meda. Savjet: Morati ćeš skočiti
        nazad za 120 piksela u vanjskoj petlji da umjetnik ne bi crtao izvan ekrana.'
      4-5 Artist Patterns 11_instruction: 'Koliko puta ovo trebaš ponoviti da bi nacrtao/la
        pola kruga? Savjet: ako krug ima 360 stepeni i svaka petlja pomjera za 3 stepena,
        koliko puta moraš ponoviti da bi se dobio puni krug?'
      4-5 Artist Patterns 12_instruction: Ako kopiraš tu petlju i okreneš lijevo umjesto
        desno, šta će se desiti? Možeš li to ponoviti da bi nacrtao/la ovaj talas?
      4-5 Artist Patterns 13_instruction: Hajde sada da ponovimo u petlji ovo sve
        4 puta da bismo napravili okvir za ovu sliku. Pazi na čoškove - ne možeš samo
        jednostavno okrenuti za 90 stepeni! Ako u petlji vršimo pomak za 3 stepena
        i okretanje 60 puta čini pola kruga, koji od ovih blokova koda će napraviti
        četvrtinu kruga kojeg trebamo za uglove?
      4-5 Artist Patterns 2_instruction: Ako postaviš svoju petlju za crtanje kvadrata
        unutar druge petlje, to onda zovemo ugniježdena petlja. Šta to trebaš dodati
        svojoj vanjskoj petlji da bi se svih 15 kvadrata postrojilo jedan pored drugog?
      4-5 Artist Patterns 3_instruction: Hajde sada da idemo za jedan nivo dublje!
        Ugnijezdili smo čitav blok koda unutar druge petlje, ali moraš vratiti umjetnika
        na mjesto da bi nacrtao/la slijedeću liniju. Koji od ovih blokova koda možeš
        postaviti na kraj vanjske petlje da bi nacrtao/la čitavu mrežu?
      4-5 Artist Patterns 4_instruction: Ovaj dijamant ima stranice od 50 piksela
        i uglove od 120 i 60 stepeni. Upotrijebi petlju za crtanje.
      4-5 Artist Patterns 5.5_instruction: Koliko puta moraš ponoviti ovaj blok da
        bi nacrtao čitavu mrežu dijamanata?
      4-5 Artist Patterns 5_instruction: Hajde da to ponovimo da bismo dobilired od
        6 dijamanata. Primjeti da smo promijenili kod za dijamanta tako da ponavlja
        3 puta umjesto 2 puta. Zašto misliš da smo to uradili?
      4-5 Artist Patterns 6_instruction: Koliko puta trebaš ponoviti ovaj blok da
        bi nacrtao čitavu mrežu dijamanata?
      4-5 Artist Patterns 7_instruction: Hajde da promijenimo kod prethodnog zadatka
        da bismo mogli napraviti komplikovaniji uzorak. Primjeti kako se dijamanti
        sada preklapaju. Pokušaj promijeniti prvi "skok unazad" sa 100 na 50 (upola
        daleko). Koliko daleko sada treba umjetnik ići u drugom "skoku unazad"?
      4-5 Artist Patterns 8_instruction: Upotrijebi petlju za crtanje ovog šestougaonika
        sa dužinom stranice od 40 piksela i uglovima od 60 stepeni.
      4-5 Artist Patterns 9.5_instruction: Hajde da iskoristimo petlju u ovom kodu
        da bismo nacrtali dva reda šestougaonika. Primjeti kako je drugi red pomjeren
        udesno.
      4-5 Artist Patterns 9_instruction: 'Sada ponovi ovaj kod 3 puta da bi nacrtao/la
        čitav red. Savjet: svaki šestougaonike je 80 piksela širok od najdalje tačke
        idući s lijeva na desno.'
      4-5 Artist Patterns Free Play_instruction: Vrijeme za slobodno igranje - iskušaj
        svoju vještinu u kreiranju uzoraka po tvom izboru!
      4-5 Bee Conditionals - FC Test_instruction: |
        The bee only wants nectar right
        now. Not all objects are flowers, so check underneath EVERY CLOUD to see if
        it is hiding a flower. If it is, then you can gather nectar.
      4-5 Bee Conditionals 1 (copy 1)_instruction: Pčela ne može razabrati da li je
        ovo cvijet ili saće meda. Sakupi nektar samo iz cvjetova, ali prvo provjeri
        da li je određeni predmet cvijet ili saće meda.
      4-5 Bee Conditionals 1_instruction: Pčela ne može razabrati da li je ovo cvijet
        ili saće meda. Sakupi nektar samo iz cvjetova, ali prvo provjeri da li je
        određeni predmet cvijet ili saće meda.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: Pčela sada želi samo nektar. Zapamti, nisu
        svi objekti cvijeće. Prije nego što odlučiš skupiti nektar prvo provjeri da
        li je u pitanju cvijet.
      4-5 Bee Conditionals 3_instruction: Sada pčela želi samo da pravi med. Pobrini
        se da praviš med samo u saćima meda.
      4-5 Bee Conditionals 4 (copy 1)_instruction: Nepoznati objekt je ili cvijet
        ili saće meda. Koristi ako/inače blok za skupljanje nektra ako je u pitanju
        cvijet, ili za pravljenje meda ako je u pitanje saće meda.
      4-5 Bee Conditionals 4_instruction: Nepoznati objekt je ili cvijet ili saće
        meda. Koristi ako/inače blok za skupljanje nektra ako je u pitanju cvijet,
        ili za pravljenje meda ako je u pitanje saće meda.
      4-5 Bee Conditionals 5_instruction: Ispod tih oblaka imamo cvijeće ili saće
        meda. Koristi ako/inače blok za sakupljanje nektra u slučaju cvijeta, ili
        za pravljenje meda u slučaju saće meda.
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: Ovaj ljubičasti cvijet može imati 3, 2 ili
        1 za količinu nektra. Ovdje kombinujemo ako-inače blok sa drugim ako-inače
        blokom za kreiranje ako, inače-ako i inače bloka. Dovrši rješenje za sakupljanje
        nepoznate količine nektra.
      4-5 Bee Conditionals 7_instruction: Sjeti se da ljubičasti cvjetovi mogu imati
        3, 2 ili 1 za količinu nektra. Dovrši "provjeri ljubičasti cvijet" funkciju
        i upotrijebi je za sakupljanje svog nektra iz cvjetova.
      4-5 Bee Conditionals 8_instruction: Napiši funkciju unutar bloka pod nazivom
        "provjeri cvijet napravi med". Tvoja funkcija bi trebala provjeriti koliko
        nektra ljubičasti cvijet ima, a zatim ga sakupiti, pomjeriti se naprijed,
        i onda napraviti med.
      4-5 Bee Conditionals Assessment 1_instruction: 'Procjena: Ovaj kod je pogrešan.
        Dovrši "sakupi nektar ili napravi med" funkciju, i onda je pozovi da bi sakupio/la
        sav nektar i med. Sjeti se da ljubičasti cvjetovi mogu imati 3, 2 ili 1 za
        količinu nektra.'
      4-5 Bee Debugging 1_instruction: Ovi blokovi me stvarno muče. Možeš li ih popraviti?
      4-5 Bee Debugging 10_instruction: Nađi greške i popravi ih.
      4-5 Bee Debugging 11_instruction: Da li ovo broji tačno?
      4-5 Bee Debugging 2_instruction: Pomozi pčeli da sakupi nektar i napravi med.
      4-5 Bee Debugging 3_instruction: Nađi greške i popravi ih.
      4-5 Bee Debugging 4_instruction: Ovi blokovi ne rade. Šta je uzorak?
      4-5 Bee Debugging 5_instruction: Nešto nije sasvim dobro ovdje...
      4-5 Bee Debugging 6_instruction: Ljubičasti cvjetovi imaju neposnatu količinu
        nektra. Popravi ove blokove da bi se sakupio sav nektar iz cvijeta.
      4-5 Bee Debugging 7_instruction: Ovoj funkciji nešto nedostaje...
      4-5 Bee Debugging 8_instruction: Ova funkcija je u redu, ali nije upotrijebljena
        pravilno.
      4-5 Bee Debugging 9_instruction: Zašto pčela ne pravi dovoljno meda?
      4-5 Bee Debugging Assessment 1_instruction: 'Procjena: Popravi kod.'
      4-5 Bee Nested Loops 1_instruction: Upotrijebi petlju za sakupljanje cijelog
        nektra.
      4-5 Bee Nested Loops 2_instruction: 'Sakupi sav nektar iz svakog cvijeta. Upotrijebi
        ugniježdenu petlju. '
      4-5 Bee Nested Loops 3_instruction: Sakupi sav nektar tako što ćeš staviti početni
        kod u ugniježdenu petlju.
      4-5 Bee Nested Loops 4_instruction: 'Sakupi nektar iz svakog cvijeta i napravi
        med u svakom saću meda. Upotrijebi ugniježdenu petlju. '
      4-5 Bee Nested Loops 5_instruction: Sakupi sav nektar tako što ćeš napraviti
        uginiježdenu petlju.
      4-5 Bee Nested Loops 6_instruction: Sakupi sav nektar.
      4-5 Bee Nested Loops 7_instruction: Stavi ovu petlju unutar druge petlje da
        bi napravio ugniježdenu petlju i sakupi sav nektar iz cvjetova.
      4-5 Bee Nested Loops 8_instruction: 'Sakupi sav nektar iz ovih cvjetova pomoću
        ugniježdenih "dok" petlji. Zamijeni unutrašnji "ponovi puta" blok sa "dok"
        blokom. '
      4-5 Bee Nested Loops 9_instruction: Sakupi sav nektar iz ovih cvjetova tako
        što ćeš ugnijezditi "dok" petlju unutar "ponovi" bloka.
      4-5 Bee Nested Loops Assessment 1_instruction: 'Procjena: Sakupi sav nektar
        i napravi sav med koristeći petlje.'
      4-5 Bee Nested Loops Rows_instruction: Sakupi nektar iz redaka cvjetova! Koristi
        ugniježdenu petlju.
      4-5 Maze 1 (copy 1)_instruction: Draga osobo. Ja zombie. Morati...doći...do
        suncokreta.
      4-5 Maze 1_instruction: Draga osobo. Ja zombie. Morati...doći...do suncokreta.
      4-5 Maze 10_instruction: Možeš li doći do suncokreta koristeći samo četiri bloka?
      4-5 Maze 11_instruction: Možeš li doći do suncokreta koristeći samo šest blokova?
      4-5 Maze 12_instruction: Ok, ovo je malo drugačije. Možeš li ovo riješiti koristeći
        samo šest blokova?
      4-5 Maze 13_instruction: Dovedi me do svinje!
      4-5 Maze 14_instruction: Dovedi me do svinje! Koristi "Ponavljaj dok" blok.
      4-5 Maze 2 (copy 1)_instruction: Dovedi zombija do suncokreta, ali izbjegavaj
        mljackalo!
      4-5 Maze 2_instruction: Dovedi zombija do suncokreta, ali izbjegavaj mljackalo!
      4-5 Maze 3 (copy 1)_instruction: Morati... doći... do suncokreta.
      4-5 Maze 3_instruction: Morati... doći... do suncokreta.
      4-5 Maze 4 (copy 1)_instruction: Pokušaj koristiti blok "ponavljanja" da bi
        koristio/la manje blokova...
      4-5 Maze 4_instruction: Pokušaj koristiti blok "ponavljanja" da bi koristio/la
        manje blokova...
      4-5 Maze 5 (copy 1)_instruction: Možeš li riješiti ovaj zadatak korištenjem
        što manjeg broja blokova?
      4-5 Maze 5_instruction: Možeš li riješiti ovaj zadatak korištenjem što manjeg
        broja blokova?
      4-5 Maze 6 (copy 1)_instruction: Možeš li riješiti ovaj zadatak korištenjem
        što manjeg broja blokova?
      4-5 Maze 6_instruction: Možeš li riješiti ovaj zadatak korištenjem što manjeg
        broja blokova?
      4-5 Maze 7_instruction: Draga osobo. Ja zombie. Morati...doći...do suncokreta.
      4-5 Maze 8_instruction: Upotrijebi blok "ponavljanja" da bi doveo/la zombija
        do suncokreta. (Izbjegavaj mljackala!)
      4-5 Maze 9_instruction: Napravi petlju sa "ponavljaj dok" blokom.
      4-5 Maze Assessment 1_instruction: 'Procjena: Dođi do suncokreta.'
      4-5 Maze Conditionals 1_instruction: Upotrijebi "ponavljaj dok" blok da bi doveo/la
        zombija do suncokreta.
      4-5 Maze Conditionals 2_instruction: Upotrijebi "ponavljaj dok" blok da bi doveo/la
        zombija do suncokreta.
      4-5 Maze Conditionals 3_instruction: 'Upotrijebi "ako" blok da bi odredio kada
        trebam skrenuti. Savjet: trebaš samo još jedan blok, ali nauči kako da ga
        postaviš tako da to možeš odraditi samostalno slijedeći put.'
      4-5 Maze Conditionals 4_instruction: Ok, ovo je isto kao i posljednji zadatak,
        ali se moraš sjetiti kako si koristio/la "ako" i "ponavljaj" blokove zajedno.
      4-5 Maze Conditionals 5_instruction: Ja željeti suncokret! Upotrijebi "ako"
        blok da me dovedeš do tamo u najmanjem mogućem broju blokova.
      4-5 Maze Conditionals 6_instruction: Ja željeti suncokret! Upotrijebi "ako"
        blok da me dovedeš do tamo u najmanjem mogućem broju blokova.
      4-5 Maze Conditionals 7_instruction: Ok, hajde da to ponovimo za vježbu - ovo
        nije puno drugačije, ali pazi na mljackala!
      4-5 Maze Conditionals 8_instruction: '"Ako-inače" blokovi provjeravaju uslov,
        i onda izvršavaju jednu naredbu ili drugu. Da bi me doveo/la do suncokreta,
        pokušaj koristiti ovaj novi blok.'
      4-5 Maze Conditionals 9_instruction: Još jedna vježba za "ako-inače" blok. Možeš
        li to dobro odraditi pri prvom pokušaju?
      4-5 Maze Conditionals Assessment 1_instruction: Upotrijebi "ponavljaj dok" i
        "ako-inače" blok da bi me doveo/la do suncokreta koristeći što manje blokova.
      4-5 Nested Loops 1_instruction: 'Dovrši kod za crtanje ovih trokutova. Prvi
        dio smo odradili za tebe. Savjet: 3 trokuta zarotirani za 360 stepeni.'
      4-5 Nested Loops 10_instruction: Nacrtati zadnji red zvijezda na ovoj zastavi
        tako što ćeš ponavljati date blokove. Zvijezde su odmaknute za 50 piksela,
        ali zapamti da su zvijezde same 30 piksela široke.
      4-5 Nested Loops 11_instruction: Možeš li nacrtati ovih 10 kvadrata ovog trotoara
        koristeći ugniježdene petlje? Svaki kvadrat je širok 30 piksela.
      4-5 Nested Loops 12_instruction: Možeš li nacrtati ovih 36 trokutova koristeći
        ugniježdenu petlju?
      4-5 Nested Loops 2_instruction: 'Sada ugnijezdi ovu petlju unutar druge petlje
        da bi nacrtao/la 10 trokutova. Ovo se zove ugniježdena petlja. Savjet: Svih
        10 trokutova zatvaraju ugao od 360 stepeni.  '
      4-5 Nested Loops 3_instruction: |
        Napravi sunce tako što ćeš ugnijezditi početni kod u drugu petlju. Ovo se zove ugniježdena petlja.\r
      4-5 Nested Loops 5_instruction: Ponavljaj dati kod u petlji da bi se napravila
        vjetrenjača.
      4-5 Nested Loops 6_instruction: Možeš li nacrtati šestougaonik tako što ćeš
        pozivati kod za trokut u petlji?
      4-5 Nested Loops 7_instruction: 'Ponavljaj ovaj dizajn 10 puta. Za koliko moraš
        okrenuti pri svakoj petlji? (Savjet: Koliko je 360 podijeljeno sa 10?)'
      4-5 Nested Loops 8_instruction: 'Ponavljaj ovaj dizajn 6 puta. Za koliko moraš
        okrenuti pri svakoj petlji? (Savjet: Koliko je 360 podijeljeno sa 6?)'
      4-5 Nested Loops 9_instruction: Nacrtaj zube u ustima aligatora!
      4-5 Nested Loops Assessment 1_instruction: Upotrijebi ugniježdenu petlju za
        kompletiranje ovog dizajna.
      4-5 While Loops 1_instruction: Pomjeri me do rupe i napuni je sa dvije lopate
        zemlje koristeći "napuni" blok.
      4-5 While Loops 2_instruction: Pomjeri me do hrpe zemlje i ukloni je sa 5 zahvata
        lopate koristeći "ukloni" blok.
      4-5 While Loops 3_instruction: 'Pokreni me do hrpe i ukloni je do kraja, a onda
        se pomjeri do rupe i popuni je do kraja. Savjet: Koristi što manje blokova.'
      4-5 While Loops 4_instruction: 'Wow, pronašao sam stvarno duboku rupu! Ne znam
        koliko će mi zahvata lopatom trebati. Možeš li napraviti program koji je popunjava
        sve dok se zemlja ne izjednači? Savjet: Pokušaj koristiti "dok" petlju ovaj
        put.'
      4-5 While Loops 5_instruction: Wow, sada vidim dvije duboke rupe! Možeš li napisati
        program koji ih obje popunjava sve dok se zemlja ne izjednači?
      4-5 While Loops 6_instruction: Wow, sada vidim veliku hrpu zemlje! Možeš li
        napisati program koji je uklanja sve dok se zemlja ne izjednači?
      4-5 While Loops 7_instruction: Wow, sada vidim tri hrpe zemlje! Možeš li napisati
        program koji uklanja svaku od njih sve dok se zemlja ne izjednači?
      4-5 While Loops 8_instruction: ' Vidim tamo jako duboku rupu i jako veliku hrpu
        zemlje. Koliko zahvata lopate mi je potrebno da bi se zemlja poravnala? Savjet:
        Koristi "dok" petlju za oboje.'
      4-5 While Loops Assessment 1_instruction: Sada vidim puno rupa i hrpa. Pomozi
        mi da ih popunim i uklonim sve dok se zemlja ne poravna.
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      AllTheThings Applab - Turtle move with button_instruction: |
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      allthethings data blocks test_instruction: |
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings_moviebot_instruction: |
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: "Backed by a template #1. Please\nsign
        in to test applab levels (By design, applab levels only work if signed\nin.
        Normally, we make people sign in, but this is only enforceable for a whole\nscript
        and would be annoying to do for the allthethings script). \n"
      allthethings_template_backed2_instruction: |
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: |
        Do
        This
      App Lab test_instruction: uslov
      Applab allthethings onRecordEvent_instruction: |
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      AppLab_test02_instruction: |
        One sentence summary of the activity. Click to
        view full instructions.
      Artist - Nested Loops 1_instruction: 'Dovrši kod za crtanje ovih trokutova.
        Prvi dio smo odradili za tebe. Savjet: 3 trokuta zarotirani za 360 stepeni.'
      Artist - Nested Loops 10_instruction: Nacrtaj zadnji red zvijezda na ovoj zastavi
        tako što ćeš staviti u petlju obezbijeđene blokove. Zvijezde su razmaknute
        za 50 piksela, ali zapamti da su same zvijezde 30 piksela široke.
      Artist - Nested Loops 11_instruction: Možeš li nacrtati ovih 10 kvadrata ovog
        trotoara koristeći ugniježdenu petlju? Svaki kvadrat ima 30 piksela.
      Artist - Nested Loops 12_instruction: Možeš li nacrtati ovih 36 trokutova koristeći
        ugniježdenu petlju?
      Artist - Nested Loops 2_instruction: 'Sada ugnijezdi ovu petlju unutar druge
        petlje da bi nacrtao/la 10 trokutova. Ovo se zove ugniježdena petlja. Savjet:
        Svih 10 trokutova zatvaraju 360 stepeni.  '
      Artist - Nested Loops 3_instruction: |
        Napravi sunce tako što ćeš ugnijezditi početni kod u neku drugu petlju. Ovo se zove ugniježdena petlja.\r
      Artist - Nested Loops 5_instruction: Ponavljaj dati kod u petlji da bi se napravila
        vjetrenjača.
      Artist - Nested Loops 6_instruction: Možeš li nacrtati šestougaonik tako što
        ćeš pozivati kod za trokut u petlji?
      Artist - Nested Loops 7_instruction: 'Ponavljaj ovaj dizajn 10 puta. Za koliko
        se moraš okrenuti pri svakom prolasku kroz petlju? (Savjet: Koliko je 360
        podijeljeno sa 10?)'
      Artist - Nested Loops 8_instruction: 'Ponavljaj ovaj dizajn 6 puta. Za koliko
        se moraš okrenuti pri svakom prolasku kroz petlju? (Savjet: Koliko je 360
        podijeljeno sa 6?)'
      Artist - Nested Loops 9_instruction: Nacrtaj zube u ustima aligatora!
      Artist - Nested Loops Assessment 1_instruction: Upotrijebi ugniježdenu petlju
        za kompletiranje dizajna.
      Auto Open Function Editor_instruction: 'Možeš zvati funkcije unutar drugih funkcija!
        Koristeći tvoju "oblik" funkciju kao osnovu, kreiraj 3 kuće, svaka za 20 piksela
        veća nego prethodna, počevši od veličine od 50 piksela.  Korištenje brojač
        petlje može biti od pomoći. '
      Bee Recommended Blocks test_instruction: |
        Purple flowers may have either 1
        or 0 nectar, but you don't know which one! Be careful not to collect nectar
        from a purple flower if it doesn't have any. Check if the nectar is equal
        to 1 by using the if block.
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: Funkcija "ažuriraj-opasnost" bi trebala raditi
        kao funkcija "ažuriraj-metu" sa razlikom da se opasnost kreće s desne na lijevu
        stranu. Dovrši "ažuriraj-opasnost" funkciju da bi omogućio/la opasnosti da
        leti preko ekrana.
      Big Game Animation 4_instruction: |
        At this point in your game, your danger
        should run across the screen from right to left, and your target should run
        across from left to right. They don't ever come back on screen once they've
        left, but we'll take care of that later. Take a minute to make sure your
        game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: Kada si zadnji put radio/la na tvojoj igrici
        imali smo da naša meta i opasnost lete preko ekrana, ali se nikada ne vrate.
        Klikni na "Pokreni" da vidiš kako tvoja igra radi u ovom trenutku, i onda
        klikni na završi. Kasnije ćemo raditi na tome da se tvoji likovi pojave opet
        na ekranu nakon što su otišli.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your Danger should run across
        the screen from right to left, your Target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: Kada si zadnji put radio/la na tvojoj
        igrici imali smo da naša meta i opasnost lete preko ekrana, ali se nikada
        ne vrate. Klikni na "Pokreni" da vidiš kako tvoja igra radi u ovom trenutku,
        i onda klikni na završi. Kasnije ćemo raditi na tome da se tvoji likovi pojave
        opet na ekranu nakon što su otišli.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving Target and Danger, both of which return to the screen once
        they've left, and a Player that responds to keyboard input. Click "Run"
        to see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: Demo dovršenog projekta Velika Igra - Algebra
        pomoću računarstva
      Big Game Final_instruction: Uspjeo/la si! U ovom trenutku bi tvoja igrica trebala
        biti potpuno funkcionalna. Uživaj u svojoj igrici i napravi završne promjene.
        Kada si sretan/na sa svojim finalnim uradkom, klikni na Završi i onda možeš
        podijeliti link na tvoju igricu. Dobro odrađeno!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: Demo dovršenog projekta Velika Igra - Algebra
        pomoću računarstva
      Big Game Vars 1 (copy 1)_instruction: Hajde da počnemo sa svojom Velikom Igrom!
        Ovdje ćeš naći puno baznog koda kojeg češ eventualno zamijeniti svojim kodom,
        ali za sada ćemo samo brinuti oko toga kako definirati varijable. Klikni na
        "Pokreni" da vidiš kako igra izgleda sa podrazumijevanim vrijednostima.
      Big Game Vars 1_instruction: Hajde da počnemo sa svojom Velikom Igrom! Ovdje
        ćeš naći puno baznog koda kojeg češ eventualno zamijeniti svojim kodom, ali
        za sada ćemo samo brinuti oko toga kako definirati varijable. Klikni na "Pokreni"
        da vidiš kako igra izgleda sa podrazumijevanim vrijednostima.
      Big Game Vars 2 (copy 1)_instruction: Prvi korak da bi ova igra bila tvoja kreacija
        je da joj daš dobar Naziv. Klikni na uređivanje "naziva" i "podnaziva" variajbli
        i promijeni ih na nešto novo.
      Big Game Vars 2_instruction: Prvi korak da bi ova igra bila tvoja kreacija je
        da joj daš dobar Naziv. Klikni na uređivanje "naziva" i "podnaziva" variajbli
        i promijeni ih na nešto novo.
      Big Game Vars 3 (copy 1)_instruction: Hajde da postavimo pozadinu za tvoju novu
        igricu. Uredi 'bg' varijablu i selektuj novu pozadinsku Sliku iz padajućeg
        menija.
      Big Game Vars 3_instruction: Hajde da postavimo pozadinu za tvoju novu igricu.
        Uredi 'bg' varijablu i selektuj novu pozadinsku Sliku iz padajućeg menija.
      Big Game Vars 4 (copy 1)_instruction: Super! Sada možeš promijeniti varijable
        za tvog Igrača, Metu i Opasnost. Probaj se igrati se sa svim varijablama u
        ovom trenutku da bi učinio svoju igricu onako kako ti to želiš. Klikni na
        'završi' kada završiš.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: Napravi piramidu od tri nivoa.
        Nemamo nekih posebnih uputstava. Samo se igraj sa objektima sve dok to ne
        ostvariš!
      Busy Bee 2_instruction: |
        This bee has a lot of work to do! Do you notice any
        patterns that you can use to simplify your code?
      Busy Bee_instruction: |
        This bee has a lot of work to do! Do you notice any
        patterns that you can use to simplify your code?
      C3-Farmer While Loops 1_instruction: Dovedi me do rupe i popuni je sa dvije
        lopate zemlje koristeći "popuni" blok.
      C3-Farmer While Loops 2_instruction: Dovedi me do gomile zemlje i ukloni 5 lopata
        zemlje koristeći 'ukloni' blok.
      C3-Farmer While Loops 3_instruction: 'Dovedi me do gomile i ukloni sve. Zatim
        me dovedi do rupe i popuni je do kraja. Savjet: Koristi što manje blokova.'
      C3-Farmer While Loops 4_instruction: 'Wow, našao sam pravo duboku rupu! Ne znam
        koliko mi je lopata zemlje potrebno. Možeš li napisati program koji je popunjava
        sve dok zemlja nije poravnata? Savjet: Pokušaj korisitit "dok" petlju ovaj
        puta.'
      C3-Farmer While Loops 5_instruction: Wow, sada vidim dvije duboke rupe! Možeš
        li napisati program koji ih obje popunjava sve dok zemlja nije poravnata?
      C3-Farmer While Loops 6_instruction: Wow, sada vidim veliku gomilu zemlje! Možeš
        li napisati program koji uklanja zemlju sve dok zemlja ne bude poravnata?
      C3-Farmer While Loops 7_instruction: Wow, sada vidim tri gomile zemlje! Možeš
        li napisati program koji uklanja svaku od njih dok se zemlja ne poravna?
      C3-Farmer While Loops 8_instruction: ' Vidim stvarno duboku rupu i veoma veliku
        gomilu zemlje. Koliko lopata zemlje trebam premjestiti da bi se zemlja poravnala?
        Savjet: Koristi "dok" petlju za oboje.'
      C3-Farmer While Loops Assessment 1_instruction: Vidim jako mnogo rupa i gomila.
        Pomozi mi da premjestim zemlju tako da se sve poravna.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: Ovaj Blok Izvršenja je funkcija za množenje
        koja uzima dva broja i vraća proizvod dva broja. Promijeni ovaj blok tako
        da pomnoži 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: Ovdje smo ugnijezdili Blok Sabiranja unutar
        Bloka Množenja. Dovrši ovaj kod da bi pomnožio/la 3 sa (4 + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: Pretvori ovaj izraz u <some_shape>
        izvršenje.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: Pretvori ovaj izraz u <some_shape>
        izvršenje.
      Calc Circles of Eval 2_instruction: |
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: Dovrši Blok Izvršenja da ogovara ovom izrazu.
      Calc Circles of Eval 4_instruction: Ovom kodu nedostaje nekoliko Blokova Izvršenja
        - pobrini se da staviš sve u pravilnom redu.
      Calc Circles of Eval 5_instruction: Dovrši Blok Izvršenja da ogovara ovom izrazu.
      Calc Circles of Eval 6_instruction: Dovrši Blok Izvršenja da bi odgovarao ovom
        izrazu.
      Calc Circles of Eval 7_instruction: Dovrši Blok Izvršenja da ogovara ovom izrazu.
      Calc Circles of Eval 8_instruction: Dovrši Blok Izvršenja da ogovara ovom izrazu.
      Calc Circles of Eval 9_instruction: Dovrši Blok Izvršenja da ogovara ovom izrazu.
      Calc Circles of Eval Free Play_instruction: Vrijeme za slobodno igranje! Pokušaj
        upotrijebiti Blokove Izvršenja da bi napisao nekoliko svojih jednačina. Kako
        ugniježdavanje blokova na različite načine utiče na njihovo izvršenje?
      Calc Define Funcs 1 (copy 1)_instruction: Pogledajmo sada neke algebarske funkcije.
        Evo jedna funkcija f(x) = x + 1. Šta očekuješ da ova funkcija vrati ako joj
        dadneš 15 kao ulazni parametar?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: Napiši funkciju "f" koja uzima "x" kao parametar
        i vraća x - 10. Testiraj svoju funkciju sa f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: |-
        Your school is holding a bake sale, and
        you need to track the cost of making each cookie, the money paid, and the
        total profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r
        Write
        the function cost, which takes in the number of cookies you intend to sell,
        and returns the cost of making those cookies.
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: 'Vrijeme za slobodno igranje: Napiši funkcije i
        algorithme po tvom vlastitom izboru!'
      Calc Rocket 1 (copy 1)_instruction: |
        In the last puzzle you wrote a contract
        for the function "rocket-height" that states it has a range of Number, domain
        of Number, and should return the height of the rocket traveling at 15 m/s
        after a given number of seconds. Let's write an example case now for the
        height of the rocket at 3 seconds.\r
        \r
        \r
        \r
          \r
        \r
      Calc Rocket 1_instruction: "U posljednjem zadatku si napisao/la ugovor za funkciju
        \"visina-rakete\" koja ima Brojeve kao kodomenu i domenu, i koja vraća visinu
        rakete koja ide brzinom od 15 m/s nakon datog broja sekundi. Hajde sada da
        napišemo primjer za visinu rakete u trećoj sekundi.\\r\n\\r\n\\r\n\\r\n\\r\n
        \ \\r\n\\r\n "
      Calc Rocket 2_instruction: Odlično! Hadje da uradimo još jedan primjer prije
        nego napišemo funkciju. Koju visinu bi raketa trebala imati nakon 30 sekundi?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: Ovdje smo postavili varijablu "dob" na 17.
        Možeš li napisati izraz koji računa "dob" izraženu u mjesecima?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: Možeš li napisati izraz koji računa "dob" izraženu
        u godinama?
      Calc Vars 3 (copy 1)_instruction: Možeš li nadopuniti ovaj kod tako da može
        računati koliko sati ima u "dob" godina?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: Isto tako možemo postaviti vrijednosti varijabli koristeći
        druge varijable. Recimo da imaš brata koji je dvije godine mlađi od tebe.
        Možeš li postaviti novu varijable "dob-brata" koristeći tvoju "dob" varijablu?
      Code Studio Puzzle Challenge 1 - Artist_instruction: 'Nacrtaj liniju koja je
        duga 200 piksela. '
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels
        long. \n"
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Pokreći pčelu prema cvijetu
        i pokupi sav nektar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Nacrtaj kvadrat koristeći
        datu varijablu za dužinu.
      Code Studio Puzzle Challenge 12 - Artist_instruction: Dati kod crta jedan trokut.
        Dodaj kod u njega tako da crta trokutove u obliku šestougaonika.
      Code Studio Puzzle Challenge 12a - Artist_instruction: Dati kod crta jedan trokut.
        Dodaj kod u njega tako da crta trokutove u obliku šestougaonika.
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80,
        90, to 100 pixels long. \n"
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to
        140 pixels. \n"
      Code Studio Puzzle Challenge 2 - Artist_instruction: Sada dodaj okret i još
        jednu liniju. Linije su duge 200 piksela.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Nacrtaj kvadrat. Svaka
        stranica je 100 piksela duga.
      Code Studio Puzzle Challenge 4 - Artist_instruction: "Nacrtaj osmougaonik. Svaka
        \nstranica je 100 piksela duga.\n"
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: Dovedi Pčelu do cvijeta
        i pokupi nektar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: Cvjetovi sadrže određenu količinu
        nektra. Pokreći Pčelu prema cvijetu i pokupi nektar sa "pokupi nektar" blokom.
      Code Studio Puzzle Challenge 6 - Bee_instruction: Saća meda mogu sadržati određenu
        količinu meda. Sakupi nektar iz cvijeta i napravi med.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Pokreći Pčelu do cvijeta
        i sakupi nektar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        Oblak bi mogao
        skrivati cvijet ili saće meda. Sakupljaj nektar samo iz cvjetova. Med pravi
        samo u saćima meda.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        Oblak bi mogao
        skrivati cvijet ili saće meda. Sakupljaj nektar samo iz cvjetova. Med pravi
        samo u saćima meda.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe
        line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode
        to draw the line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast_instruction: 'Nacrtaj liniju.
        Svaki segment je 100 piksela dug. '
      Code Studio Puzzle Challenge Bee Screencast_instruction: Pokreni Pčelu do cvjetova
        i pokupi sav nektar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Course 2 Bee Loops 1_instruction: 'Zdravo, ja sam pčela. Možeš li mi pomoći
        da sakupim nektar iz ovih cvjetova? '
      Course 2 Bee Loops 13_instruction: 'Procjena: Upotrijebi blok za ponavljanje
        da bi sakupio/la sav nektar.'
      Course 2 Bee Loops 2_instruction: Možeš li izvršiti isti zadatak na lakši način
        pomoću petlje?
      Course 2 Bee Loops 3_instruction: Sada upotrijebi novi blok ponavljanja da bi
        se sakupio sav nektar i napravio sav med.
      Course 2 Bee Loops 3__instruction: Možeš li upotrijebiti petlju da sakupiš sav
        nektar?
      Course 2 Bee Loops 4_instruction: "Šta će se desiti ako ponoviš ovaj niz radnji
        u petlji 3 puta? Nemoj zaboraviti napraviti med na kraju!"
      Course 2 Maze Loops 1_instruction: Možeš li me dovesti do svinje koristeći 5
        blokova?
      Course 4 2_instruction: Pčela želi nektar ovog trenutka. Sjeti se, nisu svi
        objekti cvijeće, tako da moraš prvo provjeriti da li je objekat cvijet i tek
        onda pokupiti nektar.
      Course 4 Artist 1_instruction: 'Pomozi mi da završim crtati moju kutiju. (Svaka
        linija je duga 300 piksela) '
      Course 4 Artist 10_instruction: 'Vrijeme je za slobodno igranje! Zabavi se i
        nacrtaj šta god želiš. '
      Course 4 Artist 11_instruction: |
        Now for a challenge!  Feel free to use trial
        and error. You are not expected to get the image perfect the first time.   Want
        to see more hints?  Click here!
      Course 4 Artist 12_instruction: |-
        Want a second peek at the inspiration design
        or the hints?  Click here!\r
        \r
        Otherwise, make a design all your own!
      Course 4 Artist 13_instruction: |
        Still playing?  Here is a blank canvas where
        you can design anything you want!
      Course 4 Artist 2_instruction: Možeš li ponavljati ovaj kod u petlji da bi nacrtao/a
        posivjeli kvadrat?
      Course 4 Artist 20_instruction: |
        Still playing?  Here is a blank canvas where
        you can create whatever you want!
      Course 4 Artist 3_instruction: Ok, pokušaj shvatiti šta se desi ako pokreneš
        ovaj kod (ili klikni na "Pokreni" da probaš). Onda ponovi dovoljno mnogo puta
        da bi se crtež dovršio.
      Course 4 Artist 4_instruction: Koliko stepeni ima u krugu? Popuni blok ponavljanja
        sa tim brojem da bi kreirao/la krug boja.
      Course 4 Artist 5_instruction: Nacrtaj drugu polovicu ovog crteža tako da je
        simetričan. Trokutovi su jednakostranični sa stranicama dugim 50 piksela.
      Course 4 Artist 6_instruction: 'Dovrši kod za crtanje ovih trokutova. Savjet:
        3 trokuta koji zatvaraju ugao od 360 stepeni.'
      Course 4 Artist 7_instruction: 'Sada ugnijezdi ovu petlju unutar druge petlje
        da bi nacrtao/la 10 trokutova. Ovo se zove ugniježdena petlja. Savjet: Svih
        10 trokutova zatvaraju ugao od 360 stepeni.  '
      Course 4 Artist 8_instruction: Nacrtaj ovo sunce tako što ćeš ponoviti ovaj
        čitav blok u petlji 12 puta.
      Course 4 Artist 8a_instruction: |
        Remember this shape?  Now we're going to
        let you build it without giving you any blocks to start!
      Course 4 Artist 9_instruction: 'Ponavljaj ovaj crtež u petlji 10 puta i pobrini
        se da okreneš između svakog oblika koji je nacrtan. Evo savjet o za koliko
        okrenuti: Koliko je 360 podijeljeno sa 10?'
      Course 4 Artist Binary 1_instruction: Evo funkcija koja uzima binarni niz jedinica
        i nula i upućuje umjetnika da se okrene kada ide s lijeva na desno, sa vrha
        na dno, i da se popunjava kvadrate kada vidi 1, a ignoriše kvadrate koji sadrže
        0. Pokreni ovaj kod da vidiš kako umjetnik koristi binarni sistem da nacrta
        ovaj uzorak.
      Course 4 Artist Binary 1a_instruction: Evo funkcija koja uzima binarni niz jedinica
        i nula i upućuje umjetnika da se okrene kada ide s lijeva na desno, sa vrha
        na dno, i da se popunjava kvadrate kada vidi 1, a ignoriše kvadrate koji sadrže
        0. Pokreni ovaj kod da vidiš kako umjetnik koristi binarni sistem da nacrta
        ovaj uzorak.
      Course 4 Artist Binary 2_instruction: Koji od ovih binarnih nizova bi trebao/la
        ponavljati kroz petlju 8 puta da bi se nacrtala ova slika?
      Course 4 Artist Binary 3_instruction: Možeš li nacrtati ovaj uzorak tako što
        ćeš prolaziti pomoću petlje kroz ovaj trocifreni binarni niz?
      Course 4 Artist Binary 4_instruction: Svaki binarni niz predstavlja jedan red
        ove slike. Možeš li ih ispremetati tako da crtaju smješka umjesto ljutka?
      Course 4 Artist Binary 5_instruction: Koji će šestocifreni binarni niz. ponovljen
        11 puta, nacrtati ovu sliku?
      Course 4 Artist Binary 6_instruction: Koji je to najkraći binarni niz kojeg
        možeš ponavljati da bi nacrtao/la ovu sliku?
      Course 4 Artist Binary 7_instruction: Dovrši crtež.
      Course 4 Artist Binary Free Play 2_instruction: Vrijeme slobodnog igranja! Evo
        platna sa višom rezolucijom na kojem možeš crtati - 16 bita sa 16 bita!
      Course 4 Artist Binary Free Play 2a_instruction: |-
        Here's a higher resolution
        canvas to draw on - 16 pixels by 16 pixels!\r
        \r
        See what happens when we
        start to get creative with the bits?
      Course 4 Artist Binary Free Play 2b_instruction: Click here to see hints.
      Course 4 Artist Binary Free Play_instruction: Vrijeme slobodnog igranja! Nacrtaj
        šta god želiš na binarni način!
      Course 4 Artist Binary pre1_instruction: |-
        Binary is a way of representing information
        using only two options.  Here, we're going to use the options "off" (represented
        by the number 0) and "on" (represented by the number 1).  \r
        \r
        We've
        provided you with a grid of "pixels" that you can walk through and make
        designs by turning on only certain squares.  Can you have the artist draw
        "01010101" in binary in the first row?
      Course 4 Artist Binary ryan_instruction: |-
        Binary is a way of representing information
        using only two options.  Here, we're going to use the options "off" (represented
        by the number 0) and "on" (represented by the number 1).  \r
        \r
        We've
        provided you with a grid of "pixels" that you can walk through and make
        designs by turning on only certain squares.  Can you have the artist draw
        "01010101" in binary in the first row?
      Course 4 Artist For  Functions 10_instruction: Hajde da malo zakomplikujemo.
        Možeš li nacrtati oblik Zvijezde koristeći funkciju "Nacrtaj Kvadratnu Liniju"?
        Sretno!
      Course 4 Artist For  Functions 11_instruction: Hajde da malo zakomplikujemo.
        Možeš li nacrtati oblik Zvijezde koristeći funkciju "Nacrtaj Kvadratnu Liniju"?
        Sretno!
      Course 4 Artist For Loops 1_instruction: |
        Nacrtaj ovaj trokut koji ima veličinu
        of 50 piksela. Savjet: koristi blok ponavljanja.
      Course 4 Artist For Loops 10_instruction: Vrijeme slobodnog igranja! Zabavi
        se crtanjem čega god želiš koristeći blokove koje si već naučio/la koristiti
      Course 4 Artist For Loops 11_instruction: |
        Sjećaš se kada smo koristili varijablu za mijenjanje broja stranica određenog oblika? Ovaj uzorak počinje sa trokutom
        i dodaje stranicu po stranicu sve dok ne nacrta desetougaonik (10 stranica). Svaka stranica bi trebala biti duga 100 piksela. Savjet: 360 podijeljeno sa brojem stranica koje oblik ima daje broj stepeni za koji trebaš rotirati.
      Course 4 Artist For Loops 11a_instruction: |-
        Let's put it all together!  Using
        your knowledge of `for` loops and the `counter` variable, create this drawing
        where each shape has two more sides than the last.  Make sure that each side
        is 10 times as long as the number of sides in the polygon.\r
        \r
        Very little
        of the code has been provided for you.
      Course 4 Artist For Loops 12_instruction: 'To baš izgleda cool. Ali sada bih
        želio nacrtati oblike jedan do drugog. Sada je svaka stranica duga 20 piksela.
        Koristi blok za skakanje naprijed za 40 piksela nakon crtanja svakog od oblika. '
      Course 4 Artist For Loops 13_instruction: Hmmm, ovi oblici postaju sve veći
        i veći! Zar već nismo prethodno riješili ovaj problem koristeći varijable?
        Kako možemo upotrijebiti brojač varijablu za smanjivanje dužine stranica pri
        rastu njihovog broja? Umjesto kretanja naprijed za određenu vrijednost, pokušaj
        se kretati za (100 / brojač) piksela.
      Course 4 Artist For Loops 14_instruction: Okretanje manje ili više nego što
        je neophodno za određeni oblik daje lijep efekat. Probaj okretati za 89 stepeni
        da bi kreirao/la uvrnutu kvadratnu spiralu.
      Course 4 Artist For Loops 15_instruction: Vrijeme za slobodno igranje! Pokušaj
        napraviti crteže po svom izboru koristeći "od-do" petlje. Možeš koristiti
        nekoliko generičkih varijabli koje smo dodali za tebe.
      Course 4 Artist For Loops 2_instruction: "Stavio sam kod za crtanje trokuta
        unutar petlje koja broji od 50 do 100 sa korakom od 10. Pogledaj kakav sam
        kod napisao i klikni na\n\"Pokreni\" da vidiš šta se dešava. \n"
      Course 4 Artist For Loops 3_instruction: Najmanji trokut ima stranice od 20
        piksela, najveći ima stranice od 200 piksela, i svaki trokut je za 20 piksela
        veći od prethodnog. Preuredi "od-do" petlju za crtanje ovih trokutova.
      Course 4 Artist For Loops 4_instruction: Upotrijebi "od-do" petlju za crtanje
        ovih kvadrata. Trokutovi su u početku 50 piksela dugi. Najveći je dug 300
        piksela. Svaki kvadrat je za 25 piksela veći od prethodnog. Dao sam ti skoro
        sav kod koji trebaš. Međutim, nedostaje jedan blok. Koji blok nedostaje?
      Course 4 Artist For Loops 5_instruction: 'Super odrađen zadnji zadatak! Hajde
        da upotrijebimo tu "brojač" varijablu ponovo za crtanje ove cool slike. '
      Course 4 Artist For Loops 6_instruction: Vrijeme slobodnog igranja! Pokušaj
        upotrijebiti "od-do" petlju za crtanje rastućeg oblika po tvom izboru.
      Course 4 Artist For Loops 6a_instruction: |
        Make three small changes to the
        code from the last level to get this!
      Course 4 Artist For Loops 7_instruction: Šta će se desiti ako ukloniš "Ponovi
        3" iz ovog algoritma, ali ostavljajući "pokreni" i "okreni" blokove u "od-do"
        petlji? U ovom spiralnom trokutu, svaka stranica je za 20 piksela duža od
        prethodne.
      Course 4 Artist For Loops 8_instruction: Najmanja linija ovog kvadrata je 10,
        najveća je 200 i svaka linija je za 10 piksela duža od prethodne. Možeš li
        popuniti blokove koji nedostaju da bi ova fantastična slika bila dovršena?
      Course 4 Artist For Loops 8a_instruction: Najmanja linija ovog kvadrata je 10,
        najveća je 200 i svaka linija je za 10 piksela duža od prethodne. Možeš li
        popuniti blokove koji nedostaju da bi ova fantastična slika bila dovršena?
      Course 4 Artist For Loops 9_instruction: Možeš li napraviti spiralu? Pokreći
        se naprijed od 1 do 75 piksela, povećavajući za jedan piksel svaki put.
      Course 4 Artist For Loops Challenge_instruction: |-
        Can you figure out how to
        use all of the things you've learned to create this image?\r
        \r
        Need a
        hint? Click here.
      Course 4 Artist For Loops inspire_instruction: |-
        Free-Play Inspiration: You've
        now learned everything you need to know to make a pattern like this! If this
        picture inspires you, try to make something similar. Otherwise, create something
        all your own.\r
        \r
        Need a hint? Click here.
      Course 4 Artist Functions 1_instruction: Možeš li pomoću petlje nacrtati kvadrat
        koji ima dužinu od 100 piksela?
      Course 4 Artist Functions 10_instruction: Koji blok moraš dodati da bi se dobio
        trokut koji sjedi na kvadratu?
      Course 4 Artist Functions 11_instruction: Pogledaj ovaj kod koji crta kocku.
        Možeš li ga premjestiti u funkciju s nazivom "Nacrtaj Kocku"
      Course 4 Artist Functions 12.1_instruction: |
        Let's create a function called
        "draw an octagon 20" that draws an octagon where each side is 20 pixels
        long.
      Course 4 Artist Functions 12_instruction: Stavi u petlju funkciju za pravljenje
        kvadrata da bi se nacrtala linija
      Course 4 Artist Functions 13.1_instruction: |-
        Now, let's make a function called
        "jump to upper right" that moves the artist to the upper-right of the octagon
        that you just drew so we can finish this pattern.\r
        \r
        Hint:  To get yourself
        to the upper-right corner, try jumping in a pattern that makes just 3/8 of
        the octagon.
      Course 4 Artist Functions 13_instruction: Pogledaj ovu novu funkciju s nazivom
        "nacrtaj liniju načinjenu od kvadrata". Slobodno pogledaj šta se nalazi u
        funkciji. Klikni na "Pokreni" kada si spreman/na za slijedeći zadatak.
      Course 4 Artist Functions 14.1_instruction: |
        Now, let's make a function called
        "jump to upper right" that moves the artist to the top-right of the octagon
        that you just drew so we can finish this pattern.
      Course 4 Artist Functions 14_instruction: Super ti ide! Hajde da upotrijebimo
        tvoju novu "Nacrtaj liniju načinjenu od kvadrata" funkciju za crtanje Kvadratnog
        oblika. Sjeti se da svaki kvadrat im dužinu stranice od 40 piksela.
      Course 4 Artist Functions 15_instruction: 'Hajde da malo zakomplikujemo. Možeš
        li nacrtati oblik zvijezde koristeći "nacrtaj liniju načinjenu od kvadrata"
        funkciju? Sretno! Savjet: možda ćeš morati okretati za 144 stepeni'
      Course 4 Artist Functions 2_instruction: 'Možeš li nacrtati 3 kvadrata udaljene
        za 20 piksela? Savjet: svaki kvadrat ima veličinu od 100 piksela'
      Course 4 Artist Functions 3_instruction: |
        Možeš li nacrtati ovu sliku koristeći "nacrtaj kvadrat" funkciju? Savjet: kvadrati su razmaknuti jedan od drugog za 120 piksela.\r
      Course 4 Artist Functions 4_instruction: 'Jesi li spreman/na za kreiranje tvog
        vlastitof "Funkcijskog Bloka"? Klikni na "Funkcije" blok u alatnoj traci,
        daj mu ime "nacrtaj trokut", a zatim kreiraj trokutove na isti način kako
        si odradio/la za Akcija i Petlje blokovima. Onda klikni na Spremi i Zatvori
        u gornjem desnom uglu. Savjet: Kreiraj trokut od 100 piksela dužine. Sretno!'
      Course 4 Artist Functions 5 OLD_instruction: Hajde da pokušamo upotrijebiti
        naše dvije funkcije za crtanje kuće. Šta treba biti popravljeno u ovom kodu
        da bi se kuća pravilno nacrtala?
      Course 4 Artist Functions 5_instruction: |
        Možeš li nacrtati ovu sliku koristeći "nacrtaj kvadrat" funkciju? Savjet: kvadrati su razmaknuti jedan od drugog za 120 piksela.\r
      Course 4 Artist Functions 6_instruction: Koji blok moraš dodati da bi se dobio
        trokut koji sjedi na kvadratu?
      Course 4 Artist Functions 7_instruction: Možeš li nacrtati liniju načinjenu
        od kvadrata korištenjem Kvadrat funkcije? Svaki kvadrat ima dužinu stranica
        of 40 piksela.
      Course 4 Artist Functions 8_instruction: 'Jesi se već navikao/la na korištenje
        funkcijskih blokova? Hajde da promijenimo ovaj kvadrat tako da je veličine
        200 piksela. Savjet: klikni na "uredi" da bi promijenio/la veličinu urednika
        funkcije "nacrtaj kvadrat". Sjeti se da klikneš na "spremi i zatvori" da bi
        izašao/la i urednika ove funkcije. '
      Course 4 Artist Functions 9_instruction: Dali smo ti većinu koda za kreiranje
        funkcije. Međutim, izgleda dan ešto nedostaje. Možeš li kompletirati ovaj
        funkcijski blok?
      Course 4 Artist Functions challenge_instruction: |
        Click here to see the hints
        again.
      Course 4 Artist Functions Inspiration_instruction: |
        Click here to see the hints
        again.
      Course 4 Artist Functions inspire_instruction: |
        Click here to see the inspiration
        picture again.
      Course 4 Artist Inspire_instruction: |-
        Want a second peek at the inspiration
        design or the hints?  Click here!\r
        \r
        Otherwise, make a design all your
        own!
      Course 4 Artist Params 1_instruction: Hajde da uredimo funkciju koja crta kvadrat
        sa stranicama od 50 piksela
      Course 4 Artist Params 10_instruction: 'Možeš zvati funkcije unutar drugih funkcija!
        Koristeći tvoju "oblik" funkciju kao osnovu, kreiraj 3 kuće, svaka za 20 piksela
        veća nego prethodna, počevši od veličine od 50 piksela.  Korištenje brojač
        petlje može biti od pomoći. '
      Course 4 Artist Params 11_instruction: 'A šta misliš o funkciji naziva "papirna
        vjetrenjača" koja uzima tri parametra - "stranice", "dužina" i "ponavljaj".
        Možeš izračunati za koliko okrenuti nakon svakog oblika koristeći istu matematiku
        koju si koristio/la da izračunaš okret za oblike "stranice". Možeš li napraviti
        ovu sliku? Evo savjet: svaki oblik je dužine od 100 piksela.'
      Course 4 Artist Params 12_instruction: Upotrijebi svoju "papirna vjetrenjača"
        funkciju da nacrtaš svaki od ovih oblika. Dužina stranice za svaku sliku je
        50.
      Course 4 Artist Params 13_instruction: Vrijeme za slobodno igranje! Evo funkcija
        koje si napisao/la, i još nekih dodatnih da se igraš sa njima. Nacrtaj nešto
        fantastično!
      Course 4 Artist Params 2_instruction: Ta funkcija za crtanje trokutova bi bila
        mnogo korisnija kada bi mogla crtati trokutove različitih veličina. Dodali
        smo parametar za dužinu linije, ali nije još uvijek funkcionalan. Možeš li
        ažurirati funkciju tako da koristi "dužinu" kao parametar kada crta svaku
        od stranica? Veličine trokutova su 150 piksela, 75 piksela i 25 piksela.
      Course 4 Artist Params 3_instruction: 'Super! Možeš li nacrtati svaki od ovih
        trokutova sa tom novom funkcijom? Prvi je 25 piksela dug, drugi 50 i treći
        75. '
      Course 4 Artist Params 4_instruction: Možeš li dodati funkciju naziva "kvadrat"?
        Funkcija bi također trebala uzeti dužinu kao parametar, isto kao funkcija
        za trokut. Ovaj puta nacrtaj 3 kvadrata od 25, 50 i 75 piksela dužine, razmaknuti
        jedan od drugog za 100 piksela.
      Course 4 Artist Params 5_instruction: |
        Upotrijebi obje svoje funkcije da nacrtaš ovu sliku. Da ti bude lakše koristi petlju da "brojač" parametrom.
      Course 4 Artist Params 6_instruction: 'Hajde da preuredimo ovu "nacrtaj oblik"
        funkciju koja već ima "dužinu" kao parametar. Dodajmo sada parametar za "stranice".
        Sjeti se da je ugao za okretanje datog oblika jednak 360 podijeljeno sa brojem
        stranica tog oblika. Savjet: dužina stranica za trokut je 100 piksela, za
        šestougaonik je 25 piksela, i za kvadrat je 50 piksela. '
      Course 4 Artist Params 7_instruction: 'Možeš li nacrtati ove oblike tako što
        ćeš popuniti "???". Kvadrat i trokut su 100 piksela veličine dok je šestougaonik
        veličine 75 piksela. '
      Course 4 Artist Params 8_instruction: |
        Možeš li shvatiti kako da nacrtaš ovaj oblik? Evo savjeta kako da napraviš novu funkciju sa 6 stranica zvanu šestougaonik.
      Course 4 Artist Params 9_instruction: Sjećaš li se kada smo koristili brojač
        petlju bez petlje unutar nje? Hajde da se zabavimo i upotrijebimo "nacrtaj
        oblik" funkciju sa "stranice" i "dužina" parametrima. Možeš li napraviti ove
        oblike? Brojač za kvadrat bi trebao biti 5/100/5, za trokut 10/100/10 i za
        šestougaonik bi trebao biti 2/100/2.
      Course 4 Artist Var 9_instruction: 'Evo algoritam za crtanje trokuta. Promijeni
        ga da bi koristio varijablu "stranice". Zamijeni broj 3 sa "stranice" varijablom.
        Savjet: sjeti se koristiti "postavi stranice na" blok.'
      Course 4 Artist Vars 1_instruction: Možeš li mi pomoći da nacrtam trokut? Svaka
        stranica je 100 piksela duga.
      Course 4 Artist Vars 10_instruction: Evo algoritma koji crta trokut sastavljen
        od manjih trokutova. Možeš li ga promijeniti tako da koristi varijablu "stranice"
        za crtanje trokuta? Pogledaj malo kroz kod, i svaki put kada vidiš broj 3,
        zamijeni ga sa tvojom "stranice" varijablom. Sjeti se da koristiš "postavi
        stranice" blok.
      Course 4 Artist Vars 11_instruction: Evo istog algoritma kojeg smo smislili
        u zadnjem zadatku. Na šta trebaš postaviti "stranice" varijablu kako bi se
        nacrtala ova slika s kvadratima?
      Course 4 Artist Vars 12_instruction: Hajde da postavimo "stranice" varijablu
        na vrijednost 5. Što više strana dodajemo ovom algoritmu, to uzorak postaje
        veći! Hajde da dodamo novu varijablu naziva "dužina" i upotrijebimo je kada
        god treba napraviti "pomak naprijed". Postavi "dužina" varijablu na 75 za
        ovaj oblik.
      Course 4 Artist Vars 13_instruction: |-
        When a shape has lots of sides, each
        side needs to be shorter if you want the whole pattern to fit on the screen.
        \r
        Let's recreate the algorithm for this amazing pattern, but instead of
        manually setting the `length` variable, let's use a math block with the `sides`
        variable inside to make sure that each shape fits correctly. The perimeter
        of each polygon is 300 pixels.\r
        Need some hints?  Click here.
      Course 4 Artist Vars 14_instruction: Vrijeme za slobodno igranje! Provjeri sada
        svoj algoritam koji je ugniježden u još jednoj petlji. Eksperimentiši sa mijenjanjem
        vrijednosti tvoje dvije varijable da bi nacrtao/la cool uzorke.
      Course 4 Artist Vars 2_instruction: Umjesto "pomjeranja naprijed za 100", blok
        za "pokretanje" sada ima varijablu "dužina". Možeš li postaviti dužinu na
        150 da bi nacrtao/la novi trokut?
      Course 4 Artist Vars 3_instruction: 'Evo petlja za crtanje kvadrata, ali nešto
        nedostaje. Možeš li je popraviti tako da koristi varijablu "dužina" za računanje
        koliko svaka od stranica mora biti duga? '
      Course 4 Artist Vars 4_instruction: Sada želim napraviti pravougaonik koji je
        duplo viši nego što je širok. Imamo varijablu "širina" koja je postavljena
        na 100. Možeš li upotrijebiti matematičke blokove da dovršiš kod?
      Course 4 Artist Vars 5_instruction: Upotrijebi varijablu "stranice" za kontrolu
        koliko puta petlja treba da se izvrši.
      Course 4 Artist Vars 6_instruction: 'Hmmm, pokušao sam postaviti vrijednost
        varijable "stranice" na 4 u kodu iz posljednjeg zadatka, ali kod još uvijek
        crta trokut. Možeš li upotrijebiti varijablu "stranice" (zajedno sa matematičkim
        blokom) da bi osigurao/la da se ja okrećem za ispravni iznos? Savjet: 360
        podijeljeno sa brojem stranica će ti dati broj stepena za okret.'
      Course 4 Artist Vars 7_instruction: Možeš li promijeniti varijablu "stranice"
        da bi se nacrtao šestouganik?
      Course 4 Artist Vars 8_instruction: 'Vrijeme za slobodno igranje! Eksperimentiši
        sa brojem stranica koje oblik ima. Možeš li promijeniti algoritam tako da
        ukupna veličina oblika ostaje nepromijenjena, bez obzira na koliko stranica
        oblik ima? Savjet: Možda ćeš morati koristiti matematičke blokove (360 podijeljeno
        sa "stranice" na dva mjesta ovog puta) '
      Course 4 Artist Vars 9_instruction: Promijeni ovaj algoritam tako da on koristi
        varijablu "stranice" umjesto fiksnog broja pri crtanju trokuta. Zamijeni broj
        3 sa "stranice" varijablom, i koristi "postavi stranice na" blok.
      Course 4 Bee 1_instruction: 'Pčela ne može razaznati da li je ovo cvijet ili
        saće meda. Prvo provjeri da li je ovo cvijet ili saće meda, a zatim pokupi
        nektar samo ako je u pitanju cvijet. '
      Course 4 Bee 2_instruction: Provjeri svaki objekat da vidiš je li cvijet. Ako
        jeste, pokupi nektar ... inače, samo ga ignoriši!
      Course 4 Bee 3_instruction: Nepoznati objekat je ili cvijet ili saće meda. Upotrijebi
        ako/inače blok za sakupljanje nektra u pitanju cvijeta. Inače napravi med
        (jer je onda u pitanju saće meda).
      Course 4 Bee 4_instruction: Ovaj ljubičasti cvijet može imati 3, 2 ili 1 za
        nektar. Ovje je ako-inače blok kombinovan sa drugim ako-inače blokom za kreiranje
        ako, inače-ako i inače bloka. Dovrši rješenje za sakupljanje nepoznate količine
        nektra.
      Course 4 Bee 5_instruction: |
        This purple flower may have either 3, 2, or 1
        nectar. Add an if-else block to create an if, else-if, else block. Complete
        the solution to collect the unknown amount of nectar.
      Course 4 Bee 6_instruction: |
        This purple flower may have either 3, 2, or 1
        nectar. Create an if, else-if, else block to collect the unknown amount of
        nectar.
      Course 4 Bee 7_instruction: |
        Use everything you have learned so far to collect
        all the nectar. The purple flower may have either 3, 2, or 1 nectar.
      Course 4 Bee For Loops 1_instruction: Upotrijebi petlju za sakupljanje nektra
        iz svakog cvijeta.
      Course 4 Bee For Loops 10_instruction: Ako tvoja petlja broji prema dole, korak
        za povećanje se pri svakom prolazu kroz petlju oduzima od trenutne vrijednosti
        tvoje brojač varijable. Koliki bi trebao biti korak povećanja da bi se sakupilo
        9, onda 6, i 3 nektra?
      Course 4 Bee For Loops 11_instruction: |
        What's wrong with this loop? See if
        you can fix it and make the bee collect all the nectar.
      Course 4 Bee For Loops 2_instruction: Ovo je nova vrsta petlje, pod nazivom
        "od-do" petlja. Ova petlja će brojati od 1 do 5 za korak od jedan, i izvršavati
        sadržaj petlje pri svakom prolazu. Pomozi Pčeli da pokupi nektar.
      Course 4 Bee For Loops 3_instruction: Možeš riješiti ovaj problem koristeći
        "od-do" petlju za brojanje od 1 do 3 za 1. Hajde sada da pokupimo malo nektra!
      Course 4 Bee For Loops 4_instruction: Sakupi sav nektar iz ovih cvjetova. PItam
        se da li postoji lakši način da se ovo odradi...
      Course 4 Bee For Loops 5_instruction: 'Ah, sa "od-do" petljom je ovo mnogo lakše!
        Korištenjem "brojač" varijable iz "od-do" petlje za stavljanje "sakupi nektar"
        blok u petlju da bi se izvršavao isti broj puta koliko i petlja. Ufff! To
        je baš mnogo petlji. Sav kod koji trebaš je ovdje. Pogledaj malo kako je to
        sve kombinovano i onda klikni na Pokreni da vidiš kako to radi. '
      Course 4 Bee For Loops 6_instruction: Možeš koristiti petlju i za odbrojavanje.
        Pokušaj sakupiti nektar sa odbrojavanjem od 5 do 1 za 1.
      Course 4 Bee For Loops 7_instruction: Upotrijebi "brojač" varijablu iz svoje
        "od-do" petlje da bi kontrolisao/la koliko se treba pomjeriti horizontalno.
      Course 4 Bee For Loops 8_instruction: Možeš li upotrijebiti varijablu petlje
        za kontrolu pokreta i sakupljanja meda?
      Course 4 Bee For Loops 9_instruction: Zadnji broj u tvojoj "od-do" petlji se
        zove "povećanje", i svaki put kada se petlja izvršava, brojač varijabla se
        mijenja za vrijednost povećanja. Pokušaj sakupiti ove cvjetove koristeći povećanje
        2.
      Course 4 Bee Loops 5 NEW_instruction: |
        Here are three flowers. Can you find
        the pattern of instructions that you need to repeat 3 times to collect the
        nectar with the fewest number of blocks?
      Course 4 Bee Loops 5a NEW_instruction: |
        Now, use loops to help the bee collect
        all the nectar on it's way to the honeycomb with as few blocks as possible.  When
        you get there, don't forget to make honey!
      Course 4 Bee Params 1_instruction: Upotrijebi funkciju "sakupi 3 nektra" koja
        okreće, kontroliše pokret za sakupljanje nektra, i onda vraća pčelu na početno
        mjesto. Napiši niz radnji pomoću kojih će se sakupiti sav nektar korištenjem
        "sakupi 2 nektra"
      Course 4 Bee Params 2_instruction: Promijeni "pokupi 3 nektra" funkciju tako
        da bi me ona okrenula prema cvjetovima udesno umjesto ulijevo.
      Course 4 Bee Params 3 (copy 1)_instruction: Sada imamo cvjetove na obje strane!
        Možda možeš upotrijebiti parametar tako da ista funkcija radi za cvjetove
        na obje strane. Dodao sam parametar pod nazivom "smjer". Ako je parametar
        "smjer" jednak 0, onda trebam skrenuti ulijevo. Ako je jednak 1 onda trebam
        skrenuti udesno.
      Course 4 Bee Params 3_instruction: Sada imamo cvjetove na obje strane! Dodao
        sam parametar pod nazivom "smjer". Upotrijebi "lijevo" i "desno" varijable
        za kontrolisanje smjera. Popuni ostatak definicije funkcije i onda klikni
        na "Spremi i Zatvori".
      Course 4 Bee Params 4 (copy 1)_instruction: Pokušaj upotrijebiti svoju novu
        funkciju za sakupljanje svih cvjetova. Sjeti se, 0 = lijevo i 1 = desno.
      Course 4 Bee Params 4 - Two WhenRun_instruction: |
        Try using your new function
        to collect all of the flowers. Remember to use the left and right variables.
      Course 4 Bee Params 4 backup_instruction: Zar ne bi bilo lijepo kada bismo mogli
        sakupiti sve ove nektare sa jednom jedinom funkcijom? Pokušaj dodati novi
        parametar tvojoj funkciji pod nazivom "nektari" za kontrolisanje količine
        nektra za sakupljanje. Sigurno bi isto tako trebao/la promijeniti ime funkciji!
      Course 4 Bee Params 4_instruction: Pokušaj koristiti svoju novu funkciju za
        sakupljanje svih cvjetova. Sjeti se koristiti varijable za lijevo i desno.
      Course 4 Bee Params 5_instruction: Hajde da počnemo od nule. Možeš li napraviti
        novu funkciju naziva "sakupi 5 nektara" sa paramterom za smjer?
      Course 4 Bee Params 6 (copy 1)_instruction: Pokušaj koristiti svoju novu funkciju
        za sakupljanje svog nektra.
      Course 4 Bee Params 6_instruction: Zar ne bi bilo lijepo kada bismo mogli sakupiti
        sve ove nektare sa jednom jedinom funkcijom? Pokušaj dodati novi parametar
        tvojoj funkciji pod nazivom "nektari" za kontrolisanje količine nektra za
        sakupljanje. Sigurno bi isto tako trebao/la promijeniti ime funkciji!
      Course 4 Bee Params 7 (copy 1)_instruction: Pokušaj koristiti svoju novu funkciju
        za sakupljanje svog nektra.
      Course 4 Bee Params 7_instruction: Pokušaj koristiti svoju novu funkciju za
        sakupljanje svog nektra.
      Course 4 Bee Params 8 Clone 2_instruction: |
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 clone 3_instruction: |
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 Clone_instruction: |
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 new_instruction: |
        Oooh, now there's honey to deal with
        too! How could you update your function to either get nectar or make honey.
      Course 4 Bee Params 8_instruction: Oooh, sada imamo i med kojim se moramo zabaviti!
        Kako bi promijenio/la svoju funkciju da ili sakuplja nektar ili pravi med.
      Course 4 Bee Params Ex_instruction: Pokušaj koristiti svoju novu funkciju za
        sakupljanje svog nektra.
      Course 4 Binary 1_instruction: Evo funkcija koja uzima binarni niz od jedinica
        i nula i nalaže farmeru da se okrene pri pokretu s lijeva na desno, s vrha
        na dno, i da se okreće na kvadratima koji sadrže broj 0. Pokreni dati kod
        da vidiš kako farmer koristi binarni sistem za crtanje slike.
      Course 4 Binary 2_instruction: 'Koji binarni niz možeš ponoviti 8 puta u petlji
        da bi se nacrtala ova slika? Savjet: broj "1" popunjava rupu.'
      Course 4 Binary 3_instruction: Možeš li nacrtati ovaj uzorak tako što ćeš pomoću
        petlje prolaziti kroz binarni niz?
      Course 4 Binary 5 (copy 1)_instruction: Koji će binarni niz, ponovljen 10 puta,
        nacrtati ovu sliku?
      Course 4 Binary 5_instruction: Koji će binarni niz, ponovljen 10 puta, nacrtati
        ovu sliku?
      Course 4 Binary 6 (copy 1)_instruction: Koji će binarni niz, ponovljen 10 puta,
        nacrtati ovu sliku?
      Course 4 Binary 6_instruction: Koji će binarni niz, ponovljen 10 puta, nacrtati
        ovu sliku?
      Course 4 Binary 7_instruction: Koji će binarni niz, ponovljen 10 puta, nacrtati
        ovu sliku?
      Course 4 Binary 8_instruction: Možeš dovršiti većinu ove slike tako što ćeš
        pomoću petlje prolaziti kroz 5-bitni binarni broj. Zatim ćeš trebati još jedan
        4-bitni broj da dođeš do donjeg desnog ugla.
      Course 4 EC 1a_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 1b_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 2a_instruction: |
        **Extreme Challenge:**  No rules. No clues. Just
        the challenge!
      Course 4 EC 2b_instruction: |
        **Extreme Challenge:**  No rules. No clues. Just
        the challenge!
      Course 4 EC 2c_instruction: |
        **Extreme Challenge:**  No rules. No clues. Just
        the challenge!
      Course 4 EC 2d_instruction: No rules. No clues. Just the challenge!
      Course 4 EC 3_instruction: "Use what you learned in the previous level to draw\nan
        image like this. Note: The code becomes more simple if you incorporate\nparameters.
        \n"
      Course 4 EC 3a_instruction: |
        Extreme Challenge: No rules. No clues. Just the
        challenge!
      Course 4 Maze 1_instruction: Dovedi ljutu pticu do svinje!
      Course 4 Maze 2_instruction: Izbjegavaj TNT!
      Course 4 Maze 3_instruction: 'Isprogramiraj ljutu pticu da dođe do svinje. '
      Course 4 Maze 4_instruction: Pokušaj koristiti blok "ponavljanja" da bi koristio/la
        manje blokova...
      Course 4 Maze 5_instruction: Možeš li riješiti ovaj zadatak korištenjem što
        manjeg broja blokova?
      Course 4 Maze 6_instruction: Možeš li riješiti ovaj zadatak korištenjem što
        manjeg broja blokova?
      Course 4 Play Lab For Loops 2_instruction: Hajde da ovaj putpokušamo brojati
        neparne brojeve od 1 do 100.
      Course 4 Play Lab Params 1_instruction: Evo funkcija pod nazivom "skoči" koja
        čini da tvoj glavni lik skače za 100 piksela. Upotrijebi funkciju za skakanje
        za sakupljanje svih zastava.
      Course 4 Play Lab Params 10_instruction: |
        Dodali smo još jednu zadnju funkciju za tvoje korištenje. Isprogramiraj tvoju igricu da zove "viši nivo" funkciju kada je "broj_poena"> 10. Da bi prešao/la na novi zadatak, igraj igricu, i načini da prođe nivo 4.
      Course 4 Play Lab Params 2_instruction: Sada imamo zastave koje su previsoke
        za naš trenutni skok! Hajde da dodamo parametar "visina" našoj funkciji za
        skakanje. Kada se pritisne strelica gore dolazi do skoka od 100 piksela, ali
        sa pritiskom na strelicu dole dolazi do skoka od 300 piksela. Klikni na "preuredi"
        na funkciji za skakanje i promijeni je tako da koristi parametar za visinu,
        umjesto što samo skače za 100 piksela.
      Course 4 Play Lab Params 3_instruction: 'Hajde da dodamo još jedan parametar
        našoj funkciji za skakanje tako da je možemo koristiti sa drugim likovima.
        Svaki lik je predstavljen sa brojem, počevši od jedan. Preuredi "skoči" funkciju
        tako da njena definicija uključuje "lik" parametar. '
      Course 4 Play Lab Params 4_instruction: Evo funkcija pod nazivom "izvidnica".
        Preuredi je da pokreće Mačku prema gore za 400 piksela i onda prema dole za
        400 piksela.
      Course 4 Play Lab Params 5_instruction: Unesi ulaz za "lik" parametar tako da
        možemo zvati "izvidnica" funkciju za svaki od likova. Sjeti se, likovi su
        asocirani sbrojevima 1, 2, i 3.
      Course 4 Play Lab Params 6_instruction: |
        Add another parameter called "speed"
        to the "patrol" function. Try using a "set speed" block with the new "speed"
        parameter to help Penguin get both flags before the other sprites even get
        one.
      Course 4 Play Lab Params 7_instruction: Upotrijebi tipke sa strelicama da kontrolišeš
        Psa i za skupljanje svih zastava.
      Course 4 Play Lab Params 8_instruction: Upotrijebi "pri dodiru" blok da bi poslao/la
        Psa nazad u gornji lijevi ugao u slučaju kada Pas dodirne neki od likova.
      Course 4 Play Lab Params 9_instruction: "Here's our game from an earlier stage,\nbut
        most of the code is hidden. There’s a new function `score_points.`\\r\n\\r\nEdit\nthe
        function so that a new parameter called `points` can be added to `player_score`.\n\\r\n\\r\nThe
        variable `player_score` should increase each time Dog tags Cat\nwith hearts,
        and decrease each time that Cat tags Dog with hearts.\\r\n\\r\nNote:\nWhen
        you're done, click \"Run\" to play.  When Dog scores 6 points, you will\nmove
        on to the next puzzle. "
      Course 4 Play Lab Vars 1_instruction: Ne moraš pisati nikakav kod, samo pritisni
        na "pokreni" i igraj igricu! U ovoj igrici, ti si Pas koji pokušava da sakupi
        više zastava od Mačke. Upotrijebi strelicu prema dole za kontrolisanje Psa.
        Pritisni na "Završi" kada želiš prestati igrati.
      Course 4 Play Lab Vars 2_instruction: Utrka nije baš bila pravedna! Promijeni
        "brzina_psa" varijablu da bi osigurao/la da ćeš sakupiti više zastava od Mačke.
        Prvi koji prikupi 10 zastava je pobjednik!
      Course 4 Play Lab Vars 3_instruction: Evo nova vrsta igrice! Koristi strelicu
        za lijevo i desno za kretanje, i strelicu na gore za skakanje. Vidi ako možeš
        prikupiti sve zastave.
      Course 4 Play Lab Vars 4_instruction: 'Sada koristimo varijablu pod nazivom
        "visina" za kontrolisanje koliko visoko će pas skočiti. Promijeni "visina"
        varijablu tako da pas može skočiti dovoljno visoko da bi dohvatio sve zastave.
        Savjet: nove zastave su na visini od 200 piksela.'
      Course 4 Play Lab Vars 5_instruction: 'Hajde da napravimo igricu! Prvo ćemo
        trebati oznaku za rezultat. Upotrijebi "postavi bodove na" blok da bi se postavio
        rezultat na 10. '
      Course 4 Play Lab Vars 6 (copy 1)_instruction: Cool! Sada imamo varijablu za
        rezultat, ali kako ćemo je upotrijebiti? Šta misliš o dodavanju tvojoj rezultat
        varijabli svaki put kada pogodiš neprijatelja sa vatrenom kuglom? Upotrijebi
        "kada lik 2 dodirne nešto" događaj koji će prouzrokovati promjenu rezultata
        kada vatrena kugla udari u mačku. Možeš povećati rezultat postavljajući rezultat=rezultat+1.
        Dovedi rezultat do 10 (jedan po jedan!) da bi prošao ovaj nivo.
      Course 4 Play Lab Vars 6_instruction: Kako bimo trebali bodovati u našoj igrici?
        Dodaj 1 svojoj "bodovi" varijabli svaki put kada Pas pogodi Mačku sa vatrenom
        kuglom. Upotrijebi "kada lik 2 dodirne nešto" događaj da bi se promijenio
        rezultat. Možeš povećati svoju varijablu postavljajući "bodovi=bodovi+1".
        Dovedi svoj rezultat do 10 (bod po bod!) da bi prošao/la ovaj nivo.
      Course 4 Play Lab Vars 7_instruction: Super. Hajde sada da se pobrinemo da ova
        igrice na bude baš prelagana. Svaki put kada Pas (lik 1) bude pogođen sa vatrenom
        kuglom, ti bi trebao/la izgubiti poen. Hajde da počnemo sa 10 poena tako da
        ne bude preteško. Neka tvoj rezultat padne sa 10 na 0 da bi prošao/la ovaj
        nivo.
      Course 4 Play Lab Vars 8 (copy 1)_instruction: Dobro, još jedna zadnja stvar.
        Hajde da postavimo da igrač može pobijediti (ili izgubiti). Koristi beskonačnu
        petlju da provjeriš vrijednost rezultata. Ako je rezultat veći od 20, neka
        neprijatelj nestane. Ako je rezultat manji od 0, neka igrač nestane. Klikni
        na "Završi" kada igra radi ono što ti želiš.
      Course 4 Play Lab Vars 8_instruction: Hajde da postaivmo ovu igru tako Pas može
        pobijediti (ili izgubiti). Upotrijebi beskonačnu petlju za provjeru vrijednosti
        rezultata. Ako je rezultat veći od 20, neka neprijatelj (Mačka) nestane. Ako
        je rezultat manji od 0, neka igrač (Pas) nestane. Klikni na "Završi" kada
        igrica radi ono što ti želiš.
      Course 4 Play Lab Vars 9_instruction: 'Vrijeme za slobodno igranje! Evo svih
        varijabli s kojima smo se igrali do sada, zajedno sa još nekoliko dodatni
        u slučaju da ih zatrebaš. Napravi igricu ili priču koja koristi ove varijable.
        Savjet: Pomjeraj radni prostor prema dolje da vidiš sve komande.'
      Course 4 Play Lab Vars_instruction: Dobro, još jedna zadnja stvar. Hajde da
        postavimo da igrač može pobijediti (ili izgubiti). Koristi beskonačnu petlju
        da provjeriš vrijednost rezultata. Ako je rezultat veći od 20, neka neprijatelj
        nestane. Ako je rezultat manji od 0, neka igrač nestane.
      Course 4 Play Labs For Loops 1_instruction: Hajde da učinimo da ovaj pas izgovori
        svaki broj od 1 do 100. Upotrijebi petlju i brojač blok za izgovaranje svake
        brojač varijable pri svakom prolasku kroz petlju.
      Course 4 Play Labs For Loops 2_instruction: Hajde da ovaj putpokušamo brojati
        neparne brojeve od 1 do 100.
      Course 4 Play Labs For Loops 3_instruction: Ako računamo sa većim korakom, brojimo
        još više za isto vrijeme. Pokušaj napraviti da pas broji od 10 do 1000, sa
        korakom od 10.
      Course 4 Play Labs For Loops 4_instruction: Promjena priraštaja može biti korisna,
        ali još uvijek brojimo linearno (svaki broj je udaljen za istu vrijednost
        od posljednjeg broja). Šta ako želim brojati eksponencijalno? Bez mijenjanja
        postavke u ovoj petlji, možeš li brojati 1, 4, 9, 16, 25... (kvadrat brojač
        varijable)?
      Course 4 Play Labs For Loops 4a_instruction: |-
        Now, let's blend the variables
        from Stage 7 together with your "counter" variable to make some magic happen.   \r
        \r
        In
        this puzzle, Dog will count from 0 to 1000 by "increment".  Set the "increment"
        variable to 10 at the beginning of your code to see what happens.
      Course 4 Play Labs For Loops 5_instruction: U zadnjoj fazi smo računali kvadrat
        svakog broja. Pokušaj promijeniti "brojač ^ 2" na "brojač ^ 3" da bi računao
        kub svakog broja (1, 8, 27, 64, 125, 216, 343….)
      Course 4 Play Labs For Loops 5a_instruction: |-
        In this puzzle, Dog will be your
        time keeper.\r
        \r
        Dog will count from 0 to 30 by "increment".  The "increment"
        variable will begin with a value of 1.\r
        \r
        Can you make it so that each
        time you click Dog, the increment increases by 2?  Click the forward arrow
        to run the for loop.\r
        \r
        Run the loop a couple of times, clicking Dog before
        each one.
      Course 4 Play Labs For Loops 6_instruction: Sigurno se sjećaš da je prost broj
        bilo koji cijeli broj koji je djeljiv samo sa sobom i 1. Upotrijebi funkciju
        "da_li_je_prost_broj" da bi pronašao/la proste brojeve od 1 do 100.
      Course 4 Play Labs For Loops 6a_instruction: |-
        Dog will still keep time by counting
        with our "for loop" by "increment", but this time, we will add The Wizard
        into the mix.  Can you change the code so that "increment" goes up by two
        each time The Wizard is clicked?\r
        \r
        Watch out!  The Wizard moves quickly!
      Course 4 Play Labs For Loops 7_instruction: Možeš li upotrijebiti "od-do" petlju
        da bi mi pomogao izgovoriti niz 1, 4, 7, 10, 13, 16, 19, 22, 25?
      Course 4 Play Labs For Loops 7a_instruction: |-
        Now we're getting somewhere!  What
        if we start counting how many times we can click The Wizard before Dog gets
        to 30?  \r
        \r
        Finish adding blocks to The Wizard so that every time he's
        clicked the variable "clicked" increases by one. You can ignore "increment"
        for now.\r
        \r
        Dog will start counting when you click "Run".
      Course 4 Play Labs For Loops 8_instruction: Koja "od-do" petlja bi učinila da
        ja izgovaram 19, 27, 35, 43, 51?
      Course 4 Play Labs For Loops 8a_instruction: |-
        To finish our game, we need to
        bring back the "increment" variable!    Let's tie it to the level of the
        game.\r
        \r
        1) Keep track of the number of times The Wizard is clicked.\r
        2)
        If The Wizard is clicked at least 10 times before Dog counts to 30, raise
        "increment" by 1 and start again.\r
        3) If The Wizard does not get clicked
        at least 10 times, the game is over.
      Course 4 Playlab For Loop Freeplay_instruction: |
        Freeplay: Use everything you've
        learned so far to make a game that includes a `for` loop!
      Course 4 Playlab For Loops 4b_instruction: |-
        Now, these two characters are going
        to race!  \r
        \r
        Each of them will move `counter` steps at a time, but their
        counters will have different values because of the `for` loops.  \r
        \r
        Can
        you change the increment in one of the loops so that the race is a tie?
      Course 4 Playlab For Loops 5b_instruction: |
        Adjust the interval on these `for`
        loops so that the two characters end in the exact same place.
      Course 4 Playlab For Loops 6b_instruction: "Edit this `for` loop to create\na
        game that's fun for you to play!\\r\n\\r\nPress \"Run\" and click Madame\nUnicorn
        four times to win. "
      Course 4 SCF 1_instruction: |
        Use the suggested functions to draw four rows
        of hexagons. Notice how our even numbered rows are shifted to the right?
      Course 4 SCF 1a_instruction: |
        Can you figure out how to collect all of this
        nectar with the fewest blocks possible?
      Course 4 SCF 1b_instruction: |
        Can you figure out how to collect all of this
        honey with the fewest blocks possible?
      Course 4 SCF 2_instruction: "Use what you learned in the previous level to\ndraw
        an image like this. Note: The code becomes more simple if you incorporate\nparameters.
        \n"
      Course 4 SCF 3 Fail 1_instruction: Can you figure out how to...
      Course 4 SCF 3 Fail 2_instruction: Can you figure out how to...
      Course 4 SCF 3_instruction: "Use what you learned in the previous level to\ndraw
        an image like this. Note: The code becomes more simple if you incorporate\nparameters.
        \n"
      Course 4 SCFL 1_instruction: |
        Solve this puzzle using the fewest number of
        blocks possible.
      Course 4 SCFL 1a_instruction: |
        Can you get Skrat to his acorn using as few
        blocks as possible?
      Course 4 SCFL 1b_instruction: |
        Can you get Skrat to his acorn using as few
        blocks as possible?
      Course 4 SCFL 2_instruction: |
        Solve this puzzle using the fewest number of
        blocks possible.
      Course 4 SCFL 3_instruction: Can you figure out how to re-create this drawing?
      Course 4 SCFL 4_instruction: Can you figure out how to re-create this drawing?
      Course 4 SCFL 5_instruction: Can you figure out how to re-create this drawing?
      Course 4 SCFL 6_instruction: |
        Can you figure out how to re-create this drawing
        with a single loop?
      Course 4 SCFL 7_instruction: |
        The artist wants to catch some waves! Can you
        figure out how to re-create this drawing?
      Course 4 SCFP 1_instruction: |
        Create a function with parameters that allows
        the artist to jump backward and forward by x pixels, and also up and down
        by y pixels (using positive and negative numbers).
      Course 4 SCV 1_instruction: Click here to view the instructions again.
      Course 4 SCV 2_instruction: Click here to view the instructions again.
      Course 4 SCV 3_instruction: |-
        Now for a game of tag!  Tag Cat to get 2 points.
        Tag Penguin to get 3 points.  Get exactly 10 points to win!\r
        But be careful,
        when Cat and Penguin tag each other, they take points away.\r
        \r
        Add the
        blocks necessary to make this game work the way it's been explained.  How
        will you get Dog to move in all directions using the arrow keys?  How will
        you add points when Dog tags Cat or Penguin?  How will you subtract points
        when Cat and Penguin touch?
      Course 4 SCV 4_instruction: |
        Solve this puzzle with the fewest number of blocks
        possible.
      Course 4 SCV 5_instruction: |
        Solve this puzzle with the fewest number of blocks
        possible.
      Course 4 SCV 6_instruction: Click here to view the instructions again.
      Course 4 SCVP 1_instruction: |
        Create a function with parameters that allows
        the artist to jump backward and forward by x pixels, and also up and down
        by y pixels (using positive and negative numbers).
      Course 4 Variables Assessment_instruction: |
        Can you create this image using
        a variable for sides? Each line should be 50 pixels long.
      Course1BeePuzzle12_instruction: Sakupi tri nektara i onda napravi dva meda
      Course1MazeAssessment1_instruction: |-
        Ovo je test!\r
        Kreći se u jednom smjeru, a zatim u drugom da bi me doveo/la do svinje
      Course1MazeAssessment2_instruction: |-
        Ovo je test!\r
        Kreći se u jednom smjeru, a zatim u drugom da bi me doveo/la do svinje.
      CSD Hackathon Pt 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Pt 2_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 2_instruction: "(Click to see full instructions)"
      CSD U3 Background Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Boolean Modify_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Boolean Predict_instruction: |
        What do you think this code will do when
        it is run? Predict what each console.log() command will print, then run the
        program to check your predictions.
      CSD U3 Draw Loop Discuss_instruction: |
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: |
        Try using some of the other shape
        functions you've learned in the draw loop. What happens when you use randomNumber()
        to generate some of the inputs?You'll want to stop and discuss with the class
        before moving on.
      CSD U3 Frame Rate_instruction: Slow down Gamelab Gary's animation with frameRate()
      CSD U3 Keypress Boolean_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_instruction: |
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Random Animation_instruction: |
        Use randomNumber() to animate Gary's
        mouth.
      CSD U3 Random Choice_instruction: |
        Use the randomNumber() block to generate
        either 0 or 1
      CSD U3 Random Color_instruction: |
        Could you use randomNumber() to pick random
        colors as well? Try setting one or more of the channels in the rgb block with
        a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: |
        What do you think this code will do when
        it is run? Make a prediction, then run this code 5 - 10 times, recording the
        output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: |
        Using console.log() write a program that
        randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: |
        Pick a shape block and use calls to
        randomNumber() in place of one or more of the parameters. Maker sure you run
        it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: |
        Use randomNumber() on the
        x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: |
        Use randomNumber() on the x
        position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: |
        Put all of your code into
        a draw() loop and then add set the background to blue with the background()
        block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Variable Arithmetic pt2_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variable Arithmetic_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: |
        Predict: What two numbers
        will be displayed in the console?
      CSD U3 Variable Incrementation_instruction: |
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variables CHALLENGE gamelab gary_instruction: |
        Use variables to animate
        Game Lab Gary
      CSD U3 Variables create and assign_instruction: |
        Create and assign size in
        a single line of code.
      CSD U3 Variables draw loop newVars_instruction: |
        Extend this project to create
        your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables draw loop xy_instruction: |
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables eyeBrows_instruction: |
        Predict what will happen when you move
        the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables Initialize_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables Intro_instruction: |
        Create your own variable, give it a value,
        and display that value in the console.
      CSD U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables multiple assignments_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random assignment_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random draw loop_instruction: |
        Predict what will happen when
        you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables random drawing exemplar_instruction: |
        Check out this example
        randomized drawing.
      CSD U3 Variables Random_instruction: |
        Predict: What will get displayed in the
        console?
      CSD U3 Variables Reassign pt2_instruction: |
        Create and assign a new variable
        in a single line.
      CSD U3 Variables Reassign_instruction: |
        Predict: What will get displayed in
        the console?
      CSD U3 Variables Square Random Loop_instruction: |
        Test your predictions from
        the last level.
      CSD U3 Variables Square Random_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables Square_instruction: |
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables TEMPLATE square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables use value rect_instruction: |
        Predict: What will get displayed
        in the console?
      CSD U3 Variables write_instruction: |
        Use the write block to display the value
        of size
      CSD U3 Variables2 expressions in commands_instruction: |
        Use expressions inside
        a drawing command
      CSD U3 Variables2 expressions in variables_instruction: |
        Assign the value of
        each expression to a variable and console.log that variable.
      CSD U3 Variables2 expressions_instruction: |
        Use console.log to display the
        results of each expression. Then create your own.
      CSP Data Unit - Counting Multiple Things_instruction: |-
        If you can count one
        thing you can count multiple things\r
        \r
        Find out how many people like something
        other than dogs and cats\r
        \r
        Count dogs\r
        Count cats\r
        Count total\r
        Do
        the math\r
        \r
        blank/ blank toal\r
        \r
        Can also use this to find percents
        from this\r
        \r
        x% are dog lovers
      CSP Data Unit -Counting Records - Easy Way_instruction: |
        ReadRecords with specific
        criteria \r
        find the length of an array\r
      CSP Data Unit -Counting Records - Hard Way_instruction: |
        \r
        1. ReadRecords
        for all records\r
        2. Way to loop through and count\r
      CSP U4 - JSON Object Intro - Bad Way_instruction: |
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: "Create an object with at\nleast
        5 values including at least one string and one number. (Click to see\nfull
        instructions) \n"
      CSP U4 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      drawings!_instruction: |
        Draw the equilateral triangle - all the sides are the
        same!
      ECSPD Binary Odometer_instruction: |
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: Možeš li postaviti vrijednosti tako da ovaj izraz
        vraća vrijednost "istinito"?
      Eval Booleans 3_instruction: Funkcija "dužina-niza-karaktera" vraća broj karaktera
        u nizu karaktera (uključujući i razmake!). Napravi da ovaj kod vraća vrijednost
        "istinito".
      Eval Booleans 4_instruction: Evo Blok Izvršenja naziva I. Ovaj blok vraća istinito
        ako su obja parametra istinita, inače vraća neistinito. Uredi x varijablu
        tako da izraz vraća istinito.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: Evo još jedan booleov blok naziva NE. Ovaj blok
        mijenja vrijednost sa istinito na neistinito, ili sa neistinito na istinito.
        Ako staviš ovaj blok koda u NE blok, trebao bi vratiti istinito (jer tražimo
        da ova dva izraza NE daju istu vrijednost).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: Booleovi operatori nam omogućuju da poredimo različite
        vrijednosti, te vraćaju "istinito" ako su jednaki ili "neistinito" ako nisu.
        Šta misliš koji rezultat će vratiti ovaj kod?
      Eval Cond 1_instruction: Uslovni blok provjerava booleove izraze u lijevoj koloni,
        i čim nađe jedan koji vraća "istinito" izvršava odgovarajući kod u desnoj
        koloni. Ako nijedan od izraza ne dobije vrijednost "istinito", onda se vraća
        na dno bloka. Promijeni varijablu "temperatura" tako da ovaj blok vraća "Taman
        je".
      Eval Cond 2 (copy 1)_instruction: Ovaj uvjet vraća različit oblik zavisno od
        vrijednosti "stranice" varijable. Promijeni vrijednost "stranice" tako da
        uvjetni blok vraća trokut.
      Eval Cond 2_instruction: Ovaj uvjet vraća različit oblik zavisno od vrijednosti
        "stranice" varijable. Promijeni vrijednost "stranice" tako da uvjetni blok
        vraća trokut.
      Eval Cond 3 (copy 1)_instruction: 'Možeš li napisati uslov koji provjerava varijablu
        "dob" i vraća "Dovoljna dob za glasanje i vozačku dozvolu" ako dob > 17, "Dovoljna
        dob za vozačku dozvolu" ako je dob  > 15, i "Ne može glasati ili voziti" ako
        nijedan od uslova nije tačan. Savjet: Prvi uslov za vraćanje istinito pobjeđuje.
        Pobrinir se da staviš uvjete u pravom redoslijedu.'
      Eval Cond 3_instruction: 'Možeš li napisati uslov koji provjerava varijablu
        "dob" i vraća "Dovoljna dob za glasanje i vozačku dozvolu" ako dob > 17, "Dovoljna
        dob za vozačku dozvolu" ako je dob  > 15, i "Ne može glasati ili voziti" ako
        nijedan od uslova nije tačan. Savjet: Prvi uslov za vraćanje istinito pobjeđuje.
        Pobrinir se da staviš uvjete u pravom redoslijedu.'
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: Evo slična funkcija "crveni oblik" sa dodatnim parametrom
        za veličinu. Dovrši uvjete tako da je ispravan oblik nacrtan pri pozivu sa
        "krug", "trokut" i "zvijezda".
      Eval Cond 6_instruction: |-
        Napiši funkciju pod nazvimo gastro-kritičar koja uzima ime hrane kao ulazni argument i vraća niz karaktera koji kažu šta ti misliš o toj hrani. Na primjer, (gastro-kritičar "pizza") bi mogao reći "ukusno", ali (gastro-kritičar "pokvarena jaja") bi rekao da je to "užasno"! Izaberi dvije vrste hrane za kritiku, ali možeš uraditi i više ako želiš! Ne zaboravi da dodaš "inače" izraz!\r
        Jedan primjer - i dio definicije - smo već odradili za tebe!
      Eval Cond 7_instruction: |
        Free Play: Write a function called green-shape, which
        takes in the name of a shape and produces a solid green shape. Your function
        should work with at least “circle”, “star” and “rectangle”, but you can add
        other shapes if you like. You can choose the size of each shape. Don’t forget
        to add an “else” clause!\r
        One example - and part of the definition -  has
        already been done for you!\r
      Eval Cond 8_instruction: |
        Free Play: Suppose you want to own a car at 21, or
        have your own business by 30. Write a function called life-goals, which takes
        in an age and produces a string that describes your life goals by then. Don’t
        forget to add an “else” clause!\r
      Eval Contracts 1_instruction: Upotrijebi "zvijezda" funkciju za pravljenje crvene
        zvijezde prečnika od 60 piksela
      Eval Contracts 10A_instruction: U redu. Hajde da dovršimo ovaj zadatak sa Zelenim
        Kvadratom koji je 175 piksela veličine.
      Eval Contracts 11A_instruction: Možeš li dovršiti ovaj zadatak tako da na ovom
        naslovu piše "Zdravo Svijete"?
      Eval Contracts 2_instruction: Provjeri ovu "rotiraj" funkciju. Možeš li je upotrijebiti
        da zarotiraš ovaj zeleni kvadrat od 90 piksela veličine za 45 stepeni?
      Eval Contracts 3_instruction: Pokušaj upotrijebiti "tekst" funkciju za pisanje
        ovog tirkiznog teksta veličine 40.
      Eval Contracts 4 A_instruction: Funkcija "skaliraj" vraća sliku koja je ili
        veća ili manja od orginalne ulazne slike. Pokušaj skalirati ovaj kurg za faktor
        10. Kako bi rezultirajuća slika bila drugačija kada bi se ispočetka napravio
        krug te veličine?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: Možeš li dovršiti ovaj zadatak? Veliki trokut
        je ljubičast i veličine od 200 piksela.
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: Provjeri ovu "rotiraj" funkciju. Možeš li je upotrijebiti
        da zarotiraš ovaj zeleni kvadrat od 90 piksela veličine za 45 stepeni?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: 'Možeš li dovršiti ovu sliku koristeći "smanji"
        funkciju? Prečnik je 20. '
      Eval Define Funcs 1_instruction: Evo nove funkcije pod nazivom "zeleni-trokut"
        koja uzima jedan Broj za veličinu i daje zeleni trokut. Upotrijebi novu funkciju
        za pravljenje zelenog trokuta od 125 piksela
      Eval Define Funcs 2_instruction: Hajde da pogledamo unutar ove "zeleni-trokut"
        funkcije da vidimo kakoradi. Možeš li je promijeniti tako da "zeleni-trokut"
        funkcija uvijek crta zeleni trokut sa konturom?
      Eval Define Funcs 3_instruction: 'Evo početka nove funkcije pod nazivom "ljubičasti-krug"
        sa domenom od jednog Broja (prečnik) i Slikom kao kodomenom. Tijelo funkcije
        ne radi dobro, jer uvijek crta krug prečnika od 50 piksela umjesto što koristi
        parametar za prečnik. Zamijeni trenutni Broj sa "prečnik" blokom iz domene. '
      Eval Define Funcs 4_instruction: Napravi novu funkciju pod nazivom "morska-zvijezda"
        koja ima Broj (prečnik) kao Domenu i vraća morsku zvijezdu datog prečnika.
        Pokreni svoju novu funkciju sa prečnikom od 75.
      Eval Define Funcs 5_instruction: Hajde da upotrijebimo "morska-zvijezda" funkciju
        koja pravi red zvijezda različitih veličina. S lijeva na desno, zvijezde bi
        trebale imati prečnike od 25, 50 i 75.
      Eval Define Funcs Test_instruction: 'Evo početka nove funkcije pod nazivom "ljubičasti-krug"
        sa domenom od jednog Broja (prečnik) i Slikom kao kodomenom. Tijelo funkcije
        ne radi dobro, jer uvijek crta krug prečnika od 50 piksela umjesto što koristi
        parametar za prečnik. Zamijeni trenutni Broj sa "prečnik" blokom iz domene. '
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: Napisati ćemo funkciju koja crta
        puni pravougaonik bilo koje boje koji je dva puta širi nego što je visok.
        Počni sa primjerom. Nacrtaj puni zeleni pravougaonik koji ima visinu od 100
        piksela.
      Eval Design Recipe 1_instruction: 'Dobro. Sada imamo Ugovor širok-pravougaonik:
        Brojčani Niz Karaktera -> Slika. Napiši primjer. Nacrtaj puni zeleni pravougaonik
        visine 100 piksela.'
      Eval Design Recipe 2 (copy 1)_instruction: Hajde da napravimo još jedan primjer
        prije nego napišemo definiciju funkcije. Ovaj puta nacrta puni crveni pravougaonik
        visine 75 piksela.
      Eval Design Recipe 2_instruction: Hajde da napravimo još jedan primjer prije
        nego napišemo definiciju funkcije. Ovaj puta nacrta puni crveni pravougaonik
        visine 75 piksela.
      Eval Design Recipe 3_instruction: |
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: 'Koristeći Recept za Crtež, napiši funkciju
        "prugasta-zvijezda" koja uzima dvije boje i pravi zastavu koja je 250 piksela
        široka, 150 piksela visoka, sa tri horizontalne pruge datih boja slijedećeg
        redoslijeda: boja2, boja1, boja2.'
      Eval Design Recipe 6_instruction: Koristeći Recept za Crtež, napiši funkciju
        "veliki-poligon" koja bi trebala dati poligon datih stranica i boje koji zauzima
        većinu prozora, bez obzira ne broj stranica. Da bi bio siguran/na da poligon
        nije prevelik pri povećanju broja stranica, dužina stranice bi trebala biti
        obrnuto proporcionalna broju stranica, sa dužinom od (800/broj stranica).
      Eval Design Recipe Free Play_instruction: Vrijeme za slobodno igranje! Upotrijevi
        recept za crtež da napraviš vlastitu funkciju po svom izboru
      Eval Free Play_instruction: Vrijeme za slobodno igranje! Napravi umjetnost sa
        svojim kodom!
      Eval Strings Images .1_instruction: Do sada smo se samo bavili sa jednom vrstom
        podataka, Brojevima. Drugi tip podataka je Niz Karaktera, koji je kombinacija
        slova, brojeva ili ostalih karaktera koji su pod navodnicima. Pokreni Niz
        Karaktera "Zdravo svijete!" da vidiš šta se dešava.
      Eval Strings Images .2_instruction: Funkcija "nanodaj_na_niz_karaktera" uzima
        dva Niza karaktera i vraća jedan kombinovani niz karaktera. Dodaj Niz karaktera
        "Svemir" na drugi argument "nanodaj_na_niz_karaktera".
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: Pokušaj upotrijebiti ovaj novi Blok Izvršenja
        pod nazivom "prekrivanje" koji će postaviti bijeli trokut od 100 piksela preko
        crvenog kruga od 200 piksela.
      Eval Strings Images 6_instruction: Upotrijebi funkciju prekrivanja da postaviš
        žutu zvijezdu od 75 piksela preko plavog pravougaonika dugog 150 piksela.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      Farmer for Authored Hint testing_instruction: |
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Frequency Analysis_instruction: Test
      frozen circle function in circle_instruction: Hajde sada da napravimo 20 preklapajućih
        krugova, okrećući za 18 stepeni između svakog kruga.
      frozen circle function with parameter_instruction: Evo "Napravi krug" blok koji
        može napraviti krugove različitih veličina. Možeš li ovo upotrijebiti da napraviš
        mali krug veličine 5 i veliki krug veličine 10?
      frozen circle function_instruction: Upotrijebi novu "Kreiraj krug" blok za pravljenje
        10 preklapajućih krugova. Ne zaboravi da skočiš naprijed između krugova.
      frozen circle_instruction: Krug je poseban oblike. Možeš li shvatiti s kojim
        brojem trebaš zamijeniti upitnike da bi se nacrtao krug?
      frozen cross rotate dense_instruction: 'Hajde da to ponovimo 90 puta! Koliko
        je puta 90 sadržano u 360? Savjet: Odgovor je jako malen broj.'
      frozen cross rotate_instruction: Sada to pokušaj ponoviti 10 puta. Za koliko
        stepeni trebaš okrenuti između svake linije?
      frozen cross_instruction: Upotrijebi "Ponovi" blok za pravljenje plusa. Jesi
        li primjetio/la da se Elsa može pomjerati naprijed i nazad?
      frozen diamond mini snowflake_instruction: Znaš li da svaka pahulja ima drugačiji
        oblik? Hajde da napravimo novu pahulju snijega koristeći "Ponavljaj" blok
        za ponavljanje paralelograma 4 puta, okrećući za 90 stepeni između svakog
        od paralelograma.
      frozen diamond snowflake_instruction: Hajde sada da napravimo novu pahulju koristeći
        blok ponavljanja za ponavljanje paralelograma 10 puta, okrećući udesno za
        36 stepeni između svakog oblika.
      frozen diamond_instruction: Koristite ponavljanje oko tih blokova za stvaranje
        paralelogram. To je kao pravokutnik ali ima različitih kutova. Ovaj ima 60
        stupnjeva i 120 stupnjeva kut umjesto 90 stupnjeva kut.
      frozen freeplay_instruction: Službeno si postao/postala majstor-umjetnik! Napravi
        snježnu bajku.
      frozen line_instruction: Zdravo! Ja sam Elsa od Arendelle. Pomozi mi da napravim
        liniju.
      frozen perpendicular_instruction: Hajde sada da napravimo dvije linije koje
        zatvaraju ugao od 90 stepeni. Trebati ćeš koristiti "Okreni" i "Pokreni" blok.
      frozen snowflake branch_instruction: Pokušaj upotrijebiti "Napravi granu pahulje"
        blok da bi se napravile tri grane koje počinju ličiti na pahuljice.
      frozen snowflake full_instruction: Hajde da to ponovimo 8 puta da bismo napravili
        predivnu pahulju!
      frozen snowflower_instruction: Zamršeni sniježni uzorci mogu biti napravljeni
        pomoću vrlo jednostavnih oblika. Možeš li napraviti uzorak ponavljajući 5
        krugova veličine 5 i 5 krugova veličine 10?
      frozen square iterative_instruction: Izgleda da smo na pola puta za pravljenje
        kvadrata. Hajde da sastavimo 4 linije da bismo dobili kvadrat.
      frozen square loop 3x_instruction: Hajde da napravimo tri kvadrata, okrečući
        nakon svakog kvadrata. Obavezno okreni za 120 stepeni prije svakog kvadrata.
      frozen square loop_instruction: 'Zdravo, ja sam Anna od Arendelle! Hajde da
        napravimo kvadrat sa "Ponavljaj" blokom koji koristi manje blokova. Koliko
        puta (???) bi trebao "Ponavljaj" blok izvršiti blokove unutar sebe da bi se
        napravio kvadrat? '
      frozen square snowflake_instruction: Možeš li napraviti pahulju snijega koristeći
        "Ponavljaj" blok za pravljenje kvadrata 10 puta, a onda upotrijebiti "Okreni"
        blok da bi se između crtanja svakog od oblika okrenulo za 36 stepeni?
      Infinity_catch_instruction: 'Možeš li koristeći tipke sa strelicama načiniti
        da Elsa ("lik 2") prestigne Annu? '
      Infinity_finale_instruction: Napravi šta god želiš i podijeli!
      Infinity_move_collide_instruction: Hiro je "lik 1". Pomjeri ga udesno sve do
        Baymax-a te odsviraj zvuk kada se dotaknu.
      Infinity_move_directions_instruction: Baymax je "lik 2". Dodaj Pokreni blokove
        i onda pomjeri Baymax-a koristeći strelice. Neka onda dotakne dva ostala lika.
      Infinity_move_right_instruction: Hiro je "lik 1". Koristi Pokreni blok da bi
        pomjerio/la Hiro-a udesno sve dok ne dotakne Baymax-a.
      Infinity_repeat_instruction: Upotrijebi "ponavljaj zauvijek" blok da napraviš
        da se Anna kreće gore i dole za 400 piksela.
      Infinity_say_instruction: Učini da Anna kaže "Zdravo." koristeći Kaži blok.
      Infinity_shoot_instruction: Baymax je "lik 2". Neka Baymax baci raketu na Hiro-a.
      Infinity_shoot_directions_instruction: Hiro je "lik 3". Neka Hiro baci po projektil
        na svaki od četiri lika. Čekaj jednu sekundu prije svakog bacanja.
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: Dodirni još više pahuljica!
      Infinity_touch_four_instruction: Pokreni Annu prema gore, dole lijevo, i onda
        desno da bi dotakla svaku od četiri pahuljice.
      Infinity_touch_score_instruction: Učini da Anna osvoji bod svaki put kada dotakne
        pahuljicu snijega. Onda klikni na "Pokreni" i upravi Annu da dodatkne svaku
        od pahuljica samo jednom.
      jessie-test_instruction: Lots of instructions
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: Nacrtaj kratku liniju gore i jednu dugačku
        liniju desno!
      K-1 artist 1 level 10_instruction: Nacrtaj isprekidanu liniju koristeći blokove
        za skakanje i za crtanje
      K-1 artist 1 level 9_instruction: Nacrtaj ovo koristeći tri linije
      K-1 Artist Loops 1_instruction: Nacrtaj ovu liniju krećući se ka Istoku 4 puta.
      K-1 Artist Loops 2_instruction: Možeš li nacrtati ovu istu liniju ali koristeći
        petlju?
      K-1 Artist Loops 3_instruction: Možeš li staviti ove blokove u petlju da bi
        se nacrtalo 6 linija?
      K-1 Artist Loops 4_instruction: Može li nam petlja pomoći da nacrtamo vrh ovog
        dvorca?
      K-1 Artist Loops 5_instruction: "Šta možeš ponavljati u petlji 4 puta da bi
        se nacrtale ove stepenice?"
      K-1 Artist Loops 6_instruction: 'Za ovo su potrebne dvije petlje: jedna za penjanje
        uz stepenice, a jedna za silaženje niz stepenice.'
      K-1 Artist Loops 7_instruction: Možeš li završiti ovaj uzorak sa dvije petlje?
      K-1 Artist Loops 8_instruction: Ove stepenice imaju duže stepenike.
      K-1 Artist Loops 9_instruction: 'Procjena: Upotrijebi petlju za crtanje stepenica'
      K-1 Artist Loops Free Play_instruction: Vrijeme za slobodno igranje! Nacrtaj
        nešto zabavno!
      K-1 Artist1 1_instruction: Nacrtaj stopalo ovog čovjeka sa jednom linijom
      K-1 Artist1 10_instruction: Nacrtaj i Skoči da bi napravio/la isprekidanu putanju
        do blaga X
      K-1 Artist1 2_instruction: Nacrtaj brk na mački sa dvije linije!
      K-1 Artist1 3_instruction: Nacrtaj dvije linije istočno i dvije linije sjeverno
        da bi se završila kuća!
      K-1 Artist1 4_instruction: Nacrtaj linije gore, preko, i dole da bi se dovršio
        dvorac!
      K-1 Artist1 5.5_instruction: Dovrši treći toranj dvorca koristeći duge linije
      K-1 Artist1 5_instruction: Nacrtaj stabljiku ovog cvijeta sa dvije linije!
      K-1 Artist1 6_instruction: Dovrši sliku koristeći blok za skakanje!
      K-1 Artist1 7_instruction: Upotrijebi blok za skakanje da bi se pokretao/la
        bez crtanja. Skoči prema gore i nacrtaj liniju.
      K-1 Artist1 8_instruction: Nacrtaj isprekidanu liniju koristeći blokove za skakanje
        i crtanje
      K-1 Artist1 9_instruction: Crtaj i Skači da bi napravio/la isprekidanu liniju
      K-1 Artist1 Assessment 1_instruction: Nacrtaj kratke i duge linije!
      K-1 Artist1 Assessment 2_instruction: Nacrtaj kratke isprekidane linije!
      K-1 Artist2 1_instruction: Nacrtaj kvadrat ispod trokuta.
      K-1 Artist2 2_instruction: Skoči i nacrtaj kvadrat pored kuće.
      K-1 Artist2 3_instruction: Nacrtaj kvadrat iznad drugog kvadrata
      K-1 Artist2 4_instruction: Nacrtaj pravougaonik za dovršetak mosta.
      K-1 Artist2 5_instruction: Nacrtaj pravougaonik da bi dovršio/la bazu mosta
      K-1 Artist2 6_instruction: Nacrtaj dva kvadrata da bi napravio/la pravougaonik!
      K-1 Artist2 Assessment1_instruction: 'Ocjenjivanje: Nacrtaj kvadrat pored drugog
        kvadrata.'
      K-1 Artist2 Free Draw_instruction: Nacrtaj bilo šta!
      K-1 Artist2_7_instruction: Nacrtaj pravougaonik da bi dobio/la gornju laticu
        ormarića!
      K-1 Bee 1_instruction: Pokreni me do cvijeta, pokupi nektar, i onda me pomjeri
        do saća meda, i napravi med
      K-1 Bee 10_instruction: Pokupi četiri nektra i onda napravi dva meda!
      K-1 Bee 11.5_instruction: Pokupi četiri nektra za pravljenje četiri meda!
      K-1 Bee 11_instruction: Pokupi tri nektra i onda napravi jedan med
      K-1 Bee 12_instruction: Pokupi tri nektra i onda napravi jedan med!
      K-1 Bee 13_instruction: Pokupi tri nektra i onda napravi jedan med!
      K-1 Bee 14_instruction: Dovedi me do nektra, pokupi ga, dovedi me do saća meda,
        i onda napravi med
      K-1 Bee 15_instruction: Pokupi dva nektra i napravi dva meda!
      K-1 Bee 2_instruction: Pokreni me do cvijeta, pokupi nektar, i onda me pomjeri
        do saća meda, i napravi med
      K-1 Bee 3_instruction: Pokreni me do cvijeta, pokupi nektar, i onda me pomjeri
        do saća meda, i napravi med
      K-1 Bee 4_instruction: Pokupi dva nektra i napravi dva meda!
      K-1 Bee 5_instruction: Pokupi tri nektra i onda napravi tri meda!
      K-1 Bee 6_instruction: Pokupi dva nektra i napravi dva meda!
      K-1 Bee 7_instruction: Pokupi tri nektra i onda napravi jedan med!
      K-1 Bee 8_instruction: Pokupi dva nektra i napravi dva meda!
      K-1 Bee 9_instruction: Pokupi dva nektra i napravi dva meda!
      K-1 Bee Assessment 1_instruction: Pokupi nektar za pravljenje meda!
      K-1 Bee Assessment 2_instruction: Pokupi nektar za pravljenje meda!
      K-1 Bee Loops 1_instruction: Pokupi nektar za pravljenje meda!
      K-1 Bee Loops 10_instruction: Upotrijebi petlje za skupljanje nektra, pravljenja
        meda i pokretanja!
      K-1 Bee Loops 11_instruction: 'Procjena: Upotrijebi petlje i pokupi nektar i
        med!'
      K-1 Bee Loops 12_instruction: 'Procjena: Upotrijebi petlje za skupljanje nektra,
        pravljenje meda i pokretanje!'
      K-1 Bee Loops 2_instruction: Upotrijebi petlju za pomjeranje a onda pokupi nektar
        i napravi med!
      K-1 Bee Loops 3_instruction: Upotrijebi petlje za skupljanje nektra i pravljenje
        meda!
      K-1 Bee Loops 4_instruction: Upotrijebi petlje za skupljanje nektra, pravljenje
        meda i pokretanje!
      K-1 Bee Loops 5_instruction: Koristi petlje za skupljanje nektra i meda!
      K-1 Bee Loops 6_instruction: Upotrijebi petlje za skupljanje nektra, pravljenja
        meda i pokretanja!
      K-1 Bee Loops 7_instruction: Upotrijebi petlje za skupljanje nektra i pravljenje
        meda!
      K-1 Bee Loops 8_instruction: Upotrijebi petlje za skupljanje nektra i pravljenje
        meda!
      K-1 Bee Loops 9_instruction: Upotrijebi petlje za skupljanje nektra, pravljenja
        meda i pokretanja!
      K-1 Bee Loops Assessment 1_instruction: Pokupi nektar za pravljenje meda i upotrijebi
        petlje za pokretanje!
      K-1 Bee Loops Assessment 2_instruction: Pokupi nektar za pravljenje meda koristeći
        petlje!
      K-1 Bee Puzzle 12_instruction: Sakupi tri nektara i onda napravi dva meda
      K-1 Building a Foundation Assessment_instruction: Napravi piramidu od tri nivoa.
        Nemamo nekih posebnih uputstava. Samo se igraj sa objektima sve dok to ne
        ostvariš!
      k-1 maze 1_instruction: Možeš li me pokrenuti ka Zapadu da bih došao do svinje?
      K-1 Maze 10_instruction: 'Zaobilazi TNT da bi me dovei/la do svinje! '
      K-1 Maze 11_instruction: 'Prati putanju i dovedi me do šašave svinje. Zaobilazi
        TNT ili će perje letjeti! Savjet: Svinja je južno od mene.'
      K-1 Maze 2_instruction: Pokreni me ka Istoku da bi me doveo/la do svinje!
      K-1 Maze 3_instruction: Pokreni me ka Jugu da bi me doveo/la do svinje!
      K-1 Maze 4_instruction: Pokreni me ka Sjeveru da bi me doveo/la do svinje!
      K-1 Maze 5_instruction: Pokreni me ka Istoku da bi me doveo/la do svinje!
      K-1 Maze 6_instruction: Kreći se u jednom smjeru, zatim u drugom da bi me doveo/la
        do svinje!
      K-1 Maze 7_instruction: Kreći se u jednom smjeru, zatim u drugom da bi me doveo/la
        do svinje!
      K-1 Maze 8_instruction: Kreći se u jednom smjeru, zatim u drugom da bi me doveo/la
        do svinje!
      K-1 Maze 9_instruction: Kreći se u jednom smjeru, zatim u drugom da bi me doveo/la
        do svinje!
      K-1 Maze Assessment 1_instruction: Procjena -- Dovedi me do svinje!
      K-1 Maze Assessment 12_instruction: Nivo Procjene
      K-1 Maze Assessment 13_instruction: Nivo Procjene
      K-1 Maze Assessment 2_instruction: Procjena -- Dovedi me do svinje!
      K-1 maze debug 1_instruction: Promijeni kod da bi me doveo/la do svinje!
      K-1 maze debug 10_instruction: Ispravi ovaj nivo tako što ćeš preraspodijeliti
        i dodati blokove da bi me doveo/la do svinje!
      K-1 maze debug 11_instruction: |-
        Ovo je test!\r
        Ispravi ovaj nivo tako što ćeš preraspodijeliti i dodati blokove da bi me doveo/la do svinje
      K-1 maze debug 2_instruction: Shvati šta nedostaje i onda dodaj blokove da bi
        me doveo/la do svinje!
      K-1 maze debug 3_instruction: Shvati šta nije u redu i onda ukloni blokove da
        bi me doveo/la do svinje!
      K-1 maze debug 4_instruction: Prođi kroz ove blokove i popravi ih! Mislim da
        sa ovim redoslijedom blokova idem u pogrešnom smjeru.
      K-1 maze debug 5_instruction: Ispravi ovaj nivo tako što ćeš preraspodijeliti
        i dodati blokove da bi me doveo/la do svinje!
      K-1 maze debug 6_instruction: Ispravi ovaj nivo tako što ćeš preraspodijeliti
        i dodati blokove da bi me doveo/la do svinje!
      K-1 maze debug 7_instruction: Ispravi ovaj nivo tako što ćeš preraspodijeliti
        i dodati blokove da bi me doveo/la do svinje!
      K-1 maze debug 8_instruction: Ispravi ovaj nivo tako što ćeš preraspodijeliti
        i dodati blokove da bi me doveo/la do svinje!
      K-1 maze debug 9_instruction: Ispravi ovaj nivo tako što ćeš preraspodijeliti
        i dodati blokove da bi me doveo/la do svinje!
      K-1 Maze debug Assessment 1_instruction: Procjena -- Ispravi ovaj nivo preraspodjelom
        i dodavanjem blokova da bi me doveo/la do svinje!
      K-1 Maze Loops 1_instruction: Dovedi me do svinje!
      K-1 Maze Loops 10_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 11_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 12_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 2_instruction: Upotrijebi blok Ponavljanja da me dovedeš do svinje!
      K-1 Maze Loops 3_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 4_instruction: Dovedi me do svinje!
      K-1 Maze Loops 5_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 6_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 7_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 8_instruction: Dovedi me do svinje! Upotrijebi petlju ponavljanja.
      K-1 Maze Loops 9_instruction: Dovedi me do svinje!
      K-1 Maze Loops Assessment 1_instruction: Procjena -- Upotrijebi petlje da me
        dovedeš do svinje!
      K-1 Maze Loops Assessment 2_instruction: Procjena -- Upotrijebi petlje da me
        dovedeš do svinje!
      K-1 Maze Multi 14_instruction: Nivo Procjene
      K-1 Maze Multi 15_instruction: Nivo Procjene
      K-1 Maze Sequence Assessment 1_instruction: |-
        Ovo je test!\r
        Pokreći se u jednom smjeru,
        a zatim u drugom da bi me doveo/la do svinje
      K-1 Maze Sequence Assessment 2_instruction: |-
        Ovo je test!\r
        Pokreći se u jednom smjeru,
        a zatim u drugom da bi me doveo/la do svinje.
      kikiTesting_instruction: |
        .\r
         .\r
        .\r
        .\r
        .\r
        .\r
        \r
        .\r
        \r
      love_spring_1_instruction: |
        Let's celebrate Spring!  We have put some seeds
        in the ground to prepare for the season's flowers.  Can you cover them up
        so that the birds don't eat them?
      love_spring_2_instruction: |
        Our flowers are in full bloom!  Now we need the
        bee to grab nectar from each one so he can make plenty of honey back at his
        hive!
      love_spring_3_instruction: |-
        Figure out how to change this code so that Robin
        chooses a number between 1 and 20.  \r
        \r
        When you're ready, press "Run"
        and play until you guess Robin's number!
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      Middle School Hackathon Pt 1_instruction: "(Click to see full instructions)"
      Middle School Hackathon Pt 2_instruction: "(Click to see full instructions)"
      MSM Big Game Empty_instruction: Sve varijable i funkcije su trenutno prazne.
        Svaki nivo predstavlja napredak i definisanje funkcija, što će povećati funkcionalnost.
      MSM Big Game Vars 1 (copy 1)_instruction: U alatnoj traci za Varijable ćeš vidjeti
        nekoliko varijabli koje definišu kako će karakteri u tvojoj igrici izgledati,
        kako će se kretati i kakvu će imati interakciju sa drugim likovima
      MSM Big Game Vars 1_instruction: U alatnoj traci za Varijable ćeš vidjeti nekoliko
        varijabli koje definišu kako će karakteri u tvojoj igrici izgledati, kako
        će se kretati i kakvu će imati interakciju sa drugim likovima
      MSM Big Game Vars Backup_instruction: U alatnoj traci za Varijable ćeš vidjeti
        nekoliko varijabli koje definišu kako će karakteri u tvojoj igrici izgledati,
        kako će se kretati i kakvu će imati interakciju sa drugim likovima
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim Standalone Automatic DNS_instruction: |
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: |
        In this version of the Internet Simulator,
        you can connect to up to 5 other people in a room. When you send messages
        in the room, everyone receives them. What are some of the challenges of this
        system, and how might you solve them?\r
      NetSim Standalone Classroom Routers_instruction: |
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
      NetSim Standalone Routers Addresses_instruction: |-
        For this activity, connect
        to a router with the others in your group. Important note: The router will
        only properly route messages where the first 4 bits are the To: address and
        the second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      NetSim Standalone SendAB_instruction: |
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
      NetSim Standalone Sending Numbers_instruction: "You and your partner can now\nreliably
        send messages back and forth without extra coordination! While you're\nalways
        sending bits back and forth, you can also represent those bits as decimal\nnumbers.
        What kinds of information can you represent with this system? \n"
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: Nacrtaj nešto cool! Tvoj kod je snimljen kao
        pojekt kojem se možeš vratiti kada god poželiš.
      NEW Course 4 Artist Functions 1_instruction: Možeš li pomoću petlje nacrtati
        kvadrat koji ima dužinu od 100 piksela?
      NEW Course 4 Artist Functions 10.1_instruction: |
        Use the functions from the
        previous puzzles to draw this pattern.
      NEW Course 4 Artist Functions 10_instruction: Klikni na "uredi" da popuniš blokove
        u definiciji funkcije koja pravi kvadrat od 40 piksela.
      NEW Course 4 Artist Functions 11_instruction: Imamo novu funkciju koja se zove
        "nacrtaj liniju od kvadrata". Slobodno pogledaj unutar funkcijskog bloka da
        vidiš kako smo ga napravili. Klikni na "Pokreni" kada si spreman/na za slijedeći
        zadatak.
      NEW Course 4 Artist Functions 12_instruction: Upotrijebi "nacrtaj liniju od
        kvadrata" funkciju iz posljednjeg zadatka da bi nacrtao/la ovaj uzorak.
      NEW Course 4 Artist Functions 13_instruction: 'Možeš li nacrtati zvjezdasti
        oblik koristeći "nacrtaj liniju od kvadrata" funkciju? Savjet: možda ćeš se
        morati pomjeriti naprijed za 60 piksela i okrenuti za 144 stepeni'
      NEW Course 4 Artist Functions 14_instruction: 'Vrijeme za slobodno igranje! '
      NEW Course 4 Artist Functions 2_instruction: 'Možeš li nacrtati 3 kvadrata udaljene
        za 20 piksela? Savjet: svaki kvadrat ima veličinu od 100 piksela'
      NEW Course 4 Artist Functions 3_instruction: 'Evo novi tip Bloka pod nazivom
        "Funkcijski blok". Klikni na "POKRENI" da vidiš šta može. '
      NEW Course 4 Artist Functions 4_instruction: 'Upotrijebi "nacrtaj kvadrat" funkciju
        za crtanje ovog uzorka. Savjet: Morati ćeš upotrijebiti "okreni na desno za
        120 stepeni" blok za svaki od kvadrata.'
      NEW Course 4 Artist Functions 5_instruction: Kako je "nacrtaj kvadrat" blok
        znao koje komande izvršiti? Klikni na "uredi" u "nacrtaj kvadrat" funkcijskom
        bloku. Blokovi unutar urednika su definicije koje čine "nacrtaj kvadrat" funkciju.
        Kada si završio/la sa pregledom, klikni na "Spremi i Zatvori" i onda klikni
        na "Pokreni".
      NEW Course 4 Artist Functions 6_instruction: |
        Koristeći "nacrtaj kvadrat" funkcijski blok, možeš li nacrtati ovu sliku? Savjet: kvadrati su razmaknuti za 20 piksela.\r
      NEW Course 4 Artist Functions 7_instruction: 'Jesi se već navikao/la na korištenje
        funkcijskih blokova? Hajde da promijenimo ovaj kvadrat tako da je veličine
        200 piksela. Savjet: klikni na "uredi" da bi promijenio/la veličinu urednika
        funkcije "nacrtaj kvadrat". Sjeti se da klikneš na "spremi i zatvori" da bi
        izašao/la i urednika ove funkcije. '
      NEW Course 4 Artist Functions 8_instruction: Dali smo ti većinu koda za kreiranje
        funkcije. Međutim, izgleda da nešto nedostaje. Možeš li preurediti definiciju
        funkcije da bi se nacrtao trokut?
      NEW Course 4 Artist Functions 9_instruction: Koji blok trebaš dodati da bi dobio/la
        trokut na vrhu kvadrata?
      NEW Course 4 Artist Functions inspire_instruction: |
        Click here to see the inspiration
        picture again.
      New Course 4 Artist Functions Level 4_instruction: Upotrijebi "nacrtaj kvadrat"
        funkciju da bi nacrtao/la ovaj uzorak.
      NEW Course 4 Artist Params 1_instruction: Hajde da definišemo funkciju koja
        crta kvadrat sa stranicama od 50 piksela. Klikni na "uredi" da bi započeo/la.
      NEW Course 4 Artist Params 10_instruction: 'Napravi "nacrtaj šestougaonik" funkcijski
        blok sa parametrom koji označava dužinu. Savjet: ovaj šestougaonik je veličine
        100 piksela. '
      NEW Course 4 Artist Params 11_instruction: Možeš li shvatiti kako nacrtati ovaj
        oblik? Uredi funkciju tako da koristi "stranice" parametar.
      NEW Course 4 Artist Params 12_instruction: Možeš li dovršiti ovaj crtež? Stranice
        svih oblika su 100 piksela duge.
      NEW Course 4 Artist Params 12a_instruction: |
        This image is similar to the last.
        Can you use a `for` loop with your function to make this design?
      NEW Course 4 Artist Params 13_instruction: 'Hajde da preuredimo ovu "nacrtaj
        oblik" funkciju koja već ima "dužinu" kao parametar. Dodajmo sada parametar
        za "stranice". Sjeti se da je ugao za okretanje datog oblika jednak 360 podijeljeno
        sa brojem stranica tog oblika. Savjet: dužina stranica za trokut je 100 piksela,
        za šestougaonik je 25 piksela, i za kvadrat je 50 piksela.'
      NEW Course 4 Artist Params 14_instruction: 'Možeš li ponovo napraviti ove oblike?
        Dovuci "dužina" parametar u definiciju funkcije. '
      NEW Course 4 Artist Params 15_instruction: Vrijeme za slobodno igranje! Evo
        funkcija koje si napisao/la i još nekih dodatnih. Nacrtaj nešto fantastično!
      NEW Course 4 Artist Params 2_instruction: Napravi ispočetka "nacrtaj trokut"
        funkciju sa stranicama dužine od 50 piksela
      NEW Course 4 Artist Params 3_instruction: |
        Hajde sada da upotrijebimo funkciju za crtanje 3 trokuta u nizu iz posljednjeg zadatka. Savjet: trokutovi su razmaknuti za 50 piksela.\r
      NEW Course 4 Artist Params 4_instruction: Primjetiš li nešto drugačije u vezi
        ovih funkcijskih blokova? Klikni na "Pokreni" da vidiš šta će se desiti.
      NEW Course 4 Artist Params 5_instruction: 'Isputni ??? u ulazni blok za parametar
        koji označava dužinu. Savjet: petougao je veličine od 100 piksela.'
      NEW Course 4 Artist Params 6_instruction: Unesi "dužina" parametar da bi nacrtao/la
        ove oblike zamjenom "???" sa odgovarajućim brojevima. Kvadrat i trokut su
        100 piksela veličine dok je šestougaonik 75 piksela veličine.
      NEW Course 4 Artist Params 7_instruction: 'Možeš li dovršiti ovaj crtež? Savjet:
        svaki od trokutova je za 25 piksela veći nego prethodni. Prvi trokut je 25
        piksela veličine.'
      NEW Course 4 Artist Params 8_instruction: 'Možeš li nacrtati svaki od ovih trokutova
        sa tom novom funkcijom? Prvi je dug 25 piksela, drugi 50, a treći 75. Savjet:
        Počni klikom na "uredi" u svom funkcijskom bloku.'
      NEW Course 4 Artist Params 9_instruction: 'Klikni na "uredi" da upišeš definiciju
        "nacrtaj kvadrat" funkcije i dodaš parametar. Funkcija bi trebala imati dužinu
        kao parametar, baš kao i trokut. Ovaj put, nacrtaj 3 kvadrata: dužine od 25,
        50 i 75 piksela, razmaknuti za 100 piksela.'
      NEW Course 4 Artist Params inspire_instruction: "Free Play Inspiration: You've\nnow
        learned everything you need to know to make a pattern like this! If this\npicture
        inspires you, try to make something similar. Otherwise, create something\nall
        your own.\\r\n \\r\nWant to know how our inspiration pattern was made? "
      NEW Course 4 Artist Vars 1.5_instruction: 'Pogledaj ovaj kod. Možeš li vidjeti
        kako "postavi dužinu" i "dužina" blok rade zajedno? Klikni na "Pokreni" da
        ih vidiš u akciji. '
      NEW Course 4 Artist Vars 12_instruction: Pogledaj ovaj kod. Možeš li vidjeti
        kako "postavi dužinu" i "dužina" blok rade zajedno? Klikni na "Pokreni" da
        ih vidiš u akciji. Zamijeni broj 5 sa "stranice" varijablom, i upotrijebi
        "postavi stranice na" blok.
      NEW Course 4 Artist Vars 2.5_instruction: 'Pogledaj ovaj kod. Možeš li vidjeti
        kako "postavi dužinu" i "dužina" blok rade zajedno? Klikni na "Pokreni" da
        ih vidiš u akciji. '
      NEW Course 4 Artist Vars 2_instruction: 'Dovuci broj blok na "postavi dužinu"
        blok da bi nacrtao/la skup od trokutova od 50 piksela veličine. '
      NEW Course 4 Artist Vars 4 5_instruction: Super odrađen prethodni zadatak! Hajde
        da probamo ovaj puta napraviti cool crtež sa heksagonima od 60 piksela veličine.
      NEW Course 4 Artist Vars 4_instruction: Hajde da pokušamo ponovo. Hajde sada
        da napravimo ovaj cool crtež sa šestougaonicima od 60 piksela.
      NEW Course 4 Artist Vars 6_instruction: Možeš li mi pomoći da nacrtam ovaj cool
        uzorak tako što ćeš ubaciti "dužina" varijablu u ispravno mjesto?
      NEW Course 4 Bee For Loops 1_instruction: Upotrijebi petlju za skupljanje nektra
        iz svakog cvijeta.
      NEW Course 4 Bee For Loops 10_instruction: Upotrijebi "brojač" varijablu iz
        svoje "od-do" petlje da bi kontrolisao/la koliko se treba pomjeriti horizontalno.
      NEW Course 4 Bee For Loops 10a_instruction: |
        Ready for a challenge?  Take what
        you've learned about loops and try to solve this problem. Remember: You may
        have to run through solutions multiple times before you figure out all of
        the steps.
      NEW Course 4 Bee For Loops 11_instruction: Možeš li koristiti varijablu petlje
        za kontrolisanje kretanja i sakupljanja nektra?
      NEW Course 4 Bee For Loops 2_instruction: Dodaj neophodan kod da bi dvije pčele
        skupile sav nektar. Pogledaj koliko koda trebaš za ovaj zadatak! (Naučićemo
        jednostavniji način u slijedećem zadatku)
      NEW Course 4 Bee For Loops 3_instruction: 'Ah, sa "od-do" petljom je to puno
        lakše! Sav kod koji trebaš je tamo. Pogledaj kako je sastavljen i onda klikni
        na "Pokreni" da vidiš kako radi. '
      NEW Course 4 Bee For Loops 4 4_instruction: 'Možeš li pomoći Pčeli da sakupi
        ostatak meda koristeći "od-do" petlju? '
      NEW Course 4 Bee For Loops 4_instruction: 'Zamijeni ??? u "od-do" petlji sa
        najvećom količinom nektra kojeg pčela mora sakupiti. '
      NEW Course 4 Bee For Loops 5 5_instruction: Jesi li se već navikao/la na korištenje
        "od-do" petlje? Hajde da pomognemo pčeli da pokupi ostatak nektra.
      NEW Course 4 Bee For Loops 5_instruction: Možeš koristiti petlju i za odbrojavanje.
        Pokušaj sakupiti nektar sa odbrojavanjem od 5 do 1 za 1.
      NEW Course 4 Bee For Loops 6_instruction: Zadnji broj u tvojoj "od-do" petlji
        se zove "prirast", i svako put kada se pokrene petlja, brojač varijabla se
        poveća za veličinu prirasta. Pokušaj skupiti ove cvjetove koristeći prirast
        od 2.
      NEW Course 4 Bee For Loops 7_instruction: Je si li se navikao/la na "od-do"
        petlje? Ovo je slično posljednjem zadatku, ali moraš sakupiti 2,4,6,8,10 nektar.
        Dali smo ti početni kod kojem nedostaju brojevi u brojač petljama. Hajde da
        sakupimo nešto nektra!
      NEW Course 4 Bee For Loops 8_instruction: |
        Ako tvoja petlja broji prema gore, prirast je dodat na brojač varijablu pri svakom prolasku kroz petlju. Za koliko trebaš povećati da bi sakupio/la 3, 6, 9 nektara?\r
      NEW Course 4 Bee For Loops 9_instruction: Ako tvoja petlja broji prema dole,
        korak za povećanje se pri svakom prolazu kroz petlju oduzima od trenutne vrijednosti
        tvoje brojač varijable. Koliki bi trebao biti korak povećanja da bi se sakupilo
        9, onda 6, i 3 nektra?
      NEW Course 4 Bee For Loops 95_instruction: |
        Take a look at each piece of the
        "for loop" that you have just created.  Can you figure out which numbers
        you need to double to solve this puzzle? Why does it work?
      NEW Course 4 Play Lab Params 11_instruction: 'Vrijeme je za slobodno igranje!
        Zabavi se sa svim blokovima u tvojoj alatnoj traci. '
      NEW Course 4 Play Lab Params 5 5_instruction: 'Popuni ulazne parametre za lika
        sa brojevima (1, 2, i 3) da bi napravio/la da ovi likovi izviđaju. '
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Šta misliš da će učinii ovaj kod?
        Klikni na "Pokreni" da vidiš šta će se desiti".'
      NEW Course 4 Play Labs For Loops 7a_instruction: |
        Using what you learned so
        far, can you have Dinosaur take a step forward every time Penguin counts?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Vrijeme je za slobodno
        igranje. Zabavi se sa svim blokovima u tvojoj alatnoj traci. '
      NEW Course 4 Play Labs For Loops 8a_instruction: "Challenge: How would you\nuse
        the \"for loop\" to get every actor to go around and say their actor number,\nthen
        vanish from the screen? \n"
      New Play Lab Project_instruction: Napravi svoju vlastitu priču ili igru! Tvoj
        kod je spremljen kao projekat i možeš mu se vratiti u bilo koje vrijeme.
      Ninjacat Demo B (copy 1)_instruction: |
        \r
        Hajde da počnemo istraživati jednostavnu video igricu, i da otkrijemo kako radi. Možeš koristiti tipke sa strelicama za kretanje ninje lijevo, desno i za skok. Pokušaj uhvatiti jednoroga i izbjeći zmaja!\r
        \r
        \r
        \r
          \r
        \r
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 bat_instruction: |
        Freeplay: Here are some functions to play with.  Can
        you draw a bat?\r
      October15 ghost 1_instruction: |
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 JoL 1_instruction: |
        Program the artist to design a face for your
        jack-o-lantern!
      October15 pumpkin 1_instruction: |
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: |
        Running into a Creeper is a bad idea.
        Carefully move past the Creepers and reach the safety of your home.
      Overworld Chop Tree - allthethings_instruction: |
        Wood is a very important resource.
        Many things are made from it. Walk to the tree and use the “destroy block”
        command to chop it down.
      Overworld Chop Tree_instruction: |
        Wood is a very important resource. Many things
        are made from it. Walk to the tree and use the “destroy block” command to
        chop it down.
      Overworld Chop Trees_instruction: |
        We need to build a house before the sun
        goes down. Houses require a lot of wood. Cut down all 3 trees.
      Overworld Free Play 20x20_instruction: |
        Congratulations! You've completed
        all our puzzles! Now mine, build, and create something unique by using everything
        you've learned so far.
      Overworld Free Play_instruction: |
        This landscape is yours to play with. You
        choose what to build.
      Overworld House Frame - A_instruction: |
        Let's make our own house! This spot
        looks good. Build a frame on the dirt blocks.
      Overworld House Frame - C_instruction: |
        Let's make our own house! This spot
        looks good. Build a frame on the dirt blocks.
      Overworld House Frame B_instruction: |
        One wall is finished, let’s build the
        rest of the house by following your floor plan! You’ll have to repeat yourself
        quite a lot here.
      Overworld House Frame B2_instruction: |
        One wall is finished, let’s build the
        rest of the house by following your floor plan! You’ll have to repeat yourself
        quite a lot here.
      Overworld House Frame C_instruction: |
        One wall is finished, let’s build the
        rest of the house by following your floor plan! You’ll have to repeat yourself
        quite a lot here.
      Overworld House Frame Chosen_instruction: |
        Build the rest of your house from
        any material you'd like. The "repeat" command will come in handy.
      Overworld House Frame_instruction: |
        Let's make our own house! This spot looks
        good. Build a frame on the dirt blocks.
      Overworld Minecart Track_instruction: |
        You’re back on the surface with lots
        of underground resources. Now, we're going to build a track along the dirt
        path from your house. The first step is clearing the path. Follow the path
        and clear the trees.
      Overworld Move to Sheep_instruction: |
        Add a second “move forward” command to
        reach the sheep.
      Overworld Place Wall_instruction: |
        Every house starts with a wall. Build the
        first part of your house by putting the "place" and "move forward" commands
        inside the repeat loop.
      Overworld Plant Crops_instruction: |
        It’s good to plan ahead. Plant crops on
        both sides of the water so you don’t get hungry later on.
      Overworld Powered Minecart_instruction: |
        Great job! You’ve gathered lots of
        resources and built a modest home. Now lay rail from the edge of the map to
        the door of your house.
      Overworld Shear Sheep_instruction: |
        Sheep-shearing time! Use the “shear” command
        to gather wool from both sheep.
      PDAlg 13-16 Sam Extension Puzzle_instruction: |
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 ex dr 1_instruction: |
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg 8-12 Rocket Height Puzzle_instruction: |
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg Big Game History_instruction: |
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: |-
        Here's your Big Game as you last left it.
        Try clicking the Remix button to spin off a new remix of your project.\r
        \r
        Any
        changes you make after you click Remix will be saved on your new remix and
        not on your main Big Game.
      PDAlg Design Recipe Delete_instruction: |
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops
        together. Use the \"if\" block to decide when to turn. Hint: you only\nneed
        one more block to complete this puzzle. \n"
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin
        order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto
        an action on demand. Make the octopus say \"Hello\" only when you click\non
        the Octopus. \n"
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: Funkcije ti omogućuju da definiraš nove blokove!
        Premjestili smo blokove za crtanje kvadrata u funkciju sa nazivom "nacrtaj
        kvadrat". Možeš li iskoristiti funkciju "nacrtaj kvadrat" da bi napravio/la
        naočale? Kvadrati su odvojeni jedan od drugog za 75 piksela.
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe
        \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience,
        this is called a \"loop.\" \n"
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: Započeli smo Recept za Dizajn za visinu rakete
        koristeći ugovor i primjere koje si upravo napisao/la. Dovrši definiciju funkcije
        za visinu rakete i pokreni svoju animaciju.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: Odlično. Možeš li sada ažurirati tu funkciju
        tako da se naša raketa kreće brzo? Pobrini se da su izjave svrhe, primjeri,
        i definicija funkcije ažurirani da bi se raketa lansirala pri 40 metara u
        sekundi.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Poorva-test_instruction: |
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      PS Log test - Define and use turnAround_instruction: |
        Define a function called
        turnAround. Call the function and then move the turtle forward. (Click to
        see full instructions)
      Quantum Bee - Ryan_instruction: |
        These clouds are bugging me! Some of the clouds
        have flowers inside, and some don't. I should check each cloud, and only
        get nectar from the flowers.
      Quantum Bee_instruction: |
        Purple flowers may have either 1 or 0 nectar, but
        you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      Rocket Height Course A_instruction: |
        Follow the Design Recipe to create a function
        rocket-height.
      Ryan - 4-5 Bee Conditionals 2_instruction: |
        The bee only wants nectar right
        now. Not all objects are flowers, so check underneath EVERY CLOUD to see if
        it is hiding a flower. If it is, then you can gather nectar.
      Ryan - Bee Conditionals_instruction: |
        The bee only wants nectar right now.
        Not all objects are flowers, so check underneath EVERY CLOUD to see if it
        is hiding a flower. If it is, then you can gather nectar.
      Ryan Doily Step 1_instruction: |
        Now we're going to draw a doily step by step.
        First, draw a square.
      Ryan Doily Step 2_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: |
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: Evo funkcija pod nazivom "izvidnica". Preuredi
        je da pokreće Mačku prema gore za 400 piksela i onda prema dole za 400 piksela.
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\\r\n\\r\nUse
        an \"if\" statement to program your game to call the \"level_up\"\nfunction
        only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample:
        \"player_score\" > 6\\r\n\\r\nPlay the game, and make it past level\n4 to
        move to the next puzzle. "
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      sample1_instruction: |-
        Our adventurer wants to collect gems.  But she can only
        use 4 blocks to get them.\r
        \r
        Can you help her grab as many as she can
        using just 4 blocks?
      sample2_instruction: |
        Use what you've learned to help bee gather all of this
        honey using only 4 blocks.
      sample3_instruction: Now you can help bee make all of the honey.
      sample4_instruction: |-
        Our adventurer has found a stash of coins in this cave.\r
        \r
        Can
        you help her grab as many as she can using just 7 blocks?
      sample5_instruction: Help bee make all of the honey.
      sample6_instruction: 'Challenge: Help bee make all of the honey.'
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: Žir! Žir! Žir! Dovedi me do tamo koristeći "ako" blok.
        Pri tome koristi što manje blokova.
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: Ok, hajde da to ponovimo još jednom radi vježbe  - ovo
        nije toliko različito, ali pazi na zid!
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: '"Ako-inače" blokovi provjeravaju uslov, i onda izvrše
        jednu stvar ILI drugu. Da bi me doveo/la do žira, koristi ovaj novi blok.'
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: Još jedna vježba za "ako-inače" blok. Možeš li to uspješno
        izvršiti od prve?
      scrat 20_instruction: 'Možeš li dodati samo 3 bloka da bi mi pomogao/la da riješim
        ovaj teži labirint? Ako uspjedneš, ja mogu hodati po bilo kakvoj krivudavoj
        liniji bez obzira na njenu dužinu. Požuri! Led se otapa! '
      SpecialFrozenLevel_instruction: Službeno si postao/postala majstor-umjetnik!
        Napravi snježnu bajku.
      Standalone_Artist_1_instruction: Dobrodošao u Umjetnik! Kao prvo, hajde da pokušamo
        napraviti jednostavan kvadrat koristeći blok za skretanje u desno i blok za
        kretanje naprijed. Svaka stranica bi trebala biti 100 piksela duga.
      Standalone_Artist_2_instruction: Nacrtaj ovaj dijamant sa stepenima od 120 i
        60 stupnjeva te stranicama dugačkim 150 piksela.
      Standalone_Artist_3_instruction: Možeš li nacrtati ovaj šestougaonik za stranicama
        od 100 piksela i okretima od 60 stepeni?
      Standalone_Artist_4_instruction: 'Sada imaš novi blok s kojim se možeš igrati:
        petlja. Ovaj blok će ponavljati komande. Šta će se desiti ako ponoviš ove
        komande 6 puta?'
      Standalone_Artist_5.5_instruction: 'Zapazi kako smo pojednostavili kôd za crtanje
        dijamanta tako što smo koristili petlju. Možeš u petlji ponoviti cijeli niz
        12 puta da bi nacrtao/la cvijet. Savjet: Nakon svake petlje za crtanje dijamanta
        trebaš se okrenuti za 30 stepeni da ne bi crtao/la uvijek na istom mjestu.'
      Standalone_Artist_5_instruction: Koliko puta trebaš ponoviti ovaj dijamant da
        bi nacrtao/la cvijet?
      Standalone_Artist_6_instruction: 'Ponovi ovaj šestougaonik 6 puta da bi napravio
        dizajn. Za koliko stepeni ćeš morati okrenuti svaki put? Savjet: podijeli
        broj stepeni kruga sa brojem ponavljanja.'
      Standalone_Artist_7_instruction: 'Funkcija je još jedan programski alat koji
        ti pomaže da se ne ponavljaš. Ova funkcija crta cvijet. Ovu funkciju možeš
        koristiti svaki put kada poželiš nacrtati cvijet. Upotrijebi ovo i novi blok
        za skakanje da bi nacrtao/la ove cvjetove. Savjet: Ovi cvjetovi su udaljeni
        za 150 piksela'
      Standalone_Artist_8_instruction: Evo funkcija koja se zove "Nacrtaj oblik" koju
        smo programirali da crta šestougaonike. Pokreni kod i vidi šta će se desiti.
        Zatim eksperimentiši sa funkcijom. Možeš li učiniti da funkcija crta uzorke
        načinjene od kvadrata, trokutova ili osmougaonika?
      Standalone_Artist_9_instruction: Sada nastavi i napravi sliku po svojoj želji!
        Čak imaš i praznu funkciju s kojom možeš raditi i načiniti šta god želiš!
      Standalone_Artist_v2_instruction: Dobrodošao u Umjetnik! Kao prvo, hajde da
        pokušamo napraviti jednostavan kvadrat koristeći blok za skretanje u desno
        i blok za kretanje naprijed. Svaka stranica bi trebala biti 100 piksela duga.
      template test_instruction: what up
      Test Play Lab_instruction: This is a test play lab level.
      test_sarah_instruction: hi
      Testing Quantum Farmer_instruction: "Wow, look at that! \\r\n\\r\nI don't know\nhow
        many shovelfuls of dirt this hole needs.  \\r\nCan you write a program\nthat
        keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      Total Artist Clone Me_instruction: |
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: "Develop, document, and test a protocol that\nallows
        you to use Internet Simulator to relay a message. See the worksheet\nfor more
        detailed instructions.  \n"
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 frequency caesar_instruction: Upute
      U2 frequency random sub_instruction: Upute
      U2 vigenere cipher_instruction: Upute
      U2 Vigenere_instruction: Test
      U2L04 - NetSim Routers with Addresses_instruction: |
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: |-
        Develop a Protocol
        for Reliably Sending a Message.\r
        \r
        Constraints:\r
        - Packets may contain
        only 6 characters\r
        - Packets may drop with small probability\r
        - Packets
        may not arrive in order
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: |
        Now use the Internet Simulator to send the
        battleship moves. For setup, join a Room with your group, and add ships to
        your paper board for each opponent. When playing, all communication must be
        done through the tool, so no talking, but have fun!\r
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: |-
        For this activity, connect to a
        router with the others in your group. Important note: The router will only
        properly route messages where the first 4 bits are the To: address and the
        second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      U2L5 NetSim Classroom Internet_instruction: |
        For this activity, connect to
        a router with the others in your group. The Internet Simulator now provides
        a place for you to put the To and From addresses, so you don't have to type
        out the bits manually.\r
        \r
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - appendItem_instruction: |
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - Demo App_instruction: |
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings createArray_instruction: |
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings Next_instruction: |
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings template_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND and OR_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND OR Simple_instruction: |
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - intoOr_instruction: |
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Conditionals - Simple AND_instruction: |
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: |
        Add an else statement so that the program
        will tell the user when they are right and when they are wrong. (Click to
        see full instructions)\r
      U3 - High Low - If_instruction: |
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - Keys - Add Image URLs_instruction: |
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |
        Write a program that simulates the rolling of
        two dice. Roll the dice repeatedly until the sum of the dice is either 7 or
        11.
      U3 - Loops - 11_instruction: |
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Practice Create Performance Task_instruction: |
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.5_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.6_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1_instruction: |
        Console.log the records returned by a call
        to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table.(Click to see full instructions)\r
      U3 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U3 - Read Record - 4.1_instruction: |
        Print out each record return from the
        readRecords call individually. (Click to see full instructions)\r
      U3 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U3 - Read Record - 5 and half_instruction: |
        Print out the name of each movie
        in the records return from the readRecords call. (Click to see full instructions)\r
      U3 - Read Record - 5_instruction: |
        Print out the name of each movie in the
        records return from the readRecords call. (Click to see full instructions)\r
      U3 - Return Values - constrainTurtle_instruction: |
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: |
        Create an array of all the movies made
        in 2008 and print it out. (Click to see full instructions)\r
      U3 - Search Terms - 2_instruction: |
        Print out all the movies with year 2008
        using the readRecords search terms. (Click to see full instructions)\r
      U3 - Search Terms - 3_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 4_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 5_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Search Terms - 6_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - Fill_instruction: Do This
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Oval_instruction: Do This
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Simple Shape Drawing_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simulation - 1_instruction: |
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: |
        Add functionality that counts how many heads
        in a row are flipped. (Click to see full instructions)\r
      U3 - Simulation - 4_instruction: |
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - Sprites - Intro Sprites_instruction: Do This
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: Do This
      U3 - Sprites and Mod - Mouse Width and Height_instruction: Do this
      U3 - Sprites and Mod - Mouse X and Y_instruction: Do this
      U3 - Sprites and Mod - Rand Around Mouse_instruction: Do this
      U3 - Sprites and Mod - Rand Shape Color_instruction: Do This
      U3 - Sprites and Mod - Shape Color_instruction: Do This
      U3 - Sprites and Mod - two sprites_instruction: Do This
      U3 - Sprites and Mod - Wrap Many Squares_instruction: Do This
      U3 - Sprites and Mod - X and Y Prop_instruction: Do This
      U3 - User Input - Save getText To Variable_instruction: |
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |
        Test out the new expressions.
        (Click to see full instructions)
      U3 Digital Assistant Design_instruction: |
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 full clicker demo_instruction: Clicker game - Try it out!
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3 Variables consolelog_instruction: |
        Use the write block to display the value
        of size
      U3 Variables flower example_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables gray square_instruction: |
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables make a square_instruction: |
        Change the value of size multiple
        times. How does it change your drawing?
      U3 Variables misconceptions try it_instruction: |
        Test out your predictions
        from the previous level.
      U3 Variables randomize your square_instruction: |
        Change the value of petalSize
        multiple times. How does it change your drawing?
      U3 Variables write_instruction: |
        Use the write block to display the value of
        size
      U3- Variables - Assign Random For Turtle Draw_instruction: |
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 drag Two Buttons_instruction: |
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 Two Buttons with Ids_instruction: |
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U3L03 - draw rect function_instruction: |-
        Write a function called drawRectangle().\r
        (Click
        to see full instructions)
      U3L03 - draw step_instruction: |
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 define turnRight and draw a rectangle_instruction: |
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 draw diamond_instruction: |
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L03 Three Steps_instruction: |
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: "Read the documentation for the \"arcLeft\"\nand
        \"arcRight\" commands and then draw the squiggles as shown. \n"
      U3L06 Challenge 7 smiley face_instruction: |
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - allSeaGrass_instruction: |
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - introSquare_instruction: |
        Use a loop to draw a square. Then add another
        loop to draw many squares each one rotated some amount. (Click to see full
        instructions)
      U3L07 - loopsWithRandom_instruction: |
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand
        random numbers to generate an image of starry night sky similar to one\nshown
        here.  We have given you some starter code to generate the ground and\nsky
        (just two giant dots), you will add code to this project to make the stars,\ngrass,
        and moon.  All of the effects are clever applications of turtle dots,\nlines,
        and colors.  To get started, follow the series of steps suggested in\nthe
        accompanying worksheet. \n"
      U3L07 - sunBeams_instruction: |
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - createTwoParamTriangle_instruction: |
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - fish_instruction: |
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea_instruction: |
        Add an extra fish, starfish, and piece
        of sea grass to the image. Look at, but don't change, the functions that
        create them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |
        Add an extra fish, starfish, and piece of sea
        grass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L1 - Simulation - Template_instruction: |
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: |-
        The last problem was an example
        of syntax error.  App Lab did not understand which object it should be listening
        to for a "click" event so it showed an error message in the console to let
        you know.  Another kind of error is a logical error - the program is valid,
        but it's not doing what you want it to do.\r
        \r
        This program has 2 errors.
        A (tricky) syntax error and logical error.  Find them, fix them, and make
        the program work as expected.
      U3L13 - Debug Id Problem_instruction: |
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debugging 1_instruction: |
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - concatenate simple_instruction: |
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - Mini Calculator embed_instruction: |
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - moving memory challenge1_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L15 - add code to make count down work_instruction: |
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - clicker update score_instruction: |
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L15 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons!
        - textLabels and images.  First try replacing your button with a\ntextLabel.
        \ Will the text respond to events just like the button?  Try connecting\nan
        event handler to it.  We've started you out with code similar to the result\nof
        the last level, you can copy your code from that level into here if you\nprefer.
        \n"
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith
        an image..  Will the image respond to events just like the button?  Try\nconnecting
        an event handler to it.  We've started you out with code similar\nto the result
        of the last level, you can copy your code from that level into\nhere if you
        prefer. \n"
      U3L16 - intro getText_instruction: |
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text when\nthe
        Play Again button is clicked (Click to see full instructions) \n"
      U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      U3L16 Mad Lib getText_instruction: "Before setting the text area with your\nMad
        Libs outline, get the user's text and incorporate their responses. (Click\nto
        see full instructions) \n"
      U3L16 Mad Lib setText_instruction: "When the Next button is clicked, set the\ntext
        area to have the main outline of your How-to Mad Libs (without the user's\ninput).
        (Click to see full instructions) \n"
      U3L16 Mad Lib Student Setup_instruction: |
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase string\nfunctions
        to the user's text. (Click to see full instructions) \n"
      U3L17 - getAndSetKeyValue_instruction: |
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - DEMO up down count practice app_instruction: |
        Try out the demo app
        (Click to see full instructions)
      U3L19 - do concatenate string with var_instruction: |
        We've given you a piece
        of code from the previous screen.  Try changing the value assigned to foo
        to see the string change. \r
        Do this: \r
        1. Try changing the value assigned
        to foo to see the string change. \r
        2. By only modifying the lines of code
        that were given to you, try to get the output to say: “The value of foo is:
        9.  And isn’t that fine.” \r
      U3L19 - fix the var name syntax error v2_instruction: |
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |
        Investigate the new elements of the
        'chaser-game'
      U3L19 - test reassignment of two vars_instruction: |
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: |-
        Try out console.log.  Do this: replace
        the statement write("foo is: " + foo) with console.log("foo is: " + foo).  Run
        the program and you should see the output show up in the console area below
        the workspace.  Then try adding a few more console.log statements.  Display
        some text.  Make another variable and display that.  \r
        The app screen will
        be blank -- that's the point.  With console.log you can test output behind
        the scenes in a way the user cannot see.  \r
        \r
        \r
        GIF: U3L19-useconsolelog.gif
      U3L19 - up down count practice app_instruction: |
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |
        Add newline characters "\
        " to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 introIncludes_instruction: |
        Practice using the includes command. (Click
        to see full instructions)
      U3L24 Nested Conditionals 1_instruction: |
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside
        the if statements to check for a ? in the input. \n"
      U3L24 Nested Conditionals Bugs 2_instruction: |
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L25 - drag out key event_instruction: |
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: |
        Fill in the function, findBeginNder()
        to get the strings "begin" and "nder" from a sentence no matter where
        in the sentence they exist.\r
        Print the strings and their index to the console.
      U3L25 String Parsing 6_instruction: |
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: "Write a conditional statement that detects\nif
        a command does not contain the phrase \"bad.\" If \"bad\" is not detected,\nmake
        Movie Bot respond normally. Otherwise, make Movie Bot respond \"Sorry,\nI
        don't know about bad movies.\" \n"
      U3L26 OR operator_instruction: |
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - add createRecord to contacts App_instruction: |
        Add code to your contacts
        app so that newly-added contacts are saved in a table. (Click to see full
        instructions)
      U4 - Add Row By Hand_instruction: |
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - Charts - Export Data_instruction: |
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mytable”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |
        Call readRecords on “mytable” and
        print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - CreateRecord - 1_instruction: |
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - debug column names are case sensitive_instruction: |
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - Edit Data Table by Hand_instruction: |
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - fix contacts by hand in data table_instruction: |
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
      U4 - Objects - dotNotation_instruction: |
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |
        Create an event handler for the "Save
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |
        Add code to your event handler
        for the "Save Contact" button so that when a new contact is added, the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: |
        Place a console.log command below the
        readRecords command. (Click to see full instructions)\r
      U4 - Read Record - 1.3_instruction: |
        Add a console.log command inside the callback
        function. (Click to see full instructions)\r
      U4 - Read Record - 1_instruction: |
        Use console.log to display the records returned
        by a call to readRecords. (Click to see full instructions)\r
      U4 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table. (Click to see full instructions)\r
      U4 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U4 - Read Record - 4.1_instruction: |
        Use indexes and dot notation to reference
        values in the response from the database. (Click to see full instructions)\r
      U4 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U4 - Read Record - 5_instruction: |
        Using a for loop, display the title of each
        movie in your database. (Click to see full instructions)\r
      U4 - Read Record - part 1 - template_instruction: |
        Use console.log to display
        the records returned by a call to readRecords. (Click to see full instructions)\r
      U4 - ReadRecords - Contacts App 1_instruction: |
        Use readRecords to copy the
        data in your database into your "contacts" global variable and call showCurrentContact.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |
        Create a function called refreshLocalData.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4L02 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions)
        \n"
      U4L02 - Objects - eventParameter_instruction: |
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L02 - Objects - Template1_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
      U4L06 Data Storage 1_instruction: |
        Fill in your name instead of "Enter Your
        Name", run the app and click the button. Run it multiple times with different
        names! Watch the console and use the ‘View Data” button to see how the table
        is updated. As you play around make sure you can explain the purpose of each
        of the circled parts of the diagram.\r
        \r
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none
        we started. Add a text label to collect the users name and use that as\nthe
        data input for the record.\\r\n\\r\nRun the app and click the button multiple\ntimes
        and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: "Add a couple radio buttons or checkboxes\nto
        our app. Then find a way to collect the data from those. \n"
      U4L06 Data Storage 6_instruction: " Use one of the getTime() and getUserId()\nblocks
        to collect additional data. \n"
      U4L06 Data Storage 7_instruction: |
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: |-
        Student should create a sentence which puts
        together all the pieces from a record.\r
        \r
        <<Name>> is <<Age>> years old
        and like <<Food>>
      U4L15 Read Data 3_instruction: |
        Print the sentence using the first JSON object
        in the array\r
        \r
      U4L15 Read Data 4_instruction: |-
        \r
        Use a random record from the list of records
        to display your sentence.
      U6 - Final Project - Project Level_instruction: |
        Build your final project here.
        (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: |
        Add an if-else
        block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: |
        Write event
        handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: |
        Set up the UI elements
        needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: |
        Use updateRecord
        to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: |
        Use updateRecord to change
        the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: |
        Force updateRecord
        to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: |
        Lava is hiding beneath some of these
        blocks, which you'll need to cover up before moving forward. An "if" command
        will come in handy here. Add a "move forward" command in the correct place
        to mine these blocks.
      Underground If Statements_instruction: |
        Now things are getting tricky. Mine
        3 redstone, but don’t fall in the lava. Use an "If" command to place cobblestone
        over any lava you uncover.
      Underground Iron_instruction: |
        Walking into molten lava is a bad idea. Place
        cobblestone to create a bridge, then mine at least two of the iron blocks.
      Underground Mine in a Circle_instruction: |
        Find a way to get 5 diamond and
        7 redstone! Try using a repeat command inside a repeat command to walk in
        a square.\r
      Underground Mining Coal_instruction: |
        You’ll find the most valuable resources
        underground, but it can get dark. Place at least 2 torches and mine at least
        2 coal.
      Underground Test Level_instruction: Collect all of the minerals!
      Vigenere_instruction: Test
      XML Scratchpad_instruction: Koristeći ovaj test nivo za dohvatanje xml-a za
        jedinični test
