---
cs-CZ:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: Když použiješ příkazový blok, který mě posílají dopředu
          o 100 pixelů, nakreslím automaticky cestou čáru.
        2-3_Artist_1_new_b: Máš problém s otáčením v rohu? Použij příkaz "otočení
          o 90° doprava".
      2-3 Artist 11:
        2-3_Artist_11_a: 'Potíže s úhly? Budeš muset obsáhnout 360 stupňů v 8 krocích.
          Kolik je 360/8? '
      2-3 Artist 12:
        2-3_Artist_12_a: V kruhu je 360°, takže když se malíř otočí o 1° každou smyčku,
          bude ji potřebovat zopakovat 360x.
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: Zdá se že umělec není otočen správným směrem. Zkusíš ho
          nejprve otočit a poté nakreslit čáru?
      2-3 Artist 3new:
        2-3_Artist_3new_a: Kolik je 100-70? Podle příběhu by měl právě tak být být
          vysoký klobouk!
        2-3_Artist_3new_b: Zdá se že umělec není otočen správným směrem. Zkusíš ho
          nejprve otočit a poté nakreslit čáru?
      2-3 Artist 4:
        2-3_Artist_4_a: Vše co je třeba pro dokončení domu je nakreslit čtverec!
      2-3 Artist 6:
        2-3_Artist_6_b: Protože už jsem otočen doprava, je pri vytvoření trojúhelníku
          jednodušší začít tím že půjdu dopředu a potom se otočím doleva.
        2-3_Artist_6_c: Každá strana trojúhelníku je stejně dlouhá jako každá strana
          čtverce... 100 pixelů!
      2-3 Artist 7:
        2-3_Artist_7_a: Nejsnazší způsob jak dokončit tuto hádanku je nakreslit první
          čtverec a zakončit umělcem směřujícím dolů a až poté začít s druhým čtvercem.
      2-3 Artist 8:
        2-3_Artist_8_a: Pokud rozdělíš 200 na polovinu, kolik pixelů na šířku musí
          mít každý čtverec?
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: Tvar diamantu je jen pootočený čtverec
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_b: |-
          **Pokus a omyl je zde dobrá cesta!**

          Zkus měnit vždy jedno číslo.

          Které číslo co dělá?

          Pokud se ztratíš, prostě klikni "Začít znovu" a celý kód se vrátí do původního stavu.
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'Tip: Každý vous je dlouhý 75 pixelů.'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: Jedno z otočení je o 15 stupňů menší.
        2-3_Artist_Debugging_3_b: Pokud program běží příliš rychle na to, abyste stihli
          sledovat průběh, zkuste ho zpomalit stáhnutím posuvníku rychlosti.
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: Co se stane, pokud necháte umělce posunout nebo
          skočit zpět, poté co nakreslí první čáru?
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: Umělec se potřebuje otočit o 60 stupňů více doleva,
          než začne kreslit!
        2-3_Artist_Debugging_9_b: K úplnému otočení není potřeba přidat další blok.
          Stačí přidat 60 stupňů do bloku `otočit vlevo`, který už tam je!
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: Každý čtverec má strany o délce 100 pixelů, to znamená,
          že se budete muset posunout o 175 pixelů vpřed, dřív než začnete kreslit
          druhý čtverec.
        2-3_Artist_Functions_1_b: Je v pořádku, pokud se čáry překrývají.
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: Budete muset změnit nejen počet a délku stran v
          rámci funkce, ale také úhel, kterým se umělec otočí mezi oběma stranami.
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: Zkuste nejprve spustit kód, abyste zjistili, co
          potřebujete přidat.
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          Váš program by měl:

          -   použít funkci
          -   posunout se vpřed o 100 + 75 pixelů
          -   použít funkci
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: Umělec se potřebuje otočit o 120 stupňů mezi každým
          čtvercem, aby dokončil obrazec.
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_b: Váš nový obrat by měl jít na **konec** kódu uvnitř
          smyčky.
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: Než začne diamant, umělec se potřebuje otočit doleva
          o 60 stupňů, aby byl správně nasměrován.
        2-3_Artist Loops_New_12_b: Až se umělec posune dopředu o 100 pixelů, bude
          se potřebovat otočit doprava o 120 stupňů, aby udělal ostrý roh.
        2-3_Artist Loops_New_12_c: Umělec se bude muset k vytvoření širokého rohu
          otočit vpravo jen o 60 stupňů.
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: |-
          Na konci každého diamantu stojí již umělec správný směrem, aby mohl začít kreslit další.

          Proto nepotřebujeme přidávat další blok `otoč vlevo`, než znovu začne.
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: Umělec se potřebuje otočit o 45 stupňů doprava,
          než začne kreslit.
        2-3_Artist_Loops_New_9_b: Tohle V je ve skutečnosti prostě polovina čtverce.
          Jaký by byl kód k nakreslení půlky čtverce?
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: Nezapomeňte vložit všechny šedé bloky dovnitř
          vaší smyčky.
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: |-
          Potřebujete pomoc s úhly?\
          **360/12 = 30**
        2-3_Artist_Nested_Loops_3_b: Nezapomeňte dovnitř smyčky vložit celý šedý kód
          a bloky měnící směr.
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: |-
          Potřebujete pomoc s úhly?\
          **360/12 = 30**
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          Zkuste použít blok \`skok vpřed ' abyste se dostali z vrcholu jednoho čtverce na místo, kde budete začínat další.

          Pokud jsou vaše čtverce vysoké 20 pixelů a jsou od sebe vzdálené 20 pixelů, jak daleko musíte skočit?
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: |-
          O kolik se musíte otočit v každé smyčce?

          Co je 360/10?
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          Potřebujete pomoc s nalezením správného úhlu?

          \*\* 360 / 12 = 30 \*\*
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: Těžko najít způsob, jak vyzrát na bloky? Zkus zacházet
          s červenou květinou úplně stejně jako s fialovou květinou!
        2-3_Bee_Conditionals_14_b: Pokud by červená květina byla fialová, našel bys
          jak použít blok `opakuj` abys zmenšil kód?
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 'Pamatuj: Fialová květina může mít 0 nebo 1 nektaru
          and mohou se změnit pokaždé, když spustíš program.'
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: Kód bude co nejkratší, pokud použiješ smyčku pokaždé,
          když se budeš pohybovat vpřed, další smyčku pro získání nektaru a další
          na výrobu medu.
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 'Pamatuj: Fialové květiny mění nektar mezi 0 a 1,
          když program spustíš!'
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: Až najdete a opravíte chybný blok, vidíte nějaké vzory,
          které se dají zjednodušit pomocí cyklu `opakuj`?
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: Až najdete a opravíte chybný blok, vidíte nějaké vzory,
          které se dají zjednodušit pomocí cyklu `opakuj`?
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: Je místo, kde včela dělá něco, co nedává smysl? Co
          se stane, pokud ten blok změníš?
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: Nemusíte používat smyčku s funkcí. Zkuste jen posun
          vpřed, použít funkci a poté znovu posun vpřed.
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: Nemusíte používat smyčku s funkcí. Zkuste jen posun
          vpřed, použít funkci a poté znovu posun vpřed.
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
        2-3_Bee_Functions_8_b: |-
          Pamatujte si, že kód musíte vkládat dovnitř zeleného bloku funkce.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: Na konci byste měli mít uvnitř smyčky čtyři bloky.
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: Uvnitř své smyčky bys měl mít 6 bloků.
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: Budeš potřebovat dva různé cykly `opakuj` za sebou.
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: Měl bys skončit s pěti bloky uvnitř své smyčky.
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: První akce bude spíše otočení než posun.
        2-3_Bee_Loops_4A_b: Poslední část programu může být dokončena kódem mimo cyklus.
        2-3_Bee_Loops_4A_c: Pokud se nedaří najít cykly, zkus nejprve kódování dlouhou
          cestou (bez cyklů) a až nakonec zkus najít, co by šlo zkombinovat do cyklů
          `opakuj`.
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: Pokud se ti hned nedaří objevit bloky do cyklu `opakuj`,
          začni kódováním každého posunu a hledej vzor.
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: Pokud nevíš, co má přijít do cyklu `opakuj`, zkus posunovat
          bloky jeden po druhém a zkoušej najít vzor.
        2-3_Bee_Loops_6_b: Až budete mít hotovo, mělo by uvnitř vaší smyčky být 6
          bloků.
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: První akce bude spíše otočení než posun.
        2-3_Bee_Loops_7_b: 'Pokud tě nenapadá cyklus hned od počátku, zkus vytvořit
          dlouhý kód (bez cyklů) a pak v něm hledej opakující se vzor.  '
      2-3 Maze 1:
        2-3_Maze_1_a: Chcete-li použití blok `posunout vpřed`, přetáhněte ho z panelu
          bloků do pracovního prostoru a připojte ho k bloku `při spuštění`.
      2-3 Maze 16:
        2-3_Maze_16_a: Pokud je těžké opakující se vzor hned rozpoznat, nakódujte
          nejprve vše bez opakování a poté najděte, co se v kódu opakuje.
        2-3_Maze_16_b: |-
          Chcete-li umístit více bloků do smyčky, stačí přetáhnout blok `opakování` do pracovního prostoru a pak do něj přetáhnout všechny bloky z původního programu.

          Potom blok smyčky připojte zpět k bloku "při spuštění" a je to!
      2-3 Maze 6:
        2-3_Maze_6_a: Tuto hádanku lze vyřešit dvěma způsoby!
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: Pokud je těžké opakující se vzor hned rozpoznat, nakódujte
          nejprve vše bez opakování a poté najděte, co se v kódu opakuje.
        2-3_Maze_Loops_17_b: Zmizel vám úvodní kód? Klikněte na \`začít znovu ' a
          vrátí se zpátky!
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: Pokud je těžké opakující se vzor hned rozpoznat, nakódujte
          nejprve vše bez opakování a poté najděte, co se v kódu opakuje.
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: Pokud se zaseknete, zkuste nejprve napsat kód bez smyček
          a hledejte v něm opakující se vzory.
        2-3_Maze_Loops_19_b: Vložení jednoho cyklu opakování dovnitř jiného může zmenšit
          počet použitých bloků.
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: Podívejte se na vzor u schodiště v tomto bludišti a zkuste
          zjistit, kde lze použít smyčku.
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: Pokud se ti nedaří najít schodovitý vzor, zkus si zakrýt
          blokované cesty prstem.
      4-5 Artist 1:
        4-5_Artist_1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      4-5 Artist 11:
        4-5_Artist_11_a: V rámci smyčky se ujistěte, že Malíř po nakreslení každého
          řádku skočí zpět a nahoru.
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          Pokud má záhon obvod 600 pixelů a dvě ze stran jsou dlouhé 200 pixelů, zde je návod, jak zjistit délku zbývajících stran:

          \*\* 600 - 200 - 200 = 200 \*\*

          To znamená, že obě kratší strany mají dohromady 200 pixelů.

          \*\* Co znamená 200/2? \*\*
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          V kruhu je 360 stupňů!

          To je, kolikrát je potřeba kód opakovat (s otočením o 1 stupeň pokaždé), aby se kruh dokončil!
      4-5 Artist 7:
        4-5_Artist_7_a: 'Který úhel je nejmenší? V jakém úhlu stojí Malíř? '
      4-5 Artist 8:
        4-5_Artist_8_a: "Dlouhé strany mají vždy 240 pixelů. To znamená, že dvě krátké
          strany musí být celkem:\n\n\\*\\* 800 - 240 - 240 = 320 \\*\\*\n\nCo znamená
          \\*\\* 320/2 \\*\\*? "
      4-5 Artist 9:
        4-5_Artist_9_b: Budete muset nakreslit tři stejně velké trojúhelníky. Nezapomeňte,
          že do každé nové pozice musíte skočit.
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: K dokončení této hádanky stačí pouze nakreslit
          vnější trojúhelník.
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: Má-li kruh 360 stupňů a každou smyčkou se otočíte
          o 3 stupně, kolik je potřeba opakování k nakreslení poloviny kruhu?
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: Pokud jsou čtverce 20 pixelů dlouhé, bude třeba před
          nakreslením dalšího čtverce skočit o 20 pixelů.
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: Vytáhni celý blok kódu z panelu příkazů.
        4-5_Artist_Patterns_3_b: Pokud se váš kód stane příliš zmateným, můžete vždy
          kliknout na tlačítko "Začít znovu" a zkuste to od začátku!
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: |-
          Když Malíř dokončí celý diamant, stojí v opačnému směru než je potřeba, aby začal další.

          O kolik stupňů musí být otočen, aby se postavil rovně?
      4-5 Bee Conditionals 4:
        remember_quantum: |-
          \*\* Pamatujte: \*\* Tato hádanka se mění pokaždé, když je spuštěna.

          K vyřešení problému by to chtělo použít podmíněný blok (`if` nebo`if / else`).
      4-5 Bee Conditionals 5:
        remember_quantum: |-
          \*\* Pamatujte: \*\* Tato hádanka se mění pokaždé, když je spuštěna.

          K vyřešení problému by to chtělo použít podmíněný blok (`if` nebo`if / else`).
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: Tuto hádanku můžete vyřešit pouze s bloky v pracovním
          prostoru. V jakém pořadí by měly následovat?
        4-5 Bee Conditionals 6_b: Ujistěte se, že alespoň **3**krát zkontrolujete,
          zda má květ více než **0** nektaru.
      Course 4 Artist 11:
        Course_4_Artist_11_b: 'Dvě třetiny trojúhelníku mají délku 80 pixelů a otočka
          vpravo je o 120 stupňů. '
      Course 4 Artist Binary Free Play 2b:
        Course_4_Artist_Binary_Free_Play_2b_c: V každém opakování potřebuješ "counter"
          pro jedničky a "16-(2 x counter)" pro nuly.
      Course 4 Artist Inspire:
        Course_4_Artist_Inspire_a: Po dokončení jednoho čtverce zkus skok vpřed o
          jeho poloviční délku před otočkou a kreslením dalšího čtverce.
        Course_4_Artist_Inspire_b: Každý čtverec a skok se opakuje čtyřikrát ( s otočkou
          vlevo mezi ) k nakreslení celého větrníku kola.
      Course 4 SCF 3:
        Course_4_SCF_3_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CourseD_Dance_Party_01:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Zajisti, aby se tanečník zobrazil na obrazovce.

          _Tato úroveň končí po 4 taktech._
        challenges: |-
          **Volitelné výzvy**

          -   Zvol jinou píseň k přehrání.
          -   Zvol jiného tanečníka, který vypadá jako los!
          -   Přejmenuj tanečníka.
      CourseD_Dance_Party_02:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Tanečník musí po 4 taktech přejít na nový pohyb.

          _Tato úroveň končí po 8 taktech._
      CourseD_Dance_Party_03:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Po 6 taktech musí tanečník tančit jiný tanec než po 4 taktech.

          _Tato úroveň končí po 12 taktech._
      CourseD_Dance_Party_04:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Musíš vynutit změnu efektu pozadí někdy během sedmého taktu písně.

          _Tato úroveň končí po 10 taktech._
        challenges: |-
          **Volitelná výzva**

          Změň efekt pozadí v různých bodech během písně tak, že připojíš nový blok pod událostmi <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      CourseD_Dance_Party_06:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Potřebuješ mít alespoň dva tanečníky.

          _Tato úroveň končí po 6 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Přidej třetího tanečníka (nebo tolik, kolik chceš!)
          -   Přiměj všechny tanečníky provádět během různých bodů písně různé pohyby.
      CourseD_Dance_Party_08:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Dva tanečníci musí mít velikost jinou než 100.

          _Tato úroveň končí po 6 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Experimentuj se změnami různých vlastností (šířka, výška, otočení atd.)
      CourseD_Dance_Party_09:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Změň odstín nejméně jednoho tanečníka.

          _Tato úroveň končí po 8 taktech._
      CourseD_Dance_Party_10:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Musí se změnit vlastnosti dvou nebo více tanečníků.

          _Tato úroveň končí po 8 taktech._
      CourseD_Dance_Party_11:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Buď prostě kreativní!

          _Tato úroveň končí po 8 taktech._
      CourseD_Dance_Party_11_5:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Buď prostě kreativní!

          _Tato úroveň končí po 8 taktech._
      CourseD_Dance_Party_11b:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Použij blok `když je stisknuta šipka vlevo`, abys přiměl(a) Robota k tanečnímu pohybu, když stiskneš tuto klávesu.

          _Tato úroveň končí po 8 taktech._
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: Vidíš **Mořské lucerny** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Jak je můžeš využít, aby ses dostal skrz oceánský monument?
      CourseE_HOC 2018 Level_7a:
        aquatic7: Můžeš použít bloky "pokud je cesta", aby ti pomohly otočit se doprava.
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: Vidíš červené a modré korálové bloky? Použij je jako orientační
          body pro otočení doprava nebo doleva.
      Dance_2019_01:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Zajisti, aby se tanečník zobrazil na obrazovce.

          _Tato úroveň končí po 4 taktech._
        challenges: |-
          **Volitelné výzvy**

          -   Vyber si jinou písničku k přehrávání.
          -   Přesuň svého tanečníka na nové místo.
          -   Vytvoř více než jednoho tanečníka.
      Dance_2019_02:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Tanečník musí provést pohyb.
          -   Musíš stisknout klávesu se šipkou.

          _Tato úroveň končí po 4 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Použij více než jeden blok <xml><block type="Dancelab_whenKey"><title name="KEY"></title></block></xml>.
      Dance_2019_03:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Oba tanečníci musejí provést pohyb.
          -   Musíš stisknout klávesy se šipkami.

          _Tato úroveň končí po 4 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Zajisti, aby tanečník reagoval na klávesy s levou a pravou šipkou.
      Dance_2019_04:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Tanečník musí po 4 taktech přejít na nový pohyb.

          _Tato úroveň končí po 8 taktech._
      Dance_2019_05:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Po 6 taktech musí tanečník tančit jiný tanec než po 4 taktech.

          _Tato úroveň končí po 12 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Změň pozadí, kdykoli tanečníci změní pohyby.
      Dance_2019_06:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Vytvoř jednoho hlavního tanečníka a skupinu doprovodných tanečníků.

          _Tato úroveň končí po 12 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Vytvoř několik skupin doprovodných tanečníků.
      Dance_2019_07:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Změň velikost alespoň jednoho tanečníka poté, co začne hrát hudba.

          _Tato úroveň končí po 6 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Experimentuj se změnami různých vlastností (šířka, výška, otočení atd.)
      Dance_2019_08:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Změň odstín alespoň jednoho tanečníka.

          _Tato úroveň končí po 6 taktech._
        tint_hint: Všiml(a) sis, že se tanečníci nezmění přesně na vybranou barvu?
          Je to proto, že **odstíny** míchají vybranou barvu s barvou tanečníka.
      Dance_2019_09:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Stačí zmáčknout tlačítko „Dokončit“!
        repeat_every_ideas: |-
          **Chceš nějaké nápady?**

          -   Opakovaně měň velikost tanečníka, aby se zvětšoval.
          -   Opakovaně měň otočení tanečníka, aby se otáčel.
          -   Opakovaně měň vodorovnou nebo svislou polohu tanečníka, aby se pohyboval po obrazovce.

          _Můžeš používat i záporná čísla a docílit tak opačného efektu!_
        next_previous: |-
          **Volitelná výzva**

          -   Můžeš také použít tento nový blok události k postupnému procházení seznamu tanečních pohybů nastavením pohybu na `(Náhodný)`, `(Další)` nebo `(Předchozí)`.
              <xml><block type="Dancelab_changeMoveEachLR">
              <title name="GROUP" config="sprites, &quot;BEAR&quot;, &quot;CAT&quot;, &quot;DOG&quot;, &quot;DUCK&quot;, &quot;FROG&quot;, &quot;PINEAPPLE&quot;, &quot;ROBOT&quot;, &quot;SHARK&quot;, &quot;UNICORN&quot;">???</title>
              <title name="MOVE">"rand"</title>
              <title name="DIR">-1</title>
              </block></xml>
      Dance_Party_01:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Zajisti, aby se tanečník zobrazil na obrazovce.

          _Tato úroveň končí po 4 taktech._
        challenges: |-
          **Volitelné výzvy**

          -   Zvol jinou píseň k přehrání.
          -   Zvol jiného tanečníka, který vypadá jako los!
          -   Přejmenuj tanečníka.
      Dance_Party_02:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Tanečník musí po 4 taktech přejít na nový pohyb.

          _Tato úroveň končí po 8 taktech._
      Dance_Party_03:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Po 6 taktech musí tanečník tančit jiný tanec než po 4 taktech.

          _Tato úroveň končí po 12 taktech._
      Dance_Party_04:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Musíš vynutit změnu efektu pozadí někdy během sedmého taktu písně.

          _Tato úroveň končí po 10 taktech._
        challenges: |-
          **Volitelná výzva**

          Změň efekt pozadí v různých bodech během písně tak, že připojíš nový blok pod událostmi <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"measures"</title></block></xml>.
      Dance_Party_05:
        validation: "**Jak splním tuto úroveň?** \n\n-   Tvůj tanečník musí do konce
          úrovně vystřídat alespoň 4 různé taneční pohyby. \n\n_Tato úroveň končí
          po 12 taktech._"
      Dance_Party_06:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Potřebuješ mít alespoň dva tanečníky.

          _Tato úroveň končí po 6 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Přidej třetího tanečníka (nebo tolik, kolik chceš!)
          -   Přiměj všechny tanečníky provádět během různých bodů písně různé pohyby.
      Dance_Party_08:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Dva tanečníci musí mít velikost jinou než 100.

          _Tato úroveň končí po 6 taktech._
        challenges: |-
          **Volitelná výzva**

          -   Experimentuj se změnami různých vlastností (šířka, výška, otočení atd.)
      Dance_Party_09:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Změň odstín nejméně jednoho tanečníka.

          _Tato úroveň končí po 8 taktech._
      Dance_Party_10:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Musí se změnit vlastnosti dvou nebo více tanečníků.

          _Tato úroveň končí po 8 taktech._
      Dance_Party_11:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Buď prostě kreativní!

          _Tato úroveň končí po 8 taktech._
      Dance_Party_11_5:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Buď prostě kreativní!

          _Tato úroveň končí po 8 taktech._
      Dance_Party_11b:
        validation: |-
          **Jak splním tuto úroveň?**

          -   Použij blok `když je stisknuta šipka vlevo`, abys přiměl(a) Robota k tanečnímu pohybu, když stiskneš tuto klávesu.

          _Tato úroveň končí po 7 taktech._
      Function intro Ryan:
        Function_intro_Ryan_a: Funkci můžete ve svém programu zavolat vícekrát. Zkuste
          ji zavolat dvakrát, abyste vyřešili tuto hádanku.
      Function intro Ryan_2019:
        Function_intro_Ryan_a: Funkci můžete ve svém programu zavolat vícekrát. Zkuste
          ji zavolat dvakrát, abyste vyřešili tuto hádanku.
      HOC 2018 Level_10:
        voyage_aquatic_10a: Vidíš **Mořské lucerny** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)?
          Jak je můžeš využít, aby ses dostal skrz oceánský monument?
      HOC 2018 Level_7a:
        aquatic7: Můžeš použít bloky "pokud je cesta", aby ti pomohly otočit se doprava.
      HOC 2018 Level_9b:
        voyage_aquatic_9a: Vidíš červené a modré korálové bloky? Použij je jako orientační
          body pro otočení doprava nebo doleva.
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: Přetáhněte jeden blok „pohyb vpřed“ z panelu nástrojů
          do pracovního prostoru a přichyťte ho k bloku „při spuštění“.
        MC_HOC_2017_01_RETRY_b: Nezapomeňte kliknout na tlačítko „Spustit“, aby agent
          mohl provést kód.
        MC_HOC_2017_01_RETRY_c: Jakmile agent provede celý kód, můžete hráčem pohybovat
          pomocí kláves se šipkami.
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: Přetáhněte jeden blok „pohyb vpřed“ z panelu nástrojů
          do pracovního prostoru a přichyťte ho k bloku „při spuštění“.
        MC_HOC_2017_01_RETRY_b: Nezapomeňte kliknout na tlačítko „Spustit“, aby agent
          mohl provést kód.
        MC_HOC_2017_01_RETRY_c: Jakmile agent provede celý kód, můžete hráčem pohybovat
          pomocí kláves se šipkami.
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Posuňte agenta vpřed o dvě políčka a postavte ho na
          nášlapnou desku. Otevře tak hráči dveře.
        MC_HOC_2017_02_Cole_b: "Stiskněte tlačítko „Spustit“. \nKód můžete spustit,
          i když není správný. Spouštějte a resetujte neustále dokola svůj kód, dokud
          nepřijdete na to, kde je chyba."
        MC_HOC_2017_02_Cole_c: Jakmile agent otevře dveře, nasměrujte hráče k mapě
          pomocí kláves se šipkami.
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Posuňte agenta vpřed o dvě políčka a postavte ho na
          nášlapnou desku. Otevře tak hráči dveře.
        MC_HOC_2017_02_Cole_b: "Stiskněte tlačítko „Spustit“. \nKód můžete spustit,
          i když není správný. Spouštějte a resetujte neustále dokola svůj kód, dokud
          nepřijdete na to, kde je chyba."
        MC_HOC_2017_02_Cole_c: Jakmile agent otevře dveře, nasměrujte hráče k mapě
          pomocí kláves se šipkami.
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Když dostanete agenta na nášlapnou desku, můžete hráče
          nasměrovat ke kompasu pomocí kláves se šipkami.
        MC_HOC_2017_03_Cole_b: Připadá vám kód příliš dlouhý? Zkuste použít cyklus
          „opakovat“ a uvidíte, jestli dokážete přijít na to, jak ho zkrátit.
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Když dostanete agenta na nášlapnou desku, můžete hráče
          nasměrovat ke kompasu pomocí kláves se šipkami.
        MC_HOC_2017_03_Cole_b: Připadá vám kód příliš dlouhý? Zkuste použít cyklus
          „opakovat“ a uvidíte, jestli dokážete přijít na to, jak ho zkrátit.
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: Pomocí bloku „otočit vpravo“ změníte směr agenta.
        MC_HOC_2017_04POINT5_RYAN_a: Agent se musí dostat jen na první nášlapnou desku,
          aby uvolnil Alex nebo Stevovi cestu k sekeře.
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: Pomocí bloku „otočit vpravo“ změníte směr agenta.
        MC_HOC_2017_04POINT5_RYAN_a: Agent se musí dostat jen na první nášlapnou desku,
          aby uvolnil Alex nebo Stevovi cestu k sekeře.
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent se musí sedmkrát „posunout vpřed“. Jak k tomu
          lze využít cyklus „opakovat“?
        MC_HOC_2017_04_Cole_c: "Stiskněte tlačítko „Spustit“. \nKód můžete spustit,
          i když není správný. Spouštějte a resetujte neustále dokola svůj kód, dokud
          nepřijdete na to, kde je chyba."
        MC_HOC_2017_04_Cole_b: Jakmile se agent dostane na nášlapnou desku, otevře
          hráči dveře.
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent se musí sedmkrát „posunout vpřed“. Jak k tomu
          lze využít cyklus „opakovat“?
        MC_HOC_2017_04_Cole_c: "Stiskněte tlačítko „Spustit“. \nKód můžete spustit,
          i když není správný. Spouštějte a resetujte neustále dokola svůj kód, dokud
          nepřijdete na to, kde je chyba."
        MC_HOC_2017_04_Cole_b: Jakmile se agent dostane na nášlapnou desku, otevře
          hráči dveře.
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: Věděli jste, že do cyklu můžete vložit více částí kódu?
          Zkuste do cyklu „opakovat“ vložit umístění prkna **a** posun vpřed pro dokončení
          této hádanky.
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: Věděli jste, že do cyklu můžete vložit více částí kódu?
          Zkuste do cyklu „opakovat“ vložit umístění prkna **a** posun vpřed pro dokončení
          této hádanky.
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: Kolikrát tento cyklus proběhne? Kolikrát by _měl_ proběhnout?
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: Kolikrát tento cyklus proběhne? Kolikrát by _měl_ proběhnout?
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_a: K vyřešení této hádanky musíte přijít na to, co dělá
          funkce „uvolnit cestu“ a zavolat ji tolikrát, kolikrát bude třeba, pomocí
          malého zeleného bloku „uvolnit cestu“ v panelu nástrojů.
        MC_HOC_2017_07_Cole_b: Zkuste zkombinovat bloky funkcí s ostatními bloky z
          panelu nástrojů. Pomůže vám to vyřešit tuto hádanku.
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_a: K vyřešení této hádanky musíte přijít na to, co dělá
          funkce „uvolnit cestu“ a zavolat ji tolikrát, kolikrát bude třeba, pomocí
          malého zeleného bloku „uvolnit cestu“ v panelu nástrojů.
        MC_HOC_2017_07_Cole_b: Zkuste zkombinovat bloky funkcí s ostatními bloky z
          panelu nástrojů. Pomůže vám to vyřešit tuto hádanku.
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_a: Pomocí funkcí tuto hádanku vyřešíte snadněji!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_a: Pomocí funkcí tuto hádanku vyřešíte snadněji!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "Stiskněte tlačítko „Spustit“. \nKód můžete spustit,
          i když není správný. Spouštějte a resetujte neustále dokola svůj kód, dokud
          nepřijdete na to, kde je chyba."
        MC_HOC_2017_08_RY_b: Tuto hádanku lze vyřešit MNOHA způsoby. Pár jich vyzkoušejte!
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "Stiskněte tlačítko „Spustit“. \nKód můžete spustit,
          i když není správný. Spouštějte a resetujte neustále dokola svůj kód, dokud
          nepřijdete na to, kde je chyba."
        MC_HOC_2017_08_RY_b: Tuto hádanku lze vyřešit MNOHA způsoby. Pár jich vyzkoušejte!
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Zkuste pomocí agenta postavit několik mostů, aby mohla
          Alex nebo Steve projít za kraj mapy.
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Zkuste pomocí agenta postavit několik mostů, aby mohla
          Alex nebo Steve projít za kraj mapy.
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_c: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
        courseA_artist_loops_challenge1_d: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: Původní kód by fungoval skvěle - pokud by
          tam byl jeden kousek pokladu na každé hromádce!
        courseC_maze_loops_challenge2_b: Použij cykly, aby ti nedošly bloky `opakuj`!
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: Můžeš použít příkaz `sbírat` vícekrát,
          abys sesbíral další poklad.
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: Můžeš použít příkaz `sbírat` vícekrát,
          abys sesbíral další poklad.
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: Ani nepřemýšlej, že bys to zkoušel bez
          cyklů!
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: Přemýšlejte nad touto cestou jako o třech
          různých úsecích. Každý z nich má vzor, který můžete opakovat.
        courseC_maze_loops_challenge1_b: Mezi bloky `opakuj` budete potřebovat bloky
          `otočit vlevo` nebo `otočit vpravo`, aby byl Scrat připraven na další vzor.
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
      courseA_harvester_seq2:
        courseA_harvester_seq2_b: Zkus sepsat kroky na papír, aby jsi našel řešení!
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_b: Zkus sepsat kroky na papír, aby jsi našel řešení!
      courseA_maze_seq5:
        courseA_maze_seq5_a: Zkus sepsat kroky na papír, aby jsi našel řešení!
      courseA_maze_seq5_2018:
        '1': Zkus sepsat kroky na papír, aby jsi našel řešení!
      courseA_maze_seq5_2019:
        '1': Zkus sepsat kroky na papír, aby jsi našel řešení!
      courseB_maze_seq6:
        courseB_maze_seq5_c: Tuto hádanku lze vyřešit dvěma způsoby.
      courseB_maze_seq6_2018:
        courseB_maze_seq5_c: Tuto hádanku lze vyřešit dvěma způsoby.
      courseB_maze_seq6_2019:
        courseB_maze_seq5_c: Tuto hádanku lze vyřešit dvěma způsoby.
      courseB_maze_seq8:
        courseB_maze_seq8_b: Tuto hádanku lze vyřešit dvěma způsoby!
      courseB_maze_seq9:
        courseB_maze_seq9_c: Tuto hádanku lze vyřešit dvěma způsoby.
      courseB_maze_seq9_2018:
        courseB_maze_seq9_c: Tuto hádanku lze vyřešit dvěma způsoby.
      courseB_maze_seq9_2019:
        courseB_maze_seq9_c: Tuto hádanku lze vyřešit dvěma způsoby.
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: Použij cykly, aby ti nedošly bloky `opakuj`!
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: Použij cykly, aby ti nedošly bloky `opakuj`!
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: Použij cykly, aby ti nedošly bloky `opakuj`!
      courseC_flappy_events1:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2018:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_flappy_events1_2019:
        courseC_flappy_events1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseC_maze_programming6:
        courseC_maze_programming6_a: Tuto hádanku lze vyřešit dvěma způsoby!
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: Tuto hádanku lze vyřešit dvěma způsoby!
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: Tuto hádanku lze vyřešit dvěma způsoby!
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          Zkuste použít blok \`skok vpřed ' abyste se dostali z vrcholu jednoho čtverce na místo, kde budete začínat další.

          Pokud jsou vaše čtverce vysoké 20 pixelů a jsou od sebe vzdálené 20 pixelů, jak daleko musíte skočit?
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          Zkuste použít blok \`skok vpřed ' abyste se dostali z vrcholu jednoho čtverce na místo, kde budete začínat další.

          Pokud jsou vaše čtverce vysoké 20 pixelů a jsou od sebe vzdálené 20 pixelů, jak daleko musíte skočit?
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          Zkuste použít blok \`skok vpřed ' abyste se dostali z vrcholu jednoho čtverce na místo, kde budete začínat další.

          Pokud jsou vaše čtverce vysoké 20 pixelů a jsou od sebe vzdálené 20 pixelů, jak daleko musíte skočit?
      courseD_bee_conditionals8:
        courseD_bee_conditionals8_a: |-
          \*\* Pamatujte: \*\* Tato hádanka se mění pokaždé, když je spuštěna.

          K vyřešení problému by to chtělo použít podmíněný blok (`if` nebo`if / else`).
      courseD_bee_conditionals8_2018:
        courseD_bee_conditionals8_a: |-
          \*\* Pamatujte: \*\* Tato hádanka se mění pokaždé, když je spuštěna.

          K vyřešení problému by to chtělo použít podmíněný blok (`if` nebo`if / else`).
      courseD_bee_conditionals8_2019:
        courseD_bee_conditionals8_a: |-
          \*\* Pamatujte: \*\* Tato hádanka se mění pokaždé, když je spuštěna.

          K vyřešení problému by to chtělo použít podmíněný blok (`if` nebo`if / else`).
      courseD_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          Stejně jako bloky `pokud na květině`, kód v cyklu `pokud nektar > 0` poběží, pokud je včela na květině. Rozdíl je v tom, že kód uvnitř poběží, dokud zbývá nějaký nektar.  Zkus tento vzor:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2018:
        courseD_bee_conditionals_challenge1_b: |-
          Stejně jako bloky `pokud na květině`, kód v cyklu `pokud nektar > 0` poběží, pokud je včela na květině. Rozdíl je v tom, že kód uvnitř poběží, dokud zbývá nějaký nektar.  Zkus tento vzor:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_bee_conditionals_challenge2_2019:
        courseD_bee_conditionals_challenge1_b: |-
          Stejně jako bloky `pokud na květině`, kód v cyklu `pokud nektar > 0` poběží, pokud je včela na květině. Rozdíl je v tom, že kód uvnitř poběží, dokud zbývá nějaký nektar.  Zkus tento vzor:

          <xml>  <block type="bee_whileNectarAmount">

          <title name="ARG1">nectarRemaining</title>
          <title name="OP">&gt;</title>
          <title name="ARG2">0</title>                    <statement name="DO">
          <block type="maze_nectar"/>
          </statement>
          </block></xml>
      courseD_maze_ramp6:
        courseC_maze_programming6_a: Tuto hádanku lze vyřešit dvěma způsoby!
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: Tuto hádanku lze vyřešit dvěma způsoby!
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_b: 'Dvě třetiny trojúhelníku mají délku
          80 pixelů a otočka vpravo je o 120 stupňů. '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_b: 'Dvě třetiny trojúhelníku mají délku
          80 pixelů a otočka vpravo je o 120 stupňů. '
      courseE_artist_functions1:
        courseE_artist_functions1_a: Každý čtverec má strany o délce 100 pixelů, to
          znamená, že se budete muset posunout o 175 pixelů vpřed, dřív než začnete
          kreslit druhý čtverec.
        courseE_artist_functions1_b: Je v pořádku, pokud se čáry překrývají.
      courseE_artist_functions2:
        courseD_artist_functions2_a: |-
          Váš program by měl:

          -   použít funkci
          -   posunout se vpřed o 100 + 75 pixelů
          -   použít funkci
      courseE_artist_functions8:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2018:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_artist_functions8_2019:
        courseD_artist_functions8_g: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseE_bee_functions6:
        courseE_bee_functions6_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
        courseE_bee_functions7_b: |-
          Pamatujte si, že kód musíte vkládat dovnitř zeleného bloku funkce.

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
      courseF_artist_fwp_challenge2:
        courseF_artist_fwp_challenge1_a: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_artist_variables4:
        courseF_artist_variables4_b: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      courseF_bee_conditionals8:
        courseF_bee_conditionals8_a: |-
          \*\* Pamatujte: \*\* Tato hádanka se mění pokaždé, když je spuštěna.

          K vyřešení problému by to chtělo použít podmíněný blok (`if` nebo`if / else`).
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          Pokud je hádanka příliš složitá, zkuste budovat svou funkci po částech.

          Přidejte pár bloků a vyzkoušejte to. Přidejte další a zkuste to znovu. Brzy se vám to podaří!
      Dance_Party_extras_alternate_2019:
        alternate: Alternativní blok je v kategorii „Tanečníci“.
