{
  "zh-TW": {
    "data": {
      "lessons": {
        "dance-extras/Dance Party - Go Further": {
          "overview": "在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。",
          "purpose": "本課堂介紹核心的電腦科學概念：編寫程式與事件程式設計（使用積木）。",
          "student_overview": "在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。"
        },
        "minecraft/Minecraft Hour of Code Designer": {
          "overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。",
          "student_overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。"
        },
        "hero/Minecraft Hour of Code": {
          "overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。"
        },
        "poem-art-2021/Poem Art": {
          "overview": "在本節電腦科學和ELA綜合課程中，學生們將使用代碼編寫一篇詩歌，並用動畫展現這篇詩歌的意境。學生們將賞析和感受詩歌的意境。然後，他們將查找對應的效果和圖像，來展現這篇詩歌的意境。最後，學生們將使用事件（代碼）來展現詩歌中意境的轉換或採用動畫效果引入新畫面。\n\n本節課可作為1小時的獨立課程完成。或將本節課作為多課時模組[詩歌程式設計](http://studio.code.org/s/poetry-2021)的第一節課。",
          "preparation": "-   查看並完成線上自學課程：[詩歌藝術](http://studio.code.org/s/poem-art)。\n\n-   首先嘗試這些活動，然後再要求學生參與。\n\n-   檢查技術配置，確定是否需要提前排除任何故障。\n\n-   某些級別需要音效支援。提前分發耳機。\n\n-   [備選]每個學生2張便簽紙，用於測評。"
        },
        "hourofcode/Maze": {
          "overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂專門為年齡較小（4-10 歲）的學生所設計，但是在使用提供的年齡差異建議後，也適用於年齡較大的學生。",
          "student_overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂專門為年齡較小（4-10 歲）的學生所設計，但是在使用提供的年齡差異建議後，也適用於年齡較大的學生。"
        },
        "frozen/Artist": {
          "overview": "在本課程中，所有年齡的學習者在一個安全的、支持性的環境中獲得程式設計和電腦科學的入門經驗。本課程是為10-13歲的中年級學生設計的，但可以根據提供的差異化建議來對更小或更大的學習者進行調整。學生應對簡單的幾何和繪圖角度有基本的瞭解。",
          "student_overview": "在本課程中，所有年齡的學習者在一個安全的、支持性的環境中獲得程式設計和電腦科學的入門經驗。本課程是為10-13歲的中年級學生設計的，但可以根據提供的差異化建議來對更小或更大的學習者進行調整。學生應對簡單的幾何和繪圖角度有基本的瞭解。"
        },
        "iceage/Ice Age Play Lab": {
          "student_overview": "在這節課中，學習者將獲得電腦科學的入門經驗，並使用基本的積木代碼創建一個遊戲。"
        },
        "hello-world-emoji-2021/Hello World": {
          "overview": "在本課中，學生將在精靈圖實驗室通過程式設計學習電腦科學的基礎知識。精靈圖實驗室是一個可以用來創建富有想像力的有趣項目的工具。學生將學習創建和動畫化精靈圖，並使用事件使它們互動。 \n\n本課有多個版本。每個版本教授相同的概念，但擁有不同的圖像，以吸引不同的學生。更多資訊請訪問[Hello World著陸頁。](https://code.org/helloworld)",
          "preparation": "-   通過玩謎題為你的課堂尋找任何潛在的問題領域。\n-   使用[CS Connections](https://code.org/educate/csc)的資源，在初始教程之後制定更多的電腦科學學習計劃。",
          "purpose": "本課程旨在幫助學生在精靈圖實驗室中創建簡單的程式設計項目。通過這項技能，學生可以創建任何主題的項目，如另一個學校主題或與他們個人相關的東西。訪問[CS Connections](https://code.org/educate/csc)瞭解如何將電腦科學整合到其他學科的思路。"
        },
        "artist/Artist": {
          "overview": "在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。",
          "student_overview": "為藝術家設計程式，製作漂亮的圖像。"
        },
        "dance/Dance Party": {
          "overview": "在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。",
          "purpose": "本課堂介紹核心的電腦科學概念：編寫程式與事件程式設計（使用積木）。",
          "student_overview": "在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。"
        },
        "hello-world-food-2021/Hello World": {
          "overview": "在本課中，學生將在精靈圖實驗室通過程式設計學習電腦科學的基礎知識。精靈圖實驗室是一個可以用來創建富有想像力的有趣項目的工具。學生將學習創建和動畫化精靈圖，並使用事件使它們互動。 \n\n本課有多個版本。每個版本教授相同的概念，但擁有不同的圖像，以吸引不同的學生。更多資訊請訪問[Hello World著陸頁。](https://code.org/helloworld)",
          "preparation": "-   通過玩謎題為你的課堂尋找任何潛在的問題領域。\n-   使用[CS Connections](https://code.org/educate/csc)的資源，在初始教程之後制定更多的電腦科學學習計劃。",
          "purpose": "本課程旨在幫助學生在精靈圖實驗室中創建簡單的程式設計項目。通過這項技能，學生可以創建任何主題的項目，如另一個學校主題或與他們個人相關的東西。訪問[CS Connections](https://code.org/educate/csc)瞭解如何將電腦科學整合到其他學科的思路。"
        },
        "aquatic/Aquatic": {
          "overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。"
        },
        "hoc-encryption/Simple Encryption": {
          "overview": "本課堂會向學生介紹，需要使用加密與簡單技術破解秘密訊息。學生會自己嘗試破解一條訊息，這個訊息以經典的凱撒密碼，以及隨機替換式密碼加密。學生應該要深深明白，在這個運算工具強大的世代，加密技術將需要變得更成熟。本課堂最重要的一點，是瞭解在我們每天的一切網路生活中，加密怎樣和為甚麼扮演著重要角色，並瞭解製作良好的加密技術不是小事。學生會嘗試瞭解：我們面對強大的運算工具，而這些工具可用來破解加密內容，因此必須考慮如何製作強大的加密方式。在網際網路上傳送位元時需要保持私密，對所有上網的人來說都非常重要。",
          "student_overview": "本課堂會向學生介紹，需要使用加密與簡單技術破解秘密訊息。學生會自己嘗試破解一條訊息，這個訊息以經典的凱撒密碼，以及隨機替換式密碼加密。學生應該要深深明白，在這個運算工具強大的世代，加密技術將需要變得更成熟。本課堂最重要的一點，是瞭解在我們每天的一切網路生活中，加密怎樣和為甚麼扮演著重要角色，並瞭解製作良好的加密技術不是小事。學生會嘗試瞭解：我們面對強大的運算工具，而這些工具可用來破解加密內容，因此必須考慮如何製作強大的加密方式。在網際網路上傳送位元時需要保持私密，對所有上網的人來說都非常重要。"
        },
        "hello-world-animals-2021/Hello World": {
          "overview": "在本課中，學生將在精靈圖實驗室通過程式設計學習電腦科學的基礎知識。精靈圖實驗室是一個可以用來創建富有想像力的有趣項目的工具。學生將學習創建和動畫化精靈圖，並使用事件使它們互動。 \n\n本課有多個版本。每個版本教授相同的概念，但擁有不同的圖像，以吸引不同的學生。更多資訊請訪問[Hello World著陸頁。](https://code.org/helloworld)",
          "preparation": "-   通過玩謎題為你的課堂尋找任何潛在的問題領域。\n-   使用[CS Connections](https://code.org/educate/csc)的資源，在初始教程之後制定更多的電腦科學學習計劃。",
          "purpose": "本課程旨在幫助學生在精靈圖實驗室中創建簡單的程式設計項目。通過這項技能，學生可以創建任何主題的項目，如另一個學校主題或與他們個人相關的東西。訪問[CS Connections](https://code.org/educate/csc)瞭解如何將電腦科學整合到其他學科的思路。"
        },
        "starwars/Hour of Code 2015": {
          "student_overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂提供2個版本。"
        },
        "mc/Hour of Code 2015": {
          "overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。",
          "student_overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂適用於有能力閱讀的學生（6歲以上）。年齡較小的學生未必會完成教程，但是會在1小時解謎中獲得大量樂趣。大部分高中學生都會完成教程，並會在課堂結束時有一些時間玩自由探索關卡。"
        },
        "playlab/Play Lab": {
          "student_overview": "在這節課中，學習者將獲得電腦科學的入門經驗，並使用基本的積木代碼創建一個遊戲。"
        },
        "applab-intro/Intro to App Lab": {
          "student_overview": "在本教程的最後，你將能夠擴展一個項目，你開始構建一個“選擇你自己的冒險”、“賀卡”或“性格測試”應用程式。你也可以繼續構建code.org/applab頁面上顯示的更多項目。 \n\n祝你在應用實驗室愉快地完成一小時玩程式！"
        },
        "hello-world-retro-2021/Hello World": {
          "overview": "在本課中，學生將在精靈圖實驗室通過程式設計學習電腦科學的基礎知識。精靈圖實驗室是一個可以用來創建富有想像力的有趣項目的工具。學生將學習創建和動畫化精靈圖，並使用事件使它們互動。 \n\n本課有多個版本。每個版本教授相同的概念，但擁有不同的圖像，以吸引不同的學生。更多資訊請訪問[Hello World著陸頁。](https://code.org/helloworld)",
          "preparation": "-   通過玩謎題為你的課堂尋找任何潛在的問題領域。\n-   使用[CS Connections](https://code.org/educate/csc)的資源，在初始教程之後制定更多的電腦科學學習計劃。",
          "purpose": "本課程旨在幫助學生在精靈圖實驗室中創建簡單的程式設計項目。通過這項技能，學生可以創建任何主題的項目，如另一個學校主題或與他們個人相關的東西。訪問[CS Connections](https://code.org/educate/csc)瞭解如何將電腦科學整合到其他學科的思路。"
        },
        "starwarsblocks/Hour of Code 2015": {
          "student_overview": "在本課堂中，所有年齡的學生都會在安全且充滿支持的環境中，獲得程式編寫與電腦科學的新手體驗。本課堂提供2個版本。"
        },
        "text-compression/Text Compression": {
          "student_overview": "在將來的某個時候，我們會達到傳送位元的物理速度上限。若我們想更快傳送大量資訊，就必須找出方法，以更少位元表示相同的資訊。因此，我們必須壓縮資料。"
        },
        "outbreak/Outbreak": {
          "purpose": "在前一課中，學生從一個簡單的模擬中收集和解釋數據。在本課中，學生將按照說明編寫自己的模擬模型。學生之前掌握的關於現實世界病毒疫情爆發的知識將應用於一個虛構的場景。"
        },
        "sports/Sports": {
          "overview": "在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。",
          "student_overview": "有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！"
        },
        "infinity/Infinity": {
          "student_overview": "在這節課中，學習者將獲得電腦科學的入門經驗，並使用基本的積木代碼創建一個遊戲。"
        },
        "basketball/Bounce": {
          "overview": "在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。",
          "student_overview": "有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！"
        },
        "dance-extras-2019/Dance Party - Go Further": {
          "purpose": "本課堂介紹核心的電腦科學概念：編寫程式與事件程式設計（使用積木）。"
        },
        "dance-2019/Dance Party": {
          "overview": "在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。",
          "purpose": "本課堂介紹核心的電腦科學概念：編寫程式與事件程式設計（使用積木）。",
          "student_overview": "在本課程中，所有年齡段的學習者都將在一個安全、支持性的環境中獲得編碼和電腦科學的入門體驗。本課是為所有需要閱讀的年齡段學習者而設計的。本活動需要有聲音，因為這個工具是為響應音樂而構建的。"
        },
        "oceans/Oceans": {
          "overview": "在本課中，所有年齡段的學習者都能在安全、支持性的環境中獲得編碼和電腦科學的入門體驗。首先，學生將物件分類為“魚”或“非魚”，試圖清除海洋中的垃圾。然後，學生將需要擴展他們的訓練資料集，以覆蓋水中的其他海洋生物。在活動的第二部分，學生將選擇他們自己的標籤以應用于隨機生成的魚的圖像。該訓練資料用於能夠自行標記新圖像的機器學習模型。",
          "student_overview": "教程摘要：學生首先會把物件分類為「fish」（魚）或「not fish」（不是魚），從而嘗試清除海洋中的垃圾。然後，學生將需要擴充訓練資料集，加入屬於海洋的其他海洋生物。在活動的第 2 部分，學生會自行選擇標籤套用於隨機產生的魚中。這些訓練資料會在機器學習模型中使用，然後學習模型便應能夠自行標籤新的圖像。"
        },
        "jigsaw/Jigsaw": {
          "overview": "本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。",
          "student_overview": "以點擊與拖放的方式完成謎題。"
        },
        "coursef-2021/Virtual Pet": {
          "overview": "在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！",
          "student_overview": "在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！"
        },
        "coursef-2021/lesson-2": {
          "student_overview": "欺凌絕對是不恰當的行為。本課堂會教導你可以和不可以在線上做些甚麼。"
        },
        "coursef-2021/Loops with the Artist": {
          "overview": "觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。",
          "student_overview": "在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！"
        },
        "coursef-2021/Variables that Change in Artist": {
          "overview": "在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。",
          "student_overview": "在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。"
        },
        "coursef-2021/Nested Loops in the Maze": {
          "overview": "在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。",
          "student_overview": "迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明把迴圈放進另一個迴圈裡會發生甚麼事。"
        },
        "coursef-2021/Variables that Change in Bee": {
          "overview": "本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。",
          "student_overview": "這隻蜜蜂很喜愛變數！"
        },
        "coursef-2021/For Loop Fun": {
          "overview": "我們知道迴圈可以讓我們不斷重複的做同一件事情。現在，我們要學習如何使用本身有額外結構的迴圈。這些新結構可讓學生編寫更強大、更具動態的程式碼。",
          "student_overview": "玩「for」（計數）迴圈，發掘無窮樂趣！"
        },
        "coursef-2021/For Loops in Bee": {
          "overview": "本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。",
          "student_overview": "嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！"
        },
        "coursef-2021/For Loops in Artist": {
          "overview": "在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。",
          "student_overview": "準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。"
        },
        "coursef-2021/Simulating Experiments": {
          "overview": "在 Sprite Lab 上執行簡單模擬，學生便會體驗到電腦運算可怎樣用來收集資料，從而找出各種趨勢與模式。多次執行模擬後，學生便會有機會預測一下，變更模擬中的變數可能會怎樣影響結果，然後再測試這個假設。",
          "student_overview": "在電腦上執行模擬，並實驗一下變更參數後的情況。"
        },
        "coursef-2021/lesson-5": {
          "purpose": "在前一課中，學生從一個簡單的模擬中收集和解釋數據。在本課中，學生將按照說明編寫自己的模擬模型。學生之前掌握的關於現實世界病毒疫情爆發的知識將應用於一個虛構的場景。"
        },
        "coursef-2021/Internet": {
          "overview": "即便許多人每天都會上網，但是理解其中原理的中卻不多。在本課堂中，學生會假裝流經網際網路，同時學習連線、URL、IP 位址與 DNS 的知識。",
          "student_overview": "你有沒有想過，資訊怎樣在網際網路中傳輸？不是魔術！本課堂將會教導網際網路運作方面的基本知識。"
        },
        "coursef-2021/End of Course Project": {
          "student_overview": "這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！"
        },
        "courseb-2021/Digital Trails": {
          "student_overview": "瞭解自己的數位足跡，並學習怎樣在瀏覽網站時保持安全。"
        },
        "courseb-2021/Move It, Move It": {
          "overview": "本課堂會讓學生在心理上準備好程式編寫練習，他們會在整個課程中遇到這些練習。學生會組成小隊，以實體活動為同學設計程式，讓同學從某個位置踏步到踏一個位置，直到到達終點。",
          "student_overview": "為你的同學設計程式，讓同學小心翼翼從某處移動到另一處。"
        },
        "courseb-2021/Sequencing in Maze": {
          "overview": "本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。",
          "purpose": "在本課堂中，學生會在電腦平台上加強程式設計與除錯技巧。這些謎題採用積木格式，有助學生學習序列與各種概念，而不用擔心要完善程式語法。",
          "student_overview": "協助憤怒鳥在道路上移動至搗蛋豬的位置。"
        },
        "courseb-2021/Programming in Maze": {
          "overview": "學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。",
          "student_overview": "製作程式，協助憤怒鳥完成迷宮。"
        },
        "courseb-2021/Programming in Harvester": {
          "overview": "學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。",
          "student_overview": "幫助收割者在路上收集蔬菜。"
        },
        "courseb-2021/Loops: Getting Loopy": {
          "overview": "我們開始設計更長和更有趣味的程式時，程式碼裡通常都會有大量重複內容。在本課堂中，學生會瞭解怎樣使用迴圈，以更簡易的方式傳達含大量重複內容的指令。學生會觀察舞蹈中的重複移動模式。",
          "student_overview": "在本課堂中，我們會使用重複迴圈舉行舞蹈派對！"
        },
        "courseb-2021/Loops in Harvester": {
          "overview": "這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集玉米。",
          "student_overview": "使用迴圈，幫助收割者收集更多農作物！"
        },
        "courseb-2021/Loops in Collector": {
          "overview": "在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。",
          "student_overview": "為冒險家 Laurel 編寫程式，讓她能夠在開放的洞穴中收集寶藏。"
        },
        "courseb-2021/Loops in Artist": {
          "overview": "學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。",
          "purpose": "本課堂會提供不同的視角，說明迴圈可怎樣在程式設計中建立各種東西。學生會測試自己的批判思維技巧，評估提供的程式碼，並決定需要加入甚麼才可解決謎題。學生也可在這裡反思：不使用迴圈設計程式會降低效率，因為沒有「重複」迴圈的幫助，程式便需要增加多少塊積木。",
          "student_overview": "使用模式與迴圈完成圖像。"
        },
        "courseb-2021/The Right App": {
          "overview": "本課堂會讓學生明白，電腦可協助現實生活中的大眾。首先，學生會理解一些虛構的智慧型手機使用者，以協助他們找出「合適的應用程式」解決他們的需要。然後，學生會練習同理心與創意，製作自己的智慧型手機應用程式草稿，解決下一位使用者的需要。",
          "student_overview": "製作你自己的智慧型手機應用程式草稿。"
        },
        "courseb-2021/Events: The Big Event": {
          "overview": "事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。",
          "student_overview": "老師按下巨型遙控器的按鈕後，你便會移動或是大叫。"
        },
        "courseb-2021/Events in Play Lab": {
          "overview": "在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！",
          "purpose": "在這項線上活動中，學生會學習怎樣在 Play Lab 中使用事件。他們首先會訓練武士，在他們按下箭頭鍵時讓武士移動。活動結束時，他們將有機會展示本課程中所學到的其餘技巧（包括序列與迴圈）做為最後的自由探索謎題。",
          "student_overview": "使用事件製作故事或互動遊戲。"
        },
        "coursea-2021/Safety in My Online Neighborhood": {
          "overview": "[![common sense education](https://curriculum.code.org/static/img/common_sense_education.png)](https://www.commonsense.org)\n\n本課程由 Common Sense Education 製作。[了解更多。](https://www.commonsense.org/education/digital-citizenship/curriculum)\n\n互聯網的力量令學生能夠體驗和參觀他們也許無法親身去看的地方，但如現實中旅行一樣，網上旅遊時注意安全亦同樣重要。這次虛擬的實地考察，孩子可以練習在網上探險時保持安全。",
          "preparation": "-   查閱教材。\n-   為每位學生列印講義。\n-   (可選) 列印詩歌海報，展示在教室中。",
          "purpose": "Common Sense Education 設立了這個課程，教學生如何在網上安全地到處去。"
        },
        "coursea-2021/Learn to Drag and Drop": {
          "overview": "本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。",
          "purpose": "本課的主要目標是建立學生的電腦經驗。通過涵蓋最基本的電腦功能，如點擊、拖動和下拉，我們在課堂上為未來的難題創造一個更平等的環境。本課還提供了一個很好的機會來介紹基本的電腦硬體術語，取決於你的設備，可能包括 \"游標\"、\"觸控板 \"或 \"觸控螢幕\"。",
          "student_overview": "以點擊與拖放的方式完成謎題。"
        },
        "coursea-2021/Programming: Happy Maps": {
          "overview": "如果學生理解規畫順序和將它循序編程之間的區別，那麼從演算法過渡到程式設計的時間就不會太長，這項活動將透過速記讀寫代碼的方式幫助學生獲得經驗。",
          "purpose": "如果學生理解規畫順序和將它循序編程之間的區別，那麼從演算法過渡到程式設計的時間就不會太長，這項活動將透過速記讀寫代碼的方式幫助學生獲得經驗。",
          "student_overview": "編寫指令，讓 Flurb 走到水果那裡。"
        },
        "coursea-2021/Sequencing with Scrat": {
          "overview": "本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。",
          "purpose": "在本課堂中，學生會在電腦平台上加強程式設計與除錯技巧。這些謎題採用積木格式，有助學生學習序列與各種概念，而不用擔心要完善程式語法。",
          "student_overview": "為鼠奎特設計程式，讓他能夠拿到橡樹果實。"
        },
        "coursea-2021/Programming in Ice Age": {
          "overview": "學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。",
          "purpose": "在本課堂中，學生會在電腦平台上加強程式設計與除錯技巧。這些謎題採用積木格式，有助學生學習序列與各種概念，而不用擔心要完善程式語法。",
          "student_overview": "編寫程式，幫助鼠奎特拿到橡樹果實。"
        },
        "coursea-2021/Programming with Rey and BB-8": {
          "overview": "在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。",
          "student_overview": "協助 BB-8 收集廢金屬。"
        },
        "coursea-2021/Loops: Happy Loops": {
          "overview": "迴圈是程式設計中非常有用且強大的工具。為了理解迴圈的用處，就必須逼著學生去思考更簡潔的方式來解決平凡的問題。",
          "purpose": "本課堂用來介紹迴圈（loop）。迴圈可讓學生把需要重複的命令組合起來，從而簡化程式碼。學生會發展批判思維技巧，他們要注意同學重複移動的模式，並判斷需要重複命令多少次。學生會再看到「快樂地圖」，並有機會把序列等舊概念，和新的迴圈概念聯繫起來。",
          "student_overview": "使用迴圈（loop），幫助 Flurb 解決更棘手的問題。"
        },
        "coursea-2021/Loops in Ice Age": {
          "overview": "這個舞台會以「快樂迴圈」中重複指令的概念為基礎，讓學生在 Code.org 上用迴圈更有效率的收集橡樹果實。",
          "student_overview": "使用迴圈，幫助鼠奎特更快完成任務。"
        },
        "coursea-2021/Loops in Collector": {
          "overview": "從「快樂迴圈」中建立重複指令的概念，這個階段會讓學生用迴圈更有效率的收集寶藏。",
          "student_overview": "幫探險家 Laurel 收集地底的寶藏。"
        },
        "coursea-2021/Ocean Scene with Loops": {
          "overview": "學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。",
          "student_overview": "使用迴圈與模式完成圖像。"
        },
        "coursea-2021/Events: The Big Event": {
          "overview": "事件是很好的方式，在預先編寫好的演算法中增加變化。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。這正是事件之目的。",
          "student_overview": "教師按下巨型遙控器的按鈕後，學生便會移動和大叫。"
        },
        "coursea-2021/Events in Play Lab": {
          "overview": "在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！",
          "purpose": "今天學生會使用 Play Lab，繼續增加對事件的認識。事件在大部分電腦程式中都十分常見。在這項活動中，學生會使用事件，讓角色依據使用者啟動的事件，在畫面上移動、發出噪音與變更背景。",
          "student_overview": "創作自己的遊戲或故事。"
        },
        "coursec-2021/Programming: My Robotic Friends": {
          "overview": "學生會使用一組符號來代替程式碼，設計演算法指示「機器人」把杯子疊起成不同的模式。學生會輪流扮演機器人，且僅回應同伴定義的演算法。這個部分會教導學生符號和行動關的聯繫、演算法和程式間的分別，以及有用的除錯技巧。",
          "purpose": "本不插電課堂讓全班同學組成一個團隊，並完成一項任務：讓「機器人」把杯子疊起成指定的設計。學生會在整個課程中設計程式，而這項活動則為程式設計打下基礎，他們會學到定義表達清晰的演算法非常重要。",
          "student_overview": "在本課堂中，你會假設同學是機器人，然後為他們設計程式，建立杯子堆疊的模式。"
        },
        "coursec-2021/Programming in Maze": {
          "overview": "學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。",
          "purpose": "在本課堂中，學生會在電腦平台上加強程式設計與除錯技巧。這些謎題採用積木格式，有助學生學習序列與各種概念，而不用擔心要完善程式語法。",
          "student_overview": "與憤怒鳥一起學習序列與演算法。"
        },
        "coursec-2021/Debugging in Maze": {
          "overview": "除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。",
          "student_overview": "在謎題中尋找問題，並練習你的除錯技巧。"
        },
        "coursec-2021/Programming in Collector": {
          "overview": "在這組謎題中，學生會繼續增加對演算法和除錯的瞭解。學生會遇到新角色：探除家 Laurel，並製作序列演算法，讓 Laurel 能夠在道路上行走時收集寶藏。",
          "student_overview": "編寫演算法，幫助探險家 Laurel 收集大量寶石！"
        },
        "coursec-2021/Programming in Artist": {
          "overview": "在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。",
          "purpose": "本課程會以學生先前使用序列的經驗為基礎，激發學生的更多創意編寫程式。本課堂之目的，是介紹新的積木與目標，以鞏固學生對序列的認識。在這種情況下，學生會使用新的積木學習像素與角度的更多知識，同時仍然可練習序列技巧，此外，學生也將能夠把新的目標形象化，例如編寫程式讓藝術家繪畫正方形。",
          "student_overview": "為藝術家設計程式，製作漂亮的圖像。"
        },
        "coursec-2021/Loops: My Loopy Robotic Friends": {
          "overview": "學生會以最初的「我的機器人朋友」活動為基礎，處理更大型且更複雜的設計。為了幫助「機器人」設計程式，以完成這些更大型的設計，學生將需要找出指令裡有哪些重複模式可使用迴圈（loop）取代。",
          "purpose": "本課堂會用來重新介紹迴圈，並使用學生已經熟悉的「機器人」程式設計指令組合。學生會發展批判思維技巧，他們會注意同學移動的重複模式，並確定怎樣使用迴圈來簡化這些重複模式。",
          "student_overview": "在本課堂中，你會再次為同學設計程式，但會使用迴圈（loop），這樣，你便能夠解決更龐大、更複雜的問題。"
        },
        "coursec-2021/Loops with Rey and BB-8": {
          "overview": "這個舞台會以「學習迴圈」中重複指令的概念為基礎，讓學生用迴圈協助 BB-8 更有效率的遊歷迷宮。",
          "student_overview": "使用迴圈（loop），幫助 BB-8 完成各個迷宮！"
        },
        "coursec-2021/Loops in Harvester": {
          "student_overview": "我們來使用迴圈（loop），幫助收割者收割蔬菜！"
        },
        "coursec-2021/Sticker Art with Loops": {
          "purpose": "這個系列會以充滿創意的個人設計，強調迴圈的強大力量。\n\n此課程進展是以專案為基礎的系列，讓學生可在自己的作品上學習，並製作出精彩的作品。",
          "student_overview": "在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！"
        },
        "coursec-2021/Events: The Big Event": {
          "overview": "學生很快會知道，事件是很好的方式，在預先編寫好的演算法中增加靈活性。有時候，你希望自己的程式能夠完全以使用者預期的方式回應使用者。事件可讓你的程式更有趣，而且有更多互動。",
          "student_overview": "玩一款有趣的遊戲，學習使用事件。"
        },
        "coursec-2021/Build a Flappy Game": {
          "overview": "在這個特別舞台中，學生會開始製作自己的第一款像素鳥遊戲。他們會使用事件處理器偵測滑鼠點擊與物件碰撞。在關卡結束時，學生將能夠自訂遊戲，變更視覺元素或規則。",
          "student_overview": "以你喜歡的方式隨意製作像素鳥遊戲，並盡情與朋友分享！"
        },
        "coursec-2021/Events in Play Lab": {
          "overview": "在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！",
          "purpose": "學生會在這裡使用 Play Lab，繼續增加對事件的認識。他們會使用事件，讓角色依據使用者的輸入而在畫面上移動、發出噪音和更變背景。在謎題系列結束時，學生將有機會分享自己的專案。",
          "student_overview": "是時候發揮創意，在 Play Lab 中製作遊戲！"
        },
        "coursec-2021/Picturing Data": {
          "overview": "資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。",
          "student_overview": "資料可用來幫助學生瞭解自己的世界，並解答有趣的問題。在本課堂中，學生會收集一個 Play Lab 專案的資料，並使用不同類型的圖表將資料視覺化。"
        },
        "coursec-2021/Binary Bracelets": {
          "overview": "二進制在電腦世界中極為重要。現代的大多數電腦都會以二進制形式儲存所有類型的資訊。本課堂會協助展示：怎樣能夠把現實世界的東西，轉換成一系列的開/關。",
          "student_overview": "製作屬於你自己的二進制手環，並學習電腦怎樣記得資訊！"
        },
        "coursec-2021/End of Course Project: Create a Play Lab Game": {
          "overview": "本總結課堂會引導學生重溫設計、開發與展示 Play Lab 專案的流程！為了確保流程順暢，我們已提供循序漸進的結構，方面學生按照結構工作 - 從紙張上計畫到在我們的網站上編寫程式。此外，我們也提供多種構思，協助教師完成最終展示！",
          "student_overview": "準備就緒，開始編寫大量程式！是時候開始製作你的專案了。"
        },
        "coursed-2021/lesson-5": {
          "purpose": "Common Sense Education 設立了這個課程，教學生如何在網上安全地到處去。",
          "student_overview": "在本課堂中，你會瞭解密碼可怎樣保護你的資訊，以及怎樣才算是好的密碼。"
        },
        "coursed-2021/Algorithms: Graph Paper Programming": {
          "overview": "學生會互相為對方「設計程式」繪畫，從而有機會以有趣且無障礙的方式，體驗程式設計中的一些核心概念。班級課堂開始時，首先會讓學生使用符號，互相指導對方在方格紙上的正方形裡填色，以重現出現有的圖片。如果時間允許，課堂結束時可以讓學生自行創作圖像。",
          "purpose": "這項活動的目標是增強學生的批判思維技巧，並提高學生對課程的興趣，同時介紹一些基本的程式設計概念，這些概念將會在整課程中使用。在不插電活動中向班級學生介紹序列與演算法等基本概念，可讓害怕電腦的學生也能對這些主題有基本的瞭解。在本課堂中，學生會學習怎樣建立演算法，並把它編碼進程式中。",
          "student_overview": "在本課堂中，你會為同學設計程式，讓同學能夠畫畫！"
        },
        "coursed-2021/Introduction to Online Puzzles": {
          "overview": "在這組謎題中，首先會向學生簡介（或重溫，視你的班級經驗而定） Code.org 的線上工作區。我們有各種影片指出工作區的基本功能，包括「Run」（執行）、「Reset」（重設）與「Step」（步進）按鈕。這些影片也會說明怎樣拖曳 Blockly 積木、刪除 Blockly 積木與連接 Blockly 積木。之後，學生會在迷宮裡練習_序列_與_除錯_技巧。接著，學生會在學習_迴圈_的基本知識時看到一些新的謎題類型，例如收藏家、藝術家與收割者。",
          "purpose": "我們明白，每個班級對每個科目都有不同的理解程度。你的班級裡可能會有一些學生是電腦奇才，其他人則可能完全沒有經驗。為了營造公平的遊戲（與學習）環境，我們為課程 D 制定了這個「提升階段」，可用來介紹或重溫怎樣使用 Code.org，並學習基本的電腦科學概念。本階段函蓋全部需要的先決條件，讓學生準備好開始課程 D。",
          "student_overview": "本課堂會讓你練習本課程中需要的技巧。"
        },
        "coursed-2021/Relay Programming": {
          "student_overview": "還記得課程開始時，你使用程式碼繪畫嗎？在本課堂中，你會與一個團隊合作，做一些類似的事情！"
        },
        "coursed-2021/Debugging in Collector": {
          "overview": "在這項線上活動中，學生會在「收藏家」環境中練習除錯。他們會練習閱讀與編輯程式碼，從而使用簡單的演算法、迴圈（loop）與巢狀迴圈（nested loop），修正謎題中的錯誤。",
          "student_overview": "在編寫程式時，你是否遇到過問題？在本課堂中，你會學習除錯的秘密。除錯是找出並解決程式碼問題的流程。"
        },
        "coursed-2021/Events in Bounce": {
          "overview": "在這項線上活動中，學生會學習甚麼是事件（event），以及電腦怎樣在程式（例如電子遊戲）中使用事件。學生會在各種謎題中，讓程式，對事件做出反應（例如按下箭頭按鈕後）。在謎題結束時，學生將有機會以不同的速度與聲音自訂遊戲。",
          "purpose": "在電腦程式設計中，事件是十分常用的方式，尤其是在電子遊戲中。\n\n在本課堂中，學生會製作運動遊戲，以加深瞭解事件。他們會學習使用箭頭鍵讓彈板移動，並在物件互相碰撞時發出聲音。遊戲結束時，他們可自訂遊戲，讓遊戲變得更獨特！",
          "student_overview": "有沒有想過，你可以在學校玩電子遊戲？在本課堂中，你將有機會製作自己的遊戲！"
        },
        "coursed-2021/Build a Star Wars Game": {
          "overview": "在本課堂中，學生會練習使用事件（event）製作遊戲，並可在線上分享。在 R2-D2 和其他星際大戰的角色陪伴下，學生會在引導下學習各種事件，然後自由製作屬於自己的遊戲。",
          "student_overview": "在本課堂中，建立自己的星際大戰遊戲，感受原力的震撼！"
        },
        "coursed-2021/Dance Party": {
          "overview": "在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。",
          "purpose": "本課堂介紹核心的電腦科學概念：編寫程式與事件程式設計（使用積木）。",
          "student_overview": "現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。"
        },
        "coursed-2021/Loops in Ice Age": {
          "overview": "這個舞台是使用迴圈（loop）的快速更新（或簡介），會讓學生使用「repeat」（重複）積木，讓鼠奎特以更有效率的方式拿到橡樹果實。",
          "student_overview": "在本課堂中，你會使用 repeat（重複）積木，協助鼠奎特以最有效率的方式拿到橡樹果實。"
        },
        "coursed-2021/Loops in Artist": {
          "overview": "本課堂以學生先前在課堂中對迴圈（loop）的認識為基礎，讓學生有機會真正發揮創意。這項活動也會做為除錯練習，獲得額外的問題解決機會。",
          "student_overview": "在本課堂中，迴圈（loop）讓你更容易在藝術家中製作酷炫的圖像！"
        },
        "coursed-2021/Nested Loops in Bee": {
          "overview": "在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。",
          "student_overview": "迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。"
        },
        "coursed-2021/Conditionals with Cards": {
          "student_overview": "是時候玩一款遊戲，讓你僅在某些條件下賺到點數！"
        },
        "coursed-2021/lesson-6": {
          "overview": "本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！",
          "student_overview": "躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。"
        },
        "coursed-2021/Conditionals in Bee": {
          "overview": "到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。",
          "student_overview": "你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。"
        },
        "coursed-2021/While Loops in Farmer": {
          "student_overview": "迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！"
        },
        "coursed-2021/Until Loops in Maze": {
          "overview": "在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。",
          "student_overview": "使用 until（直到）迴圈，你就可成就一些精彩的事情！"
        },
        "coursed-2021/End of Course Project": {
          "student_overview": "準備就緒，開始編寫大量程式！是時候開始製作你的專案了。"
        },
        "express-2021/Programming with Angry Birds": {
          "overview": "學生會使用憤怒鳥遊戲中的角色開發序列演算法，讓憤怒鳥能夠從迷宮的一側移動到另一側的豬那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓憤怒鳥向前、向左或是向右移動。",
          "student_overview": "與憤怒鳥一起學習序列與演算法。"
        },
        "express-2021/Debugging with Scrat": {
          "overview": "除錯是學習設計程式的重要元素。在本課堂中，學生會遇到各種謎題，這些謎題曾經以不正確的方式解決。學生需要觀察現有的程式碼找出錯誤，包括不正確的迴圈、遺漏的積木、多餘的積木，以及次序錯誤的積木。",
          "student_overview": "在謎題中尋找問題，並練習你的除錯技巧。"
        },
        "express-2021/Collecting Treasure with Laurel": {
          "overview": "在這組謎題中，學生會繼續增加對演算法和除錯的瞭解。學生會遇到新角色：探除家 Laurel，並製作序列演算法，讓 Laurel 能夠在道路上行走時收集寶藏。"
        },
        "express-2021/Creating Art with Code": {
          "overview": "在本課堂中，學生會控制藝術家完成畫面上的圖畫。這個藝術家舞台可讓學生製作越來越複雜的圖像，期間會使用新的積木，例如「move forward by 100 pixels」（向前移動 100 像素）與「turn right by 90 degrees」（向右旋轉 90 度）等。",
          "purpose": "本課程會以學生先前使用序列的經驗為基礎，激發學生的更多創意編寫程式。本課堂之目的，是介紹新的積木與目標，以鞏固學生對序列的認識。在這種情況下，學生會使用新的積木學習像素與角度的更多知識，同時仍然可練習序列技巧，此外，學生也將能夠把新的目標形象化，例如編寫程式讓藝術家繪畫正方形。",
          "student_overview": "為藝術家設計程式，製作漂亮的圖像。"
        },
        "express-2021/Swimming Fish in Sprite Lab": {
          "overview": "在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。",
          "student_overview": "學習建立與編輯角色（sprite）。"
        },
        "express-2021/Virtual Pet with Sprite Lab": {
          "overview": "在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！",
          "student_overview": "在本課堂中，學生會製作互動的虛擬寵物，並依據學生的喜好設計寵物的外觀與行為。學生會使用 Sprite Lab 的「Costumes」（造型）工具自訂寵物的外表。然後，學生會使用學到的事件、行為與其他概念，讓寵物擁有自己的生命！"
        },
        "express-2021/lesson-1": {
          "overview": "在本課堂中，學生會編寫程式，製作自己的互動舞蹈派對。這項活動需要使用音效，音效工具用來對音樂做出反應。",
          "purpose": "本課堂介紹核心的電腦科學概念：編寫程式與事件程式設計（使用積木）。",
          "student_overview": "現在是時候慶祝一下了！你會在本課堂中編寫程式，製作自己的互動舞蹈派對。"
        },
        "express-2021/Loops with Rey and BB-8": {
          "student_overview": "使用迴圈（loop），幫助 BB-8 完成各個迷宮！"
        },
        "express-2021/Sticker Art with Loops": {
          "overview": "觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。",
          "purpose": "這個系列會以充滿創意的個人設計，強調迴圈的強大力量。\n\n此課程進展是以專案為基礎的系列，讓學生可在自己的作品上學習，並製作出精彩的作品。",
          "student_overview": "在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！"
        },
        "express-2021/Nested Loops in Maze": {
          "overview": "在這項線上活動中，學生將有機會把自己對迴圈（loop）的認識推上另一個新的層次。學生會玩蜜蜂和植物大戰殭屍，同時學習怎樣設計程式，使一個迴圈放進另一個迴圈內。我們也會鼓勵學生瞭解，任一個迴圈的少許變更，可怎樣影響程式在點擊「Run」（執行）後的結果。",
          "student_overview": "迴圈裡的迴圈裡的迴圈 - 這是甚麼意思？本課堂會說明你在建立巢狀迴圈（nested loop）時會發生甚麼事。"
        },
        "express-2021/Snowflakes with Anna and Elsa": {
          "overview": "學生已學懂怎樣把迴圈分層，現在他們可製作許多漂亮的東西。本課堂會把學生帶到一系列的練習中，協助他們運用安娜與艾莎的優秀滑冰技巧，製作適用於自己個人作品的圖像！",
          "purpose": "在這個系列中，學生會練習製作巢狀迴圈（nested loop），同時製作精彩圖像，讓學生迫不及待與他人分享。 \n\n學生在收到一些指示後，便會學生自行決定怎樣製作重複的設計。然後，他們會以多種方式把玩設計，最後製作出獨一無二的藝術作品。",
          "student_overview": "安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！"
        },
        "express-2021/Looking Ahead with Minecraft ": {
          "overview": "本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！",
          "student_overview": "躲開岩漿！你會在 Minecraft 的世界裡開始學習條件式。"
        },
        "express-2021/If/Else with Bee": {
          "overview": "到了這個階段，學生已設計了程式，讓程式每次都使用相同的方法執行。這種做法十分可靠，不過欠缺點彈性。在本課堂中，班級同學將會開始使用條件式（conditional）編寫程式，讓他們編寫出來的程式，可依據程式遇到的特定條件，以不同方式運作。",
          "student_overview": "你已明白甚麼是條件式（conditional）。現在是時候為蜜蜂設計程式，讓蜜蜂在採集蜂蜜與花蜜時使用。"
        },
        "express-2021/While Loops with the Farmer": {
          "student_overview": "迴圈（loop）在程式編寫中非用實用。本課堂會教你其中一種：while（當）迴圈！"
        },
        "express-2021/Conditionals in Minecraft: Voyage Aquatic": {
          "overview": "本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！",
          "student_overview": "你會在 Minecraft 的世界裡學習條件式。"
        },
        "express-2021/Until Loops in Maze": {
          "overview": "在本課堂中，學生會學習「until」（直到）迴圈。學生會製作程式，讓主角重複動作，「直到」主角到達所需的停駐點。",
          "student_overview": "使用 until（直到）迴圈，你就可成就一些精彩的事情！"
        },
        "express-2021/Harvesting with Conditionals": {
          "overview": "學生會練習「while」（當）迴圈、「until」（直到）迴圈與「if/else」（如果/否則）陳述句。這幾種積木都會使用條件式。練習全部積木後，學生便會學習到如何編寫複雜且具靈活性的程式碼。",
          "purpose": "練習在不同情景中使用條件式（conditional），可協助學生更瞭解條件式可用來做甚麼。在前一個課堂中，學生僅使用條件式在迷宮中移動。在本課堂中，學生會使用條件式幫助農夫知道甚麼時候應該收割農作物。新的模式將會出現，學生會以創意與批判思維，判斷需要在裡面執行並重複程式碼的條件式。",
          "student_overview": "我們不會總是清楚瞭解要在甚麼時候使用每項條件式（conditional）。本課堂會幫你練習決定要怎樣做。"
        },
        "express-2021/Functions in Minecraft": {
          "overview": "在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！",
          "student_overview": "你能指出要如何利用函式提高編程效率嗎？"
        },
        "express-2021/Functions with Artist": {
          "overview": "學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。",
          "student_overview": "使用函式，以更簡易的方式繪畫複雜的圖畫！"
        },
        "express-2021/Functions with Harvester": {
          "overview": "學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。",
          "student_overview": "協助農夫收割農作物時，函式（function）可為你省下大量工夫！"
        },
        "express-2021/Variables with Artist": {
          "overview": "在本課堂中，學生會在藝術家環境中，學習怎樣使用變數製作重複的設計。學生會學習變數可怎樣使程式碼更容易編寫和閱讀。在引導式謎題後，學生會在自由探索關卡中結束課堂，然後展示他們學到的內容，以及製作自己的設計。",
          "student_overview": "在本課堂中，你會使用變數來繪畫。在程式執行期間，這些變數都可變更。"
        },
        "express-2021/Changing Variables with Bee": {
          "overview": "本課堂會幫你說明，變數可怎樣使程式更強大：允許在程式碼執時變更各個值。",
          "student_overview": "這隻蜜蜂很喜愛變數！"
        },
        "express-2021/For Loops with Bee": {
          "overview": "本課堂以蜜蜂為角色，集中學習「for」（計數）迴圈並使用遞增變數解決更複雜的謎題。學生首先會重溫先前課堂的迴圈，然後觀看 for 迴圈簡介，讓他們可更有效地解決複雜的問題。",
          "student_overview": "嗡嗡嗡！在這些謎題中，你會以「for」（計數）迴圈引導蜜蜂找出花蜜與蜂蜜！"
        },
        "express-2021/For Loops with Artist": {
          "overview": "在本課堂中，學生會繼續練習「for」（計數）迴圈，這次會使用藝術家進行。學生會完成各種謎題，期間會結合變數、迴圈與「for」迴圈的概念，製作出複雜的設計。最後，他們將有機會在自由探索關卡中創作自己的藝術作品。",
          "student_overview": "準備好製作你的下一份傑作！在這裡，你會使用「for」迴圈繪畫一些讓人大開眼界的圖畫。"
        },
        "express-2021/End of Course Project": {
          "student_overview": "準備就緒，開始編寫大量程式！是時候開始製作你的專案了。"
        },
        "pre-express-2021/Learn to Drag and Drop": {
          "overview": "本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。",
          "purpose": "本課的主要目標是建立學生的電腦經驗。通過涵蓋最基本的電腦功能，如點擊、拖動和下拉，我們在課堂上為未來的難題創造一個更平等的環境。本課還提供了一個很好的機會來介紹基本的電腦硬體術語，取決於你的設備，可能包括 \"游標\"、\"觸控板 \"或 \"觸控螢幕\"。",
          "student_overview": "以點擊與拖放的方式完成謎題。"
        },
        "pre-express-2021/Sequencing with Scrat": {
          "overview": "本課堂會讓學生瞭解在前往電腦室時預期會做甚麼。課堂首先會進行簡短討論，向學生介紹電腦室操守，然後開始使用電腦完成線上謎題。",
          "purpose": "在本課堂中，學生會在電腦平台上加強程式設計與除錯技巧。這些謎題採用積木格式，有助學生學習序列與各種概念，而不用擔心要完善程式語法。",
          "student_overview": "為鼠奎特設計程式，讓他能夠拿到橡樹果實。"
        },
        "pre-express-2021/Programming in with Angry Birds": {
          "overview": "學生會使用冰原歷險記中的角色開發序列演算法，讓鼠奎特能夠從迷宮的一側移動到另一側的橡樹果實那裡。要完成這項操作，學生就需要順序疊起程式碼積木，讓鼠奎特向前、向左或是向右移動。",
          "purpose": "在本課堂中，學生會在電腦平台上加強程式設計與除錯技巧。這些謎題採用積木格式，有助學生學習序列與各種概念，而不用擔心要完善程式語法。"
        },
        "pre-express-2021/Programming with Rey and BB-8": {
          "overview": "在本課堂中，學生會以更複雜的方式運用新的程式設計技巧，與 BB-8 一起完成更巧妙的關卡。",
          "purpose": "本課堂會以傳遞知識為重點，為學生提供全新環境，練習他們一直學習的技巧。星際大戰的粉絲看到這些謎題後，肯定會非常雀躍。這個系列的每個謎題都已加入星際大戰的角色，讓學生更深入瞭解本課程餘下部分將會用到的基本概念。"
        },
        "pre-express-2021/Programming in Harvester": {
          "overview": "學生會把所學到的程式設計概念，應用到收割者遊戲的環境中。現在不僅是讓角色到達終點 - 學生必須使用新的積木收集玉米。他們會繼續建立順序演算法的技巧，並開始運用除錯流程。",
          "student_overview": "幫助收割者在路上收集蔬菜。"
        },
        "pre-express-2021/Loops with Scrat": {
          "purpose": "在本課堂中，學生會學習關於迴圈的更多知識，以及怎樣在 Blockly 程式碼中實作迴圈。使用_迴圈_是在程式設計中很重要的技巧，因為手動重複命令不但乏味，而且效率很低。學生會在這些 Code.org 的謎題中，在現有的迴圈裡加入指令、收集重複的程式碼加入迴圈中，然後識別需要重複的模式。",
          "student_overview": "使用迴圈，幫助鼠奎特更快完成任務。"
        },
        "pre-express-2021/Loops with Laurel": {
          "overview": "在本課堂中，學生會繼續學習迴圈（loop）的概念。在這裡，冒險家 Laurel 會使用迴圈，在開放的洞穴中收集寶藏。這個時候會介紹新的「get treasure」（取得寶藏）積木，協助她完成旅程。"
        },
        "pre-express-2021/Ocean Scene with Loops": {
          "overview": "學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個插電課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，迴圈則用於建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。",
          "purpose": "本課堂會提供不同的視角，說明迴圈可怎樣在程式設計中建立各種東西。學生也可在這裡反思：不使用迴圈設計程式會降低效率，因為沒有「重複」迴圈的幫助，程式便需要增加多少塊積木。",
          "student_overview": "使用迴圈與模式完成圖像。"
        },
        "pre-express-2021/Drawing Gardens with Loops": {
          "overview": "學生會回到迴圈學習：將一系列簡單指令迴圈，從而繪畫圖像。在前一個線上課堂中，迴圈曾用於穿越迷宮並收集寶物。在這裡，學生會使用迴圈建立模式。在這個階段結束時，學生將有機會使用迴圈來製作自己的圖像。",
          "purpose": "本課堂會提供不同的視角，說明迴圈可怎樣在程式設計中建立各種東西。學生會測試自己的批判思維技巧，評估提供的程式碼，並決定需要加入甚麼才可解決謎題。學生也可在這裡反思：不使用迴圈設計程式會降低效率，因為沒有「重複」迴圈的幫助，程式便需要增加多少塊積木。",
          "student_overview": "使用模式與迴圈完成圖像。"
        },
        "pre-express-2021/On the Move with Events": {
          "overview": "在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的故事！",
          "purpose": "今天學生會使用 Play Lab，繼續增加對事件的認識。事件在大部分電腦程式中都十分常見。在這項活動中，學生會使用事件，讓角色依據使用者啟動的事件，在畫面上移動、發出噪音與變更背景。",
          "student_overview": "創作自己的遊戲或故事。"
        },
        "pre-express-2021/A Royal Battle with Events": {
          "overview": "在這項線上活動中，學生會有機會學習如何在 Play Lab 中使用事件，並套用先前學到的所有程式設計技巧，製作出帶動畫的遊戲。是時候發揮創意，在 Play Lab 創造出你的遊戲！",
          "purpose": "在這項線上活動中，學生會學習怎樣在 Play Lab 中使用事件。他們首先會訓練武士，在他們按下箭頭鍵時讓武士移動。活動結束時，他們將有機會展示本課程中所學到的其餘技巧（包括序列與迴圈）做為最後的自由探索謎題。",
          "student_overview": "使用事件製作故事或互動遊戲。"
        },
        "coursee-2021/Simon Says": {
          "overview": "在本課堂中，學生會玩一款遊戲，目的是讓他們思考一下，需要以甚麼方式提供命令，才可獲得正確的結果。這樣就可幫助他們更容易在往後的課堂中過渡到 Sprite Lab。",
          "student_overview": "玩一款遊戲，想想需要使用哪些命令才可獲得正確的結果。"
        },
        "coursee-2021/Learning Sprites with Sprite Lab": {
          "overview": "在本課堂中，學生會學習 Sprite Lab 的 2 大核心概念：角色（sprite）與行為。角色是畫面上的人物或物件，學生可移動、變更或操控角色。行為是讓角色連續進行的動作，直到角色停止。",
          "student_overview": "學習建立與編輯角色（sprite）。"
        },
        "coursee-2021/Alien Dance Party with Sprite Lab": {
          "overview": "本課堂會介紹 Sprite Lab，這是一個工作平台，讓學生可在這裡製作自己的互動式動畫和遊戲。除了「行為」外，學生今天會結合做為「事件」的使用者輸入，以製成「外星人舞蹈派對」。",
          "student_overview": "製作可與同學分享的互動專案。"
        },
        "coursee-2021/Private and Personal Information": {
          "purpose": "Common Sense Education 設立了這個課程，教學生如何在網上安全地到處去。",
          "student_overview": "網際網路刺激有趣，但是也有必要保持安全！本課堂會教你有哪些資訊可安全分享，有哪些資訊則應保持私密。"
        },
        "coursee-2021/About Me": {
          "student_overview": "學生會使用 SpriteLab 製作互動海報，從而應用在網際網路上分享個人與私人資訊的知識。"
        },
        "coursee-2021/Digital Sharing": {
          "student_overview": "在本課堂中，你會學到所有權與著作權方面的挑戰與優點。"
        },
        "coursee-2021/Programming and Loops with the Artist": {
          "overview": "觀看學生怎樣使用少量積木與數位貼紙創作精彩的設計，讓他們歡喜雀躍！本課堂以先前的課堂中對迴圈的認識為基礎，讓學生有機會真正發揮創意。這項活動非常適合用來製作數位作品，或是用於家長/教師會議。",
          "student_overview": "在本課堂中，迴圈（loop）讓你在藝術家中輕鬆製作更酷炫的圖像！"
        },
        "coursee-2021/Nested Loops in Artist": {
          "purpose": "在這個線上活動中，學生會在藝術家遊戲中設計作品，並可自豪地與家人分享。\n\n這項活動之目的，是運用巢狀迴圈（nested loop）做為啟發學生藝術思維的方式，把編寫程式視為另一種表現創意的方式。這組謎題用於發展學生的批判思維技巧、讓學生學習初等幾何學，並啟發學生的創意 - 這些目標全都納入巢狀迴圈的學習範圍中！",
          "student_overview": "更多巢狀迴圈（nested loop）！這一次，你將能夠使用巢狀迴圈製作一些非常漂亮的圖畫！"
        },
        "coursee-2021/Nested Loops in Frozen": {
          "overview": "學生已學懂怎樣把迴圈分層，現在他們可製作許多漂亮的東西。本課堂會把學生帶到一系列的練習中，協助他們運用安娜與艾莎的優秀滑冰技巧，製作適用於自己個人作品的圖像！",
          "student_overview": "安娜與艾莎的滑冰技術非常出眾，但是需要你的協助，在冰上建立模式。請使用巢狀迴圈（nested loop）製作非常酷炫的效果！"
        },
        "coursee-2021/Functions: Songwriting": {
          "overview": "在電腦科學世界中，函式（function）可以說是最壯觀的結構之一。函式有時候稱為程序，是在龐大的程式中的一些迷你程式，可以不斷重複利用。本課堂將會幫助學生直觀的瞭解，為甚麼把這麼多零碎的程式碼組合成函式是非常有用的做法。  ",
          "purpose": "使用函式有助簡化程式碼，並加強學生組織自己程式的能力。學生很快便會明白，編寫函式可讓內容更長的程式更容易閱讀，而且在出錯時更容易除錯。",
          "student_overview": "即使是搖滾巨星也需要程式設計技巧。本課堂會用歌曲裡的歌詞教授函式。"
        },
        "coursee-2021/Functions in Minecraft": {
          "overview": "在這個有趣的互動式 Minecraft 冒險之旅中，學生會開始瞭解函式為何這麼實用！",
          "student_overview": "你能指出要如何利用函式提高編程效率嗎？"
        },
        "coursee-2021/Functions in Artist": {
          "overview": "學生會在藝術家遊戲中學習使用函式（function）。他們會製作並修改精美的圖像。如需要製作更複雜的圖案，學生便會學習巢狀（nesting）函式，方法是呼叫一個函式裡的另一個函式。",
          "student_overview": "使用函式，以更簡易的方式繪畫複雜的圖畫！"
        },
        "coursee-2021/Conditionals in Minecraft: Voyage Aquatic": {
          "overview": "本課堂原本為一小時玩程式活動而和 Minecraft 團隊一起建立。學生將有機會練習到目前為止學到的構想，並搶先學習條件式（conditional）！",
          "student_overview": "你會在 Minecraft 的世界裡學習條件式。"
        },
        "coursee-2021/Conditionals": {
          "overview": "本課堂會向學生介紹「while」（當）迴圈與「if / else」（如果/否則）陳述句。_While 迴圈_ 用於在條件是 true 時繼續重複命令。While 迴圈的使用情況是：程式設計師不知道命令確實需要重複多少次，但是知道哪項條件需要為 true，才可讓迴圈繼續重複。「If / Else」陳述句為程式設計提供彈性，程式僅會在某個項目為 true 時執行整個部分，否則便會執行其他項目。",
          "student_overview": "在這個有趣而具挑戰的遊戲系列中，你會告訴電腦在某些特定條件下如何行動。"
        },
        "coursee-2021/Functions in Harvester": {
          "overview": "學生已練習在藝術家遊戲中製作精彩的設計，並在蜜蜂遊戲中遊走，但他們今天會使用函式（function），在收割者遊戲中收割農作物。本課堂會鼓勵學生以新的方式使用函式：把函式和「while」（當）迴圈與「if/else」（如果/否則）陳述句結合起來。",
          "student_overview": "協助農夫收割農作物時，函式（function）可為你省下大量工夫！"
        },
        "coursee-2021/lesson-1": {
          "overview": "在本課堂中，學生會瞭解無障礙使用與同理心的價值所在，途徑為一起思考並設計無障礙解決方案，用於假想的應用程式中。"
        },
        "coursee-2021/End of Course Project": {
          "overview": "接下來的 4 個課堂讓學生有機會把自己的程寫編寫技巧，用於製作一份總結專案。這個專案可幫助學生累積程式編寫經驗，並製作範例專案與同伴和摯愛分享。這是多個課堂或多個星期的體驗，學生會花時間一起思考、學習設計流程、製作並展示自己的最終作品。\\\\r\n\\\\r\n在探索階段中，學生將會試玩預先製作完成的藝術家與 Sprite Lab 專案範例，從而獲取靈感。然後，學生將會學習設計流程，以及怎樣將設計加入自己的專案中。之後，學生會有自由創作空間，在藝術家、Sprite Lab 或其他他們熟悉的介面中製作自己的專案（這可能是專案中最長的階段）。最後，學生將能夠向同伴展示自己的成品。",
          "student_overview": "這麼大型的專案需要時間與充分計畫。找出靈感、制訂計畫，激發你的創意！"
        },
        "csd7-2021/Similarity Models": {
          "overview": "在本課中，學生參與一個線下活動，模擬僵屍疫情爆發。學生必須利用鄰近城鎮的數據來預測城鎮的哪一部分擁有最少的僵屍。學生們將使用相似度和平均值來預測某一特定地點的僵屍數量。然後，學生得到拯救，並將他們的預測與實際數字進行比較，以討論數字數據與分類數據的準確性有何不同。\n\n**今日問題。**電腦如何學習用數字資料進行預測？"
        },
        "csd6-2021/The Circuit Playground": {
          "overview": "在本課堂中，學生會有第一次機會編寫運用 Circuit Playground 的程式。學生首先會目視檢查電路板，並假設有哪些可能的功能，然後便會移至線上，學習編寫可控制 LED 的應用程式。把 App Lab 畫面與 Circuit Playground 結合後，學生就可逐漸開始整合電路板（輸出裝置）上的各種元素，同時依賴 App Lab 供使用者輸入。"
        },
        "csd6-2021/Input Unplugged": {
          "overview": "為了準備更深入探討使用 App Lab 設計程式，學生會學習在 Game Lab 與 App Lab 中編寫的幾種不同程式，會怎樣處理使用者的輸入。比較範例應用程式中看到的不同方法後，學生會分組練習兩種不同的輸入模型（無限迴圈與非同步事件中的條件式），從而加深瞭解它們的工作方式。"
        },
        "csd6-2021/Analog Input": {
          "overview": "在本課堂中，學生會學習 3 個類比感測器（聲音、燈光與溫度）可怎樣用來編寫程式，回應環境中的變更。使用這些感測器，就標誌著使用者與程式互動的轉變。應用程式的使用者以感測器做為輸入，就不用直接與程式互動，或是在互動時不用實際瞭解裡面正在做些甚麼。"
        },
        "csd6-2021/The Program Design Process": {
          "overview": "本課堂會向學生介紹相關流程，他們將會在整個單元中，使用這個流程設計自己的程式。這項流程會以一個專案指南為中心，指南中會要求學生繪製畫面草圖、找出要使用的 Circuit Playground 元件、定義變數與描述事件，然後才開始設計程式。這項流程與單元 3 中使用的遊戲設計流程。在本課堂中，學生首先會玩一款拔河風格的遊戲，遊戲期間程式碼會被隱藏。學生會展開討論，指出他們認為需使用哪些電路板元件、事件與變數製作這款程式。學生會收到完整的專案指南，裡面會說明實作專案的一種方式。然後，學生會在不同的關卡中瞭解這項流程。在課堂結束時，學生將有機會改良程式，使之成為自己的作品。"
        },
        "csd6-2021/Arrays and Color LEDs": {
          "overview": "陣列是項目的有序的集合，通常含有相同的項目類型。在本課堂中，學生會學習各種方式，使用其索引存取清單中指定或隨機的值。然後，學生會學習怎樣存取 colorLEDs 陣列，以控制 Circuit Playground 上的彩色 LED 行為。學生會控制 LED 的顏色與強度，然後使用所學到的知識編寫燈光模式程式，從而在 Circuit Playground 上進行燈光表演。"
        },
        "csd6-2021/Arrays and For Loops": {
          "overview": "使用 _for（計數）迴圈_來重複迭代陣列中的所有元素，在所有程式語言中都是非常實用的建構。在本課堂中，學生會學習 for（計數）如何用於重複程式碼的基礎，然後將它結合到所學到的陣列知識中，編寫程式處理陣列中的所有元素。學生會使用 for 迴圈，每次執行清單上的每個元素，而不用為每個元素編寫程式碼。課堂結束時，學生會把這項知識與「colorLed」清單應用到電路板上，以製作一款應用程式，讓使用者每次點擊一個按鈕後，便能變更所有 LED。"
        },
        "csd6-2021/Accelerometer": {
          "overview": "在本課堂中，學生會學習加速計和它的功能。他們會熟習事件與屬性，並製作多個利用加速計的程式，這些程式和現實世界中可能遇到過的程式相似。"
        },
        "csd6-2021/Functions with Parameters": {
          "overview": "課堂開始時，學生首先會快速檢閱參數，期間會使用最近看過的 App Lab 積木。然後，學生會參閱一些參數範例（這些參數在 App Lab 裡由使用者建立的函式中）、為自己建立與呼叫函式，並以此控制畫面上的多種元素。之後，學生會使用 for（計數）迴圈讓一個陣列迭代，將每項元素傳入一個函式中。最後，學生會運用所學到的知識製作摘星遊戲。"
        },
        "csd6-2021/Circuits and Physical Prototypes": {
          "overview": "為了準備這一章的期末專案，學生會學習怎樣開發包含 Circuit Playground 的實物原型。學生會使用範例專案計畫指南，學習怎樣編寫一些簡單電路和製作原型，從而可使用便宜且容易找到的材料（例如紙板與膠帶）展現出預期產品的設計。"
        },
        "csd6-2021/Project: Prototype an Innovation": {
          "overview": "在課程的這個期末專案中，學生會以團隊方式開發並測試一款創新運算裝置的原型，這個原型以 Circuit Playground 為基礎。各小組會使用電路板上可用的輸入與輸出來製作程式，讓程式可與使用者進行有趣且獨一無二的互動。"
        },
        "csd3-2021/Variables": {
          "overview": "In this lesson students learn how to use variables to label a number in their program or save a randomly generated value. Students begin the lesson with a very basic description of the purpose of a variable. Students then complete a level progression that reinforces the model of a variable as a way to label or name a number. Students use variables to save a random number to see that variables actually store or save their values, allowing them to use the same random number multiple times in their programs."
        }
      }
    }
  }
}