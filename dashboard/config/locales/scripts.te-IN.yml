---
te:
  data:
    script:
      category:
        hoc_category_name: అవర్ ఆఫ్ కోడ్
      name:
        events:
          title: ఈవెంట్లు
          description: ఈవెంట్లు
          description_short: ఈవెంట్లు
          student_description: ఈవెంట్లు
        gradeKinder:
          lessons:
            Events:
              name: ఈవెంట్లు
        grade1:
          lessons:
            Events:
              name: ఈవెంట్లు
        k5concepts:
          lessons:
            Events:
              name: ఈవెంట్లు
        dance:
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        dance--draft:
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        dance-draft:
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        dance-low:
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        coursed-2019:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        express-2019:
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        coursec-2019:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        coursea-2019:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        courseb-2019:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        pre-express-2019:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        csl-vn:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        dance-2019:
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        k5-onlinepd-2019:
          lessons:
            Events:
              name: ఈవెంట్లు
        time4cs-control-unit-1:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        time4cs-experiment-unit-1:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        coursea-2020:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        courseb-2020:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        coursec-2020:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        coursed-2020:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        express-2020:
          lessons:
            Dance Party:
              name: డాన్స్ పార్టీ
        pre-express-2020:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        code-break:
          lessons:
            Events:
              name: ఈవెంట్లు
        k5-onlinepd-2020:
          lessons:
            Events:
              name: ఈవెంట్లు
        coursea-2021:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        courseb-2021:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        coursec-2021:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        coursed-2021:
          lessons:
            Dance Party:
              key: డాన్స్ పార్టీ
              name: డాన్స్ పార్టీ
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        express-2021:
          lessons:
            Dance Party:
              key: డాన్స్ పార్టీ
              name: డాన్స్ పార్టీ
            lesson-1:
              name: డాన్స్ పార్టీ
          lesson_groups:
            lessonGroup-9:
              display_name: ఈవెంట్లు
        pre-express-2021:
          lesson_groups:
            csf_events:
              display_name: ఈవెంట్లు
        testtess:
          lessons:
            lesson-2:
              name: కొత్త పాఠం 1
        csa6-pilot:
          lessons:
            lesson-1:
              description_student: కోర్సు మొత్తంలో మీరు అభివృద్ధి చేసిన ప్రాజెక్టులు
                కమ్యూనిటీలో చాలా సృజనాత్మకతను ప్రేరేపించాయి! సృజనాత్మక స్టోరీలు, స్క్రిప్ట్‌లు,
                పాట సాహిత్యాలు, ఉత్తరాలు మరియు కవితలు ప్రదర్శించడానికి ఒక నైబర్‌హుడ్
                లిట్ ఫెస్ట్ నిర్వహించబడుతుంది. నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు ఒక
                పెద్ద ప్రాజెక్టు, ఇందులో మీరు యూనిట్ అంతా పనిచేస్తారు మరియు మీ పనిని
                వ్యవస్థీకరించడానికి మరియు నిర్మించడానికి ప్రాజెక్టు నిర్వహణ వ్యూహాలు
                సహాయపడతాయి. ఇతర సాఫ్ట్‌వేర్ ఇంజనీర్లు సులభంగా ఒక Java టూల్‌ను అర్థం
                చేసుకోవడానికి మరియు ప్రోగ్రామ్ డాక్యుమెంటేషన్ సృష్టించడానికి ఉపయోగించడానికి
                వీలుగా కోడ్ రాయడానికి మరియు నిర్మించడానికి మీరు వ్యూహాలను అన్వేషిస్తారు.
              description_teacher: నైబర్‌హుడ్ లిట్ ఫెస్ట్ మరియు ఆవశ్యకాలను మూల్యాంకనం
                చేయడం మరియు ప్రశ్నలు మరియు ముఖ్య ఫీచర్లను గుర్తించడానికి ఉదాహరణలు
                విద్యార్థులకు పరిచయం చేయబడ్డాయి. ప్రాజెక్టుపై పని ప్రారంభించడానికి
                ముందు, ప్రోగ్రామ్ నిర్మాణం మరియు అత్యుత్తమ ఆచరణలను గుర్తించడం ద్వారా
                కామెంట్ చేయడం మరియు ప్రోగ్రామ్ డాక్యుమెంటేషన్ జనరేట్ చేయడానికి Javadocs
                ఉపయోగించడాన్ని అన్వేషించడం గురించి విద్యార్థులు తమ అవగాహనను విస్తరించుకుంటారు.
            lesson-2:
              description_student: రెఫరెన్సు వ్యాల్యూస్‌గా `Integer` మరియు `Double`
                ప్రిమిటివ్ వ్యాల్యూస్ రెప్రజంట్ చేయడానికి మీరు `Integer` మరియు `Double`
                ఆబ్జెక్ట్స్ రూపొందిస్తారు. `Integer` మరియు `Double` క్లాసులను ఉపయోగించి,
                ప్రిమిటివ్ వ్యాల్యూస్‌గా ఈ వ్యాల్యూస్ స్టోర్ చేసిన వ్యాల్యూస్‌ను మీరు
                రిటర్న్ చేస్తారు. మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు కోసం మీకు అవసరమైన
                టాస్క్‌‌లు ప్లాన్ చేయడానికి ముందు, తప్పిదాలు ఓవర్‌ఫ్లో కాకుండా చూడటానికి
                పూర్ణ సంఖ్యల కోసం కనిష్ట మరియు గరిష్ట వ్యాల్యూస్‌ను కూడా మీరు అన్వేషిస్తారు.
              description_teacher: రెఫరెన్సు వ్యాల్యూస్‌గా `Integer` మరియు `Double`
                ప్రిమిటివ్ వ్యాల్యూస్ రెప్రజంట్ చేయడానికి విద్యార్థులు `Integer` మరియు
                `Double` ఆబ్జెక్ట్స్ రూపొందిస్తారు. `Integer` మరియు `Double` క్లాసులను
                ఉపయోగించి, ప్రిమిటివ్ వ్యాల్యూస్‌గా ఈ వ్యాల్యూస్ స్టోర్ చేసిన వ్యాల్యూస్‌ను
                విద్యార్థులు రిటర్న్ చేస్తారు. వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు
                కోసం వారికి అవసరమైన టాస్క్‌‌లు ప్లాన్ చేయడానికి ముందు, తప్పిదాలు ఓవర్‌ఫ్లో
                కాకుండా చూడటానికి పూర్ణ సంఖ్యల కోసం కనిష్ట మరియు గరిష్ట వ్యాల్యూస్‌ను
                కూడా విద్యార్థులు అన్వేషిస్తారు.
            lesson-3:
              description_student: ఆరేస్ మరియు లిస్ట్‌లతో పని చేసేటప్పడు, ఎలిమెంట్‌ల
                సంఖ్య తెలియని చోట మరియు లిస్ట్‌ల సైజు నిరంతరం మారుతూ ఉన్నప్పుడు కొన్నిసార్లు
                మనం సమస్యలను ఎదుర్కొంటాము. ఈ పాఠంలో, \`ArrayList’ల గురించి నేర్చుకుంటారు
                మరియు ఈ డేటా నిర్మాణం మరింత అనుకూలంగా ఉన్న దృశ్యాలను గుర్తిస్తారు.
              description_teacher: విద్యార్థులు `int` మరియు `double` వ్యాల్యూస్ స్టోర్
                చేయడానికి `ArrayList` లను సృష్టిస్తారు. ఒక దృష్టాంతరానికి ఏ డేటా నిర్మాణం
                అత్యుత్తమంగా సరిపోతుందో నిర్ధారించడానికి విద్యార్థులు `ArrayList`
                మరియు ఒన్-డైమెన్షనల్  ఆరేస్ మధ్య తేడా కనుగొంటారు. విద్యార్థులు ఒక
                `ArrayList` కు ఎలిమెంట్స్ జోడిస్తారు మరియు స్టోర్ చేసిన డేటాతో పనిచేసేటప్పుడు
                ప్రిమిటివ్ వ్యాల్యూస్ మరియు రాపర్ క్లాసెస్ మధ్య ఆటోబాక్సింగ్ ఎలా మార్చుతుందో
                నేర్చుకుంటారు.
            lesson-4:
              description_student: మీరు ఎలిమెంట్స్‌ను తిరిగి పొందడానికి మరియు  సవరించడానికి
                `ArrayList` పద్ధతులు `get()` మరియు `set()` ఉపయోగిస్తారు మరియు ఒక `String`
                ఆబ్జెక్ట్‌లో ఉన్న అక్షరాల సంఖ్యను లెక్కించడానికి `String` పద్ధతి `length()`
                నేర్చుకుంటారు. ఒక `ArrayList` లోని ఎలిమెంట్స్‌ను సవరించడానికి మీరు
                1D మరియు 2D ఆరేస్‌తో అభివృద్ధిపరచిన ప్రామాణిక అల్గోరిథమ్స్‌ను మీరు
                వర్తింపజేస్తారు. ఒక `ArrayList` లో స్టోర్ చేయబడిన డేటాతో పనిచేసేటప్పడు
                అన్‌బాక్సింగ్ ఎలా ప్రిమిటివ్ వ్యాల్యూస్ మరియు రాపర్ క్లాసెస్ మధ్య
                మార్పులను చేస్తుందో మీరు నేర్చుకుంటారు.
              description_teacher: 'విద్యార్థులు ఒక `ArrayList` లోని ఎలిమెంట్స్‌ను
                తిరిగి పొందడానికి మరియు  సవరించడానికి `get()` మరియు `set()` పద్ధతులతో
                పని చేస్తారు మరియు ఒక `String` ఆబ్జెక్ట్‌లో ఉన్న అక్షరాల సంఖ్యను రిటర్న్
                చేయడాని `String` పద్ధతి `length()` నేర్చుకుంటారు. ఒక `ArrayList` లోని
                ఎలిమెంట్స్‌ను సవరించడానికి వారు 1D మరియు 2D ఆరేస్‌తో అభివృద్ధిపరచిన
                ప్రామాణిక అల్గోరిథమ్స్‌ను వారు వర్తింపజేస్తారు. ఒక `ArrayList` లో
                స్టోర్ చేయబడిన డేటాతో పనిచేసేటప్పడు అన్‌బాక్సింగ్ ఎలా ప్రిమిటివ్ వ్యాల్యూస్
                మరియు రాపర్ క్లాసెస్ మధ్య మార్పులను చేస్తుందో విద్యార్థులు నేర్చుకుంటారు. '
            lesson-5:
              description_student: ఇంతవరకు, మీరు `Integer`లు, `Double`లు మరియు `String`లు
                స్టోర్ చేయడానికి ’`ArrayList`లు సృష్టించారు. 1D మరియు  2D ఆరేస్‌లో
                లాగే, మీరు సృష్టించిన ఆబ్జెక్ట్‌లను ఒక `ArrayList`లో స్టోర్ కూడా చేయవచ్చు.
                ఈ పాఠంలో, ఈ లిస్ట్‌లో స్టోర్ చేసిన డేటాతో పనిచేయడానికి ఈ సంవత్సరమంతా
                మీరు ఉపయోగించిన ప్రామాణిక అల్గోరిధమ్స్ వర్తింపజేయడానికి మీరు `ArrayList`
                సృష్టించారు.
              description_teacher: విద్యార్థులు ఆబ్జెక్ట్‌లు స్టోర్ చేయడానికి `ArrayList`లు
                సృష్టిస్తారు మరియు Java లో జనరిక్ రకాలను గురించి నేర్చుకుంటారు. కనిష్ట
                మరియు గరిష్ట వ్యాల్యూస్ కనుగొనడానికి, మొత్తాలు మరియు సగటులు లెక్కించడానికి
                లేదా నిర్దిష్ట క్రైటీరియాకు సరిపోయే ఎలిమెంట్స్ కనుగొనడానికి తాము ఒన్-డైమెన్షనల్
                ఆరేస్ అరేస్‌తో నేర్చుకున్న అల్గోరిథమ్స్‌ను ’`ArrayList`లకు వర్తింపజేస్తారు.
            lesson-6:
              description_student: మీరు`ArrayList` క్లాస్‌లో `remove()` పద్ధతి యొక్క
                ఫంక్షనాలిటీని అన్వేషిస్తారు మరియు లిస్ట్ గుండా వెళ్తున్నప్పుడు అంశాలను
                తీసివేయడానికి ప్రయత్నిస్తున్నప్పుడు సంభావ్య తప్పిదాలను గుర్తిస్తారు.
                ఈ ప్రక్రియలో, ఒక దృష్టాంతానికి లేదా సమస్యకు ఒక `ArrayList` అత్యుత్తమంగా
                ఎప్పుడు ఉంటుందో మీరు తెలుసుకుంటారు.
              description_teacher: విద్యార్థులు `ArrayList` క్లాస్‌లో `remove()` పద్ధతి
                యొక్క ఫంక్షనాలిటీని అన్వేషిస్తారు మరియు లిస్ట్ గుండా వెళ్తున్నప్పుడు
                అంశాలను తీసివేయడానికి ప్రయత్నిస్తున్నప్పుడు సంభావ్య తప్పిదాలను గుర్తిస్తారు.
                తర్వాత, ఒక దృష్టాంతానికి లేదా సమస్యకు ఒక ’ఆరేలిస్ట్`ArrayList` అత్యుత్తమంగా
                ఎప్పుడు ఉంటుందో విద్యార్థులు తెలుసుకుంటారు.
            lesson-7:
              description_student: మీరు `String` నిర్మాణాన్ని అన్వేషిస్తారు మరియు
                `String`లు అంటే ఆబ్జెక్ట్‌లు అని గుర్తు చేసుకుంటారు. మీరు ఒక `String`
                లోపల సబ్‌స్ట్రింగ్‌లు వెతకడానికి మరియు ఉన్న`String` నుండి `String`
                ఆబ్జెక్ట్‌లు సృష్టించడానికి `indexOf()` మరియు `substring()` పద్ధతులు
                ఉపయోగిస్తారు.
              description_teacher: విద్యార్థులు `String` నిర్మాణాన్ని అన్వేషిస్తారు
                మరియు `String`లు అంటే ఆబ్జెక్ట్‌లు అని గుర్తు చేసుకుంటారు. విద్యార్థులు
                ఒక ’String`లోపల సబ్‌స్ట్రింగ్‌లు వెతకడానికి మరియు ఉన్న String` నుండి”String`ఆబ్జెక్ట్‌లు
                సృష్టించడానికి`indexOf()`మరియు`substring()\` పద్ధతులు ఉపయోగిస్తారు.
            lesson-8:
              description_student: "`String`లు అక్షరమాల క్రమంలో ఉన్నాయా అని తనిఖీ
                చేయడానికి మీరు `compareTo()` ఉపయోగించి అన్వేషిస్తారు. తర్వాత మీ ప్రాజెక్టు
                ప్లానింగ్ బోర్డులో ఉన్న టాస్క్‌‌లపై ప్రత్యేకంగా దృష్టిపెడుతూ, మీరు
                మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టుపై పని చేస్తారు."
              description_teacher: "`String`లు అక్షరమాల క్రమంలో ఉన్నాయా అని తనిఖీ
                చేయడానికి విద్యార్థులు `compareTo()` ఉపయోగించి అన్వేషిస్తారు. తర్వాత
                వారి ప్రాజెక్టు ప్లానింగ్ బోర్డులో ఉన్న టాస్క్‌‌లపై ప్రత్యేకంగా దృష్టిపెడుతూ,
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టుపై పని చేస్తారు."
            lesson-9:
              description_student: 'ఒక `String` పాలిండ్రోమ్ అవునా కాదా అని తనిఖీ చేయడానికి
                మీరు ప్రామాణిక అల్గోరిథమ్స్ గురించి  మీ ఙ్ఞానాన్ని మరియు `String`లను
                జోడిస్తారు. తర్వాత మీరు ఒక పీర్ ఫీడ్‌బ్యాక్ సెషన్‌లో పాల్గొంటారు మరియు
                మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో మీ పురోగతిని ప్రతిబింబిస్తారు. '
              description_teacher: ఒక `String` పాలిండ్రోమ్ అవునా కాదా అని తనిఖీ చేయడానికి
                విద్యార్థులు ప్రామాణిక అల్గోరిథమ్స్ గురించి  వారి ఙ్ఞానాన్ని మరియు
                `String`లను జోడిస్తారు. తర్వాత విద్యార్థులు ఒక పీర్ ఫీడ్‌బ్యాక్ సెషన్‌లో
                పాల్గొంటారు మరియు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో వారి పురోగతిని
                ప్రతిబింబిస్తారు.
            lesson-10:
              description_student: మీరు1D మరియు 2D ఆరేస్ కోసం రాసిన ప్రామాణిక అల్గోరిథమ్స్‌ను  `ArrayList`లకు
                వర్తింపజేస్తారు.  ఎలిమెంట్‌లు మార్పిడి చేయడానికి, డూప్లికేట్స్ తీసివేయడానికి
                లేదా మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో నిర్దిష్ట క్రైటీరియను
                పూర్తి చేయడానికి ఎలిమెంట్‌లు కనుగొనడానికి ముందటి అల్గోరిథమ్స్ సవరించడానికి
                మరియు వర్తింపజేయడానికి ముందు ఒక పూర్ణ సంఖ్య నుండి వ్యక్తిగత అంకెలు
                పొందడానికి మీరు ఒక కొత్త ప్రమాణం అల్గోరిథమ్ అమలు చేస్తారు.
              description_teacher: విద్యార్థులు 1D మరియు 2D ఆరేస్ కోసం వారు రాసిన
                ప్రామాణిక అల్గోరిథమ్స్‌ను  `ArrayList`లకు వర్తింపజేస్తారు.  ఎలిమెంట్‌లు
                మార్పిడి చేయడానికి, డూప్లికేట్స్ తీసివేయడానికి లేదా వారి నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టులో నిర్దిష్ట క్రైటీరియను పూర్తి చేయడానికి ఎలిమెంట్‌లు
                కనుగొనడానికి ముందటి అల్గోరిథమ్స్ సవరించడానికి మరియు వర్తింపజేయడానికి
                ముందు ఒక పూర్ణ సంఖ్య నుండి వ్యక్తిగత అంకెలు పొందడానికి విద్యార్థులు
                ఒక కొత్త ప్రమాణం అల్గోరిథమ్ అమలు చేస్తారు.
            lesson-11:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 1
              description_student: ఒక స్టోరీ, కవిత్వం, పాట లేదా మీకు ఇష్టమైన రచయిత
                లేదా కళాకారుడి పని యొక్క విశ్లేషణపై ఆధారపడి మరో రకం సాహిత్యం సృష్టించడానికి
                మీరు మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు అభివృద్ధి చేయడం కొనసాగిస్తారు.
                ప్రాజెక్టు అవశ్యకాలను పూర్తి చేయడంలో మీ పురోగతిని మూల్యాంకనం చేయడానికి
                మొదట మీరు మీ పనిని స్వీయ-మదింపు చేస్తారు, తర్వాత ఒక సమవయస్కుడు పరీక్షించబోయే,
                మీ ప్రాజెక్టులోని ఒక ఫీచర్ కోసం అంగీకార క్రైటీరీయా రాస్తారు. మీ మిగిలిన
                టాస్క్‌‌లకు ప్రాధాన్యత ఇవ్వడానికి మీరు స్వీయ-మదింపు మరియు పీర్-ఫీడ్‌బ్యాక్
                ఉపయోగిస్తారు మరియు మీ ప్రాజెక్టు అభివృద్ధిపరచడం కొనసాగిస్తారు.
              description_teacher: ఒక స్టోరీ, కవిత్వం, పాట లేదా మీకు ఇష్టమైన రచయిత
                లేదా కళాకారుడి పని యొక్క విశ్లేషణపై ఆధారపడి మరో రకం సాహిత్యం సృష్టించడానికి
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు అభివృద్ధి చేయడం
                కొనసాగిస్తారు. ప్రాజెక్టు అవశ్యకాలను పూర్తి చేయడంలో వారి పురోగతిని
                మూల్యాంకనం చేయడానికి మొదట విద్యార్థులు వారి పనిని స్వీయ-మదింపు చేస్తారు,
                తర్వాత ఒక సమవయస్కుడు పరీక్షించబోయే, వారి ప్రాజెక్టులోని ఒక ఫీచర్ కోసం
                అంగీకార క్రైటీరీయా రాస్తారు. వారి మిగిలిన టాస్క్‌‌లకు ప్రాధాన్యత ఇవ్వడానికి
                విద్యార్థులు స్వీయ-మదింపు మరియు పీర్-ఫీడ్‌బ్యాక్ ఉపయోగిస్తారు మరియు
                వారి ప్రాజెక్టులను అభివృద్ధిపరచడం కొనసాగిస్తారు.
            lesson-12:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 2
              description_student: ముందటి పాఠంలో, మీరు ఒక స్వీయ-మదింపు నిర్వహించారు
                మరియు మీ ప్రాజెక్టు కోసం అంగీకార క్రైటీరియా రాశారు. ఈ పాఠంలో, పూర్తి
                చేయవలసిన మిగిన టాస్క్‌‌లను గుర్తించడానికి మరియు మీ నైబర్‌హుడ్ లిట్
                ఫెస్ట్ ప్రాజెక్టు అభివృద్ధిపరచడం కొనసాగించడానికి మీరు పీర్-ఫీడ్‌బ్యాక్
                తీసుకుంటారు.
              description_teacher: ముందటి పాఠంలో, విద్యార్థులు ఒక స్వీయ-మదింపులు నిర్వహించారు
                మరియు వారి ప్రాజెక్టు కోసం అంగీకార క్రైటీరియా రాశారు. ఈ పాఠంలో, విద్యార్థులు
                పూర్తి చేయవలసిన మిగిన టాస్క్‌‌లను గుర్తించడానికి మరియు మీ నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టులు అభివృద్ధిపరచడం కొనసాగించడానికి పీర్-ఫీడ్‌బ్యాక్
                తీసుకుంటారు.
            lesson-13:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 3
              description_student: మీ కోడ్ విశ్లేషణలు మరియు ప్రాజెక్టు ప్లానింగ్ బోర్డుపై
                ఆధారపడి మీరు అంతిమ సవరణలు మరియు అప్‌డేట్స్ చేస్తారు. మీరు మీ నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టును మీ సమవయస్కులతో పంచుకుంటారు. తర్వాత మీరు మీ
                విజయాన్ని సెలెబ్రేట్ చేసుకుంటారు మరియు అభివృద్ధి ప్రక్రియ యొక్క అంతిమ
                రెప్లెక్షన్ పూర్తి చేస్తారు.
              description_teacher: విద్యార్థులు వారి కోడ్ విశ్లేషణలు మరియు ప్రాజెక్టు
                ప్లానింగ్ బోర్డుపై ఆధారపడి అంతిమ సవరణలు మరియు అప్‌డేట్స్ చేస్తారు.
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులను వారి సమవయస్కులతో
                పంచుకుంటారు. తర్వాత విద్యార్థులు వారి విజయాన్ని సెలెబ్రేట్ చేసుకుంటారు
                మరియు అభివృద్ధి ప్రక్రియ యొక్క అంతిమ రెప్లెక్షన్ పూర్తి చేస్తారు.
            lesson-15:
              description_student: ఈ యూనిట్‌లో, ప్రోగ్రామ్ డేటా స్టోర్ చేయడానికి మరియు
                1D మరియు 2D ఆరేస్ మరియు `ArrayList`ల మధ్య ఎప్పుడు ఉపయోగించాలో తేడా
                తెలుసుకోవడానికి మీరు `ArrayList`లను ఉపయోగించారు. సంఖ్యాపరమైన మరియు
                ఆబ్జెక్ట్ డేటాతో సంబంధం ఉన్న సమస్యలను పరిష్కరించడానికి `ArrayList`
                ఉపయోగిస్తూ, వీటి ప్రయోజనాలు మరియు ఫంక్షనాలిటీని మీరు అన్వేషించారు.
                యూజర్ మరియు ఫైల్ ఇన్‌పుట్ నుండి తీసుకున్న టెక్స్ట్‌ను విశ్లేషించడానికి
                మరియు ప్రాసెస్ చేయడానికి మీరు `String` క్లాసులోని పద్ధతులు ఉపయోగించారు.
                ఈ యూనిట్ అంతటా, API డాక్యుమెంటేషన సృష్టించడానికి సింగల్-లైన్ కామెంట్లు,
                మల్టీ-లైన్ కామెంట్లు మరియు Javadoc కామెంట్లు ఉపయోగించి మీరు ప్రోగ్రామ్
                డాక్యుమెంటేషన్ రాశారు. ఈ ప్రక్రియలో, ఆబ్జెక్ట్‌లు మరియు పద్దతుల ప్రీకండిషన్స్
                మరియు పోస్ట్‌కండిషన్స్‌ను మీరు గుర్తించారు మరియు డాక్యుమెంట్ చేశారు.
                ఇప్పుడు, మల్టిపుల్-ఛాయిస్ మదింపుపై యూనిట్ లెర్నింగ్ లక్ష్యాలను సాధించడాన్ని
                మీరు మూల్యాంకనం చేస్తారు.
              description_teacher: ఈ యూనిట్‌లో, ప్రోగ్రామ్ డేటా స్టోర్ చేయడానికి మరియు
                1D మరియు 2D ఆరేస్ మరియు `ArrayList`ల మధ్య ఎప్పుడు ఉపయోగించాలో తేడా
                తెలుసుకోవడానికి విద్యార్థులు `ArrayList`లను ఉపయోగించారు. సంఖ్యాపరమైన
                మరియు ఆబ్జెక్ట్ డేటాతో సంబంధం ఉన్న సమస్యలను పరిష్కరించడానికి `ArrayList`
                ఉపయోగిస్తూ, వీటి ప్రయోజనాలు మరియు ఫంక్షనాలిటీని విద్యార్థులు అన్వేషించారు.
                యూజర్ మరియు ఫైల్ ఇన్‌పుట్ నుండి తీసుకున్న టెక్స్ట్‌ను విశ్లేషించడానికి
                మరియు ప్రాసెస్ చేయడానికి విద్యార్థులు `String` క్లాసులోని పద్ధతులు
                ఉపయోగించారు. ఈ యూనిట్ అంతటా, API డాక్యుమెంటేషన సృష్టించడానికి సింగల్-లైన్
                కామెంట్లు, మల్టీ-లైన్ కామెంట్లు మరియు Javadoc కామెంట్లు ఉపయోగించి
                విద్యార్థులు ప్రోగ్రామ్ డాక్యుమెంటేషన్ రాశారు. ఈ ప్రక్రియలో, ఆబ్జెక్ట్‌లు
                మరియు పద్దతుల ప్రీకండిషన్స్ మరియు పోస్ట్‌కండిషన్స్‌ను విద్యార్థులు
                గుర్తించారు మరియు డాక్యుమెంట్ చేశారు. ఇప్పుడు, మల్టిపుల్-ఛాయిస్ మదింపుపై
                యూనిట్ లెర్నింగ్ లక్ష్యాలను సాధించడాన్ని విద్యార్థులు మూల్యాంకనం చేస్తారు.
        k5-onlinepd-2021:
          lessons:
            Events:
              key: ఈవెంట్లు
              name: ఈవెంట్లు
        pl-playground:
          lessons:
            lesson-9:
              name: ప్రారంభించటం 1
        csd-post-survey-2021:
          name: csd-పోస్ట్-సర్వే-2021
          description: ఈ యూనిట్‌లో కోర్సు-పూర్వ సర్వే CS అన్వేషణలు ఉన్నాయి. విద్యార్థులు
            CS అన్వేషణలలో వారికి కేటాయించిన అఖరి యూనిట్ పూర్తి చేసిన తర్వాత ఈ యూనిట్
            కేటాయించబడవచ్చు.
          student_description: ఈ యూనిట్‌లో CS అన్వేషణలను క్లాసు పూర్తి చేసినప్పుడు
            ఒక సర్వే ఉంది. ఈ సర్వే చేయడానికి సమయం వచ్చినప్పుడు మీ టీచర్ మీకు చెప్తారు.
        csa-pl-test:
          lessons:
            lesson-1:
              name: మాడ్యూల్ 1 - ప్రారంభించటం
          name: csa-pl- టెస్ట్
        csa-pl-module-1-test:
          name: csa-pl-మాడ్యూ-1-టెస్ట్
          title: Code.org మరియు CSA పునశ్చరణ
        csa-pl-module-2-test:
          name: csa-pl-మాడ్యూల్ -2-టెస్ట్
          title: Code.org యొక్క టూల్స్‌ను నేవిగేట్ చేయడం
        csa-pl-module-3-test:
          name: csa-pl-మాడ్యూల్-3-టెస్ట్
          title: టెక్స్ట్-ఆధారిత ప్రోగ్రామింగ్‌తో మద్దతు
        csa6-pilot-facilitator:
          lessons:
            Documenting Program Code:
              description_student: కోర్సు మొత్తంలో మీరు అభివృద్ధి చేసిన ప్రాజెక్టులు
                కమ్యూనిటీలో చాలా సృజనాత్మకతను ప్రేరేపించాయి! సృజనాత్మక స్టోరీలు, స్క్రిప్ట్‌లు,
                పాట సాహిత్యాలు, ఉత్తరాలు మరియు కవితలు ప్రదర్శించడానికి ఒక నైబర్‌హుడ్
                లిట్ ఫెస్ట్ నిర్వహించబడుతుంది. నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు ఒక
                పెద్ద ప్రాజెక్టు, ఇందులో మీరు యూనిట్ అంతా పనిచేస్తారు మరియు మీ పనిని
                వ్యవస్థీకరించడానికి మరియు నిర్మించడానికి ప్రాజెక్టు నిర్వహణ వ్యూహాలు
                సహాయపడతాయి. ఇతర సాఫ్ట్‌వేర్ ఇంజనీర్లు సులభంగా ఒక Java టూల్‌ను అర్థం
                చేసుకోవడానికి మరియు ప్రోగ్రామ్ డాక్యుమెంటేషన్ సృష్టించడానికి ఉపయోగించడానికి
                వీలుగా కోడ్ రాయడానికి మరియు నిర్మించడానికి మీరు వ్యూహాలను అన్వేషిస్తారు.
              description_teacher: నైబర్‌హుడ్ లిట్ ఫెస్ట్ మరియు ఆవశ్యకాలను మూల్యాంకనం
                చేయడం మరియు ప్రశ్నలు మరియు ముఖ్య ఫీచర్లను గుర్తించడానికి ఉదాహరణలు
                విద్యార్థులకు పరిచయం చేయబడ్డాయి. ప్రాజెక్టుపై పని ప్రారంభించడానికి
                ముందు, ప్రోగ్రామ్ నిర్మాణం మరియు అత్యుత్తమ ఆచరణలను గుర్తించడం ద్వారా
                కామెంట్ చేయడం మరియు ప్రోగ్రామ్ డాక్యుమెంటేషన్ జనరేట్ చేయడానికి Javadocs
                ఉపయోగించడాన్ని అన్వేషించడం గురించి విద్యార్థులు తమ అవగాహనను విస్తరించుకుంటారు.
            Exploring Integer and Double Objects:
              description_student: రెఫరెన్సు వ్యాల్యూస్‌గా `Integer` మరియు `Double`
                ప్రిమిటివ్ వ్యాల్యూస్ రెప్రజంట్ చేయడానికి మీరు `Integer` మరియు `Double`
                ఆబ్జెక్ట్స్ రూపొందిస్తారు. `Integer` మరియు `Double` క్లాసులను ఉపయోగించి,
                ప్రిమిటివ్ వ్యాల్యూస్‌గా ఈ వ్యాల్యూస్ స్టోర్ చేసిన వ్యాల్యూస్‌ను మీరు
                రిటర్న్ చేస్తారు. మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు కోసం మీకు అవసరమైన
                టాస్క్‌‌లు ప్లాన్ చేయడానికి ముందు, తప్పిదాలు ఓవర్‌ఫ్లో కాకుండా చూడటానికి
                పూర్ణ సంఖ్యల కోసం కనిష్ట మరియు గరిష్ట వ్యాల్యూస్‌ను కూడా మీరు అన్వేషిస్తారు.
              description_teacher: రెఫరెన్సు వ్యాల్యూస్‌గా `Integer` మరియు `Double`
                ప్రిమిటివ్ వ్యాల్యూస్ రెప్రజంట్ చేయడానికి విద్యార్థులు `Integer` మరియు
                `Double` ఆబ్జెక్ట్స్ రూపొందిస్తారు. `Integer` మరియు `Double` క్లాసులను
                ఉపయోగించి, ప్రిమిటివ్ వ్యాల్యూస్‌గా ఈ వ్యాల్యూస్ స్టోర్ చేసిన వ్యాల్యూస్‌ను
                విద్యార్థులు రిటర్న్ చేస్తారు. వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు
                కోసం వారికి అవసరమైన టాస్క్‌‌లు ప్లాన్ చేయడానికి ముందు, తప్పిదాలు ఓవర్‌ఫ్లో
                కాకుండా చూడటానికి పూర్ణ సంఖ్యల కోసం కనిష్ట మరియు గరిష్ట వ్యాల్యూస్‌ను
                కూడా విద్యార్థులు అన్వేషిస్తారు.
            Using ArrayLists to Store Data:
              description_student: ఆరేస్ మరియు లిస్ట్‌లతో పని చేసేటప్పడు, ఎలిమెంట్‌ల
                సంఖ్య తెలియని చోట మరియు లిస్ట్‌ల సైజు నిరంతరం మారుతూ ఉన్నప్పుడు కొన్నిసార్లు
                మనం సమస్యలను ఎదుర్కొంటాము. ఈ పాఠంలో, \`ArrayList’ల గురించి నేర్చుకుంటారు
                మరియు ఈ డేటా నిర్మాణం మరింత అనుకూలంగా ఉన్న దృశ్యాలను గుర్తిస్తారు.
              description_teacher: విద్యార్థులు `int` మరియు `double` వ్యాల్యూస్ స్టోర్
                చేయడానికి `ArrayList` లను సృష్టిస్తారు. ఒక దృష్టాంతరానికి ఏ డేటా నిర్మాణం
                అత్యుత్తమంగా సరిపోతుందో నిర్ధారించడానికి విద్యార్థులు `ArrayList`
                మరియు ఒన్-డైమెన్షనల్  ఆరేస్ మధ్య తేడా కనుగొంటారు. విద్యార్థులు ఒక
                `ArrayList` కు ఎలిమెంట్స్ జోడిస్తారు మరియు స్టోర్ చేసిన డేటాతో పనిచేసేటప్పుడు
                ప్రిమిటివ్ వ్యాల్యూస్ మరియు రాపర్ క్లాసెస్ మధ్య ఆటోబాక్సింగ్ ఎలా మార్చుతుందో
                నేర్చుకుంటారు.
            Working with ArrayList Data:
              description_student: మీరు ఎలిమెంట్స్‌ను తిరిగి పొందడానికి మరియు  సవరించడానికి
                `ArrayList` పద్ధతులు `get()` మరియు `set()` ఉపయోగిస్తారు మరియు ఒక `String`
                ఆబ్జెక్ట్‌లో ఉన్న అక్షరాల సంఖ్యను లెక్కించడానికి `String` పద్ధతి `length()`
                నేర్చుకుంటారు. ఒక `ArrayList` లోని ఎలిమెంట్స్‌ను సవరించడానికి మీరు
                1D మరియు 2D ఆరేస్‌తో అభివృద్ధిపరచిన ప్రామాణిక అల్గోరిథమ్స్‌ను మీరు
                వర్తింపజేస్తారు. ఒక `ArrayList` లో స్టోర్ చేయబడిన డేటాతో పనిచేసేటప్పడు
                అన్‌బాక్సింగ్ ఎలా ప్రిమిటివ్ వ్యాల్యూస్ మరియు రాపర్ క్లాసెస్ మధ్య
                మార్పులను చేస్తుందో మీరు నేర్చుకుంటారు.
              description_teacher: 'విద్యార్థులు ఒక `ArrayList` లోని ఎలిమెంట్స్‌ను
                తిరిగి పొందడానికి మరియు  సవరించడానికి `get()` మరియు `set()` పద్ధతులతో
                పని చేస్తారు మరియు ఒక `String` ఆబ్జెక్ట్‌లో ఉన్న అక్షరాల సంఖ్యను రిటర్న్
                చేయడాని `String` పద్ధతి `length()` నేర్చుకుంటారు. ఒక `ArrayList` లోని
                ఎలిమెంట్స్‌ను సవరించడానికి వారు 1D మరియు 2D ఆరేస్‌తో అభివృద్ధిపరచిన
                ప్రామాణిక అల్గోరిథమ్స్‌ను వారు వర్తింపజేస్తారు. ఒక `ArrayList` లో
                స్టోర్ చేయబడిన డేటాతో పనిచేసేటప్పడు అన్‌బాక్సింగ్ ఎలా ప్రిమిటివ్ వ్యాల్యూస్
                మరియు రాపర్ క్లాసెస్ మధ్య మార్పులను చేస్తుందో విద్యార్థులు నేర్చుకుంటారు. '
            Storing Objects in an ArrayList:
              description_student: ఇంతవరకు, మీరు `Integer`లు, `Double`లు మరియు `String`లు
                స్టోర్ చేయడానికి ’`ArrayList`లు సృష్టించారు. 1D మరియు  2D ఆరేస్‌లో
                లాగే, మీరు సృష్టించిన ఆబ్జెక్ట్‌లను ఒక `ArrayList`లో స్టోర్ కూడా చేయవచ్చు.
                ఈ పాఠంలో, ఈ లిస్ట్‌లో స్టోర్ చేసిన డేటాతో పనిచేయడానికి ఈ సంవత్సరమంతా
                మీరు ఉపయోగించిన ప్రామాణిక అల్గోరిధమ్స్ వర్తింపజేయడానికి మీరు `ArrayList`
                సృష్టించారు.
              description_teacher: విద్యార్థులు ఆబ్జెక్ట్‌లు స్టోర్ చేయడానికి `ArrayList`లు
                సృష్టిస్తారు మరియు Java లో జనరిక్ రకాలను గురించి నేర్చుకుంటారు. కనిష్ట
                మరియు గరిష్ట వ్యాల్యూస్ కనుగొనడానికి, మొత్తాలు మరియు సగటులు లెక్కించడానికి
                లేదా నిర్దిష్ట క్రైటీరియాకు సరిపోయే ఎలిమెంట్స్ కనుగొనడానికి తాము ఒన్-డైమెన్షనల్
                ఆరేస్ అరేస్‌తో నేర్చుకున్న అల్గోరిథమ్స్‌ను ’`ArrayList`లకు వర్తింపజేస్తారు.
            Removing Data from an ArrayList:
              description_student: మీరు`ArrayList` క్లాస్‌లో `remove()` పద్ధతి యొక్క
                ఫంక్షనాలిటీని అన్వేషిస్తారు మరియు లిస్ట్ గుండా వెళ్తున్నప్పుడు అంశాలను
                తీసివేయడానికి ప్రయత్నిస్తున్నప్పుడు సంభావ్య తప్పిదాలను గుర్తిస్తారు.
                ఈ ప్రక్రియలో, ఒక దృష్టాంతానికి లేదా సమస్యకు ఒక `ArrayList` అత్యుత్తమంగా
                ఎప్పుడు ఉంటుందో మీరు తెలుసుకుంటారు.
              description_teacher: విద్యార్థులు `ArrayList` క్లాస్‌లో `remove()` పద్ధతి
                యొక్క ఫంక్షనాలిటీని అన్వేషిస్తారు మరియు లిస్ట్ గుండా వెళ్తున్నప్పుడు
                అంశాలను తీసివేయడానికి ప్రయత్నిస్తున్నప్పుడు సంభావ్య తప్పిదాలను గుర్తిస్తారు.
                తర్వాత, ఒక దృష్టాంతానికి లేదా సమస్యకు ఒక ’ఆరేలిస్ట్`ArrayList` అత్యుత్తమంగా
                ఎప్పుడు ఉంటుందో విద్యార్థులు తెలుసుకుంటారు.
            Using String Methods:
              description_student: మీరు `String` నిర్మాణాన్ని అన్వేషిస్తారు మరియు
                `String`లు అంటే ఆబ్జెక్ట్‌లు అని గుర్తు చేసుకుంటారు. మీరు ఒక `String`
                లోపల సబ్‌స్ట్రింగ్‌లు వెతకడానికి మరియు ఉన్న`String` నుండి `String`
                ఆబ్జెక్ట్‌లు సృష్టించడానికి `indexOf()` మరియు `substring()` పద్ధతులు
                ఉపయోగిస్తారు.
              description_teacher: విద్యార్థులు `String` నిర్మాణాన్ని అన్వేషిస్తారు
                మరియు `String`లు అంటే ఆబ్జెక్ట్‌లు అని గుర్తు చేసుకుంటారు. విద్యార్థులు
                ఒక ’String`లోపల సబ్‌స్ట్రింగ్‌లు వెతకడానికి మరియు ఉన్న String` నుండి”String`ఆబ్జెక్ట్‌లు
                సృష్టించడానికి`indexOf()`మరియు`substring()\` పద్ధతులు ఉపయోగిస్తారు.
            Comparing Strings:
              description_student: "`String`లు అక్షరమాల క్రమంలో ఉన్నాయా అని తనిఖీ
                చేయడానికి మీరు `compareTo()` ఉపయోగించి అన్వేషిస్తారు. తర్వాత మీ ప్రాజెక్టు
                ప్లానింగ్ బోర్డులో ఉన్న టాస్క్‌‌లపై ప్రత్యేకంగా దృష్టిపెడుతూ, మీరు
                మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టుపై పని చేస్తారు."
              description_teacher: "`String`లు అక్షరమాల క్రమంలో ఉన్నాయా అని తనిఖీ
                చేయడానికి విద్యార్థులు `compareTo()` ఉపయోగించి అన్వేషిస్తారు. తర్వాత
                వారి ప్రాజెక్టు ప్లానింగ్ బోర్డులో ఉన్న టాస్క్‌‌లపై ప్రత్యేకంగా దృష్టిపెడుతూ,
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టుపై పని చేస్తారు."
            Solving Problems with Strings:
              description_student: 'ఒక `String` పాలిండ్రోమ్ అవునా కాదా అని తనిఖీ చేయడానికి
                మీరు ప్రామాణిక అల్గోరిథమ్స్ గురించి  మీ ఙ్ఞానాన్ని మరియు `String`లను
                జోడిస్తారు. తర్వాత మీరు ఒక పీర్ ఫీడ్‌బ్యాక్ సెషన్‌లో పాల్గొంటారు మరియు
                మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో మీ పురోగతిని ప్రతిబింబిస్తారు. '
              description_teacher: ఒక `String` పాలిండ్రోమ్ అవునా కాదా అని తనిఖీ చేయడానికి
                విద్యార్థులు ప్రామాణిక అల్గోరిథమ్స్ గురించి  వారి ఙ్ఞానాన్ని మరియు
                `String`లను జోడిస్తారు. తర్వాత విద్యార్థులు ఒక పీర్ ఫీడ్‌బ్యాక్ సెషన్‌లో
                పాల్గొంటారు మరియు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో వారి పురోగతిని
                ప్రతిబింబిస్తారు.
            Solving Problems with ArrayLists:
              description_student: మీరు1D మరియు 2D ఆరేస్ కోసం రాసిన ప్రామాణిక అల్గోరిథమ్స్‌ను  `ArrayList`లకు
                వర్తింపజేస్తారు.  ఎలిమెంట్‌లు మార్పిడి చేయడానికి, డూప్లికేట్స్ తీసివేయడానికి
                లేదా మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో నిర్దిష్ట క్రైటీరియను
                పూర్తి చేయడానికి ఎలిమెంట్‌లు కనుగొనడానికి ముందటి అల్గోరిథమ్స్ సవరించడానికి
                మరియు వర్తింపజేయడానికి ముందు ఒక పూర్ణ సంఖ్య నుండి వ్యక్తిగత అంకెలు
                పొందడానికి మీరు ఒక కొత్త ప్రమాణం అల్గోరిథమ్ అమలు చేస్తారు.
              description_teacher: విద్యార్థులు 1D మరియు 2D ఆరేస్ కోసం వారు రాసిన
                ప్రామాణిక అల్గోరిథమ్స్‌ను  `ArrayList`లకు వర్తింపజేస్తారు.  ఎలిమెంట్‌లు
                మార్పిడి చేయడానికి, డూప్లికేట్స్ తీసివేయడానికి లేదా వారి నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టులో నిర్దిష్ట క్రైటీరియను పూర్తి చేయడానికి ఎలిమెంట్‌లు
                కనుగొనడానికి ముందటి అల్గోరిథమ్స్ సవరించడానికి మరియు వర్తింపజేయడానికి
                ముందు ఒక పూర్ణ సంఖ్య నుండి వ్యక్తిగత అంకెలు పొందడానికి విద్యార్థులు
                ఒక కొత్త ప్రమాణం అల్గోరిథమ్ అమలు చేస్తారు.
            Neighborhood Lit Fest Project - Day 1:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 1
              description_student: ఒక స్టోరీ, కవిత్వం, పాట లేదా మీకు ఇష్టమైన రచయిత
                లేదా కళాకారుడి పని యొక్క విశ్లేషణపై ఆధారపడి మరో రకం సాహిత్యం సృష్టించడానికి
                మీరు మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు అభివృద్ధి చేయడం కొనసాగిస్తారు.
                ప్రాజెక్టు అవశ్యకాలను పూర్తి చేయడంలో మీ పురోగతిని మూల్యాంకనం చేయడానికి
                మొదట మీరు మీ పనిని స్వీయ-మదింపు చేస్తారు, తర్వాత ఒక సమవయస్కుడు పరీక్షించబోయే,
                మీ ప్రాజెక్టులోని ఒక ఫీచర్ కోసం అంగీకార క్రైటీరీయా రాస్తారు. మీ మిగిలిన
                టాస్క్‌‌లకు ప్రాధాన్యత ఇవ్వడానికి మీరు స్వీయ-మదింపు మరియు పీర్-ఫీడ్‌బ్యాక్
                ఉపయోగిస్తారు మరియు మీ ప్రాజెక్టు అభివృద్ధిపరచడం కొనసాగిస్తారు.
              description_teacher: ఒక స్టోరీ, కవిత్వం, పాట లేదా మీకు ఇష్టమైన రచయిత
                లేదా కళాకారుడి పని యొక్క విశ్లేషణపై ఆధారపడి మరో రకం సాహిత్యం సృష్టించడానికి
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు అభివృద్ధి చేయడం
                కొనసాగిస్తారు. ప్రాజెక్టు అవశ్యకాలను పూర్తి చేయడంలో వారి పురోగతిని
                మూల్యాంకనం చేయడానికి మొదట విద్యార్థులు వారి పనిని స్వీయ-మదింపు చేస్తారు,
                తర్వాత ఒక సమవయస్కుడు పరీక్షించబోయే, వారి ప్రాజెక్టులోని ఒక ఫీచర్ కోసం
                అంగీకార క్రైటీరీయా రాస్తారు. వారి మిగిలిన టాస్క్‌‌లకు ప్రాధాన్యత ఇవ్వడానికి
                విద్యార్థులు స్వీయ-మదింపు మరియు పీర్-ఫీడ్‌బ్యాక్ ఉపయోగిస్తారు మరియు
                వారి ప్రాజెక్టులను అభివృద్ధిపరచడం కొనసాగిస్తారు.
            Neighborhood Lit Fest Project - Day 2:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 2
              description_student: ముందటి పాఠంలో, మీరు ఒక స్వీయ-మదింపు నిర్వహించారు
                మరియు మీ ప్రాజెక్టు కోసం అంగీకార క్రైటీరియా రాశారు. ఈ పాఠంలో, పూర్తి
                చేయవలసిన మిగిన టాస్క్‌‌లను గుర్తించడానికి మరియు మీ నైబర్‌హుడ్ లిట్
                ఫెస్ట్ ప్రాజెక్టు అభివృద్ధిపరచడం కొనసాగించడానికి మీరు పీర్-ఫీడ్‌బ్యాక్
                తీసుకుంటారు.
              description_teacher: ముందటి పాఠంలో, విద్యార్థులు ఒక స్వీయ-మదింపులు నిర్వహించారు
                మరియు వారి ప్రాజెక్టు కోసం అంగీకార క్రైటీరియా రాశారు. ఈ పాఠంలో, విద్యార్థులు
                పూర్తి చేయవలసిన మిగిన టాస్క్‌‌లను గుర్తించడానికి మరియు మీ నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టులు అభివృద్ధిపరచడం కొనసాగించడానికి పీర్-ఫీడ్‌బ్యాక్
                తీసుకుంటారు.
            Neighborhood Lit Fest Project - Day 3:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 3
              description_student: మీ కోడ్ విశ్లేషణలు మరియు ప్రాజెక్టు ప్లానింగ్ బోర్డుపై
                ఆధారపడి మీరు అంతిమ సవరణలు మరియు అప్‌డేట్స్ చేస్తారు. మీరు మీ నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టును మీ సమవయస్కులతో పంచుకుంటారు. తర్వాత మీరు మీ
                విజయాన్ని సెలెబ్రేట్ చేసుకుంటారు మరియు అభివృద్ధి ప్రక్రియ యొక్క అంతిమ
                రెప్లెక్షన్ పూర్తి చేస్తారు.
              description_teacher: విద్యార్థులు వారి కోడ్ విశ్లేషణలు మరియు ప్రాజెక్టు
                ప్లానింగ్ బోర్డుపై ఆధారపడి అంతిమ సవరణలు మరియు అప్‌డేట్స్ చేస్తారు.
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులను వారి సమవయస్కులతో
                పంచుకుంటారు. తర్వాత విద్యార్థులు వారి విజయాన్ని సెలెబ్రేట్ చేసుకుంటారు
                మరియు అభివృద్ధి ప్రక్రియ యొక్క అంతిమ రెప్లెక్షన్ పూర్తి చేస్తారు.
            Assessment Day:
              description_student: ఈ యూనిట్‌లో, ప్రోగ్రామ్ డేటా స్టోర్ చేయడానికి మరియు
                1D మరియు 2D ఆరేస్ మరియు `ArrayList`ల మధ్య ఎప్పుడు ఉపయోగించాలో తేడా
                తెలుసుకోవడానికి మీరు `ArrayList`లను ఉపయోగించారు. సంఖ్యాపరమైన మరియు
                ఆబ్జెక్ట్ డేటాతో సంబంధం ఉన్న సమస్యలను పరిష్కరించడానికి `ArrayList`
                ఉపయోగిస్తూ, వీటి ప్రయోజనాలు మరియు ఫంక్షనాలిటీని మీరు అన్వేషించారు.
                యూజర్ మరియు ఫైల్ ఇన్‌పుట్ నుండి తీసుకున్న టెక్స్ట్‌ను విశ్లేషించడానికి
                మరియు ప్రాసెస్ చేయడానికి మీరు `String` క్లాసులోని పద్ధతులు ఉపయోగించారు.
                ఈ యూనిట్ అంతటా, API డాక్యుమెంటేషన సృష్టించడానికి సింగల్-లైన్ కామెంట్లు,
                మల్టీ-లైన్ కామెంట్లు మరియు Javadoc కామెంట్లు ఉపయోగించి మీరు ప్రోగ్రామ్
                డాక్యుమెంటేషన్ రాశారు. ఈ ప్రక్రియలో, ఆబ్జెక్ట్‌లు మరియు పద్దతుల ప్రీకండిషన్స్
                మరియు పోస్ట్‌కండిషన్స్‌ను మీరు గుర్తించారు మరియు డాక్యుమెంట్ చేశారు.
                ఇప్పుడు, మల్టిపుల్-ఛాయిస్ మదింపుపై యూనిట్ లెర్నింగ్ లక్ష్యాలను సాధించడాన్ని
                మీరు మూల్యాంకనం చేస్తారు.
              description_teacher: ఈ యూనిట్‌లో, ప్రోగ్రామ్ డేటా స్టోర్ చేయడానికి మరియు
                1D మరియు 2D ఆరేస్ మరియు `ArrayList`ల మధ్య ఎప్పుడు ఉపయోగించాలో తేడా
                తెలుసుకోవడానికి విద్యార్థులు `ArrayList`లను ఉపయోగించారు. సంఖ్యాపరమైన
                మరియు ఆబ్జెక్ట్ డేటాతో సంబంధం ఉన్న సమస్యలను పరిష్కరించడానికి `ArrayList`
                ఉపయోగిస్తూ, వీటి ప్రయోజనాలు మరియు ఫంక్షనాలిటీని విద్యార్థులు అన్వేషించారు.
                యూజర్ మరియు ఫైల్ ఇన్‌పుట్ నుండి తీసుకున్న టెక్స్ట్‌ను విశ్లేషించడానికి
                మరియు ప్రాసెస్ చేయడానికి విద్యార్థులు `String` క్లాసులోని పద్ధతులు
                ఉపయోగించారు. ఈ యూనిట్ అంతటా, API డాక్యుమెంటేషన సృష్టించడానికి సింగల్-లైన్
                కామెంట్లు, మల్టీ-లైన్ కామెంట్లు మరియు Javadoc కామెంట్లు ఉపయోగించి
                విద్యార్థులు ప్రోగ్రామ్ డాక్యుమెంటేషన్ రాశారు. ఈ ప్రక్రియలో, ఆబ్జెక్ట్‌లు
                మరియు పద్దతుల ప్రీకండిషన్స్ మరియు పోస్ట్‌కండిషన్స్‌ను విద్యార్థులు
                గుర్తించారు మరియు డాక్యుమెంట్ చేశారు. ఇప్పుడు, మల్టిపుల్-ఛాయిస్ మదింపుపై
                యూనిట్ లెర్నింగ్ లక్ష్యాలను సాధించడాన్ని విద్యార్థులు మూల్యాంకనం చేస్తారు.
            lesson-2:
              description_student: రెఫరెన్సు వ్యాల్యూస్‌గా `Integer` మరియు `Double`
                ప్రిమిటివ్ వ్యాల్యూస్ రెప్రజంట్ చేయడానికి మీరు `Integer` మరియు `Double`
                ఆబ్జెక్ట్స్ రూపొందిస్తారు. `Integer` మరియు `Double` క్లాసులను ఉపయోగించి,
                ప్రిమిటివ్ వ్యాల్యూస్‌గా ఈ వ్యాల్యూస్ స్టోర్ చేసిన వ్యాల్యూస్‌ను మీరు
                రిటర్న్ చేస్తారు. మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు కోసం మీకు అవసరమైన
                టాస్క్‌‌లు ప్లాన్ చేయడానికి ముందు, తప్పిదాలు ఓవర్‌ఫ్లో కాకుండా చూడటానికి
                పూర్ణ సంఖ్యల కోసం కనిష్ట మరియు గరిష్ట వ్యాల్యూస్‌ను కూడా మీరు అన్వేషిస్తారు.
              description_teacher: రెఫరెన్సు వ్యాల్యూస్‌గా `Integer` మరియు `Double`
                ప్రిమిటివ్ వ్యాల్యూస్ రెప్రజంట్ చేయడానికి విద్యార్థులు `Integer` మరియు
                `Double` ఆబ్జెక్ట్స్ రూపొందిస్తారు. `Integer` మరియు `Double` క్లాసులను
                ఉపయోగించి, ప్రిమిటివ్ వ్యాల్యూస్‌గా ఈ వ్యాల్యూస్ స్టోర్ చేసిన వ్యాల్యూస్‌ను
                విద్యార్థులు రిటర్న్ చేస్తారు. వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు
                కోసం వారికి అవసరమైన టాస్క్‌‌లు ప్లాన్ చేయడానికి ముందు, తప్పిదాలు ఓవర్‌ఫ్లో
                కాకుండా చూడటానికి పూర్ణ సంఖ్యల కోసం కనిష్ట మరియు గరిష్ట వ్యాల్యూస్‌ను
                కూడా విద్యార్థులు అన్వేషిస్తారు.
            lesson-3:
              description_student: ఆరేస్ మరియు లిస్ట్‌లతో పని చేసేటప్పడు, ఎలిమెంట్‌ల
                సంఖ్య తెలియని చోట మరియు లిస్ట్‌ల సైజు నిరంతరం మారుతూ ఉన్నప్పుడు కొన్నిసార్లు
                మనం సమస్యలను ఎదుర్కొంటాము. ఈ పాఠంలో, \`ArrayList’ల గురించి నేర్చుకుంటారు
                మరియు ఈ డేటా నిర్మాణం మరింత అనుకూలంగా ఉన్న దృశ్యాలను గుర్తిస్తారు.
              description_teacher: విద్యార్థులు `int` మరియు `double` వ్యాల్యూస్ స్టోర్
                చేయడానికి `ArrayList` లను సృష్టిస్తారు. ఒక దృష్టాంతరానికి ఏ డేటా నిర్మాణం
                అత్యుత్తమంగా సరిపోతుందో నిర్ధారించడానికి విద్యార్థులు `ArrayList`
                మరియు ఒన్-డైమెన్షనల్  ఆరేస్ మధ్య తేడా కనుగొంటారు. విద్యార్థులు ఒక
                `ArrayList` కు ఎలిమెంట్స్ జోడిస్తారు మరియు స్టోర్ చేసిన డేటాతో పనిచేసేటప్పుడు
                ప్రిమిటివ్ వ్యాల్యూస్ మరియు రాపర్ క్లాసెస్ మధ్య ఆటోబాక్సింగ్ ఎలా మార్చుతుందో
                నేర్చుకుంటారు.
            lesson-4:
              description_student: మీరు ఎలిమెంట్స్‌ను తిరిగి పొందడానికి మరియు  సవరించడానికి
                `ArrayList` పద్ధతులు `get()` మరియు `set()` ఉపయోగిస్తారు మరియు ఒక `String`
                ఆబ్జెక్ట్‌లో ఉన్న అక్షరాల సంఖ్యను లెక్కించడానికి `String` పద్ధతి `length()`
                నేర్చుకుంటారు. ఒక `ArrayList` లోని ఎలిమెంట్స్‌ను సవరించడానికి మీరు
                1D మరియు 2D ఆరేస్‌తో అభివృద్ధిపరచిన ప్రామాణిక అల్గోరిథమ్స్‌ను మీరు
                వర్తింపజేస్తారు. ఒక `ArrayList` లో స్టోర్ చేయబడిన డేటాతో పనిచేసేటప్పడు
                అన్‌బాక్సింగ్ ఎలా ప్రిమిటివ్ వ్యాల్యూస్ మరియు రాపర్ క్లాసెస్ మధ్య
                మార్పులను చేస్తుందో మీరు నేర్చుకుంటారు.
              description_teacher: 'విద్యార్థులు ఒక `ArrayList` లోని ఎలిమెంట్స్‌ను
                తిరిగి పొందడానికి మరియు  సవరించడానికి `get()` మరియు `set()` పద్ధతులతో
                పని చేస్తారు మరియు ఒక `String` ఆబ్జెక్ట్‌లో ఉన్న అక్షరాల సంఖ్యను రిటర్న్
                చేయడాని `String` పద్ధతి `length()` నేర్చుకుంటారు. ఒక `ArrayList` లోని
                ఎలిమెంట్స్‌ను సవరించడానికి వారు 1D మరియు 2D ఆరేస్‌తో అభివృద్ధిపరచిన
                ప్రామాణిక అల్గోరిథమ్స్‌ను వారు వర్తింపజేస్తారు. ఒక `ArrayList` లో
                స్టోర్ చేయబడిన డేటాతో పనిచేసేటప్పడు అన్‌బాక్సింగ్ ఎలా ప్రిమిటివ్ వ్యాల్యూస్
                మరియు రాపర్ క్లాసెస్ మధ్య మార్పులను చేస్తుందో విద్యార్థులు నేర్చుకుంటారు. '
            lesson-5:
              description_student: ఇంతవరకు, మీరు `Integer`లు, `Double`లు మరియు `String`లు
                స్టోర్ చేయడానికి ’`ArrayList`లు సృష్టించారు. 1D మరియు  2D ఆరేస్‌లో
                లాగే, మీరు సృష్టించిన ఆబ్జెక్ట్‌లను ఒక `ArrayList`లో స్టోర్ కూడా చేయవచ్చు.
                ఈ పాఠంలో, ఈ లిస్ట్‌లో స్టోర్ చేసిన డేటాతో పనిచేయడానికి ఈ సంవత్సరమంతా
                మీరు ఉపయోగించిన ప్రామాణిక అల్గోరిధమ్స్ వర్తింపజేయడానికి మీరు `ArrayList`
                సృష్టించారు.
              description_teacher: విద్యార్థులు ఆబ్జెక్ట్‌లు స్టోర్ చేయడానికి `ArrayList`లు
                సృష్టిస్తారు మరియు Java లో జనరిక్ రకాలను గురించి నేర్చుకుంటారు. కనిష్ట
                మరియు గరిష్ట వ్యాల్యూస్ కనుగొనడానికి, మొత్తాలు మరియు సగటులు లెక్కించడానికి
                లేదా నిర్దిష్ట క్రైటీరియాకు సరిపోయే ఎలిమెంట్స్ కనుగొనడానికి తాము ఒన్-డైమెన్షనల్
                ఆరేస్ అరేస్‌తో నేర్చుకున్న అల్గోరిథమ్స్‌ను ’`ArrayList`లకు వర్తింపజేస్తారు.
            lesson-6:
              description_student: మీరు`ArrayList` క్లాస్‌లో `remove()` పద్ధతి యొక్క
                ఫంక్షనాలిటీని అన్వేషిస్తారు మరియు లిస్ట్ గుండా వెళ్తున్నప్పుడు అంశాలను
                తీసివేయడానికి ప్రయత్నిస్తున్నప్పుడు సంభావ్య తప్పిదాలను గుర్తిస్తారు.
                ఈ ప్రక్రియలో, ఒక దృష్టాంతానికి లేదా సమస్యకు ఒక `ArrayList` అత్యుత్తమంగా
                ఎప్పుడు ఉంటుందో మీరు తెలుసుకుంటారు.
              description_teacher: విద్యార్థులు `ArrayList` క్లాస్‌లో `remove()` పద్ధతి
                యొక్క ఫంక్షనాలిటీని అన్వేషిస్తారు మరియు లిస్ట్ గుండా వెళ్తున్నప్పుడు
                అంశాలను తీసివేయడానికి ప్రయత్నిస్తున్నప్పుడు సంభావ్య తప్పిదాలను గుర్తిస్తారు.
                తర్వాత, ఒక దృష్టాంతానికి లేదా సమస్యకు ఒక ’ఆరేలిస్ట్`ArrayList` అత్యుత్తమంగా
                ఎప్పుడు ఉంటుందో విద్యార్థులు తెలుసుకుంటారు.
            lesson-7:
              description_student: మీరు `String` నిర్మాణాన్ని అన్వేషిస్తారు మరియు
                `String`లు అంటే ఆబ్జెక్ట్‌లు అని గుర్తు చేసుకుంటారు. మీరు ఒక `String`
                లోపల సబ్‌స్ట్రింగ్‌లు వెతకడానికి మరియు ఉన్న`String` నుండి `String`
                ఆబ్జెక్ట్‌లు సృష్టించడానికి `indexOf()` మరియు `substring()` పద్ధతులు
                ఉపయోగిస్తారు.
              description_teacher: విద్యార్థులు `String` నిర్మాణాన్ని అన్వేషిస్తారు
                మరియు `String`లు అంటే ఆబ్జెక్ట్‌లు అని గుర్తు చేసుకుంటారు. విద్యార్థులు
                ఒక ’String`లోపల సబ్‌స్ట్రింగ్‌లు వెతకడానికి మరియు ఉన్న String` నుండి”String`ఆబ్జెక్ట్‌లు
                సృష్టించడానికి`indexOf()`మరియు`substring()\` పద్ధతులు ఉపయోగిస్తారు.
            lesson-8:
              description_student: "`String`లు అక్షరమాల క్రమంలో ఉన్నాయా అని తనిఖీ
                చేయడానికి మీరు `compareTo()` ఉపయోగించి అన్వేషిస్తారు. తర్వాత మీ ప్రాజెక్టు
                ప్లానింగ్ బోర్డులో ఉన్న టాస్క్‌‌లపై ప్రత్యేకంగా దృష్టిపెడుతూ, మీరు
                మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టుపై పని చేస్తారు."
              description_teacher: "`String`లు అక్షరమాల క్రమంలో ఉన్నాయా అని తనిఖీ
                చేయడానికి విద్యార్థులు `compareTo()` ఉపయోగించి అన్వేషిస్తారు. తర్వాత
                వారి ప్రాజెక్టు ప్లానింగ్ బోర్డులో ఉన్న టాస్క్‌‌లపై ప్రత్యేకంగా దృష్టిపెడుతూ,
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టుపై పని చేస్తారు."
            lesson-9:
              description_student: 'ఒక `String` పాలిండ్రోమ్ అవునా కాదా అని తనిఖీ చేయడానికి
                మీరు ప్రామాణిక అల్గోరిథమ్స్ గురించి  మీ ఙ్ఞానాన్ని మరియు `String`లను
                జోడిస్తారు. తర్వాత మీరు ఒక పీర్ ఫీడ్‌బ్యాక్ సెషన్‌లో పాల్గొంటారు మరియు
                మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో మీ పురోగతిని ప్రతిబింబిస్తారు. '
              description_teacher: ఒక `String` పాలిండ్రోమ్ అవునా కాదా అని తనిఖీ చేయడానికి
                విద్యార్థులు ప్రామాణిక అల్గోరిథమ్స్ గురించి  వారి ఙ్ఞానాన్ని మరియు
                `String`లను జోడిస్తారు. తర్వాత విద్యార్థులు ఒక పీర్ ఫీడ్‌బ్యాక్ సెషన్‌లో
                పాల్గొంటారు మరియు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో వారి పురోగతిని
                ప్రతిబింబిస్తారు.
            lesson-10:
              description_student: మీరు1D మరియు 2D ఆరేస్ కోసం రాసిన ప్రామాణిక అల్గోరిథమ్స్‌ను  `ArrayList`లకు
                వర్తింపజేస్తారు.  ఎలిమెంట్‌లు మార్పిడి చేయడానికి, డూప్లికేట్స్ తీసివేయడానికి
                లేదా మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులో నిర్దిష్ట క్రైటీరియను
                పూర్తి చేయడానికి ఎలిమెంట్‌లు కనుగొనడానికి ముందటి అల్గోరిథమ్స్ సవరించడానికి
                మరియు వర్తింపజేయడానికి ముందు ఒక పూర్ణ సంఖ్య నుండి వ్యక్తిగత అంకెలు
                పొందడానికి మీరు ఒక కొత్త ప్రమాణం అల్గోరిథమ్ అమలు చేస్తారు.
              description_teacher: విద్యార్థులు 1D మరియు 2D ఆరేస్ కోసం వారు రాసిన
                ప్రామాణిక అల్గోరిథమ్స్‌ను  `ArrayList`లకు వర్తింపజేస్తారు.  ఎలిమెంట్‌లు
                మార్పిడి చేయడానికి, డూప్లికేట్స్ తీసివేయడానికి లేదా వారి నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టులో నిర్దిష్ట క్రైటీరియను పూర్తి చేయడానికి ఎలిమెంట్‌లు
                కనుగొనడానికి ముందటి అల్గోరిథమ్స్ సవరించడానికి మరియు వర్తింపజేయడానికి
                ముందు ఒక పూర్ణ సంఖ్య నుండి వ్యక్తిగత అంకెలు పొందడానికి విద్యార్థులు
                ఒక కొత్త ప్రమాణం అల్గోరిథమ్ అమలు చేస్తారు.
            lesson-11:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 1
              description_student: ఒక స్టోరీ, కవిత్వం, పాట లేదా మీకు ఇష్టమైన రచయిత
                లేదా కళాకారుడి పని యొక్క విశ్లేషణపై ఆధారపడి మరో రకం సాహిత్యం సృష్టించడానికి
                మీరు మీ నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు అభివృద్ధి చేయడం కొనసాగిస్తారు.
                ప్రాజెక్టు అవశ్యకాలను పూర్తి చేయడంలో మీ పురోగతిని మూల్యాంకనం చేయడానికి
                మొదట మీరు మీ పనిని స్వీయ-మదింపు చేస్తారు, తర్వాత ఒక సమవయస్కుడు పరీక్షించబోయే,
                మీ ప్రాజెక్టులోని ఒక ఫీచర్ కోసం అంగీకార క్రైటీరీయా రాస్తారు. మీ మిగిలిన
                టాస్క్‌‌లకు ప్రాధాన్యత ఇవ్వడానికి మీరు స్వీయ-మదింపు మరియు పీర్-ఫీడ్‌బ్యాక్
                ఉపయోగిస్తారు మరియు మీ ప్రాజెక్టు అభివృద్ధిపరచడం కొనసాగిస్తారు.
              description_teacher: ఒక స్టోరీ, కవిత్వం, పాట లేదా మీకు ఇష్టమైన రచయిత
                లేదా కళాకారుడి పని యొక్క విశ్లేషణపై ఆధారపడి మరో రకం సాహిత్యం సృష్టించడానికి
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు అభివృద్ధి చేయడం
                కొనసాగిస్తారు. ప్రాజెక్టు అవశ్యకాలను పూర్తి చేయడంలో వారి పురోగతిని
                మూల్యాంకనం చేయడానికి మొదట విద్యార్థులు వారి పనిని స్వీయ-మదింపు చేస్తారు,
                తర్వాత ఒక సమవయస్కుడు పరీక్షించబోయే, వారి ప్రాజెక్టులోని ఒక ఫీచర్ కోసం
                అంగీకార క్రైటీరీయా రాస్తారు. వారి మిగిలిన టాస్క్‌‌లకు ప్రాధాన్యత ఇవ్వడానికి
                విద్యార్థులు స్వీయ-మదింపు మరియు పీర్-ఫీడ్‌బ్యాక్ ఉపయోగిస్తారు మరియు
                వారి ప్రాజెక్టులను అభివృద్ధిపరచడం కొనసాగిస్తారు.
            lesson-12:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 2
              description_student: ముందటి పాఠంలో, మీరు ఒక స్వీయ-మదింపు నిర్వహించారు
                మరియు మీ ప్రాజెక్టు కోసం అంగీకార క్రైటీరియా రాశారు. ఈ పాఠంలో, పూర్తి
                చేయవలసిన మిగిన టాస్క్‌‌లను గుర్తించడానికి మరియు మీ నైబర్‌హుడ్ లిట్
                ఫెస్ట్ ప్రాజెక్టు అభివృద్ధిపరచడం కొనసాగించడానికి మీరు పీర్-ఫీడ్‌బ్యాక్
                తీసుకుంటారు.
              description_teacher: ముందటి పాఠంలో, విద్యార్థులు ఒక స్వీయ-మదింపులు నిర్వహించారు
                మరియు వారి ప్రాజెక్టు కోసం అంగీకార క్రైటీరియా రాశారు. ఈ పాఠంలో, విద్యార్థులు
                పూర్తి చేయవలసిన మిగిన టాస్క్‌‌లను గుర్తించడానికి మరియు మీ నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టులు అభివృద్ధిపరచడం కొనసాగించడానికి పీర్-ఫీడ్‌బ్యాక్
                తీసుకుంటారు.
            lesson-13:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 3
              description_student: మీ కోడ్ విశ్లేషణలు మరియు ప్రాజెక్టు ప్లానింగ్ బోర్డుపై
                ఆధారపడి మీరు అంతిమ సవరణలు మరియు అప్‌డేట్స్ చేస్తారు. మీరు మీ నైబర్‌హుడ్
                లిట్ ఫెస్ట్ ప్రాజెక్టును మీ సమవయస్కులతో పంచుకుంటారు. తర్వాత మీరు మీ
                విజయాన్ని సెలెబ్రేట్ చేసుకుంటారు మరియు అభివృద్ధి ప్రక్రియ యొక్క అంతిమ
                రెప్లెక్షన్ పూర్తి చేస్తారు.
              description_teacher: విద్యార్థులు వారి కోడ్ విశ్లేషణలు మరియు ప్రాజెక్టు
                ప్లానింగ్ బోర్డుపై ఆధారపడి అంతిమ సవరణలు మరియు అప్‌డేట్స్ చేస్తారు.
                విద్యార్థులు వారి నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టులను వారి సమవయస్కులతో
                పంచుకుంటారు. తర్వాత విద్యార్థులు వారి విజయాన్ని సెలెబ్రేట్ చేసుకుంటారు
                మరియు అభివృద్ధి ప్రక్రియ యొక్క అంతిమ రెప్లెక్షన్ పూర్తి చేస్తారు.
            lesson-15:
              description_student: ఈ యూనిట్‌లో, ప్రోగ్రామ్ డేటా స్టోర్ చేయడానికి మరియు
                1D మరియు 2D ఆరేస్ మరియు `ArrayList`ల మధ్య ఎప్పుడు ఉపయోగించాలో తేడా
                తెలుసుకోవడానికి మీరు `ArrayList`లను ఉపయోగించారు. సంఖ్యాపరమైన మరియు
                ఆబ్జెక్ట్ డేటాతో సంబంధం ఉన్న సమస్యలను పరిష్కరించడానికి `ArrayList`
                ఉపయోగిస్తూ, వీటి ప్రయోజనాలు మరియు ఫంక్షనాలిటీని మీరు అన్వేషించారు.
                యూజర్ మరియు ఫైల్ ఇన్‌పుట్ నుండి తీసుకున్న టెక్స్ట్‌ను విశ్లేషించడానికి
                మరియు ప్రాసెస్ చేయడానికి మీరు `String` క్లాసులోని పద్ధతులు ఉపయోగించారు.
                ఈ యూనిట్ అంతటా, API డాక్యుమెంటేషన సృష్టించడానికి సింగల్-లైన్ కామెంట్లు,
                మల్టీ-లైన్ కామెంట్లు మరియు Javadoc కామెంట్లు ఉపయోగించి మీరు ప్రోగ్రామ్
                డాక్యుమెంటేషన్ రాశారు. ఈ ప్రక్రియలో, ఆబ్జెక్ట్‌లు మరియు పద్దతుల ప్రీకండిషన్స్
                మరియు పోస్ట్‌కండిషన్స్‌ను మీరు గుర్తించారు మరియు డాక్యుమెంట్ చేశారు.
                ఇప్పుడు, మల్టిపుల్-ఛాయిస్ మదింపుపై యూనిట్ లెర్నింగ్ లక్ష్యాలను సాధించడాన్ని
                మీరు మూల్యాంకనం చేస్తారు.
              description_teacher: ఈ యూనిట్‌లో, ప్రోగ్రామ్ డేటా స్టోర్ చేయడానికి మరియు
                1D మరియు 2D ఆరేస్ మరియు `ArrayList`ల మధ్య ఎప్పుడు ఉపయోగించాలో తేడా
                తెలుసుకోవడానికి విద్యార్థులు `ArrayList`లను ఉపయోగించారు. సంఖ్యాపరమైన
                మరియు ఆబ్జెక్ట్ డేటాతో సంబంధం ఉన్న సమస్యలను పరిష్కరించడానికి `ArrayList`
                ఉపయోగిస్తూ, వీటి ప్రయోజనాలు మరియు ఫంక్షనాలిటీని విద్యార్థులు అన్వేషించారు.
                యూజర్ మరియు ఫైల్ ఇన్‌పుట్ నుండి తీసుకున్న టెక్స్ట్‌ను విశ్లేషించడానికి
                మరియు ప్రాసెస్ చేయడానికి విద్యార్థులు `String` క్లాసులోని పద్ధతులు
                ఉపయోగించారు. ఈ యూనిట్ అంతటా, API డాక్యుమెంటేషన సృష్టించడానికి సింగల్-లైన్
                కామెంట్లు, మల్టీ-లైన్ కామెంట్లు మరియు Javadoc కామెంట్లు ఉపయోగించి
                విద్యార్థులు ప్రోగ్రామ్ డాక్యుమెంటేషన్ రాశారు. ఈ ప్రక్రియలో, ఆబ్జెక్ట్‌లు
                మరియు పద్దతుల ప్రీకండిషన్స్ మరియు పోస్ట్‌కండిషన్స్‌ను విద్యార్థులు
                గుర్తించారు మరియు డాక్యుమెంట్ చేశారు. ఇప్పుడు, మల్టిపుల్-ఛాయిస్ మదింపుపై
                యూనిట్ లెర్నింగ్ లక్ష్యాలను సాధించడాన్ని విద్యార్థులు మూల్యాంకనం చేస్తారు.
        csa6-exemplars:
          lessons:
            lesson-11:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 1
            lesson-12:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 2
            lesson-13:
              name: నైబర్‌హుడ్ లిట్ ఫెస్ట్ ప్రాజెక్టు - దినం 3
