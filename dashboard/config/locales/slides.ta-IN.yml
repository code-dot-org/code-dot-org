---
ta:
  slides:
    maze_intro:
      1:
        text: நிரல்வரி நேரத்திற்கு வருக! முதல் கணினி நிரலை உருவாக்கும் அனுபவத்துக்கு
          தயாராகுவோம்.
      2:
        text: நாம் இப்பொழுது Blockly என்று அழைக்கப்படும் காட்சி சார்ந்த கணினி மொழியில்
          கணினி நிரல்களை எழுதுவோம்.
      3:
        text: பெரும்பாலான குறியீட்டை தட்டச்சு செய்த, ஆனால் Blockly பார்வை உள்ளது.
          "உண்மையான" குறியீடு கோட்டை ஒவ்வொரு தடுப்புகள் குறிக்கிறது.
      4:
        text: கைப்பொறி பயன்பாடுகள் முதல் செவ்வாய் ரோவரை கட்டுபடுதவதில் உதவும் கணிப்பொறி
          வரை உள்ள கணினி அறிவியலின் அடிப்படை தத்துவங்களை இங்கே தெரிந்து கொள்வீர்கள்.
      5:
        text: கணிப்பொறி செயல்படுத்த வேண்டிய கட்டளைகளின் தொகுப்பே நிரல் எனப்படும்.
      6:
        text: கணினி நிரலூக்கன முதல் இலக்கு அங்க்ரி பிரட் இ புதிர் பாதையில் வழிநடத்திச்சென்று
          பன்றியை அடைதல்.
      7:
        text: இடது பக்கம் உங்கள் நிரல் இயங்கும் பிரமை. ஒவ்வொரு புதிருக்கான வழிமுறைகளும்
          பிரமைக்குக் கீழே உள்ளன.
      8:
        text: நடுக் கருவிப்பெட்டியில் Angry Birdக்கான கட்டளைகள் உள்ளன. உங்கள் குறியீட்டை
          உருவாக்க இவற்றைப் பயன்படுத்துவீர்கள்.
      9:
        text: வலதுபுறத்தில் உங்கள் பணியிடம் உள்ளது, அங்கு உங்கள் நிரலை உருவாக்க கருவிப்பெட்டியிலிருந்து
          தொகுதிகளை இழுக்க வேண்டும். ஒரு தொகுதியை நீக்க, அதை மூலையில் உள்ள குப்பைக்கு
          இழுக்கவும்.
      10:
        text: ஒவ்வொரு தொகுதியும் ஒரு அறிவுறுத்தல். உங்கள் பணியிடத்திற்கு "முன்னோக்கி
          நகர்த்து" தொகுதியை இழுத்து "ரன் புரோகிராம்" என்பதை அழுத்தினால், பறவை பிரமை
          மீது ஒரு இடத்தை நகர்த்துகிறது.
      11:
        text: ஒன்றுக்கு மேற்பட்ட செயல்களைச் செய்ய, உங்கள் பணியிடத்திற்கு பல தொகுதிகளை
          இழுத்து அவற்றை ஒன்றாக இணைக்கலாம். பறவை மேலிருந்து கீழாக கட்டளைகளை செய்யும்.
      12:
        text: நீங்கள் ஒரு நிரலை இயக்கி அதை சரிசெய்து மீண்டும் முயற்சிக்க விரும்பினால்,
          "மீட்டமை" பொத்தானை அழுத்தவும்.
      13:
        text: அந்த பன்றிகளை தேடி செல்வோம் வாருங்கள்!
    artist_intro:
      1:
        text: வணக்கம், நான் JR! ஒவ்வொரு ரேஸ் கார் அணியும் வெற்றி பெற கணினி விஞ்ஞானிகள்
          தேவை. அவர்கள் காரை வேகமாகச் செல்ல அதிலிருந்து தரவை பகுப்பாய்வு செய்கிறார்கள்.
      2:
        text: இந்தப் புதிர்களில், அவர்கள் செல்லும் எல்லா இடங்களிலும் அவர்களுக்குப்
          பின்னால் ஒரு கோட்டை வரையும் கலைஞராக நீங்கள் இருப்பீர்கள்.
      3:
        text: இந்தத் தொகுதி "100 பிக்சல்களால் முன்னோக்கி நகர்த்தவும்" என்று கூறுகிறது.
          பிக்சல்கள் என்பது உங்கள் திரையில் உள்ள சிறிய புள்ளிகள்.
      4:
        text: இந்த தொகுதி "வலப்புறம் 90 டிகிரி திரும்பவும்" என்று கூறுகிறது. இது பிரமை
          புதிர்களில் "டர்ன்" பிளாக்குகளின் அதே அளவு உங்கள் கலைஞரை மாற்றும்.
      5:
        text: கலைஞர் முன்னோக்கி நகர்த்த அல்லது திரும்பும் அளவை மாற்ற, இந்தத் தொகுதிகளில்
          ஏதேனும் ஒன்றில் உள்ள அம்புக்குறியைக் கிளிக் செய்யவும். இந்தப் புதிய தொகுதிகளைப்
          பற்றி அறிந்துகொள்ள விளையாடுங்கள்.
    farmer_intro:
      1:
        text: ஹாய், நான் பாவ்லா! இந்த புதிர்களில், நீங்கள் ஒரு விவசாயி, அவர் பயிர்களை
          நடவு செய்ய தனது வயலை முழுவதுமாக தட்டையாக மாற்ற வேண்டும்.
      2:
        text: நீங்கள் அழுக்கு அனைத்து குவியல்களை நீக்க மற்றும் அனைத்து துளைகள் நிரப்ப
          அவளுக்கு உதவ வேண்டும்.
      3:
        text: புதிய தொகுதிகள் ஒரு குவியலில் இருந்து 1 மண்வெட்டி அழுக்குகளை அகற்றி,
          1 மண்வெட்டி அழுக்கை ஒரு துளைக்குள் நிரப்புகின்றன.
      4:
        text: குவியல்கள் மற்றும் துளைகள் வெவ்வேறு அளவுகளில் உள்ளன, எனவே நீங்கள் எத்தனை
          மண்வெட்டிகளைப் பயன்படுத்த வேண்டும் என்பதை விவசாயிக்கு சொல்ல வேண்டும்.
    flappy_intro:
      1:
        text: ஹாய், நான் கேட்டி! கணினி அறிவியலில் மிகவும் உற்சாகமான விஷயங்களில் ஒன்று
          கணினி நிரல் ஊடாடக்கூடியதாக இருக்கும்.
      2:
        text: கணினி அல்லது ஃபோனில் யாராவது கிளிக் செய்தால் அல்லது தட்டினால் அல்லது
          தட்டச்சு செய்தால், அது ஒரு நிகழ்வை உருவாக்கும், மேலும் ஒரு நிகழ்வு நிகழும்போது
          என்ன செய்ய வேண்டும் என்பதைத் தீர்மானிக்கும் சில குறியீடு உள்ளது.
      3:
        text: எடுத்துக்காட்டாக, "சுட்டியைக் கிளிக் செய்யும் போது, ​​ஒரு ஒலியை இயக்கு"
          என்று கூறும் நிகழ்வு-ஹேண்ட்லரை நீங்கள் வைத்திருக்கலாம்.
      4:
        text: FlappyBird விளையாட்டைப் பற்றி நீங்கள் எப்போதாவது கேள்விப்பட்டிருக்கிறீர்களா?
          நிகழ்வு ஹேண்ட்லர்களைப் பயன்படுத்துவதன் மூலம், FlappyBird இன் எங்கள் சொந்த
          தனிப்பயன் பதிப்பை நிரல் செய்ய கற்றுக்கொள்வோம்!
      5:
        text: நீங்கள் எழுதும் குறியீடு கணினிக்கான கட்டளைகளைக் குறிக்கும் தொகுதிகளை
          இழுத்து விடுவதை உள்ளடக்கியது. ஹூட்டின் கீழ், இந்த தொகுதிகள் ஒவ்வொன்றும்
          உண்மையான குறியீட்டால் குறிப்பிடப்படுகின்றன.
      6:
        text: நீங்கள் பணியிடத்தைப் பார்த்தால், உங்களுக்காக நிரப்பப்பட்ட சில பச்சைத்
          தொகுதிகள் உள்ளன - இவை "நிகழ்வு கையாளுபவர்கள்"
      7:
        text: நீங்கள் மவுஸைக் கிளிக் செய்யும் போது பறவை மடக்க வேண்டும் என்று நீங்கள்
          விரும்பினால், "FLAP" தொகுதியை பொருத்தமான நிகழ்வு கையாளுதலுடன் இணைப்பதன்
          மூலம் அதைச் செய்யலாம், இப்போது உங்கள் விளையாட்டில் நீங்கள் மவுஸைக் கிளிக்
          செய்யும் போதெல்லாம், பறவை மடக்கும்.
      8:
        text: இந்தச் செயல்பாட்டின் ஒவ்வொரு புதிரிலும், புதிய வகையான நிகழ்வுகளை பணியிடத்தில்
          பச்சைத் தொகுதிகளாக அறிமுகப்படுத்துவோம், மேலும் அந்த நிகழ்வுகளுக்குப் பதில்
          சேர்க்கும் பொருத்தமான தொகுதிகளை நீங்கள் தீர்மானிக்கலாம்.
      9:
        text: இதுபோன்ற கீழ்தோன்றும் அம்புக்குறியை நீங்கள் காணும்போது, ​​​​அதாவது,
          நீங்கள் அமைப்புகளை மாற்றலாம் - ஃபிளாப்பி தரையில் அடிக்கும்போது என்ன ஒலி
          கேட்க வேண்டும் என்பது போன்றது.
      10:
        text: இறுதி புதிரில் நீங்கள் உங்கள் சொந்த விளையாட்டை உருவாக்கி அதை உங்கள்
          நண்பர்களுடன் பகிர்ந்து கொள்ள முடியும். மகிழுங்கள்!
    loop_times:
      1:
        text: ஹாய், நான் மார்க்! லூப்கள் பற்றி அறிந்து கொள்வோம். லூப்களைப் பயன்படுத்தி,
          எந்தவொரு செயலையும் மீண்டும் மீண்டும் செய்ய, ஆயிரக்கணக்கான அல்லது பில்லியன்
          கணக்கான முறைகளை கணினிக்குக் கூறலாம்.
      2:
        text: இந்த புதிரில், பன்றிக்கு செல்ல பறவையை 5 இடங்களுக்கு முன்னோக்கி நகர்த்த
          வேண்டும்.
      3:
        text: எங்களுக்கு உதவ புதிய "ரிபீட்" பிளாக்கைப் பயன்படுத்தலாம்.
      4:
        text: 5 "முன்னோக்கி நகர்த்து" தொகுதிகளை இழுப்பதற்கு பதிலாக...
      5:
        text: '"ரிபீட்" பிளாக்கிற்குள் "மூவ் ஃபார்வேர்ட்" பிளாக்கை வைத்து, அதை எத்தனை
          முறை ரிபீட் செய்ய வேண்டும் என்று பிளாக்கில் ஒரு எண்ணை எழுதலாம்.'
      6:
        text: 'இது முக்கியமானது: நீங்கள் "மீண்டும்" தொகுதிக்குள் ஒன்றுக்கு மேற்பட்ட
          கட்டளைகளை வைக்கலாம்.'
      7:
        text: உங்கள் புதிய "மீண்டும்" தொகுதியைப் பயன்படுத்தி மகிழுங்கள்!
    loop_until:
      1:
        text: வணக்கம், நான் கிறிஸ். மியாமி ஹீட்டில் சேருவதற்கு முன்பு, கணினி அறிவியல்
          படிக்க ஜார்ஜியா டெக் சென்றேன். எங்கள் புதிய தொகுதியான "ரிபீட் டிவரை" பிளாக்கை
          முயற்சிப்போம்.
      2:
        text: பன்றியிடம் செல்ல பறவை எவ்வளவு தூரம் செல்ல வேண்டும் என்று நமக்குத் தெரியாவிட்டால்
          என்ன செய்வது?
      3:
        text: '"ரிபீட் டிவரை" பிளாக்கிற்குள் "முன்னோக்கி நகர்த்தும்" பிளாக்கை வைத்தால்,
          அது பன்றியை அடையும் வரை (அல்லது சுவரில் மோதும் வரை) பறவை முன்னோக்கி நகரும்.'
      4:
        text: 'இது முக்கியமானது: முன்பு போலவே, "ரிபீட் டிவரை" தொகுதிக்குள் பல தொகுதிகளை
          வைக்கலாம், மேலும் அவை அனைத்தும் மீண்டும் மீண்டும் செய்யப்படும்.'
    if:
      1:
        text: 'ஹாய், நான் பில்! ஒரு புதிய அடிப்படைக் கருத்தைக் கற்றுக் கொள்வோம்: "என்றால்"
          அறிக்கைகள். கணினிகள் இப்படித்தான் முடிவுகளை எடுக்கின்றன.'
      2:
        text: நீங்கள் தினமும் "If" அறிக்கைகளைப் பயன்படுத்துகிறீர்கள். தினமும் காலையில்
          வெளியில் செல்லும் முன், வெளியே மழை பெய்தால், நான் என் ஜாக்கெட்டை அணிய வேண்டும்
          என்று சொல்கிறீர்கள்.
      3:
        text: இடதுபுறம் பாதை இருக்கிறதா என்று சோம்பியிடம் சொல்லலாம், மேலும் அவர் இடதுபுறம்
          ஒரு பாதையைக் கண்டால், அவரை அந்த திசையில் திருப்பலாம்.
      4:
        text: இதற்கான குறியீட்டை எழுத, நமது "if" பிளாக்கை இழுத்து, அதற்குள் "இடதுபுறம்
          திரும்பு" பிளாக் போடுவோம்.
      5:
        text: இப்போது, ​​அதற்கு மேலே ஒரு "மூவ் ஃபார்வர்ட்" பிளாக் மற்றும் எல்லாவற்றையும்
          சுற்றி "ரீபீட்" பிளாக் போட்டால், ஒவ்வொரு முறை ஜாம்பி நகரும் போதும், இடதுபுறம்
          பாதை இருக்கிறதா என்று சோதித்து திரும்புவார். ஒவ்வொரு அடியிலும் ஒரு திருப்பத்தை
          சரிபார்க்க "மீண்டும்" கட்டளை முக்கியமானது.
      6:
        text: கணினி அறிவியலில் அறிக்கைகள் மிகவும் முக்கியமானவை என்றால். நான் எழுதிய
          முதல் புரோகிராம்களில் ஒன்று டிக்-டாக்-டோ கேம் ஆகும், மற்றவர் வெற்றிபெறப்
          போகிறார் என்றால், அவர் வெற்றிபெற அனுமதிக்கும் இடத்தைத் தடுக்கவும் என்று
          ஒரு If அறிக்கை இருந்தது.
      7:
        text: '"if" தொகுதியைப் பயன்படுத்தி மகிழுங்கள்!'
    if_else:
      1:
        text: வணக்கம், என் பெயர் சலோனி. உடல்நலம் மற்றும் மருத்துவத்தில் உள்ள சிக்கல்களைத்
          தீர்க்க கணினி அறிவியலைப் பயன்படுத்துகிறேன். "வேறு என்றால்" தொகுதி பற்றி
          அறிந்து கொள்வோம். இது "if" பிளாக் போல் தெரிகிறது, ஆனால் அது "வேறு" என்று
          கூறும் கூடுதல் பகுதியைக் கொண்டுள்ளது.
      2:
        text: '"செய்" என்று சொல்லும் இடத்தில் "முன்னோக்கி நகர்த்து" பிளாக்கையும்,
          "வேறு" என்று சொல்லும் இடத்தில் "இடதுபுறம் திரும்பு" பிளாக்கையும் வைத்தால்,
          ஜாம்பி 2 விருப்பங்களில் ஒன்றைத் தேர்ந்தெடுப்பார் என்று அர்த்தம். முன்னால்
          ஒரு பாதை இருந்தால், ஜாம்பி முன்னோக்கி நகரும், இல்லையெனில் (முன்னே ஒரு பாதை
          இல்லை), ஜாம்பி இடது பக்கம் திரும்பும்.'
      3:
        text: '"if" பிளாக்கைப் போலவே, "repeat" பிளாக்குகளுக்குள் "if else" பிளாக்குகளை
          வைக்கலாம், இதனால் ஜாம்பி நகர்ந்து கொண்டே இருக்கும், மேலும் "if else" பிளாக்
          திரும்புவதற்கு எங்காவது இருக்கிறதா என்று சோதிக்கும்.'
      4:
        text: இப்போது, ​​அந்த ஜோம்பிகளை அவர்கள் எங்கிருந்து பெறுகிறார்கள்!
    if_else_scrat:
      1:
        text: if-else ஸ்டேட்மெண்ட் என்பது இரண்டு விஷயங்களுக்கு இடையேயான முடிவு. நமது
          நண்பரான Scrat the squirrel உடன் if-else ஸ்டேட்மென்ட்டை எவ்வாறு பயன்படுத்தலாம்
          என்று பார்க்கலாம்.
      2:
        text: இந்த பிளாக் "if" பிளாக் போலவே தெரிகிறது, ஆனால் கீழே "வேறு" என்று ஒரு
          கூடுதல் பகுதி உள்ளது. "செய்" என்று சொல்லும் இடத்தில் "முன்னோக்கி நகர்த்து"
          பிளாக்கையும், "வேறு" என்று சொல்லும் இடத்தில் "இடதுபுறம் திரும்பு" பிளாக்கையும்
          வைத்தால், ஸ்க்ராட், முன்னால் ஒரு பாதை இருந்தால் அணில் முன்னோக்கி நகரும்
          என்று அர்த்தம். முன்னால் பாதை இல்லை என்றால், ஸ்க்ராட் இடதுபுறம் திரும்பும்.
      3:
        text: இது ஒரு முடிவை எடுப்பது மற்றும் அந்த முடிவின் அடிப்படையில் இரண்டு செயல்களில்
          ஒன்றைச் செய்வது. மேலும் "if" பிளாக்குகள் போல், "repeat" பிளாக்குகளுக்குள்
          "if-else" பிளாக்குகளை வைக்கலாம்.
      4:
        text: இப்போது அணில் அந்த ஏகோர்னைப் பெற ஸ்கிராட்டுக்கு உதவுவோம்!
    function:
      1:
        text: வணக்கம், நான் பிரினா, இன்ஸ்டாகிராமில் பொறியாளர். ஒரு செயல்பாடு என்பது
          நீங்கள் மீண்டும் மீண்டும் பயன்படுத்த விரும்பும் குறியீட்டின் சில வரிகள்,
          எனவே ஒவ்வொரு முறையும் அந்த குறியீட்டை எழுதுவதற்குப் பதிலாக, நீங்கள் ஒரு
          தொகுதியைப் பயன்படுத்தலாம்.
      2:
        text: செயல்பாடுகளை எவ்வாறு வரையறுப்பது என்பதை நாம் கற்றுக்கொள்வோம். செயல்பாட்டு
          வரையறைகள் மூலையில் ஒரு நட்சத்திரத்தைக் கொண்டுள்ளன. செயல்பாட்டின் பெயர் மேல்
          வரியில் எழுதப்பட்டுள்ளது.
      3:
        text: வரையறைக்குள் செல்லும் தொகுதிகள் அது என்ன செய்கிறது என்பதை நமக்குத் தெரிவிக்கின்றன.
          எனவே இந்த செயல்பாட்டு வரையறை "நிரப்பு 5" என்று அழைக்கப்படுகிறது, மேலும்
          இது "மீண்டும்" தொகுதி மற்றும் "நிரப்பு" தொகுதியால் ஆனது.
      4:
        text: வரையறை பணியிடத்தில் உள்ளது, ஆனால் செயல்பாடுகள் வகையிலிருந்து எங்கள்
          "நிரப்பு 5" செயல்பாட்டுத் தொகுதியை இழுக்கும் வரை எங்கள் விவசாயி செயல்பாட்டை
          இயக்க மாட்டார்.
      5:
        text: Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        text: 'வணக்கம், நான் மகின்டே! தற்போது "while தொகுதி" பற்றி கற்போம். '
      2:
        text: மேலே உள்ள ஸ்டேட்மென்ட் உண்மையாக இருக்கும் வரை "while block" அதன் உள்ளே
          நீங்கள் எதை வைத்தாலும் அதைச் செய்யும்.
      3:
        text: உதாரணமாக, விவசாயி ஒரு குவியலின் மீது நின்று கொண்டிருந்தால், அவளுக்குக்
          கீழே ஒரு குவியல் இருக்கும் போது, அவர் 1 மண்வெட்டியை அகற்றிக்கொண்டே இருப்பார்.
    loop_for:
      1:
        text: ஹாய், நான் ட்ரினா, நான் பிக்சரில் வேலை செய்கிறேன். நான் ஷ்ரெக் உட்பட
          பல திரைப்படங்களில் பணியாற்றியிருக்கிறேன்.
      2:
        text: இது எங்களின் புதிய "கவுண்டர்" லூப். இது மீண்டும் மீண்டும் செயல்களைச்
          செய்யும், மேலும் ஒவ்வொரு முறையும் நீங்கள் செயல்களை சிறிது மாற்றலாம்.
      3:
        text: இந்த எடுத்துக்காட்டில், எங்கள் "கவுண்டர்" லூப் "கவுண்டருடன் 50 முதல்
          90 ஆல் 10 வரை எண்ணுங்கள்" என்று கூறுகிறது மற்றும் அதன் உள்ளே, எங்களின் "சதுரத்தை
          வரையவும்" தொகுதி உள்ளது. "மாறிகள்" பிரிவில் இருந்து "கவுண்டர்" தொகுதியை
          "நீளம்" இடத்திற்கு இழுக்கவும்.
      4:
        text: அதாவது, எங்கள் கலைஞர் 50 பிக்சல் நீளப் பக்கங்களைக் கொண்ட ஒரு சதுரத்தை
          வரையப் போகிறார், அது 10 ஐக் கூட்டி 60 பிக்சல் நீளமுள்ள பக்கங்களைக் கொண்ட
          ஒரு சதுரத்தை வரைய வேண்டும். பின்னர் அது 10ஐச் சேர்த்து 90ஐ அடையும் வரை சதுரங்களை
          வரைந்து கொண்டே இருக்கும். எனவே நாம் 50, 60, 70, 80 மற்றும் 90 ஆகிய சதுரங்களைக்
          கொண்டிருப்போம்.
    parameters:
      1:
        text: வணக்கம், நான் ஜேனட், நான் ஜிங்காவில் பொறியாளர்.
      2:
        text: முக்கோணங்களின் தொகுப்பை வரைந்து அவற்றின் நீளம் வெவ்வேறு அளவுகளில் இருக்க
          வேண்டும் என்றால் என்ன செய்வது?
      3:
        text: அந்தக் குறியீட்டை நாம் கையால் எழுதலாம் அல்லது அளவுருக்கள் கொண்ட செயல்பாட்டைப்
          பயன்படுத்தலாம்.
      4:
        text: இதைச் செய்ய, "ஒரு முக்கோணத்தை வரையவும்" செயல்பாட்டு வரையறையில் நீல நட்சத்திரத்தைக்
          கிளிக் செய்யவும். பின்னர் "உள்ளீடு" தொகுதிக்கு "உள்ளீடு பெயர்" இழுக்கவும்.
      5:
        text: '"x" என்று சொல்லும் இடத்தில் "நீளம்" என்று எழுதி "Enter" ஐ அழுத்தினால்,
          உங்கள் செயல்பாட்டிற்கான நீள உள்ளீட்டை உருவாக்குவீர்கள்.'
      6:
        text: பின்னர் நட்சத்திரத்தின் மீது கிளிக் செய்யவும். இப்போது, நீங்கள் மாறிகள்
          வகையைக் கிளிக் செய்து, உங்கள் செயல்பாட்டு வரையறையின் "முன்னோக்கி நகர்த்து"
          தொகுதிக்குள் "நீளம்" தொகுதியை இழுக்க வேண்டும். பழைய எண் தொகுதியை இழுக்கவும்.
      7:
        text: அளவுருக்களுடன் உங்கள் செயல்பாட்டைப் பயன்படுத்த, செயல்பாடுகள் வகையைக்
          கிளிக் செய்து, "நீளத்துடன் ஒரு முக்கோணத்தை வரையவும்" செயல்பாட்டை இழுக்கவும்.
      8:
        text: வெவ்வேறு அளவுகளின் முக்கோணங்களை வரைவதற்கு வெவ்வேறு எண்களை உள்ளிடுவதற்கு
          இப்போது நீங்கள் கணிதத் தொகுதியைப் பயன்படுத்தலாம்.
    hoc_wrapup:
      1:
        text: 'வாழ்த்துகள்! நீங்கள் கடைசியாகத் தீர்த்த புதிரின் மூலம், எந்த ரோபோவுக்கும்,
          அது ஜாம்பியாக இருந்தாலும், பறவையாக இருந்தாலும், செவ்வாய் கிரகமாக இருந்தாலும்,
          எந்த நீளமான சுரங்கப்பாதை வழியாகவும் அதை எவ்வாறு கண்டுபிடிப்பது என்று எந்த
          ரோபோவுக்கும் சொல்லும் குறியீட்டை எழுதியுள்ளீர்கள். ஓட்டுநர் காராக இருந்தாலும் '
      2:
        text: நீங்கள் பயன்படுத்திய அடிப்படைக் கருத்துக்கள், நீங்கள் எப்போதாவது முயற்சிக்கும்
          ஒவ்வொரு நிரல் அல்லது பயன்பாட்டின் மையத்தில் உள்ளன. ரிபீட் லூப்கள், ஸ்டேட்மென்ட்
          வரை ரிபீட், ஸ்டேட்மென்ட் என்றால், வேறு ஸ்டேட்மென்ட்கள் பற்றி அறிந்து கொண்டோம்.
      3:
        text: உங்கள் முதல் மணிநேர குறியீட்டை நீங்கள் விரும்பியிருந்தால், கணினி அறிவியலில்
          உங்கள் கல்வியைத் தொடர code.org ஐப் பார்வையிடவும்! எங்கள் 20 மணிநேர பாடத்திட்டத்தை
          நீங்கள் முடித்தவுடன், நிரலாக்கத்தின் அடிப்படைகளை நீங்கள் தேர்ச்சி பெற்றிருப்பீர்கள்,
          மேலும் ஃபோன் ஆப்ஸ், ரோபோ வழிமுறைகள், கேம்களை எழுதுவது எப்படி என்பதை நீங்கள்
          கற்றுக் கொள்ளலாம்.
      4:
        text: 'தொழில்நுட்பம் நாம் செய்யும் அனைத்தையும் மாற்றுகிறது, நீங்கள் இளமையாக
          இருந்தாலும் பெரியவராக இருந்தாலும் பரவாயில்லை: நிரலாக்கமானது வேடிக்கையானது,
          இது ஆக்கப்பூர்வமானது, மேலும் எவரும் கற்றுக்கொள்ளலாம்!'
    20_wrapup:
      1:
        text: குறிப்புகள் விரைவில் வரும்!
    frozen_intro:
      1:
        text: வணக்கம், என் பெயர் லிண்ட்சே. நான் எனது சொந்த பயன்பாடுகளை மாதிரியாக,
          நடிக்கிறேன் மற்றும் எழுதுகிறேன். அன்னாவும் எல்சாவும் பனியின் மாயாஜாலத்தையும்
          அழகையும் ஆராயும்போது அவர்களுடன் சேர குறியீட்டைப் பயன்படுத்துவோம்.
      2:
        text: நீங்கள் பனி சறுக்கும்போது பனித்துளிகள் மற்றும் வடிவங்களை உருவாக்கி,
          குளிர்கால அதிசயத்தை உருவாக்குவீர்கள், அதை உங்கள் நண்பர்களுடன் பகிர்ந்து
          கொள்ளலாம்.
      3:
        text: அடுத்த ஒரு மணி நேரத்தில், குறியீடு செய்வது எப்படி என்பதற்கான அடிப்படைகளை
          நீங்கள் கற்றுக் கொள்ளப் போகிறீர்கள். பாரம்பரிய நிரலாக்கமானது பொதுவாக உரையில்
          இருக்கும், ஆனால் நாங்கள் பிளாக்லியைப் பயன்படுத்துவோம், இது நீங்கள் நிரல்களை
          எழுத இழுத்து விடக்கூடிய காட்சித் தொகுதிகளைப் பயன்படுத்துகிறது. பல்கலைக்
          கழக மாணவர்கள் கூட இப்படித்தான் அடிப்படைகளைக் கற்றுக்கொள்கிறார்கள். ஹூட்டின்
          கீழ், நீங்கள் இன்னும் குறியீட்டை உருவாக்குகிறீர்கள்.
      4:
        text: நிரல் என்பது கணினிக்கு என்ன செய்ய வேண்டும் என்று சொல்லும் வழிமுறைகளின்
          தொகுப்பாகும். எல்சா ஒரு எளிய வரியை உருவாக்க உதவும் குறியீடு அல்லது நிரலை
          உருவாக்குவோம். மிகவும் சிக்கலான வடிவங்களை உருவாக்க இதைப் பின்னர் பயன்படுத்துவோம்.
      5:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்,
          உங்கள் நிரலை இயக்கும் பனி மேற்பரப்பு உள்ளது. ஒவ்வொரு நிலைக்கான வழிமுறைகளும்
          மேற்பரப்பிற்கு கீழே எழுதப்பட்டுள்ளன.
      6:
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டியாகும், மேலும் இந்த தொகுதிகள் ஒவ்வொன்றும்
          எல்சாவும் அண்ணாவும் செய்யக்கூடிய ஒரு செயலாகும்.
      7:
        text: வலதுபுறத்தில் உள்ள வெள்ளை இடம் பணியிடம் என்று அழைக்கப்படுகிறது, இங்குதான்
          எங்கள் திட்டத்தை உருவாக்குவோம். பனி மேற்பரப்பைச் சுற்றிச் செல்ல, நீங்கள்
          "முன்னோக்கி நகர்த்து" தொகுதியைப் பயன்படுத்துவீர்கள்.
      8:
        text: இங்கே, "முன்னோக்கி நகர்த்து" தொகுதி, "100 பிக்சல்களால் முன்னோக்கி நகர்த்தவும்"
          என்று கூறுகிறது. நாம் "ரன்" அழுத்தினால், என்ன நடக்கும்? எல்சா திரையில் ஒரு
          குறிப்பிட்ட அளவு முன்னோக்கி நகர்கிறது, உண்மையில் 100 பிக்சல்கள்! பிக்சல்கள்
          உங்கள் கணினித் திரையில் அடிப்படையில் மிகச் சிறிய சதுரங்கள்.
      9:
        text: இந்த புதிரில் உள்ள மற்ற தொகுதி "90 டிகிரி வலதுபுறம் திரும்பவும்" என்று
          கூறுகிறது. இந்த "வலதுபுறம் திருப்பு" தொகுதியைப் பயன்படுத்தும்போது, எல்சா
          ஒரு குறிப்பிட்ட தொகையைத் திருப்புகிறது. எல்சா எவ்வளவு தூரம் திரும்ப வேண்டும்
          என்று நீங்கள் விரும்புகிறீர்கள். எல்சாவுக்கு முன்னால் உள்ள பாதையிலிருந்து
          கோணம் அளவிடப்படுகிறது. எனவே, இது 90 டிகிரி திருப்பம். இது 120 டிகிரி திருப்பம்.
      10:
        text: பிக்சல்கள் மற்றும் டிகிரிகளின் எண்ணிக்கையை அவற்றிற்கு அடுத்துள்ள அம்புக்குறிகளைக்
          கிளிக் செய்வதன் மூலம் மாற்றலாம் என்பதை நினைவில் கொள்ளுங்கள்.
    frozen_loops:
      1:
        text: ஹாய், நான் பாவ்லா! கணினிகள் செயல்களை மீண்டும் செய்வதில் மிகவும் நல்லது.
          நீங்கள் 10, 20 அல்லது 100 வரை எண்ணலாம். ஆனால் ஒரு கணினி ஒரு பில்லியன் அல்லது
          ஒரு டிரில்லியன் வரை எண்ணலாம். இது சலிப்படையாது மற்றும் சில வினாடிகள் மட்டுமே
          எடுக்கும். எண்ணுவது, அல்லது வரைதல், அல்லது எதுவாக இருந்தாலும் - கணினிகள்
          விஷயங்களை நூற்றுக்கணக்கான அல்லது பில்லியன் கணக்கான முறை மீண்டும் செய்ய முடியும்.
      2:
        text: நிரலாக்கத்தில், இதை ஒரு லூப் என்று அழைக்கிறோம். லூப் என்பது உங்கள் குறியீட்டை
          மீண்டும் செய்வது. அடுத்த புதிருக்கு, "ரிபீட்" பிளாக் மூலம் ஒரு சதுரத்தை
          உருவாக்க அண்ணாவுக்கு உதவுவதே உங்கள் இலக்காகும்.
      3:
        text: '"ரிபீட்" பிளாக்கிற்குள் நீங்கள் வைக்கும் எந்தக் குறியீட்டுத் தொகுதிகளும்
          நீங்கள் விரும்பும் பல முறை தொடர்ச்சியாக மீண்டும் மீண்டும் செய்யப்படும்.'
      4:
        text: ஒரு சதுரத்தை வரைய, நீங்கள் "முன்னோக்கி நகர்த்து" மற்றும் "வலதுபுறம்
          திரும்பு" தொகுதியை 4 முறை பயன்படுத்தலாம். ஆனால் கணினியை "முன்னோக்கி நகர்த்தவும்"
          "90 டிகிரி வலதுபுறம் திரும்பவும்" என்று ஒரு முறை சொல்லி, இந்த ஜோடி செயல்களை
          4 முறை செய்யவும். அதைச் செய்ய, நீங்கள் "முன்னோக்கி நகர்த்து" மற்றும் "வலதுபுறம்
          திரும்பு" தொகுதியை "மீண்டும்" தொகுதிக்குள் வைக்க வேண்டும்.
      5:
        text: நினைவில் கொள்ளுங்கள், "ரிபீட்" பிளாக்கில் உள்ள எண்ணை நீங்கள் எதற்கும்
          மாற்றலாம், மேலும் அது பிளாக்கிற்குள் உள்ளதை பல முறை திரும்பத் திரும்பச்
          செய்யும்.
    frozen_functions:
      1:
        text: வணக்கம், நான் கிறிஸ் போஷ். நான் ஒரு தொழில்முறை கூடைப்பந்து வீரர், நான்
          கல்லூரியில் குறியீடு செய்தேன்.
      2:
        text: கணினி அறிவியலின் மிக முக்கியமான கருத்துக்களில் ஒன்று புதிய கட்டளைகளை
          எவ்வாறு வரையறுப்பது என்பதுதான். பெரும்பாலான கணினி மொழிகளில் 100 வார்த்தைகள்
          அல்லது கட்டளைகள் மட்டுமே உள்ளன. உண்மையில், இந்த கட்டுமானத் தொகுதிகளில் இருந்து
          உங்கள் சொந்த புதிய சொற்களை வரையறுப்பதில் கலை மற்றும் மந்திரம் உள்ளது.
      3:
        text: இந்த கட்டளைகளின் வரிசையைப் பயன்படுத்தி ஒரு செயலை எப்படிச் செய்வது என்று
          கணினிக்குக் கற்றுக் கொடுத்தவுடன், அந்தச் செயலுக்கு உங்கள் சொந்தப் பெயரை
          நீங்கள் உருவாக்கிக் கொள்ளலாம், பின்னர் அதை மீண்டும் செய்வது எளிது. உங்கள்
          சொந்த கட்டளையை வரையறுத்து அதற்கு ஒரு பெயரைக் கொடுக்கும்போது, ​​அது ஒரு செயல்பாடு
          என்று அழைக்கப்படுகிறது.
      4:
        text: வணக்கம், நான் ஜெஸ். தொகுதிகளுடன் நிரலாக்கும்போது, நீங்கள் பல முறை பயன்படுத்த
          விரும்பும் செயல்களின் தொகுப்பு இருந்தால், நீங்கள் செயல்பாடுகளைப் பயன்படுத்துவீர்கள்.
          எடுத்துக்காட்டாக, சதுரத்தை உருவாக்க குறியீட்டை எழுதியுள்ளீர்கள்.
      5:
        text: '"சதுரத்தை உருவாக்கு" எனப்படும் செயல்பாடாக இதை நீங்கள் வரையறுக்கலாம்.'
      6:
        text: இப்போது உங்களிடம் ஒரு புதிய தொகுதி உள்ளது, பல சதுரங்களை உருவாக்க நீங்கள்
          பல முறை பயன்படுத்தலாம்.
      7:
        text: மிகவும் சிக்கலான வடிவங்களை உருவாக்க நிறைய எளிய வடிவங்களைப் பயன்படுத்தலாம்.
          அடுத்த புதிரில், வட்டத்தை உருவாக்க நீங்கள் சமீபத்தில் எழுதிய குறியீடு வெவ்வேறு
          அளவுகளில் வட்டங்களை உருவாக்கக்கூடிய புதிய செயல்பாடாக உங்களுக்குக் கிடைக்கும்.
          பனியில் சிக்கலான மற்றும் அழகான வடிவங்களை உருவாக்க எல்சாவுக்கு உதவ இதைப்
          பயன்படுத்த முடியுமா?
    playlab_intro:
      1:
        text: ப்லே லேப்பை பயன்படுத்தி கேம்களை உருவாக்கப் போகிறோம். நல்ல விளையாட்டுகளுக்கு
          ஒரு கதை உண்டு, ஒவ்வொரு கதைக்கும் நடிகர்கள் உள்ளனர். சூனியக்காரர்கள், வேற்றுக்கிரகவாசிகள்
          மற்றும் விலங்குகள் போன்றவற்றுடன் எப்படி பேசுவது, நகர்வது மற்றும் ஒருவருக்கொருவர்
          தொடர்புகொள்வது என்பதை நாங்கள் கற்றுக்கொள்வோம். இந்த டுடோரியலின் முடிவில்,
          நீங்கள் புதிதாக ஒரு விளையாட்டை உருவாக்கலாம் மற்றும் அதை உங்கள் நண்பர்களுடன்
          பகிர்ந்து கொள்ளலாம்.
      2:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்
          உங்கள் நிரல் இயங்கும் கேம்ஸ்பேஸ் உள்ளது. ஒவ்வொரு நிலைக்கான வழிமுறைகள் கீழே
          எழுதப்பட்டுள்ளன.
      3:
        text: நடுத்தர பகுதி கருவிப்பெட்டியாகும், மேலும் இந்த தொகுதிகள் ஒவ்வொன்றும்
          குறியீட்டின் ஒரு பகுதி. வலதுபுறத்தில் உள்ள வெள்ளை இடம் பணியிடம் என்று அழைக்கப்படுகிறது,
          இங்குதான் எங்கள் திட்டத்தை உருவாக்குவோம்.
      4:
        text: தொடங்குவதற்கு, உங்கள் தொகுதிகளை ஆரஞ்சு நிறத்துடன் இணைக்க வேண்டும். நீங்கள்
          மஞ்சள் கோட்டைப் பார்க்கும் வரை இழுப்பதன் மூலம் பல தொகுதிகளை ஒன்றாக இணைக்கலாம்,
          பின்னர் அவை ஒன்றாக ஒடிவிடும்.
      5:
        text: இந்த முதல் புதிரில், எங்கள் நடிகர் ஒரு பென்குயின், அதை "ஹலோ!" என்று
          சொல்ல வைப்போம். சொல்லும் தொகுதியை வெளியே இழுத்து, வென் ரன் பிளாக்குடன் இணைத்து,
          "ஹலோ" என்று தட்டச்சு செய்க. மூவ் ரைட் மற்றும் மூவ் பிளாக்குகளைப் பயன்படுத்தி
          பென்குயினை நகர்த்தவும் செய்யலாம். உங்களின் தொகுதிகள் கிடைத்தவுடன், நீங்கள்
          என்ன நிரல் செய்தீர்கள் என்பதைப் பார்க்க ரன் பொத்தானை அழுத்தவும்.
      6:
        text: தொடங்குங்கள் மற்றும் முடிவில், நீங்கள் அனைத்து வகையான வீரர்களுடன் உங்கள்
          சொந்த விளையாட்டை உருவாக்க முடியும், அவை ஊடாடலாம், மகிழ்ச்சியாக அல்லது சோகமாக
          மாறலாம், புள்ளிகளைப் பெறலாம் அல்லது ஃபயர்பால்ஸை வீசலாம் அல்லது ஒருவருக்கொருவர்
          மறைந்துவிடலாம். இது உங்கள் மற்றும் நீங்கள் செய்ய விரும்பும் விளையாட்டைப்
          பொறுத்தது.
    playlab_events:
      1:
        text: இப்போது, ​​எல்லா கேம் புரோகிராமர்களும் அன்றாடம் பயன்படுத்தும் ஒன்றைப்
          பற்றி அறியப் போகிறோம். அவை நிகழ்வுகள் என்று அழைக்கப்படுகின்றன. ஏதாவது நடக்கும்
          போது உங்கள் நிகழ்ச்சியைக் கேட்க ஒரு நிகழ்வு சொல்கிறது. அது நிகழும்போது,
          ​​அது ஒரு செயலைச் செய்கிறது.
      2:
        text: நிகழ்வுகளின் சில எடுத்துக்காட்டுகள் சுட்டி கிளிக், அம்பு பொத்தான் அல்லது
          திரையில் தட்டவும்.
      3:
        text: இங்கே, ஒரு வீரர் அவரைக் கிளிக் செய்யும் போது ஸ்பேஸ் போட் பூமியில் வாழ்பவர்களை
          வரவேற்கச் செய்யப் போகிறோம். நாங்கள் "கிளிக் செய்யப்படும் போது" பிளாக்கைப்
          பயன்படுத்துவோம் மற்றும் அதனுடன் "சொல்" தொகுதியை இணைப்போம். பிளேயர் ஸ்பேஸ்
          போட்டில் கிளிக் செய்யும் போது, ​​இந்த "கிளிக் செய்யும் போது" நிகழ்வுத் தொகுதியுடன்
          இணைக்கப்பட்டுள்ள அனைத்தும் நிகழ்த்தப்படும். உங்கள் வேற்றுகிரகவாசி என்ன சொல்கிறார்?
      4:
        text: '"போது அம்புக்குறி" தொகுதிகளும் உள்ளன. "நகர்த்து" தொகுதிகளை இவற்றுடன்
          இணைத்தால், உங்கள் நடிகர்களை மேலே, கீழ், இடது அல்லது வலதுபுறமாக நகர்த்த ஆரம்பிக்கலாம்.
          படிப்படியாக, உங்கள் விளையாட்டு மேலும் ஊடாடுகிறது.'
    playlab_repeat_forever:
      1:
        text: இது "எப்போதும் திரும்பவும்" தொகுதி. இந்தத் தொகுதிக்குள் எதுவும் விளையாட்டில்
          என்றென்றும் நடக்கும்.
      2:
        text: ஒரு நடிகர் எதையாவது திரும்பத் திரும்பச் செய்ய வேண்டும் என்று நாம் விரும்பினால்,
          பிளேயர் எதுவும் செய்யாமல், அந்தத் தொகுதிகளை "repeat forever" பிளாக்கிற்குள்
          வைப்போம்.
      3:
        text: இந்த அடுத்த புதிரில், ராஜ்யத்தின் எல்லைகளை இடது மற்றும் வலதுபுறமாக தொடர்ந்து
          ரோந்து செல்ல மந்திரவாதிக்கு உதவுவதே எங்கள் குறிக்கோள். மீண்டும் மீண்டும்
          கட்டளைகள் எவ்வாறு செயல்படுகின்றன என்பதைக் கற்றுக்கொள்வது, உங்கள் சொந்த விளையாட்டை
          நீங்கள் உருவாக்கும்போது ஒரு டன் நேரத்தை மிச்சப்படுத்தும்.
    C1_artist_intro:
      1:
        text: இவை உங்கள் டிரா தொகுதிகள். சாம்பல் கோடுகளை நிரப்ப கலைஞர் செல்ல வேண்டிய
          இடத்திற்கு நகர்த்த சரியான ஒன்றைப் பயன்படுத்தவும்.
      2:
        text: இவை ஜம்ப் பிளாக்குகள். நீங்கள் இவற்றைப் பயன்படுத்தும் போது, ​​உங்கள்
          கலைஞர் நகரும் ஆனால் வரையவில்லை, எனவே அடுத்த சாம்பல் கோட்டிற்கு செல்ல இதைப்
          பயன்படுத்தவும்.
    C1_bee_level_intro:
      1:
        text: தேனீக்கள் குளிர்ச்சியாக இல்லையா? இந்தப் புதிர்களின் அடுத்த தொகுப்பில்,
          தேனீ பூக்களுக்குச் செல்லவும், பூக்களில் இருந்து தேனைப் பெறவும், தேன் கூட்டிற்குப்
          பறந்து தேன் தயாரிக்கவும் உதவுவதே உங்கள் குறிக்கோள். இந்த பயிற்சிக்கு நீங்கள்
          "அமிர்தத்தைப் பெறுங்கள்" மற்றும் "தேனை உருவாக்கு" தொகுதிகளைப் பயன்படுத்த
          வேண்டும்.
      2:
        text: 'ஒவ்வொரு பூவிலும் வெவ்வேறு எண்ணிக்கையிலான தேன்கள் உள்ளன: 1, 2, 3 அல்லது
          அதற்கு மேற்பட்டவை. சிவப்பு பூக்களில் எவ்வளவு தேன் இருக்கிறது என்பதை மூலையில்
          உள்ள சிறிய எண்ணிக்கையில் நாம் அறிவோம். எனவே நீங்கள் முன்னோக்கிச் செல்வதற்கு
          முன் பூவிலிருந்து அனைத்து தேனையும் பெறுவதை உறுதிப்படுத்திக் கொள்ளுங்கள்.
          மேலும், ஒவ்வொரு தேன் கூட்டிலும் இவ்வளவு தேன் மட்டுமே இருக்கும்: 1, 2, 3
          அல்லது அதற்கு மேற்பட்டவை. எனவே தேன் கூட்டில் எவ்வளவு தேன் இருக்க முடியுமோ
          அவ்வளவு தேன் தயாரிக்க வேண்டும்.'
      3:
        text: நீங்கள் அனைத்து அமிர்தத்தையும் பெற முடிந்தால், அனைத்து தேனையும் செய்ய
          முடிந்தால், நீங்கள் வெற்றியடைந்து அடுத்த நிலைக்குச் செல்லுங்கள். இல்லையெனில்,
          இந்த புதிரை மீண்டும் முயற்சிக்க வேண்டும். சிறிது நேரம் விளையாடி, ஒரு புரோகிராமரை
          "தேனீ" செய்வது எப்படி இருக்கும் என்று பாருங்கள்!
    C1_bee_loops:
      1:
        text: லூப் என்பது செயல்பாட்டின் மறுநிகழ்வு. எனவே, ஹைவ் ஒன்றைப் பரிசோதிக்கச்
          சென்று, நான் ஒரு சட்டகத்தைப் பார்த்துவிட்டு, அதை மீண்டும் வைத்தேன், அதனால்
          அதே செயல்பாட்டைப் பலமுறை மீண்டும் செய்கிறேன். இது சுற்றி சுற்றி வருகிறது,
          அதே செயல்பாட்டை பல முறை செய்கிறது.
      2:
        text: இந்த நிலையில், தேனீ பூவிலிருந்து மூன்று தேன் சேகரிக்க வேண்டும் என்று
          நாங்கள் விரும்புகிறோம். மூன்று "அமிர்தத்தைப் பெறு" தொகுதிகளைப் பயன்படுத்துவதற்குப்
          பதிலாக, நீங்கள் மூன்று முறை அமிர்தத்தைப் பெற மீண்டும் பிளாக்கைப் பயன்படுத்தப்
          போகிறீர்கள். "ரன்" என்பதை அழுத்தி, நீங்கள் சரியாகச் சொன்னீர்களா என்று பார்க்கவும்.
          அருமை!
    C1_bigevent_unplugged:
      1:
        text: இந்த பாடம் பெரிய நிகழ்வு என்று அழைக்கப்படுகிறது. ஒரு பொத்தானை அழுத்துவது
          அல்லது மவுஸைக் கிளிக் செய்வது போன்ற நிகழ்வுகளைப் பயன்படுத்தி எங்கள் நிரல்களை
          எவ்வாறு கட்டுப்படுத்துவது மற்றும் உண்மையில் ஒரு நிரல் இயங்கும் முறையை எவ்வாறு
          மாற்றுவது என்பது பற்றியது.
      2:
        text: இந்தப் பாடத்திற்கு, காகித ரிமோட் கண்ட்ரோல் மூலம் நீங்கள் கட்டுப்படுத்தப்படுவீர்கள்.
          இது ஒரு உண்மையான நேரலை வீடியோ கேம் போன்றது.
      3:
        text: ஒரு நிகழ்வு என்பது ஏதாவது நடக்கக் காரணமான ஒரு செயலாகும். சுட்டியில்
          உள்ள பொத்தானைக் கிளிக் செய்தால், வலைப்பக்கம் ஏற்றப்படும். அது ஒரு நிகழ்வு.
          ஸ்க்ரோல் செய்ய டேப்லெட்டில் உங்கள் திரையைத் தொடும்போது, ​​அதுவும் ஒரு நிகழ்வாகும்.
          நிகழ்வுகள் பயனர்களுக்குத் தேவையான அல்லது விரும்பும் போதெல்லாம் உங்கள் திட்டத்தை
          இயக்க அனுமதிக்கும் ஒரு சிறந்த வழியாகும்.
      4:
        text: நாம் அனைவரும் பதிலளிக்கும் விஷயங்கள் நடக்கும். நாங்கள் பசியை உணர்கிறோம்,
          நாங்கள் குளிர்சாதன பெட்டிக்கு செல்கிறோம். தபால்காரர் வருவதை நாங்கள் கேட்கிறோம்,
          அவர் எங்கள் அஞ்சலை அஞ்சல் பெட்டியில் வைப்பார், பின்னர் நாங்கள் எங்கள் மின்னஞ்சலைப்
          பெறுகிறோம். ஒரு பொத்தானை அழுத்துவது அல்லது ஜாய்ஸ்டிக்கை நகர்த்துவது போன்ற
          நிகழ்வுகள் அவை. அவை நம்மை ஏதாவது செய்ய தூண்டும் நிகழ்வுகள்.
      5:
        text: வீடியோ கேம்களில், "புதுப்பிப்பு" என்ற நிகழ்வு உள்ளது, அது ஒரு நொடிக்கு
          30 அல்லது 60 முறை நடக்கும். வீடியோ கேம் புரோகிராமர்களுக்கு, பொத்தான்கள்
          அல்லது ஜாய்ஸ்டிக்கை விட இது மிகவும் முக்கியமான நிகழ்வாகும்.
      6:
        text: நாங்கள் பார்த்துக்கொண்டிருக்கும் முக்கிய நிகழ்வு "அப்டேட்" டிக் நடக்கிறது.
          பின்னர் டிக் உள்ள ஜாய்ஸ்டிக்கை சரிபார்க்கிறோம். எனவே நாங்கள், "ஓ, யாரோ இந்த
          சட்டகத்தின் பொத்தானை அழுத்தினார்களா? ஆம் அல்லது இல்லை?" நிகழ்வுகள் இல்லாமல்,
          வீரர் நகர முடியாது, நீங்கள் குதிக்க முடியாது, என்ன நடக்கிறது என்பதைக் கட்டுப்படுத்த
          முடியாது. வீடியோ கேம் எதையும் அனிமேட் செய்ய முடியாது.
    C1_building_foundation:
      1:
        text: மணல் சிற்பத்தில் தோல்வி என்பது திட்டத்தின் ஒரு பகுதி என்பதை நீங்கள்
          அறிந்து கொள்ள வேண்டும். ஆனால் நீங்கள் விடாமுயற்சியுடன் இருந்தால், அது உங்களுக்கு
          சிறப்பாகவும் உற்சாகமாகவும் இருக்கும். விடாமுயற்சி என்பது விளையாட்டின் பெயர்.
          அதனுடன் இருங்கள், நீங்கள் அதை விரும்புவீர்கள்.
      2:
        text: இந்த பாடம் அடித்தளத்தை உருவாக்குதல் என்று அழைக்கப்படுகிறது. இந்த பாடத்தில்,
          மிகவும் கடினமான பணியை நாங்கள் மேற்கொள்வோம். இந்த கோப்பைகளில் ஒன்றைப் போல
          ஒரு கட்டமைப்பை எப்படி உருவாக்குவது என்பதை நீங்கள் கண்டுபிடிப்பீர்கள், மேலும்
          அது ஒரு புத்தகத்தின் எடையைத் தாங்கும் அளவுக்கு வலுவாக இருக்க வேண்டும்.
      3:
        text: நம் படைப்பு பலனளிக்காத நேரங்கள் இருக்கலாம். நாம் விரக்தியடைந்து விட்டுக்கொடுக்க
          விரும்பும் நேரங்கள் இருக்கலாம். அந்த தருணங்கள் நிறைய இருக்கலாம். ஆனால் நாம்
          தொடர்ந்து முயற்சி செய்தால், மீண்டும் அதை எங்களின் சிறந்த காட்சியைக் கொடுங்கள்,
          விரைவில் அதை நாங்கள் பெறுவோம்.
      4:
        text: விடாமுயற்சி என்பது நீங்கள் உண்மையிலேயே கைவிட விரும்பும் போது அங்கேயே
          தொங்கிக் கொண்டிருப்பதுதான். நீங்கள் புதிதாகவும் வித்தியாசமாகவும் ஒன்றை உருவாக்க
          விரும்பினால், வழியில் நிறைய தோல்விகள் இருக்கும்.
      5:
        text: விடாமுயற்சியின் தந்திரம், நீங்கள் விரக்தியடைந்துள்ளதால், வெளியேறுவதற்குப்
          பதிலாக, தொடர்ந்து உங்கள் தோல்விகளில் இருந்து கற்றுக்கொள்வதைத் தேர்ந்தெடுப்பதாகும்.
          விரக்தி என்பது மூலையில் ஏதோ அற்புதமான ஒன்று இருக்கிறது என்று அர்த்தம். எனவே
          நீங்கள் அதை அடைவதற்கு முன் வெளியேற வேண்டாம். வூ!
    C1_getting_loopy:
      1:
        text: ஹாய், என் பெயர் மிரல் கோட்ப் மற்றும் நான் இலுமினேட்டை உருவாக்கியவன்.
          எனது வேலையில், நடனங்கள் மற்றும் நிரலாக்க லைட்சூட்கள் இரண்டிலும் நாங்கள்
          பயன்படுத்தும் ஒன்று உள்ளது. அது சுழல்கள்! சுழல்கள் ஒரு செயலை மீண்டும் மீண்டும்
          செய்கின்றன.
      2:
        text: ஹூலா ஹூப் சுழலாமல் இருக்க எனது செயல்கள் போன்ற ஒன்றை நீங்கள் பலமுறை திரும்பத்
          திரும்பச் செய்தால், நான் அந்தச் செயலின் லூப்பைச் செய்கிறேன். இது ஒரு வளையம்.
          இது ஒரு வளையம். மற்றும் இது ஒரு வளையம்.
      3:
        text: இன்று நாங்கள் ஒரு நடன விருந்துக்கு செல்கிறோம். புதிய நடனத்துடன் லூப்களை
          நடிப்போம். மறு செய்கை. நடனத்தைப் பயன்படுத்தி லூப்களைப் பற்றி அறியப் போகிறோம்.
          நீங்கள் இரண்டு எளிய படிகளைக் கற்றுக் கொள்வீர்கள் மற்றும் நடனத்தை முடிக்க
          அவற்றை மீண்டும் மீண்டும் செய்யலாம்.
      4:
        text: நீங்கள் கற்றுக்கொள்ள வேண்டிய படிகள் இங்கே. கைதட்டுங்கள். உங்கள் கைகளை
          உங்கள் தலைக்கு பின்னால் வைக்கவும். உங்கள் கைகளை உங்கள் இடுப்பில் வைக்கவும்.
          உங்கள் இடது கையை உயர்த்தவும். உங்கள் வலது கையை உயர்த்தவும். மிகவும் எளிமையானது,
          இல்லையா? சில நடனப் படிகளை லூப்களில் வைப்பதன் மூலம் திசைகளைச் சுருக்கலாம்
          என்பதை நீங்கள் கண்டுபிடிப்பீர்கள்.
      5:
        text: நாங்கள் உண்மையில் எங்கள் நடனத்தில் வளையங்களைப் பயன்படுத்துகிறோம். நடனக்
          கலைஞர்கள் கணினிகளை அணிந்துள்ளனர், அனைவரும் ஒரே நெட்வொர்க்கில் உள்ளனர். நான்
          மீண்டும் மீண்டும் அதே நடனக் கலைஞர்களுக்கு விளக்குகளை லூப் செய்யலாம். லூப்பில்
          நான் மீண்டும் மீண்டும் இந்த ஆறு நடனக் கலைஞர்கள் மூலம் மீண்டும் மீண்டும்
          லூப் செய்ய வேண்டும் என்று நான் கூறுவேன், பின்னர் வளையத்திற்குள் நீங்கள்
          ஒளியின் வேகத்தை அதிகரிக்க வேண்டும். மற்றும் அனைத்து சுழல்கள் மூலம் உருவாக்கப்பட்டதுதான்.
          கணினி அறிவியலில் சுழல்கள் முக்கியமானவை, ஏனெனில் அவை நமது வேலையைச் சுருக்கமாகவும்
          எளிதாகவும் செய்கின்றன.
    C1_happy_maps_unplugged:
      1:
        text: 'இந்த பாடம் மகிழ்ச்சியான வரைபடம் என்று அழைக்கப்படுகிறது. இன்று நாங்கள்
          எங்கள் உரோமம் கொண்ட சிறிய தோழியான ஃப்ளர்ப் பழத்தை பெற '
      2:
        text: உங்கள் ஃப்ளர்பை உங்கள் பழத்திற்கு செல்லச் செய்யுங்கள். இதைச் செய்ய,
          ஃப்ளர்ப் எந்த வழியில் செல்ல வேண்டும் என்பதைக் கண்டுபிடித்து அம்புகளால் அவளை
          இயக்க வேண்டும். ஃப்ளர்ப் ஆப்பிளை அடைய, ஃப்ளர்ப் எந்த திசையில் செல்ல வேண்டும்?
          அதை மேலே செல்லச் செய்ய வரி.
      3:
        text: அதைப் பெற, அது செல்ல வேண்டிய திசையை வட்டமிடுங்கள்.
      4:
        text: நீங்கள் தீர்க்க முயற்சிக்கும் வரைபடத்திற்கு அடுத்ததாக அம்புகளை ஒட்டுவதன்
          மூலம் உங்கள் அல்காரிதத்தை உருவாக்கவும். இரண்டாவது அதே தான் ஆனால் கீழே போகிறது.
      5:
        text: இது காகிதத்துடன் நிரல் செய்வது போன்றது. அவ்வளவுதான்!
    C1_maze_debugging:
      1:
        text: பிழைத்திருத்தம் என்பது சிக்கல்களைக் கண்டறிந்து சரிசெய்வதாகும். பிழைகளை
          சரிசெய்ய பல வழிகள் உள்ளன. ஏதேனும் தவறு நடந்த இடத்தை நீங்கள் கண்டுபிடிக்கும்
          வரை படிப்படியாக நகர்த்துவது எளிதான ஒன்றாகும். இங்கே நான் பீமில் பேக் ஹேண்ட்ஸ்பிரிங்
          செய்ய முயற்சிக்கிறேன் ஆனால் நான் தொடர்ந்து விழுந்து கொண்டே இருக்கிறேன்.
      2:
        text: நான் ஒவ்வொரு பகுதியையும் படிப்படியாகச் சென்று என் தவறு எங்கே என்று உணர்ந்தேன்.
          நான் என் கைகளை பீமின் மீது சரியாக வைக்கவில்லை. எனவே எனது புதிய கை நிலையுடன்
          கற்றை மீது மற்றொரு பின்புற ஹேண்ட்ஸ்பிரிங் முயற்சித்தேன், எனக்கு அது கிடைத்தது.
          என் பின் ஹேண்ட்ஸ்பிரிங் பிழைத்திருத்தத்தில் நான் மிகவும் மகிழ்ச்சியடைந்தேன்.
      3:
        text: பிழைத்திருத்தம் பற்றி அறிய, ஏற்கனவே மேடையில் உள்ள தொகுதிகளின் தொகுப்புடன்
          தொடங்குகிறோம். இந்தத் தொகுதிகள் உங்களை இலக்கை அடையச் செய்யாது என்பதை நீங்கள்
          கவனிப்பீர்கள். நாம் தீர்வை பிழைத்திருத்தம் செய்து அதை சரிசெய்ய வேண்டும்.
          என்ன தவறு நேர்ந்தது? நீங்கள் இன்னும் ஒரு தொகுதி மேற்கு நோக்கி செல்ல வேண்டும்
          என்பதை நீங்கள் கவனிப்பீர்கள்.
      4:
        text: மற்றொரு மேற்குத் தொகுதியைச் சேர்த்து, நீங்கள் அதைச் சரியாகச் சொன்னீர்களா
          என்பதைப் பார்க்க, ரன் அழுத்துவதன் மூலம் இதைச் சரிசெய்வோம். ஆம், உங்களுக்கு
          புரிந்தது!
    C1_maze_intro_sequencing:
      1:
        text: இந்த புதிருக்கு, நீங்கள் பறவையை பன்றிக்கு கொண்டு செல்ல வேண்டும். புதிரைப்
          பார்த்து, அது என்ன திசையில் செல்ல வேண்டும் என்பதைப் பார்க்கவும்.
      2:
        text: கருவிப்பெட்டியில் இருந்து பணியிடத்திற்கு தொகுதிகளை இழுக்க வேண்டும்.
          அது "ரன் ரன்" பிளாக்கின் கீழ் உள்ளதா என்பதை உறுதிசெய்து, சரியான தீர்வு கிடைத்துவிட்டதாக
          நீங்கள் நினைக்கும் போது, ​​"ரன்" என்பதைக் கிளிக் செய்து, பறவை பன்றியிடம்
          செல்வதைப் பார்க்கலாம்.
    C1_maze_loops:
      1:
        text: கட்டளைகளை மீண்டும் செய்வதில் கணினிகள் மிகவும் சிறந்தவை. ஒரு நபராக, நீங்கள்
          ஒரே விஷயத்தை தொடர்ச்சியாக பல முறை செய்ய வேண்டியிருந்தால் நீங்கள் மிகவும்
          சலிப்படைவீர்கள். ஆனால் ஒரு கணினி அதையே மில்லியன் கணக்கான அல்லது பில்லியன்
          கணக்கான முறை செய்ய முடியும், மேலும் சலிப்படையாமல், அதை நன்றாகச் செய்ய முடியும்.
      2:
        text: |2-

          எடுத்துக்காட்டாக, பேஸ்புகில் உள்ள அனைவருக்கும் மின்னஞ்சல் அனுப்புவதன் மூலம் பிறந்தநாள் வாழ்த்துக்களைத் தெரிவிக்க விரும்பினால், அந்த மின்னஞ்சல்களை அனைவருக்கும் எழுதுவதற்கு எனக்கு ஒரு நூற்றாண்டுக்கும் மேலாக ஆகலாம். ஆனால் ஒரு சில வரிகளைக் கொண்டு, பேஸ்புக்கில் உள்ள அனைவருக்கும் பிறந்தநாள் வாழ்த்துக்களைத் தெரிவித்து மின்னஞ்சல் அனுப்ப ஒரு அமைப்பு உள்ளது.
      3:
        text: இந்த நிலையில் பறவையை பன்றிக்கு கொண்டு செல்ல... மூன்று வடக்கு தொகுதிகளை
          பணியிடத்திற்கு இழுப்பதை விட, நீங்கள் "ரிபீட்" பிளாக்கைப் பயன்படுத்துவீர்கள்.
          பணியிடத்திற்கு "ரிபீட்" பிளாக்கை இழுத்து எண் 3 ஐ உள்ளிடவும். பிறகு "மூவ்
          நார்த்" பிளாக்கை "ரிபீட்" பிளாக்கில் இழுத்து, "ரன்" என்பதை அழுத்தி நீங்கள்
          அதை சரியாகப் புரிந்து கொண்டீர்களா என்பதைப் பார்க்கவும். வாழ்த்துக்கள், நீங்கள்
          புரிந்துகொண்டீர்கள்!
    C1_moveitmoveit_unplugged:
      1:
        text: இந்த பாடம் அதை நகர்த்தவும், அதை நகர்த்தவும் என்று அழைக்கப்படுகிறது.
          திசைகாட்டி ரோஜாவில் தொடங்கி ஸ்மைலி ஃபேஸ் இலக்கை நோக்கி எங்கள் நண்பர்களை
          அழைத்துச் செல்ல நாங்கள் ஒன்றாக ஒரு திட்டத்தை எழுதப் போகிறோம்.
      2:
        text: ஆனால் ஸ்மைலி முகம் குனிந்து, அங்கு செல்வது எப்படி என்று ஒருவருக்கு மட்டுமே
          தெரியும். இந்த திட்டத்தை தொடங்குவோம்.
      3:
        text: ஒரு நிரல் என்பது ஒரு இயந்திரத்தால் இயக்கக்கூடிய ஏதோவொன்றில் குறியிடப்பட்ட
          ஒரு அல்காரிதம் ஆகும். நம்மில் பெரும்பாலோர் கணினியில் எழுதும் நிரல் என்று
          நினைக்கிறோம். நிகழ்ச்சிகள் அதற்கு மிகவும் நல்லது ஆனால் அவை மற்ற இடங்களிலும்
          உதவியாக இருக்கும். நீங்கள் உங்கள் சொந்த விளையாட்டை உருவாக்கலாம் அல்லது உங்களுக்காக
          விஷயங்களைச் செய்ய ஒரு ரோபோவை நிரல் செய்யலாம்.
    C1_going_places_safely:
      1:
        text: என் பெயர் எரேமியா. வணக்கம்! எனக்கு ஏழு வயது. நான் என் அம்மாவின் கணினியில்
          விளையாட விரும்புகிறேன் ஆனால் நான் எப்போதும் முதலில் அனுமதி பெறுகிறேன். "அம்மா,
          நான் கணினியில் செல்லலாமா? நிச்சயமாக அன்பே!"
      2:
        text: நான் என் அம்மாவின் கணினியை விரும்புகிறேன், ஏனென்றால் நான் இணையத்தில்
          செல்ல முடியும். இணையம் உங்கள் சுற்றுப்புறத்தைப் போன்றது. நீங்கள் குளிர்ச்சியான
          இடங்களுக்குச் செல்லலாம், குடும்பத்தினருடனும் நண்பர்களுடனும் பேசலாம் மற்றும்
          நிறைய புதிய விஷயங்களைக் கற்றுக்கொள்ளலாம்.
      3:
        text: நேற்று, என் வீட்டிற்கு அருகில் உள்ள ஒரு உயிரியல் பூங்காவிற்கு சென்றேன்.
          நான் ஒரு குட்டி வரிக்குதிரையைப் பார்த்தேன். நான் அவளுடைய படத்தை எடுத்து
          அவளது கோடுகளின் நிறத்தை மாற்றினேன், பின்னர் ஒரு தொப்பியைச் சேர்த்து அதை
          எனது அசத்தல் விலங்குகளின் சேகரிப்பில் சேர்த்தேன். அருமை! பிறகு வெகு தொலைவில்
          உள்ள இடத்திற்குச் சென்றேன். நான் கென்யா சென்றேன். அது ஆப்பிரிக்காவில் உள்ள
          ஒரு நாடு. நிறைய வரிக்குதிரைகள் வாழ்கின்றன.
      4:
        text: சில சமயங்களில் இணையத்தில் வேறு மாநிலத்தில் வசிக்கும் என் பாட்டியைப்
          போல எனக்குத் தெரிந்தவர்களிடம் பேசுவேன். வணக்கம் பாட்டி! என் பிறந்தநாளுக்கு
          அனுப்பும் குக்கீகளை அவள் எனக்கு உருவாக்குகிறாள். "அருமை, இன்டர்நெட் ஸ்மெல்லோராமா
          இருக்கணும்!" நான் என் உறவினரைப் போல இணையத்தில் வெவ்வேறு நபர்களுடன் பேச முடியும்,
          ஆனால் எனக்குத் தெரிந்தவர்களுடன் மட்டுமே பேசுவேன்.
      5:
        text: ஆர்வத்தில் எனக்கு மிகவும் பிடித்தது என்னவென்றால், நான் வேடிக்கையான கேம்களை
          விளையாடுவேன். மதிப்பெண்! புதிய விஷயங்களை வரைந்து உருவாக்கவும், அதை எனது
          நண்பர்களுடன் பகிர்ந்து கொள்ளவும் விரும்புகிறேன். குளிர்! சில நேரங்களில்
          நான் புதிய விஷயங்களைக் கற்றுக் கொள்ளும் வலைத்தளங்களைப் பார்க்கிறேன், ஆனால்
          எனக்கு ஏற்ற வலைத்தளங்களில் எப்போதும் ஒட்டிக்கொள்கிறேன். ஆஹா, டைனோசர்கள்!
      6:
        text: 'இணையம் மிகவும் வேடிக்கையான இடம். ஆனால் உங்கள் அருகில் உள்ள தெருவை கடக்கும்போது,
          ஆன்லைனில் செல்லும்போதும் கவனமாக இருக்க வேண்டும். நினைவில் கொள்ள வேண்டிய
          மூன்று விதிகள் இங்கே. விதி எண் 1: எப்போதும் உங்கள் பெற்றோரிடம் முதலில் கேளுங்கள்.
          விதி எண் 2: உங்களுக்குத் தெரிந்தவர்களிடம் மட்டும் பேசுங்கள். விதி எண் 3:
          உங்களுக்கு ஏற்ற இடங்களை ஒட்டிக்கொள்ளவும்.'
      7:
        text: ஆஹா, வேடிக்கையாக இருந்தது! இரவு உணவு நேரம். நான் இப்போது வெளியேறுகிறேன்.
          அடுத்து நான் எங்கு செல்லலாம் என்பதைப் பார்க்க, மீண்டும் உள்நுழைவதற்கு என்னால்
          காத்திருக்க முடியாது.
    C1_pair_programming:
      1:
        text: இன்று நாம் ஜோடி நிரலாக்கத்தைப் பற்றி அறிந்து கொள்ளப் போகிறோம். ஜோடி
          நிரலாக்கத்தில் நீங்கள் ஒரு குழுவாக வேலை செய்கிறீர்கள். ஒரு கணினியை ஏன் இருவர்
          பயன்படுத்த வேண்டும்? ஏனென்றால் இரண்டு தலைகள் ஒன்றை விட சிறந்தவை. ஜோடி நிரலாக்கத்தில்
          நீங்களும் உங்கள் கூட்டாளியும் ஒரு கணினியில் ஒன்றாக அமர்ந்திருக்கப் போகிறீர்கள்,
          நீங்கள் இருவரும் ஒரே திட்டத்தில் வேலை செய்யப் போகிறீர்கள்.
      2:
        text: ஜோடி நிரலாக்கத்தில், கார் ஓட்டுவது போல் ஒருவர் ஓட்டுநராகவும், மற்றொரு
          நபர் நேவிகேட்டராகவும் உள்ளனர். இயக்கி கணினியில் அமர்ந்து, விசைப்பலகை மற்றும்
          மவுஸ் அல்லது தொடுதிரையைப் பயன்படுத்தி கணினியின் முக்கிய செயல்களைக் கட்டுப்படுத்துகிறார்.
          மற்றவர் நேவிகேட்டர். ஓட்டுநரின் கேள்விகளுக்குப் பதிலளிப்பதன் மூலமும், சாத்தியமான
          சிக்கல்கள் அல்லது தவறுகளைச் சுட்டிக்காட்டுவதன் மூலமும் நேவிகேட்டர் ஓட்டுநருக்கு
          உதவுகிறது.
      3:
        text: வெற்றிகரமான ஜோடி நிரலாக்கத்திற்கு தொடர்பு முக்கியமானது. அவமானங்கள் வேண்டாம்,
          மரியாதையுடன் இருங்கள், ஒரு முதலாளியாக நேவிகேட்டராக இருக்காதீர்கள், ஏனென்றால்
          பின்சீட் ஓட்டுநரை யாரும் விரும்புவதில்லை. நீங்களும் உங்கள் துணையும் எப்போதும்
          பேசிக்கொண்டே இருக்க வேண்டும். அவர் அல்லது அவர் என்ன செய்கிறார் என்பதை டிரைவர்
          விளக்க முடியும். மேலும் நேவிகேட்டர் அடுத்து என்ன செய்ய வேண்டும் என்று பரிந்துரைக்க
          உதவும்.
      4:
        text: நேவிகேட்டர் பெரிய படத்தைப் பற்றி சிந்திக்க வேண்டும் மற்றும் டிரைவர்
          விவரங்களில் கவனம் செலுத்துகிறார். இரண்டு பாத்திரங்களும் முக்கியமானவை. ஜோடி
          நிரலாக்கம் என்பது ஒரு குழுவாக இணைந்து செயல்படுவது.
    C1_planting_seed:
      1:
        text: இந்த பாடம் விதைகளை நடுதல் என்று அழைக்கப்படுகிறது, மேலும் இது அல்காரிதம்களைப்
          புரிந்துகொள்ள உதவும். அல்காரிதம் என்பது குறிப்பிட்ட வழிமுறைகள் ஆகும், அவை
          எதையாவது செய்ய வேண்டிய வரிசையை விளக்குகின்றன. காலை உணவு சாப்பிடுவது அல்லது
          பல் துலக்குவது போன்ற அன்றாட விஷயங்கள் கூட ஒரு வேலையைச் செய்ய சிறிய படிகள்
          தேவைப்படும் வழிமுறைகள்.
      2:
        text: கம்ப்யூட்டர்கள் உண்மையில் புத்திசாலித்தனமாக இருக்கும், ஆனால் நீங்கள்
          அவர்களுக்கு என்ன வேண்டும் என்பதை படிப்படியாகச் சொன்னால் மட்டுமே அவை உங்களைப்
          புரிந்து கொள்ள முடியும். வழிமுறைகளைப் பற்றிய பெரிய விஷயம் என்னவென்றால்,
          நீங்கள் வழிமுறைகளைப் பின்பற்றினால், உங்களுக்குத் தெரியாத ஒன்றை முன்கூட்டியே
          செய்ய முடியும். இது ஒரு செய்முறையைப் பின்பற்றுவது போன்றது.
      3:
        text: இன்று நாம் நமது சொந்த விதைகளை ஒரு வழிமுறையைப் பயன்படுத்தி விதைக்கப்
          போகிறோம். படங்களைத் துண்டித்து உங்கள் சொந்த அல்காரிதத்தை உருவாக்கவும். ஒரு
          விதையை நடவு செய்வதற்கான படிகளைக் காட்டும் படங்களைத் தேர்ந்தெடுத்து, அந்த
          படங்களை சரியான வரிசையில் அமைக்கவும்.
      4:
        text: இப்போது, உங்கள் அல்காரிதம் செயல்படுகிறதா என்று பார்க்க வேண்டிய நேரம்
          இது. அல்காரிதத்தில் உள்ள படிகளை மிகவும் கவனமாக பின்பற்றவும். அவை சரியான
          வரிசையில் உள்ளதா? அல்காரிதத்தைப் பின்பற்றி விதையை விதைப்பதில் வெற்றி பெற்றீர்களா?
          இது படங்களுடன் நிரலாக்கம் போன்றது!
      5:
        text: |2-

          நாம் சாக்லேட் செய்ய விரும்பினால், அந்த செயல்முறைக்கு பல பெரிய படிகள் உள்ளன. அந்த பெரிய படிகள் ஒவ்வொன்றும் அதன் சொந்த சிறிய படிகளைக் கொண்டுள்ளது. சாக்லேட்டை நாம் எப்படி ருசிக்க விரும்புகிறோம் என்பதைப் பொறுத்து வெவ்வேறு சமையல் வகைகள் அல்லது அல்காரிதம்கள் உள்ளன. ஒவ்வொரு அடியும் முக்கியமானது, சிறியது கூட. எனவே ஒரு படி இல்லாமல், மீதமுள்ளவற்றை முடிக்க முடியாது. மற்றவர்கள் புரிந்துகொள்ளும் வகையில் அல்காரிதம்களை உருவாக்குவது மிகவும் முக்கியம். அதனால்தான் ஒவ்வொரு அடியையும் எழுதி வைக்க வேண்டும், யார் செய்தாலும் முடிவு ஒன்றுதான்.
    C1_playlab_storytelling:
      1:
        text: படைப்பாற்றல் பெறுவதற்கான நேரம் மற்றும் ஒரு கதையைச் சொல்ல உங்கள் குறியீட்டு
          திறன்களைப் பயன்படுத்துங்கள். உங்கள் கதையில் நடிகர்கள் இருப்பார்கள், மேலும்
          இந்த நடிகர்களை ஒருவருக்கொருவர் பேசவும், பழகவும் உங்களால் முடியும். நீங்கள்
          எந்த மாதிரியான கதையைச் சொல்ல விரும்புகிறீர்கள் என்று சிந்திக்கத் தொடங்குங்கள்.
      2:
        text: பூனை எப்பொழுதும் நாயைப் பார்த்து பயப்படும், நாய் நன்றாக இருக்க முயற்சிக்கிறது
          என்று பூனை கண்டுபிடித்தால் என்ன செய்வது? "ரன் ரன்" தொகுதி எல்லாவற்றையும்
          தொடங்குகிறது. "மூவ்" பிளாக் உங்கள் எழுத்தை நகர்த்தும் மற்றும் "சே" பிளாக்
          உங்கள் எழுத்தை நீங்கள் தட்டச்சு செய்யும்படி செய்யும்.
      3:
        text: இது "நடிகர்கள் மோதும்போது" தொகுதியாகும், இதை நீங்கள் மற்ற தொகுதிகளுடன்
          இணைக்கலாம்.
      4:
        text: நான் நாயை வந்து "ஹாய்" என்று சொல்ல வைத்தேன், ஆனால் பூனை பயந்து ஓடிவிட்டது.
          "ஆஆ" இன்னும் நேரம் இருந்திருந்தால், அது ஒரு மகிழ்ச்சியான முடிவாக இருந்திருக்கும்.
          முற்றும்!
    C1_spelling_bee_intro:
      1:
        text: இது ஸ்பெல்லிங் பீ லெவல். தேனீயை நகர்த்த புதிர் துண்டுகளைப் பயன்படுத்தவும்.
          அது நகரும் போது, வார்த்தைகளை உச்சரிக்க எழுத்துக்களை சேகரிக்கும்.
      2:
        text: மேடைக்கு கீழே உள்ள பெட்டியில் அவர்கள் கொடுக்கும் வார்த்தையை உங்களால்
          உச்சரிக்க முடியுமா என்று பாருங்கள். ஆனால் கவனமாக இருங்கள்! தவறான திசையில்
          நகர்த்தினால் நீங்கள் விரும்பாத எழுத்துக்களைச் சேர்க்கும்.
    C1_zuck_repeat_loop:
      1:
        text: கட்டளைகளை மீண்டும் செய்வதில் கணினிகள் மிகவும் சிறந்தவை. ஒரு நபராக, நீங்கள்
          ஒரே விஷயத்தை தொடர்ச்சியாக பல முறை செய்ய வேண்டியிருந்தால் நீங்கள் மிகவும்
          சலிப்படைவீர்கள். ஆனால் ஒரு கணினி அதையே மில்லியன் கணக்கான அல்லது பில்லியன்
          கணக்கான முறை செய்ய முடியும், மேலும் சலிப்படையாமல், அதை நன்றாகச் செய்ய முடியும்.
      2:
        text: |2-

          எடுத்துக்காட்டாக, பேஸ்புகில் உள்ள அனைவருக்கும் மின்னஞ்சல் அனுப்புவதன் மூலம் பிறந்தநாள் வாழ்த்துக்களைத் தெரிவிக்க விரும்பினால், அந்த மின்னஞ்சல்களை அனைவருக்கும் எழுதுவதற்கு எனக்கு ஒரு நூற்றாண்டுக்கும் மேலாக ஆகலாம். ஆனால் ஒரு சில வரிகளைக் கொண்டு, பேஸ்புக்கில் உள்ள அனைவருக்கும் பிறந்தநாள் வாழ்த்துக்களைத் தெரிவித்து மின்னஞ்சல் அனுப்ப ஒரு அமைப்பு உள்ளது.
      3:
        text: இந்த எடுத்துக்காட்டில், பன்றியைப் பெற பறவையை நகர்த்துவது உங்கள் இலக்காக
          இருக்கும். இப்போது, இதை மிக எளிதாகச் செய்ய ரிப்பீட் பிளாக்கைப் பயன்படுத்தப்
          போகிறோம். ஒவ்வொரு முறையும் பறவையை பன்றிக்கு ஒரு படி முன்னெடுத்துச் செல்ல
          கணினிக்கு ஐந்து முறை நகர்த்த முன்னோக்கி கட்டளையை வழங்குவதன் மூலம் இதைச்
          செய்யலாம் அல்லது கணினியை ஒரு முறை முன்னோக்கி நகர்த்தச் சொல்லலாம், பின்னர்
          அதை ஐந்து முறை திரும்பச் சொல்லுங்கள். அதையே செய்யும்.
      4:
        text: இதைச் செய்ய, நீங்கள் முன்னோக்கி நகர்த்துவதற்கான கட்டளையை இழுத்து, அதை
          மீண்டும் மீண்டும் தொகுதிக்குள் வைக்க வேண்டும். நீங்கள் அதைக் கிளிக் செய்து,
          அதை எத்தனை முறை முன்னோக்கி எடுக்க விரும்புகிறீர்கள் என்பதைத் தெரிவிக்க,
          பிளாக்கை எத்தனை முறை மீண்டும் செய்ய வேண்டும் என்று சொல்லலாம்.
      5:
        text: இன்னும் ஒரு விஷயம் என்னவென்றால், ரிபீட் பிளாக்கிற்குள் எத்தனை கட்டளைகளை
          வேண்டுமானாலும் போடலாம். எனவே இந்த எடுத்துக்காட்டில், நீங்கள் அதை முன்னோக்கி
          நகர்த்தவும் இடதுபுறம் திரும்பவும் சொல்கிறீர்கள், அது ஐந்து முறை செய்யும்.
          மகிழுங்கள்!
    C2_artist_intro:
      1:
        text: கார்கள் எவ்வளவு தரவு சேகரிக்கின்றன மற்றும் நீங்கள் எவ்வாறு தொடர்கிறீர்கள்
          என்பதைக் கண்டுபிடிக்க நிரல்களை எழுதக்கூடிய நபர்களைக் கொண்டிருக்க வேண்டியதன்
          அவசியம் காரணமாக கணினி அறிவியலில் தேர்ச்சி பெற்றவர்கள் உங்களிடம் இல்லையென்றால்
          நீங்கள் பந்தயத்திற்கு தகுதி பெற மாட்டீர்கள். செயல்திறனை எவ்வாறு உருவாக்குவது
          என்பதைக் கண்டறியவும்.
      2:
        text: இந்தப் புதிர்களில், வெவ்வேறு வடிவங்களை வரைவதற்கு பென்சிலைப் பயன்படுத்தும்
          கலைஞராக நீங்கள் இருப்பீர்கள். உங்கள் கலைஞர் எங்கு சென்றாலும், அது உங்களுக்குப்
          பின்னால் ஒரு கோட்டை வரைகிறது.
      3:
        text: கேன்வாஸைச் சுற்றி நகர்த்த, முன்னோக்கி நகர்த்துவதைப் பயன்படுத்துவீர்கள்.
          இங்கு மூவ் ஃபார்வர்ட் பிளாக் 100 பிக்சல்களால் முன்னோக்கி நகர்த்துகிறது என்று
          கூறுகிறது. நாம் ரன் அடிக்கும்போது, என்ன நடக்கும்? கலைஞர் ஒரு குறிப்பிட்ட
          தொகையை முன்னோக்கி நகர்த்துகிறார், அந்த அளவு 100 பிக்சல்கள். பிக்சல்கள் உங்கள்
          கணினித் திரையில் அடிப்படையில் மிகச் சிறிய சதுரங்கள்.
      4:
        text: இந்தப் புதிரில் நம்மிடம் உள்ள மற்ற தொகுதியானது வலப்புறம் 90 டிகிரி திரும்பச்
          சொல்கிறது. நாம் அதை வெளியே இழுக்கும்போது அது நம் கலைஞரை ஒரு குறிப்பிட்ட
          அளவு திருப்புகிறது. எனவே கலைஞர் எவ்வளவு தூரம் திரும்ப வேண்டும் என்று நீங்கள்
          விரும்புகிறீர்கள். இது 90 டிகிரி திருப்பம்.
      5:
        text: மேலும் இது 120 டிகிரி திருப்பமாகும். பிக்சல்கள் மற்றும் டிகிரி எண்களுக்கு
          அடுத்துள்ள அம்புக்குறிகளைக் கிளிக் செய்வதன் மூலம் இந்த மதிப்புகளை மாற்றலாம்
          என்பதை நினைவில் கொள்ளவும். உங்கள் கலைஞருடன் வரைந்து மகிழுங்கள்!
    C2_bee_conditionals:
      1:
        text: இது நிபந்தனைக்குரிய தொகுதி. ஒரு எண்ணை விட குறைவாகவோ, சமமாகவோ அல்லது
          அதிகமாகவோ  தேன் இருந்தால், ஏதாவது செய்யுங்கள் என்று அது கூறுகிறது.
      2:
        text: அமிர்தம் அல்லது தேன் எவ்வளவு கிடைக்கும் என்று தெரியாதபோது இது பயனுள்ளதாக
          இருக்கும், இந்த கேள்விக்குறியுடன் நாம் இங்கே பார்க்கிறோம்.
      3:
        text: இந்த எடுத்துக்காட்டில், ஊதா நிறப் பூவில் 0 ஐ விட அதிகமான தேன் இருந்தால்,
          தேனைப் பெறுங்கள் என்று சொல்லப் போகிறோம். அது நம் தேனீக்கு அது இருக்கும்
          வரை அமிர்தம் கிடைக்கும் என்று சொல்லும். தா-தாஹ்!
    C2_binary_bracelets:
      1:
        text: இது பைனரி வளையல்கள் பாடம். நாங்கள் அணியக்கூடிய ஒரு வளையலில் எங்கள் முதலெழுத்துக்களைக்
          குறியிடப் போகிறோம் மற்றும் எங்கள் நண்பர்கள் அனைவருக்கும் காண்பிக்கப் போகிறோம்!
      2:
        text: பைனரி என்பது இரண்டு விருப்பங்களைப் பயன்படுத்தி தகவலைக் குறிக்கும் ஒரு
          வழியாகும். சில நேரங்களில் மக்கள் இதை 1 வி மற்றும் 0 வி என்று மட்டுமே நினைக்கிறார்கள்.
          ஆனால் நீங்கள் பைனரியை ஆன் அல்லது ஆஃப், மேல் மற்றும் கீழ், உள்ளே மற்றும்
          வெளியே அல்லது உண்மையில் ஏதேனும் எதிரெதிர்களின் கலவையுடன் பிரதிநிதித்துவப்படுத்தலாம்.
      3:
        text: வணக்கம், நான் ஓரியன் மற்றும் நான் ரோபோட்களை இங்கே Play-im இல் நிரல்
          செய்கிறேன். அனைத்து கணினி மற்றும் ரோபோ மூளைகளும் அவற்றின் அடிப்படை மட்டத்தில்
          சிறிய மின்னணு வாயில்கள். கேட் திறந்தால் மின்சாரம் பாயும், மூடினால் மின்சாரம்
          வராது.
      4:
        text: ரோபோவில் பைனரிக்கு ஒரு உதாரணம் ரோபோவின் கண்கள். ரோபோவின் கண்கள் எல்.ஈ.டி
          மற்றும் அவை ஆன் அல்லது ஆஃப் இருக்கும் விளக்குகள். இது ஒரு பைனரி அமைப்பு,
          ஒன்று அல்லது மற்றொன்று. பைனரி எண்களைக் குறிக்க நாம் விளக்குகளைப் பயன்படுத்தலாம்.
          நம்மிடம் ஒரு ரோபோக்கள் இருந்தால், முதல் ரோபோ 1 வது இடம் மற்றும் இரண்டாவது
          ரோபோ 2 இடம், மூன்றாவது ரோபோ 4 இடம் மற்றும் பல என்று சொல்லலாம். நீங்கள் ஒரு
          பைனரி எண்ணைக் குறிக்கும் விதம். ரோபோக்கள் அதை தங்கள் பைனரி கண்களால் செய்து
          உங்களுக்காக எண்ணும்.
    C2_conditionals_with_cards:
      1:
        text: இந்த பாடம் கார்டுகளுடன் நிபந்தனைகள் என்று அழைக்கப்படுகிறது. ஒவ்வொரு
          நாளும் நீங்கள் பார்க்கும் மற்றும் கேட்பதன் அடிப்படையில் முடிவுகளை எடுக்கிறீர்கள்.
      2:
        text: நான் பூங்காவிற்கு நடக்க விரும்புகிறேன் ஆனால் முதலில் நான் ஒரு குடை கொண்டு
          வர வேண்டுமா இல்லையா என்பதை முடிவு செய்ய வேண்டும். அதனால் நான் ஜன்னலுக்கு
          வெளியே பார்க்கிறேன். மேகமூட்டமாக இருந்தால், நான் என் குடையை எடுக்கப் போகிறேன்.
          இல்லையெனில், நான் சில சன்கிளாஸ்களை எடுத்துக்கொள்வேன். நான் குடையை எடுத்துக்கொள்வது
          நல்லது என்று நினைக்கிறேன். நான் பார்ப்பதும் கேட்பதும்தான் பூங்காவிற்கு நான்
          எதை எடுத்துச் செல்கிறேன் என்பதை தீர்மானிக்கிறது.
      3:
        text: விளையாட்டுகளிலும் நிபந்தனைகள் பயன்படுத்தப்படுகின்றன. இன்று நாம் ஒரு
          அட்டை விளையாட்டுடன் நிபந்தனைகளைப் பயன்படுத்தி பயிற்சி செய்யப் போகிறோம்.
          இந்த விளையாட்டில், எனது நண்பர்கள் என்ன செய்யப் போகிறார்கள் என்பதை நான் வரைந்த
          அட்டை தீர்மானிக்கிறது. நான் ஏழு வரைந்தால், எல்லோரும் கைதட்டுகிறார்கள். இல்லையெனில்,
          எல்லோரும் "awww" என்று கூறுகிறார்கள். முயற்சிப்போம்! "அவ்வ்வ்" "சியர்ஸ்"
      4:
        text: நிபந்தனைகளுடன் இன்னும் வேடிக்கையான கேம்களை நீங்கள் உருவாக்க முடியும்
          என்று நான் பந்தயம் கட்டுகிறேன். ஒரு முறை முயற்சி செய்! கம்ப்யூட்டர்களை ஸ்மார்ட்டாகக்
          காட்டுவது நிபந்தனைகள்தான். நிபந்தனைகளை உள்ளடக்கிய ஒரு கணினி நிரல் பயனருக்கு
          எதிர்வினையாற்றலாம் மற்றும் அதன் போக்கை மாற்றலாம்.
      5:
        text: உங்களுக்கு பிடித்த வீடியோ கேமைப் பற்றி சிந்தியுங்கள். சில செயல்களுக்கு
          நீங்கள் பெறுவதை விட அதிக புள்ளிகளைப் பெறுகிறீர்களா? கணினி நிபந்தனைகளைப்
          பயன்படுத்துவதால் இது நிகழ்கிறது. இது ஒரு கணினி முடிவெடுக்கும் வழி. எப்படி,
          நீங்கள் இலக்கைத் தாக்கினால், நீங்கள் பத்து புள்ளிகளைப் பெறுவீர்கள். இல்லையெனில்,
          நீங்கள் மூன்றை இழக்கிறீர்கள். நிபந்தனைகள் எவ்வாறு செயல்படுகின்றன என்பதை
          நீங்கள் அறிந்தால், நீங்கள் அனைத்து வகையான அற்புதமான விளையாட்டுகளையும் உருவாக்கலாம்.
    C2_artist_debugging:
      1:
        text: எங்கள் பணியிடத்தில் ஏற்கனவே சில தொகுதிகள் உள்ளன. ஆனால் ஏதோ தவறு இருக்கிறது.
      2:
        text: இந்த குறியீட்டின் வேகத்தைக் குறைத்து, ஒவ்வொரு தொகுதியையும் படிப்படியாகப்
          பார்க்கும்போது பிழைத்திருத்தம் செய்வோம்.
      3:
        text: ஓ, பிரச்சனை இருக்கிறது! பூனையின் மீசை 25 அல்ல, 75 பிக்சல்கள் நீளமானது.
    C2_bee_debugging:
      1:
        text: நிரல் பிழைத்திருத்தம் பற்றி நீங்கள் எப்போதாவது கேள்விப்பட்டிருக்கிறீர்களா?
          எது வேலை செய்யவில்லை என்பதைக் கண்டறியும் வழி இதுதான். நீங்கள் குறியீட்டைப்
          பிழைத்திருத்தும்போது, பிழைகளைக் கண்டறிந்து அகற்றுவீர்கள்.
      2:
        text: எங்கள் பணியிடத்தில் ஏற்கனவே சில தொகுதிகள் இங்கே கொடுக்கப்பட்டுள்ளன.
          இது சரியான தீர்வாக உள்ளதா மற்றும் அதை எங்கு சரிசெய்ய வேண்டும் என்பதைப் பார்க்க,
          பிளாக்குகளின் வழியாக படிப்படியாக நடக்க, படி பொத்தானைப் பயன்படுத்தப் போகிறோம்.
      3:
        text: எங்கள் பிரச்சனை போல் தெரிகிறது! எங்களுக்கு இன்னும் ஒரு நகர்வு முன்னோக்கி
          தொகுதி தேவை. ஸ்டெப் பொத்தான், பிழை எங்குள்ளது என்பதைக் கண்டறிவதன் மூலம்
          எங்கள் சிக்கலைப் பிழைத்திருத்த உதவுகிறது.
    C2_digital_footprint:
      1:
        text: உங்கள் தலையில் உங்கள் தொப்பியைப் பிடித்துக் கொள்ளுங்கள், உங்கள் புத்திசாலிகள்
          நீங்கள் எங்கு இருக்கிறீர்கள் என்று உங்களுக்குத் தெரிவிக்கும் மற்றும் மிருகக்காட்சிசாலையைப்
          பற்றி சிந்திக்கவும், உங்களுக்கும் உங்களுக்கும் வணக்கம் தெரிவிக்கவும்! நீங்கள்
          ஆன்லைனில் இருக்கும்போது உங்களுடையதை உங்கள் மனதில் வைத்துக்கொள்ளவும், பாதுகாப்பாக
          இருப்பது எப்படி, உங்கள் வாழ்க்கைக்கு எப்படி தனிப்பட்ட இடத்தை வழங்குவது என்பதை
          அறியவும் உங்கள் தலையைப் பயன்படுத்துங்கள்! உங்கள் தலையில் இருந்து உங்கள்
          கால்விரல்கள் வரை, இடைநிறுத்தப்பட்டு, அதைப் பற்றி சிந்தியுங்கள். உங்கள் கால்
          முதல் மூக்கு வரை, இடைநிறுத்தி ஆன்லைனில் சிந்தியுங்கள்!
      2:
        text: வளரவும் வளரவும் உங்கள் இதயத்தைப் பயன்படுத்தவும், உங்களுக்கு ஆரோக்கியமான
          பளபளப்பைக் கொடுக்கவும், காதலர் தினத்தை உருவாக்கவும், நீங்கள் என்னுடையவராக
          இருப்பீர்கள் என்று ஒருவரிடம் சொல்லுங்கள்! நீங்கள் ஆன்லைனில் இருக்கும்போது
          உங்கள் இதயத்தைப் பயன்படுத்துங்கள், எது சரியானது மற்றும் எப்போதும் அன்பானது
          என்று உணருங்கள், மேலும் இணையத்தில் நேர்மையாகவும் அழகாகவும் இருக்க உங்கள்
          நண்பர்களுக்கு மரியாதை காட்டுங்கள். உங்கள் தலையில் இருந்து உங்கள் கால்விரல்கள்
          வரை, இடைநிறுத்தப்பட்டு, அதைப் பற்றி சிந்தியுங்கள். உங்கள் கால் முதல் மூக்கு
          வரை, இடைநிறுத்தி ஆன்லைனில் சிந்திக்கவும்
      3:
        text: உங்கள் செல்லப்பிராணியை கட்டிப்பிடிக்கவும், உங்கள் ஆடைகள் நனையாமல் இருக்கவும்,
          உங்களுக்கு பிடித்த சட்டைகளை அணியவும், பறக்கவும் நம்பவும் உதவவும் உங்கள்
          கைகளைப் பயன்படுத்தவும். நீங்கள் ஆன்லைனில் இருக்கும்போது உங்கள் கைகளைப் பயன்படுத்தவும்,
          ஓய்வு எடுத்து நேரத்தை சமநிலைப்படுத்தவும், உங்கள் தொழில்நுட்பத்தை விட்டுவிட்டு,
          ஏறுவதற்கு ஒரு மரத்தைக் கண்டறியவும். உங்கள் தலையில் இருந்து உங்கள் கால்விரல்கள்
          வரை, இடைநிறுத்தப்பட்டு, அதைப் பற்றி சிந்தியுங்கள். உங்கள் கால் முதல் மூக்கு
          வரை, இடைநிறுத்தி ஆன்லைனில் சிந்தியுங்கள்!
      4:
        text: உங்கள் உணவைச் சேமிக்கவும், அதன் உறுமுதலைக் கேட்கவும், வயிற்றைக் குறைக்கவும்,
          சோடா பாப்பில் வாயுவை உணரவும் உங்கள் உள்ளத்தைப் பயன்படுத்தவும். நீங்கள் ஆன்லைனில்
          இருக்கும் போது, சில அறிகுறிகளைக் கவனிக்கவும், வழியை வழிநடத்தவும், அது சரியில்லாதபோது
          உங்களுக்குச் சொல்லவும் உங்கள் தைரியத்தைப் பயன்படுத்தவும். உங்கள் தலையில்
          இருந்து உங்கள் கால்விரல்கள் வரை, இடைநிறுத்தப்பட்டு, அதைப் பற்றி சிந்தியுங்கள்.
          உங்கள் கால் முதல் மூக்கு வரை, இடைநிறுத்தி ஆன்லைனில் சிந்தியுங்கள்!
      5:
        text: எனவே உங்கள் தலையால் சிந்தியுங்கள், உங்கள் இதயத்தால் உணருங்கள், உங்கள்
          கைகளால் சமநிலைப்படுத்துங்கள், உங்கள் உள்ளத்தை ஆன்லைனில் கேளுங்கள். ஓடவும்,
          உதைக்கவும், ஒரு போகோ ஸ்டிக்கில் குதிக்கவும், குதிக்கவும், தடுப்பைச் சுற்றி
          நடனமாடவும், உங்கள் நாற்றமடிக்கும் சாக்ஸைத் தவிர்க்கவும் உங்கள் கால்களைப்
          பயன்படுத்தவும். நீங்கள் ஆன்லைனில் இருக்கும்போது உங்கள் கால்களைப் பயன்படுத்தவும்,
          எல்லை மீறுபவர்களை எதிர்த்து நிற்கவும், உயரமாக நிற்கவும், பெரிய மற்றும் சிறிய
          உயிரினங்களுடன் நன்றாக இருங்கள்.
      6:
        text: உங்கள் தலையில் இருந்து உங்கள் கால்விரல்கள் வரை, இடைநிறுத்தப்பட்டு, அதைப்
          பற்றி சிந்தியுங்கள். உங்கள் கால் முதல் மூக்கு வரை, இடைநிறுத்தி ஆன்லைனில்
          சிந்தியுங்கள்! எனவே உங்கள் தலையால் சிந்தியுங்கள், உங்கள் இதயத்தால் உணருங்கள்,
          உங்கள் கைகளால் சமநிலைப்படுத்துங்கள், உங்கள் குடல்களைக் கேளுங்கள், உங்கள்
          கால்களால் எழுந்து நிற்கவும். உங்கள் தலையில் இருந்து உங்கள் கால்விரல்கள்
          வரை, இடைநிறுத்தப்பட்டு, அதைப் பற்றி சிந்தியுங்கள். உங்கள் கால் முதல் மூக்கு
          வரை, இடைநிறுத்தி ஆன்லைனில் சிந்தியுங்கள்!
    C2_digital_footprint_v2:
      1:
        text: ஒவ்வொரு முறையும் நீங்கள் ஆன்லைனில் செல்லும் போது, ​​தேடலாம், நகலெடுக்கலாம்,
          பகிரலாம், ஒளிபரப்பலாம் மற்றும் நிரந்தரமாக இருக்கும் தடயத்தை விட்டுவிடுவீர்கள்.
          நீங்கள் எந்த வகையான டிஜிட்டல் தடத்தை விட்டுச் செல்கிறீர்கள்? எந்த வகையான
          டிஜிட்டல் தடயத்தை விட்டுச் செல்ல விரும்புகிறீர்கள்?
    C2_graph_paper:
      1:
        text: இந்த பாடம் "கிராஃப் பேப்பர் புரோகிராமிங்" என்று அழைக்கப்படுகிறது, மேலும்
          இது அல்காரிதம்களைப் பற்றியது. கையால் வரையப்பட்ட அம்புகளை மட்டும் பயன்படுத்தி,
          எளிய கருப்பு மற்றும் வெள்ளை படங்களை எவ்வாறு மீண்டும் உருவாக்குவது என்பதை
          ஒருவருக்கொருவர் காட்டும் நிரல்களை எவ்வாறு எழுதுவது என்பதை இன்று கற்றுக்கொள்வோம்.
      2:
        text: அல்காரிதம் என்பது ஒரு பணியை முடிப்பதற்கான வழிமுறைகளின் பட்டியல். கிண்ணத்தை
          உருவாக்க இந்த வழிமுறைகளைப் பின்பற்றுவோம். ஒரு செயலை எப்படி செய்வது என்று
          வேறு யாராவது உங்களுக்குத் தேவைப்படும்போது அல்காரிதம்கள் மிகவும் உதவியாக
          இருக்கும்.
      3:
        text: 'நீங்கள் ஒரு கணினிக்கான அல்காரிதம் எழுதுகிறீர்கள் என்றால், அதை சிறிய
          சிறிய படிகளாக உடைக்க வேண்டும். எனவே இந்த வரிசையை முடித்துவிட்டு அடுத்ததற்குச்
          செல்லுங்கள், பிறகு அடுத்தது, நீங்கள் முடித்துவிடுவீர்கள்.

'
      4:
        text: எனது வேலையில் அல்காரிதம்களைப் பயன்படுத்துகிறேன். நான் எல்லா படிகளையும்
          எழுதினால், அதே பகுதியை மீண்டும் உருவாக்க முடியும் அல்லது அதைச் செய்ய வேறு
          ஒருவருக்கு கற்பிக்க முடியும். கண்ணாடியை சூளையில் வைத்து, அதை ஒன்றாக இணைக்கவும்,
          கிண்ணத்தை உருவாக்க மீதமுள்ள வழிமுறைகளைப் பின்பற்றவும். அல்காரிதம்கள் எதையாவது
          செய்து முடிப்பதற்கான சாலை வரைபடத்தை உங்களுக்கு வழங்கும்.
    C2_artist_loops:
      1:
        text: எங்கள் கலைஞரை நிரலாக்கம் செய்யும் போது, ​​படிகளைச் சேமிக்க உதவும் வகையில்,
          ரிபீட் பிளாக்கை இங்கே பயன்படுத்தப் போகிறோம். எங்கள் மேடையில் ஏற்கனவே சில
          தொகுதிகள் உள்ளன, ஆனால் அவை எங்களைத் தொடங்குவதற்கு மட்டுமே உள்ளன.
      2:
        text: முழு சதுரத்தையும் வரைய அந்தத் தொகுதிகளை நான்கு முறை லூப் செய்ய, ரிபீட்
          பிளாக்கை வெளியே இழுத்து, நகர்த்த முன்னோக்கி வைத்து, ரிப்பீட் பிளாக்கிற்குள்
          வலது பிளாக்குகளைத் திருப்புவோம். நாங்கள் ரன் அடிக்கும்போது, ​​​​சதுரத்தை
          முடிக்க கலைஞர் அந்த படிகளை நான்கு முறை மீண்டும் செய்வார்.
    C2_bee_loops:
      1:
        text: லூப் என்பது செயல்பாட்டின் மறுநிகழ்வு. எனவே, ஹைவ் ஒன்றைப் பரிசோதிக்கச்
          சென்று, நான் ஒரு சட்டகத்தைப் பார்த்துவிட்டு, அதை மீண்டும் வைத்தேன், அதனால்
          அதே செயல்பாட்டைப் பலமுறை மீண்டும் செய்கிறேன். இது சுற்றி சுற்றி வருகிறது,
          அதே செயல்பாட்டை பல முறை செய்கிறது.
      2:
        text: லூப் என்பது செயல்பாட்டின் மறுநிகழ்வு. பரிசோதிக்க ஒரு ஹைவ் சென்று, நான்
          ஒரு சட்டத்தைப் பார்க்கிறேன், பின்னர் அதை மீண்டும் வைத்தேன். அதே செயலை நான்
          பலமுறை மீண்டும் செய்கிறேன். இது சுற்றி சுற்றி வருகிறது, அதே செயல்பாட்டை
          பல முறை செய்கிறது.
    C2_maze_intro:
      1:
        text: பொதுவாக நிரலாக்கம் அனைத்தும் உரையில் இருக்கும், ஆனால் நாங்கள் ப்ளாக்லியைப்
          பயன்படுத்துவோம், இது நீங்கள் நிரல்களை எழுத இழுத்து விடக்கூடிய காட்சித் தொகுதிகளைப்
          பயன்படுத்துவோம். ஹூட்டின் கீழ், நீங்கள் இன்னும் குறியீட்டை உருவாக்குகிறீர்கள்.
          தொடங்குவதற்கு, இந்த ஆங்கிரி பேர்ட் தனது முட்டைகளைத் திருடிய தீய பன்றிகளுக்குச்
          செல்ல பிரமை வழியாகச் செல்ல உதவும் நிரலுக்கான குறியீட்டை உருவாக்கப் போகிறோம்.
      2:
        text: பிளாக்லி மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்
          பறவையின் பிரமை உள்ளது, அங்கு உங்கள் நிரல் இயங்கும். ஒவ்வொரு நிலைக்கான வழிமுறைகளும்
          பிரமைக்கு கீழே எழுதப்பட்டுள்ளன. இந்த நடுத்தர பகுதி கருவிப்பெட்டி மற்றும்
          இந்த தொகுதிகள் ஒவ்வொன்றும் பறவை புரிந்து கொள்ளக்கூடிய கட்டளை. வலதுபுறத்தில்
          உள்ள வெள்ளை இடம் பணியிடம் என்று அழைக்கப்படுகிறது, இங்குதான் எங்கள் திட்டத்தை
          உருவாக்குவோம்.
      3:
        text: நான் மூவ் பிளாக்கை எங்கள் பணியிடத்திற்கு இழுத்து "ரன்" அழுத்தினால் என்ன
          நடக்கும்? பறவை கட்டத்தின் ஒரு பெட்டியை முன்னோக்கி நகர்த்துகிறது. பறவை ஒரு
          பெட்டியை முன்னோக்கி நகர்த்திய பிறகு ஏதாவது செய்ய வேண்டும் என்று நான் விரும்பினால்
          என்ன செய்வது? நான் எங்கள் நிரலில் மற்றொரு தொகுதி சேர்க்க முடியும்.
      4:
        text: நான் "வலதுபுறம் திரும்பு" தொகுதியைத் தேர்வு செய்யப் போகிறேன், மஞ்சள்
          அம்பு தோன்றும் வரை அதை நகர்த்தும் தொகுதியின் கீழ் இழுப்பேன். பின்னர் நான்
          அதை கைவிடுவேன், இரண்டு தொகுதிகளும் ஒன்றாக ஒடிவிடும். நான் மீண்டும் "ரன்"
          அழுத்தும் போது, ​​பறவை நமது பணியிடத்தில் மேலிருந்து கீழாக அடுக்கி வைக்கப்பட்டுள்ள
          கட்டளைகளை செய்யும்.
      5:
        text: நீங்கள் எப்போதாவது ஒரு தடுப்பை நீக்க விரும்பினால், அதை அடுக்கிலிருந்து
          அகற்றி குப்பைத் தொட்டிக்கு இழுக்கவும். நீங்கள் ரன் அடித்த பிறகு, பறவையை
          மீண்டும் தொடங்குவதற்கு மீட்டமை பொத்தானை எப்போதும் அழுத்தலாம். இப்போது அந்தப்
          பன்றிகளைப் பெறுவோம்!
    C2_paper_airplanes:
      1:
        text: இந்தப் பாடம் Real Life Algorithms என்று அழைக்கப்படுகிறது. அல்காரிதம்
          மக்கள் அன்றாடம் செய்யும் விஷயங்களை விவரிக்கிறது. குக்கீ ரெசிபிகள் மற்றும்
          பறவை இல்லத்தை உருவாக்குவதற்கான திசைகள் இரண்டும் அன்றாட வழிமுறைகள்.
      2:
        text: இன்று நாம் ஒரு காகித விமானத்திற்கான அல்காரிதத்தை உருவாக்கி, உருவாக்கி,
          சோதிக்கப் போகிறோம். ஆனால் முதலில், இந்த பெரிய திட்டத்தை நாம் சிறிய படிகளை
          எளிதாகப் பின்பற்ற வேண்டும். ஒரு காகித விமானத்தை தயாரிப்பதற்கு, என்ன நடவடிக்கைகளை
          எடுக்க வேண்டும், எந்த வரிசையில் எடுக்க வேண்டும் என்பதை நாம் தீர்மானிக்க
          வேண்டும்.
      3:
        text: முதலில் படங்களை வெட்டுவதன் மூலம் உங்கள் அல்காரிதத்தை உருவாக்குவீர்கள்.
          அடுத்து, நீங்கள் ஒரு காகித விமானத்தை உருவாக்க தேவையான படிகளைக் காட்டும்
          6 படங்களைத் தேர்ந்தெடுத்து, அந்த படங்களை சரியான வரிசையில் அமைக்க வேண்டும்.
          நீங்கள் எல்லாவற்றையும் ஒழுங்காக வைத்திருந்த பிறகு, அல்காரிதம் செயல்படுகிறதா
          என்பதைப் பார்க்க அல்காரிதத்தை சோதிக்க மற்றொரு மாணவர் குழுவுடன் அல்காரிதம்களை
          வர்த்தகம் செய்வீர்கள். சிறந்த காகித விமானத்தை உருவாக்க, நன்கு வடிவமைக்கப்பட்ட
          அல்காரிதம் மிகவும் முக்கியமானது.
      4:
        text: |2-

          நாம் சாக்லேட் செய்ய விரும்பினால், அந்த செயல்முறைக்கு பல பெரிய படிகள் உள்ளன. அந்த பெரிய படிகள் ஒவ்வொன்றும் அதன் சொந்த சிறிய படிகளைக் கொண்டுள்ளது. சாக்லேட்டை நாம் எப்படி ருசிக்க விரும்புகிறோம் என்பதைப் பொறுத்து வெவ்வேறு சமையல் வகைகள் அல்லது அல்காரிதம்கள் உள்ளன. ஒவ்வொரு அடியும் முக்கியமானது, சிறியது கூட. எனவே ஒரு படி இல்லாமல், மீதமுள்ளவற்றை முடிக்க முடியாது. மற்றவர்கள் புரிந்துகொள்ளும் வகையில் அல்காரிதம்களை உருவாக்குவது மிகவும் முக்கியம். அதனால்தான் ஒவ்வொரு அடியையும் எழுதி வைக்க வேண்டும், யார் செய்தாலும் முடிவு ஒன்றுதான்.
    C2_playlab_createstory:
      1:
        text: இதுவரை நீங்கள் ஒரு அனிமேஷன் அல்லது கதையை உருவாக்கி வருகிறீர்கள், அது
          ஒவ்வொரு முறையும் நீங்கள் இயக்கும் அதே காரியத்தைச் செய்கிறது. இப்போது நீங்கள்
          உண்மையில் விளையாடக்கூடிய ஒரு ஊடாடும் விளையாட்டை உருவாக்கலாம்.
      2:
        text: முயற்சிக்க சில புதிய தொகுதிகள் உள்ளன. "எப்போது அம்புக்குறி" தொகுதி மற்றும்
          "நடிகர் நகர்த்தும்" தொகுதி உள்ளது. அம்புக்குறி விசைகள் மூலம் நடிகர்களை நகர்த்த
          இந்த தொகுதிகளை ஒன்றாக இணைக்கலாம். நடிகர்கள் மோதும்போது அல்லது கிளிக் செய்யும்
          போது சில பிளாக்குகள் உள்ளன. அவற்றைப் பார்த்து மகிழுங்கள்!
    C2_relay_programming:
      1:
        text: இன்று நாம் ரிலே புரோகிராமிங் செய்யப் போகிறோம். இது அழுத்தத்தின் கீழ்
          நிரலாக்கம் மற்றும் நீங்கள் விரைவாக அல்லது குழுக்களில் பணிபுரியும் போது சில
          நேரங்களில் ஏற்படும் தவறுகளை பிழைத்திருத்தம் செய்வது பற்றியது. குறியீட்டை
          உருவகப்படுத்த வரைபட காகித நிரலாக்கத்தைப் பயன்படுத்துவோம், மேலும் ஒரு காலக்கெடுவை
          உருவகப்படுத்த ரிலே பந்தயங்களைப் பயன்படுத்துவோம்.
      2:
        text: ரிலே நிரலாக்கத்தில், கிராஃப் பேப்பர் திட்டத்தை முடிக்க அணிகள் பந்தயத்தில்
          ஈடுபடும். நீங்கள் உங்கள் குழுவின் வேலையைச் சரிபார்க்க வேண்டும், அல்லது பிழைத்திருத்தம்
          செய்ய வேண்டும், தவறு இருந்தால் அதைச் சரிசெய்து, உங்கள் அம்புக்குறியைச் சேர்த்து,
          திரும்பி ஓடி, உங்கள் குழுவைக் குறிக்கவும்.
      3:
        text: புரோகிராமர்கள் தங்கள் அல்காரிதம்கள் அல்லது குறியீட்டில் உள்ள சிக்கல்களைக்
          கண்டறிந்து சரிசெய்ய நிறைய பிழைத்திருத்தத்தைப் பயன்படுத்துகின்றனர். பிழைகளை
          சரிசெய்ய பல வழிகள் உள்ளன. ஏதேனும் தவறு நடந்ததைக் கண்டுபிடிக்கும் வரை, அதைச்
          சரிசெய்யும் வரை படிப்படியாக நகர்த்துவது எளிதான ஒன்றாகும்.
      4:
        text: இங்கே, நான் மீண்டும் ஹேண்ட்ஸ்பிரிங் செய்ய முயற்சிக்கிறேன், ஆனால் நான்
          தொடர்ந்து விழுந்து கொண்டே இருக்கிறேன். நான் ஒவ்வொரு பகுதியையும் கடந்து,
          படிப்படியாக, என் தவறு எங்கே என்பதை உணர்ந்தேன். நான் என் கைகளை பீமின் மீது
          சரியாக வைக்கவில்லை என்று எனது பயிற்சியாளர் காட்டினார். எனவே எனது புதிய கை
          நிலையுடன் கற்றை மீது மற்றொரு பின்புற ஹேண்ட்ஸ்பிரிங் முயற்சித்தேன், நான்
          அதை ஒட்டிக்கொண்டேன்! என் பின் ஹேண்ட்ஸ்பிரிங் பிழைத்திருத்தத்தில் நான் மிகவும்
          மகிழ்ச்சியடைந்தேன். நாங்கள் அதை கண்டுபிடித்தோம்! பிழைத்திருத்தம் என்பது
          சிக்கல்களைக் கண்டறிந்து சரிசெய்வதாகும். நல்லது, நல்ல வேலை!
    C2_zuck_repeat_loop:
      1:
        text: கட்டளைகளை மீண்டும் செய்வதில் கணினிகள் மிகவும் சிறந்தவை. ஒரு நபராக, நீங்கள்
          ஒரே விஷயத்தை தொடர்ச்சியாக பல முறை செய்ய வேண்டியிருந்தால் நீங்கள் மிகவும்
          சலிப்படைவீர்கள். ஆனால் ஒரு கணினி அதையே மில்லியன் கணக்கான அல்லது பில்லியன்
          கணக்கான முறை செய்ய முடியும், மேலும் சலிப்படையாமல், அதை நன்றாகச் செய்ய முடியும்.
      2:
        text: எடுத்துக்காட்டாக, பேஸ்புக்கில் உள்ள அனைவருக்கும் மின்னஞ்சல் அனுப்புவதன்
          மூலம் பிறந்தநாள் வாழ்த்துக்களைத் தெரிவிக்க விரும்பினால், அந்த மின்னஞ்சல்கள்
          அனைத்தையும் அனைவருக்கும் எழுத எனக்கு ஒரு நூற்றாண்டுக்கும் மேலாக ஆகலாம்.
          ஆனால் ஒரு சில வரிகளைக் கொண்டு, பேஸ்புக்கில் உள்ள அனைவருக்கும் பிறந்தநாள்
          வாழ்த்துக்களைத் தெரிவித்து மின்னஞ்சல் அனுப்ப ஒரு அமைப்பு உள்ளது. அதனால்
          சுழல்கள் என்ன, ஏன் அவை மதிப்புமிக்கவை, மற்றும் கணினிகள் நன்றாகச் செய்யக்கூடிய
          ஒன்று.
      3:
        text: இந்த எடுத்துக்காட்டில், பன்றியைப் பெற பறவையை நகர்த்துவது உங்கள் இலக்காக
          இருக்கும். இப்போது நாம் இதை மிக எளிதாக செய்ய "மீண்டும்" தொகுதியைப் பயன்படுத்த
          முடியும். ஒவ்வொரு முறையும் பறவையை பன்றிக்கு ஒரு படி முன்னெடுப்பதற்கு ஐந்து
          முறை "முன்னோக்கி நகர்த்து" கட்டளையை கணினிக்கு வழங்குவதன் மூலம் இதைச் செய்யலாம்.
      4:
        text: அல்லது கம்ப்யூட்டரை ஒரு முறை "முன்னோக்கி நகர்த்த" சொல்லலாம், பின்னர்
          அதை 5 முறை "ரீபீட்" செய்யச் சொல்லுங்கள், அது அதையே செய்யும். எனவே இதைச்
          செய்ய, உங்கள் "முன்னோக்கி நகர்த்து" கட்டளையை இழுத்து, அதை "ரீபீட்" பிளாக்கிற்குள்
          வைக்கலாம். மேலும் நீங்கள் அதைக் கிளிக் செய்து, எத்தனை முறை பிளாக்கை மீண்டும்
          செய்ய விரும்புகிறீர்கள் என்று சொல்லலாம். நீங்கள் அதை முன்னோக்கி எடுக்க விரும்பும்
          படிகள்.
      5:
        text: இப்போது இன்னும் ஒரு விஷயம் என்னவென்றால், "மீண்டும்" தொகுதிக்குள் நீங்கள்
          விரும்பும் பல கட்டளைகளை வைக்கலாம். எனவே இந்த எடுத்துக்காட்டில் நீங்கள் அதை
          முன்னோக்கி நகர்த்தவும் இடதுபுறம் திரும்பவும் சொல்கிறீர்கள், அது ஐந்து முறை
          செய்யும். நன்றாக வேலை செய்து மகிழுங்கள்!
    C3_artist_functions:
      1:
        text: கம்ப்யூட்டர் புரோகிராமிங்கில் ஒரு பெரிய விஷயம் என்னவென்றால், ஒரு செயலை
          எப்படிச் செய்வது என்று கணினிக்குக் கற்றுக் கொடுத்தால், அந்தச் செயல்பாட்டை
          மீண்டும் அழைக்கலாம். நீங்கள் அதற்கு ஒரு பெயரைக் கொடுங்கள், பின்னர் நீங்கள்
          அதை அழைக்கலாம். இது உண்மையில் மொழியை நீட்டிப்பது போன்றது.
      2:
        text: நாங்கள் கட்டமைத்த நிரலில், நான்கு முறை நகர்த்துவதன் மூலமும் திருப்புவதன்
          மூலமும் ஒரு சதுரத்தை எப்படி வரைய வேண்டும் என்பதைக் கற்றுக்கொண்டோம். நாம்
          அந்த செயல்பாட்டை எடுத்து அதற்கு ஒரு பெயரைக் கொடுக்கலாம், ஒரு சதுரத்தை வரையலாம்,
          அதனால் எந்த நேரத்திலும் நாம் அதைச் செய்ய விரும்பினால், ஒரு சதுரத்தை வரையுங்கள்
          என்று கூறுவோம், அது திரும்பிச் சென்று அந்த செயல்பாட்டை, அந்த குறியீட்டை
          அழைக்கும். அது நமக்குச் செய்யப்படும். எங்கள் நிரலாக்க மொழியில் அந்தக் கருத்தைச்
          சேர்த்துள்ளோம்.
    C3_artist_intro:
      1:
        text: கார்கள் எவ்வளவு தரவு சேகரிக்கின்றன மற்றும் நீங்கள் எவ்வாறு தொடர்கிறீர்கள்
          என்பதைக் கண்டுபிடிக்க நிரல்களை எழுதக்கூடிய நபர்களைக் கொண்டிருக்க வேண்டியதன்
          அவசியம் காரணமாக கணினி அறிவியலில் தேர்ச்சி பெற்றவர்கள் உங்களிடம் இல்லையென்றால்
          நீங்கள் பந்தயத்திற்கு தகுதி பெற மாட்டீர்கள். செயல்திறனை எவ்வாறு உருவாக்குவது
          என்பதைக் கண்டறியவும்.
      2:
        text: இந்தப் புதிர்களில், வெவ்வேறு வடிவங்களை வரைவதற்கு பென்சிலைப் பயன்படுத்தும்
          கலைஞராக நீங்கள் இருப்பீர்கள். உங்கள் கலைஞர் எங்கு சென்றாலும், அது உங்களுக்குப்
          பின்னால் ஒரு கோட்டை வரைகிறது.
      3:
        text: கேன்வாஸைச் சுற்றி நகர்த்த, முன்னோக்கி நகர்த்துவதைப் பயன்படுத்துவீர்கள்.
          இங்கு மூவ் ஃபார்வர்ட் பிளாக் 100 பிக்சல்களால் முன்னோக்கி நகர்த்துகிறது என்று
          கூறுகிறது. நாம் ரன் அடிக்கும்போது, என்ன நடக்கும்? கலைஞர் ஒரு குறிப்பிட்ட
          தொகையை முன்னோக்கி நகர்த்துகிறார், அந்த அளவு 100 பிக்சல்கள். பிக்சல்கள் உங்கள்
          கணினித் திரையில் அடிப்படையில் மிகச் சிறிய சதுரங்கள்.
      4:
        text: இந்தப் புதிரில் நம்மிடம் உள்ள மற்ற தொகுதியானது வலப்புறம் 90 டிகிரி திரும்பச்
          சொல்கிறது. நாம் அதை வெளியே இழுக்கும்போது அது நம் கலைஞரை ஒரு குறிப்பிட்ட
          அளவு திருப்புகிறது. எனவே கலைஞர் எவ்வளவு தூரம் திரும்ப வேண்டும் என்று நீங்கள்
          விரும்புகிறீர்கள். இது 90 டிகிரி திருப்பம்.
      5:
        text: மேலும் இது 120 டிகிரி திருப்பமாகும். பிக்சல்கள் மற்றும் டிகிரி எண்களுக்கு
          அடுத்துள்ள அம்புக்குறிகளைக் கிளிக் செய்வதன் மூலம் இந்த மதிப்புகளை மாற்றலாம்
          என்பதை நினைவில் கொள்ளவும். உங்கள் கலைஞருடன் வரைந்து மகிழுங்கள்!
    C3_artist_nested_loops:
      1:
        text: நீங்கள் மற்றொரு வளையத்தின் உள்ளே ஒரு வளையத்தை வைக்கும்போது, ​​​​அதை
          ஒரு உள்ளமை வளையம் என்று அழைக்கிறோம். எடுத்துக்காட்டாக, ஒரு முக்கோணத்தின்
          ஒவ்வொரு பக்கத்திற்கும் ஒரு முறை, ரிப்பீட் டைம்ஸ் பிளாக் மூன்றாக அமைக்கப்பட்டுள்ளதைப்
          பயன்படுத்தி, 100 பிக்சல்கள் நீளமுள்ள ஒரு முக்கோணத்தை வரைவதற்கு ஏற்கனவே குறியீடு
          கொடுக்கப்பட்டுள்ளது.
      2:
        text: ஆனால் நாங்கள் ஆறு முக்கோணங்களை வரைய விரும்புகிறோம். அதைச் செய்ய, நாம்
          அந்த வளையத்தை எடுத்து மற்றொரு ரிப்பீட் டைம்ஸ் பிளாக்கின் உள்ளே வைக்கப் போகிறோம்.
          அழகான குளிர்!
    C3_bee_conditionals:
      1:
        text: இது நிபந்தனைக்குரிய தொகுதி. ஒரு எண்ணை விட குறைவாகவோ, சமமாகவோ அல்லது
          அதிகமாகவோ  தேன் இருந்தால், ஏதாவது செய்யுங்கள் என்று அது கூறுகிறது.
      2:
        text: அமிர்தம் அல்லது தேன் எவ்வளவு கிடைக்கும் என்று தெரியாதபோது இது பயனுள்ளதாக
          இருக்கும், இந்த கேள்விக்குறியுடன் நாம் இங்கே பார்க்கிறோம்.
      3:
        text: இந்த எடுத்துக்காட்டில், ஊதா நிறப் பூவில் 0 ஐ விட அதிகமான தேன் இருந்தால்,
          தேனைப் பெறுங்கள் என்று சொல்லப் போகிறோம். அது நம் தேனீக்கு அது இருக்கும்
          வரை அமிர்தம் கிடைக்கும் என்று சொல்லும். தா-தாஹ்!
    C3_bee_debugging:
      1:
        text: நிரல் பிழைத்திருத்தம் பற்றி நீங்கள் எப்போதாவது கேள்விப்பட்டிருக்கிறீர்களா?
          எது வேலை செய்யவில்லை என்பதைக் கண்டறியும் வழி இதுதான். நீங்கள் குறியீட்டைப்
          பிழைத்திருத்தும்போது, பிழைகளைக் கண்டறிந்து அகற்றுவீர்கள்.
      2:
        text: எங்கள் பணியிடத்தில் ஏற்கனவே சில தொகுதிகள் இங்கே கொடுக்கப்பட்டுள்ளன.
          இது சரியான தீர்வாக உள்ளதா மற்றும் அதை எங்கு சரிசெய்ய வேண்டும் என்பதைப் பார்க்க,
          பிளாக்குகளின் வழியாக படிப்படியாக நடக்க, படி பொத்தானைப் பயன்படுத்தப் போகிறோம்.
      3:
        text: எங்கள் பிரச்சனை போல் தெரிகிறது! எங்களுக்கு இன்னும் ஒரு நகர்வு முன்னோக்கி
          தொகுதி தேவை. ஸ்டெப் பொத்தான், பிழை எங்குள்ளது என்பதைக் கண்டறிவதன் மூலம்
          எங்கள் சிக்கலைப் பிழைத்திருத்த உதவுகிறது.
    C3_bee_functions:
      1:
        text: கணினி அறிவியலின் மிக முக்கியமான கருத்துக்களில் ஒன்று, புதிய கட்டளைகளை
          எவ்வாறு வரையறுப்பது, கணினி மொழியில் உங்கள் சொந்த வார்த்தைகளை எவ்வாறு சேர்ப்பது.
          பெரும்பாலான கணினி மொழிகளில் சுமார் நூறு வார்த்தைகள் அல்லது கட்டளைகள் மட்டுமே
          உள்ளன. இந்த கட்டிடத் தொகுதிகளில் இருந்து உங்கள் சொந்த புதிய சொற்களை வரையறுப்பதில்
          கலை மற்றும் மந்திரம் உள்ளது.
      2:
        text: விளையாட்டில் நாங்கள் இதை எப்போதும் செய்கிறோம். எடுத்துக்காட்டாக, கூடைப்பந்தாட்டத்தில்,
          எப்படி டிரிப்பிள் செய்வது, எப்படி லே-அப் செய்வது, எப்படி மீள்வது போன்றவற்றைக்
          கற்றுக்கொள்வதன் மூலம் தொடங்குவீர்கள். இந்த அடிப்படை நகர்வுகளை நீங்கள் கற்றுக்கொண்டவுடன்,
          புதிய நகர்வுகளைக் கற்றுக்கொண்டு, பிக் அண்ட் ரோல் அல்லது கிவ் அன்ட் கோ போன்ற
          இந்த கட்டுமானத் தொகுதிகளை ஒன்றாக இணைக்கிறீர்கள். நீங்கள் மிகவும் சிக்கலான
          நாடகங்களை செய்ய அங்கிருந்து செல்லலாம். அந்த நாடகத்தைக் கற்றுக்கொண்டு அதற்குப்
          பெயர் வைத்தால், அதை எப்படிச் செய்வது என்று அணியில் உள்ள அனைவருக்கும் தெரியும்.
      3:
        text: இதேபோல், இந்த கட்டளைகளின் வரிசையைப் பயன்படுத்தி ஒரு செயலை எப்படிச் செய்வது
          என்று கணினிக்குக் கற்றுக் கொடுத்தவுடன், அந்த செயலுக்கு உங்கள் சொந்த பெயரை
          உருவாக்கலாம், எனவே அதை மீண்டும் செய்வது எளிது. உங்கள் சொந்த கட்டளையை வரையறுத்து
          அதற்கு ஒரு பெயரைக் கொடுக்கும்போது, ​​​​அது ஒரு செயல்பாடு என்று அழைக்கப்படுகிறது.
          இப்போது நாம் தேனீக்கு உதவும் செயல்பாடுகளைப் பயன்படுத்தப் போகிறோம்.
      4:
        text: இந்த எடுத்துக்காட்டில், எங்கள் செயல்பாடு கெட் 2 நெக்டர் என்று அழைக்கப்படுகிறது,
          இந்த பச்சைத் தொகுதி இங்கே உள்ளது. இந்த சாம்பல் நிறப் பெட்டியைப் பார்த்து,
          get 2 nectar என்ன செய்கிறது என்பதை நாம் அறிவோம். நாம் அங்கே உள்ளே பார்த்தால்,
          get 2 nectar அமிர்தத்தைப் பெறப் போகிறது, பின்னர் மீண்டும் அமிர்தம் கிடைக்கும்.
          எப்பொழுதும் சாம்பல் நிறப் பெட்டியின் உள்ளே என்ன இருக்கிறது என்பதைப் பார்க்கவும்,
          இதன் மூலம் இந்த பச்சை செயல்பாட்டுத் தொகுதிகள் என்ன செய்ய முடியும் என்பதை
          நீங்கள் அறிவீர்கள்.
    C3_bee_nested_loops:
      1:
        text: இப்போது நாம் தேனீயுடன் உள்ளமைக்கப்பட்ட சுழல்களைப் பயன்படுத்தப் போகிறோம்.
          எங்களிடம் சில ஸ்டார்டர் குறியீடு கொடுக்கப்பட்டுள்ளது, இது தேனீவை முன்னோக்கி
          நகர்த்தவும், மூன்று முறை அமிர்தத்தைப் பெறவும், பின்னர் வலதுபுறம் திரும்பவும்
          சொல்லும். அந்தக் குறியீட்டின் முழுப் பகுதியையும் எடுத்து மற்றொரு ரிப்பீட்
          பிளாக்கில் வைத்து மூன்று முறை ரிப்பீட் செய்யும்படி அமைக்கலாம். முடிந்தது!
    C3_bounce:
      1:
        text: நீங்கள் உங்கள் சொந்த பவுன்ஸ் விளையாட்டை உருவாக்கப் போகிறீர்கள், அதை
          நீங்கள் உங்கள் நண்பர்களுடன் பகிர்ந்து கொள்ள முடியும்! எவ்வளவு குளிர்ச்சியாக
          உள்ளது!
      2:
        text: தொடங்குவதற்கு, பெடெல் கட்டுப்பாடுகளை நமது விசைப்பலகையில் உள்ள அம்புக்குறி
          விசைகளுடன் இணைக்க வேண்டும்.
      3:
        text: இடது அம்புக்குறியை நகர்த்த இடது பிளாக்குடன் இணைப்பதன் மூலம் இதைச் செய்யலாம்.
          இதைப் பாருங்கள், எந்த நேரத்திலும் உங்கள் சொந்த பவுன்ஸ் விளையாட்டை நிரலாக்குவீர்கள்!
    C3_computational_thinking:
      1:
        text: இந்த பாடம் கணக்கீட்டு சிந்தனை. சில நேரங்களில் ஒரு புதிய விளையாட்டைக்
          கற்றுக்கொள்வது கடினமாக இருக்கலாம், இல்லையா? முதலில் இது மிகவும் குழப்பமாகத்
          தோன்றலாம், சில சமயங்களில், உங்களுக்கு விதிகளைக் கற்பிக்க யாரும் இல்லை, எனவே
          நீங்கள் அதை நீங்களே கண்டுபிடிக்க வேண்டும்.
      2:
        text: நல்ல செய்தி என்னவென்றால், சில சிந்தனை தந்திரங்களை நீங்கள் அறிந்தால்,
          உங்கள் சொந்த விஷயங்களைக் கண்டுபிடிப்பதில் நீங்கள் சிறந்து விளங்கலாம். இந்த
          தந்திரங்கள் பிரச்சனைகளைப் பார்ப்பதற்கும் தீர்ப்பதற்கும் தனித்துவமான வழிகள்.
          இந்த பாடத்தில், நீங்கள் நான்கு தந்திரங்களைப் பற்றி அறிந்துகொள்வீர்கள், மேலும்
          விளையாட்டின் விதிகளைக் கண்டறிய உங்கள் நண்பர்களுடன் பயிற்சி செய்வீர்கள்.
      3:
        text: நீங்கள் ஒரு பெரிய பிரச்சனையை சிறிய துண்டுகளாக உடைக்கும்போது, ​​​​பெரிய
          பிரச்சனையை சிதைக்க உங்கள் மூளையைப் பயன்படுத்துகிறீர்கள். பெரிய பிரச்சனையை
          பல சிறிய பிரச்சனைகளாக மாற்றிய பின், பேட்டர்ன் மேட்ச் எனப்படும் அடுத்த தந்திரத்திற்கு
          நாம் செல்லலாம்.
      4:
        text: அப்போதுதான் விஷயங்களுக்கு இடையே உள்ள ஒற்றுமைகளைத் தேடுகிறோம். ஒரே மாதிரியான
          விஷயங்களைக் கண்டறிந்ததும், என்ன விஷயங்கள் வேறுபட்டவை என்பதை என்னால் கண்டுபிடிக்க
          முடியும். நான் அந்த வேறுபாடுகளை நீக்கினால், அது சுருக்கம் என்று அழைக்கப்படுகிறது.
      5:
        text: ஒரு சிக்கலைத் தீர்ப்பதற்கான படிகளை நான் கண்டறிந்த பிறகு, அந்தச் சிக்கலைத்
          தீர்க்க எவரும் எனது திசைகளைப் பயன்படுத்தும் வகையில், அல்காரிதம் எனப்படும்
          ஒரு குறிப்பிட்ட வரிசையில் அந்தப் படிகளை வைக்கலாம். விதிகள் எதுவுமின்றி விளையாட்டை
          எப்படி விளையாடுவது என்பதைக் கண்டுபிடிக்க இந்த நான்கு படிகளைப் பயன்படுத்தப்
          போகிறோம். விளையாட்டின் முடிவில், இது போன்ற தோற்றத்தை நீங்கள் விளையாட முடியும்!
    C3_crowdsourcing:
      1:
        text: இந்த பாடம் கிரவுட் சோர்சிங் என்று அழைக்கப்படுகிறது. இந்தப் பாடத்தில்,
          சில விஷயங்களைத் தனியாகச் செய்ய முயற்சிப்பதற்குப் பதிலாக, குழுக்களாகச் செய்வது
          எவ்வளவு எளிதாக இருக்கும் என்பதைப் பற்றி அறிய, அட்டைகளின் அடுக்கைப் பயன்படுத்துவோம்.
          எனவே சில நண்பர்களைப் பிடித்து அற்புதமான ஒன்றை உருவாக்குங்கள். க்ரவுட்சோர்சிங்
          என்பது எதையாவது வேகமாக முடிப்பதற்காக ஒரு பெரிய குழுவினரின் உதவியைப் பெறுகிறது.
      2:
        text: கணினி அறிவியலில், நாங்கள் எப்போதும் கிரவுட் சோர்சிங்கைப் பயன்படுத்துகிறோம்.
          ஆயிரக்கணக்கான அமெச்சூர்கள் மற்றும் தொழில் வல்லுநர்கள் தங்கள் கணினிகளை ஒன்றாக
          இணைத்து பில்லியன் கணக்கான மற்றும் பில்லியன் கணக்கான தகவல்களைத் தேடுகின்றனர்.
          அடுத்த மார்சென் பிரைம் எண் அல்லது சாத்தியமான ஏலியன் தகவல்தொடர்புகள் போன்றவற்றைத்
          தேடுகிறது.
      3:
        text: நீங்கள் ஒரு திரைப்படத்தைப் பார்க்கும்போது, ​​​​படத்தின் ஒவ்வொரு நொடியும்
          24 தனித்தனி படங்கள், அவற்றை நாங்கள் பிரேம்கள் என்று அழைக்கிறோம். எனவே அந்த
          படங்கள் ஒவ்வொன்றையும் உருவாக்கி வழங்க வேண்டும் மற்றும் அனைத்தையும் ஒன்றாக
          இணைக்க வேண்டும். நானும் எனது குழுவும், நாங்கள் அனைவரும் மென்பொருள் உருவாக்குநர்கள்.
          உண்மையில் ஒரு படத்தை உருவாக்கும், நீங்கள் திரையில் பார்க்கும் இறுதி படத்தை
          உருவாக்கும் ஒரு மென்பொருளை உருவாக்க நாங்கள் அனைவரும் ஒன்றாக வேலை செய்கிறோம்.
          கலைஞர்கள் மற்றும் பிற டெவலப்பர்கள் தங்கள் குழுப்பணியின் ஒரு பகுதியாகவும்,
          திரையில் அவர்கள் விரும்பும் படங்களை உருவாக்குவதற்கான செயல்முறையாகவும் பயன்படுத்தக்கூடிய
          ஒரு கருவி இது.
      4:
        text: எடுத்துக்காட்டாக, ஃபைண்டிங் நெமோவில், க்ரஷ் அண்ட் ஸ்கிர்ட் மற்றும் அவர்களது
          நண்பர்கள் அனைவரும் கிழக்கு ஆஸ்திரேலிய மின்னோட்டத்தில் பறக்கும்போது. நீர்
          வழிந்தோடும் படங்களைப் பார்க்கிறீர்கள், ஆமையின் பின்புறத்தில் வண்ணங்களைப்
          பார்க்கிறீர்கள், மீனின் பக்கங்களைப் பார்க்கிறீர்கள். அந்த விஷயங்கள் அனைத்தும்
          நாம் எழுதும் கணிதம் மற்றும் கணினி நிரல்களின் மூலம் உருவாக்கப்படுகின்றன,
          அதை நாங்கள் கலைஞருக்குக் கொடுப்போம், அவர்கள் அதை எடுத்து அந்த இறுதிப் படத்தை
          உருவாக்கி அதை மாற்றியமைத்து அழகாகவும் வேடிக்கையாகவும் பார்க்கிறார்கள்.
    C3_dice_race:
      1:
        text: இந்தப் பாடம் டைஸ் ரேஸ் என்று அழைக்கப்படுகிறது. கிட்டத்தட்ட அனைவரும்
          கணினி விளையாட்டுகளை விளையாட விரும்புகிறார்கள். கணினி புரோகிராமர்கள் விளையாட்டின்
          படிகளை ஒரு நிரலாக மாற்றுவது பற்றி நீங்கள் எப்போதாவது யோசித்திருக்கிறீர்களா?
          கம்ப்யூட்டர் கேம்களை உருவாக்குவதற்கும், எந்தப் பிரச்சினையைத் தீர்ப்பதற்கும்
          முதல் படியாக சிந்தனையும் திட்டமிடலும் தேவை.
      2:
        text: சிக்கலைத் தீர்ப்பதற்கான சிந்தனைப் படி ஒரு வழிமுறையை உருவாக்குகிறது,
          இது ஒரு சிக்கலைத் தீர்ப்பதற்கான அல்லது ஒரு பணியை முடிப்பதற்கான படிப்படியான
          திட்டமாகும். இந்தப் பாடத்தில், பகடை பந்தய விளையாட்டுக்கான அல்காரிதத்தை உருவாக்குவீர்கள்.
          பின்னர், விளையாட்டை விளையாடுவதற்கான படிகளைப் பின்பற்ற முடியுமா என்பதைப்
          பார்க்க, உங்கள் திட்டத்தை முயற்சிக்குமாறு உங்கள் நண்பர்களைக் கேட்பீர்கள்.
          புரோகிராமர் படிகள் சரியாக இருப்பதை உறுதிசெய்த பிறகு, கணினி புரிந்து கொள்ளக்கூடிய
          மொழியுடன் அல்காரிதத்தை ஒரு நிரலாக மொழிபெயர்க்க வேண்டிய நேரம் இது.
      3:
        text: நாம் அன்றாடம் செய்யும் அனைத்திற்கும் ஒரு அல்காரிதம் தேவைப்படுகிறது,
          ஒரு பணியை முடிக்க நீங்கள் பின்பற்றக்கூடிய படிகளின் பட்டியல். பள்ளிக்குத்
          தயாராவது அல்லது உங்கள் நண்பர்களுடன் ஒரு வேடிக்கையான நாளைத் திட்டமிடுவது
          அல்லது சிற்றுண்டியை சரிசெய்வது பற்றி யோசியுங்கள். அந்த பணிகளில் ஏதேனும்
          ஒன்றை முடிக்க, நீங்கள் அதை சிறிய படிகளாக பிரிக்க வேண்டும் மற்றும் சில நேரங்களில்
          படிகள் ஒரு குறிப்பிட்ட வரிசையில் இருக்க வேண்டும்.
      4:
        text: ஒரு சாண்ட்விச் தயாரிப்பது பற்றி யோசி. நீங்கள் முதலில் அமைச்சரவையிலிருந்து
          எந்தப் பொருளைப் பெறுகிறீர்கள் என்பது முக்கியமல்ல. ஆனால் நீங்கள் ஜாடியைத்
          திறக்கும் வரை கடலை வெண்ணெய் பரப்ப முடியாது. கணினிகளுக்கு அல்காரிதம்கள் மற்றும்
          புரோகிராம்கள் தேவை, அவற்றைப் பற்றி சிந்திக்காமல் நாம் செய்யக்கூடிய எளிய
          விஷயங்களைக் கூட எப்படி செய்வது என்று அவர்களுக்குக் காண்பிக்க வேண்டும்.
      5:
        text: ஒரு அல்காரிதம் என்பது என்ன நடக்க வேண்டும் என்பதைப் பின்னால் சிந்திப்பது
          ஆகும், அதே நேரத்தில் நிரல் அதைச் செயல்படுத்த கணினிக்கு வழங்கப்படும் உண்மையான
          வழிமுறைகள் ஆகும். ஒரு கணினி அதை இயக்குவதற்கு முன், ஒரு அல்காரிதம் ஒரு நிரலாக
          மொழிபெயர்க்கப்பட வேண்டும். ஒரு பணியை அல்காரிதம் எனப்படும் படிகளாக உடைப்பது
          சில நேரங்களில் கடினமாக இருக்கும். ஆனால் எந்தவொரு புதிய திறமையையும் போலவே,
          இது நடைமுறையில் மிகவும் எளிதாகவும் இருக்கும்.
    C3_farmer_while:
      1:
        text: சுழல்கள் நீங்கள் அன்றாட வாழ்க்கையில் செய்வதைப் போலவே இருக்கும். நீங்கள்
          உங்கள் காரைக் கழுவுகிறீர்கள் என்று கற்பனை செய்து பாருங்கள், அது சுத்தமாகும்
          வரை ஸ்க்ரப்பிங் செய்து கொண்டே இருப்பீர்கள். அது சுத்தமாக இல்லை என்றாலும்,
          தொடர்ந்து ஸ்க்ரப் செய்யவும். நீங்கள் இந்த விஷயங்களை எப்போதும் மதிப்பீடு
          செய்கிறீர்கள்.
      2:
        text: உங்கள் விவசாயிக்கு உதவ புதிய தோற்றத்தைப் பெற்றுள்ளோம். இது ஒரு போது-தடுப்பு
          என்று அழைக்கப்படுகிறது. இது உண்மையில் மிகவும் எளிமையானது. மேலே ஒரு கூற்று
          உண்மையாக இருந்தாலும், ஏதாவது செய்யுங்கள். உதாரணமாக, ஒரு குவியல் இருக்கும்
          போது ஒரு வைக்கோல் நகர்த்தவும். மேலே சென்று உங்கள் விவசாயியுடன் முயற்சி செய்து
          பாருங்கள்.
    C3_functional_suncatchers:
      1:
        text: இந்த பாடம் செயல்பாட்டு சன்கேட்சர்கள். செயல்பாடுகளைப் பயன்படுத்தி இந்த
          அழகான சன்கேட்சர்களை உருவாக்குவீர்கள். இந்த சன்கேட்சர்களில் ஒன்றை உருவாக்குவதில்
          பல படிகள் உள்ளன. சில படிகளை நீங்கள் பல முறை செய்ய வேண்டும்.
      2:
        text: சன்கேச்சரை உருவாக்கும் செயல்முறையை எளிதாக்குவதற்கான முதல் படி, நாம்
          மீண்டும் மீண்டும் என்ன செய்ய வேண்டும் என்பதைக் கண்டுபிடிப்பதாகும். இந்த
          படிகளை நாம் செயல்பாடு என்று அழைக்கும் வகையில் தொகுக்கலாம்.
      3:
        text: ஆனால் துல்லியமான படிகளைப் பின்பற்றுவதை விட அழகான சூரிய ஒளிப்பதிவை உருவாக்குவது
          அதிகம். சில நேரங்களில் நாம் ஆக்கப்பூர்வமாக இருக்க விரும்புகிறோம் மற்றும்
          நாம் பயன்படுத்தும் மணிகளின் நிறத்தை மாற்ற விரும்புகிறோம். வெவ்வேறு வண்ண
          மணிகளைப் பயன்படுத்தினால், ஒவ்வொரு சூரியப் பிடிக்கும் கருவியையும் தனித்துவமாக்க
          முடியும்.
      4:
        text: மணிகளை மாறிகளாகக் கருத நீங்கள் கற்றுக் கொள்ளும்போது, உங்கள் சன்கேட்சர்
          தனிப்பட்ட முறையில் உங்களுடையதாக இருக்கும், இது மாற்றக்கூடிய தகவலுக்கான ஒதுக்கிடத்தைக்
          குறிக்கும் வார்த்தையாகும். செயல்பாடுகள் மற்றும் மாறிகளைப் பயன்படுத்தி அழகான
          சன்கேட்சர்களை உருவாக்கி மகிழுங்கள்!
    C3_internet:
      1:
        text: இந்தப் பாடம் இணையத்தைப் பற்றியது. இண்டர்நெட் மிகவும் பிஸியான இடம் மற்றும்
          இந்த பரபரப்பான சாலையைப் போன்றது. கார்கள் போன்ற செய்திகள் அவற்றின் இடங்களுக்குச்
          செல்ல பெரிதாக்கப்படுகின்றன. இணையத்தில் செய்திகள் மிக விரைவாக நகர்கின்றன.
      2:
        text: இணையம் எவ்வாறு செயல்படுகிறது என்பதைச் செயல்படுத்துவது, நீங்கள் இணையத்தைப்
          பயன்படுத்தும்போது என்ன நடக்கிறது என்பதைப் புரிந்துகொள்ள உதவும். உங்கள் கணினியிலிருந்து
          விருப்பமான இணையதளத்திற்கு அல்லது நண்பரிடமிருந்து மின்னஞ்சல் இன்பாக்ஸுக்கு
          எப்படிச் செய்திகள் வருகின்றன என்பதை நீங்கள் அறிந்துகொள்வீர்கள். நீங்கள்
          சாலைகளை அறிந்ததும், அடையாளங்களைப் படிக்கும்போதும், பரபரப்பான சாலைகளில் செல்வது
          எளிதாக இருப்பதைப் போலவே, திரைக்குப் பின்னால் என்ன நடக்கிறது என்பதை நீங்கள்
          அறிந்தால் இணையத்தில் பயணம் செய்வது அவ்வளவு சிக்கலானது அல்ல.
      3:
        text: இணையத்தில் செய்திகளை அனுப்புவது மெயிலில் செய்திகளை அனுப்புவது போன்றது
          ஆனால் சில வேறுபாடுகளுடன். நான் இங்கே Google.com இல் இருக்கிறேன். இந்த இணையதளத்திற்கான
          ஐபி முகவரி இந்த எண். மின்னஞ்சலில் உங்கள் திரும்பும் முகவரியாக ஐபி முகவரியை
          நீங்கள் நினைக்கலாம். கீழே உள்ள அலுவலகத்தில் உள்ள ஒருவருக்கு நான் மின்னஞ்சலில்
          ஒரு செய்தியை அனுப்ப விரும்புகிறேன் என்று கற்பனை செய்து கொள்வோம். அந்த கதவில்
          URL மற்றும் IP முகவரியைப் பார்க்கிறீர்களா? நான் இந்த செய்தியை எழுதி அனுப்பு
          என்பதை அழுத்தவும்.
      4:
        text: அஞ்சல் சேவையைப் போலல்லாமல், இணையம் செய்தியை சிறிய பகுதிகளாக உடைக்கிறது,
          எனவே அதை எளிதாக அனுப்ப முடியும். இந்த சிறிய பாகங்கள் பாக்கெட்டுகள் என்று
          அழைக்கப்படுகின்றன. செய்தியின் ஒவ்வொரு பாக்கெட்டும் ஒரு நேரத்தில் இலக்குக்கு
          அனுப்பப்படும். இந்த பாக்கெட்டுகள் அனைத்தும் சரியான வரிசையில் ஒன்றாக இணைக்கப்பட்டுள்ளன,
          இதனால் பெறுநர் செய்தியை சரியாக படிக்க முடியும். நிச்சயமாக, இணையம் எவ்வாறு
          செயல்படுகிறது என்பதைப் பற்றி அறிய இன்னும் பல விஷயங்கள் உள்ளன, ஆனால் இது
          ஒரு சிறந்த தொடக்கமாகும். நீங்கள் ஆர்வமுள்ள இணையப் பயனராக மாறுவதற்கான பாதையில்
          இருக்கிறீர்கள்! நீங்கள் கற்றுக்கொண்டதை உங்கள் குடும்பத்தினருக்கும் நண்பர்களுக்கும்
          சொல்ல மறக்காதீர்கள்!
      5:
        text: எனது பெயர் அமண்டா கேம்ப் மற்றும் நான் கூகுளில் மென்பொருள் பொறியாளராக
          உள்ளேன். சுயவிவரங்கள் மற்றும் தொடர்புகளைச் சேமிக்கும் பின்தள சேவையகத்தில்
          பணிபுரியும் குழுவில் நான் பணிபுரிகிறேன். எனது வேலையில், உங்கள் ஃபோன் போன்ற
          பிற சாதனங்களுக்கு எப்படி தொடர்புகளை அனுப்பலாம் என்பது பற்றி நாங்கள் அதிகம்
          யோசிக்கிறோம். பெரும்பாலான நபர்களுக்கு நிறைய தொடர்புகள் உள்ளன, 1000 தொடர்புகள்
          என்று நீங்கள் கூறலாம், மேலும் அந்தத் தொடர்புகள் அனைத்தையும் ஒரே நேரத்தில்
          உங்கள் மொபைலுக்கு அனுப்ப நாங்கள் விரும்பவில்லை, ஏனெனில் அது மிகப்பெரிய செய்தியாக
          உள்ளது. இணையம் பெரிய செய்திகளை பாக்கெட்டுகளாக உடைப்பதைப் போலவே, நாங்கள்
          பேஜிங் எனப்படும் ஒரு கருத்தைப் பயன்படுத்துகிறோம், அதில் ஒரே நேரத்தில் உங்கள்
          ஃபோனில் 100 தொடர்புகளை மட்டுமே அனுப்புவோம், மேலும் உங்கள் ஃபோனை எங்களிடம்
          கேட்டு அடுத்த 100ஐக் கேட்கலாம்.
      6:
        text: மென்பொருளைப் பற்றிய மிகவும் உற்சாகமான விஷயம் என்னவென்றால், அது உலகம்
          முழுவதையும் பாதிக்கும். நான் முதன்முதலில் ப்ரோகிராம் செய்யக் கற்றுக்கொண்டது
          சுமார் பத்தொன்பது வயதில்தான். நான் ஏற்கனவே கல்லூரியில் இரண்டாம் ஆண்டு அல்லது
          ஜூனியர் என்று நினைக்கிறேன். நான் எழுதிய முதல் நிரல் செல்சியஸை ஃபாரன்ஹீட்டாக
          மாற்றியது. நான் நிரலாக்கத்தை விரும்புகிறேன், ஏனென்றால் நான் மக்களுக்கு உதவ
          விரும்புகிறேன். உலகெங்கிலும் உள்ள மக்களுக்கு உதவும் நிரல்களை நான் Google
          இல் எழுத முடியும், அது உண்மையிலேயே மனதைக் கவரும் மற்றும் உற்சாகமானது.
    C3_maze_conditionals:
      1:
        text: மக்கள் ஒவ்வொரு நாளும் முடிவுகளை எடுக்கிறார்கள். உதாரணமாக, நீங்கள் வெளியில்
          செல்வதற்கு முன், மழை பெய்தால், நான் என் ஜாக்கெட்டை எடுக்க வேண்டும் என்று
          ஒரு if அறிக்கையை வைத்திருக்கிறீர்கள். கம்ப்யூட்டர்கள் நம்பத்தகுந்த விதத்திலும்
          நம்பமுடியாத வேகத்திலும் செயல்படக்கூடிய அந்த வகையான அறிக்கைகளை நீங்கள் முடிவு
          செய்தவுடன் ஆச்சரியமாக இருக்கும். ஒரு கணினி நிரல் உண்மையில் ஒரு சிறிய கணிதம்
          மற்றும் சில முடிவுகளை எடுக்கும் அறிக்கைகள்.
      2:
        text: ஜோம்பி ஒரு முடிவை எடுக்க if block உதவுகிறது. இது எதையாவது சரிபார்க்கிறது.
          எடுத்துக்காட்டாக, இடதுபுறம் ஒரு பாதை இருக்கிறதா என்று சொல்லும் பிளாக்கைப்
          பயன்படுத்தி, அதற்குள் இடதுபுறமாகத் திரும்ப கட்டளையை இடுவோம். நாங்கள் சோம்பியிடம்
          அதன் சுற்றுப்புறத்தைச் சரிபார்க்கச் சொல்கிறோம், இடதுபுறத்தில் பாதை இருக்கிறதா
          என்று பார்க்கவும், அப்படியானால், அதைத் திருப்பவும்.
      3:
        text: இந்த ரிப்பீட்டிற்குள் இருக்கும் மூவ் ஃபார்வேர்டு பிளாக்கைப் பயன்படுத்தி,
          அது நேராகச் செல்ல விரும்பும் வரை அதை முன்னோக்கி நகர்த்திக் கொண்டே இருக்கும்.
          பின்னர் ஒரு திருப்பம் வரும்போது, இடதுபுறம் திரும்பும்படி if பிளாக் சொல்லும்.
          அப்படிச் செய்தால், இடது பக்கம் திரும்பினால், முன்னோக்கிச் சென்றால், நம்
          இலக்கை அடைவோம் என்பதை நீங்கள் பார்க்கலாம்.
      4:
        text: கணினி நிரலாக்கத்தில் உண்மையில் ஒரு அடிப்படைக் கருத்தாக இருக்கும் if
          அறிக்கையைப் பயன்படுத்துவதற்கு இது ஒரு எடுத்துக்காட்டு. டிக்-டாக்-டோ விளையாடும்
          ஒரு நிரலை எவ்வாறு எழுதுவது என்பது நான் கற்றுக்கொண்ட முதல் விஷயங்களில் ஒன்றாகும்.
          எனக்கு அறிக்கைகள் இருந்தால் சரி, மற்றவர் வெற்றி பெறுவார் என்றால், மேலே சென்று
          அந்த இடத்தைத் தடுக்கவும். ஸ்டேட்மென்ட் என்றால் எப்படி பயன்படுத்துவது என்பதை
          அறிந்து மகிழுங்கள், இது ஒரு முக்கிய கருத்தாகும்.
    C3_maze_level_4:
      1:
        text: இந்த எடுத்துக்காட்டில், சூரியகாந்திக்கு ஜாம்பியைப் பெறுவதே உங்கள் குறிக்கோள்.
          நாம் ஐந்து மூவ் ஃபார்வர்ட் பிளாக்குகளைப் பயன்படுத்தலாம் அல்லது கணினியை முன்னோக்கி
          நகர்த்தச் சொல்லலாம் மற்றும் ஒரு ரிப்பீட் பிளாக்கைப் பயன்படுத்தி ஐந்து முறை
          திரும்பத் திரும்பச் சொல்லலாம்.
      2:
        text: இது நேரத்தை மிச்சப்படுத்துகிறது மற்றும் வழியை எளிதாக்குகிறது. அதைப்
          பயன்படுத்த, மூவ் ஃபார்வர்ட் பிளாக்கை ரிப்பீட் பிளாக்கிற்குள் வைக்கவும்.
          ஹிட் ரன் மற்றும் ஜாம்பி ஐந்து முறை முன்னோக்கிச் சென்று அற்புதமான சூரியகாந்திக்கு
          செல்லும்.
    C3_playlab_create_game:
      1:
        text: இதுவரை நீங்கள் ஒரு அனிமேஷன் அல்லது கதையை உருவாக்கி வருகிறீர்கள், அது
          ஒவ்வொரு முறையும் நீங்கள் இயக்கும் அதே காரியத்தைச் செய்கிறது. இப்போது நீங்கள்
          உண்மையில் விளையாடக்கூடிய ஒரு ஊடாடும் விளையாட்டை உருவாக்கலாம்.
      2:
        text: முயற்சிக்க சில புதிய தொகுதிகள் உள்ளன. "எப்போது அம்புக்குறி" தொகுதி மற்றும்
          "நடிகர் நகர்த்தும்" தொகுதி உள்ளது. அம்புக்குறி விசைகள் மூலம் நடிகர்களை நகர்த்த
          இந்த தொகுதிகளை ஒன்றாக இணைக்கலாம். நடிகர்கள் மோதும்போது அல்லது கிளிக் செய்யும்
          போது சில பிளாக்குகள் உள்ளன. அவற்றைப் பார்த்து மகிழுங்கள்!
    C3_songwriting_with_parameters:
      1:
        text: பாடல் எழுதும் பாடம் இது. இசை என்பது கணினி நிரல் போன்றது. எழுதப்பட்ட
          குறிப்புகள் மற்றும் வார்த்தைகள் பாடகர் என்ன செய்ய வேண்டும் என்று சரியாகச்
          சொல்கிறது. இசையின் சில பகுதிகள்  மீண்டும் பயன்படுத்தப்படுகின்றன.
      2:
        text: இதை கோரஸ் என்கிறோம். கணினி நிரலில், மீண்டும் மீண்டும் பயன்படுத்தப்படும்
          நிரலின் பகுதிகள் செயல்பாடுகள் என்று அழைக்கப்படுகின்றன. நீங்கள் பாடல் வரிகளைப்
          படிக்கும்போது அது கோரஸ் என்ற வார்த்தையைச் சொன்னால், நீங்கள் கோரஸ் என்ற வார்த்தையைப்
          பாடுகிறீர்களா? இல்லை, எந்த வார்த்தைகள் கோரஸை உருவாக்குகின்றன என்பதைப் பார்க்க
          பக்கத்தின் மேலே பார்க்கவும்.
      3:
        text: இந்தப் பாடத்தில், லிட்டில் பன்னி ஃபூ ஃபூ என்ற வேடிக்கையான சிறிய பாடலை
          நீங்கள் கற்றுக் கொள்வீர்கள். பாடலில் ஒரு கோரஸ் உள்ளது, நீங்கள்  மீண்டும்
          பாடுவீர்கள். ஒரு செயல்பாடு என்பது குறியீட்டின் ஒரு பகுதியாகும், அதை நீங்கள்
          மீண்டும் மீண்டும் அழைக்கலாம். இது நிரலாக்கத்தை எளிதாகவும் திறமையாகவும் ஆக்குகிறது,
          எனவே உங்கள் செயல்பாட்டின் படிகளை நீங்கள் மீண்டும்  எழுத வேண்டியதில்லை. நீங்கள்
          ஒரு முறை எழுதலாம்!
    C4_bee_conditional:
      1:
        text: இது நிபந்தனைக்குரிய தொகுதி. நீங்கள் பூவிலோ அல்லது தேன் கூட்டிலோ இருந்தால்,
          ஏதாவது செய்யுங்கள் என்று அது கூறுகிறது. இந்தக் கேள்விக் குறியுடன் நாம் இங்கே
          பார்ப்பது போல் எவ்வளவு தேன் அல்லது அமிர்தம் பெறுவது என்று தெரியாதபோது இது
          பயனுள்ளதாக இருக்கும்.
      2:
        text: இந்த எடுத்துக்காட்டில், ஒரு பூவாக இருந்தால், அனைத்து அமிர்தத்தையும்
          பெறுங்கள், அது ஒரு தேன் கூடு என்றால், தேன் என்று சொல்ல மற்றொரு ஒன்றைப் பயன்படுத்தவும்.
          தா-தாஹ்!
    C4_conditionals:
      1:
        text: எங்களிடம் ஒரு புதிய தொகுதி உள்ளது, அது if/else தொகுதி என்று அழைக்கப்படுகிறது.
          நீங்கள் முன்பு புதிர்களில் பயன்படுத்திய if பிளாக் போன்ற ஒரு நிபந்தனை அறிக்கை
          இது. ஆனால் இப்போது கீழே வேறு ஒரு புதிய பகுதி உள்ளது. if/else பிளாக் ஆனது
          இரண்டு செட் செயல்களுக்கு இடையே ஒரு முடிவை எடுக்க தேனீயை அனுமதிக்கிறது. தேனீ
          ஒரு பூவில் இருந்தால், முதல் பகுதியில் நீங்கள் செய்யும் செயல்களின் தொகுப்பை
          தேனீ செய்யும். தேனீ ஒரு பூவில் இல்லை என்றால், தேனீ அது சொல்லும் இடத்தில்
          நீங்கள் செய்யும் செயல்களின் தொகுப்பை செய்யும்.
      2:
        text: அறிக்கைகள் என்றால் கணினிகள் எப்படி முடிவெடுக்க முடியும். ஒரு குறிப்பிட்ட
          சூழ்நிலையில் கணினி வழங்கப்பட்டால் இதைச் செய்யுங்கள் என்று கணினிக்கு மனிதர்கள்
          நிபந்தனைகளை அமைக்கின்றனர். இல்லையெனில், அதாவது, அதைச் செய்யுங்கள். எங்கள்
          if/else பிளாக்கின் மேல் என்றால் if at flower என்று கூறுகிறது. ஆனால் எங்கள்
          பிளாக்கின் மேற்பகுதி மற்ற விஷயங்களைச் சொல்லலாம், அதாவது அமிர்தம் 2க்கு சமம்
          என்றால் அல்லது முன்னால் ஒரு பாதை இருந்தால், எங்கள் தொகுதியும் அதே வழியில்
          செயல்படும். மேலே உள்ள கூற்று உண்மையாக இருந்தால், அது முதல் செயல்களை செய்யும்.
          ஆனால் மேலே உள்ள அறிக்கை தவறானதாக இருந்தால், அது இரண்டாவது செட் செயல்களைச்
          செய்யும்.
    C4_for_loops:
      1:
        text: உங்கள் குறியீட்டை லூப் செய்ய ரிப்பீட் பிளாக்கைப் பயன்படுத்தும்போது,
          அது போதுமான முறை திரும்பத் திரும்பும்போது கணினிக்கு எப்படித் தெரியும்? ரிப்பீட்
          பிளாக் உண்மையில் ஒரு குறிப்பிட்ட அதிகரிப்பின் மூலம் தொடக்க மதிப்பிலிருந்து
          இறுதி மதிப்பு வரை கணக்கிடப்படும் ஃபார் லூப் எனப்படும் அதிநவீன குறியீட்டை
          மறைக்கிறது.
      2:
        text: எடுத்துக்காட்டாக, மீண்டும் மூன்று தொகுதிகள் 1 முதல் 3 வரை 1 ஆகக் கணக்கிடப்படும்.
          ஒவ்வொரு முறையும் அது எண்ணும் போது, அது லூப்பில் உள்ள குறியீட்டை இயக்குகிறது.
          லூப்பின் தொடக்கத்தில் உள்ள தொடக்க மதிப்பிற்கு அமைக்கப்பட்டு, ஒவ்வொரு முறை
          லூப் இயக்கப்படும் போதும் அதனுடன் அதிகரிப்பு சேர்க்கப்படும் எதிர் மாறியைப்
          பயன்படுத்தி எத்தனை முறை இயங்குகிறது என்பதை அறியும். எதிர் மாறி இறுதி மதிப்பை
          விட அதிகமாக இருந்தால், லூப் இயங்குவதை நிறுத்துகிறது.
      3:
        text: ரிப்பீட் பிளாக்கிற்குப் பதிலாக உண்மையான ஃபார் லூப்பைப் பயன்படுத்துவதன்
          நன்மை என்னவென்றால், நீங்கள் உண்மையில் எதிர் மாறியைப் பார்த்து அதை உங்கள்
          லூப்பில் பயன்படுத்தலாம். உதாரணமாக, என்னிடம் ஒரு தொடர் பூக்கள் இருந்தால்,
          முதல் ஒன்றில் ஒரு தேன் இருந்தால், இரண்டாவதாக இரண்டு தேன்கள் மற்றும் மூன்றில்
          மூன்று தேன் இருந்தால், ஒவ்வொரு முறையும் 'கவுண்டர்' தேன் சேகரிக்க தேனீயிடம்
          சொல்ல ஃபார் லூப்பைப் பயன்படுத்தலாம். இது முதல் மலரில் ஒன்று, இரண்டாவதாக
          இரண்டு மற்றும் மூன்றில் மூன்று.
      4:
        text: ஒரு ஃபார் லூப்பில், ஒவ்வொரு முறையும் ஒன்றைத் தவிர வேறு எண்ணால் கவுண்டரை
          அதிகரிக்கலாம். நீங்கள் 2வி, 4வி அல்லது ஒவ்வொரு முறையும் மாறும் அளவு கூட
          எண்ணலாம்.
    C4_for_loops_bee:
      1:
        text: உங்கள் குறியீட்டை லூப் செய்ய ரிப்பீட் பிளாக்கைப் பயன்படுத்தும்போது,
          அது போதுமான முறை திரும்பத் திரும்பும்போது கணினிக்கு எப்படித் தெரியும்? ரிப்பீட்
          பிளாக் உண்மையில் ஒரு குறிப்பிட்ட அதிகரிப்பின் மூலம் தொடக்க மதிப்பிலிருந்து
          இறுதி மதிப்பு வரை கணக்கிடப்படும் ஃபார் லூப் எனப்படும் அதிநவீன குறியீட்டை
          மறைக்கிறது.
      2:
        text: எடுத்துக்காட்டாக, மீண்டும் மூன்று தொகுதிகள் 1 முதல் 3 வரை 1 ஆகக் கணக்கிடப்படும்.
          ஒவ்வொரு முறையும் அது எண்ணும் போது, அது லூப்பில் உள்ள குறியீட்டை இயக்குகிறது.
          லூப்பின் தொடக்கத்தில் உள்ள தொடக்க மதிப்பிற்கு அமைக்கப்பட்டு, ஒவ்வொரு முறை
          லூப் இயக்கப்படும் போதும் அதனுடன் அதிகரிப்பு சேர்க்கப்படும் எதிர் மாறியைப்
          பயன்படுத்தி எத்தனை முறை இயங்குகிறது என்பதை அறியும். எதிர் மாறி இறுதி மதிப்பை
          விட அதிகமாக இருந்தால், லூப் இயங்குவதை நிறுத்துகிறது.
      3:
        text: ரிப்பீட் பிளாக்கிற்குப் பதிலாக உண்மையான ஃபார் லூப்பைப் பயன்படுத்துவதன்
          நன்மை என்னவென்றால், நீங்கள் உண்மையில் எதிர் மாறியைப் பார்த்து அதை உங்கள்
          லூப்பில் பயன்படுத்தலாம். உதாரணமாக, என்னிடம் ஒரு தொடர் பூக்கள் இருந்தால்,
          முதல் ஒன்றில் ஒரு தேன் இருந்தால், இரண்டாவதாக இரண்டு தேன்கள் மற்றும் மூன்றில்
          மூன்று தேன் இருந்தால், ஒவ்வொரு முறையும் 'கவுண்டர்' தேன் சேகரிக்க தேனீயிடம்
          சொல்ல ஃபார் லூப்பைப் பயன்படுத்தலாம். இது முதல் மலரில் ஒன்று, இரண்டாவதாக
          இரண்டு மற்றும் மூன்றில் மூன்று.
      4:
        text: ஒரு ஃபார் லூப்பில், ஒவ்வொரு முறையும் ஒன்றைத் தவிர வேறு எண்ணால் கவுண்டரை
          அதிகரிக்கலாம். நீங்கள் 2வி, 4வி அல்லது ஒவ்வொரு முறையும் மாறும் அளவு கூட
          எண்ணலாம்.
    C4_for_loops_no_bee:
      1:
        text: உங்கள் குறியீட்டை லூப் செய்ய ரிப்பீட் பிளாக்கைப் பயன்படுத்தும்போது,
          அது போதுமான முறை திரும்பத் திரும்பும்போது கணினிக்கு எப்படித் தெரியும்? ரிப்பீட்
          பிளாக் உண்மையில் ஒரு குறிப்பிட்ட அதிகரிப்பின் மூலம் தொடக்க மதிப்பிலிருந்து
          இறுதி மதிப்பு வரை கணக்கிடப்படும் ஃபார் லூப் எனப்படும் அதிநவீன குறியீட்டை
          மறைக்கிறது.
      2:
        text: எடுத்துக்காட்டாக, மீண்டும் மூன்று தொகுதிகள் 1 முதல் 3 வரை 1 ஆகக் கணக்கிடப்படும்.
          ஒவ்வொரு முறையும் அது எண்ணும் போது, அது லூப்பில் உள்ள குறியீட்டை இயக்குகிறது.
          லூப்பின் தொடக்கத்தில் உள்ள தொடக்க மதிப்புக்கு அமைக்கப்பட்டு, ஒவ்வொரு முறை
          லூப் இயக்கப்படும் போதும் அதனுடன் அதிகரிப்பு சேர்க்கப்படும் எதிர் மாறியைப்
          பயன்படுத்தி எத்தனை முறை இயங்குகிறது என்பதை அறியும். எதிர் மாறி இறுதி மதிப்பை
          விட அதிகமாக இருந்தால், லூப் இயங்குவதை நிறுத்துகிறது. ரிப்பீட் பிளாக்கிற்குப்
          பதிலாக உண்மையான ஃபார் லூப்பைப் பயன்படுத்துவதன் நன்மை என்னவென்றால், நீங்கள்
          உண்மையில் எதிர் மாறியைப் பார்த்து அதை உங்கள் லூப்பில் பயன்படுத்தலாம்.
    C4_function_create:
      1:
        text: இப்போது நீங்கள் செயல்பாட்டுத் தொகுதிகளைத் திருத்தியுள்ளீர்கள், புதிதாக
          ஒரு செயல்பாட்டுத் தொகுதியை உருவாக்குவதற்கான நேரம் இது. இது மிகவும் எளிமையானது.
          கருவிப்பெட்டியில் செயல்பாடுகள் எனப்படும் வகை இருப்பதைக் காண்பீர்கள். நீங்கள்
          இதை கிளிக் செய்தால், ஒரு செயல்பாட்டை உருவாக்கு என்ற ஆரஞ்சு பொத்தான் தோன்றும்.
          இதைக் கிளிக் செய்வதன் மூலம், நீங்கள் ஏற்கனவே இருக்கும் செயல்பாட்டுத் தொகுதிகளைத்
          திருத்தப் பயன்படுத்திய செயல்பாட்டு எடிட்டரைக் கொண்டு வரும்.
      2:
        text: முன்பு போலவே, உங்கள் செயல்பாட்டிற்கு பெயரிட்டு, செயல்பாடு என்ன செய்ய
          வேண்டும் என்பதற்கான விளக்கத்தை எழுதுவதன் மூலம் தொடங்குகிறீர்கள். உதாரணமாக,
          இது ஒரு சதுரத்தை வரைய வேண்டும் அல்லது ஒரு முக்கோணத்தை வரைய வேண்டும், பின்னர்
          கருவிப்பெட்டியிலிருந்து தொகுதிகளை கீழே உள்ள வெள்ளை பணியிடத்திற்கு இழுக்க
          வேண்டும். செயல்பாட்டிற்காக இந்த தொகுதிகளை பச்சை மடக்கு தொகுதிக்குள் இழுக்க
          நினைவில் கொள்ளுங்கள்.
      3:
        text: நீங்கள் முடித்ததும், சேமி என்பதைக் கிளிக் செய்து வெளியேறவும். இது உங்களை
          மீண்டும் முக்கிய புதிர் பணியிடத்திற்கு அழைத்துச் செல்லும். நீங்கள் உருவாக்கிய
          புதிய செயல்பாடு, உங்கள் கருவிப்பெட்டியில் உள்ள செயல்பாட்டு பிரிவில் பச்சைத்
          தொகுதியாகக் காண்பிக்கப்படும். முக்கிய பணியிடத்தில் இதை இழுத்து விடுங்கள்
          மற்றும் புதிரைத் தீர்க்க மற்ற தொகுதிகளைப் போலவே இதைப் பயன்படுத்தவும்.
    C4_function_edit:
      1:
        text: கம்ப்யூட்டர் புரோகிராமிங்கில் ஒரு பெரிய விஷயம் என்னவென்றால், ஒரு செயலை
          எப்படிச் செய்வது என்று கணினிக்குக் கற்றுக் கொடுத்தால், அந்தச் செயல்பாட்டை
          மீண்டும் அழைக்கலாம். நீங்கள் அதற்கு ஒரு பெயரைக் கொடுங்கள், பின்னர் நீங்கள்
          அதை அழைக்கலாம். இது உண்மையில் மொழியை நீட்டிப்பது போன்றது.
      2:
        text: நாங்கள் கட்டமைத்த நிரலில், நான்கு முறை நகர்த்துவதன் மூலமும் திருப்புவதன்
          மூலமும் ஒரு சதுரத்தை எப்படி வரைய வேண்டும் என்பதைக் கற்றுக்கொண்டோம். நாம்
          அந்த செயல்பாட்டை எடுத்து அதற்கு ஒரு பெயரைக் கொடுக்கலாம், ஒரு சதுரத்தை வரையலாம்,
          அதனால் எந்த நேரத்திலும் நாம் அதைச் செய்ய விரும்பினால், ஒரு சதுரத்தை வரையுங்கள்
          என்று கூறுவோம், அது திரும்பிச் சென்று அந்த செயல்பாட்டை, அந்த குறியீட்டை
          அழைக்கும். அது நமக்குச் செய்யப்படும். எங்கள் நிரலாக்க மொழியில் அந்தக் கருத்தைச்
          சேர்த்துள்ளோம்.
      3:
        text: இந்த புதிரில், உங்களுக்காக ஒரு சதுர செயல்பாட்டை நாங்கள் ஏற்கனவே உருவாக்கியுள்ளோம்.
          கருவிப்பெட்டியில் பச்சைத் தொகுதியாகப் பார்ப்பீர்கள். நீங்கள் செய்ய வேண்டியது
          என்னவென்றால், ஒரு சதுரத்தை வரைவதற்கு முன்பு நீங்கள் எழுதிய அதே குறியீட்டை
          எழுதவும், அதை இந்த செயல்பாட்டில் வைக்கவும். அதை செய்ய, பச்சை நிறத்தில் உள்ள
          எடிட் ஆப்ஷனை கிளிக் செய்யவும். இது செயல்பாட்டு எடிட்டரைத் திறக்கும். செயல்பாடு
          திருத்தி மூன்று பகுதிகளைக் கொண்டுள்ளது. உங்கள் செயல்பாட்டிற்கு நீங்கள் பெயரிடும்
          இடம். இது அந்தச் செயல்பாட்டிற்கு முன் பச்சைத் தொகுதியில் தோன்றும். உங்கள்
          செயல்பாடு என்ன செய்ய வேண்டும் என்பதற்கான ஒரு சிறிய விளக்கத்தை எழுதுங்கள்.
      4:
        text: இந்த வழக்கில், அது ஒரு சதுரத்தை வரைய வேண்டும். இதற்குக் கீழே உள்ள வெள்ளை
          இடம் பணியிடமாகும், மேலும் நீங்கள் ஏற்கனவே பயன்படுத்திய பணியிடத்தைப் போலவே
          செயல்படுகிறது. இந்த பணியிடத்தில் கருவிப்பெட்டியில் உள்ள தொகுதிகளை இழுத்து
          விடவும். செயல்பாட்டிற்காக பச்சை மடக்கு தொகுதிக்குள் ஒரு சதுரத்தை உருவாக்கும்
          தொகுதிகளை வைக்க நினைவில் கொள்ளுங்கள். நீங்கள் முடித்ததும், சேமி என்பதைக்
          கிளிக் செய்து வெளியேறவும். இது உங்களை மீண்டும் முக்கிய புதிர் பணியிடத்திற்கு
          அழைத்துச் செல்லும். இப்போது நீங்கள் புதிரைத் தீர்க்க மற்ற தொகுதிகளைப் போலவே
          சதுர செயல்பாட்டுத் தொகுதியைப் பயன்படுத்தலாம்.
    C4_function_parameters:
      1:
        text: 50 பிக்சல் பக்கங்களைக் கொண்ட ஒரு சதுரத்தை வரையும் செயல்பாடு இங்கே உள்ளது.
          அது நன்றாக இருக்கிறது, ஆனால் நான் ஒரு சதுரத்தை 50 பிக்சல்கள் மற்றும் 100
          பிக்சல்கள் கொண்ட மற்றொரு சதுரத்தை வரைய விரும்பினால் என்ன செய்வது? கிட்டத்தட்ட
          ஒரே காரியத்தைச் செய்யும் இரண்டு தனித்தனி செயல்பாடுகளை நாம் செய்ய வேண்டியதில்லை.
          அதற்கு பதிலாக, ஒரு அளவுருவுடன் ஒரு செயல்பாட்டைப் பயன்படுத்தலாம்.
      2:
        text: செயல்பாட்டின் உள்ளே மாறிகளாகப் பயன்படுத்தப்படும் ஒரு செயல்பாட்டிற்கு
          மதிப்புகளை அனுப்ப அளவுருக்கள் நம்மை அனுமதிக்கின்றன. இந்தச் செயல்பாட்டில்
          லைக் எனப்படும் அளவுருவைச் சேர்க்க முயற்சிப்போம், எனவே வெவ்வேறு அளவுகளில்
          சதுரங்களை உருவாக்க அதைப் பயன்படுத்தலாம். செயல்பாட்டு எடிட்டரில், நீங்கள்
          முன்பு போலவே பெயரையும் விளக்கத்தையும் திருத்தலாம் ஆனால் இப்போது நீங்கள்
          ஒரு அளவுருவையும் சேர்க்கலாம். உங்கள் அளவுருவின் பெயரை ஸ்பேஸில் எழுதி, அளவுருவைச்
          சேர் என்பதைக் கிளிக் செய்யவும். இது நீங்கள் உருவாக்கிய அளவுருவின் பெயருடன்
          ஒரு சிவப்பு தொகுதியை உருவாக்கும். இப்போது நாம் முன்னோக்கி நகர்த்தலை 100
          தொகுதியின் அளவுரு நீளத்துடன் மாற்றலாம், எனவே அது நீளத்தால் முன்னோக்கி நகரும்.
      3:
        text: கருவிப்பெட்டியில் உள்ள செயல்பாடுகள் வகையிலிருந்து உங்கள் புதிய உருவாக்கம்
          ஒரு சதுரத் தொகுதியை சேமித்து மூடவும் மற்றும் இழுக்கவும். நீளத்திற்கு அடுத்ததாக
          ஒரு வெற்று இடம் இருப்பதை நீங்கள் கவனிப்பீர்கள், ஏனெனில் நீளத்தின் அளவுரு
          என்னவாக இருக்க வேண்டும் என்பதை செயல்பாடு அறிய விரும்புகிறது. கணித வகையிலிருந்து
          ஒரு எண் தொகுதியை இழுத்து இந்த இடத்தில் வைக்கவும். வெவ்வேறு அளவுகளில் சதுரங்களை
          உருவாக்க, வெவ்வேறு நீளங்களுடன் செயல்பாட்டை மீண்டும் மீண்டும் எவ்வாறு பயன்படுத்தலாம்
          என்பதைப் பார்க்கவும்? நீங்களே முயற்சி செய்யுங்கள்!
    C4_intro:
      1:
        text: பொதுவாக நிரலாக்கம் அனைத்தும் உரையில் இருக்கும், ஆனால் நாங்கள் ப்ளாக்லியைப்
          பயன்படுத்துவோம், இது நீங்கள் நிரல்களை எழுத இழுத்து விடக்கூடிய காட்சித் தொகுதிகளைப்
          பயன்படுத்துவோம். ஹூட்டின் கீழ், நீங்கள் இன்னும் குறியீட்டை உருவாக்குகிறீர்கள்.
          தொடங்குவதற்கு, இந்த ஆங்கிரி பேர்ட் தனது முட்டைகளைத் திருடிய தீய பன்றிகளுக்குச்
          செல்ல பிரமை வழியாகச் செல்ல உதவும் நிரலுக்கான குறியீட்டை உருவாக்கப் போகிறோம்.
      2:
        text: பிளாக்லி மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்
          பறவையின் பிரமை உள்ளது, அங்கு உங்கள் நிரல் இயங்கும். ஒவ்வொரு நிலைக்கான வழிமுறைகளும்
          பிரமைக்கு கீழே எழுதப்பட்டுள்ளன. இந்த நடுத்தர பகுதி கருவிப்பெட்டி மற்றும்
          இந்த தொகுதிகள் ஒவ்வொன்றும் பறவை புரிந்து கொள்ளக்கூடிய கட்டளை. வலதுபுறத்தில்
          உள்ள வெள்ளை இடம் பணியிடம் என்று அழைக்கப்படுகிறது, இங்குதான் எங்கள் திட்டத்தை
          உருவாக்குவோம்.
      3:
        text: நான் மூவ் பிளாக்கை எங்கள் பணியிடத்திற்கு இழுத்து "ரன்" அழுத்தினால் என்ன
          நடக்கும்? பறவை கட்டத்தின் ஒரு பெட்டியை முன்னோக்கி நகர்த்துகிறது. பறவை ஒரு
          பெட்டியை முன்னோக்கி நகர்த்திய பிறகு ஏதாவது செய்ய வேண்டும் என்று நான் விரும்பினால்
          என்ன செய்வது? நான் எங்கள் நிரலில் மற்றொரு தொகுதி சேர்க்க முடியும்.
      4:
        text: நான் "வலதுபுறம் திரும்பு" தொகுதியைத் தேர்வு செய்யப் போகிறேன், மஞ்சள்
          அம்பு தோன்றும் வரை அதை நகர்த்தும் தொகுதியின் கீழ் இழுப்பேன். பின்னர் நான்
          அதை கைவிடுவேன், இரண்டு தொகுதிகளும் ஒன்றாக ஒடிவிடும். நான் மீண்டும் "ரன்"
          அழுத்தும் போது, ​​பறவை நமது பணியிடத்தில் மேலிருந்து கீழாக அடுக்கி வைக்கப்பட்டுள்ள
          கட்டளைகளை செய்யும்.
      5:
        text: நீங்கள் எப்போதாவது ஒரு தடுப்பை நீக்க விரும்பினால், அதை அடுக்கிலிருந்து
          அகற்றி குப்பைத் தொட்டிக்கு இழுக்கவும். நீங்கள் ரன் அடித்த பிறகு, பறவையை
          மீண்டும் தொடங்குவதற்கு மீட்டமை பொத்தானை எப்போதும் அழுத்தலாம். இப்போது அந்தப்
          பன்றிகளைப் பெறுவோம்!
    C4_math_artist:
      1:
        text: நான் 50 பிக்சல்கள் உயரமுள்ள ஒரு செவ்வகத்தை வரைய விரும்பினால், அது உயரத்தை
          விட இரண்டு மடங்கு அகலமாக இருந்தால், அதைச் செய்ய கணினியை எவ்வாறு நிரல் செய்வது?
          சரி, கலைஞரை ஐம்பதுக்கு மேலே போகச் சொல்லலாம், வலதுபுறம் திரும்பி, 100க்கு
          மேல் சென்று முழு விஷயத்தையும் இரண்டு முறை நகர்த்தலாம். ஆனால் நான் கணினிக்கு
          கணிதம் செய்கிறேன்.
      2:
        text: உங்கள் தலையில் ஐம்பதை இரண்டால் பெருக்குவது அவ்வளவு கடினமாக இருக்காது,
          ஆனால் கணினிகள் கணிதத்தில் மிகவும் சிறந்தவை, எனவே முடிந்த போதெல்லாம் அதை
          அவர்களிடம் விட்டுவிட வேண்டும். அதற்குப் பதிலாக உயரம் எனப்படும் மாறியைப்
          பயன்படுத்தினால், உயரத்தை ஐம்பதாக மாற்றி, பின்னர் எனது அல்காரிதத்தை மாற்றி,
          கலைஞரை உயரத்தின்படி மேலே செல்லவும், வலதுபுறம் திரும்பவும், பின்னர் உயரம்
          2 ஐக் கடந்து செல்லவும் சொல்லலாம், இது நமக்கு ஒரு செவ்வகத்தை அளிக்கிறது.
          உயரத்தை விட இரு மடங்கு அகலம் கொண்டது.
    C4_unplugged_algorithms:
      1:
        text: இந்த பாடம் டாங்க்ராம் அல்காரிதம்ஸ் என்று அழைக்கப்படுகிறது. ஒரு டாங்கிராம்
          என்பது ஏழு துண்டுகளைக் கொண்ட ஒரு புதிர் ஆகும், அதை ஒன்றாக சேர்த்து மற்ற
          வடிவங்களை உருவாக்கலாம். புதிரை எவ்வாறு ஒன்றாக இணைப்பது என்பதை உங்கள் கூட்டாளருக்கு
          விளக்க அல்காரிதத்தைப் பயன்படுத்துவீர்கள்.
      2:
        text: அல்காரிதம் என்பது ஒரு பணியை முடிக்க நீங்கள் எடுக்கக்கூடிய பட்டியல் படிகள்
          மட்டுமே. ஷாப்பிங் பட்டியல்கள் மற்றும் சமையல் குறிப்புகள் போன்றவற்றுடன் அவற்றை
          தினமும் பயன்படுத்துகிறோம். நீங்கள் ஒரு அல்காரிதத்தை எளிமையாக வைத்திருந்தால்,
          அதை விளக்குவதற்கு நிறைய வழிகள் உள்ளன, மேலும் அந்த அல்காரிதத்தைச் செய்பவர்
          நீங்கள் விரும்பியதைப் பெற முடியாமல் போகலாம். எல்லோரும் ஒரே விஷயத்துடன் முடிவடைகிறார்கள்
          என்பதை நீங்கள் உறுதிப்படுத்த விரும்பினால், உங்கள் அல்காரிதம் விரிவாகவும்
          மிகவும் குறிப்பிட்டதாகவும் இருக்க வேண்டும்.
      3:
        text: ஓவியத்தை முடிக்க இன்று அல்காரிதத்தைப் பயன்படுத்துகிறேன். நான் சில ஓநாய்களின்
          ஓவியம் வரைய முயற்சிக்க விரும்பினேன் ஆனால் நான் மிகவும் அற்புதமான ஓவியன்
          அல்ல. அதிர்ஷ்டவசமாக என்னால், எண்களால் பெயிண்ட் உள்ளது. நாற்பது வண்ணங்கள்
          உள்ளன, அதில் சிறிய எழுத்துக்கள் மற்றும் எண்கள் உள்ளன, அவை ஒவ்வொரு பகுதியையும்
          எந்த நிறத்தில் வரைய வேண்டும் என்பதைக் கூறுகின்றன. எண்களின் அடிப்படையில்
          பெயிண்ட் செய்வது எந்த நிறத்தை எங்கு பயன்படுத்த வேண்டும் என்பதைச் சரியாகச்
          சொல்கிறது.
      4:
        text: இது மிகவும் குறிப்பிட்டது, அதனால் நான் வழிமுறைகளைப் பின்பற்ற முடியும்
          மற்றும் ஓவியம் அருமையாக வெளிவரும். இது ஒரு சிறந்த அல்காரிதம். அறிவுறுத்தல்கள்
          போதுமானதாக இல்லை என்றால், என் ஓநாய்கள் நன்றாக இருக்காது. நீங்கள் திட்டமிட்டபடி
          ஏதாவது நடக்க வேண்டும் என்று நீங்கள் விரும்பினால், மிகவும் துல்லியமாக இருப்பது
          நல்லது.
    C4_unplugged_binary:
      1:
        text: ஒவ்வொரு அணியும், காகிதத்தை வைத்திருக்கும் நபர் என்று அறிவுறுத்தும் நபர்,
          அவர்களின் ஆஃப் சின்னம் என்னவாக இருக்கும் மற்றும் அவர்களின் சின்னம் என்னவாக
          இருக்கும் என்பதைக் கண்டுபிடிக்க வேண்டும். பைனரியில், இது இரண்டு எழுத்துக்களைக்
          கொண்ட எழுத்துக்களைப் போன்றது. A மற்றும் B உங்கள் முழு எழுத்துக்களாக இருப்பது
          போல ஆனால் உங்களிடம் 0 மற்றும் 1 உள்ளது.
      2:
        text: நீங்கள் பைனரியைப் பயன்படுத்தும் பொதுவான வழி if கூற்றில் உள்ளது. நிரலாக்கத்திலிருந்து
          இது ஒரு உன்னதமான விஷயம். நிரல் தொடர்ந்து இயங்குகிறது, அது உண்மையாக இருந்தால்,
          இதைச் செய்யுங்கள். அல்லது அது உண்மையல்ல, நீங்கள் வேறு ஏதாவது செய்கிறீர்கள்.
          நீங்கள் ஏதாவது செய்ய விரும்பினால், இன்னும் கொஞ்சம் சிக்கலானதாக இருக்கலாம்.
          ஒரு if அறிக்கைக்கு பதிலாக, நீங்கள் கணினியில் உள்ள படம் அல்லது ஒலி போன்றவற்றுடன்
          வேலை செய்ய விரும்புகிறீர்கள்.
      3:
        text: 'ஒரு கணினிக்கு பைனரி மட்டுமே தெரியும், ஆனால் ஒரு படம், அது பைனரி அல்ல,
          ஒன்று மற்றும் பூஜ்ஜியங்கள் அல்ல, அதை எப்படி செய்வது? இங்கே ஒரு எடுத்துக்காட்டு:
          இந்த அழகான படம் உங்களிடம் உள்ளது. இப்போது ஒரு படம் அடிப்படையில் ஒரு தகவல்
          வடிவம். அனைத்து தகவல்களும் பைனரியில் ஒரு வழி அல்லது வேறு குறியாக்கம் செய்யப்படலாம்,
          அதை எப்படி செய்வது என்பதை நீங்கள் கண்டுபிடிக்க வேண்டும்.'
      4:
        text: இந்த பாண்டா கரடியின் மேல் ஒரு கட்டத்தை வைக்கப் போகிறோம் என்றும், ஒவ்வொரு
          சதுரத்திற்கும், அந்த சதுரம் அதிக கருப்பு அல்லது வெள்ளை நிறமா என்பதை நாங்கள்
          தீர்மானிக்கப் போகிறோம் என்று நீங்கள் கற்பனை செய்கிறீர்கள். பின்னர் நாங்கள்
          அதை அந்த வழியில் வண்ணமயமாக்கப் போகிறோம். இப்போது கட்டத்தின் ஒவ்வொரு கலமும்
          கருப்பு அல்லது வெள்ளை நிறத்தில் இருக்கும், பின்னர் கருப்பு சதுரங்கள் பூஜ்ஜியங்கள்
          (பைனரி இலக்கம்) மற்றும் வெள்ளை சதுரங்கள் ஒன்று, மற்ற பைனரி இலக்கங்கள். முடிவில்,
          உங்களுக்கு ஒரு சில மற்றும் பூஜ்ஜியங்கள் மட்டுமே உள்ளன. நீங்கள் இந்த படத்தை
          பைனரியில் எவ்வாறு பிரதிபலிக்கிறீர்கள்.
    C4_unplugged_forloops:
      1:
        text: இந்த பாடம் லூப் வேடிக்கைக்காக அழைக்கப்படுகிறது. இந்தப் பாடத்தில், பகடை
          விளையாட்டை விளையாட எண் கோட்டைப் பயன்படுத்துவோம். ஒவ்வொரு வீரரும் ஒரு தொடக்க
          மதிப்பு, நிறுத்த மதிப்பு மற்றும் எங்கள் இடைவெளியை ஒதுக்க மூன்று முறை சுருட்டுவார்கள்.
          ஒவ்வொரு திருப்பத்தின் போதும், நமது தொடக்க மதிப்பை வட்டமிடுகிறோம், மேலும்
          நமது இடைவெளி மதிப்பின் அதே எண்ணிக்கையிலான படிகள் இருக்கும் ஒவ்வொரு மதிப்பையும்
          வட்டமிடுகிறோம். நாம் நிறுத்தும் மதிப்பை அடைந்ததும் வட்டமிடுவதை நிறுத்துகிறோம்.
          அதிக மதிப்பெண் பெற்றவர் வெற்றி பெறுவார்!
      2:
        text: சுழல்கள் நிறைய இடங்களில் கைக்குள் வரலாம் மற்றும் நீங்கள் ஒரு வானிலை
          நிபுணராக மாறினால், நீங்கள் எல்லா நேரத்திலும் சுழல்களைப் பயன்படுத்துவீர்கள்.
          ஹாய், நான் பெக்கி. நான் EverPower Renewables இல் காற்று வானிலை நிபுணராக
          பணிபுரிகிறேன். நிறுவனம் காற்றாலைகளை வைத்திருக்கும் கொலம்பியா ரிவர் கோர்ஜ்
          பகுதியில் காற்றின் வேகத்தை நான் கணித்துள்ளேன்.
      3:
        text: காற்று எவ்வளவு இருக்கும் என்பதைப் புரிந்து கொள்ள முயற்சிக்கிறோம், இதன்
          மூலம் எவ்வளவு மின்சாரம் வெளியேறப் போகிறது என்பதை நாங்கள் அறிவோம். நிகழ்நேர
          ஆற்றல் வர்த்தகர்களுக்கு அந்த தகவலை நாங்கள் வழங்குகிறோம். பவர் கிரிட் சமநிலையில்
          இருப்பதையும், உங்கள் விளக்குகள் எரியாமல் இருப்பதையும், எங்கள் பண்ணைகளில்
          இருந்து வெளிவரும் ஆற்றலின் அளவை அதிகப்படுத்துவதையும் உறுதி செய்வதற்காக,
          எவ்வளவு சக்தி இருக்கும் என்று நாங்கள் கூறுகிறோம் என்பதை அடிப்படையாகக் கொண்டு
          அவர்கள் மின்சாரத்தை வாங்கி விற்கிறார்கள்.
      4:
        text: போர்ட்லேண்டில் உள்ள EverPower Renewablesக்கான தேசிய கட்டுப்பாட்டு மையத்தில்
          நாங்கள் இருக்கிறோம், இங்குதான் நாடு முழுவதிலும் உள்ள எங்கள் பண்ணைகளில் இருந்து
          தகவல் வருகிறது. இன்று மிக உயர்ந்த சக்தி வாய்ந்த கணினிகள் கூட எல்லா இடங்களிலும்
          வளிமண்டலத்தை உருவகப்படுத்த முடியாது. கணினி முன்கணிப்பு மாதிரிகளில், நாம்
          கட்டம் என்று அழைக்கிறோம். ஒவ்வொரு கட்டப் புள்ளியும் ஒரு அட்சரேகை, தீர்க்கரேகை.
          நாம் இயற்பியலைக் கணக்கிட்டு, காற்றின் வேகம், வெப்பநிலை, அழுத்தம், அந்த வகையான
          விஷயங்களைக் கண்டுபிடிக்க முயற்சி செய்ய வேண்டும்.
      5:
        text: இவை மிகவும் பெரிய கட்டங்கள் மற்றும் நாங்கள் இதை பல புள்ளிகளில் செய்து
          வருவதால், இந்த விஷயங்களை மில்லியன் கணக்கான மற்றும் மில்லியன் கணக்கான முறை
          சுழற்றுகிறோம். நான் செய்யும் அனைத்தையும் லூப்களுக்குப் பயன்படுத்துவேன்.
          இங்கே உதாரணத்திற்கு அங்கேயே ஒரு லூப் உள்ளது. நீங்கள் காற்றை முன்னறிவிக்கும்
          போது, ​​பலவிதமான அளவுருக்கள் உள்ளன, அது ஒரு மனிதனால் உட்கார்ந்து அந்த கணக்கீடுகளை
          செய்ய இயலாது. காற்றில் என்ன நடக்கிறது என்பதைப் பாதிக்கப் போவதில் பல வேறுபட்ட
          அம்சங்கள் உள்ளன, அதைக் கணிக்க கணினி மாதிரி தேவை.
    C4_unplugged_madlibs:
      1:
        text: இந்தப் பாடத்தில், வெற்றுக் கதைகளை நிரப்பி விளையாடுவோம். மிகவும் வேடிக்கையான
          வேறுபாடுகளைக் கொண்ட ஒத்த கதைகளை உருவாக்க நீங்கள் நிரப்பக்கூடிய டெம்ப்ளேட்
          உங்களிடம் உள்ளது.
      2:
        text: இந்தப் பாடத்தில், ஏற்கனவே உருவாக்கப்பட்ட இரண்டு கதைகளிலிருந்து சுருக்கமான
          டெம்ப்ளேட்டை எவ்வாறு உருவாக்குவது என்பதையும் கற்றுக்கொண்டோம். சுருக்கம்
          என்பது வேறுபாடுகள் மற்றும் விவரங்களை அகற்றும் கலையாகும், இதன் மூலம் பல்வேறு
          சிக்கல்களுக்கு ஒரு தீர்வு எவ்வாறு செயல்படும் என்பதை நீங்கள் பார்க்கலாம்.
          கணினி அறிவியலில் இது மிகவும் உதவியாக இருக்கிறது, ஏனெனில் இது பல்வேறு சூழ்நிலைகளில்
          பயனுள்ளதாக இருக்கும் செயல்பாடுகளை உருவாக்க அனுமதிக்கிறது.
    C4_unplugged_parameters:
      1:
        text: இந்த பாடம் அளவுருக்கள் கொண்ட பாடல் எழுதுதல் என்று அழைக்கப்படுகிறது.
          நாங்கள் இங்கே சில பாடல்களை எழுதப் போகிறோம். ஒவ்வொரு முறை பாடும்போதும் சில
          நேரங்களில் கோரஸ் கொஞ்சம் வித்தியாசமாக இருக்கும். ஓல்ட் மெக்டொனால்டுக்கு
          ஒரு பண்ணை இருந்தது நினைவிருக்கிறதா? ஒவ்வொரு விலங்குக்கும் கோரஸ் சற்று வித்தியாசமானது.
          மேலும் அந்த பண்ணையில் e-i-e-i-o என்ற மாடு வைத்திருந்தார். ஒவ்வொரு கோரஸிலும்
          உள்ள சிறிய மாற்றத்தை நாம் அளவுருக்கள் என்று அழைக்கும் ஒன்றைப் பயன்படுத்தி
          காட்டலாம்.
      2:
        text: சில நேரங்களில் ஒரு செயல்பாட்டிற்கு ஒரு அளவுரு தேவை. ஒரு அளவுரு என்பது
          ஒரு சிறப்புத் தேவைக்காக தனிப்பயனாக்க ஒரு செயல்பாட்டிற்கு நீங்கள் அனுப்பக்கூடிய
          கூடுதல் தகவலாகும். உங்கள் நண்பர்களுடன் சேர்ந்து ஐஸ்கிரீம் சண்டேஸ் தயாரிக்கும்
          போது, ​​கணினி நிரலில் உள்ள அளவுருக்கள் போன்ற ஒரு செயல்முறையை நீங்கள் பயன்படுத்துகிறீர்கள்.
      3:
        text: வெண்ணிலா ஐஸ்கிரீமின் வட்டு ஒவ்வொரு சண்டேவிற்கும் ஒரே மாதிரியாக இருக்கலாம்
          ஆனால் உங்கள் நண்பர்கள் எந்த இரண்டு டாப்பிங்ஸை விரும்புகிறார்கள் என்று கேட்டால்,
          நீங்கள் பலவிதமான கலவைகளைப் பெறலாம். டாப்பிங் என்பது செயல்பாட்டுப் பெயர்
          ஆனால் ஒவ்வொரு வகை டாப்பிங்கும் ஒரு அளவுருவாகும். செயல்பாடுகள் மற்றும் அளவுருக்கள்
          சிறந்த கணினி நிரல்களையும் சிறந்த சண்டேகளையும் உருவாக்க ஒன்றாக வேலை செய்கின்றன.
    C4_unplugged_variables:
      1:
        text: இந்த பாடம் உறைகளில் மாறிகள் என்று அழைக்கப்படுகிறது. நாங்கள் இன்னும்
          சில தகவல்களைக் காணவில்லை என்றால், வாக்கியங்களை எவ்வாறு உருவாக்குவது என்பதை
          அறியப் போகிறோம். வெற்றிடத்தை நிரப்புவது என்ற எண்ணத்தை நம்மில் பெரும்பாலோர்
          ஏற்கனவே அறிந்திருக்கிறோம். எங்கள் வீட்டுப்பாடத்தில் எங்கள் பெயரை வைக்கும்போது
          நாங்கள் அதைச் செய்கிறோம். சில நேரங்களில் ஒன்றுக்கும் மேற்பட்ட வார்த்தைகளை
          நிரப்ப வேண்டும், அப்படியானால், அந்த வெற்று லேபிளை நாங்கள் தருகிறோம், இதனால்
          எந்தத் தகவல் எங்கு செல்கிறது என்பதை நாங்கள் அறிவோம்.
      2:
        text: மாறிகள் என்பது மாற்றக்கூடிய தகவல்களின் ப்ளாஸ்ஹோல்டர்கள். விடுபட்ட தகவலுக்கு
          ஒரு மாறியைப் பயன்படுத்துவதன் மூலம், நாம் என்ன செய்து கொண்டிருந்தோமோ அதைத்
          தொடரலாம் மற்றும் பின்னர் விடுபட்ட தகவலை வேறு யாரேனும் நிரப்ப அனுமதிக்கலாம்.
          மென்பொருளில், நாம் மாறிகளை அதிகம் பயன்படுத்துகிறோம். பெயர், மின்னஞ்சல் முகவரி
          மற்றும் பயனர்பெயருக்கு கூட மாறிகளை ஒதுக்கிடங்களாகப் பயன்படுத்துகிறோம். அந்த
          வகையில், பயனர் அவற்றை நிரப்பிய பிறகு, அந்த விவரங்கள் எங்கு தோன்றும் என்பதை
          நிரலுக்குத் தெரியப்படுத்தலாம். எங்கள் வேலையில் எல்லா நேரங்களிலும் மாறிகளைப்
          பயன்படுத்துகிறோம்.
      3:
        text: எந்த நேரத்திலும் நீங்கள் ஒரு தகவலை பின்னர் சேமிக்க வேண்டும், நாங்கள்
          ஒரு மாறியைப் பயன்படுத்துகிறோம். பயனர் எத்தனை முறை ட்வீட் செய்தார் என்பதை
          நாம் எண்ண வேண்டும் என்று வைத்துக்கொள்வோம். ஒவ்வொரு முறை பயனர் ட்வீட் செய்யும்
          போதும், அந்த எண்ணில் ஒன்றைச் சேர்ப்போம், ஒவ்வொரு முறையும் பயனர் ட்வீட்டை
          நீக்கும்போது, ​​அந்த எண்ணை ஒவ்வொன்றாகக் குறைப்போம். அந்த பயனர் எத்தனை முறை
          ட்வீட் செய்தார் என்பதை நாம் எப்போது வேண்டுமானாலும் தெரிந்து கொள்ள வேண்டும்,
          அந்த மாறியைப் பார்ப்போம்.
    C4_variables_artist:
      1:
        text: ஒரு மாறி என்பது நீங்கள் ஒரு மதிப்பை சேமித்து வைக்கக்கூடிய ஒரு கொள்கலன்
          ஆகும். அந்த மாறியை ஒரு அல்காரிதத்தில் பயன்படுத்தும் போது, ​​அது கொள்கலனைத்
          திறந்து உள்ளே உள்ள மதிப்பைப் பார்க்கிறது. மாறியில் சேமிக்கப்பட்ட மதிப்பைப்
          பொறுத்து வித்தியாசமாக செயல்படும் சிறந்த அல்காரிதம்களை எழுத இது உங்களை அனுமதிக்கிறது.
      2:
        text: எடுத்துக்காட்டாக, பிறந்தநாள் வாழ்த்துக்களைத் தெரிவிக்க அல்காரிதம் எழுத
          விரும்பினால், உங்களுக்கு 10 வயதாகிறது! என் சிறிய சகோதரருக்கு, அது இப்போது
          நன்றாக இருக்கிறது, ஆனால் அடுத்த ஆண்டு நான் அதை இயக்கும் போது, ​​பிறந்தநாள்
          வாழ்த்துக்கள், உங்களுக்கு 11 வயதாகிறது என்று சொல்ல விரும்புகிறேன்! என் சகோதரனின்
          வயதைச் சேமிக்க வயது எனப்படும் ஒரு மாறியை உருவாக்கி, பிறந்தநாள் வாழ்த்துக்களைத்
          தெரிவிக்க எனது அல்காரிதத்தை எழுதலாம், அதற்குப் பதிலாக நீங்கள் 'வயது' என்பதை
          மாற்றுகிறீர்கள். மாறி மாறும் என்பதால், ஒவ்வொரு ஆண்டும் 'வயது' மாறி 'வயது'
          பிளஸ் 1க்கு சமமாக புதுப்பிக்க முடியும்.
      3:
        text: இந்த புதிரில், எங்கள் கலைஞர் வரைந்த கோட்டின் நீளத்தை அமைக்கும் ஒரு மாறியைப்
          பயன்படுத்தப் போகிறோம். பின்னர் எங்கள் குறியீட்டில், நகர்த்த முன்னோக்கி தொகுதி
          நீங்கள் எந்த மதிப்பை அமைத்துள்ளீர்கள் என்பதைப் பார்க்க அந்த நீள மாறியைப்
          பார்க்கும்.
    C4_variables_playlab:
      1:
        text: ஒரு மாறி என்பது நீங்கள் ஒரு மதிப்பை சேமித்து வைக்கக்கூடிய ஒரு கொள்கலன்
          ஆகும். அந்த மாறியை நீங்கள் ஒரு அல்காரிதத்தில் பயன்படுத்தும் போது, ​​அது
          கொள்கலனைத் திறந்து உள்ளே உள்ள மதிப்பைப் பார்க்கிறது. மாறியில் சேமிக்கப்பட்ட
          மதிப்பைப் பொறுத்து வித்தியாசமாக செயல்படும் சிறந்த அல்காரிதம்களை எழுத இது
          உங்களை அனுமதிக்கிறது.
      2:
        text: இப்போது நீங்கள் பிளேலேப்பை முயற்சிக்கப் போகிறீர்கள், அங்கு உங்களுக்கு
          வெவ்வேறு கேம்கள் கொடுக்கப்பட்டுள்ளன, மேலும் விளையாட்டை மாற்ற வேகம், உயரம்,
          ஸ்கோர் போன்ற மாறிகளின் மதிப்புகளை மாற்றலாம். விளையாட்டு எப்படி விளையாடுகிறது
          என்பதை மாற்ற, அதன் அல்காரிதத்தை நீங்கள் மாற்ற வேண்டியதில்லை, மாறி மட்டும்.
      3:
        text: கிண்டிலுக்கான எனது வேலையிலும், புத்தகங்களுக்கான எக்ஸ்-ரேயிலும், பல்வேறு
          வழிகளில் மாறிகளைப் பயன்படுத்துகிறோம். ஒரு மாறியைப் பயன்படுத்துவதற்கான ஒரு
          வழி, புத்தகத்தின் பக்க எண்களைச் சேமிப்பதாகும். ஒரு பயனர் ஒரு பக்கத்தில்
          எழுத்துருவின் அளவை அதிகரிக்கவும் குறைக்கவும் முடியும். எழுத்துரு அளவைப்
          பொறுத்து, புத்தகத்தில் உள்ள பக்கங்களின் எண்ணிக்கை மாறலாம். மாறியில் உள்ள
          பக்கங்களின் எண்ணிக்கையை சேமிப்பதன் மூலம் அதை சரிசெய்யலாம்.
    infinity_playlab_events:
      1:
        text: எல்லா கேம் புரோகிராமர்களும் அன்றாடம் பயன்படுத்தும் ஒன்றைப் பற்றி இப்போது
          தெரிந்துகொள்ளப் போகிறோம். அவை நிகழ்வுகள் என்று அழைக்கப்படுகின்றன. ஏதாவது
          நடக்கும் போது உங்கள் நிகழ்ச்சியைக் கேட்க ஒரு நிகழ்வு சொல்கிறது. பின்னர்
          அது செய்யும் போது, ​​அது ஒரு செயலைச் செய்கிறது. மவுஸ் கிளிக், அம்புக்குறி
          பொத்தான் அல்லது திரையில் தட்டுவது போன்ற நிகழ்வுகளின் சில எடுத்துக்காட்டுகள்.
      2:
        text: இங்கே, பைமேக்ஸை Hiro தொடுவதற்கு மேலே நகர்த்தவும், பிளேயர் மேல்/கீழ்
          அம்புக்குறி விசைகள் அல்லது மேல்/கீழ் பொத்தான்களைப் பயன்படுத்தும் போது Rapunzel
          ஐ தொடுவதற்கு கீழே நகர்த்தவும் போகிறோம். வென் அப் அம்பு பிளாக்கைப் பயன்படுத்தி,
          மூவ் ஆக்டர் அப் பிளாக்கை அதனுடன் இணைப்போம், அதனால் பிளேயர் மேல் அம்புக்குறியை
          அழுத்தும் போது, ​​"வென் அப் அம்புக்குறி" பிளாக்கில் இணைக்கப்பட்ட அனைத்தும்
          இயங்கும். பேமேக்ஸை கீழே நகர்த்துவதற்கு நாங்கள் அதையே செய்வோம். படிப்படியாக
          உங்கள் விளையாட்டு மேலும் ஊடாடுகிறது.
    infinity_playlab_intro:
      1:
        text: எனவே நீங்கள் எந்த வகுப்பில் இருக்கிறீர்கள்? இரண்டாவது. பத்தாம் வகுப்பு.
          முதல் தரம். நான் புரோகிராம் கற்றுக்கொண்டபோது எட்டாம் வகுப்பு படித்துக்கொண்டிருந்தேன்.
          நான் ஆறாம் வகுப்பு படிக்கும் போது எனது முதல் கணினி கிடைத்தது. மக்களின் பிரச்சனைகளை
          சரிசெய்வதுதான் எனக்கு உற்சாகமளிக்கிறது. நீங்கள் உங்களை வெளிப்படுத்தலாம்,
          ஒரு யோசனையிலிருந்து விஷயங்களை உருவாக்கலாம்.
      2:
        text: அடுத்த இருபது முப்பது வருடங்களில் கல்லூரி மாணவர்களும் தொழில் வல்லுநர்களும்
          செய்யும் பல விஷயங்களுக்கு கணினி அறிவியல்தான் அடிப்படை. நான் நிரலாக்கத்தை
          விரும்புகிறேன், ஏனென்றால் நான் மக்களுக்கு உதவ விரும்புகிறேன். மக்களின் வாழ்க்கையை
          எளிதாக்கும் ஒன்றை உருவாக்க எனக்கு வாய்ப்பு கிடைக்கிறது. ஒரு வல்லரசுக்கு
          நமக்கு மிக நெருக்கமான விஷயம் இது என்று நான் நினைக்கிறேன். தொடங்குவது மிக
          முக்கியமான பகுதியாகும். நான் ஒரு தொடக்கக்காரன், நீங்கள் என்னுடன் கற்றுக்கொள்ள
          வேண்டும் என்று நான் விரும்புகிறேன்.
      3:
        text: நான் ஜான் வெச்சே, பாப்கேப் கேம்ஸின் இணை நிறுவனர்களில் நானும் ஒருவன்.
          நாங்கள் தாவரங்கள் வெர்சஸ் ஜோம்பிஸ், பெஜ்வெல்ட் மற்றும் பெக்கிள் போன்ற கேம்களை
          உருவாக்குகிறோம். கேம்களைப் பற்றி நிறைய உங்கள் குறியீடு எவ்வளவு சரியானது
          என்பதல்ல, உங்கள் கலை எவ்வளவு சரியானது என்பதல்ல, அது எப்படி உணர்கிறது மற்றும்
          எவ்வளவு வேடிக்கையாக இருக்கிறது என்பதைப் பற்றியது. அதை முயற்சிப்பதன் மூலமும்,
          அதைச் செய்வதன் மூலமும், கற்றுக்கொள்வதன் மூலமும், கேம்களை உருவாக்கும் உங்களின்
          சொந்த திறமைகளை மாற்றியமைப்பதன் மூலமும் மட்டுமே நீங்கள் அந்த உணர்வைப் பெற
          முடியும்.
      4:
        text: உங்களுக்கு பிடித்த வீடியோ கேம் உள்ளதா? சரி, ப்லே லேபைப் பயன்படுத்தி
          கேம்களை உருவாக்குவதற்கு ஒரு படி எடுக்கப் போகிறோம். நல்ல விளையாட்டுகளுக்கு
          ஒரு கதை உண்டு, ஒவ்வொரு கதைக்கும் நடிகர்கள் உள்ளனர். நடிகர்கள் ஒருவருக்கொருவர்
          பேசுவது, நகர்த்துவது மற்றும் பழகுவது போன்ற விஷயங்களைச் செய்கிறார்கள். விளையாட்டின்
          விதிகளின் அடிப்படையில் புள்ளிகளைப் பெறலாம். டிஸ்னியின் அன்னா, எல்சா, ஹிரோ,
          பேமேக்ஸ் மற்றும் ராபன்செல் போன்ற கதாபாத்திரங்கள் மூலம் இவை அனைத்தையும் ஒவ்வொன்றாக
          எப்படி செய்வது என்று இன்று கற்றுக்கொள்வோம். புதிதாக ஒரு கேமை உருவாக்குவோம்,
          அதை ஃபோனில் பகிரலாம் மற்றும் விளையாடலாம்.
      5:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்
          கேம்ஸ்பேஸ் உள்ளது, அங்கு உங்கள் நிரல் இயங்கும். ஒவ்வொரு நிலைக்கான வழிமுறைகள்
          கீழே எழுதப்பட்டுள்ளன. இந்த நடுத்தர பகுதி கருவிப்பெட்டியாகும், மேலும் இந்த
          தொகுதிகள் ஒவ்வொன்றும் குறியீட்டின் ஒரு பகுதி. வலதுபுறத்தில் உள்ள வெள்ளை
          இடம் பணியிடம் என்று அழைக்கப்படுகிறது, இங்குதான் எங்கள் திட்டத்தை உருவாக்குவோம்.
      6:
        text: தொடங்குவதற்கு, உங்கள் தொகுதிகளை ஆரஞ்சு நிற "when run" பிளாக்" தொகுதியுடன்
          இணைக்க வேண்டும். மஞ்சள் அவுட்லைனைப் பார்க்கும் வரை அவற்றை இழுப்பதன் மூலம்
          பல தொகுதிகளை ஒன்றாக இணைக்கலாம், பின்னர் அவை ஒன்றாக ஒடிவிடும். இந்த முதல்
          புதிரில், Hiro என்பது Actor 1 மற்றும் Baymax என்பது Actor 2 ஆகும். "வலதுபுறம்
          நகர்த்து" பிளாக்கை இழுத்து, "ரன் ரன்" பிளாக்குடன் இணைப்பதன் மூலம், Baymax
          க்கு செல்ல Hiroவை நகர்த்த வேண்டும். உங்கள் தொகுதிகள் கிடைத்தவுடன், "ரன்"
          பொத்தானை அழுத்தி, நீங்கள் என்ன நிரல் செய்தீர்கள் என்பதைப் பார்க்கவும்.
      7:
        text: தொடங்குங்கள், முடிவில் நீங்கள் இந்த அற்புதமான நடிகர்களுடன் உங்கள் சொந்த
          விளையாட்டை உருவாக்க முடியும், அவை ஊடாடலாம், புள்ளிகளைப் பெறலாம், மைக்ரோபோட்கள்,
          செர்ரிகள், சாஸ்பான்கள், பிரகாசங்கள் மற்றும் பனிக்கட்டிகளை வீசலாம்.. மற்றும்
          ஒருவருக்கொருவர் மறைந்துவிடும். எல்லாம் உன் பொருட்டு!
    infinity_playlab_repeat_forever:
      1:
        text: நீங்கள் எதையாவது என்றென்றும் மீண்டும் மீண்டும் செய்ய வேண்டுமா என்று
          உங்களால் கற்பனை செய்ய முடியுமா? கணினிகள் விஷயங்களைத் திரும்பத் திரும்பச்
          செய்வதில் சிறந்தவை என்பதால் நீங்கள் ஒருபோதும் செய்ய வேண்டியதில்லை என்று
          நம்புகிறேன். இது எப்பொழுதும் திரும்பத் திரும்ப வரும் தொகுதி. இந்தத் தொகுதிக்குள்
          எதுவும் விளையாட்டில் என்றென்றும் நடக்கும்.
      2:
        text: எனவே, பிளேயர் எதையும் செய்யாமல், ஒரு நடிகர் மீண்டும் மீண்டும் ஏதாவது
          செய்ய வேண்டும் என்று நாங்கள் விரும்பினால், அந்தத் தொகுதிகளை ரிப்பீட் ஃபார்
          எவர் பிளாக்கிற்குள் வைப்போம். இந்த அடுத்த புதிரில், அண்ணா தொடர்ந்து மேலும்
          கீழும் நடக்க உதவுவதே எங்கள் குறிக்கோள். மீண்டும் மீண்டும் கட்டளைகள் எவ்வாறு
          செயல்படுகின்றன என்பதைக் கற்றுக்கொள்வது, உங்கள் சொந்த விளையாட்டை உருவாக்கும்போது
          உங்களுக்கு ஒரு டன் நேரத்தைச் சேமிக்கும்.
    tutorial_puzzle_challenge:
      1:
        text: நீங்கள் ஒலிவியா வளரும்போது என்னவாக இருக்க விரும்புகிறீர்கள்? ஒரு விண்வெளி
          வீரராக. கம்ப்யூட்டர் ப்ரோக்ராமர் என்றால் என்ன என்று உங்களுக்குத் தெரியுமா?
          ஆம் இல்லை. ம்ம்ம் என்ன காத்திரு? கணினி நிரலாக்கம் மிகவும் எளிமையானது என்பதை
          எப்படி விளக்குவது என்று எனக்குத் தெரியவில்லை. இது ஒரு செய்முறை போன்ற வழிமுறைகளின்
          தொகுப்பாகும், நீங்கள் விரும்பும் இறுதி முடிவைப் பெற, படிப்படியாக அவற்றைப்
          பின்பற்ற வேண்டும்.
      2:
        text: இந்த கீழ்தோன்றலைப் பயன்படுத்தி பிக்சல்களின் எண்ணிக்கையை, கோட்டின் நீளத்தை
          என்னால் மாற்ற முடியும். மீண்டும் எவ்வளவு நேரம் ஆனது? ரன் பொத்தானின் கீழ்
          பார்ப்பதன் மூலம் வழிமுறைகளை மீண்டும் பார்க்கலாம். இங்கே நான் நகர்த்த முன்னோக்கித்
          தொகுதியைப் பயன்படுத்தினேன், மேலும் 100 பிக்சல்களைத் தேர்ந்தெடுக்கப் போகிறேன்.
          ஒரு தொகுதியை கருவிப்பெட்டியில் அல்லது குப்பைத் தொட்டியில் இழுப்பதன் மூலம்
          என்னால் அதை நீக்க முடியும். திரும்ப வைக்கலாம்.
      3:
        text: ரன் அழுத்துவதன் மூலம் குறியீட்டை இயக்கவும். சரி அது வேலை செய்யவில்லை!
          நான் ரீசெட் அழுத்தி என்ன தவறு என்று கண்டுபிடிக்கிறேன். புதிரை எத்தனை முறை
          வேண்டுமானாலும் முயற்சி செய்யலாம் மற்றும் புதிர்களைத் தவிர்த்துவிட்டு அவற்றிற்குத்
          திரும்பலாம். உங்களால் முடிந்தவரை முயற்சி செய்வதை உறுதிப்படுத்திக் கொள்ளுங்கள்,
          விட்டுவிடாதீர்கள். முன்னோக்கி மற்றொரு நகர்வைச் சேர்ப்போம். அது இன்னும் வேலை
          செய்யவில்லை. நான் மற்ற தொகுதிகளுக்கு இடையில் ஒரு தொகுதியை வைக்க முடியும்.
      4:
        text: ஒரு திருப்பத்தை எடுத்து முன்னோக்கி நகர்த்துவதற்கு இடையில் வைப்போம்.
          45 டிகிரி இடதுபுறம் திரும்பவும். மீண்டும் இயக்குவோம். மீட்டமை, இயக்கு, அருமை!
          இதோ இன்னொரு புதிர். சில நேரங்களில் முடிக்க ஸ்டார்டர் குறியீடு வழங்கப்படும்.
          இங்கே நான் பொருத்தமான நீளம் மற்றும் டிகிரிகளை சேர்க்க வேண்டும்.
      5:
        text: நீங்கள் சில நேரங்களில் ஸ்டார்டர் குறியீட்டை தற்செயலாக குப்பையில் போடலாம்.
          அப்புறம் என்ன செய்வீர்கள்? நீங்கள் தெளிவான புதிரை அழுத்தி மீண்டும் தொடங்கலாம்.
          இந்த எண் தொகுதியை வெவ்வேறு பிக்சல் பகுதிகளுக்கு இழுக்கப் போகிறேன். பிக்சல்களுக்கு
          100, டிகிரிக்கு 45 மற்றும் பிக்சல்களுக்கு 100 ஐ மீண்டும் தேர்ந்தெடுக்கவும்.
          அருமை! இதோ கோட் ஸ்டுடியோ தேனீ. நான் ஒவ்வொரு பூவுக்கும் தேனீயை நகர்த்தி தேன்
          பெற வேண்டும்.
      6:
        text: முதல் மலர் மூன்று தொகுதிகள் தொலைவில் உள்ளது, எனவே எனக்கு மூன்று முன்னோக்கி
          நகர்த்த வேண்டும். 1, 2, 3. பிறகு ஒரு பெறு அமிர்தம், பிறகு மற்றொன்று அமிர்தம்.
          சரி அது வேலை செய்யவில்லை! நான் அமிர்தங்களுக்கு இடையில் மற்றொரு நகர்வை முன்னோக்கி
          வைத்து மீண்டும் இயக்குவேன். ஆம், அது வேலை செய்கிறது! கோட் ஸ்டுடியோ கலைஞரையும்
          தேனீ புதிர்களையும் எவ்வாறு பயன்படுத்துவது என்பதை இப்போதுதான் கற்றுக்கொண்டீர்கள்.
          கோட் ஸ்டுடியோ புதிர் சவாலுக்கு நல்ல அதிர்ஷ்டம்.
    unplug1:
      1:
        text: நீங்கள் ஒலிவியா வளரும்போது என்னவாக இருக்க விரும்புகிறீர்கள்? ஒரு விண்வெளி
          வீரராக. கம்ப்யூட்டர் ப்ரோக்ராமர் என்றால் என்ன என்று உங்களுக்குத் தெரியுமா?
          ஆம் இல்லை. ம்ம்ம் என்ன காத்திரு? கணினி நிரலாக்கம் மிகவும் எளிமையானது என்பதை
          எப்படி விளக்குவது என்று எனக்குத் தெரியவில்லை. இது ஒரு செய்முறை போன்ற வழிமுறைகளின்
          தொகுப்பாகும், நீங்கள் விரும்பும் இறுதி முடிவைப் பெற, படிப்படியாக அவற்றைப்
          பின்பற்ற வேண்டும்.
      2:
        text: கம்ப்யூட்டர் சயின்ஸ் என்பது உலகை பாதிக்கும் ஒரு வழி. அது மியூசிக் வீடியோக்களாக
          இருக்கலாம், கேம்களாக இருக்கலாம், ஒருவர் மற்றவருடன் தொடர்புடையவரா இல்லையா
          என்பதைக் கண்டறியலாம். உங்களுக்குத் தெரிந்தவர்களைக் கண்டுபிடி, மக்கள் நண்பர்களே.
          உயிரைக் காப்பாற்றும் அனைத்து வகையான பிற பைத்தியக்காரத்தனமான செயல்களையும்
          நீங்கள் செய்யலாம். நீங்கள் ஒரு இயக்கி வேண்டும் நான் நினைக்கிறேன். இது எனக்கு
          ஒரு வண்ணப்பூச்சு போன்றது. சிறந்த நிரலாக்கமானது சிறந்த கலையிலிருந்து வேறுபட்டதல்ல
          என்று நான் நினைக்கிறேன்.
      3:
        text: |2-

          நான் இறுதியாக சிறிது நிரலாக்கத்தைக் கற்றுக்கொண்டபோது, ​​​​அந்த வெற்றுச் சுவர் ஒரு கொத்து கதவுகளாகத் தீர்க்கப்பட்டது, நீங்கள் அவற்றைத் திறக்கிறீர்கள், நிச்சயமாக அதன் பின்னால் கதவுகள் நிறைந்த மற்றொரு ஹால்வே இருப்பதைக் காணலாம். நிரலாக்கமானது வேடிக்கையானது மற்றும் எளிதானது. உங்கள் மனம் விரும்பும் எதையும் நீங்கள் செய்யலாம். இறுதியாக, நீங்கள் போதுமான கதவுகளைத் திறக்கத் தொடங்குகிறீர்கள், வெளிச்சம் உள்ளே வருகிறது. என்னைப் பொறுத்தவரை முடிக்கப்பட்ட நிரல் என்பது ஒளியால் நிரப்பப்பட்ட கட்டமைப்பைப் போன்றது. அனைத்து மூலைகளும் ஒளிரும். நீங்கள் தொட்டு தொடர்பு கொள்ளக்கூடிய நபர்களின் எண்ணிக்கை உலகம் இதுவரை கண்டிராத ஒன்று.
      4:
        text: இந்தத் தொடரில் எங்கள் முதல் பாடம் கணினி அறிவியல் என்றால் என்ன, ஒரு கணினி
          விஞ்ஞானி என்ன செய்கிறார் மற்றும் தொழில்நுட்பத்தைப் பயன்படுத்துவதில் நீங்கள்
          எவ்வாறு அதிக பொறுப்புடன் இருக்க முடியும் என்பது பற்றியது. இது ஒரு மிக முக்கியமான
          பாடம், ஆனால் இது கொஞ்சம் உரையாக உள்ளது. முடிவில், உங்கள் முதலெழுத்துக்களைப்
          பயன்படுத்தி உங்கள் சொந்த தனிப்பயனாக்கப்பட்ட குறியாக்கத்தை உருவாக்கலாம்.
          இது ஒரு வேடிக்கையான செயல்பாடு மற்றும் இது மிகவும் வலுவூட்டுகிறது, ஏனெனில்
          பைனரி மிகவும் தொழில்நுட்பமாக உணரும் விஷயங்களில் ஒன்றாகும், ஆனால் நீங்கள்
          அதைப் புரிந்துகொண்டவுடன், நீங்கள் ஒரு ரகசிய மொழியைப் பேசுவது போலாகும்.
    unplug2:
      1:
        text: கணக்கீட்டு சிந்தனை பற்றிய பாடம் ஒரு பெரிய கடினமான சிக்கலை எவ்வாறு எடுத்துக்கொள்வது
          மற்றும் அதை பல எளிய சிக்கல்களாக உடைப்பது எப்படி என்பதைக் கற்பிப்பதாகும்.
          பாடத் திட்டத்தில் சேர்க்கப்பட்டுள்ள அரக்கர்களில் ஒன்றை வரைய யாராவது பின்பற்றக்கூடிய
          வழிமுறைகளின் தொகுப்பை எழுதுவதே இந்தப் பாடத்தின் குறிக்கோள்.
      2:
        text: 'மாணவர்கள் அறிவுறுத்தல்களை எழுத குழுக்களாக உடைந்து, பின்னர் அவர்கள்
          மற்றொரு குழுவுடன் அவற்றை மாற்றுவார்கள், அது அசுரனை வரைய வேண்டும். குழுக்கள்
          கணக்கீட்டு சிந்தனையின் நான்கு படிகளைப் பயன்படுத்தி வழிமுறைகளை எழுதும்: சிதைவு,
          வடிவ இடம், சுருக்கம் மற்றும் வழிமுறைகள்.'
      3:
        text: முதல் குழுக்கள் பணியை சிதைக்கும், அதாவது ஒரு விளையாட்டுத் திட்டத்தை
          உருவாக்குங்கள். பின்னர் அவர்கள் பட்டியலில் உள்ள அனைத்து அரக்கர்களுக்கும்
          இடையிலான வடிவங்களைத் தேடுவார்கள். பேய்களுக்கு இடையே வேறுபாடுகள் வரும்போது,
          அவர்கள் அந்த விவரங்களை சுருக்கிவிடுவார்கள் அல்லது அகற்றுவார்கள். உதாரணமாக,
          பட்டியலில் உள்ள ஒரு அரக்கனுக்கு வெஜிடாஸ் கண்கள் மற்றும் மற்றொன்று ஸ்ப்ரிட்டம்
          கண்கள் உள்ளன. ஆனால் அவர்கள் இருவருக்கும் கண்கள் உள்ளன, எனவே அசுரனுக்கு வெற்றுக்
          கண்கள் இருப்பதாக ஒரு வரி எழுதலாம்.
      4:
        text: எனவே, மாணவர்கள் வழிமுறைகளின் தொகுப்பை எழுத முடியும், இது அல்காரிதம்
          என்று அழைக்கப்படுகிறது, இது பாணிகள் என்னவாக இருக்க வேண்டும் என்பதற்கான வெற்றிடங்களுடன்
          அரக்கர்களின் பாகங்களை பட்டியலிடுகிறது. இது அவர்கள் மற்ற மாணவர்களுக்கு தங்கள்
          சொந்த அசுரனை மீண்டும் உருவாக்குவதற்கு அனுப்பும் வழிமுறைகளின் தொகுப்பாகும்.
    unplug3:
      1:
        text: வரைபடத் தாள் நிரலாக்கத்தில், அம்புகள் மற்றும் ஸ்க்ரிபிள்களை மட்டுமே
          பயன்படுத்தி வரைபடங்களை மீண்டும் உருவாக்க மக்களுக்கு உதவுவதன் மூலம் குறியீட்டு
          முறை எவ்வாறு செயல்படுகிறது என்பதை விளக்க உதவுகிறோம். ஒரு நபருக்கு வரைபடத்
          தாளில் ஒரு சிறிய வரைதல் கொடுக்கப்பட்டுள்ளது, மேலும் அவர்கள் குறிப்பிட்ட
          அம்புகளை மட்டும் பயன்படுத்தி, அந்த வரைபடத்தை எப்படி மீண்டும் உருவாக்குவது
          என்பதை விவரிக்க முயற்சிக்க வேண்டும்.
      2:
        text: 'இந்தச் செயல்பாட்டில், நீங்கள் பயன்படுத்தக்கூடிய ஒரே குறியீடுகள்: ஒரு
          சதுரத்தை முன்னோக்கி நகர்த்தவும், ஒரு சதுரத்தை பின்னோக்கி நகர்த்தவும், ஒரு
          சதுரத்தை மேலே நகர்த்தவும், ஒரு சதுரத்தை கீழே நகர்த்தவும், அடுத்த வண்ணத்திற்கு
          மாற்றவும் மற்றும் உங்கள் சதுரத்தை வண்ணத்தால் நிரப்பவும். அதைக் குறியீடு
          செய்தவுடன், குறியீட்டைப் படித்து, படத்தை மீண்டும் உருவாக்க முயற்சிக்கக்கூடிய
          மற்றொரு நபரிடம் அதை ஒப்படைக்கலாம்.'
    unplug4:
      1:
        text: வரைபடத் தாள் நிரலாக்கத்தில், அம்புகள் மற்றும் ஸ்க்ரிபிள்களை மட்டுமே
          பயன்படுத்தி வரைபடங்களை மீண்டும் உருவாக்க மக்களுக்கு உதவுவதன் மூலம் குறியீட்டு
          முறை எவ்வாறு செயல்படுகிறது என்பதை விளக்க உதவுகிறோம். ஒரு நபருக்கு வரைபடத்
          தாளில் ஒரு சிறிய வரைதல் கொடுக்கப்பட்டுள்ளது, மேலும் அவர்கள் குறிப்பிட்ட
          அம்புகளை மட்டும் பயன்படுத்தி, அந்த வரைபடத்தை எப்படி மீண்டும் உருவாக்குவது
          என்பதை விவரிக்க முயற்சிக்க வேண்டும்.
      2:
        text: செயல்பாட்டின் இரண்டாம் பாதியில், பதினாறு ஒரே மாதிரியான செவ்வகங்களை உருவாக்க
          ஒரு காகிதத்தை எத்தனை வெவ்வேறு வழிகளில் மடிப்பது என்று மாணவர்களிடம் கேட்கிறோம்.
          பல தீர்வுகள் ஒரே இறுதி முடிவுக்கு எவ்வாறு வழிவகுக்கும் மற்றும் சில சூழ்நிலைகளில்
          சில தீர்வுகள் ஏன் சிறந்தவை என்பதை நீங்கள் விவாதிப்பீர்கள்.
    unplug5:
      1:
        text: வரைபடத் தாள் நிரலாக்கத்தில், அம்புகள் மற்றும் ஸ்க்ரிபிள்களை மட்டுமே
          பயன்படுத்தி வரைபடங்களை மீண்டும் உருவாக்க மக்களுக்கு உதவுவதன் மூலம் குறியீட்டு
          முறை எவ்வாறு செயல்படுகிறது என்பதை விளக்க உதவுகிறோம். ஒரு நபருக்கு வரைபடத்
          தாளில் ஒரு சிறிய வரைதல் கொடுக்கப்பட்டுள்ளது, மேலும் அவர்கள் குறிப்பிட்ட
          அம்புகளை மட்டும் பயன்படுத்தி, அந்த வரைபடத்தை எப்படி மீண்டும் உருவாக்குவது
          என்பதை விவரிக்க முயற்சிக்க வேண்டும்.
      2:
        text: செயல்பாட்டின் இரண்டாம் பாதியில், பதினாறு ஒரே மாதிரியான செவ்வகங்களை உருவாக்க
          ஒரு காகிதத்தை எத்தனை வெவ்வேறு வழிகளில் மடிப்பது என்று மாணவர்களிடம் கேட்கிறோம்.
          பல தீர்வுகள் ஒரே இறுதி முடிவுக்கு எவ்வாறு வழிவகுக்கும் மற்றும் சில சூழ்நிலைகளில்
          சில தீர்வுகள் ஏன் சிறந்தவை என்பதை நீங்கள் விவாதிப்பீர்கள்.
    unplug6:
      1:
        text: இந்தச் செயல்பாடு கார்டுகளுடன் குறியீட்டு முறை என்று அழைக்கப்படுகிறது,
          மேலும் இது எந்த வயதினருக்கும் சிறந்தது. முந்தைய பாடங்களில் if ஸ்டேட்மென்ட்
          மூலம் நீங்கள் கற்றுக்கொண்டது போல், பிளாக்லியின் போது, அறிக்கைகள் அவற்றைப்
          பற்றி ஏதேனும் இருந்தால், அது உண்மையா அல்லது பொய்யா என்பதைக் கண்டறிய நீங்கள்
          மதிப்பீடு செய்ய வேண்டும். இது நிபந்தனை மற்றும் இது பல்வேறு வழிகளில் பயன்படுத்தப்படலாம்.
      2:
        text: இந்தச் செயல்பாடு கார்டுகளுடன் குறியீட்டு முறை என்று அழைக்கப்படுகிறது,
          மேலும் இது எந்த வயதினருக்கும் சிறந்தது. முந்தைய பாடங்களில் if ஸ்டேட்மென்ட்
          மூலம் நீங்கள் கற்றுக்கொண்டது போல், பிளாக்லியின் போது, அறிக்கைகள் அவற்றைப்
          பற்றி ஏதேனும் இருந்தால், அது உண்மையா அல்லது பொய்யா என்பதைக் கண்டறிய நீங்கள்
          மதிப்பீடு செய்ய வேண்டும். இது நிபந்தனை மற்றும் இது பல்வேறு வழிகளில் பயன்படுத்தப்படலாம்.
    unplug7:
      1:
        text: ஒரு பாடலுக்கான வரிகளை நீங்கள் தேடும் போது, அவர்கள் பாடலின் தொடக்கத்தில்
          கோரஸை வரையறுத்து, பின்னர் மீதமுள்ள பாடலுக்கு, அவர்கள் உங்களை மீண்டும் கோரஸுக்கு
          எவ்வாறு குறிப்பிடுகிறார்கள் என்பது உங்களுக்குத் தெரியுமா? அப்படித்தான் நீங்கள்
          ஒரு செயல்பாட்டை அழைக்கிறீர்கள்.
      2:
        text: இந்த பாடத்தில், பாடலின் தொடக்கத்தில் கோரஸை வரையறுத்து, பின்னர் எங்கள்
          பாடலைப் பாடிவிட்டு திரும்பிச் செல்கிறோம், வகுப்பில் கோரஸ் என்ற வார்த்தையைப்
          பாடாததைக் கவனிக்கிறோம், அவை தானாகவே மேலே சென்று கோரஸை வரையறுக்கின்றன. மற்றும்
          அதன் மூலம் பாடுங்கள். ஒரு செயல்பாட்டினை வரையறுக்கும் மற்றும் அழைக்கும் போது
          ஒரு நிரல் என்ன செய்கிறது என்பதைப் புரிந்துகொள்வதற்கான சிறந்த அறிமுகமாக இதைப்
          பயன்படுத்துகிறோம்.
      3:
        text: ஓல்ட் மெக்டொனால்ட் உள்ளிட்ட பழக்கமான பாடல்களைப் பயன்படுத்தி, ஒரு கோரஸ்
          எவ்வாறு மீண்டும் மீண்டும் அழைக்கப்படுகிறது மற்றும் சில நேரங்களில் ஒரு கோரஸ்
          எவ்வாறு மாறலாம் என்பதைப் பற்றி பேசுவோம். உங்களிடம் பழைய மெக்டொனால்டு போன்ற
          பாடல் இருந்தால், சில வார்த்தைகள் மாறும் போது, அளவுருக்கள் பற்றிய யோசனையை
          அறிமுகப்படுத்த இது ஒரு சிறந்த இடம். சில வார்த்தைகளை அனுப்புவதன் மூலம் உங்கள்
          செயல்பாட்டிற்கு கூடுதல் தகவலை அனுப்பலாம். எல்லோரும் அதைப் பெறுகிறார்கள்
          என்பதை நாங்கள் உறுதிசெய்தவுடன், உங்களுக்குத் தெரிந்த உங்கள் சொந்தப் பாடல்களை
          எடுத்து அவற்றை நீங்களே பிரித்துக் கொள்ளலாம். நீங்கள் அதை ஒன்றாக கண்டுபிடிக்க
          முடியுமா என்று பாருங்கள்.
    unplug8:
      1:
        text: சுருக்கம் பற்றிய எங்கள் பாடம் மேட்லிப்ஸின் பழக்கமான கருத்தைப் பயன்படுத்துகிறது,
          அங்கு நீங்கள் அடிப்படையில் ஒரு கதையில் வெற்றுப் பகுதியைச் செருகலாம், அது
          பல்வேறு வார்த்தைகளால் நிரப்பப்படலாம். நாங்கள் அந்த யோசனையை எடுத்துக்கொள்கிறோம்,
          குழந்தைகளுக்கு அவர்களின் சொந்த கதைகளுக்கு அவர்களின் சொந்த வார்த்தைகளைக்
          கொண்டு வருமாறு சவால் விடுகிறோம், மேலும் சுருக்கத்தின் கருத்தை உண்மையில்
          விளக்குகிறோம்.
      2:
        text: இது செயல்பாடுகளைப் பற்றியது மற்றும் ஓல்ட் மெக்டொனால்டு போன்ற ஒரு செயல்பாட்டை
          நீங்கள் எவ்வாறு வைத்திருக்க முடியும், அங்கு உங்கள் கோரஸுக்கு ஒரு அமைப்பு
          உள்ளது, ஆனால் உங்களிடம் சிறிய மாற்றம் உள்ளது, மேலும் அந்த சிறிய விஷயத்தை
          நீங்கள் சுருக்கி, மாற்றங்களைச் செய்து அதை உங்கள் சொந்தமாக நிரப்பலாம். ஒவ்வொரு
          முறையும் வார்த்தை. ஆனால் சில நேரங்களில் உங்களிடம் மூன்று வார்த்தைகள் மாறும்,
          எனவே அவற்றை மூன்று அளவுருக்கள் மூலம் நிரப்புகிறீர்கள், அது இன்னும் பயனுள்ளதாக
          இருக்கும்.
      3:
        text: பல்வேறு சிக்கல்களைக் கையாளும் ஒரு செயல்பாட்டை நீங்கள் கொண்டிருக்கலாம்.
          ஒரே ஒரு சிறிய வித்தியாசம் இருப்பதை உணராமல், பல நேரங்களில் மக்கள் அந்த எல்லா
          பிரச்சனைகளுக்கும் தனித்தனி செயல்பாடுகளை எழுதுவார்கள். அந்த ஒரு சிறிய வித்தியாசத்தைக்
          கையாள ஒரு வழியை அவர்களால் கண்டுபிடிக்க முடிந்தால், அவர்கள் 14 வெவ்வேறு செயல்பாடுகளைக்
          கொண்டிருப்பதற்குப் பதிலாக, ஒரு செயல்பாட்டை மீண்டும் பயன்படுத்தலாம்.
    unplug9:
      1:
        text: கணினி அறிவியலை விட ரிலே நிரலாக்கமானது மிகவும் வேடிக்கையான பாடமாகும்.
          சில நேரங்களில் எல்லோரும் கொஞ்சம் கொஞ்சமாக எரிச்சலடைகிறார்கள், நீங்கள் அவர்களை
          அவர்களின் காலடியில் எழுப்ப விரும்புகிறீர்கள். கணினி அறிவியலில் சில உற்சாகத்தை
          சேர்க்க இது ஒரு சிறந்த வழியாகும்.
      2:
        text: நீங்கள் அனைவரையும் இரண்டு குழுக்களாக உடைக்கிறீர்கள், அங்கு அவர்கள் ஒரு
          வரிசையில் நின்று ரிலே பாணியை இயக்குகிறீர்கள். ஒவ்வொரு குழுவிலும் உள்ள முதல்
          நபர் அறையின் மறுபக்கத்திற்கு ஓடுகிறார், அங்கு உங்களிடம் வரைபடத் தாள் வரைதல்
          மற்றும் ஒரு வெற்று காகிதம் அவர்களுக்காகக் காத்திருக்கிறது. அந்த படத்தை உருவாக்குவதற்கான
          முதல் படியை அவர்கள் எழுதி, தங்கள் கோட்டிற்குத் திரும்பி ஓடி, அடுத்த படியை
          எழுத மீண்டும் மேலே செல்லும் அடுத்த வீரரைக் குறியிடுவார்கள்.
      3:
        text: பிழைத்திருத்தம், உங்கள் சொந்த வேலையைச் சரிபார்த்தல் மற்றும் உங்களுக்கு
          முன் செய்தவர்களின் வேலையைச் சரிபார்க்க வேண்டிய அவசியம் போன்ற யோசனைகளைப்
          பெற இது ஒரு சிறந்த வழியாகும். ஒட்டுமொத்த குழுவும் உங்களைச் சார்ந்திருக்கும்
          போது, உங்கள் குறியீட்டில் கவனமாக இருப்பது எவ்வளவு முக்கியம் என்பதை நீங்கள்
          விரைவில் புரிந்துகொள்வீர்கள்.
    unplug10:
      1:
        text: இந்தச் செயல்பாடு, இணையம் எவ்வாறு செயல்படுகிறது என்பதை எளிதில் புரிந்துகொள்ளும்
          வகையில் விளக்குகிறது. உங்களுக்குத் தேவையான அனைத்து சொற்களையும் நாங்கள் எளிய
          சொற்களில் விளக்குகிறோம், இதனால் மாணவர்கள் மின்னஞ்சல் போன்ற செய்திகளை அனுப்புவதை
          உருவகப்படுத்த முடியும்.
      2:
        text: மாணவர்கள் மூன்று பரிமாற்ற முறைகளில் ஒன்றாகக் காட்டிக்கொண்டு செய்திகளை
          அனுப்புவார்கள். வயர்லெஸ் இணையம், DSL அல்லது ஃபைபர் ஆப்டிக். Wi-Fi ஐப் பிரதிநிதித்துவப்படுத்தும்
          மாணவர்கள் தாங்கள் அனுப்பும் செய்தியைத் தலையில் அணிய வேண்டும், ஏனெனில் wifi
          சில தகவல்களைக் கைவிட வாய்ப்புள்ளது.
      3:
        text: DSL அல்லது கேபிள் போல் பாசாங்கு செய்யும் மாணவர்கள் தங்கள் கையின் பின்புறத்தில்
          செய்தியை எடுத்துச் செல்வார்கள், அங்கு அவர்கள் தகவலை கைவிடுவதற்கான வாய்ப்புகள்
          சற்று குறைவாக இருக்கும். ஃபைபர் ஆப்டிக்கைப் பிரதிநிதித்துவப்படுத்தும் மாணவர்கள்
          இரு கைகளாலும் அவற்றை எடுத்துச் செல்லலாம். இந்தச் செயல்பாடு, நம்மில் பலர்
          அன்றாடம் பயன்படுத்தும் ஒன்றைப் புரிந்துகொள்ள சிறந்த வழியாகும்.
    unplug11:
      1:
        text: எனவே இப்போது பின்வாங்கி, கடந்த பத்தொன்பது பாடங்களில் நீங்கள் செய்த அனைத்தையும்
          பறவைக் கண்களால் பார்க்க வேண்டிய நேரம் வந்துவிட்டது. மாணவர்கள் தாங்கள் செய்தது
          மிகப்பெரிய சாதனை என்று அழைக்க இது ஒரு சிறந்த நேரம். கணினி அறிவியலைப் பற்றி
          பெரும்பாலான பெரியவர்களுக்குத் தெரிந்ததை விட அவர்கள் இந்தப் பாடங்களில் அதிகம்
          கற்றுக்கொண்டனர்.
      2:
        text: அவர்களுக்குப் பிடித்த பாடங்களைப் பற்றி ஒரு வகுப்பாகவோ அல்லது சிறு குழுக்களாகவோ
          விவாதிக்கவும். நீங்கள் கற்றுக்கொண்ட அனைத்தையும் திரும்பிப் பார்த்தால், உங்கள்
          மாணவர்களின் படைப்பாற்றல் பிரகாசிக்கக்கூடிய இடம் இதுதான். அவர்களை குழுக்களாகப்
          பிரித்து, அவர்களுக்கென ஒரு அன்ப்ளக்ட் பாடத்தை உருவாக்குங்கள். ஒவ்வொரு குழுவிற்கும்
          செயல்பாடுகள் அல்லது அல்காரிதம்கள் போன்ற ஒரு முக்கிய கருத்தை ஒதுக்குங்கள்
          மற்றும் அவர்கள் பயன்படுத்துவதற்கு நிறைய கைவினைப் பொருட்களை வைத்திருங்கள்.
          ஒவ்வொரு குழுவும் தங்களின் புதிய துண்டிக்கப்பட்ட செயல்பாட்டை முன்வைக்கவும்
          அல்லது மாணவர் உருவாக்கிய சில செயல்பாடுகளைச் செய்வதற்கு மற்றொரு நாளை ஒதுக்கவும்.
      3:
        text: Code.org இல் உள்ள அனைவரிடமிருந்தும், இந்தப் பாடத்திட்டத்தின் போது நீங்கள்
          ஒரு டன் மகிழ்ச்சியைப் பெற்றிருப்பீர்கள் என்று நம்புகிறோம். சிறந்த புதிய
          செயலியை உருவாக்குவது, நோய்களைக் குணப்படுத்த புரோகிராமிங்கைப் பயன்படுத்துவது
          அல்லது ஒரு நட்சத்திரப் பிரச்சனையைத் தீர்ப்பவராக இருக்க விரும்புவது உங்கள்
          கனவாக இருந்தாலும், அந்தக் கனவுகளை அடைவதற்கான முதல் படியாக இந்தப் பாடத்திட்டம்
          அமைந்தது.
    starwars_intro:
      1:
        text: 'ஹாய், நான் கேத்லீன் கென்னடி, நான் ஸ்டார் வார்ஸ்: தி ஃபோர்ஸ் அவேக்கன்ஸ்
          தயாரிப்பாளர். இன்று நீங்கள் எங்கள் நட்சத்திரங்களில் ஒன்றான பிபி -8 உடன்
          பணிபுரிவீர்கள். பிபி -8 ஒரு கோள டிரயோடு ஆகும். அவர் செய்யும் ஒவ்வொன்றும்
          அவர் செய்யும் ஒவ்வொரு இயக்கமும் கணினி மென்பொருளால் கட்டுப்படுத்தப்படுகின்றன.
          கணினி அறிவியல் ஒவ்வொரு துறையையும் பாதிக்கிறது, சந்தைப்படுத்தல் முதல் சுகாதாரப்
          பாதுகாப்பு வரை படம் வரை. உண்மையில், தி ஃபோர்ஸ் அவேக்கன்ஸ் போன்ற ஒரு திரைப்படத்தை
          உருவாக்க நூற்றுக்கணக்கான கணினி பொறியாளர்கள் இணைந்து பணியாற்றினர்.'
      2:
        text: ஹாய் நான் ரேச்சல் ரோஸ், நான் ஐ.எல்.எம்மில் ஒரு மூத்த ஆர் & டி பொறியாளர்,
          நான் அனிமேஷன் மற்றும் உயிரின மேம்பாட்டுக் குழுவை வழிநடத்துகிறேன். தி ஃபோர்ஸ்
          அவேக்கன்ஸில், கலைஞர்களுக்கு ரிக்ஸை உருவாக்க உதவுவதற்கு நான் பொறுப்பேற்கிறேன்,
          அவை கதாபாத்திரத்தின் பகுதிகள், அவை தூரத்தில் உள்ள ஒரு விண்மீன் மண்டலத்தில்
          மிகவும் நம்பக்கூடியதாக இருக்கும்.
      3:
        text: அடுத்த ஒரு மணி நேரத்தில், நாங்கள் எங்கள் சொந்த ஸ்டார் வார்ஸ் விளையாட்டை
          உருவாக்கப் போகிறோம். நிரலாக்கத்தின் அடிப்படை கருத்துக்களை நாங்கள் உங்களுக்கு
          கற்பிப்போம். வழக்கமாக நிரலாக்கமானது அனைத்து உரையாகும், ஆனால் நாங்கள் இங்கே
          தொகுதிகள் பயன்படுத்தப் போகிறோம், இதனால் நிரல்களை எழுத இழுத்து விடலாம். பேட்டை
          கீழ், நீங்கள் இன்னும் குறியீட்டை உருவாக்குகிறீர்கள். தொகுதிகள் மூலம் அடிப்படைகளை
          நீங்கள் முயற்சித்த பிறகு, வலையில் மிகவும் பிரபலமான நிரலாக்க மொழிகளில் ஒன்றான
          ஜாவாஸ்கிரிப்டுக்கு உங்களை மாற்றுவோம்.
      4:
        text: தொடங்குவதற்கு, ஸ்க்ராப் பாகங்கள் அனைத்தையும் சேகரிக்க நடக்க ரேயுடன்
          பிபி -8 ஐ நிரல் செய்யப் போகிறோம். உங்கள் திரை மூன்று பகுதிகளாக பிரிக்கப்பட்டுள்ளது.
          இடதுபுறத்தில் ஸ்டார் வார்ஸ் விளையாட்டு இடம் உள்ளது, அங்கு குறியீடு இயங்கும்.
          ஒவ்வொரு நிலைக்கும் வழிமுறைகள் விளையாட்டு இடத்திற்கு கீழே எழுதப்பட்டுள்ளன.
      5:
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டி மற்றும் இந்த தொகுதிகள் ஒவ்வொன்றும்
          பிபி -8 புரிந்து கொள்ளக்கூடிய கட்டளை.
      6:
        text: வலதுபுறத்தில் உள்ள வெள்ளை இடம் பணியிடம் என்று அழைக்கப்படுகிறது, இங்குதான்
          நாங்கள் எங்கள் திட்டத்தை உருவாக்கப் போகிறோம்.
      7:
        text: நான் மூவ்லெஃப்ட் () ஐ இழுத்தால்; எங்கள் பணியிடத்தைத் தடுத்து ரன் அழுத்தவும்,
          என்ன நடக்கும்? பிபி -8 நகர்வுகள் கட்டத்தில் ஒரு தொகுதியை விட்டுச் சென்றன.
      8:
        text: நகர்த்தல் () க்குப் பிறகு பிபி -8 ஏதாவது செய்ய விரும்பினால் என்ன செய்வது;
          தடுக்கவா? எங்கள் திட்டத்திற்கு மற்றொரு தொகுதியை நான் சேர்க்க முடியும். நான்
          நகர்த்தலை தேர்வு செய்யப் போகிறேன் (); தடு, நான் அதை என் நகர்த்தலின் கீழ்
          இழுக்கிறேன் (); சிறப்பம்சமாக தோன்றும் வரை தடு. பின்னர் நான் அதை கைவிடுவேன்,
          இரண்டு தொகுதிகளும் ஒன்றாக ஒடிவிடும்.
      9:
        text: நான் மீண்டும் ரன் அழுத்தும்போது, பிபி -8 எங்கள் பணியிடத்தில் மேலிருந்து
          கீழாக அடுக்கப்பட்ட கட்டளைகளைச் செய்யும். நீங்கள் எப்போதாவது ஒரு தொகுதியை
          நீக்க விரும்பினால், அதை அடுக்கிலிருந்து அகற்றி மீண்டும் கருவி பெட்டியில்
          இழுக்கவும்.
      10:
        text: நீங்கள் ரன் அடித்த பிறகு, பிபி -8 ஐ மீண்டும் தொடங்குவதற்கு மீட்டமை பொத்தானை
          அழுத்தவும். இப்போது உருட்டலாம்!
    starwars_typing:
      1:
        text: நாங்கள் பயன்படுத்தும் தொகுதிகளுக்குள் ஜாவாஸ்கிரிப்ட் கட்டளைகள் உள்ளன.
          தொழில்முறை டெவலப்பர்களுக்கான ஜாவாஸ்கிரிப்ட் இன்று மிகவும் பிரபலமான நிரலாக்க
          மொழியாகும். குறியீட்டைக் கற்கத் தொடங்குவதற்கு பிளாக்ஸ் ஒரு சிறந்த வழியாகும்,
          உண்மையில், ஹார்வர்ட் மற்றும் பெர்க்லி போன்ற சிறந்த பல்கலைக்கழகங்கள் இந்த
          வழியில் கற்பிக்கத் தொடங்குகின்றன. ஆனால் அடிப்படைகளை நாங்கள் கற்றுக்கொண்டவுடன்,
          பொறியாளர்கள் தட்டச்சு செய்வதன் மூலம் குறியீட்டை எழுதுகிறார்கள், ஏனெனில்
          இது விரைவாக செல்ல அனுமதிக்கிறது.
      2:
        text: கருவிப்பெட்டியில் அவற்றைக் கண்டுபிடிக்காமல் அல்லது வெளியே இழுக்காமல்
          நூற்றுக்கணக்கான கட்டளைகளை நாம் தட்டச்சு செய்யலாம். நீங்கள் தட்டச்சு செய்வதைக்
          கற்றுக்கொள்வதால் முதலில் மெதுவாக இருக்கலாம், ஆனால் நீங்கள் அதை முயற்சித்துப்
          பார்க்க விரும்புகிறோம்.
      3:
        text: உங்கள் பணியிடத்தின் மேல் வலது மூலையில், எந்த புதிரிலும் உள்ள காட்சி
          உரை பொத்தானைக் கிளிக் செய்து தொகுதிகளிலிருந்து தட்டச்சு குறியீட்டை உரையாக
          மாற்றலாம்.
      4:
        text: அடுத்த பாடத்தில், நாங்கள் உங்களை தட்டச்சு பயன்முறையில் தொடங்குவோம்.
          இங்கே நீங்கள் கருவிப்பெட்டியில் இருந்து தடுப்பை இழுக்கலாம் அல்லது கட்டளை
          பெயரை தட்டச்சு செய்யலாம். நீங்கள் தட்டச்சு செய்யத் தொடங்கும் போது, நீங்கள்
          தட்டச்சு செய்யும் இடத்திற்கு கீழே சாத்தியமான கட்டளைகளின் பெயர்களைக் காண்பீர்கள்.
          முழு கட்டளை பெயரையும் தட்டச்சு செய்வதற்கு பதிலாக, வேகமாக செல்ல இவற்றில்
          ஒன்றைத் தேர்ந்தெடுக்கலாம். எனது வேலையில், குறியீட்டை எழுதும் போது இந்த தானியங்கு-முழுமையான
          அம்சத்தை நான் எப்போதும் பயன்படுத்துகிறேன்.
      5:
        text: நீங்கள் குறியீட்டைத் தட்டச்சு செய்யும் போது, கணினிக்கு நீங்கள் மிகவும்
          துல்லியமாக இருக்க வேண்டும். அடைப்புக்குறிப்புகள் மற்றும் அரை பெருங்குடல்
          உள்ளிட்ட கட்டளை பெயரை நீங்கள் சரியாக உச்சரிக்க வேண்டும் மற்றும் பெரியதாக்க
          வேண்டும். ஒரு சிறிய தட்டச்சு தவறுடன் கூட, பிபி -8 குறியீட்டைப் புரிந்து
          கொள்ள முடியாது, மேலும் நகர்த்த முடியாது.
      6:
        text: நீங்கள் வரியில் பிழை செய்யும்போது, ஆசிரியர் அதை உங்களுக்காக முன்னிலைப்படுத்துகிறார்,
          இதன் மூலம் அதை சரிசெய்ய உங்கள் உரையை மாற்ற முயற்சி செய்யலாம்.
      7:
        text: நீங்கள் சிக்கிக்கொண்டால், நீங்கள் எப்போதும் ஸ்டார்ட் ஓவர் பொத்தானைக்
          கொண்டு தொடங்கலாம் மற்றும் மேல்-வலது மூலையில் கிளிக் செய்வதன் மூலம் எந்த
          நேரத்திலும் தடுப்பு பயன்முறைக்கு மாறலாம். சரி, தட்டச்சு செய்வதை முயற்சித்துப்
          பார்ப்போம்! நீங்கள் தவறு செய்தால், விரக்தியடைய வேண்டாம். அதை சரியாகப் பெற
          அனைவருக்கும் சில முயற்சிகள் தேவை.
    starwars_events:
      1:
        text: வணக்கம், என் பெயர் சரிதா கார்ட்டர். நான் இங்கே வால்ட் டிஸ்னி இமேஜினீரிங்
          ஒரு மூத்த படைப்பு தயாரிப்பாளர். எங்கள் விருந்தினர்கள் அனுபவிக்கும் இடங்களை
          உண்மையில் உருவாக்கும் முன்னணி அணிகளுக்கு நான் பொறுப்பு. எங்கள் விருந்தினர்களுக்கு
          மேம்படுத்துவதற்கும் சிறந்த அனுபவத்தை ஏற்படுத்துவதற்கும் நாங்கள் எப்போதும்
          வழிகளைத் தேடுகிறோம், தொழில்நுட்பம் அதன் மையத்தில் உள்ளது.
      2:
        text: வாழ்த்துக்கள், நீங்கள் செய்தீர்கள்! நீங்கள் பிபி -8 ஐ நிரல் செய்தீர்கள்.
          இப்போது நாங்கள் கடினமான ஒன்றுக்கு தயாராக இருக்கிறோம் என்று நினைக்கிறேன்.
          அதற்காக செல்லலாம். இப்போது நீங்கள் நிரலாக்கத்தின் அடிப்படைகளை கற்றுக் கொண்டீர்கள்,
          R2-D2 மற்றும் C-3PO நடித்த உங்கள் சொந்த விளையாட்டை உருவாக்க நாங்கள் திரும்பி
          வருகிறோம்.
      3:
        text: 'ஒரு விளையாட்டை உருவாக்க, விளையாட்டு புரோகிராமர்கள் ஒவ்வொரு நாளும் பயன்படுத்தும்
          ஒன்றைப் பற்றி நாம் கற்றுக்கொள்ள வேண்டும்: அவை நிகழ்வுகள் என்று அழைக்கப்படுகின்றன.
          நிகழ்வுகள் உங்கள் நிரலைக் கேட்க அல்லது ஏதாவது நடக்கும்போது காத்திருக்கச்
          சொல்கின்றன, பின்னர் அது நிகழும்போது, அது ஒரு செயலைச் செய்கிறது.'
      4:
        text: நிகழ்வுகளின் சில எடுத்துக்காட்டுகள் சுட்டி கிளிக், அம்பு பொத்தான் அல்லது
          திரையில் தட்டவும்.
      5:
        text: இங்கே நாம் ஒரு கிளர்ச்சி விமானிக்கு ஒரு செய்தியை வழங்க R2-D2 ஐ நகர்த்துவோம்,
          பின்னர் மற்ற கிளர்ச்சி விமானிக்கு கீழே செல்லலாம். அவரை நகர்த்துவதற்கு நிகழ்வுகளைப்
          பயன்படுத்துவோம். பிளேயர் மேல் / கீழ் அம்பு விசைகள் அல்லது மேல் / கீழ் பொத்தான்களைப்
          பயன்படுத்தும் போது.
      6:
        text: நாங்கள் whenUp() நிகழ்வுத் தொகுதியைப் பயன்படுத்துகிறோம், அதனுடன் goUp()
          தொகுதியை இணைக்கிறோம். பிளேயர் மேல் அம்பு விசையை அழுத்தும்போது, whenUp()
          தொகுதிக்கு இணைக்கப்பட்ட குறியீடு இயக்கப்படும். R2-D2 ஐ நகர்த்துவதற்கு நாங்கள்
          அதையே செய்வோம்.
      7:
        text: இதைச் செய்ய, whenUp () எனப்படும் கட்டளையைப் பயன்படுத்துவோம். கருவிப்பெட்டியில்
          இருந்து கட்டளையை வெளியே இழுக்கும்போது, அது அரை பெருங்குடலுக்குப் பதிலாக
          சுருள் அடைப்புக்குறிக்குள் தொடங்கி முடிவடைவதைக் காண்பீர்கள். இது மற்ற கட்டளைகளை
          நடுவில் வைக்க இடம் தருகிறது. இந்த அடைப்புக்குறிக்குள் நாம் வைக்கும் ஒவ்வொரு
          கட்டளையும் பிளேயர் மேல் அம்புக்குறியை அழுத்தும்போது இயங்கும்.
      8:
        text: R2-D2 மேலே செல்ல வேண்டும் என்று நாங்கள் விரும்புகிறோம், எனவே ஒரு goUp
          () ஐ வைப்போம்; கட்டளைக்குள் தடு. R2-D2 ஐ குறைக்க நாங்கள் அதையே செய்வோம்.
      9:
        text: எங்கள் டிரயோடு முன்கூட்டியே கட்டுப்படுத்த அனைத்து குறியீடுகளையும் எழுதுவதற்கு
          பதிலாக, திரையைச் சுற்றி அவரை நகர்த்தும் பொத்தானை அழுத்த நிகழ்வுகளுக்கு R2-D2
          செயல்பட அனுமதிக்கலாம். படிப்படியாக, உங்கள் விளையாட்டு மேலும் ஊடாடும்.
    starwars_congrats:
      1:
        text: ஹாய், என் பெயர் ஆலிஸ் மற்றும் நான் இங்கே தயாரிப்பு மற்றும் பொறியியல்
          குழுக்களை கோட்.ஆர்ஜில் இயக்குகிறேன், நீங்கள் இப்போது விளையாடும் இந்த டுடோரியலில்
          பணிபுரிந்தேன்.
      2:
        text: நீங்கள் அதை கடைசி நிலைக்கு கொண்டு வந்தீர்கள். வாழ்த்துக்கள்! உங்கள்
          சொந்த ஸ்டார் வார்ஸ் விளையாட்டை உருவாக்க நீங்கள் தெரிந்து கொள்ள வேண்டிய அனைத்தையும்
          நீங்கள் கற்றுக்கொண்டீர்கள். இப்போது கூடுதல் வழிமுறைகள் இல்லை, தீர்க்க புதிர்கள்
          இல்லை. நீங்கள் உங்கள் சொந்த விளையாட்டை உருவாக்கலாம், அது எவ்வாறு செயல்படுகிறது
          என்பதை நீங்கள் தேர்வு செய்கிறீர்கள். இன்னும் ஒரு விஷயம், நீங்கள் இன்னும்
          செய்ய புதிய ஒலிகளையும் புதிய கட்டளைகளையும் திறந்துவிட்டீர்கள்.
      3:
        text: "[மாணவர்கள் பேசுகிறார்கள்] எனவே நீங்கள் பஃபர் பன்றிகளைப் பெறும்போது
          புள்ளிகளைப் பெறும் ஒரு விளையாட்டை நாங்கள் செய்துள்ளோம். திருப்பம் என்பது
          நீங்கள் ஒரு பஃபர் பன்றியைப் பெறும்போதெல்லாம் ஒரு புயல் துருப்பு தோன்றும்.
          உண்மையில் முழு திரையும் பஃபர் பன்றிகளால் நிரம்பியுள்ளது, பின்னர் அவற்றில்
          10,000 ஐத் தொடும்போது, நீங்கள் வெல்வீர்கள்."
      4:
        text: "[மாணவர்கள் பேசுகிறார்கள்] நீங்கள் இழக்க முடியாத ஒரு விளையாட்டை நாங்கள்
          செய்துள்ளோம், நீங்கள் கொன்ற அனைத்தும் உங்களுக்கு புள்ளிகளைத் தருகின்றன.
          எனது நிரலுக்காக, நான் விசைகளை மாற்றியமைத்தேன், இதனால் நீங்கள் கிளிக் செய்யும்
          போதெல்லாம், உங்கள் எழுத்து குறைகிறது, நீங்கள் வலதுபுறம் செல்லும்போது, உங்கள்
          எழுத்து இடதுபுறமாக செல்லும். இது மிகவும் கடினம்! சில நேரங்களில் நீங்கள்
          விளையாட்டின் டெவலப்பராக இருந்தால் ஒரு நன்மை, நியாயமற்ற நன்மை கிடைக்கும்.
          எனக்கு கிடைத்ததா? ஆம்!"
      5:
        text: உங்கள் விளையாட்டை நீங்கள் முடித்ததும், நண்பர்களுடன் பகிர்ந்து கொள்ளக்கூடிய
          இணைப்பைப் பெற பகிர்வைத் தேர்வுசெய்யவும் அல்லது உங்கள் தொலைபேசியில் உங்கள்
          விளையாட்டை விளையாடவும். மகிழுங்கள்!
    starwars_blocks_intro:
      1:
        text: 'ஹாய் நான் கேத்லீன் கென்னடி மற்றும் நான் ஸ்டார் வார்ஸ்: தி ஃபோர்ஸ் அவேக்கன்ஸ்
          தயாரிப்பாளர். இன்று நீங்கள் எங்கள் நட்சத்திரங்களில் ஒன்றான பிபி -8 உடன்
          பணிபுரிவீர்கள். பிபி -8 ஒரு கோள டிரயோடு ஆகும். அவர் செய்யும் ஒவ்வொன்றும்
          அவர் செய்யும் ஒவ்வொரு இயக்கமும் கணினி மென்பொருளால் கட்டுப்படுத்தப்படுகின்றன.
          கணினி அறிவியல் ஒவ்வொரு துறையையும் பாதிக்கிறது, சந்தைப்படுத்தல் முதல் சுகாதாரப்
          பாதுகாப்பு வரை படம் வரை. உண்மையில், தி ஃபோர்ஸ் அவேக்கன்ஸ் போன்ற ஒரு திரைப்படத்தை
          உருவாக்க நூற்றுக்கணக்கான கணினி பொறியாளர்கள் இணைந்து பணியாற்றினர்.'
      2:
        text: ஹாய், நான் ரேச்சல் ரோஸ். நான் ஐ.எல்.எம்மில் ஒரு மூத்த ஆர் அண்ட் டி பொறியாளர்,
          நான் அனிமேஷன் மற்றும் உயிரின மேம்பாட்டுக் குழுவை வழிநடத்துகிறேன். தி ஃபோர்ஸ்
          அவேக்கன்ஸில், கலைஞருக்கு ரிக்ஸை உருவாக்க உதவுவதற்கு நான் பொறுப்பேற்கிறேன்,
          அவை கதாபாத்திரத்தின் பகுதிகள், அவை ஒரு விண்மீன் மண்டலத்தில் மிகவும் நம்பத்தகுந்ததாக
          இருக்க அனுமதிக்கும்.
      3:
        text: அடுத்த ஒரு மணி நேரத்தில், நாங்கள் எங்கள் சொந்த ஸ்டார் வார்ஸ் விளையாட்டை
          உருவாக்கப் போகிறோம், இது நிரலாக்கத்தின் அடிப்படைக் கருத்துக்களை உங்களுக்குக்
          கற்பிக்கும். வழக்கமாக நிரலாக்கமானது அனைத்து உரையாகும், ஆனால் நாங்கள் இங்கே
          தொகுதிகளைப் பயன்படுத்தப் போகிறோம், எனவே நிரல்களை எழுத இழுத்து விடலாம். தொடங்குவதற்கு,
          ஸ்க்ராப் பாகங்கள் அனைத்தையும் சேகரிக்க நடக்க ரேயுடன் பிபி -8 ஐ நிரல் செய்யப்
          போகிறோம்.
      4:
        text: உங்கள் திரை மூன்று பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில் குறியீடு
          இயங்கும் ஸ்டார் வார்ஸ் விளையாட்டு இடம் உள்ளது. ஒவ்வொரு நிலைக்கும் வழிமுறைகள்
          விளையாட்டு இடத்திற்கு கீழே எழுதப்பட்டுள்ளன.
      5:
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டி மற்றும் இந்த தொகுதிகள் ஒவ்வொன்றும்
          பிபி -8 புரிந்து கொள்ளக்கூடிய கட்டளை.
      6:
        text: வலதுபுறத்தில் உள்ள வெள்ளை இடம் வேலை இடம் என்று அழைக்கப்படுகிறது, இங்குதான்
          நாங்கள் எங்கள் திட்டத்தை உருவாக்கப் போகிறோம்
      7:
        text: நான் மூவ்லெஃப்ட் () ஐ இழுத்தால்; எங்கள் பணியிடத்தைத் தடு, என்ன நடக்கும்?
          பிபி -8 நகர்வுகள் கட்டத்தில் ஒரு தொகுதியை விட்டுச் சென்றன.
      8:
        text: நகர்த்தல் () க்குப் பிறகு பிபி -8 ஏதாவது செய்ய விரும்பினால் என்ன செய்வது;
          தடுக்கவா? எங்கள் திட்டத்திற்கு மற்றொரு தொகுதியை நான் சேர்க்க முடியும். நான்
          நகர்த்தலை தேர்வு செய்யப் போகிறேன் (); தடு, நான் அதை என் நகர்த்தலின் கீழ்
          இழுக்கிறேன் (); சிறப்பம்சமாக தோன்றும் வரை தடு. பின்னர் நான் அதை கைவிடுவேன்,
          இரண்டு தொகுதிகளும் ஒன்றாக ஒடிவிடும். நான் மீண்டும் ரன் அழுத்தும்போது, பிபி
          -8 எங்கள் பணியிடத்தில் மேலிருந்து கீழாக அடுக்கப்பட்ட கட்டளைகளைச் செய்யும்.
      9:
        text: நீங்கள் எப்போதாவது ஒரு தொகுதியை நீக்க விரும்பினால், அதை அடுக்கிலிருந்து
          அகற்றி மீண்டும் கருவிப்பெட்டியில் இழுக்கவும்.
      10:
        text: நீங்கள் ரன் அடித்த பிறகு, பிபி -8 ஐ மீண்டும் தொடங்குவதற்கு மீட்டமை பொத்தானை
          அழுத்தவும். இப்போது உருட்டலாம்!
    starwars_blocks_events:
      1:
        text: வணக்கம், என் பெயர் சரிதா கார்ட்டர். நான் இங்கே வால்ட் டிஸ்னி இமேஜினீரிங்
          ஒரு மூத்த படைப்பு தயாரிப்பாளர். எங்கள் விருந்தினர்கள் அனுபவிக்கும் இடங்களை
          உண்மையில் உருவாக்கும் முன்னணி அணிகளுக்கு நான் பொறுப்பு. எங்கள் விருந்தினர்களுக்கு
          மேம்படுத்துவதற்கும் சிறந்த அனுபவத்தை ஏற்படுத்துவதற்கும் நாங்கள் எப்போதும்
          வழிகளைத் தேடுகிறோம், தொழில்நுட்பம் அதன் மையத்தில் உள்ளது.
      2:
        text: வாழ்த்துக்கள், நீங்கள் செய்தீர்கள்! நீங்கள் பிபி -8 ஐ நிரல் செய்தீர்கள்.
          இப்போது நாங்கள் கடினமான ஒன்றுக்கு தயாராக இருக்கிறோம் என்று நினைக்கிறேன்.
          அதற்காக செல்லலாம். இப்போது நீங்கள் நிரலாக்கத்தின் அடிப்படைகளை கற்றுக் கொண்டீர்கள்,
          R2-D2 மற்றும் C-3PO நடித்த உங்கள் சொந்த விளையாட்டை உருவாக்க நாங்கள் திரும்பி
          வருகிறோம்.
      3:
        text: 'ஒரு விளையாட்டை உருவாக்க, விளையாட்டு புரோகிராமர்கள் ஒவ்வொரு நாளும் பயன்படுத்தும்
          ஒன்றைப் பற்றி நாம் கற்றுக்கொள்ள வேண்டும்: அவை நிகழ்வுகள் என்று அழைக்கப்படுகின்றன.
          நிகழ்வுகள் உங்கள் நிரலைக் கேட்க அல்லது ஏதாவது நடக்கும்போது காத்திருக்கச்
          சொல்கின்றன, பின்னர் அது நிகழும்போது, அது ஒரு செயலைச் செய்கிறது.'
      4:
        text: நிகழ்வுகளின் சில எடுத்துக்காட்டுகள் சுட்டி கிளிக், அம்பு பொத்தான் அல்லது
          திரையில் தட்டவும்.
      5:
        text: இங்கே நாம் ஒரு கிளர்ச்சி விமானிக்கு ஒரு செய்தியை வழங்க R2-D2 ஐ நகர்த்துவோம்,
          பின்னர் மற்ற கிளர்ச்சி விமானிக்கு கீழே செல்லலாம். அவரை நகர்த்துவதற்கு நிகழ்வுகளைப்
          பயன்படுத்துவோம். பிளேயர் மேல் / கீழ் அம்பு விசைகள் அல்லது மேல் / கீழ் பொத்தான்களைப்
          பயன்படுத்தும் போது.
      6:
        text: நாங்கள் whenUp () நிகழ்வுத் தொகுதியைப் பயன்படுத்துகிறோம், அதனுடன் goUp
          () தொகுதியை இணைக்கிறோம். பிளேயர் மேல் அம்பு விசையை அழுத்தும்போது, whenUp
          () தொகுதிக்கு இணைக்கப்பட்ட குறியீடு இயக்கப்படும். R2-D2 ஐ நகர்த்துவதற்கு
          நாங்கள் அதையே செய்வோம். எங்கள் டிரயோடு முன்கூட்டியே கட்டுப்படுத்த அனைத்து
          குறியீடுகளையும் எழுதுவதற்கு பதிலாக, திரையைச் சுற்றி அவரை நகர்த்தும் பொத்தானை
          அழுத்த நிகழ்வுகளுக்கு R2-D2 செயல்பட அனுமதிக்கலாம்.
      7:
        text: படிப்படியாக, உங்கள் விளையாட்டு மேலும் ஊடாடும்.
    starwars_blocks_congrats:
      1:
        text: ஹாய், என் பெயர் ஆலிஸ் மற்றும் நான் இங்கே தயாரிப்பு மற்றும் பொறியியல்
          குழுக்களை கோட்.ஆர்ஜில் இயக்குகிறேன், நீங்கள் இப்போது விளையாடும் இந்த டுடோரியலில்
          பணிபுரிந்தேன்.
      2:
        text: நீங்கள் அதை கடைசி நிலைக்கு கொண்டு வந்தீர்கள். வாழ்த்துக்கள்! உங்கள்
          சொந்த ஸ்டார் வார்ஸ் விளையாட்டை உருவாக்க நீங்கள் தெரிந்து கொள்ள வேண்டிய அனைத்தையும்
          நீங்கள் கற்றுக்கொண்டீர்கள். இப்போது கூடுதல் வழிமுறைகள் இல்லை, தீர்க்க புதிர்கள்
          இல்லை. நீங்கள் உங்கள் சொந்த விளையாட்டை உருவாக்கலாம், அது எவ்வாறு செயல்படுகிறது
          என்பதை நீங்கள் தேர்வு செய்கிறீர்கள். இன்னும் ஒரு விஷயம், நீங்கள் இன்னும்
          செய்ய புதிய ஒலிகளையும் புதிய கட்டளைகளையும் திறந்துவிட்டீர்கள்.
      3:
        text: "[மாணவர்கள் பேசுகிறார்கள்] எனவே நீங்கள் பஃபர் பன்றிகளைப் பெறும்போது
          புள்ளிகளைப் பெறும் ஒரு விளையாட்டை நாங்கள் செய்துள்ளோம். திருப்பம் என்பது
          நீங்கள் ஒரு பஃபர் பன்றியைப் பெறும்போதெல்லாம் ஒரு புயல் துருப்பு தோன்றும்.
          உண்மையில் முழு திரையும் பஃபர் பன்றிகளால் நிரம்பியுள்ளது, பின்னர் அவற்றில்
          10,000 ஐத் தொடும்போது, நீங்கள் வெல்வீர்கள்."
      4:
        text: "[மாணவர்கள் பேசுகிறார்கள்] நீங்கள் இழக்க முடியாத ஒரு விளையாட்டை நாங்கள்
          செய்துள்ளோம், நீங்கள் கொன்ற அனைத்தும் உங்களுக்கு புள்ளிகளைத் தருகின்றன.
          எனது நிரலுக்காக, நான் விசைகளை மாற்றியமைத்தேன், இதனால் நீங்கள் கிளிக் செய்யும்
          போதெல்லாம், உங்கள் எழுத்து குறைகிறது, நீங்கள் வலதுபுறம் செல்லும்போது, உங்கள்
          எழுத்து இடதுபுறமாக செல்லும். இது மிகவும் கடினம்! சில நேரங்களில் நீங்கள்
          விளையாட்டின் டெவலப்பராக இருந்தால் ஒரு நன்மை, நியாயமற்ற நன்மை கிடைக்கும்.
          எனக்கு கிடைத்ததா? ஆம்!"
      5:
        text: உங்கள் விளையாட்டை நீங்கள் முடித்ததும், நண்பர்களுடன் பகிர்ந்து கொள்ளக்கூடிய
          இணைப்பைப் பெற பகிர்வைத் தேர்வுசெய்யவும் அல்லது உங்கள் தொலைபேசியில் உங்கள்
          விளையாட்டை விளையாடவும். மகிழுங்கள்!
    mc_intro:
      1:
        text: என் பெயர் ஜென்ஸ் பெர்கென்ஸ்டன் ஆனால் நான் ஜெப் என்று நன்கு அறியப்பட்டவன்.
          ஸ்டாக்ஹோமில் உள்ள மொஜாங்கில் உள்ள Minecraft இல் நான் முன்னணி டெவலப்பர்.
          எனக்கு பதினொன்று அல்லது பன்னிரெண்டு வயது என்று நினைக்கிறேன், நான் கேம்களை
          உருவாக்க விரும்பியதால் நிரலாக்கத்தைத் தொடங்கினேன். எனது தந்தையின் நண்பர்
          ஒருவர் என்னிடம் கேம்களை உருவாக்க, நீங்கள் எவ்வாறு நிரல் செய்வது என்பதைக்
          கற்றுக் கொள்ள வேண்டும் என்று கூறினார். அப்படித்தான் ஆரம்பித்தேன். கேம்களின்
          கட்டமைப்பை வடிவமைத்து கண்டுபிடிப்பதை நான் விரும்புகிறேன். Minecraft இல்
          நான் மிகவும் விரும்புவது இதுதான்.
      2:
        text: அடுத்த ஒரு மணி நேரத்தில், அலெக்ஸ் அல்லது ஸ்டீவ் மூலம் கணினி அறிவியலின்
          அடிப்படைகளை நீங்கள் கற்றுக் கொள்ளப் போகிறீர்கள்.
      3:
        text: பாரம்பரிய நிரலாக்கமானது பொதுவாக உரையில் உள்ளது, ஆனால் இன்று நாம் பிளாக்லியைப்
          பயன்படுத்துவோம், இது காட்சித் தொகுதிகளைப் பயன்படுத்தும், நிரல்களை எழுத நீங்கள்
          இழுத்து விடலாம். ஹூட்டின் கீழ், நீங்கள் ஜாவாஸ்கிரிப்ட் குறியீட்டை உருவாக்குகிறீர்கள்.
      4:
        text: பாரம்பரிய நிரலாக்கமானது பொதுவாக உரையில் உள்ளது, ஆனால் இன்று நாம் பிளாக்லியைப்
          பயன்படுத்துவோம், இது காட்சித் தொகுதிகளைப் பயன்படுத்தும், நிரல்களை எழுத நீங்கள்
          இழுத்து விடலாம். ஹூட்டின் கீழ், நீங்கள் ஜாவாஸ்கிரிப்ட் குறியீட்டை உருவாக்குகிறீர்கள்.
      5:
        text: நீங்கள் தொடங்குவதற்கு முன், உங்கள் பாத்திரத்தைத் தேர்ந்தெடுப்பீர்கள்.
          நான் அலெக்ஸைத் தேர்ந்தெடுக்கப் போகிறேன். திரையைச் சுற்றிச் செல்ல அவளுக்கு
          உதவும் நிரலுக்கான குறியீட்டை உருவாக்குவோம்.
      6:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்
          உங்கள் நிரல் இயங்கும் கேம்ஸ்பேஸ் உள்ளது. ஒவ்வொரு நிலைக்கான வழிமுறைகள் கீழே
          எழுதப்பட்டுள்ளன.
      7:
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டி மற்றும் இந்த தொகுதிகள் ஒவ்வொன்றும்
          அலெக்ஸின் செயல்களை இயக்கும் கட்டளையாகும்.
      8:
        text: வலதுபுறத்தில் உள்ள வெள்ளை இடம் வேலை இடம் என்று அழைக்கப்படுகிறது, இங்குதான்
          எங்கள் திட்டத்தை உருவாக்குவோம்.
      9:
        text: நகர்வை முன்னோக்கி இழுத்தால்(); உங்கள் பணியிடத்தைத் தடுக்கவும், பின்னர்
          ரன் என்பதைக் கிளிக் செய்யவும், என்ன நடக்கும்? அலெக்ஸ் கட்டத்தின் ஒரு இடத்தை
          முன்னோக்கி நகர்த்துகிறார்.
      10:
        text: அவள் ஒரு இடத்தை முன்னோக்கி நகர்த்திய பிறகு நாம் ஏதாவது செய்ய விரும்பினால்
          என்ன செய்வது? எங்கள் நிரலில் மற்றொரு தொகுதியைச் சேர்க்கலாம். நான் டர்ன்
          ரைட்டை () தேர்வு செய்யப் போகிறேன்; தடு மற்றும் நான் அதை எனது மூவ்ஃபார்வர்ட்();
          இந்த ஆரஞ்சு கோடு தோன்றும் வரை தடுக்கவும். பின்னர் நான் அதை கைவிடுவேன், இரண்டு
          தொகுதிகளும் ஒன்றாக ஒடிவிடும். மீண்டும் ரன் அழுத்தினால், நமது பணியிடத்தில்
          மேலிருந்து கீழாக அடுக்கப்பட்டிருக்கும் கட்டளைகளை அலெக்ஸ் செயல்படுத்துவார்.
      11:
        text: நீங்கள் எப்போதாவது ஒரு தடுப்பை நீக்க விரும்பினால், அதை அடுக்கிலிருந்து
          மீண்டும் கருவிப்பெட்டிக்கு இழுக்கவும்.
      12:
        text: 'உங்கள் மாற்றங்களைச் செயல்தவிர்க்கவும், நிலை எவ்வாறு தொடங்கியது என்பதைத்
          திரும்பப் பெறவும், பணியிடத்தின் மேல் வலது மூலையில் உள்ள ஸ்டார்ட் ஓவர் பொத்தானைப்
          பயன்படுத்தவும். இன்னும் ஒரு விஷயம்: டர்ன் பிளாக்குகளில் சிறிய முக்கோணத்தைப்
          பார்க்கிறீர்களா? இந்த முக்கோணங்களை எப்போது பார்த்தாலும், வேறு விருப்பத்தை
          நீங்கள் தேர்வு செய்யலாம் என்று அர்த்தம். குறியீட்டை ஆரம்பிக்கலாம்!'
    mc_repeat:
      1:
        text: நான் லிடியா வின்டர்ஸ், மொஜாங்கின் பிராண்ட் டைரக்டர், நாங்கள் Minecraft
          என்ற சிறிய கேமை உருவாக்கினோம்.
      2:
        text: Minecraft இல் எனக்கு மிகவும் பிடித்தமான விஷயம் ஆராய்வது. நான் குகைகளில்
          சாகசம் செய்வதையும், நான் கண்டுபிடிக்கக்கூடியவற்றைப் பார்ப்பதையும் விரும்புகிறேன்.
          ஒரு ப்ரோக்ராமர் அல்லாத ஒருவனாக, Minecraft பாடத்தைப் படித்து, சில குறியீட்டு
          முறைகளை நானே கற்றுக் கொள்வதில் நான் மிகவும் மகிழ்ச்சியடைகிறேன்.
      3:
        text: கடைசி நிலைக்கு நிறைய மூவ்ஃபார்வர்ட் (); தொகுதிகள். மூவ்ஃபார்வர்ட்();
          நான்கு அல்லது ஐந்து முறை கட்டளையிடவும். எங்களுக்கு அதிர்ஷ்டவசமாக, கணினிகள்
          மீண்டும் மீண்டும் லூப்களுடன் கட்டளைகளை மீண்டும் செய்வதில் மிகவும் நல்லது.
      4:
        text: Minecraft ஐ உருவாக்கும்போது, ​​புதிய உலகத்தை உருவாக்குவதற்கான அனைத்து
          ஆரம்ப பொருட்களையும் வைக்க மீண்டும் சுழற்சிகளைப் பயன்படுத்துகிறோம். அது ஆயிரக்கணக்கான
          மற்றும் ஆயிரக்கணக்கான தொகுதிகள். நாங்கள் சிறிய வழிகளில் சுழல்களைப் பயன்படுத்துகிறோம்,
          உதாரணமாக அலெக்ஸின் கால்களை அவள் நடக்கும்போது முன்னும் பின்னுமாக நகர்த்த
          வேண்டும். மீண்டும் சுழல்கள் நிரலாக்கத்தின் ஒரு சக்திவாய்ந்த பகுதியாகும்.
      5:
        text: இரவு வருகிறது, எனவே அடுத்த இரண்டு நிலைகளில், நாங்கள் பாதுகாப்பாக இருக்க
          ஒரு வீட்டைக் கட்டப் போகிறோம். இதை மிக எளிதாக செய்ய ரிப்பீட் பிளாக்கைப் பயன்படுத்தப்
          போகிறோம்.
      6:
        text: நம் வீட்டின் சுவரைக் கட்ட, அலெக்ஸை முன்னோக்கி நகர்த்தச் சொல்லலாம்();
          மற்றும் பலகைகளை நான்கு முறை வைக்கவும் அல்லது முன்னோக்கி நகர்த்தச் சொல்லலாம்();
          மற்றும் ஒரு பலகையை வைக்கவும், பின்னர் இந்த கட்டளையை எடுத்து மீண்டும் மீண்டும்
          பிளாக் பயன்படுத்தவும். இப்போது ரிப்பீட் பிளாக்கில் கிளிக் செய்து, அவள் எத்தனை
          முறை இந்தச் செயலைச் செய்ய வேண்டும் என்று அவளிடம் கூறுவோம். இப்போது இரவு
          விழுவதற்குள் நம் வீட்டைக் கட்டுவோம்! மகிழுங்கள்.
    mc_if_statements:
      1:
        text: இப்போது if statements பற்றி அறிந்து கொள்ளப் போகிறோம். அறிக்கைகள் நிரலாக்க
          கற்றலின் ஒரு அடிப்படை பகுதியாக இருந்தால். அவை கணினி முடிவுகளை எடுக்க உதவுகின்றன.
      2:
        text: எனது தொலைபேசி உட்பட அனைத்து கணினிகளும் if அறிக்கைகளைப் பயன்படுத்துகின்றன.
          எடுத்துக்காட்டாக, நான் எனது மொபைலைத் திறக்கும்போது, கடவுச்சொல்லைச் சரியாக
          உள்ளிட்டால், மொபைலைத் திறக்கும் சில குறியீட்டை அது இயக்குகிறது. இல்லையெனில்,
          அது ஒரு பிழை செய்தியைக் காட்டுகிறது.
      3:
        text: ஸ்டீவ் மற்றும் ஆலிஸ் உலகில் அவர்கள் பார்ப்பதற்கு எதிர்வினையாற்ற உங்கள்
          குறியீட்டில் உள்ள அறிக்கைகளை நீங்கள் பயன்படுத்தலாம். உதாரணமாக, அவர்களுக்கு
          முன்னால் ஒரு பாறை இருந்தால், அவர்கள் இடதுபுறம் திரும்பலாம். அல்லது அவர்கள்
          ஒரு மரத்தில் ஓடினால் வலதுபுறம் திரும்பவும்.
      4:
        text: இந்த விஷயத்தில், நாங்கள் எரிமலைக்குழம்பில் விழ விரும்பவில்லை. எரிமலைக்குழம்புக்கு
          திட்டமிடுவது எளிது. அதை நாம் திரையில் பார்க்கலாம். ஆனால் கல்லின் கீழ் நம்மால்
          முடியாத எரிமலைக்குழம்பு பற்றி என்ன?
      5:
        text: கல்லை வெட்டிய பிறகு, அந்த இடத்தில் எரிமலைக்குழம்பு இருக்கிறதா என்பதைச்
          சரிபார்க்க வேண்டும். அங்கே எரிமலைக்குழம்பு இருந்தால், நாம் முன்னேறுவதற்கு
          முன், நம் பாத்திரத்தின் முன் ஒரு கல்லை வைக்க விரும்புகிறோம். அதன் மூலம்
          நாம் பாதுகாப்பாக செல்ல முடியும். மேலும் சுரங்கத்திற்கான நேரம்! உங்கள் அடியைப்
          பார்க்க if அறிக்கையைப் பயன்படுத்த மறக்காதீர்கள்.
    mc_congrats_share:
      1:
        text: வாழ்த்துகள்! கணினி அறிவியலின் அடிப்படை கட்டுமானத் தொகுதிகளை நீங்கள்
          கற்றுக்கொண்டீர்கள்.
      2:
        text: இப்போது நீங்கள் உங்கள் சொந்த படைப்பை உருவாக்க இந்த தொகுதிகளைப் பயன்படுத்தலாம்.
          மேலும் அறிவுறுத்தல்கள் எதுவும் இல்லை மற்றும் தீர்க்க புதிர்களும் இல்லை.
          நீங்கள் விரும்பும் எதையும் உருவாக்கலாம். நீங்கள் தேர்வு செய்ய வேண்டும்.
      3:
        text: "[மாணவர்கள் பேசுகிறார்கள்] இது நிஜமாகப் போகிறது. வெட்டு. நான் தீப்பந்தங்களிலிருந்து
          எல் ஐ உருவாக்கினேன். நான் பிர்ச் பலகைகளிலிருந்து A ஐ உருவாக்கினேன். அது
          வேலை செய்தது, வேலை செய்தது. கம்பளியால் வீடு கட்டினோம்!"
      4:
        text: நீங்கள் உருவாக்கி முடித்ததும், உங்கள் நண்பர்களுடன் பகிர்ந்து கொள்வதற்கான
          இணைப்பைப் பெற, பகிர்வைத் தேர்வுசெய்யவும். மகிழுங்கள்!
    mc_congrats_no_share:
      1:
        text: வாழ்த்துகள்! கணினி அறிவியலின் அடிப்படை கட்டுமானத் தொகுதிகளை நீங்கள்
          கற்றுக்கொண்டீர்கள்.
      2:
        text: இப்போது நீங்கள் உங்கள் சொந்த படைப்பை உருவாக்க இந்த தொகுதிகளைப் பயன்படுத்தலாம்.
          மேலும் அறிவுறுத்தல்கள் எதுவும் இல்லை மற்றும் தீர்க்க புதிர்களும் இல்லை.
          நீங்கள் விரும்பும் எதையும் உருவாக்கலாம். நீங்கள் தேர்வு செய்ய வேண்டும்.
      3:
        text: "[மாணவர்கள் பேசுகிறார்கள்] இது நிஜமாகப் போகிறது. வெட்டு. நான் தீப்பந்தங்களிலிருந்து
          எல் ஐ உருவாக்கினேன். நான் பிர்ச் பலகைகளிலிருந்து A ஐ உருவாக்கினேன். அது
          வேலை செய்தது, வேலை செய்தது. கம்பளியால் வீடு கட்டினோம்!"
      4:
        text: இப்போது நீங்கள் எதை வேண்டுமானாலும் உருவாக்கலாம். மகிழுங்கள்!
    gumball_intro:
      1:
        text: நீங்கள் உங்கள் சொந்த விளையாட்டை உருவாக்க விரும்பினால், அது மிகவும் எளிதானது.
          உங்களுக்கு தேவையானது சில அடிப்படை நிரலாக்கங்கள் மற்றும் நீங்கள் உருவாக்கிய
          விளையாட்டை விளையாட ஆரம்பிக்கலாம்.
      2:
        text: உங்களுக்கு பிடித்த வீடியோ கேம் உள்ளதா? சரி, ப்லே லேபைப் பயன்படுத்தி
          கேம்களை உருவாக்குவதற்கு ஒரு படி எடுக்கப் போகிறோம். நல்ல விளையாட்டுகளுக்கு
          ஒரு கதை உண்டு, ஒவ்வொரு கதைக்கும் நடிகர்கள் உள்ளனர். நடிகர்கள் ஒருவருக்கொருவர்
          பேசுவது, நகர்த்துவது மற்றும் பழகுவது போன்ற விஷயங்களைச் செய்கிறார்கள். விளையாட்டின்
          விதிகளின் அடிப்படையில் புள்ளிகளைப் பெறலாம். டிஸ்னியின் அன்னா, எல்சா, ஹிரோ,
          பேமேக்ஸ் மற்றும் ராபன்செல் போன்ற கதாபாத்திரங்கள் மூலம் இவை அனைத்தையும் ஒவ்வொன்றாக
          எப்படி செய்வது என்று இன்று கற்றுக்கொள்வோம். புதிதாக ஒரு கேமை உருவாக்குவோம்,
          அதை ஃபோனில் பகிரலாம் மற்றும் விளையாடலாம்.
      3:
        text: இன்று, வேடிக்கையான நடிகர்களைக் கொண்டு இவை அனைத்தையும் ஒவ்வொன்றாகச் செய்வது
          எப்படி என்பதைக் கற்றுக்கொள்வோம், பின்னர் புதிதாக ஒரு கேமை உருவாக்கலாம்,
          அதை ஃபோனில் பகிர்ந்தும் விளையாடலாம்.
      4:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்
          உங்கள் நிரல் இயங்கும் கேம்ஸ்பேஸ் உள்ளது. ஒவ்வொரு நிலைக்கான வழிமுறைகள் கீழே
          எழுதப்பட்டுள்ளன.
      5:
        text: இந்த நடுத்தர பகுதி கருவி பெட்டி மற்றும் இந்த தொகுதிகள் ஒவ்வொன்றும் குறியீட்டின்
          ஒரு பகுதி.
      6:
        text: வலதுபுறத்தில் உள்ள வெள்ளை இடம் வேலை இடம் என்று அழைக்கப்படுகிறது, இங்குதான்
          எங்கள் திட்டத்தை உருவாக்குவோம்.
      7:
        text: தொடங்குவதற்கு, உங்கள் தொகுதிகளை ஆரஞ்சு நிறத்துடன் இணைக்க வேண்டும். நீங்கள்
          மஞ்சள் கோட்டைப் பார்க்கும் வரை இழுப்பதன் மூலம் பல தொகுதிகளை ஒன்றாக இணைக்கலாம்,
          பின்னர் அவை ஒன்றாக ஒடிவிடும்.
      8:
        text: இந்த முதல் புதிரில், "சொல்" பிளாக்கை ரன் பிளாக்குடன் இணைத்து, உங்கள்
          செய்தியைத் தட்டச்சு செய்வதன் மூலம் நடிகர்களை ஏதாவது சொல்ல வைப்போம். உங்கள்
          தொகுதிகள் கிடைத்தவுடன், நீங்கள் என்ன நிரல் செய்தீர்கள் என்பதைக் காண ரன்
          பொத்தானை அழுத்தவும்.
      9:
        text: தொடங்குங்கள், முடிவில் நீங்கள் அனைத்து வகையான வீரர்களுடன் உங்கள் சொந்த
          விளையாட்டை உருவாக்க முடியும், அவை ஊடாடலாம், புள்ளிகளைப் பெறலாம், பொருட்களை
          வீசலாம் மற்றும் ஒருவருக்கொருவர் மறைந்துவிடும். எல்லாம் உன் பொருட்டு!
    gumball_events:
      1:
        text: எல்லா கேம் புரோகிராமர்களும் தினமும் பயன்படுத்தும் ஒன்றைப் பற்றி இப்போது
          தெரிந்துகொள்ளப் போகிறோம். அவை நிகழ்வுகள் என்று அழைக்கப்படுகின்றன. ஒரு நிகழ்வு
          உங்கள் நிரலுக்கு ஏதாவது நடக்கும் போது அதைக் கேட்கச் சொல்கிறது, பின்னர் அது
          நடக்கும் போது, ​​விளையாட்டு ஒரு செயலைச் செய்கிறது.
      2:
        text: நிகழ்வுகளின் சில எடுத்துக்காட்டுகள் மவுஸ் கிளிக் அல்லது மேல் அல்லது
          கீழ் அம்புக்குறி விசை அல்லது திரையில் தட்டுவது போன்றவை.
      3:
        text: இங்கே, பிளேயர் அதைக் கிளிக் செய்யும் போது நடிகரை ஏதாவது சொல்ல வைக்கப்
          போகிறோம். க்ளிக் செய்த போது பிளாக்கைப் பயன்படுத்துவோம், அதனுடன் "சே" பிளாக்கை
          இணைப்போம். பிளேயர் கிளிக் செய்யும் போது, ​​இந்தத் தொகுதியுடன் இணைக்கப்பட்ட
          அனைத்து தொகுதிகளும் நிகழ்த்தப்படும்.
      4:
        text: அம்பு தொகுதிகள் போது உள்ளன. நகர்த்தும் தொகுதிகளை அவற்றுடன் இணைத்தால்,
          அம்புக்குறி விசைகள் மூலம் உங்கள் நடிகர்களை மேலே, கீழ், இடது, வலது என நகர்த்த
          ஆரம்பிக்கலாம். கொஞ்சம் கொஞ்சமாக உங்கள் விளையாட்டு மேலும் ஊடாடுகிறது.
    gumball_repeat:
      1:
        text: நீங்கள் எதையாவது என்றென்றும் மீண்டும் மீண்டும் செய்ய வேண்டுமா என்று
          உங்களால் கற்பனை செய்ய முடியுமா? கணினிகள் விஷயங்களைத் திரும்பத் திரும்பச்
          செய்வதில் சிறந்தவை என்பதால் நீங்கள் ஒருபோதும் செய்ய வேண்டியதில்லை என்று
          நம்புகிறோம்.
      2:
        text: இது எப்பொழுதும் திரும்பத் திரும்ப வரும் தொகுதி. இந்தத் தொகுதிக்குள்
          எதுவும் விளையாட்டில் என்றென்றும் நடக்கும். பிளேயர் எதுவும் செய்யாமல் ஒரு
          நடிகர் மீண்டும் மீண்டும் ஏதாவது செய்ய வேண்டும் என நாம் விரும்பினால், அந்தத்
          தொகுதிகளை ரிபீட் ஃபார் எவர் பிளாக்கிற்குள் வைப்போம்.
      3:
        text: இந்த அடுத்த புதிரில், நடிகர் தொடர்ந்து ஒரு வேலையைச் செய்ய உதவுவதே எங்கள்
          குறிக்கோள். மீண்டும் மீண்டும் கட்டளைகள் எவ்வாறு செயல்படுகின்றன என்பதைக்
          கற்றுக்கொள்வது, உங்கள் சொந்த விளையாட்டை உருவாக்கும்போது ஒரு டன் நேரத்தை
          மிச்சப்படுத்தும்.
    iceage_intro:
      1:
        text: நீங்கள் உங்கள் சொந்த விளையாட்டை உருவாக்க விரும்பினால், அது மிகவும் எளிதானது.
          உங்களுக்கு தேவையானது சில அடிப்படை நிரலாக்கங்கள் மற்றும் நீங்கள் உருவாக்கிய
          விளையாட்டை விளையாட ஆரம்பிக்கலாம்.
      2:
        text: உங்களுக்கு பிடித்த வீடியோ கேம் உள்ளதா? சரி, ப்லே லேபைப் பயன்படுத்தி
          கேம்களை உருவாக்குவதற்கு ஒரு படி எடுக்கப் போகிறோம். நல்ல விளையாட்டுகளுக்கு
          ஒரு கதை உண்டு, ஒவ்வொரு கதைக்கும் நடிகர்கள் உள்ளனர். நடிகர்கள் ஒருவருக்கொருவர்
          பேசுவது, நகர்த்துவது மற்றும் பழகுவது போன்ற விஷயங்களைச் செய்கிறார்கள். விளையாட்டின்
          விதிகளின் அடிப்படையில் புள்ளிகளைப் பெறலாம். டிஸ்னியின் அன்னா, எல்சா, ஹிரோ,
          பேமேக்ஸ் மற்றும் ராபன்செல் போன்ற கதாபாத்திரங்கள் மூலம் இவை அனைத்தையும் ஒவ்வொன்றாக
          எப்படி செய்வது என்று இன்று கற்றுக்கொள்வோம். புதிதாக ஒரு கேமை உருவாக்குவோம்,
          அதை ஃபோனில் பகிரலாம் மற்றும் விளையாடலாம்.
      3:
        text: இன்று, வேடிக்கையான நடிகர்களைக் கொண்டு இவை அனைத்தையும் ஒவ்வொன்றாகச் செய்வது
          எப்படி என்பதைக் கற்றுக்கொள்வோம், பின்னர் புதிதாக ஒரு கேமை உருவாக்கலாம்,
          அதை ஃபோனில் பகிர்ந்தும் விளையாடலாம்.
      4:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில்
          உங்கள் நிரல் இயங்கும் கேம்ஸ்பேஸ் உள்ளது. ஒவ்வொரு நிலைக்கான வழிமுறைகள் கீழே
          எழுதப்பட்டுள்ளன.
      5:
        text: இந்த நடுத்தர பகுதி கருவி பெட்டி மற்றும் இந்த தொகுதிகள் ஒவ்வொன்றும் குறியீட்டின்
          ஒரு பகுதி.
      6:
        text: வலதுபுறத்தில் உள்ள வெள்ளை இடம் வேலை இடம் என்று அழைக்கப்படுகிறது, இங்குதான்
          எங்கள் திட்டத்தை உருவாக்குவோம்.
      7:
        text: தொடங்குவதற்கு, உங்கள் தொகுதிகளை ஆரஞ்சு நிறத்துடன் இணைக்க வேண்டும். நீங்கள்
          மஞ்சள் கோட்டைப் பார்க்கும் வரை இழுப்பதன் மூலம் பல தொகுதிகளை ஒன்றாக இணைக்கலாம்,
          பின்னர் அவை ஒன்றாக ஒடிவிடும்.
      8:
        text: இந்த முதல் புதிரில், "சொல்" பிளாக்கை ரன் பிளாக்குடன் இணைத்து, உங்கள்
          செய்தியைத் தட்டச்சு செய்வதன் மூலம் நடிகர்களை ஏதாவது சொல்ல வைப்போம். உங்கள்
          தொகுதிகள் கிடைத்தவுடன், நீங்கள் என்ன நிரல் செய்தீர்கள் என்பதைக் காண ரன்
          பொத்தானை அழுத்தவும்.
      9:
        text: தொடங்குங்கள், முடிவில் நீங்கள் அனைத்து வகையான வீரர்களுடன் உங்கள் சொந்த
          விளையாட்டை உருவாக்க முடியும், அவை ஊடாடலாம், புள்ளிகளைப் பெறலாம், பொருட்களை
          வீசலாம் மற்றும் ஒருவருக்கொருவர் மறைந்துவிடும். எல்லாம் உன் பொருட்டு!
    iceage_events:
      1:
        text: எல்லா கேம் புரோகிராமர்களும் தினமும் பயன்படுத்தும் ஒன்றைப் பற்றி இப்போது
          தெரிந்துகொள்ளப் போகிறோம். அவை நிகழ்வுகள் என்று அழைக்கப்படுகின்றன. ஒரு நிகழ்வு
          உங்கள் நிரலுக்கு ஏதாவது நடக்கும் போது அதைக் கேட்கச் சொல்கிறது, பின்னர் அது
          நடக்கும் போது, ​​விளையாட்டு ஒரு செயலைச் செய்கிறது.
      2:
        text: நிகழ்வுகளின் சில எடுத்துக்காட்டுகள் மவுஸ் கிளிக் அல்லது மேல் அல்லது
          கீழ் அம்புக்குறி விசை அல்லது திரையில் தட்டுவது போன்றவை.
      3:
        text: இங்கே, பிளேயர் அதைக் கிளிக் செய்யும் போது நடிகரை ஏதாவது சொல்ல வைக்கப்
          போகிறோம். க்ளிக் செய்த போது பிளாக்கைப் பயன்படுத்துவோம், அதனுடன் "சே" பிளாக்கை
          இணைப்போம். பிளேயர் கிளிக் செய்யும் போது, ​​இந்தத் தொகுதியுடன் இணைக்கப்பட்ட
          அனைத்து தொகுதிகளும் நிகழ்த்தப்படும்.
      4:
        text: அம்பு தொகுதிகள் போது உள்ளன. நகர்த்தும் தொகுதிகளை அவற்றுடன் இணைத்தால்,
          அம்புக்குறி விசைகள் மூலம் உங்கள் நடிகர்களை மேலே, கீழ், இடது, வலது என நகர்த்த
          ஆரம்பிக்கலாம். கொஞ்சம் கொஞ்சமாக உங்கள் விளையாட்டு மேலும் ஊடாடுகிறது.
    iceage_repeat:
      1:
        text: நீங்கள் எதையாவது என்றென்றும் மீண்டும் மீண்டும் செய்ய வேண்டுமா என்று
          உங்களால் கற்பனை செய்ய முடியுமா? கணினிகள் விஷயங்களைத் திரும்பத் திரும்பச்
          செய்வதில் சிறந்தவை என்பதால் நீங்கள் ஒருபோதும் செய்ய வேண்டியதில்லை என்று
          நம்புகிறோம்.
      2:
        text: இது எப்பொழுதும் திரும்பத் திரும்ப வரும் தொகுதி. இந்தத் தொகுதிக்குள்
          எதுவும் விளையாட்டில் என்றென்றும் நடக்கும். பிளேயர் எதுவும் செய்யாமல் ஒரு
          நடிகர் மீண்டும் மீண்டும் ஏதாவது செய்ய வேண்டும் என நாம் விரும்பினால், அந்தத்
          தொகுதிகளை ரிபீட் ஃபார் எவர் பிளாக்கிற்குள் வைப்போம்.
      3:
        text: இந்த அடுத்த புதிரில், நடிகர் தொடர்ந்து ஒரு வேலையைச் செய்ய உதவுவதே எங்கள்
          குறிக்கோள். மீண்டும் மீண்டும் கட்டளைகள் எவ்வாறு செயல்படுகின்றன என்பதைக்
          கற்றுக்கொள்வது, உங்கள் சொந்த விளையாட்டை உருவாக்கும்போது ஒரு டன் நேரத்தை
          மிச்சப்படுத்தும்.
    mc_2016_intro:
      1:
        text: வணக்கம், என் பெயர் ஜென்ஸ் மற்றும் நான் Minecraft இன் முன்னணி படைப்பாற்றல்
          வடிவமைப்பாளர். அடுத்த ஒரு மணி நேரத்தில், நீங்கள் சொந்தமாக Minecraft விளையாட்டை
          உருவாக்குவீர்கள். இது Minecraft போல் தெரிகிறது ஆனால் உலகம் நின்று விட்டது.
          செம்மறி ஆடுகள் நகரவில்லை, கோழிகள் முட்டையிடவில்லை, ஜோம்பிஸ் அசையாமல் நிற்கின்றன.
          Minecraft உலகம் வேலை செய்ய குறியீட்டை நீங்கள் சேர்க்கவும்.
      2:
        text: 'எனது பெயர் மெலிசா மற்றும் நான் Minecraft இல் ஒரு பயனர் ஆராய்ச்சியாளர்.
          மக்கள் எவ்வாறு சிந்திக்கிறார்கள் மற்றும் தொழில்நுட்பத்துடன் தொடர்பு கொள்கிறார்கள்
          என்பதில் நான் மிகவும் ஆர்வமாக உள்ளேன், எனவே கணினி பொறியியலை உளவியலுடன் ஒன்றிணைக்க
          இந்த வேலை எனக்கு சரியான வேலை: மக்கள் எப்படி நினைக்கிறார்கள் மற்றும் நடந்துகொள்கிறார்கள்.'
      3:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாகப் பிரிக்கப்பட்டிருப்பதைக் காண்பீர்கள்.
          1) இடதுபுறத்தில் Minecraft விளையாட்டு உள்ளது. இப்போது உலகம் உறைந்து கிடக்கிறது,
          ஆனால் குறியீட்டைக் கொண்டு அதை சரிசெய்யப் போகிறோம்.
      4:
        text: 2) இந்த நடுத்தர பகுதி கருவிப்பெட்டி. இந்த தொகுதிகள் ஒவ்வொன்றும் கோழிகள்,
          செம்மறி ஆடுகள் மற்றும் பிற Minecraft உயிரினங்கள் புரிந்துகொள்ளக்கூடிய கட்டளையாகும்.
      5:
        text: 3) வலதுபுறத்தில் உள்ள இடம் பணியிடம் என்று அழைக்கப்படுகிறது, இங்குதான்
          எங்கள் திட்டத்தை உருவாக்குவோம்.
      6:
        text: 3) வலதுபுறத்தில் உள்ள இடம் பணியிடம் என்றும், இங்குதான் எங்கள் திட்டத்தை
          உருவாக்குவோம்.
      7:
        text: தொடங்குவதற்கு, நாங்கள் ஒரு கோழியை நிரல் செய்யப் போகிறோம். "முன்னோக்கி
          நகர்த்து" கட்டளையை பணியிடத்திற்கு இழுப்போம். நான் "ரன்" அடிக்கும்போது கோழி
          ஒரு படி மேலே செல்கிறது. மேலும் செல்ல, ஹைலைட் தோன்றும் வரை முதல் "முன்னோக்கி
          நகர்த்து" தொகுதியின் கீழ் மற்றொரு "முன்னோக்கி நகர்த்து" தொகுதியை இழுப்பேன்.
          பின்னர் நான் அதை கைவிடுவேன் மற்றும் இரண்டு தொகுதிகள் ஒன்றாக ஒடி. நான் மீண்டும்
          "ரன்" அடித்தால், கோழி இரண்டு படிகள் நடக்கும்.
      8:
        text: நீங்கள் எப்போதாவது ஒரு தொகுதியை நீக்க விரும்பினால், அதை அடுக்கிலிருந்து
          அகற்றி மீண்டும் கருவிப்பெட்டியில் இழுக்கவும்.
      9:
        text: '"ரன்" என்பதைத் தட்டிய பிறகு, விளையாட்டை மீட்டமைத்து மீண்டும் தொடங்க
          "மீட்டமை" பொத்தானை எப்போதும் அழுத்தலாம். இப்போது, ​​உங்கள் சொந்த Minecraft
          பதிப்பை உருவாக்குவது உங்கள் முறை. மகிழுங்கள்!'
    mc_2016_loops:
      1:
        text: வணக்கம், நான் லிசா. நான் Minecraft இல் மென்பொருள் உருவாக்குநராக உள்ளேன்,
          மேலும் விளையாட்டில் உள்ள சில விலங்குகள் மற்றும் எதிரிகளில் நான் வேலை செய்கிறேன்.
          நான் வேலை செய்த விலங்குகளில் ஒன்று ஓசிலாட். உங்கள் சொந்த பூனைக்கு அதை அடக்க
          ஒரு ஓசிலாட்டை ஒரு மீனுக்கு உணவளிக்கும் பகுதியில் நான் வேலை செய்தேன்.
      2:
        text: மனிதர்களாகிய நாம், அதையே திரும்பத் திரும்பச் செய்ய நேர்ந்தால் மிகவும்
          சலிப்படைந்து விடுகிறோம். ஆனால் கம்ப்யூட்டர்களைப் பற்றிய அருமையான விஷயம்
          என்னவென்றால், அவர்கள் அதையே மில்லியன் கணக்கான அல்லது பில்லியன் கணக்கான முறைகள்
          சலிப்பில்லாமல் செய்ய முடியும். இந்த மறுநிகழ்வு ஒரு லூப் என்று அழைக்கப்படுகிறது
          மற்றும் Minecraft இல் உள்ள ஒவ்வொரு உயிரினமும் சுழல்களைப் பயன்படுத்துகிறது.
      3:
        text: முன்னதாக, திரை முழுவதும் செல்ல ஒரு கோழி கிடைத்தது ஆனால் அவள் நிறுத்தினாள்.
          Minecraft இல், கோழிகள் என்றென்றும் எப்போதும் சுற்றித் திரிகின்றன. நம் கோழிகளை
          எப்போதும் சுற்றிக்கொண்டே இருக்க எங்கள் கருவிப்பெட்டியில் இருந்து "என்றென்றும்
          செய்" வளையத்தைப் பயன்படுத்துவோம். உங்கள் சொந்த Minecraft பதிப்பை உருவாக்கும்போது
          லூப்களின் சக்தி உங்கள் நேரத்தை மிச்சப்படுத்தும் மற்றும் அனைத்து வகையான நேர்த்தியான
          விருப்பங்களையும் திறக்கும்.
    mc_2016_events:
      1:
        text: இந்த அடுத்த கட்டத்தில், நீங்கள் ஸ்டீவ் அல்லது அலெக்ஸ் ஆக இருக்க முடியும்.
          உங்கள் விசைப்பலகையில் மேல், கீழ், இடது மற்றும் வலது பக்கம் செல்ல அம்புக்குறி
          பொத்தான்களை அழுத்தவும். இப்போது நீங்கள் எங்கு வேண்டுமானாலும் ஒரு மட்டத்தை
          சுற்றி செல்லலாம். ஒரு உயிரினத்தைப் பயன்படுத்த, அதை நோக்கி நடந்து, அதை எதிர்கொள்ளத்
          திரும்பி, ஸ்பேஸ்பாரை அழுத்தவும்.
      2:
        text: நீங்கள் தொடுதிரையைப் பயன்படுத்தினால், மேலே, கீழ், இடது மற்றும் வலதுபுறமாக
          ஸ்வைப் செய்யவும். உங்களுக்கு முன்னால் உள்ள உருப்படியைப் பயன்படுத்த கேமைத்
          தட்டவும்.
      3:
        text: ஆனால் அதைப் பயன்படுத்தும்போது என்ன நடக்கும்? Minecraft இல், செம்மறி
          ஆடுகள் கம்பளியைக் கத்தரிக்கும்போது, ​​​​மாடுகள் அவற்றை அடித்தால் ஓடிவிடும்,
          மேலும் நீங்கள் அவற்றை நெருங்கும் போது கொடிகள் வெடிக்கின்றன. இந்த எதிர்வினைகள்
          நிகழ்வுகள் என்று அழைக்கப்படும் ஏதாவது நன்றி. நிகழ்வுகள் உங்கள் நிரலைக் கேட்க
          அல்லது ஏதாவது நடக்கும் வரை காத்திருக்கச் சொல்கிறது. அது செய்யும் போது, ​​ஒரு
          செயலைச் செய்யவும்.
      4:
        text: இதுவரை, நீங்கள் ஒரு நிகழ்வைப் பயன்படுத்தியுள்ளீர்கள். உங்கள் உயிரினம்
          உருவாக்கப்படும் போது அல்லது கேம் தொடங்கும் போது "உருவாக்கப்பட்ட போது" ஸ்லாட்டில்
          நீங்கள் வைத்த குறியீடு இயங்கும். அடுத்த சில நிலைகளில், நீங்கள் உயிரினத்தைத்
          தொடும்போது இயங்கும் "தொடும்போது" அல்லது உயிரினத்தைப் பயன்படுத்தும் போது
          "பயன்படுத்தும்போது" போன்ற நிகழ்வுகளுக்கான புதிய ஸ்லாட்டுகளைப் பெறுவீர்கள்.
          அல்லது, சூரியன் உதிக்கும் போது உங்கள் ஜாம்பி மறைந்துவிட விரும்பினால், அதை
          "எப்போது நாள்" ஸ்லாட்டில் வைக்கவும்
    mc_2016_spawn:
      1:
        text: கேம்களில், ஸ்பான் என்பது கிரியேட் என்று பொருள். இந்த நிலையில், சூரியன்
          மறையும் போது ஜோம்பிஸை உருவாக்குவோம். இதைச் செய்ய, "எப்போது இரவு" தொகுதியைப்
          பயன்படுத்துவோம்.
      2:
        text: ஜோம்பிஸ் இரவில் முட்டையிட வேண்டும் என்பதால், "when night" பிளாக்கின்
          கீழ் "spawn zombie" தொகுதியைச் சேர்ப்போம். அவை உருவானவுடன், ஒவ்வொரு ஜாம்பியும்
          நீங்கள் அவர்களின் "எப்போது முட்டையிடப்பட்ட" நிகழ்வு ஸ்லாட்டில் வைத்துள்ள
          குறியீட்டை இயக்கும். ஜாம்பிகளை உருவாக்கி மகிழுங்கள்!
    mc_2016_congrats:
      1:
        text: வாழ்த்துகள்! Minecraft உலகத்தை உயிர்ப்பிக்க கணினி அறிவியல் கட்டளைகளைப்
          பயன்படுத்த நீங்கள் கற்றுக்கொண்டீர்கள். நீங்கள் இப்போது டெவலப்பர். நீங்கள்
          அனைத்து கட்டளைகளையும் அனைத்து உயிரினங்களையும் திறந்துவிட்டீர்கள். என்ன நடக்கிறது
          என்பதை நீங்கள் தேர்வு செய்கிறீர்கள்.
      2:
        text: உங்கள் கேமை நீங்கள் செய்து முடித்ததும், உங்கள் நண்பர்களுடன் பகிர்ந்து
          கொள்ளக்கூடிய இணைப்பைப் பெற அல்லது உங்கள் ஃபோனில் உங்கள் கேமை விளையாட, பகிர்வைத்
          தேர்வுசெய்யவும். மகிழுங்கள்! உங்கள் Minecraft பதிப்பை இயக்க ஆவலுடன் காத்திருக்கிறேன்.
    applab_intro_welcome:
      1:
        text: என் பெயர் மெய்லானி. நான் code.org இல் பயிற்சியாளராக இருக்கிறேன், மேலும்
          நானும் ஒரு கணினி அறிவியல் மாணவன். நான் கணினி அறிவியலை விரும்புகிறேன், ஏனெனில்
          அது மிகவும் ஆக்கபூர்வமானது. நான் பிரச்சனை தீர்பவராக இருக்க வேண்டும். எல்லாவற்றையும்
          நான் விரும்பியபடி செயல்பட வைக்கிறேன். ஆனால் நான் வடிவமைப்பாளராகவும் ஆவேன்.
          நான் ஒரு கலைஞனாக இருக்க வேண்டும் மற்றும் அதன் படைப்பு பக்கத்தில் அனைத்தையும்
          தேர்வு செய்கிறேன்.
      2:
        text: App Lab மூலம் உங்கள் சொந்த பயன்பாடுகளை உருவாக்குவது எளிது! நீங்கள் குறியீட்டிற்கு
          புதியவராக இருந்தாலும் அல்லது சில அனுபவம் உள்ளவராக இருந்தாலும் சரி. புதிய
          ஆப்ஸை உருவாக்குவதற்கும் அவற்றை உங்கள் நண்பர்களுடன் பகிர்ந்து கொள்வதற்கும்
          ஆப் லேப் ஒரு சிறந்த கருவியாகும்.
      3:
        text: இது ஒரு ஆப் லேப். இடது பக்கத்தில் உங்கள் பயன்பாடு உள்ளது. வலது பக்கத்தில்
          அதை இயக்கும் குறியீடு உள்ளது. கருவிப்பெட்டியிலிருந்து தொகுதிகளை இழுப்பதன்
          மூலம் உங்கள் நிரலை உருவாக்குகிறீர்கள். தொடங்குவதற்கு, உங்களிடம் 'setProperty'
          என்ற ஒரு தொகுதி மட்டுமே இருக்கும்.
      4:
        text: பொத்தான்கள், லேபிள்கள் அல்லது திரையைப் போலவே தொகுப்பு சொத்து தொகுதி
          உங்கள் திரையில் உள்ள உறுப்புகளின் தோற்றத்தை மாற்றுகிறது.முதலில் நீங்கள்
          எந்த உறுப்பை மாற்ற வேண்டும் என்பதை தீர்மானிக்க வேண்டும். உங்கள் பயன்பாட்டில்
          உள்ள ஒரு உறுப்பின் மீது நீங்கள் வட்டமிட்டால், பெயர் அல்லது ஐடியை இங்கே பார்க்கலாம்.
          பின்னர் முதல் கீழ்தோன்றும் இடத்திலிருந்து அந்த ஐடியைத் தேர்ந்தெடுக்கவும்.
      5:
        text: கூறுகள் அவற்றின் உரை நிறம், பின்னணி நிறம் அல்லது எழுத்துரு அளவு போன்ற
          நீங்கள் மாற்றக்கூடிய பல பண்புகளைக் கொண்டுள்ளன. நீங்கள் முழு பட்டியலையும்
          பார்க்கலாம் மற்றும் இரண்டாவது டிராப் டவுனில் எந்த சொத்தை மாற்ற விரும்புகிறீர்கள்
          என்பதைத் தேர்வுசெய்யலாம்.
      6:
        text: நீங்கள் பயன்படுத்த விரும்பும் மதிப்பை நீங்கள் பயன்படுத்த விரும்பும்
          மதிப்பை எழுதும் கடைசி கீழ்தோன்றும். தொகுதி உங்களுக்காக ஒரு பரிந்துரையை செய்யும்.
          ஆனால் நீங்கள் எப்போதும் வெவ்வேறு வண்ணங்கள் அல்லது எண்களை நீங்களே தட்டச்சு
          செய்யலாம்.
      7:
        text: 'நீங்கள் முடித்ததும், பிளாக் ஒரு வாக்கியத்தைப் போன்றது:''பொத்தான்1ன்
          பின்னணி நிறத்தை பச்சையாக அமைக்கவும்.'' குறியீட்டில் நீங்கள் உருவாக்கும்
          மாற்றங்களைக் காண ரன் அழுத்தவும். நீங்கள் மீட்டமைத்தால், உங்கள் பயன்பாட்டைப்
          பற்றிய பிற விஷயங்களை மாற்ற, அதிகமான தொகுதிகளை உரையைப் போல!இழுக்கலாம். '
      8:
        text: இந்த டுடோரியலுக்கு நாங்கள் பிளாக் பயன்முறையில் வேலை செய்வோம், ஆனால்
          ஆப் லேப் உரையில் வேலை செய்வதையும் ஆதரிக்கிறது.
      9:
        text: எந்த வகையிலும் நீங்கள் இணையத்தின் மொழியான ஜாவாஸ்கிரிப்டில் நிரலாக்குவீர்கள்.
          ஒவ்வொரு நிலைக்கும் ஒரு குறிக்கோள், வழிமுறைகள் மற்றும் நீங்கள் எதை உருவாக்க
          விரும்புகிறீர்களோ அதன் படம் உள்ளது.
      10:
        text: நீங்கள் எப்போதாவது மாட்டிக் கொண்டால், இந்தப் படத்தைக் கிளிக் செய்யவும்,
          நிலை எவ்வாறு முடிப்பது என்பதை இது காண்பிக்கும். ஆனால் முதலில் அதை நீங்களே
          செய்ய முடியுமா என்று பாருங்கள்.
      11:
        text: இந்த நிலைக்கான இலக்கை நீங்கள் முடித்தவுடன், செல்ல பினிஷ் என்பதைக் கிளிக்
          செய்யவும். அவ்வளவுதான்! அடுத்த நிலைக்குச் செல்ல ஆரஞ்சு நிற "தொடரவும்" பொத்தானை
          அழுத்தவும் மற்றும் ஆப் லேப் மூலம் உங்கள் சாகசத்தைத் தொடங்கவும்!
    applab_intro_events:
      1:
        text: பயன்பாடுகள் மிகவும் அருமையாக இருக்கின்றன, ஏனென்றால் இது உங்கள் சொந்தத்
          தொழிலைத் தொடங்குவது போன்றது, அதாவது, நீங்கள் எல்லாவற்றையும் அடித்தளத்திலிருந்து
          வடிவமைக்கலாம், எல்லாவற்றையும் நிர்வகிக்கலாம், மேலும் நீங்கள் குறியீட்டைக்
          கொண்டு உருவாக்கிய இந்தப் பணியின் உரிமையாளர் நீங்கள்தான்.
      2:
        text: இப்போது உங்கள் பயன்பாட்டின் தோற்றத்தை மாற்றலாம், நிகழ்வுகளுக்குப் பதிலளிப்பதன்
          மூலம் அதை ஊடாடச் செய்யலாம்! நிகழ்வுகள் என்பது ஒரு பொத்தானைக் கிளிக் செய்தல்,
          மெனு மூலம் ஸ்க்ரோலிங் செய்தல் அல்லது ஒரு படத்தின் மீது வட்டமிடுதல் போன்ற
          பயனர் செயல்களாகும். நான் இந்தப் பட்டனைக் கிளிக் செய்யும் போது ஒலி எழுப்புவது
          போன்ற நிகழ்வுகளுக்குப் பதிலளிப்பதற்கு ஊடாடும் பயன்பாடுகளுக்கு வழிகள் தேவை.
          ஆப் லேப்பில் இதைச் செய்ய, 'onEvent' என்ற புதிய பிளாக்கைப் பயன்படுத்த வேண்டும்.
      3:
        text: இந்த நிரல் திரையை நீல நிறமாக அமைக்கிறது. இந்தப் பொத்தானைக் கிளிக் செய்யும்
          போது திரை பச்சை நிறமாக மாற வேண்டும். முதலில் நான் ஒரு நிகழ்வு பிளாக்கில்
          இழுக்க வேண்டும். வட்டமிடுவதன் மூலம், பொத்தானின் ஐடி "பிக்பட்டன்" என்பதை
          நான் அறிவேன், எனவே முதல் கீழ்தோன்றும் இடத்தில் அதைத் தேர்ந்தெடுப்பேன்.
      4:
        text: அடுத்து நிகழ்வின் வகையைத் தேர்ந்தெடுப்பேன். நீங்கள் தேர்வுசெய்யக்கூடிய
          பல விருப்பங்கள் உள்ளன, ஆனால் இப்போது அதை வழக்கமான பழைய கிளிக்காக விட்டுவிடுகிறேன்.
      5:
        text: 'இறுதியாக, திரையின் பின்னணி நிறத்தை மாற்றும் நிகழ்வின் உள்ளே குறியீட்டைச்
          சேர்ப்பேன். இந்த பிளாக்கை நீங்கள் ஒரு வாக்கியத்தைப் போல படிக்கலாம்: "பொத்தானைக்
          கிளிக் செய்யும் நிகழ்வில் இந்தக் குறியீட்டை இயக்கவும்."'
      6:
        text: அதை சோதிப்போம். ஒரு நிகழ்வுக்கு வெளியே உள்ள பிளாக்ஸ் இன்னும் உடனே இயங்கும்,
          அதனால் திரை நீல நிறத்தில் இருக்கும்.
      7:
        text: நான் பெரிய பட்டனைக் கிளிக் செய்யும் போது எனது onEvent உள்ளே உள்ள குறியீடு
          இயங்குகிறது மற்றும் எனது திரை பச்சை நிறமாக மாறும்.
      8:
        text: நிகழ்விற்குப் பிறகு, திரையில் உள்ள உரை போன்ற பல விஷயங்களை மாற்ற விரும்பினால்,
          onEventக்கு கூடுதல் குறியீட்டைச் சேர்க்கவும்
      9:
        text: உங்கள் நிரல் அதிகமான நிகழ்வுகளுக்கு பதிலளிக்க, மேலும் onEvent தொகுதிகளைச்
          சேர்க்கவும். அவற்றை ஒருவருக்கொருவர் உள்ளே வைக்காமல் பார்த்துக் கொள்ளுங்கள்.
          இப்போது அதை நீங்களே முயற்சி செய்ய வேண்டிய நேரம் இது. மகிழுங்கள்!
    applab_intro_sounds:
      1:
        text: அடுத்து, உங்கள் பயன்பாட்டில் படங்கள் மற்றும் ஒலிகளைச் சேர்ப்பது பற்றி
          அறிந்து கொள்வீர்கள். ஒலி விருப்பங்களைப் பார்ப்பதன் மூலம் தொடங்குவோம்.
      2:
        text: கருவிப் பெட்டியில் "ப்ளேசவுண்ட்" என்ற புதிய தொகுதியைக் காணலாம். அதை
          பணியிடத்தில் இழுக்கவும். கீழ்தோன்றும் பொத்தானைக் கிளிக் செய்து "தேர்ந்தெடு"
          என்பதைக் கிளிக் செய்வதன் மூலம் ஒலியை இயக்கலாம்.
      3:
        text: இங்கிருந்து நீங்கள் உங்கள் கணினியிலிருந்து ஒரு ஒலி கோப்பைப் பதிவேற்றலாம்
          அல்லது ஒலி நூலகத்திலிருந்து ஒலியைத் தேடலாம். ஒலி நூலகத்தில் கருவிகள், பின்னணி
          இசை அல்லது விலங்குகள் போன்ற பல்வேறு பிரிவுகள் உள்ளன.
      4:
        text: நீங்கள் விரும்பும் ஒலியைப் பெற்றவுடன், "தேர்வு" என்பதைக் கிளிக் செய்யவும்.
          இந்தத் தொகுதி இயங்கும் போது, நீங்கள் தேர்ந்தெடுத்த ஒலியை அது இயக்கும்.
      5:
        text: உங்கள் உறுப்புகளில் படங்களைச் சேர்க்க, நீங்கள் setProperty தொகுதியைப்
          பயன்படுத்தலாம். இரண்டாவது கீழ்தோன்றும் படத்தில் உள்ள படத்தைத் தேர்ந்தெடுக்கவும்
      6:
        text: மூன்றாவது கீழ்தோன்றலில் இருந்து "தேர்வு" என்பதைத் தேர்ந்தெடுக்கவும்.
      7:
        text: இங்கிருந்து உங்கள் கணினியிலிருந்து ஒரு படத்தைப் பதிவேற்றலாம் அல்லது
          ஐகான் நூலகத்தில் உள்ள ஐகான்களின் பெரிய நூலகத்தைப் பார்க்கலாம்.
      8:
        text: குறியீடு பயன்முறையில், உங்கள் ஐகானின் நிறத்தை மாற்ற "setProperty" பிளாக்கைப்
          பயன்படுத்தலாம். உங்கள் ஐகான் எந்தப் படத்தைப் பயன்படுத்த வேண்டும் என்பதை
          நீங்கள் தேர்ந்தெடுத்ததும், அது எப்படி இருக்கிறது என்பதைப் பார்க்க "ரன்"
          என்பதைக் கிளிக் செய்யவும்.
      9:
        text: அவ்வளவுதான்! இப்போது உங்கள் பயன்பாடுகளை இன்னும் வேடிக்கையாகவும் சுறுசுறுப்பாகவும்
          மாற்ற படங்களையும் ஒலிகளையும் சேர்க்கலாம்.
    applab_intro_designmode:
      1:
        text: உங்கள் சொந்த பயன்பாடுகளை உருவாக்க, நீங்கள் புதிதாக திரைகள் மற்றும் கூறுகளை
          வடிவமைக்கத் தொடங்க வேண்டும். பயன்பாட்டு ஆய்வகம் வடிவமைப்பு பயன்முறையில்
          இதைச் செய்வதை எளிதாக்குகிறது.
      2:
        text: வடிவமைப்பு பயன்முறைக்குச் செல்ல, உங்கள் பயன்பாட்டின் மேல் உள்ள சுவிட்சைப்
          பயன்படுத்தவும்.
      3:
        text: புதிய கூறுகளை திரையில் இழுப்பதன் மூலம் அவற்றைச் சேர்க்கலாம். நீங்கள்
          அவற்றை வெவ்வேறு இடங்களுக்கு நகர்த்தலாம் மற்றும் கீழ் வலது மூலையில் இழுப்பதன்
          மூலம் அவற்றின் அளவை மாற்றலாம்.
      4:
        text: உறுப்புகளின் பண்புகளை மாற்ற, வலதுபுறத்தில் உள்ள கட்டுப்பாடுகளைப் பயன்படுத்தவும்.
          எடுத்துக்காட்டாக, இந்தப் பொத்தானின் உரை, நிறம் மற்றும் எழுத்துரு அளவை மாற்றுவது
          மிகவும் எளிதானது.
      5:
        text: உங்கள் திரையில் புதிய உறுப்பைச் சேர்க்கும்போது, பொத்தான்1 போன்ற பொதுவான
          ஐடி கிடைக்கும். இந்த பட்டனின் ஐடியை "rightButton" போன்ற அர்த்தமுள்ள ஒன்றாக
          மாற்றுவது நல்லது. நீங்கள் நிரலுக்குச் செல்லும்போது அது எது என்பதை நீங்கள்
          அறிந்துகொள்வீர்கள்.
      6:
        text: உங்கள் பயன்பாட்டில் தவறுதலாக ஒரு உறுப்பைச் சேர்த்தால், அதை வெளியே இழுக்கவும்
          அல்லது நீக்கு என்பதை அழுத்தவும்.
      7:
        text: திரை உறுப்பை இழுப்பதன் மூலம் உங்கள் பயன்பாட்டிற்கு திரைகள் நீங்கள் முற்றிலும்
          புதியவற்றைச் சேர்க்கலாம்
      8:
        text: மேலே உள்ள கீழ்தோன்றலில் இருந்து நீங்கள் உருவாக்கும் திரைகளுக்கு இடையில்
          விரைவாக முன்னும் பின்னுமாக மாறலாம்.
      9:
        text: உங்கள் பயன்பாட்டின் உள்ளே, இந்தத் திரைகள் அனைத்திற்கும் இடையில் மாற
          உங்களுக்கு ஒரு வழி தேவைப்படும், எனவே கருவிப்பெட்டியில் setScreen தொகுதி
          சேர்க்கப்பட்டுள்ளது. ஒரு பொத்தானைக் கிளிக் செய்வதன் மூலம் திரைகளை மாற்ற,
          "onEvent" தொகுதிக்குள் "setScreen" ஐப் பயன்படுத்தவும்.
      10:
        text: அடுத்த சில நிலைகளில் நீங்கள் ஒரே திட்டத்தில் பணிபுரிவீர்கள். முதலில்
          நீங்கள் ஒரு பொத்தானைச் சேர்ப்பீர்கள், பின்னர் நீங்கள் ஒரு புதிய திரையைச்
          சேர்ப்பீர்கள், இறுதியாக நீங்கள் குறியீட்டை எழுதுவீர்கள், இதனால் பொத்தான்
          புதிய திரைக்கு மாறும்.
    applab_intro_share:
      1:
        text: பொத்தான்கள், ஒலிகள், படங்கள், உரை மற்றும் புதிய திரைகளைச் சேர்ப்பது
          போன்ற App Lab இன் சில அடிப்படைகளை இப்போது நீங்கள் கற்றுக்கொண்டீர்கள், நீங்கள்
          எல்லா வகையான பயன்பாடுகளையும் உருவாக்கலாம்.
      2:
        text: அடுத்த கட்டத்தில், நீங்கள் உருவாக்கி முடித்த பயன்பாட்டைக் காண்பீர்கள்.
          ஒரு சிறிய படைப்பாற்றலுடன், இதை உங்கள் நண்பர்களுக்கான ஆளுமை வினாடி வினாவாக
          மாற்றலாம், உங்கள் குடும்பத்தினருடன் பகிர்ந்து கொள்ளக்கூடிய வாழ்த்து அட்டை
          அல்லது தேர்வுசெய்யும்-உங்கள்-சாகச விளையாட்டு. இந்தப் பயன்பாடுகள் அனைத்தும்
          நீங்கள் ஏற்கனவே கற்றுக்கொண்ட திறன்களின் கலவையாகும், மேலும் நீங்கள் இன்னும்
          பலவற்றைக் கொண்டு வர முடியும் என்று நான் பந்தயம் கட்டுகிறேன்.
      3:
        text: உங்கள் பயன்பாட்டை முடித்ததும், அது எப்படி இருக்கிறது என்பதைப் பார்க்க,
          அதை எளிதாக உங்கள் மொபைலுக்கு அனுப்பலாம். "பகிர்" என்பதைக் கிளிக் செய்து,
          உங்கள் தொலைபேசி எண்ணை இங்கே உள்ளிடவும்.
      4:
        text: உங்கள் பயன்பாட்டை உடனடியாகத் திறக்க அனுமதிக்கும் உரைச் செய்தியைப் பெறுவீர்கள்.
      5:
        text: உங்கள் பயன்பாட்டை உடனடியாக திறக்க அனுமதிக்கும் உரைச் செய்தியைப் பெறுவீர்கள்.
      6:
        text: ஆப் லேப் என்ன செய்ய முடியும் என்பதை நீங்கள் இப்போதுதான் கீறிவிட்டீர்கள்.
          முழு பயன்பாட்டு ஆய்வகம் மேம்பட்ட பயனர் தொடர்புகள், புதிய திரை கூறுகள் மற்றும்
          உள்ளமைக்கப்பட்ட தரவுத்தளத்தையும் கொண்டுள்ளது, எனவே நீங்கள் முழு அம்சமான
          பயன்பாடுகளையும் விரைவாக உருவாக்கலாம். "code.org/applab" இல் நீங்கள் தொடர்ந்து
          செல்ல விரும்பினால் முழு கருவியையும் நிறைய யோசனைகளையும் காணலாம்.
      7:
        text: சவாரிக்கு வந்ததற்கு நன்றி. இப்போது உங்கள் முதல் பயன்பாட்டை உருவாக்கி
          பகிரவும், மேலும் App Lab மூலம் பயன்பாடுகளை உருவாக்குவதைத் தொடரவும்!
    mc_2017_agent_intro:
      1:
        text: 'ஸ்டேசி: ஸ்டாம்பி, லிஸி, பிரஸ்டன் - என்னுடன் வந்ததற்கு நன்றி. நான் உங்களுக்குக்
          காட்ட விரும்புவது இந்த மேசா பீடபூமியின் மேல் தான். நீங்கள் அதை நேசிக்கப்
          போகிறீர்கள் என்று நினைக்கிறேன்!'
      2:
        text: ஒரு நிமிடம் காத்திருங்கள் - பாதையில் ஒரு துளை இருக்கிறது! (அலறல்)
      3:
        text: 'எல்லோரும் சரியா? முத்திரை: ஆ, நான் சிக்கலைக் காண்கிறேன். பார்! பாதையில்
          ஒரு துளை இருந்தது. நிலை: உண்மையில், முத்திரை? லிஸி: ஒருவேளை அதை சரிசெய்ய
          தொகுதிகள் சேகரிக்க வேண்டும். பிரஸ்டன்: இதை ஒரு பந்தயமாக்குவோம். முதலில்
          மீண்டும் மேலே வெற்றி. நிலை: சரி, உங்கள் அடையாளத்தில், அமைக்கவும், செல்லுங்கள்!
          சரி, நான் இந்த டெரகோட்டாவில் சிலவற்றை சேகரிக்கப் போகிறேன். காத்திரு. நண்பர்களே,
          என்னுடையது என்னால் முடியாது! பிரஸ்டன்: அதே. லிஸி: என்னால் முடியாது. நிலை:
          சரி, அது மிகவும் விசித்திரமானது. முத்திரை, நீங்கள் என்னுடையது முடியுமா?
          முத்திரை: என்னுடையது என்னால் முடியாது! நிலை: சரி, எல்லோரும் அமைதியாக இருங்கள்.
          முத்திரை: விளையாட்டு உடைந்துவிட்டதா? நிலை: அது இருந்தால், அதை எவ்வாறு சரிசெய்வது?
          லிஸி: எனக்குத் தெரியாது. முத்திரை: Minecraft குறியீட்டை எழுத யாருக்கும்
          தெரியுமா?'
      4:
        text: "(பூஃப்) பிரஸ்டன்: அது என்ன? ஸ்டாம்பி: இவற்றில் ஒன்றை நான் இதற்கு முன்பு
          பார்த்ததில்லை. லிஸி: இது மிகவும் அபிமானமானது! நிலை: அது ... இது அடக்கமானதா?
          பிரஸ்டன்: சரி, என்ன நடக்கிறது? யாரோ ஒருவர் உண்மையான உலகத்திற்குச் சென்று
          இதைச் சரிசெய்ய வேண்டும். எல்லாம்: இல்லை! நிலை: நான் அல்ல- (பெருமூச்சு.)
          சரி, நான் செல்வேன்."
      5:
        text: ஓ, சரி, ஏய், எனவே நான் இப்போது உண்மையான உலகில் இருக்கிறேன். நான் மின்கிராஃப்ட்
          அலுவலகங்களைக் கண்டுபிடிக்க முயற்சிக்கப் போகிறேன்.
      6:
        text: ஆனால், எனக்கு உங்கள் உதவி தேவைப்படும். டுடோரியலைச் செய்யத் தொடங்குங்கள்,
          குறியீட்டை எவ்வாறு கற்றுக் கொள்ளத் தொடங்குங்கள், சில நிலைகளுக்குப் பிறகு
          நான் உங்களுடன் சந்திப்பேன், சரியா? எனக்கு அதிர்ஷ்டம் வாழ்த்துக்கள்! இது
          இந்த வழி என்று நினைக்கிறேன். Ow! கற்றாழை! நான் நன்றாக இருக்கிறேன்!
      7:
        text: மணிநேர குறியீட்டு சவாலை முடிக்க, முகவரை நிரல் செய்ய நீங்கள் குறியீட்டை
          எழுத வேண்டும். உங்கள் பாதையில் ஏதேனும் தடைகளைத் தீர்க்க நீங்கள் முகவருடன்
          இணைந்து பணியாற்றுவீர்கள், எனவே உங்கள் பயணத்திற்குத் தேவையான பொருட்களை நீங்கள்
          எடுக்கலாம். முகவர் மட்டுமே தொகுதிகளை வைக்கலாம் மற்றும் உடைக்க முடியும்,
          மேலும் நீங்கள் மட்டுமே பொருட்களை சேகரிக்க முடியும். உங்கள் திரை மூன்று முக்கிய
          பகுதிகளாக பிரிக்கப்பட்டுள்ளது. இடதுபுறத்தில் Minecraft உள்ளது.
      8:
        text: முகவர் புரிந்துகொள்ளக்கூடிய கட்டளைகளைக் கொண்ட கருவிப்பெட்டியே நடுத்தர
          பகுதி.
      9:
        text: மற்றும் வலதுபுறத்தில், பணியிடம் உள்ளது. முகவரைக் கட்டுப்படுத்த உங்கள்
          நிரலை உருவாக்க கட்டளைகளை அடுக்கி வைப்பது அங்குதான்.
      10:
        text: முகவர் அழுத்தம் தட்டுகளை நடக்க, திருப்ப, மற்றும் செயல்படுத்த முடியும்.
          இது தொகுதிகள் அழிக்க மற்றும் தொகுதிகள் வைக்க முடியும். இந்த மின்கார்ட் தண்டவாளங்களைப்
          போன்ற தொகுதியை அது வைக்கும்போது, அது தனக்கு அடியில் வைக்கிறது.
      11:
        text: 3) வலதுபுறத்தில் உள்ள இடம் பணியிடம் என்றும், இங்குதான் எங்கள் திட்டத்தை
          உருவாக்குவோம்.
      12:
        text: நீங்கள் மீண்டும் முயற்சிக்க விரும்பினால், எல்லாவற்றையும் தொடங்கிய இடத்திற்கு
          மீட்டமைக்க நீல மீட்டமை பொத்தானை அழுத்தவும். நீங்கள் ஒரு குறியீட்டை நீக்க
          வேண்டும் என்றால், அதை உங்கள் பணியிடத்திலிருந்து கருவிப்பெட்டிக்கு இழுக்கவும்.
          முகவரை நகர்த்துவதற்கு ரன் அடிக்க நினைவில் கொள்க. சரி, மேலே சென்று முதல்
          சில நிலைகளை முயற்சிக்கவும். நல்ல அதிர்ஷ்டம்!
    mc_2017_repeat:
      1:
        text: 'ஸ்டாம்பி: ஸ்டேசி என்ன செய்வது என்று எனக்கு ஆச்சரியமாக இருக்கிறது?'
      2:
        text: 'ஸ்டேசி: ஓ, நான் சரியான இடத்தில் இருக்கிறேன் என்று நினைக்கிறேன். இந்த
          ஆச்சரியமாக இருக்கிறது!'
      3:
        text: நான் Minecraft இல் திரும்பி வருவது போல் உணர்கிறேன்! வணக்கம். எப்படி
          இருக்கிறீர்கள்? வணக்கம்?
      4:
        text: 'ஓ, ஒரு புல்லரிப்பு இருக்கிறது. நீங்கள் எதுவும் செய்ய வேண்டாம், இல்லையா?
          கேட்டி: ஸ்டேசி? ஸ்டேசி: ஹாய், கேட்டி? கேட்டி: ஆம், Minecraft க்கு வருக!'
      5:
        text: 'நிலை: இது ஆச்சரியமாக இருக்கிறது. எனவே நீங்கள் ஒவ்வொரு நாளும் ஒரு டெவலப்பராக
          இங்கு வேலை செய்கிறீர்கள், இல்லையா? கேட்டி: ஆமாம், இது மிகவும் அருமை. நான்
          Minecraft சந்தை குழுவில் ஒரு டெவலப்பர். நிலை: உங்களுக்கு எத்தனை குறியீட்டு
          மொழிகள் தெரியும்? கேட்டி: என் வாழ்க்கையில் நான் ஒரு டஜன் வேலை செய்திருக்கிறேன்.
          நிலை: ஒரு டஜன்? கேட்டி: ஆமாம். ஸ்டேசி: எனவே இப்போது, தன்னை முகவர் என்று
          அழைக்கும் இந்த சிறிய கோலெம் பையனைப் பற்றி நீங்கள் எதுவும் தெரிந்து கொள்ள
          மாட்டீர்களா? கேட்டி: ஸ்டீவா அல்லது அலெக்ஸ் செய்ய முடியாத விஷயங்களைச் செய்ய
          நாங்கள் முகவரைப் பயன்படுத்துகிறோம். நிலை: சரி, நான் எவ்வாறு குறியீட்டைக்
          கற்றுக் கொள்ள விரும்புகிறேன், அவர்கள் எவ்வாறு குறியீட்டைக் கற்றுக் கொள்ள
          விரும்புகிறார்கள், எனவே நீங்கள் கற்றுக் கொள்ளும்போது நீங்கள் தெரிந்து கொள்ள
          வேண்டிய முதல் விஷயங்களில் ஒன்று என்ன?'
      6:
        text: 'கேட்டி: சரி, சுழல்களை எவ்வாறு பயன்படுத்துவது என்பதை நீங்கள் கற்றுக்
          கொள்ள வேண்டும். சுழல்கள் என்பது டெவலப்பர்கள் மீண்டும் மீண்டும் இயக்கக்கூடிய
          கணினிக்கு கட்டளைகளை வழங்க எழுதும் விஷயங்கள். நிலை: கிடைத்தது, ஆகவே, அவற்றில்
          சில உண்மையில் முன்னேறிய நிலைகளில் உள்ளன என்று நான் நினைக்கிறேன், எனவே மேலே
          சென்று சுழல்களை முயற்சிக்கவும்.'
      7:
        text: அடுத்த நிலையில், முகவரை பாதையில் நகர்த்த நீங்கள் ஒரு வளையத்தைப் பயன்படுத்தலாம்.
          பணியிடத்தில் மீண்டும் தொகுதியை இழுத்து, முன்னோக்கி நகர்வை மீண்டும் தொகுதிக்குள்
          வைக்கவும். மொத்தமாக தொகுதிகள் பணியிடத்திற்கு இழுக்காமல் தொடர்ச்சியாக பல
          முறை இதைச் செய்ய கணினிக்கு இது சொல்கிறது. மீண்டும் ஒரு தொகுதியை மீண்டும்
          எத்தனை முறை செய்ய வேண்டும் என்பதை நீங்கள் தேர்வு செய்யலாம்.
      8:
        text: நீங்கள் திரும்பத் தொகுதியிலும் திருப்பங்களையும் பல கட்டளைகளையும் வைக்கலாம்,
          ஆனால் இப்போது சில படிகளை முன்னோக்கி நகர்த்த மீண்டும் மீண்டும் பயன்படுத்த
          முயற்சிக்கவும். நினைவில் கொள்ளுங்கள், நீங்கள் ஒரு புதிரில் சிக்கிக்கொண்டால்,
          நீங்கள் எப்போதும் நீல மீட்டமை பொத்தானை அழுத்தி மீண்டும் முயற்சி செய்யலாம்.
      9:
        text: 'கேட்டி போன்ற ஒரு சிறந்த வேலையைப் பற்றி நீங்கள் யோசிக்கிறீர்கள் என்றால்,
          ஒவ்வொரு மட்டத்தையும் முடிக்கும்போது மேலே சென்று ஷோ குறியீடு பொத்தானைக் கிளிக்
          செய்க. கேட்டி போன்ற ஒருவர் உண்மையில் மின்கிராஃப்ட்டை நிரலாக்கும்போது பயன்படுத்தும்
          ஜாவாஸ்கிரிப்ட் குறியீட்டை அது உண்மையில் உங்களுக்குக் காட்டப் போகிறது. கேட்டி:
          ஆமாம், அனைவருக்கும் நல்ல அதிர்ஷ்டம்!'
    mc_2017_functions:
      1:
        text: 'பிரஸ்டன்: நான் தற்பெருமை காட்ட முயற்சிக்கவில்லை, ஆனால் நான் பூங்காவில்
          மிகவும் நல்லவன். லிஸி: ஸ்டேசி திரும்பி வரும் நாள் என்பதால் தூங்குவோம்'
      2:
        text: 'ஸ்டேசி: சரி தோழர்களே, நான் மின்கிராஃப்ட் அலுவலகங்களிலிருந்து திரும்பி
          வந்துள்ளேன், எனது விளையாட்டில் நான் கொண்டிருக்கும் சிக்கலை எவ்வாறு தீர்ப்பது
          என்று எனக்குத் தெரியும். நான் ஒரு செயல்பாட்டைப் பயன்படுத்தலாம் என்று நினைக்கிறேன்.
          இதைத் திறக்கிறேன்.'
      3:
        text: எனவே ஒரு செயல்பாடு என்பது ஒரு குறிப்பிட்ட பணியைச் செய்வதற்கான ஒரு குறிப்பிட்ட
          வழிமுறையாகும், இது ஒரு செய்முறையைப் போன்றது. அடுத்த சில நிலைகளில், புதிர்களைத்
          தீர்க்க நீங்கள் பயன்படுத்தக்கூடிய செயல்பாடுகளை அணுகலாம்.
      4:
        text: அது என்ன செய்கிறது என்பதைப் பார்க்க பணியிடத்தில் இருக்கும்போது செயல்பாட்டில்
          உள்ள குறியீட்டைப் பாருங்கள்.
      5:
        text: பின்னர், கருவிப்பெட்டியில் அந்த பெயரைக் கொண்ட தொகுதியைக் கண்டுபிடித்து,
          கருவிப்பெட்டியில் இருந்து இயங்கும் தொகுதிக்கு இழுக்கவும்.
      6:
        text: 'நினைவில் வைத்து கொள்ளுங்கள், ஒவ்வொரு முறையும் நீங்கள் ஒரு பாலத்தை உருவாக்குவது
          போன்ற ஏதாவது செய்ய ஒரே வழிமுறைகளை இயக்க வேண்டியிருக்கும். நல்ல அதிர்ஷ்டம்,
          நீங்கள் அதை செய்ய முடியும் என்று எனக்கு தெரியும்!

'
    mc_2017_congratulations:
      1:
        text: 'பிரஸ்டன்: வாழ்த்துக்கள்!'
      2:
        text: 'லிசி: வாழ்த்துக்கள்!'
      3:
        text: 'முத்திரை: வாழ்த்துக்கள், நீங்கள் செய்தீர்கள்!'
      4:
        text: 'ஸ்டேசி: வாழ்த்துக்கள் நண்பர்களே, நீங்கள் அதை முழுவதுமாக உலுக்கினீர்கள்!
          இப்போது நீங்கள் மணிநேர குறியீட்டை முடித்துவிட்டீர்கள், நீங்கள் Minecraft
          இல் குறியீட்டைத் தொடங்கலாம். சுழல்கள், செயல்பாடுகள் மற்றும் ஒரு மென்பொருள்
          முகவர் என்ன செய்கிறார் என்பதைப் பற்றி நீங்கள் கற்றுக்கொண்டீர்கள்.'
      5:
        text: இப்போது, நீங்கள் டெவலப்பராக இருக்கும் இலவச விளையாட்டு நிலைக்கு நேரம்
          வந்துவிட்டது. ஆராய, என்னுடையது மற்றும் உருவாக்க உங்கள் சொந்த செயல்பாடுகளை
          எழுத மீதமுள்ள எந்த நேரத்தையும் பயன்படுத்தவும்.
      6:
        text: 'இந்த மட்டத்தில் நீங்கள் எழுதும் குறியீட்டை Minecraft: Education Edition
          இல் உங்கள் Minecraft உலகில் எடுத்துச் செல்லலாம். ''பினிஷ்'' என்பதைக் கிளிக்
          செய்து, உங்கள் உலகில் பயன்படுத்த இணைப்பைப் பெறுவதற்கான வழிமுறைகளைப் பின்பற்றவும்.
          முகவருடன் குறியீட்டுடன் தொடர. வேடிக்கையாக இருங்கள், நல்ல வேலை!'
      7:
        text: 'நிலை: நான் திரும்பி வந்துவிட்டேன்! சரி, நீங்கள், இது முகவர்! அது என்ன
          செய்ய முடியும் என்பதைக் காட்டுகிறேன். பாருங்கள், அதைச் செய்கிறீர்கள்! இந்த
          டெர்ரா கோட்டா தொகுதிகளில் இருந்து ஒரு படிக்கட்டு கட்ட நான் சொன்னேன், இப்போது
          இங்கிருந்து வெளியேற இதைப் பயன்படுத்தலாம். நீங்கள், இது படிக்கட்டுகள் மட்டுமல்ல.
          நான் என்ன வேண்டுமானாலும் செய்ய முகவரிடம் சொல்ல முடியும், அது எனக்கு செய்யும்.'
      8:
        text: 'ஸ்டாம்பி: நீங்கள் அதை எப்படி செய்தீர்கள்? நிலை: உண்மையில் இது எளிதானது.
          நான் குறியீட்டைப் பயன்படுத்தினேன்!'
    csd_concept_how_computers_work:
      1:
        text: 'நீங்கள் எங்கு பார்த்தாலும், கணினிகள் உலகை மாற்றுகின்றன. அவை நம் டெஸ்க்டாப்பில்
          இருந்தாலும் சரி, நம் வீட்டில் இருந்தாலும் சரி, நம் பைகளில் இருந்தாலும் சரி,
          அல்லது வேறு எங்கும் இருந்தாலும் சரி. ஆனால் நம்மில் பெரும்பாலோர் இந்த புரட்சிகரமான
          தொழில்நுட்பத்தை தினசரி பயன்படுத்தும்போது, ​​நாங்கள் அடிக்கடி கேட்க மாட்டோம்:
          "கணினிகள் எவ்வாறு வேலை செய்கின்றன?" இந்தத் தொடரில், கம்ப்யூட்டரை கம்ப்யூட்டராக
          மாற்றுவது முதல், கணினிகள் உண்மையில் எவ்வாறு செயல்படுகின்றன என்பதை நீங்கள்
          அறிந்துகொள்ளப் போகிறீர்கள். பிறகு, மனதைக் கவரும் வேகத்தில் செல்லும் மற்றும்
          அணைக்கும் சிறிய மின் சமிக்ஞைகளைப் பயன்படுத்தி கணினிக்குள் தகவல் எவ்வாறு
          குறிப்பிடப்படுகிறது என்பதைப் பார்ப்பீர்கள்.'
      2:
        text: அதன் பிறகு, எளிய கணிதம் முதல் முழு மெய்நிகர் உலகங்களை உருவகப்படுத்துவது
          வரை அனைத்தையும் செய்ய கணினிகள் சுற்றுகளை எவ்வாறு பயன்படுத்துகின்றன என்பதை
          நீங்கள் அறிந்து கொள்வீர்கள். அடுத்து, நீங்கள் பெரிதாக்கி, கணினியின் வெவ்வேறு
          பகுதிகளைப் பார்ப்பீர்கள், அவை உண்மையில் உள்ளீடு, வெளியீடு மற்றும் அந்தத்
          தகவல்களைச் சேமிக்கும். இறுதியாக, குறியீடு உண்மையில் என்ன என்பதையும் மென்பொருள்
          வன்பொருளை எவ்வாறு கட்டுப்படுத்துகிறது என்பதையும் நீங்கள் பார்க்கலாம். எனவே,
          நீங்கள் தினமும் பயன்படுத்தும் சாதனங்களைப் பற்றி ஆர்வமாக இருந்தாலும் அல்லது
          எதிர்காலத்தில் புதுமைகளை வடிவமைக்க விரும்பினாலும், கணினிகள் எவ்வாறு செயல்படுகின்றன
          என்பதைக் கற்றுக்கொள்வது முதல் படியாகும்.
    csd_concept_computer:
      1:
        text: எனது பெயர் மே-லி கோ, நான் ஒரு வடிவமைப்பாளர் மற்றும் கண்டுபிடிப்பாளர்.
          எனவே நான் வடிவமைத்த சில விஷயங்கள் ஆப்பிள் நிறுவனத்தில் இருந்தன, இப்போது
          குழந்தைகள் பயன்படுத்தும் வகையில் தயாரிப்புகளை வடிவமைக்கிறேன், இதனால் அவர்கள்
          பள்ளியில் எளிதாக நேரத்தை செலவிட முடியும். என்னுடைய மற்ற வேலைகளில் DJ-ing
          மற்றும் நடனம் ஆகியவை அடங்கும்.
      2:
        text: கணினிகள் எங்கும் உள்ளன! அது மக்கள் பாக்கெட்டுகளில் இருக்கிறார்கள், மக்கள்
          கார்களில் இருக்கிறார்கள், மக்கள் தங்கள் மணிக்கட்டில் வைத்திருக்கிறார்கள்.
          அது இப்போது உங்கள் பையில் இருக்கலாம். ஆனால் கணினியை கணினியாக மாற்றுவது எது?
          எப்படியும் கணினியை கணினியாக மாற்றுவது எது? மற்றும் அது எப்படி வேலை செய்கிறது?
      3:
        text: ஹாய் நான் நாட்! எக்ஸ்பாக்ஸின் அசல் வடிவமைப்பாளர்களில் நானும் ஒருவன்.
          நான் ஏழு வயதிலிருந்தே கணினிகளுடன் பணிபுரிகிறேன், இப்போது நான் மெய்நிகர்
          யதார்த்தத்தில் வேலை செய்கிறேன். மனிதர்களாகிய நாங்கள் எப்பொழுதும் பிரச்சனைகளைத்
          தீர்க்க உதவும் கருவிகளை உருவாக்கியுள்ளோம். ஒரு சக்கர வண்டி, ஒரு சுத்தியல்
          அல்லது ஒரு அச்சகம் அல்லது ஒரு டிராக்டர்-டிரெய்லர் போன்ற கருவிகள்.
      4:
        text: இந்த கண்டுபிடிப்புகள் அனைத்தும் கைமுறையாக வேலை செய்ய எங்களுக்கு உதவியது.
          காலப்போக்கில், சமன்பாடுகளைத் தீர்ப்பது அல்லது வானத்தில் உள்ள நட்சத்திரங்களைக்
          கண்காணிப்பது போன்ற நாம் செய்யும் சிந்தனைப் பணிகளுக்கு உதவும் வகையில் ஒரு
          இயந்திரத்தை வடிவமைத்து உருவாக்க முடியுமா என்று மக்கள் யோசிக்கத் தொடங்கினர்.
          அழுக்கு மற்றும் கல் போன்ற இயற்பியல் பொருட்களை நகர்த்துவதற்கு அல்லது கையாளுவதற்கு
          பதிலாக, இந்த இயந்திரங்கள் தகவல்களை கையாள வடிவமைக்கப்பட வேண்டும். கணினி அறிவியலின்
          முன்னோடிகள் சிந்திக்கும் இயந்திரத்தை எவ்வாறு வடிவமைப்பது என்பதை ஆராய்ந்தபோது,
          அது நான்கு வெவ்வேறு பணிகளைச் செய்ய வேண்டும் என்பதை உணர்ந்தனர்.
      5:
        text: இந்த உள்ளீட்டை எடுக்க வேண்டும், தகவலைச் செயலாக்க வேண்டும், பின்னர் முடிவுகளை
          வெளியிட வேண்டும். இப்போது இது எளிமையானதாகத் தோன்றலாம், ஆனால் இந்த நான்கு
          விஷயங்கள் எல்லா கணினிகளுக்கும் பொதுவானவை. அதுதான் கணினியை கணினியாக்குகிறது.
      6:
        text: கணினிகள் அடிப்படை கால்குலேட்டர்களாகத் தொடங்கின, அந்த நேரத்தில் அது ஏற்கனவே
          மிகவும் அருமையாக இருந்தது, மேலும் அவை எண்களை மட்டுமே கையாளுகின்றன. ஆனால்
          இப்போது நாம் ஒருவருக்கொருவர் பேசுவதற்கு அவற்றைப் பயன்படுத்தலாம், கேம்களை
          விளையாடுவதற்கும், ரோபோக்களைக் கட்டுப்படுத்துவதற்கும், நீங்கள் கற்பனை செய்யக்கூடிய
          எந்தவொரு பைத்தியக்காரத்தனமான செயலைச் செய்வதற்கும் அவற்றைப் பயன்படுத்தலாம்.
          நவீன கணினிகள் அந்த துருப்பிடித்த பழைய இயந்திரங்களைப் போல எதுவும் இல்லை,
          ஆனால் அவை இன்னும் இந்த நான்கு விஷயங்களைச் செய்கின்றன.
      7:
        text: முதலில், நாம் உள்ளீடு பற்றி பேச போகிறோம். விசைப்பலகை மூலம் கணினிகளுக்கு
          என்ன செய்ய வேண்டும் என்று நீங்கள் சொல்லலாம், மவுஸ், மைக்ரோஃபோன், கேமரா ஆகியவற்றைக்
          கொண்டு என்ன செய்ய வேண்டும் என்று நீங்கள் சொல்லலாம். இந்த பல்வேறு உள்ளீடுகள்
          ஒரு கணினி தகவலை கொடுக்கின்றன, பின்னர் அவை நினைவகத்தில் சேமிக்கப்படும்.
      8:
        text: ஒரு கணினியின் செயலி நினைவகத்திலிருந்து தகவல்களை எடுக்கிறது. இது ஒரு
          அல்காரிதத்தைப் பயன்படுத்தி அதை கையாளுகிறது அல்லது மாற்றுகிறது, இது கட்டளைகளின்
          தொடர். பின்னர் அது செயலாக்கப்பட்ட தகவலை மீண்டும் நினைவகத்தில் சேமிக்க அனுப்புகிறது.
          செயலாக்கப்பட்ட தகவல் வெளிவரத் தயாராகும் வரை இது தொடரும்.
      9:
        text: கணினி எவ்வாறு தகவல்களை வெளியிடுகிறது என்பது கணினி என்ன செய்ய வடிவமைக்கப்பட்டுள்ளது
          என்பதைப் பொறுத்தது. ஒரு கணினி காட்சி உரை, புகைப்படங்கள், வீடியோக்கள் அல்லது
          ஊடாடும் கேம்களைக் காட்ட முடியும் -- மெய்நிகர் உண்மையும் கூட! ஒரு கணினியின்
          வெளியீடு ஒரு ரோபோவைக் கட்டுப்படுத்தும் சமிக்ஞைகளையும் உள்ளடக்கியிருக்கலாம்.
      10:
        text: நாளைய கணினிகள் எப்படி இருக்கும் என்று யாருக்குத் தெரியும்? நாளைய கணினிகள்
          எப்படி இருக்க வேண்டும் என்பதை நீங்கள் தீர்மானிக்க உதவுவீர்கள் என்பது எனது
          நம்பிக்கை. ஆனால் எல்லா கணினிகளிலும், அவர்கள் பயன்படுத்தும் பல்வேறு வகையான
          தொழில்நுட்பங்களைப் பொருட்படுத்தாமல், அவர்கள் எப்போதும் அதே நான்கு விஷயங்களைச்
          செய்கிறார்கள். அவர்கள் தகவலை எடுத்துக்கொள்கிறார்கள், அவர்கள் அதை தரவுகளாக
          சேமித்து, அதை செயலாக்குகிறார்கள், பின்னர் அவர்கள் முடிவுகளை வெளியிடுகிறார்கள்.
    csd_concept_binary_data:
      1:
        text: வணக்கம்! எனது பெயர் லிமோர் ஃபிரைட், நான் இங்கு அடாஃப்ரூட் இண்டஸ்ட்ரீஸில்
          பொறியியலாளராக இருக்கிறேன். இங்குதான் நான் பொறியியல் மற்றும் வடிவமைப்பு செய்கிறேன்,
          மேலும் ஃபேஷன் மற்றும் இசை மற்றும் தொழில்நுட்பத்திற்கான சுற்றுகளை வடிவமைக்கிறேன்.
      2:
        text: எனது பெயர் Federico Gomez Suarez, நான் மைக்ரோசாஃப்ட் ஹேக் ஃபார் குட்
          உடன் ஒரு மென்பொருள் உருவாக்குநர். நமது காலத்தின் சில பெரிய சமூகப் பிரச்சனைகளைத்
          தீர்க்க தொழில்நுட்பத்தைப் பயன்படுத்துவதை நான் பார்க்கிறேன்.
      3:
        text: கணினிகள் ஒன்று மற்றும் பூஜ்ஜியங்களில் வேலை செய்யும் என்று கேள்விப்பட்டிருப்பீர்கள்.
          ஆனால் இன்று கிட்டத்தட்ட யாரும் இந்த மற்றும் பூஜ்ஜியங்களை நேரடியாகக் கையாள்வதில்லை.
          ஆனால் கணினிகள் உள்ளே எவ்வாறு செயல்படுகின்றன என்பதில் ஒன்று மற்றும் பூஜ்ஜியங்கள்
          பெரும் பங்கு வகிக்கின்றன.
      4:
        text: கணினியின் உள்ளே மின்சார கம்பிகள் மற்றும் மின்சுற்றுகள் உள்ளன, அவை கணினியில்
          உள்ள அனைத்து தகவல்களையும் கொண்டு செல்கின்றன. மின்சாரத்தைப் பயன்படுத்தி தகவல்களை
          எவ்வாறு சேமிப்பது அல்லது பிரதிநிதித்துவப்படுத்துவது?
      5:
        text: சரி, உங்களிடம் மின்சாரம் பாயும் ஒற்றை கம்பி இருந்தால், சிக்னல் ஆன் அல்லது
          ஆஃப் ஆகலாம். இது நிறைய தேர்வுகள் இல்லை, ஆனால் இது மிகவும் முக்கியமான தொடக்கமாகும்.
          ஒரு கம்பி மூலம், ஆம் அல்லது இல்லை, உண்மை அல்லது தவறு, ஒன்று அல்லது பூஜ்யம்
          அல்லது இரண்டு விருப்பங்களைக் கொண்ட வேறு எதையும் குறிக்கலாம். ஒற்றை வயரின்
          இந்த ஆன்/ஆஃப் நிலை பிட் என்று அழைக்கப்படுகிறது, மேலும் இது கணினியில் சேமிக்கக்கூடிய
          மிகச்சிறிய தகவலாகும்.
      6:
        text: 'நீங்கள் அதிக கம்பிகளைப் பயன்படுத்தினால், அதிக பிட்களைப் பெறுவீர்கள்:
          அதிகமானவை மற்றும் பூஜ்ஜியங்கள். அதிக பிட்கள் மூலம் நீங்கள் மிகவும் சிக்கலான
          தகவலைப் பிரதிநிதித்துவப்படுத்தலாம். ஆனால் அதைப் புரிந்து கொள்ள, பைனரி எண்
          அமைப்பு என்று ஒன்றைப் பற்றி நாம் கற்றுக் கொள்ள வேண்டும்.'
      7:
        text: 'தசம எண் அமைப்பில், பூஜ்ஜியத்திலிருந்து ஒன்பது வரையிலான பத்து இலக்கங்களைக்
          கொண்டுள்ளோம், அதைத்தான் நாம் அனைவரும் எண்ணக் கற்றுக்கொண்டோம். பைனரி எண்
          அமைப்பில், எங்களிடம் இரண்டு இலக்கங்கள் மட்டுமே உள்ளன: பூஜ்ஜியம் மற்றும்
          ஒன்று. இந்த இரண்டு இலக்கங்களைக் கொண்டு, நாம் எந்த எண்ணையும் எண்ணலாம்.'
      8:
        text: இது எப்படி வேலை செய்கிறது என்பது இங்கே. ஒரு தசம எண் அமைப்பில் நாம் அனைவரும்
          பழகிவிட்டோம், ஒரு எண்ணின் ஒவ்வொரு நிலையும் வெவ்வேறு மதிப்பைக் கொண்டுள்ளது.
          1 நிலை, 10 நிலை, 100 நிலை மற்றும் பல உள்ளன. எடுத்துக்காட்டாக, 100 நிலையில்
          9 என்பது 900. பைனரியில், ஒவ்வொரு நிலையும் ஒரு மதிப்பைக் கொண்டுள்ளது. ஆனால்
          ஒவ்வொரு முறையும் 10 ஆல் பெருக்குவதற்கு பதிலாக, நாம் 2 ஆல் பெருக்குகிறோம்.
          எனவே 1 நிலை, 2 நிலை, 4 நிலை, 8 நிலை மற்றும் பல உள்ளன. எடுத்துக்காட்டாக,
          பைனரியில் எண் 9 என்பது 1001. மதிப்பைக் கணக்கிட, நாம் 1 பெருக்கல் 8, கூட்டல்
          0 பெருக்கல் 4, கூட்டல் 0 பெருக்கல் 2, கூட்டல் 1 பெருக்கல் 1 ஆகியவற்றைச்
          சேர்க்கிறோம். இந்தக் கணிதத்தை கணினிகள் நமக்காகச் செய்வதால் கிட்டத்தட்ட யாரும்
          இந்தக் கணிதத்தைச் செய்வதில்லை. முக்கியமானது என்னவென்றால், எந்த எண்ணையும்
          ஒன்று மற்றும் பூஜ்ஜியங்கள் அல்லது ஆன் அல்லது ஆஃப் இருக்கும் கம்பிகளின் தொகுப்பால்
          மட்டுமே குறிப்பிட முடியும். நீங்கள் எவ்வளவு கம்பிகளைப் பயன்படுத்துகிறீர்களோ,
          அவ்வளவு பெரிய எண்களை நீங்கள் சேமிக்க முடியும். 8 கம்பிகள் மூலம், 0 முதல்
          255 வரையிலான எண்களை நீங்கள் சேமிக்கலாம். அதாவது 8 ஒன்று. வெறும் 32 கம்பிகள்
          மூலம், நீங்கள் 0 முதல் 4 பில்லியனுக்கும் அதிகமாக சேமிக்க முடியும். பைனரி
          எண் அமைப்பைப் பயன்படுத்தி, நீங்கள் விரும்பும் எந்த எண்ணையும் குறிக்கலாம்.
      9:
        text: ஆனால் மற்ற வகையான தகவல்களைப் பற்றி என்ன? உரை, படங்கள் அல்லது ஒலி போன்றதா?
          இந்த விஷயங்கள் அனைத்தும் எண்களால் குறிப்பிடப்படலாம் என்று மாறிவிடும். எழுத்துக்களில்
          உள்ள அனைத்து எழுத்துக்களையும் நினைத்துப் பாருங்கள். ஒவ்வொரு எழுத்துக்கும்
          ஒரு எண்ணை ஒதுக்கலாம். A 1 ஆகவும், B 2 ஆகவும் இருக்கலாம் மற்றும் பல. நீங்கள்
          எந்த வார்த்தை அல்லது பத்தியையும் எண்களின் வரிசையாக குறிப்பிடலாம். நாம் பார்த்தது
          போல், இந்த எண்களை ஆன் அல்லது ஆஃப் எலக்ட்ரிக்கல் சிக்னல்களில் சேமிக்க முடியும்.
          ஒவ்வொரு வலைப்பக்கத்திலோ அல்லது உங்கள் தொலைபேசியிலோ நீங்கள் பார்க்கும் ஒவ்வொரு
          வார்த்தையும் இது போன்ற அமைப்பைப் பயன்படுத்தி குறிப்பிடப்படுகிறது.
      10:
        text: இப்போது, புகைப்படங்கள், வீடியோக்கள் மற்றும் திரையில் நீங்கள் பார்க்கும்
          அனைத்து கிராபிக்ஸ்களையும் கருத்தில் கொள்வோம்.
      11:
        text: இந்த படங்கள் அனைத்தும் பிக்சல்கள் எனப்படும் டீனி புள்ளிகளால் ஆனது, மேலும்
          ஒவ்வொரு பிக்சலுக்கும் ஒரு வண்ணம் உள்ளது. ஒவ்வொரு வண்ணங்களையும் எண்களால்
          குறிப்பிடலாம். வழக்கமான படத்தில் மில்லியன் கணக்கான பிக்சல்கள் உள்ளன, மேலும்
          வழக்கமான வீடியோ வினாடிக்கு 30 படங்களைக் காட்டுகிறது என்று நீங்கள் கருதினால்,
          இப்போது நாங்கள் இங்கு நிறைய தரவுகளைப் பற்றி பேசுகிறோம்.
      12:
        text: ஒவ்வொரு ஒலியும் அடிப்படையில் காற்றில் ஏற்படும் அதிர்வுகளின் தொடர். அதிர்வுகளை
          ஒரு அலைவடிவமாக வரைபடமாகக் குறிப்பிடலாம். இந்த அலைவடிவத்தில் உள்ள எந்தப்
          புள்ளியையும் ஒரு எண்ணால் குறிப்பிடலாம். இந்த வழியில், எந்த ஒலியையும் எண்களின்
          வரிசையாக பிரிக்கலாம். நீங்கள் உயர் தரமான ஒலியை விரும்பினால், நீங்கள் 32-பிட்
          ஆடியோ அல்லது 8-பிட் ஆடியோவைத் தேர்ந்தெடுக்கலாம். அதிக பிட்கள் என்பது அதிக
          எண்ணிக்கையிலான எண்களைக் குறிக்கிறது.
      13:
        text: குறியீட்டை எழுத அல்லது உங்கள் சொந்த பயன்பாட்டை உருவாக்க நீங்கள் கணினியைப்
          பயன்படுத்தும் போது, இவை மற்றும் பூஜ்ஜியங்களுடன் நீங்கள் நேரடியாகக் கையாள்வதில்லை.
          ஆனால் நீங்கள் படங்கள் அல்லது ஒலி அல்லது வீடியோவை கையாள்வீர்கள். கணினிகள்
          உள்ளே எவ்வாறு செயல்படுகின்றன என்பதை நீங்கள் புரிந்து கொள்ள விரும்பினால்,
          இந்த எளிய மற்றும் பூஜ்ஜியங்கள் மற்றும் அவற்றின் பின்னால் உள்ள சுற்றுகளில்
          உள்ள மின் சமிக்ஞைகள் அனைத்தும் கீழே வருகின்றன.
    csd_concept_circuits_logic:
      1:
        text: சர்க்யூட்களைப் பற்றி நான் கண்டுபிடித்த மிகச்சிறந்த விஷயங்களில் ஒன்று,
          சர்க்யூட் என்பது ஒரு கலை வடிவமாக இருக்கலாம், எனக்கு ஆக்கப்பூர்வமான யோசனை
          இருந்தால், சர்க்யூட்களைப் பயன்படுத்தி அந்த ஆக்கப்பூர்வமான யோசனையைப் பெற
          முடியும். எனவே உங்களிடம் யோசனைகள் இருந்தால், அந்த யோசனைகளை உயிர்ப்பிக்க
          தொழில்நுட்பத்தைப் பயன்படுத்தலாம்.
      2:
        text: கணினியின் ஒவ்வொரு உள்ளீடும் அல்லது வெளியீடும் ஒரு வகைத் தகவலாகும், இது
          ஆன் அல்லது ஆஃப் மின் சமிக்ஞைகள் அல்லது ஒன்று மற்றும் பூஜ்ஜியங்களால் குறிப்பிடப்படும்.
      3:
        text: உள்ளீடாக வரும் தகவலைச் செயலாக்குவதற்கும், தகவலை வெளியிடுவதற்கும், கணினி
          உள்ளீட்டு சமிக்ஞைகளை மாற்றியமைத்து இணைக்க வேண்டும். இதைச் செய்ய, ஒரு கணினி
          மில்லியன் கணக்கான டீனி எலக்ட்ரானிக் கூறுகளைப் பயன்படுத்துகிறது, அவை ஒன்றாகச்
          சேர்ந்து சுற்றுகளை உருவாக்குகின்றன.
      4:
        text: ஒன்று மற்றும் பூஜ்ஜியங்களில் குறிப்பிடப்படும் தகவல்களை சர்க்யூட்கள்
          எவ்வாறு மாற்றியமைக்கலாம் மற்றும் செயலாக்கலாம் என்பதை இன்னும் விரிவாகப் பார்ப்போம்.
          இது நம்பமுடியாத எளிமையான சுற்று. இது ஒரு மின் சமிக்ஞையை ஆன் அல்லது ஆஃப்
          எடுத்து, அதை புரட்டுகிறது. எனவே நீங்கள் கொடுக்கும் சிக்னல் 1 ஆக இருந்தால்,
          சர்க்யூட் உங்களுக்கு 0 ஐயும், நீங்கள் சர்க்யூட்டை 0 கொடுத்தால், அது 1 ஐயும்
          தருகிறது. உள்ளே செல்லும் சிக்னல் வெளியே வரும் சிக்னலுக்கு சமமானதல்ல, மற்றும்
          எனவே இந்த சுற்று NOT என்று அழைக்கிறோம்.
      5:
        text: மிகவும் சிக்கலான சுற்றுகள் பல சிக்னல்களை எடுத்து அவற்றை ஒருங்கிணைத்து,
          உங்களுக்கு வேறு முடிவைக் கொடுக்கலாம். இந்த எடுத்துக்காட்டில், ஒரு சர்க்யூட்
          இரண்டு மின் சமிக்ஞைகளை எடுக்கும், இப்போது ஒவ்வொன்றும் 1 அல்லது 0 ஆக இருக்கலாம்.
          வரும் சிக்னல்களில் ஒன்று 0 ஆக இருந்தால், அதன் விளைவும் 0 ஆகும். இந்தச் சுற்று
          உங்களுக்கு 1ஐ மட்டுமே தரும். , முதல் சிக்னல் மற்றும் இரண்டாவது சிக்னல் இரண்டும்
          1 ஆக இருந்தால், சர்க்யூட்டை AND என்று அழைக்கிறோம்.
      6:
        text: எளிமையான தருக்கக் கணக்கீடுகளைச் செய்யும் இது போன்ற பல சிறிய சுற்றுகள்
          உள்ளன. இந்த சுற்றுகளை ஒன்றாக இணைப்பதன் மூலம், மிகவும் சிக்கலான கணக்கீடுகளைச்
          செய்யும் சிக்கலான சுற்றுகளை உருவாக்கலாம்.
      7:
        text: எடுத்துக்காட்டாக, 2 பிட்களை ஒன்றாகச் சேர்க்கும் ஒரு சர்க்யூட்டை நீங்கள்
          ஆடர் என்று அழைக்கலாம். இந்த சுற்று 2 தனித்தனி பிட்களை எடுத்துக்கொள்கிறது,
          ஒவ்வொன்றும் ஒரு 1 அல்லது ஒரு 0, மற்றும் கூட்டுத்தொகையைக் கணக்கிட அவற்றைச்
          சேர்க்கிறது. கூட்டுத்தொகை 0 கூட்டல் 0 சமம், 0 கூட்டல் 1 சமம் 1, அல்லது 1
          கூட்டல் 1 சமம் 2. உங்களுக்கு இரண்டு கம்பிகள் வெளிவர வேண்டும், ஏனெனில் இது
          கூட்டுத்தொகையைக் குறிக்க இரண்டு பைனரி இலக்கங்கள் வரை ஆகலாம். இரண்டு பிட்
          தகவல்களைச் சேர்ப்பதற்கான ஒரு சேர்ப்பியை நீங்கள் பெற்றவுடன், மிகப் பெரிய
          எண்களைச் சேர்க்க, இந்த ஆடர் சர்க்யூட்களின் மடங்குகளை அருகருகே ஒன்றாகச் சேர்க்கலாம்.
      8:
        text: எடுத்துக்காட்டாக, 8-பிட் சேர்ப்பானது 25 மற்றும் 50 எண்களை எவ்வாறு சேர்க்கிறது
          என்பது இங்கே உள்ளது. ஒவ்வொரு எண்ணும் 8 பிட்களைப் பயன்படுத்தி குறிப்பிடப்படுகிறது,
          இதன் விளைவாக 16 வெவ்வேறு மின் சமிக்ஞைகள் சுற்றுக்குள் செல்கின்றன. 8-பிட்
          சேர்ப்பானுக்கான சுற்று அதன் உள்ளே நிறைய சிறிய சேர்ப்பிகளைக் கொண்டுள்ளது,
          அவை ஒன்றாக, கூட்டுத்தொகையைக் கணக்கிடுகின்றன.
      9:
        text: வெவ்வேறு மின்சுற்றுகள் கழித்தல் அல்லது பெருக்கல் போன்ற பிற எளிய கணக்கீடுகளைச்
          செய்யலாம். உண்மையில், உங்கள் கணினியைச் செயலாக்கும் அனைத்துத் தகவல்களும்
          பல சிறிய எளிய செயல்பாடுகளை ஒன்றாகச் சேர்க்கின்றன. ஒரு கணினியால் செய்யப்படும்
          ஒவ்வொரு தனிப்பட்ட செயல்பாடும் மிகவும் எளிமையானது, அதை ஒரு மனிதனால் செய்ய
          முடியும், ஆனால் கணினிகளுக்குள் இந்த சுற்றுகள் மிக வேகமாக இருக்கும்.
      10:
        text: அந்த நாளில், இந்த சுற்றுகள் பெரியதாகவும், குழப்பமாகவும் இருந்தன, மேலும்
          8-பிட் சேர்ப்பானது ஒரு குளிர்சாதனப்பெட்டியைப் போல பெரியதாக இருக்கலாம், மேலும்
          அவை எளிய கணக்கீட்டைச் செய்ய சில நிமிடங்கள் ஆகும். இன்று, கம்ப்யூட்டர் சர்க்யூட்கள்
          அளவு நுண்ணியவை, மேலும் வேகமான வழி. சிறிய கணினிகள் ஏன் வேகமானவை? சரி, சுற்று
          சிறியதாக இருப்பதால், குறைந்த தூரத்தில் மின் சமிக்ஞை செல்ல வேண்டும். மின்சாரம்
          ஒளியின் வேகத்தில் நகர்கிறது, அதனால்தான் நவீன சுற்றுகள் ஒரு நொடிக்கு பில்லியன்
          கணக்கீடுகளைச் செய்ய முடியும்.
      11:
        text: எனவே, நீங்கள் கேம் விளையாடினாலும், வீடியோவைப் பதிவுசெய்தாலும், அல்லது
          பிரபஞ்சத்தை ஆராய்வதாக இருந்தாலும், தொழில்நுட்பம் மூலம் நீங்கள் செய்யக்கூடிய
          அனைத்திற்கும் மிக விரைவாகச் செயலாக்கப்படுவதற்கு நிறைய தகவல்கள் தேவைப்படும்.
          இந்த சிக்கலான எல்லாவற்றின் கீழும் பைனரி சிக்னல்களை இணையதளங்கள், வீடியோக்கள்,
          இசை மற்றும் கேம்களாக மாற்றும் இளம் சிறிய சுற்றுகள் நிறைய உள்ளன. இந்த சுற்றுகள்
          DNA வை டிகோட் செய்து நோயைக் கண்டறிந்து குணப்படுத்த உதவும். இந்த சுற்றுகள்
          அனைத்தையும் என்ன செய்ய விரும்புகிறீர்கள்?
    csd_concept_memory_cpu_input_output:
      1:
        text: வணக்கம், என் பெயர் மேடிசன் மாக்ஸி. என்னிடம் லூமியா என்ற நிறுவனம் உள்ளது,
          மேலும் ஸ்மார்ட் ஆடைகள் மற்றும் ஸ்மார்ட் சாஃப்ட் நல்ல தயாரிப்புகளுக்கான ஸ்மார்ட்
          துணிகளை தயாரிப்பதில் நாங்கள் கவனம் செலுத்துகிறோம். டெக்ஸ்டைல்ஸ் விஷயத்தில்
          வானமே எல்லை.
      2:
        text: எனது பெயர் டேனியல் ஆப்பிள்ஸ்டோன், நான் அதர்மஷின் நிறுவனத்தின் CEO. நாங்கள்
          டெஸ்க்டாப் அரைக்கும் இயந்திரத்தை உருவாக்குகிறோம். ஒரு அரைக்கும் இயந்திரம்
          ஒரு சுழலும் வெட்டுக் கருவியை எடுத்து, ஒரு 3D பொருளை உருவாக்க பொருள் வழியாக
          நகர்த்துகிறது.
      3:
        text: ஹூட்டின் கீழ், எல்லா கணினிகளும் ஒரே நான்கு அடிப்படை விஷயங்களைச் செய்கின்றன.
          அவர்கள் தகவலை உள்ளீடு செய்கிறார்கள், தகவலைச் சேமித்து செயலாக்குகிறார்கள்,
          பின்னர் தகவலை வெளியிடுகிறார்கள். இவை ஒவ்வொன்றும் கணினியின் வெவ்வேறு பகுதிகளால்
          செய்யப்படுகின்றன.
      4:
        text: வெளி உலகத்திலிருந்து உள்ளீட்டை எடுத்து அதை பைனரி தகவலாக மாற்றும் உள்ளீட்டு
          சாதனங்கள் உள்ளன. இந்த தகவலை சேமிக்க நினைவகம் உள்ளது. ஒரு மத்திய செயலாக்க
          அலகு அல்லது CPU உள்ளது, அங்கு அனைத்து கணக்கீடுகளும் செய்யப்படுகின்றன. மேலும்,
          இறுதியாக, தகவல்களை எடுத்து அதை இயற்பியல் வெளியீட்டாக மாற்றும் வெளியீட்டு
          சாதனங்கள் உள்ளன.
      5:
        text: முதலில் உள்ளீடு பற்றி பேசலாம். கணினியின் விசைப்பலகை, தொலைபேசியின் டச்பேட்,
          கேமரா, மைக்ரோஃபோன் அல்லது ஜிபிஎஸ் போன்ற பல்வேறு வகையான உள்ளீடுகளை கணினிகள்
          எடுக்கலாம். ஆனால் கார், தெர்மோஸ்டாட் அல்லது ட்ரோனில் உள்ள சென்சார்கள் கூட
          வெவ்வேறு உள்ளீட்டு சாதனங்களாகும்.
      6:
        text: இப்போது, உள்ளீடு எவ்வாறு கணினியில் பயணித்து வெளியீடாக மாறுகிறது என்பதற்கான
          எளிய உதாரணத்தைப் பார்ப்போம். உங்கள் விசைப்பலகையில் ஒரு விசையை அழுத்தினால்
          - "B" என்ற எழுத்தைக் கூறுவோம். விசைப்பலகை எழுத்தை எண்ணாக மாற்றுகிறது. அந்த
          எண் பைனரி, ஒன்று மற்றும் பூஜ்ஜியமாக கணினியில் அனுப்பப்படுகிறது.
      7:
        text: இந்த எண்ணிலிருந்து தொடங்கி, CPU ஆனது "B" என்ற எழுத்தை பிக்சல் மூலம்
          எவ்வாறு காட்டுவது என்பதைக் கணக்கிடுகிறது. CPU நினைவகத்திலிருந்து படிப்படியான
          வழிமுறைகளைக் கோருகிறது, இது "B" என்ற எழுத்தை எப்படி வரையலாம் என்று கூறுகிறது.
          CPU இந்த வழிமுறைகளை இயக்குகிறது மற்றும் முடிவுகளை நினைவகத்தில் பிக்சல்களாக
          சேமிக்கிறது.
      8:
        text: இறுதியாக, இந்த பிக்சல் தகவல் பைனரியில் திரைக்கு அனுப்பப்படும். திரை
          என்பது ஒரு வெளியீட்டு சாதனமாகும், இது பைனரி சிக்னல்களை சிறிய விளக்குகளாகவும்,
          நீங்கள் பார்ப்பதை உருவாக்கும் வண்ணங்களாகவும் மாற்றுகிறது.
      9:
        text: இவை அனைத்தும் மிக விரைவாக நிகழ்கிறது, ஆனால் ஒவ்வொரு எழுத்தையும் காண்பிக்க,
          உங்கள் விரல் முக்கிய புள்ளியை அழுத்தும் தருணத்திலிருந்து கணினி ஆயிரக்கணக்கான
          வழிமுறைகளை இயக்குகிறது.
      10:
        text: அந்த எடுத்துக்காட்டில், வெளியீட்டு சாதனம் திரையாக இருந்தது, ஆனால் கணினியிலிருந்து
          பைனரி சிக்னலை எடுத்து இயற்பியல் உலகில் ஏதாவது செய்யும் பல்வேறு வகையான வெளியீடுகள்
          உள்ளன. எடுத்துக்காட்டாக, ஒரு ஸ்பீக்கர் ஒலியை இயக்கும், மேலும் 3D பிரிண்டர்
          ஒரு பொருளை அச்சிடும். வெளியீட்டு சாதனங்கள் ஒரு ரோபோ கை, காரின் மோட்டார்
          அல்லது எனது நிறுவனம் தயாரிக்கும் அரைக்கும் இயந்திரத்தின் வெட்டுக் கருவி
          போன்ற உடல் இயக்கத்தையும் கட்டுப்படுத்தலாம். புதிய வகையான உள்ளீடுகள் மற்றும்
          வெளியீடுகள் கணினிகள் முற்றிலும் புதிய வழிகளில் உலகத்துடன் தொடர்பு கொள்ள
          அனுமதிக்கின்றன. நினைவகம் மற்றும் CPU இன் வேகம் மற்றும் அளவு மேம்பாடுகள்
          மூலம் இது உதவியது.
      11:
        text: ஒரு பணி மிகவும் சிக்கலானது மற்றும் உள்ளீடு அல்லது வெளியீடு போன்ற கூடுதல்
          தகவல்கள், கணினிக்கு அதிக செயலாக்க சக்தி மற்றும் நினைவகம் தேவை. திரையில்
          எழுத்துக்களைத் தட்டச்சு செய்வது எளிதாக இருக்கலாம் ஆனால் சிக்கலான 3டி கிராபிக்ஸ்
          அல்லது உயர்-வரையறை மூவியைப் பதிவு செய்ய, நவீன கணினிகள் பெரும்பாலும் அந்தத்
          தகவலைச் செயலாக்க பல CPUகளையும் அதைச் சேமிக்க பல ஜிகாபைட் நினைவகத்தையும்
          கொண்டிருக்கும்.
      12:
        text: 'கணினியில் நீங்கள் என்ன செய்ய விரும்பினாலும், ஒவ்வொரு செயலும் இதைப்
          பற்றியது: இயற்பியல் உலகில் இருந்து தகவல்களை உள்ளிடுதல், அந்தத் தகவலைச் சேமித்து
          செயலாக்குதல் மற்றும் இயற்பியல் உலகில் சில வெளியீட்டைப் பெறுதல்.'
    csd_concept_hardware_software:
      1:
        text: வணக்கம், எனது பெயர் எரிகா கோம்ஸ் மற்றும் நான் Amazon.com இல் பொறியியல்
          மேலாளராக உள்ளேன். தொழில்நுட்பத்தில் மற்றும் குறிப்பாக அமேசானில் வேலை செய்வதில்
          உள்ள ஒரு சிறந்த விஷயம் என்னவென்றால், நான் தினமும் வேலை செய்ய என் நாயை என்னுடன்
          அழைத்து வருகிறேன். மென்பொருளானது கதவுக்கு வெளியே வருவதை உறுதிப்படுத்த உதவுவதே
          எனது வேலை மற்றும் அவளது வேலை எனது மேசைக்கு அடியில் தூங்கி சத்தமாக குறட்டை
          விடுவது.
      2:
        text: 'எனது பெயர் ஜெரோம் ஹோல்மன், நான் டீம் எக்ஸ்பாக்ஸில் புரோகிராம் மேனேஜராக
          உள்ளேன், எனக்கு மிகவும் வேடிக்கையான வேலை உள்ளது: அடிப்படையில் வன்பொருள்
          மற்றும் மென்பொருளை ஒன்றாகக் கொண்டு வந்து உங்கள் எக்ஸ்பாக்ஸில் நீங்கள் விரும்பும்
          அனைத்து கேம்களையும் உங்களுக்கு வழங்குகிறோம்.'
      3:
        text: கம்ப்யூட்டிங் சாதனத்தின் உள்ளே நீங்கள் பார்க்கும்போது, சர்க்யூட்கள்,
          சிப்ஸ், வயர்கள், ஸ்பீக்கர்கள், பிளக்குகள் மற்றும் அனைத்து வகையான பொருட்களையும்
          காணலாம். இது வன்பொருள்.
      4:
        text: ஆனால் நீங்கள் பார்க்காதது மென்பொருள். இந்த கணினியில் இயங்கும் அனைத்து
          கணினி நிரல்களும் அல்லது குறியீடுகளும் மென்பொருள் ஆகும். மென்பொருளானது ஆப்ஸ்
          மற்றும் கேம்கள் முதல் வலைப்பக்கங்கள் மற்றும் வாடிக்கையாளர்கள் எப்படி நடந்துகொள்கிறார்கள்
          என்பதைப் புரிந்துகொள்ள நானும் எனது குழுக்களும் Amazon இல் பயன்படுத்தும்
          தரவு அறிவியல் மென்பொருளும் எதுவாகவும் இருக்கலாம்.
      5:
        text: ஆனால் வன்பொருளும் மென்பொருளும் ஒன்றோடு ஒன்று எவ்வாறு தொடர்பு கொள்கின்றன?
          கணினியின் மைய செயலாக்க அலகு அல்லது CPU ஐப் பார்க்க ஆரம்பிக்கலாம்.
      6:
        text: CPU என்பது கணினியின் மற்ற அனைத்து பகுதிகளையும் கட்டுப்படுத்தும் முதன்மை
          சிப் ஆகும். ஒரு CPU வெவ்வேறு விஷயங்களைச் செய்ய வேண்டும், அதன் உள்ளே குறிப்பிட்ட
          பணிகளைக் கையாளும் சிறிய, எளிமையான பகுதிகள் உள்ளன. இது எளிய கணிதம் மற்றும்
          தர்க்கத்தைச் செய்வதற்கான சுற்றுகளைக் கொண்டுள்ளது. கணினியின் பல்வேறு பகுதிகளுக்கு
          தகவல்களை அனுப்பவும் பெறவும் இது பிற சுற்றுகளைக் கொண்டுள்ளது.
      7:
        text: CPU இன் உண்மையான மந்திரம் என்னவென்றால், எந்தச் சுற்றுகளைப் பயன்படுத்த
          வேண்டும், எப்போது அவற்றைப் பயன்படுத்த வேண்டும் என்பதை அது எவ்வாறு அறிவது
          என்பதுதான். ஒரு குறிப்பிட்ட வேலையைச் செய்ய எந்த சர்க்யூட்டைப் பயன்படுத்த
          வேண்டும் என்பதைக் கூறும் எளிய கட்டளைகளை CPU பெறுகிறது. எடுத்துக்காட்டாக,
          "சேர்" கட்டளையானது CPU க்கு அதன் வெளிப்புறச் சுற்றுப் பயன்படுத்தி புதிய
          எண்ணைக் கணக்கிடச் சொல்கிறது. பின்னர் "ஸ்டோர்" கட்டளை CPU க்கு அந்த முடிவை
          நினைவகத்தில் சேமிக்க வேறு சர்க்யூட்டைப் பயன்படுத்தச் சொல்கிறது.
      8:
        text: எண்களைப் போலவே, இந்த எளிய கட்டளைகள் அனைத்தும் பைனரி மற்றும் பூஜ்ஜியங்கள்
          அல்லது ஆன் மற்றும் ஆஃப் மின் சமிக்ஞைகளில் குறிப்பிடப்படுகின்றன. பைனரி கட்டளைகள்
          நினைவகத்தில் சேமிக்கப்பட்டு, CPU எடுத்து அவற்றை ஒன்றன் பின் ஒன்றாக வரிசையாக
          செயல்படுத்துகிறது. இந்த கட்டளைகளின் வரிசை உண்மையில் மிகவும் எளிமையான கணினி
          நிரலாகும்.
      9:
        text: பைனரி குறியீடு என்பது மென்பொருளின் அடிப்படை வடிவமாகும், மேலும் இது கணினியின்
          அனைத்து வன்பொருளையும் கட்டுப்படுத்துகிறது. இந்த நாட்களில், யாரும் பைனரியில்
          மென்பொருளை எழுதுவதில்லை. அது எப்போதும் எடுக்கும்!
      10:
        text: இன்று நாம் எழுதும் மென்பொருளானது இப்படி (Python), அல்லது இது (Ruby),
          அல்லது இதை (Blockly) போன்றே தெரிகிறது. இது போன்ற நிரலாக்க மொழிகள் ஆங்கிலம்
          போன்ற தோற்றத்தில் கட்டளைகளை தட்டச்சு செய்ய உங்களை அனுமதிக்கின்றன.
      11:
        text: திரையில் ஒரு செவ்வகத்தை வரைய, உங்களுக்கு ஒரு கட்டளை தேவை. இந்த உயர்நிலைக்
          கட்டளையானது CPU புரிந்து கொள்ளக்கூடிய நூற்றுக்கணக்கான அல்லது ஆயிரக்கணக்கான
          எளிய பைனரி கட்டளைகளாக மாற்றப்படுகிறது. மென்பொருள் CPU க்கு என்ன செய்ய வேண்டும்
          என்று சொல்கிறது, ஆனால் நீங்கள் இசையைக் கேட்கும்போதும், இணையத்தில் உலாவும்போதும்,
          நண்பருடன் அரட்டை அடிக்கும்போதும், உங்கள் கணினியில் ஒரே நேரத்தில் பல மென்பொருட்கள்
          இயங்கும்.
      12:
        text: எனவே, இந்த திட்டங்கள் அனைத்தும் முதலில் கணினியில் எவ்வாறு வருகின்றன,
          மேலும் CPU அவற்றை எவ்வாறு ஒரே நேரத்தில் இயக்க முடியும்? கண்டுபிடிக்க, நாம்
          இயக்க முறைமையை பார்க்க வேண்டும்.
      13:
        text: கணினியின் இயக்க முறைமை என்பது கணினியின் வன்பொருளை மென்பொருள் எவ்வாறு
          பயன்படுத்துகிறது என்பதை நிர்வகிக்கும் முதன்மை நிரலாகும். எடுத்துக்காட்டாக,
          பெரும்பாலான தனிப்பட்ட கணினிகளில் இயங்கும் விண்டோஸ் இயங்குதளத்தை உருவாக்க
          நான் உதவினேன்.
      14:
        text: இயங்குதளம் என்பது கணினியில் உள்ள மற்ற மென்பொருளைக் கட்டுப்படுத்த அனுமதிக்கும்
          சிறப்புத் திறன்களைக் கொண்ட ஒரு நிரலாகும். உங்கள் கணினியின் நினைவகத்தில்
          ஏற்றுவதன் மூலம் புதிய நிரல்களை நிறுவ இது உங்களை அனுமதிக்கிறது. ஒரு நிரலை
          மையச் செயலாக்க அலகு எப்போது இயக்குகிறது மற்றும் அந்த நிரல் கணினியின் உள்ளீடு
          மற்றும் வெளியீட்டு சாதனங்களை அணுக முடியுமா என்பதை இது தீர்மானிக்கிறது. உங்கள்
          கணினி ஒரே நேரத்தில் பல நிரல்களை இயக்குகிறது என்று நீங்கள் நினைக்கும் போது,
          ​​உண்மையில், இது ஒரு நொடியின் பின்னங்கள் அந்த CPU ஐப் பகிரும் நிரல்களுக்கு
          இடையில் விரைவாக மாறக்கூடிய இயக்க முறைமையாகும்.
      15:
        text: ஒவ்வொரு கணினியின் உள்ளேயும் கணினியின் வன்பொருளைக் கட்டுப்படுத்தும் மென்பொருளை
          நிர்வகிக்கும் இயக்க முறைமை உள்ளது.
      16:
        text: மென்பொருள் என்பது எளிய பைனரி குறியீட்டால் செய்யப்பட்ட கட்டளைகளின் வரிசையாகும்,
          மேலும் பைனரி குறியீடு என்பது பில்லியன் கணக்கான சிறிய சுற்றுகள் வழியாக பாயும்
          மின் சமிக்ஞைகள்.
      17:
        text: கம்ப்யூட்டர்கள் எல்லாவிதமான அற்புதமான விஷயங்களையும் செய்ய வல்லது. ஆனால்
          கம்ப்யூட்டரை ஸ்மார்ட்டாகவோ அல்லது பயனுள்ளதாகவோ மாற்றுவது நீங்கள்தான். நீங்கள்
          குறியீட்டைக் கற்றுக் கொள்ளும்போது, ​​நீங்கள் தீர்க்க விரும்பும் சிக்கலை
          வரையறுக்கலாம், மேலும் அந்த யோசனைகளை யதார்த்தமாக மாற்றும் மென்பொருளை எழுதலாம்.
    hoc_dance_warmup:
      1:
        text: 'குறியீட்டின் மணிநேரம் | நடன விருந்து: வார்ம் அப்'
      2:
        text: வணக்கம்! எனது பெயர் மிரல் கோட்ப் மற்றும் நான் ஒரு நடனக் கலைஞர், மென்பொருள்
          உருவாக்குநர் மற்றும் iLuminate உருவாக்கியவர்.
      3:
        text: எனவே, கணினி அறிவியல் பல வழிகளில் படைப்பாற்றலுடன் தொடர்புடையது. அளவிட
          முடியாதது, உண்மையில். அதாவது, நீங்கள் மென்பொருளை எழுதும் திறன் பெற்றவுடன்,
          நீங்கள் எதையும் யோசனைகளை வைக்கலாம். நான் அதை லைட் சூட்களுடன் செய்கிறேன்.
          மென்பொருளை எழுதுவதற்கான கருவிகள் உங்களிடம் இருந்தால் நீங்கள் செய்யக்கூடியவை
          அதிகம், மேலும் சாத்தியக்கூறுகள் உண்மையில் முடிவற்றவை.T
      4:
        text: அடுத்த ஒரு மணி நேரத்தில், உங்கள் சொந்த நடன விருந்தை நிரலாக்குவதன் மூலம்
          கணினி அறிவியலைத் தொடங்கப் போகிறீர்கள்! நீங்கள் விளையாடுவதற்காக சில ஹிட்
          இசையையும் சிறந்த நடனக் கலைஞர்களின் குழுவையும் நாங்கள் சேகரித்துள்ளோம்.
      5:
        text: வெவ்வேறு நடனக் கலைஞர்களைத் தேர்வுசெய்யவும், அவர்களின் நடன அசைவுகளை மாற்றவும்,
          அவர்களை இசைக்கு பதிலளிக்கவும், அவர்களை ஊடாடச் செய்யவும் குறியீடுகளின் தொகுதிகளைப்
          பயன்படுத்துவீர்கள்.
      6:
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாகப் பிரிக்கப்பட்டிருப்பதைக் காண்பீர்கள்.
          இடதுபுறம் விளையாட்டு இடம். இங்குதான் உங்கள் நடனக் கலைஞர்கள் தோன்றுவார்கள்.
      7:
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டி. நீங்கள் பாடங்களைப் படிக்கும்போது,
          புதிய குறியீடு தொகுதிகள் இந்த இடத்தில் கிடைக்கும்.
      8:
        text: வலதுபுறம் உள்ள இடம் பணியிடமாகும். உங்கள் நிரலை உருவாக்க, கருவிப்பெட்டியிலிருந்து
          மற்றும் பணியிடத்திற்கு தொகுதிகளை இழுக்கலாம்.
      9:
        text: ஒவ்வொரு நிலைக்கான வழிமுறைகள் இங்கே திரையின் மேற்புறத்தில் இருக்கும்.
          உங்களுக்கு குறிப்பு தேவைப்பட்டால், ஒளி விளக்கைக் கிளிக் செய்யவும்.
      10:
        text: தொடங்குவதற்கு, இந்த சிவப்புத் தொகுதியைக் கொண்டு புதிய நடனக் கலைஞரை உருவாக்குவோம்.
          முதலில், அதை கருவிப்பெட்டியில் இருந்து வெளியே இழுத்து, இந்த ஆரஞ்சு "அமைவு"
          தொகுதியின் கீழ் எடுக்கவும். இந்த நடனக் கலைஞர் ஒரு பூனை மற்றும் அதன் பெயர்
          "my_first_dancer". இங்கே கிளிக் செய்வதன் மூலம் நீங்கள் விரும்பும் பெயரை
          மாற்றலாம்.
      11:
        text: நீங்கள் விளையாடும் இடத்தில் நடனக் கலைஞர் தோன்றும் இடத்தையும் இதன் மூலம்
          மாற்றலாம்.
      12:
        text: விளையாடும் இடத்திற்கு மேலே இசையைத் தேர்ந்தெடுப்பதற்கான மெனு உள்ளது.
          தேர்வு செய்ய ஏராளமான பாடல்கள் உள்ளன, உங்களுக்குப் பிடித்தவற்றைக் கண்டு மகிழுங்கள்.
          விளையாட்டு இடத்தின் கீழ் ரன் பொத்தான் உள்ளது. நீங்கள் ரன் அழுத்தினால், உங்கள்
          நிகழ்ச்சியின் நடனக் கலைஞர்கள் விளையாடும் இடத்தில் தோன்றுவதைக் காண்பீர்கள்,
          மேலும் இசை ஒலிக்கும்.
      13:
        text: நீங்களே முயற்சி செய்யுங்கள்! நீங்கள் சிக்கிக்கொண்டதாக உணர்ந்தால், பரவாயில்லை!
          எழுந்து நகருங்கள், நீங்கள் அதை அறிவதற்கு முன்பு, நீங்கள் உங்கள் சொந்த நடன
          விருந்தை உருவாக்கியிருப்பீர்கள். எனவே, நீங்கள் என்ன உருவாக்குவீர்கள்?
    hoc_dance_events:
      1:
        text: 'குறியீடு நேரம் | நடன விருந்து: நிகழ்வுகள்'
      2:
        text: நான் அலோ பிளாக். நான் ஒரு பாடகர், பாடலாசிரியர் மற்றும் பொழுதுபோக்கு.
          கணினி அறிவியலைக் கற்றுக்கொள்வது மிகவும் முக்கியமானது என்று நான் நினைக்கிறேன்,
          ஏனெனில் கணினி அறிவியல் எதிர்காலம், மேலும் மக்கள் தங்கள் வாழ்க்கையை உண்மையில்
          கட்டுப்படுத்தும் தொழில்நுட்பத்தின் கட்டுப்பாட்டில் இருப்பது முக்கியம் என்று
          நான் நினைக்கிறேன்.
      3:
        text: வெவ்வேறு நடன அசைவுகளை இசையுடன் சரியான நேரத்தில் செய்ய, நீங்கள் நிகழ்வுகள்
          எனப்படும் ஒன்றைப் பயன்படுத்தலாம். ஏதாவது நடப்பதைக் கேட்டு, உடனே எதிர்வினையாற்றும்படி
          ஒரு நிகழ்வு உங்கள் நிரலுக்குச் சொல்கிறது.
      4:
        text: மவுஸ் கிளிக், அம்புக்குறி பொத்தான் அல்லது திரையில் தட்டுவது போன்ற நிகழ்வுகளின்
          சில எடுத்துக்காட்டுகள். இப்போது நாம் பயன்படுத்தப்போகும் நிகழ்வு பாடலில்
          மாற்றத்தைக் கேட்கும். இந்த மாற்றம் உங்கள் நடனக் கலைஞரை புதிய நடனம் ஆடத்
          தூண்டும்.
      5:
        text: தொழில்முறை நடனக் கலைஞர்கள் பாடலின் துடிப்பை எண்ணி தங்கள் நடனத்தை பயிற்சி
          செய்கிறார்கள்.
      6:
        text: இசையில், ஒரு அளவு என்பது குறிப்பிட்ட எண்ணிக்கையிலான துடிப்புகளைக் குறிக்கிறது.
          மிகவும் பிரபலமான பாடல்களில், ஒரு அளவு நான்கு அடிகள் நீளமாக இருக்கும்.
      7:
        text: உங்கள் நடனக் கலைஞர்களை விடுவிக்க, உங்களுக்கு பச்சை நிற நிகழ்வுத் தொகுதி
          தேவை. இந்த நிகழ்வுத் தொகுதி, "4 நடவடிக்கைகளுக்குப் பிறகு" என்று கூறுகிறது.
      8:
        text: ஊதா நிறத்தில் "என்றென்றும் செய்" தொகுதியை இழுத்தால், உங்கள் நடனக் கலைஞருக்கு
          நடனமாட நீங்கள் தேர்வு செய்யலாம். இது "4 அடிகளுக்குப் பிறகு" நிகழ்வுத் தொகுதியின்
          கீழ் இருப்பதால், உங்கள் நடனக் கலைஞர் அவர்களின் நடனத்தைத் தொடங்கும் முன்
          பாடலின் நான்கு அளவுகள் வரை காத்திருப்பார்.
      9:
        text: காட்சிப் பகுதியின் மேற்புறத்தில் உள்ள அளவீட்டு கவுண்டரைக் கண்காணிக்கவும்.
      10:
        text: நடனக் குறியீட்டைத் தூண்டும் நிகழ்வைப் பார்த்து கேளுங்கள். சரியான நேரத்தில்,
          எங்கள் நடனக் கலைஞர் செல்லத் தொடங்குகிறார்.
    hoc_dance_properties:
      1:
        text: 'குறியீட்டின் மணிநேரம் | நடன விருந்து: பண்புகள்'
      2:
        text: என் பெயர் மரியா நான் வாஷிங்டன் பல்கலைக்கழகத்தில் ஜூனியர் மற்றும் நான்
          ஒரு அமேசான் எதிர்கால பொறியாளர்.
      3:
        text: நான் கணினி அறிவியலை விரும்புகிறேன், ஏனெனில் இது சிக்கலைத் தீர்ப்பது
          மற்றும் விமர்சன சிந்தனையை உள்ளடக்கியது மற்றும் பல மணிநேர வேலைகளைச் செய்த
          பிறகு, நீங்கள் உண்மையிலேயே குளிர்ச்சியான மற்றும் பலனளிக்கும் ஒன்றைப் பெறலாம்.
      4:
        text: இதுவரை, நீங்கள் பல்வேறு வகையான நடனக் கலைஞர்களுடன் விளையாடுவதற்கான வாய்ப்பைப்
          பெற்றுள்ளீர்கள், மேலும் பல்வேறு வகையான நடன அசைவுகளைச் செய்ய அவர்களை நிரல்படுத்தியுள்ளீர்கள்.
          ஆனால் இந்த நகர்வுகள் உண்மையில் எவ்வாறு செயல்படுகின்றன?
      5:
        text: ஒவ்வொரு நடன அசைவும் பிரேம்கள் எனப்படும் தொடர்ச்சியான படங்களால் ஆனது.
          ஒவ்வொரு சட்டமும் அதற்கு முன் இருந்ததில் இருந்து சற்று வித்தியாசமாக இருக்கும்.
          உங்கள் நிரல் இயங்கும் போது, கணினி ஒன்றன் பின் ஒன்றாக ஒரு சட்டத்தைக் காட்டுகிறது.
          நடனக் கலைஞர் நகர்வது போல் அவை மிக வேகமாகக் காட்டப்பட்டுள்ளன. எல்லா அனிமேஷனுக்கும்
          பின்னால் உள்ள ரகசியம் இதுதான்.
      6:
        text: உங்கள் நடன அசைவுகளை மட்டும் மாற்ற முடியாது, நடனக் கலைஞரின் பண்புகளையும்
          மாற்றலாம். திரையில் நடனக் கலைஞரின் நிலை, நடனக் கலைஞரின் அளவு மற்றும் நடனக்
          கலைஞரின் நிறம் போன்ற விஷயங்களை பண்புகள் விவரிக்கின்றன.
      7:
        text: ஒரு நடனக் கலைஞரின் பண்புகளை மாற்ற, நீங்கள் ஒரு செட் பிளாக் பயன்படுத்துவீர்கள்.
          எங்கள் நடனக் கலைஞர்களை சிறியதாகக் காட்ட ஒரு செட் பிளாக் பயன்படுத்துவோம்.
          முதலில், செட் பிளாக்கை உங்கள் நிரலில் இழுக்கவும். பிறகு, நீங்கள் மாற்ற விரும்பும்
          நடனக் கலைஞரைத் தேர்ந்தெடுத்து, திரையில் தோன்றும் அளவை உள்ளிடவும்.
      8:
        text: முழு அளவு 100. நீங்கள் குறைந்த எண்ணைத் தேர்ந்தெடுத்தால், அது நடனக் கலைஞர்
          சிறியதாக இருக்கும். நடனக் கலைஞர் எவ்வளவு சிறியவராக இருக்கிறாரோ, அவ்வளவு
          தூரம் தெரிகிறது. காப்பு நடனக் கலைஞர்களை உருவாக்க இது ஒரு சிறந்த வழியாகும்.
      9:
        text: செட் பிளாக்கைப் பயன்படுத்தி, நடனக் கலைஞரின் பரிமாணங்கள், சுழற்சி, நிலை
          மற்றும் நிறத்தையும் மாற்றலாம். இந்த பண்புகளுடன் விளையாடுவதன் மூலம் நீங்கள்
          எல்லா வகையான மாற்றங்களையும் செய்து பாடலின் வெவ்வேறு பகுதிகளுடன் இணைக்கலாம்.
      10:
        text: நினைவில் வைத்து கொள்ளுங்கள், ஏற்கனவே இருக்கும் நடனக் கலைஞரின் பண்புகளை
          மட்டுமே நீங்கள் அமைக்க முடியும். "புதிய நடனக் கலைஞரை உருவாக்கு" தொகுதிக்குப்
          பிறகு உங்கள் செட் பிளாக் வருவதை உறுதிசெய்யவும். தயக்கமின்றி ஆக்கப்பூர்வமாக
          பரிசோதனை செய்து மகிழுங்கள்.
    hoc_dance_congrats:
      1:
        text: 'குறியீட்டின் மணிநேரம் | நடன விருந்து: பார்ட்டி!'
      2:
        text: வாழ்த்துகள்! கணினி அறிவியலின் அடிப்படைகளை நீங்கள் இப்போதுதான் கற்றுக்கொண்டீர்கள்.
          உங்கள் நண்பர்களுடன் பகிர்ந்து கொள்ள, உங்கள் சொந்த வடிவமைப்பின் நடன விருந்தை
          உருவாக்க இப்போது நீங்கள் இந்தத் தொகுதிகளைப் பயன்படுத்தலாம்.
      3:
        text: கருவிப்பெட்டியில் பார்த்தால், நீங்கள் இதுவரை பார்த்திராத சில புத்தம்
          புதிய தொகுதிகள் கிடைக்கும். உதாரணமாக, திரையில் நடனக் கலைஞர்களை வெவ்வேறு
          வழிகளில் ஏற்பாடு செய்ய லேஅவுட் பிளாக்கைப் பயன்படுத்தலாம்.
      4:
        text: சுற்றிப் பார்த்து, இந்தப் புதிய தொகுதிகள் மற்றும் அம்சங்களைப் பரிசோதித்துப்
          பார்க்கவும். உங்களுக்குப் பிடித்த பாடலுக்கு கவனமாக நடனமாடுவதை உருவாக்குவீர்களா?
      5:
        text: அல்லது உங்கள் நண்பர்களுடன் நடனமாடலாமா?
      6:
        text: அல்லது முற்றிலும் வேறு ஏதாவது?
      7:
        text: டுடோரியலின் முடிவில், உங்கள் படைப்புக்கான இணைப்பை உங்கள் நண்பர்களுடன்
          பகிர்ந்து கொள்ளலாம். உங்கள் கற்பனையை விரித்து மகிழுங்கள்!
    mc_2018_intro:
      1:
        text: வணக்கம்! நீங்கள் சரியான நேரத்தில் இருக்கிறீர்கள். வோயேஜ் அக்வாட்டிக்கிற்கு
          வரவேற்கிறோம். நீருக்கடியில் மறைந்திருக்கும் புதையலைக் கண்டுபிடிப்பதற்கான
          தேடலைத் தொடங்க உள்ளேன், உங்கள் உதவி கிடைத்ததில் நான் மிகவும் மகிழ்ச்சியடைகிறேன்.
          இந்த மர்மமான நீர்வழிகளில் நாம் என்ன சந்திப்போம் என்று யாருக்குத் தெரியும்?
          இந்த கப்பல்துறையில் எங்காவது எங்கள் முதல் வழிகாட்டியை சந்திக்க இருக்கிறோம்.
      2:
        text: சாகசக்காரர்களே, வரவேற்கிறோம்! வோயேஜ் அக்வாட்டிக்கை முடிக்க, குறியீட்டைப்
          பயன்படுத்தி தொடர்ச்சியான புதிர்களைத் தீர்க்க வேண்டும். இது எவ்வாறு செயல்படுகிறது
          என்பது இங்கே. உங்கள் திரை மூன்று முக்கிய பகுதிகளாக பிரிக்கப்பட்டுள்ளது.
      3:
        text: இடதுபுறத்தில், நீங்கள் Minecraft உலகத்தைப் பார்ப்பீர்கள்.
      4:
        text: நடுப்பகுதி என்பது உங்கள் கருவிப்பெட்டியாகும், அங்கு நீங்கள் குறியீட்டு
          கட்டளைகளைக் காணலாம்.
      5:
        text: வலதுபுறத்தில் உள்ள பெரிய பகுதி உங்கள் பணியிடமாகும். உங்கள் நிரலை உருவாக்கவும்
          உங்கள் இயக்கங்களைக் கட்டுப்படுத்தவும் நீங்கள் கட்டளைகளை அடுக்கி வைக்கலாம்.
      6:
        text: ஒவ்வொரு நிலையின் வழிமுறைகளும் பக்கத்தின் மேல் இருக்கும். நீண்ட மற்றும்
          குறுகிய வழிமுறைகளுக்கு இடையில் மாற்ற, கூட்டல் குறியைக் கிளிக் செய்யவும்.
      7:
        text: கருவிப்பெட்டியிலிருந்து தொகுதிகளை பணியிடத்திற்கு இழுத்து, அவற்றை அடுக்கி,
          பின்னர் உங்கள் கட்டளைகளை இயக்க ரன் பொத்தானைக் கிளிக் செய்யவும்.
      8:
        text: அதைச் சரியாகப் பெற நீங்கள் சில முறை முயற்சி செய்ய வேண்டியிருக்கும்,
          மேலும் சில புதிர்களில் ஒன்றுக்கு மேற்பட்ட தீர்வுகள் உள்ளன, அதனால் என்ன வேலை
          செய்கிறது என்பதைப் பார்க்க பரிசோதனை செய்யுங்கள்.
      9:
        text: அதைச் சரியாகப் பெற நீங்கள் சில முறை முயற்சி செய்ய வேண்டியிருக்கும்,
          மேலும் சில புதிர்களில் ஒன்றுக்கு மேற்பட்ட தீர்வுகள் உள்ளன, அதனால் என்ன வேலை
          செய்கிறது என்பதைப் பார்க்க பரிசோதனை செய்யுங்கள்.
      10:
        text: நீங்கள் ஒரு கட்டளையை நீக்க வேண்டும் என்றால், உங்கள் பணியிடத்தில் உள்ள
          தொகுதியை மீண்டும் கருவிப்பெட்டியில் இழுக்கவும். நினைவில் வைத்து கொள்ளுங்கள்,
          உங்கள் குறியீடு எவ்வாறு செயல்படுகிறது என்பதைப் பார்க்க "இயக்கு" என்பதைக்
          கிளிக் செய்யவும்.
      11:
        text: சரி, போதுமான குழப்பம், சக சாகசக்காரர். நீருக்கடியில் சில புதையல்களைக்
          கண்டுபிடிக்க குறியீட்டைத் தொடங்குவோம்.
    MC_2018_loops:
      1:
        text: நன்று! நாங்கள் ஒரு காட்ஃபிஷ் பிடித்தோம்! ஒரு டால்பினுக்கு காட்ஃபிஷ்
          கொடுத்தால், புதையல் இருக்கும் கப்பல் விபத்துக்கு அந்த டால்பின் வழிகாட்டும்
          என்பது உங்களுக்குத் தெரியுமா? நாம் நெருங்கி வர வேண்டும். புதிர்களின் அடுத்த
          தொகுப்பு தந்திரமானதாக இருக்கும், எனவே இன்னும் சில குறியீட்டு திறன்களைக்
          கற்றுக்கொள்வது நல்லது. இது என்ன? ஒரு குகையா?
      2:
        text: சாகசக்காரர்களே, வரவேற்கிறோம்! என் பெயர் ஸ்க்விட். கடந்த புதிர்களில்
          நீங்கள் ஒரே கட்டளைகளின் தொகுப்பை மீண்டும் மீண்டும் பயன்படுத்துவதை நான் கவனித்தேன்.
          கொஞ்சம் சோர்வாக இருந்திருக்க வேண்டும். சோர்வோ சலிப்போ இல்லாமல் பாத்திரங்களைக்
          கழுவுவது அல்லது பல் துலக்குவது போன்ற ஏதாவது ஒன்றை மீண்டும் மீண்டும் செய்ய
          நீங்கள் எப்போதாவது ஒரு வழியை விரும்புகிறீர்களா? அது நன்றாக இருக்கும்.
      3:
        text: குறியீட்டு வளையங்களைப் பயன்படுத்தி மீண்டும் ஒரே காரியத்தைச் செய்வதில்
          கணினிகள் மிகவும் சிறந்தவை. உங்கள் நிரல் ஒரே வழிமுறைகளை பல முறை செய்ய விரும்பினால்,
          நீங்கள் ஒரு வளையத்தைப் பயன்படுத்தலாம்!
      4:
        text: லூப் பிளாக்கில் இலக்கை அடையும் வரை மீண்டும் மீண்டும் செய்யப்படும் வழிமுறைகள்
          உள்ளன. உங்கள் நிரல் "இலக்கு வரை மீண்டும் செய்யவும்" சுழற்சியைத் தொடங்கியவுடன்,
          அது இலக்கை அடையும் வரை உள்ளே உள்ள வழிமுறைகளை மீண்டும் சொல்லிக்கொண்டே இருக்கும்.
      5:
        text: இதை நீங்களே முயற்சிக்கவும்! நீங்கள் மீண்டும் செய்ய விரும்பும் கட்டளைகளை
          "இலக்கு வரை மீண்டும் செய்யவும்" தொகுதிக்குள் வைத்து, "இயக்கு" என்பதைக் கிளிக்
          செய்து, அதைப் பார்க்கவும்!
      6:
        text: சரி, அது கொஞ்சம் வித்தியாசமாக இருந்தது. ஸ்க்விட்களால் குறியிட முடியும்
          என்று யாருக்குத் தெரியும்? அவர்களுக்கு விரல்கள் இருப்பதாக நான் நினைக்கவில்லை.
          எனவே இப்போது நாம் சுழல்கள் பற்றி அறிந்திருக்கிறோம். அவற்றைப் பயன்படுத்தி
          இன்னும் சில பொக்கிஷங்களைச் சேமித்து வைப்போம்.
    mc_2018_conditionals:
      1:
        text: ஆஹா! மேலும் மூன்று புதிர்கள் தீர்க்கப்பட்டன! நாங்கள் ஒரு சால்மன் மீன்
          பிடித்தோம். தங்கக் குவியல்களைப் போல உற்சாகமாக இல்லை, ஆனால் நாம் எதைப் பெற
          முடியுமோ அதை எடுத்துக்கொள்வோம். நாட்டிலஸ் ஷெல் பின்னர் கைக்கு வரும் என்ற
          உணர்வு எனக்கு இருக்கிறது. இந்த இடிபாடுகளில் என்ன ஒளிந்திருக்கிறது என்று
          எனக்கு ஆச்சரியமாக இருக்கிறது. ஒருவேளை மற்றொரு குறிப்பு! உள்ளே பார்க்கலாம்.
      2:
        text: என் பெயர் நெட்டி மற்றும் எனது இடிபாடுகளுக்கு வரவேற்கிறோம். நாங்கள் எப்போதும்
          நிபந்தனைகளின் அடிப்படையில் முடிவுகளை எடுக்கிறோம். மழை போல் தோன்றினால் குடை
          பிடிப்போம். நாம் பசியாக இருந்தால், நாங்கள் ஒரு சிற்றுண்டி சாப்பிடுவோம்.
      3:
        text: புல்லுருவியைக் கண்டால் எதிர் திசையில் ஓடுவோம். கணினிகளும் இதுபோன்ற முடிவுகளை
          எடுக்கின்றன. அவர்கள் உண்மையில் குறியீட்டைப் பயன்படுத்தி நிபந்தனைகளுக்கு
          பதிலளிக்க முடியும்.
      4:
        text: உங்கள் குறியீடு கட்டளைகளைப் பயன்படுத்தி இதுபோன்ற பதிலை நிரல் செய்ய,
          if path block ஐத் தேர்ந்தெடுக்கவும்.
      5:
        text: கட்டளையை உருவாக்க கீழ்தோன்றலைத் தேர்ந்தெடுக்கவும்.
      6:
        text: எடுத்துக்காட்டாக, நீங்கள் கட்டளையை எழுதினால் "வலதுபுறமாக இருந்தால்"
          மற்றும் நிபந்தனையின் உள்ளே வலதுபுறம் திரும்புங்கள், ஸ்டீவ் வலதுபுறம் திறந்த
          பாதையை அடையும் போது அவர் எப்போதும் வலதுபுறம் திரும்புவார். வலதுபுறம் திறப்பு
          இல்லை என்றால், அவர் வலதுபுறம் திரும்ப மாட்டார். நீருக்கடியில் உள்ள குகைகளில்
          மர்மமான இடிபாடுகள் போன்ற கணிக்க முடியாத சூழ்நிலைகளில் குறியீட்டை இயக்கும்போது
          இந்த நிபந்தனை என்றால் கட்டளைகள் உதவியாக இருக்கும்.
      7:
        text: if blocks ஐப் பயன்படுத்த முயற்சிக்கவும் மற்றும் உங்கள் குறியீட்டை சுழற்றவும்.
      8:
        text: ஆஹா! நெட்டியின் இடிபாடுகள் அருமையாக இருந்தன. நான் உண்மையில் என் பெற்றோரின்
          வீட்டை விட்டு வெளியேற வேண்டும். அதனால் நீங்கள் என்ன நினைக்கிறீர்கள்? இறுதிப்
          புதிர்களை முடிப்பதற்கான சூழ்நிலைகள் சரியாக உள்ளதா? அதைக் கொடுப்போம்.
    mc_2018_closing:
      1:
        text: 'Amy Lee33: வாழ்த்துக்கள்! நீ செய்தாய்!'
      2:
        text: 'ஸ்க்விட்: வாழ்த்துக்கள்!'
      3:
        text: 'நெட்டி: நீ செய்தாய்! வாழ்த்துகள்!'
      4:
        text: 'டொமோஹாக்: வாழ்த்துகள்!'
      5:
        text: என்ன ஒரு சிறந்த நாள்! அனைத்து புதையல் வேட்டைகளும் ஒரு Minecraft வழித்தடத்தை
          உருவாக்கவும், நாட்டிலஸ் குண்டுகளைக் கண்டறியவும், புதையல் பெட்டிகளைக் கண்டறியவும்
          வழிவகுத்தன. நான் ப்ரிஸ்மரின் நிறத்தை விரும்புகிறேன். லூப்கள் மற்றும் நிபந்தனைகளுடன்
          எவ்வாறு குறியீடு செய்வது என்பதையும் நாங்கள் கற்றுக்கொண்டோம்.
      6:
        text: குறியீட்டைப் பற்றி பேசுகையில், இந்த தேடலுக்கு இன்னும் ஒரு நிலை உள்ளது.
          சாகசக்காரர்களே, அதற்கு நீங்கள் தயாராக இருக்கிறீர்களா?
      7:
        text: இது ஒரு இலவச விளையாட்டு நிலை மற்றும் நம்பமுடியாத ஒன்றைப் பயன்படுத்தவும்
          உருவாக்கவும் உங்கள் குறியீட்டு திறன்களை நீங்கள் வைக்கலாம்.
      8:
        text: ம்ம்ம்... உங்கள் புதையலை மறைக்க ஒரு இடம், நீருக்கடியில் ஒரு நினைவுச்சின்னம்,
          ஒரு பவள கோட்டை? ஆஹா... பல யோசனைகள். மீண்டும் மீண்டும் ஒரு செயலை உருவாக்க
          லூப்களைப் பயன்படுத்தவும், மேலும் கணிக்க முடியாத அனைத்து சூழ்நிலைகளுக்கும்
          தயார்படுத்த நிபந்தனைகள்.
      9:
        text: நீங்கள் இப்போது ஒரு துணிச்சலான குறியீட்டாளர் என்பதை நிச்சயமாக நிரூபித்துள்ளீர்கள்,
          மேலும் நீங்கள் என்ன உருவாக்குகிறீர்கள் என்பதைப் பார்க்க என்னால் காத்திருக்க
          முடியாது. குறியீட்டுடன் உங்கள் சாகசங்கள் இங்கு முடிவடையாது என்று நம்புகிறேன்.
          பான் வோயேஜ்!
    teaching_csf_how_it_works:
      1:
        image: notes/teaching_cs_fundamentals_1.png
        text: இந்த பாடநெறி நிலைகளாக பிரிக்கப்பட்டுள்ளது.
      2:
        image: notes/teaching_cs_fundamentals_2.png
        text: முதல் சில நிலைகளில் கணினி அறிவியல் என்றால் என்ன, அதே போல் சில முக்கிய
          சொற்களஞ்சியம் அறிமுகப்படுத்தப்படும்.
      3:
        image: notes/teaching_cs_fundamentals_3.png
        text: அடுத்து, உங்கள் மாணவர்கள் எப்படி குறியீடு செய்வது என்று கற்றுக் கொள்வீர்கள்.
          பாடத்தின் இறுதிக் கட்டங்கள், உங்கள் வகுப்பறையில் கணினி அறிவியலைக் கற்பிக்கும்
          திட்டத்தை உருவாக்க உதவும். பாடநெறி முழுவதும், பிளக் செய்யப்பட்ட - அல்லது
          ஆன்லைன் - பாடங்களின் உதாரணங்களையும், கணினி இல்லாமல் செய்யப்படும் அன்ப்ளக்
          செய்யப்பட்ட பாடங்களையும் நீங்கள் காண்பீர்கள்.
      4:
        image: notes/teaching_cs_fundamentals_4.png
        text: கற்றல் தளம் உங்கள் முன்னேற்றத்தைக் கண்காணிக்கும், எனவே எந்த நேரத்திலும்
          நீங்கள் நிறுத்திய இடத்தைத் தொடரலாம்.
    what_is_cs:
      1:
        image: notes/what_is_cs.png
        text: குறியீட்டு முறை என்பது கணினிக்கு நீங்கள் கொடுக்கும் வழிமுறைகளின் தொகுப்பாகும்.
          கம்ப்யூட்டர் சயின்ஸ் என்பது பெரிய பிரச்சனைகளை தீர்க்க கணினிகளின் சக்தியை
          பயன்படுத்தும் ஒரு துறையாகும். கணினி அறிவியலில் குறியீட்டு முறை அடங்கும்,
          ஆனால் இணையம் எவ்வாறு செயல்படுகிறது மற்றும் சமூகத்தை எவ்வாறு பாதிக்கிறது,
          பெரிய தரவை என்ன செய்வது மற்றும் பெரிய சிக்கல்களை எவ்வாறு உடைப்பது போன்ற
          பிற விஷயங்களும் இதில் அடங்கும். கணினி அறிவியல் என்பது சிக்கலைத் தீர்ப்பது,
          விமர்சன சிந்தனை மற்றும் விடாமுயற்சி ஆகியவற்றைப் பற்றியது.
    writing_first_program:
      1:
        image: notes/writing_first_program_1.png
        text: Code.org ஆனது Blockly எனப்படும் காட்சி, இழுத்து விடுதல் நிரலாக்க மொழியைப்
          பயன்படுத்துகிறது. புரோகிராம்களை உருவாக்கவும் புதிர்களைத் தீர்க்கவும் பிளாக்லி
          பிளாக்ஸ் எனப்படும் வண்ணமயமான வழிமுறைகளைப் பயன்படுத்துகிறது.
      2:
        image: notes/writing_first_program_2.png
        text: ஒவ்வொரு புதிருக்கும் நான்கு பகுதிகள் உள்ளன.
      3:
        image: notes/writing_first_program_3.png
        text: விளையாட்டு பகுதி இடதுபுறத்தில் உள்ளது, அங்கு உங்கள் நிரல் இயங்கும்.
      4:
        image: notes/writing_first_program_1.png
        text: மையத்தில் கருவிப்பெட்டி பகுதி உள்ளது, அதில் உங்களுக்கு தேவையான அனைத்து
          தொகுதிகளும் உள்ளன.
      5:
        image: notes/writing_first_program_1.png
        text: வலதுபுறத்தில் பணியிடம் உள்ளது, அங்கு உங்கள் நிரலை உருவாக்க தொகுதிகளை
          இழுப்பீர்கள்.
      6:
        image: notes/writing_first_program_1.png
        text: பணியிடத்திற்கு மேலே ஒவ்வொரு புதிருக்கான வழிமுறைகள் உள்ளன.
      7:
        image: notes/writing_first_program_7.png
        text: கருவிப்பெட்டியில் இருந்து பல தொகுதிகளை நீங்கள் இழுத்தால், கூடுதல் தொகுதியை
          மீண்டும் கருவிப்பெட்டியில் இழுக்கவும். உங்கள் திட்டத்தை முயற்சிக்க ரன் அழுத்தவும்,
          மீண்டும் முயற்சிக்க மீட்டமைக்கவும்.
    repeat_block:
      1:
        image: notes/repeat_block.png
        text: ஒரு ரிப்பீட் பிளாக் அதன் உள்ளே உள்ள குறியீட்டை நீங்கள் சொல்லும் பல முறை
          லூப் செய்ய உதவுகிறது.
    what_is_an_event:
      1:
        image: notes/what_is_an_event.png
        text: ஒரு நிகழ்வு உங்கள் நிரலை ஏதாவது நடக்கக் கேட்கச் சொல்கிறது. அது நிகழும்போது,
          நிரல் ஒரு செயலைச் செய்கிறது. ஒரு கணினி மவுஸ் கிளிக், அம்புக்குறி பொத்தானை
          அழுத்தவும் அல்லது திரையில் தட்டவும் கேட்கலாம்.
    lesson_planning:
      1:
        image: notes/lesson_planning_1.png
        text: CS அடிப்படைகள் பாடங்கள் மேலோட்டத்துடன் தொடங்கும், பாடம் எதை உள்ளடக்கும்
          என்பதை உங்களுக்குத் தெரியப்படுத்துகிறது.
      2:
        image: notes/lesson_planning_2.png
        text: பாடங்களில் வார்ம்-அப்கள், செயல்பாடுகள் மற்றும் ரேப்-அப்கள் உள்ளன. உங்கள்
          சொந்த பாடத் திட்டங்களை உருவாக்க விரும்பினால், இந்த உதவிக்குறிப்புகளை நீங்கள்
          மனதில் வைத்திருக்க வேண்டும்.
      3:
        image: notes/lesson_planning_3.png
        text: 1. சுழலும் பாடத்திட்ட வடிவமைப்பைப் பயன்படுத்த முயற்சிக்கவும். கருத்துகளை
          ஒருமுறை அறிமுகப்படுத்தி, பின்னர் அவற்றை மீண்டும் பார்க்கவும்.
      4:
        image: notes/lesson_planning_4.png
        text: 2. இணைக்கப்படாத பாடங்களுடன் ஆன்லைன் பாடங்களை இணைப்பதன் மூலம் ஒரு கலப்பு
          கற்றல் அனுபவத்தை உருவாக்கவும்.
      5:
        image: notes/lesson_planning_5.png
        text: 3. உங்கள் பாடத்திட்டத்தை சிறிய துண்டுகளாக உடைக்கவும்.
      6:
        image: notes/lesson_planning_6.png
        text: 4. உள்ளூர் தரநிலைகள் மற்றும் கல்லூரி மற்றும் தொழில் ஆயத்த திறன் ஆகியவற்றுடன்
          நீங்கள் இணைந்திருப்பதை உறுதிசெய்யவும்.
    opd_closing:
      1:
        image: notes/opd_closing_1.png
        text: வாழ்த்துகள்! கணினி அறிவியல் அடிப்படைகள் கற்பித்தல் ஆன்லைன் படிப்பை முடித்திருக்கிறீர்கள்.
          நீங்கள் இப்போது தங்கள் மாணவர்களை எதிர்காலத்திற்காக தயார்படுத்தும் ஆசிரியர்களின்
          வளர்ந்து வரும் சமூகத்தின் ஒரு பகுதியாக இருக்கிறீர்கள்.
      2:
        image: notes/opd_closing_2.png
        text: 'உங்களுக்கு கூடுதல் ஆதரவு தேவைப்பட்டால், இந்த ஆதாரங்களைப் பார்க்கவும்:
          1. forum.code.org 2. @teachcode on Twitter 3. studio.code.org'
    hoc_dance_warmup_2019:
      1:
        text: 'குறியீட்டின் மணிநேரம் | நடன விருந்து: வார்ம் அப்'
      2:
        text: வணக்கம்! எனது பெயர் மிரல் கோட்ப் மற்றும் நான் ஒரு நடனக் கலைஞர், மென்பொருள்
          உருவாக்குநர் மற்றும் iLuminate உருவாக்கியவர்.
      3:
        text: எனவே, கணினி அறிவியல் பல வழிகளில் படைப்பாற்றலுடன் தொடர்புடையது. அளவிட
          முடியாதது, உண்மையில். அதாவது, நீங்கள் மென்பொருளை எழுதும் திறன் பெற்றவுடன்,
          நீங்கள் எதையும் யோசனைகளை வைக்கலாம். நான் அதை லைட் சூட்களுடன் செய்கிறேன்.
          மென்பொருளை எழுதுவதற்கான கருவிகள் உங்களிடம் இருந்தால் நீங்கள் செய்யக்கூடியவை
          அதிகம், மேலும் சாத்தியக்கூறுகள் உண்மையில் முடிவற்றவை.T
      4:
        text: அடுத்த ஒரு மணி நேரத்தில், உங்கள் சொந்த நடன விருந்தை நிரலாக்குவதன் மூலம்
          கணினி அறிவியலைத் தொடங்கப் போகிறீர்கள்! நீங்கள் விளையாடுவதற்காக சில ஹிட்
          இசையையும் சிறந்த நடனக் கலைஞர்களின் குழுவையும் நாங்கள் சேகரித்துள்ளோம்.
      5:
        image: notes/hoc_dance_warmup_2019_5.png
        text: வெவ்வேறு நடனக் கலைஞர்களைத் தேர்வுசெய்யவும், அவர்களின் நடன அசைவுகளை மாற்றவும்,
          அவர்களை இசைக்கு பதிலளிக்கவும், அவர்களை ஊடாடச் செய்யவும் குறியீடுகளின் தொகுதிகளைப்
          பயன்படுத்துவீர்கள்.
      6:
        image: notes/hoc_dance_warmup_2019_6.png
        text: உங்கள் திரை மூன்று முக்கிய பகுதிகளாகப் பிரிக்கப்பட்டிருப்பதைக் காண்பீர்கள்.
          இடதுபுறம் விளையாட்டு இடம். இங்குதான் உங்கள் நடனக் கலைஞர்கள் தோன்றுவார்கள்.
      7:
        image: notes/hoc_dance_warmup_2019_7.png
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டி. நீங்கள் பாடங்களைப் படிக்கும்போது,
          புதிய குறியீடு தொகுதிகள் இந்த இடத்தில் கிடைக்கும்.
      8:
        image: notes/hoc_dance_warmup_2019_8.png
        text: வலதுபுறம் உள்ள இடம் பணியிடமாகும். உங்கள் நிரலை உருவாக்க, கருவிப்பெட்டியிலிருந்து
          மற்றும் பணியிடத்திற்கு தொகுதிகளை இழுக்கலாம்.
      9:
        image: notes/hoc_dance_warmup_2019_9.png
        text: ஒவ்வொரு நிலைக்கான வழிமுறைகள் இங்கே திரையின் மேற்புறத்தில் இருக்கும்.
          உங்களுக்கு குறிப்பு தேவைப்பட்டால், ஒளி விளக்கைக் கிளிக் செய்யவும்.
      10:
        image: notes/hoc_dance_warmup_2019_10.png
        text: தொடங்குவதற்கு, இந்த சிவப்புத் தொகுதியைக் கொண்டு புதிய நடனக் கலைஞரை உருவாக்குவோம்.
          முதலில், அதை கருவிப்பெட்டியில் இருந்து வெளியே இழுத்து, இந்த ஆரஞ்சு "அமைவு"
          தொகுதியின் கீழ் எடுக்கவும். இந்த நடனக் கலைஞர் ஒரு பூனை.
      11:
        image: notes/hoc_dance_warmup_2019_11.png
        text: நீங்கள் விளையாடும் இடத்தில் நடனக் கலைஞர் தோன்றும் இடத்தையும் இதன் மூலம்
          மாற்றலாம்.
      12:
        image: notes/hoc_dance_warmup_2019_12.png
        text: விளையாடும் இடத்திற்கு மேலே இசையைத் தேர்ந்தெடுப்பதற்கான மெனு உள்ளது.
          தேர்வு செய்ய ஏராளமான பாடல்கள் உள்ளன, உங்களுக்குப் பிடித்தவற்றைக் கண்டு மகிழுங்கள்.
          விளையாட்டு இடத்தின் கீழ் ரன் பொத்தான் உள்ளது. நீங்கள் ரன் அழுத்தினால், உங்கள்
          நிகழ்ச்சியின் நடனக் கலைஞர்கள் விளையாடும் இடத்தில் தோன்றுவதைக் காண்பீர்கள்,
          மேலும் இசை ஒலிக்கும்.
      13:
        text: நீங்களே முயற்சி செய்யுங்கள்! நீங்கள் சிக்கிக்கொண்டதாக உணர்ந்தால், பரவாயில்லை!
          எழுந்து நகருங்கள், நீங்கள் அதை அறிவதற்கு முன்பு, நீங்கள் உங்கள் சொந்த நடன
          விருந்தை உருவாக்கியிருப்பீர்கள். எனவே, நீங்கள் என்ன உருவாக்குவீர்கள்?
    hoc_dance_events_2019:
      1:
        text: 'குறியீடு நேரம் | நடன விருந்து: நிகழ்வுகள்'
      2:
        image: notes/hoc_dance_events_2019_2.png
        text: என் பெயர் எரின், நான் இங்கே Code.org இல் ஒரு மென்பொருள் பொறியியலாளராக
          இருக்கிறேன், மேலும் நான் நடனக் கட்சியை உருவாக்க உதவினேன்.
      3:
        image: notes/hoc_dance_events_2019_3.png
        text: வெவ்வேறு நடன அசைவுகளை இசையுடன் சரியான நேரத்தில் செய்ய, நீங்கள் நிகழ்வுகள்
          எனப்படும் ஒன்றைப் பயன்படுத்தலாம். ஏதாவது நடப்பதைக் கேட்டு, உடனே எதிர்வினையாற்றும்படி
          ஒரு நிகழ்வு உங்கள் நிரலுக்குச் சொல்கிறது.
      4:
        image: notes/hoc_dance_events_2019_4.png
        text: நிகழ்வுகளின் சில எடுத்துக்காட்டுகள் சுட்டி கிளிக், அம்பு பொத்தான் அல்லது
          திரையில் தட்டவும்.
      5:
        image: notes/hoc_dance_events_2019_5.png
        text: திரையில் உள்ள அம்புக்குறி பொத்தான்கள் அல்லது உங்கள் விசைப்பலகையில் உள்ள
          விசைகளை அழுத்தும் போது, ஒரு நடனக் கலைஞரை நகர்த்துவதற்கு இங்கே நாங்கள் திட்டமிடப்
          போகிறோம்.
      6:
        image: notes/hoc_dance_events_2019_6.png
        text: நாம் "when up arrow" நிகழ்வுத் தொகுதியைப் பயன்படுத்தி, அதனுடன் "ஒருமுறை
          செய்" என்ற பிளாக்கை இணைக்கலாம். மேல் அம்புக்குறி விசையை யாராவது அழுத்தினால்,
          "when up arrow" பிளாக்கில் இணைக்கப்பட்ட குறியீடு இயங்கும். எந்த நடன அசைவைத்
          தேர்ந்தெடுப்பீர்கள்?
      7:
        image: notes/hoc_dance_events_2019_7.png
        text: '"அமைவு" தொகுதிக்குள் நீங்கள் உருவாக்கிய நடனக் கலைஞர்களில் ஒருவருடன்
          நீங்கள் தேர்ந்தெடுக்கும் நடனக் கலைஞரின் வகை பொருந்துகிறது என்பதை உறுதிப்படுத்திக்
          கொள்ளுங்கள் அல்லது எதுவும் நடக்காமல் போகலாம்.'
      8:
        image: notes/hoc_dance_events_2019_8.png
        text: இறுதியில், உங்கள் நடனக் கலைஞர்கள் ஒவ்வொரு சாவியிலும் வெவ்வேறு நகர்வுகளைச்
          செய்ய இதுபோன்ற நிகழ்வுகளை நீங்கள் உருவாக்கலாம். இதை முயற்சித்துப் பாருங்கள்,
          சில வரிகளின் குறியீட்டைக் கொண்டு உங்கள் சொந்த ஊடாடும் நடனத்தை உருவாக்கலாம்.
    hoc_dance_measures_2019:
      1:
        image: notes/hoc_dance_measures_2019_1.png
        text: 'குறியீட்டின் மணிநேரம் | நடன விருந்து: நடவடிக்கைகள்'
      2:
        image: notes/hoc_dance_measures_2019_2.png
        text: நான் அலோ பிளாக். நான் ஒரு பாடகர், பாடலாசிரியர் மற்றும் பொழுதுபோக்கு.
          கணினி அறிவியலைக் கற்றுக்கொள்வது மிகவும் முக்கியமானது என்று நான் நினைக்கிறேன்,
          ஏனெனில் கணினி அறிவியல் எதிர்காலம், மேலும் மக்கள் தங்கள் வாழ்க்கையை உண்மையில்
          கட்டுப்படுத்தும் தொழில்நுட்பத்தின் கட்டுப்பாட்டில் இருப்பது முக்கியம் என்று
          நான் நினைக்கிறேன்.
      3:
        image: notes/hoc_dance_measures_2019_3.png
        text: நாம் இப்போது பயன்படுத்தப் போகும் நிகழ்வு பாடலில் மாற்றம் கேட்கும். அந்த
          மாற்றம் புதிய நடனம் ஆட உங்களை நடனமாடத் தூண்டும்.
      4:
        image: notes/hoc_dance_measures_2019_4.png
        text: தொழில்முறை நடனக் கலைஞர்கள் பாடலின் துடிப்பை எண்ணி தங்கள் நடனத்தை பயிற்சி
          செய்கிறார்கள். இசையில், ஒரு அளவு என்பது குறிப்பிட்ட எண்ணிக்கையிலான துடிப்புகளைக்
          குறிக்கிறது. மிகவும் பிரபலமான பாடல்களில், ஒரு அளவு நான்கு அடிகள் நீளமாக
          இருக்கும்.
      5:
        image: notes/hoc_dance_measures_2019_5.png
        text: உங்கள் நடனக் கலைஞர்களை விடுவிக்க, உங்களுக்கு பச்சை நிற நிகழ்வுத் தொகுதி
          தேவை. இந்த நிகழ்வுத் தொகுதி, "4 நடவடிக்கைகளுக்குப் பிறகு" என்று கூறுகிறது.
      6:
        image: notes/hoc_dance_measures_2019_6.png
        text: ஊதா நிறத்தில் "என்றென்றும் செய்" தொகுதியை இழுத்தால், உங்கள் நடனக் கலைஞருக்கு
          நடனமாட நீங்கள் தேர்வு செய்யலாம். இது "4 அடிகளுக்குப் பிறகு" நிகழ்வுத் தொகுதியின்
          கீழ் இருப்பதால், உங்கள் நடனக் கலைஞர் அவர்களின் நடனத்தைத் தொடங்கும் முன்
          பாடலின் நான்கு அளவுகள் வரை காத்திருப்பார்.
      7:
        image: notes/hoc_dance_measures_2019_7.png
        text: காட்சிப் பகுதியின் மேற்புறத்தில் உள்ள அளவீட்டு கவுண்டரைக் கண்காணிக்கவும்.
      8:
        image: notes/hoc_dance_measures_2019_8.png
        text: நடனக் குறியீட்டைத் தூண்டும் நிகழ்வைப் பார்த்து கேளுங்கள். சரியான நேரத்தில்,
          எங்கள் நடனக் கலைஞர் செல்லத் தொடங்குகிறார்.
    hoc_dance_properties_2019:
      1:
        text: 'குறியீட்டின் மணிநேரம் | நடன விருந்து: பண்புகள்'
      2:
        text: என் பெயர் மரியா நான் வாஷிங்டன் பல்கலைக்கழகத்தில் ஜூனியர் மற்றும் நான்
          ஒரு அமேசான் எதிர்கால பொறியாளர்.
      3:
        text: நான் கணினி அறிவியலை விரும்புகிறேன், ஏனெனில் இது சிக்கலைத் தீர்ப்பது
          மற்றும் விமர்சன சிந்தனையை உள்ளடக்கியது மற்றும் பல மணிநேர வேலைகளைச் செய்த
          பிறகு, நீங்கள் உண்மையிலேயே குளிர்ச்சியான மற்றும் பலனளிக்கும் ஒன்றைப் பெறலாம்.
      4:
        text: இதுவரை நீங்கள் பல்வேறு வகையான நடனக் கலைஞர்களை விளையாடுவதற்கான வாய்ப்பைப்
          பெற்றுள்ளீர்கள், மேலும் பல்வேறு வகையான நடன அசைவுகளைச் செய்ய அவர்களை நிரல்படுத்தியுள்ளீர்கள்.
          ஆனால் இந்த நகர்வுகள் உண்மையில் எவ்வாறு செயல்படுகின்றன?
      5:
        text: ஒவ்வொரு நடன அசைவும் பிரேம்கள் எனப்படும் தொடர்ச்சியான படங்களால் ஆனது.
          ஒவ்வொரு சட்டமும் அதற்கு முன் இருந்ததில் இருந்து சற்று வித்தியாசமாக இருக்கும்.
          உங்கள் நிரல் இயங்கும் போது, கணினி ஒன்றன் பின் ஒன்றாக ஒரு சட்டத்தைக் காட்டுகிறது.
          நடனக் கலைஞர் நகர்வது போல் அவை மிக வேகமாகக் காட்டப்பட்டுள்ளன. எல்லா அனிமேஷனுக்கும்
          பின்னால் உள்ள ரகசியம் இதுதான்.
      6:
        text: உங்கள் நடன அசைவுகளை மட்டும் மாற்ற முடியாது, நடனக் கலைஞரின் பண்புகளையும்
          மாற்றலாம். திரையில் நடனக் கலைஞரின் நிலை, நடனக் கலைஞரின் அளவு மற்றும் நடனக்
          கலைஞரின் நிறம் போன்ற விஷயங்களை பண்புகள் விவரிக்கின்றன.
      7:
        image: notes/hoc_dance_properties_2019_7.png
        text: ஒரு நடனக் கலைஞரின் பண்புகளை மாற்ற, நீங்கள் ஒரு செட் பிளாக் பயன்படுத்துவீர்கள்.
          எங்கள் நடனக் கலைஞர்களை சிறியதாகக் காட்ட ஒரு செட் பிளாக் பயன்படுத்துவோம்.
          முதலில், செட் பிளாக்கை உங்கள் நிரலில் இழுக்கவும்.
      8:
        image: notes/hoc_dance_properties_2019_8.png
        text: பிறகு, நீங்கள் மாற்ற விரும்பும் நடனக் கலைஞரைத் தேர்ந்தெடுத்து, அவர்கள்
          திரையில் தோன்றும் அளவை உள்ளிடவும். முழு அளவு 100. குறைந்த எண்ணைத் தேர்வு
          செய்தால், அது நடனக் கலைஞரைச் சிறியதாக்கும். நடனக் கலைஞர் எவ்வளவு சிறியவராக
          இருக்கிறாரோ, அவ்வளவு தூரம் தெரிகிறது.
      9:
        image: notes/hoc_dance_properties_2019_9.png
        text: செட் பிளாக்கைப் பயன்படுத்தி, நடனக் கலைஞரின் பரிமாணங்கள், சுழற்சி, நிலை
          மற்றும் நிறத்தையும் மாற்றலாம். இந்த பண்புகளுடன் விளையாடுவதன் மூலம் நீங்கள்
          எல்லா வகையான மாற்றங்களையும் செய்து பாடலின் வெவ்வேறு பகுதிகளுடன் இணைக்கலாம்.
      10:
        image: notes/hoc_dance_properties_2019_10.png
        text: நினைவில் வைத்து கொள்ளுங்கள், ஏற்கனவே இருக்கும் நடனக் கலைஞரின் பண்புகளை
          மட்டுமே நீங்கள் அமைக்க முடியும். "புதிய நடனக் கலைஞரை உருவாக்கு" தொகுதிக்குப்
          பிறகு உங்கள் செட் பிளாக் வருவதை உறுதிசெய்யவும். தயக்கமின்றி ஆக்கப்பூர்வமாக
          பரிசோதனை செய்து மகிழுங்கள்.
    hoc_dance_congrats_2019:
      1:
        text: 'குறியீட்டின் மணிநேரம் | நடன விருந்து: பார்ட்டி!'
      2:
        text: வாழ்த்துகள்! கணினி அறிவியலின் அடிப்படைகளை நீங்கள் இப்போதுதான் கற்றுக்கொண்டீர்கள்.
          உங்கள் நண்பர்களுடன் பகிர்ந்து கொள்ள, உங்கள் சொந்த வடிவமைப்பின் நடன விருந்தை
          உருவாக்க இப்போது நீங்கள் இந்தத் தொகுதிகளைப் பயன்படுத்தலாம்.
      3:
        text: கருவிப்பெட்டியில் பார்த்தால், நீங்கள் இதுவரை பார்த்திராத சில புத்தம்
          புதிய தொகுதிகள் கிடைக்கும். உதாரணமாக, திரையில் நடனக் கலைஞர்களை வெவ்வேறு
          வழிகளில் ஏற்பாடு செய்ய லேஅவுட் பிளாக்கைப் பயன்படுத்தலாம்.
      4:
        text: சுற்றிப் பார்த்து, இந்தப் புதிய தொகுதிகள் மற்றும் அம்சங்களைப் பரிசோதித்துப்
          பார்க்கவும். உங்களுக்குப் பிடித்த பாடலுக்கு கவனமாக நடனமாடுவதை உருவாக்குவீர்களா?
      5:
        text: அல்லது உங்கள் நண்பர்களுடன் நடனமாடலாமா?
      6:
        text: அல்லது முற்றிலும் வேறு ஏதாவது?
      7:
        image: notes/hoc_dance_congrats_7.png
        text: டுடோரியலின் முடிவில், உங்கள் படைப்புக்கான இணைப்பை உங்கள் நண்பர்களுடன்
          பகிர்ந்து கொள்ளலாம். உங்கள் கற்பனையை விரித்து மகிழுங்கள்!
    poemart_intro:
      1:
        image: 'notes/hoc_poem_art_2021_introduction_01.jpg

'
        text: என் பெயர் கயா மற்றும் நான் ஒரு கவிஞர் மற்றும் கணினி அறிவியல் மாணவர்.
          குறியீட்டு முறையிலிருந்து நான் நிறைய கற்றுக்கொண்டேன், அது என்னை ஒரு சிறந்த
          கவிஞனாக ஆக்கியது, மேலும் எனது கவிதைகள் குறியிடுவதில் என்னை சிறந்ததாக்கியது.
          அது அனைத்தும் ஒன்றாக வருகிறது.
      2:
        image: 'notes/hoc_poem_art_2021_introduction_02.jpg

'
        text: அடுத்த ஒரு மணி நேரத்தில், அனிமேஷன் கவிதையை உருவாக்குவதன் மூலம் நீங்கள்
          கணினி அறிவியல் மற்றும் கவிதை பற்றி அறியப் போகிறீர்கள். சாராம்சத்தில் கவிதை
          என்பது வார்த்தைகளால் கலையை உருவாக்குவது. நான் என்னை வெளிப்படுத்த கவிதை படைக்கிறேன்;
          எனது தனித்துவமான நடை மற்றும் தாளத்தைப் பயன்படுத்தி நான் எழுதும்போது பார்வையாளர்களின்
          கற்பனையையும் உணர்ச்சிகளையும் கிளற முயற்சிக்கிறேன்.
      3:
        image: 'notes/hoc_poem_art_2021_introduction_03.jpg '
        text: கலையைப் போலவே, கவிதைகளையும் பல வழிகளில் விளக்கலாம். ஒரே கவிதை வெவ்வேறு
          நபர்களுக்கு மிகவும் வித்தியாசமான விஷயங்களைக் குறிக்கலாம், மேலும் ஒவ்வொரு
          கவிதைக்கும் அதன் சொந்த மனநிலை உள்ளது. மனநிலை என்பது ஒரு கவிதையிலிருந்து
          நீங்கள் பெறும் உணர்வு. சில நேரங்களில் மக்கள் சில நிறங்கள் மற்றும் படங்களை
          வெவ்வேறு மனநிலைகளுடன் தொடர்புபடுத்துகிறார்கள்.
      4:
        image: 'notes/hoc_poem_art_2021_introduction_04.jpg

'
        text: உதாரணமாக, மஞ்சள் நிறம் என்னை மகிழ்ச்சியாக உணர வைக்கிறது. பயம் போன்ற
          ஒரு மனநிலையைப் பற்றி நான் நினைக்கும் போது, சில சமயங்களில் என் தலையில் இருண்ட
          மற்றும் புயல் நிறைந்த இரவை நான் சித்தரிக்கிறேன். இந்தச் செயலில், ஒரு கவிதை
          உங்களை எப்படி உணரவைக்கிறது என்பதை அடிப்படையாகக் கொண்டு அதன் மனநிலையை விளக்கி,
          உயிரூட்டுவதற்கான வாய்ப்பைப் பெறுவீர்கள்.
      5:
        image: 'notes/hoc_poem_art_2021_introduction_05.jpg

'
        text: குறியீட்டைப் பயன்படுத்தி இதை எப்படிச் செய்வது என்று பார்க்கலாம். உங்கள்
          திரை மூன்று முக்கிய பகுதிகளாகப் பிரிக்கப்பட்டிருப்பதைக் காண்பீர்கள். இடதுபுறம்
          விளையாட்டு இடம். இங்கே உங்கள் அனிமேஷன் கவிதை காண்பிக்கப்படும். ஒவ்வொரு கவிதைக்கும்
          ஒரு தலைப்பும் ஒரு ஆசிரியர் உண்டு.
      6:
        image: 'notes/hoc_poem_art_2021_introduction_06.jpg

'
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டி. நீங்கள் பாடங்களைப் படிக்கும்போது,
          புதிய குறியீடு தொகுதிகள் இந்த இடத்தில் கிடைக்கும்.
      7:
        image: notes/hoc_poem_art_2021_introduction_07.jpg
        text: வலதுபுறம் உள்ள இடம் பணியிடமாகும். உங்கள் நிரலை உருவாக்க, கருவிப்பெட்டியிலிருந்து
          மற்றும் பணியிடத்திற்கு தொகுதிகளை இழுக்கலாம்.
      8:
        image: notes/hoc_poem_art_2021_introduction_08.jpg
        text: ஒவ்வொரு நிலைக்கான வழிமுறைகள் இங்கே திரையின் மேற்புறத்தில் இருக்கும்.
          உங்களுக்கு குறிப்பு தேவைப்பட்டால், ஒளி விளக்கைக் கிளிக் செய்யவும்.
      9:
        image: notes/hoc_poem_art_2021_introduction_09.jpg
        text: முதலில், நீங்கள் விரும்பும் கவிதையைத் தேர்ந்தெடுக்கவும். எல்லா வகையான
          கவிதைகளும் உள்ளன, மேலும் ஒவ்வொரு மட்டத்திலும் புதிய ஒன்றைத் தேர்ந்தெடுக்கலாம்.
      10:
        image: notes/hoc_poem_art_2021_introduction_10.jpg
        text: அடுத்து, உங்கள் கவிதையை அனிமேட் செய்ய, கருவிப்பெட்டியிலிருந்து தொகுதிகளை
          உங்கள் பணியிடத்திற்கு இழுக்க வேண்டும். உங்கள் கவிதையின் மனநிலையுடன் பொருந்தக்கூடிய
          பின்னணி வண்ணம் அல்லது விளைவை நீங்கள் தேர்வு செய்யலாம், பின்னர் உங்கள் கவிதை
          செயலில் இருப்பதைக் காண "Run" என்பதைக் கிளிக் செய்யவும்.
      11:
        image: notes/hoc_poem_art_2021_introduction_11.jpg
        text: வெவ்வேறு கவிதைகளைப் படித்து, உங்களில் உணர்ச்சியைத் தூண்டும் ஒன்றைக்
          கண்டறியவும். நீங்கள் எப்படி உணர்கிறீர்கள், அந்த உணர்வை உருவகங்கள் மற்றும்
          குறியீடு மூலம் எவ்வாறு தொடர்புகொள்வது என்பதைப் பற்றி சிந்தியுங்கள்.
    poemart_events:
      1:
        image: notes/hoc_poem_art_2021_events_01.jpg
        text: சில சமயங்களில் ஒரு கவிதையின் மனநிலை கவிதையின் வழியே மாறுகிறது. மகிழ்ச்சியாக
          ஒலிக்கும் கவிதையாகத் தொடங்குவது சோகமாக மாறலாம் அல்லது இருள் வெளிச்சமாக மாறலாம்.
      2:
        image: notes/hoc_poem_art_2021_events_02.jpg
        text: இந்தச் செயலில் நீங்கள் நிகழ்வுகளுடன் இணைந்து செயல்படுவீர்கள். உங்கள்
          கவிதையில் ஒரு குறிப்பிட்ட வரி தோன்றும் போது உங்கள் நிரலின் போக்கை மாற்ற
          இந்த நிகழ்வுத் தொகுதியைப் பயன்படுத்தலாம். நிகழ்வுத் தொகுதிகள் உங்கள் முக்கிய
          திட்டத்தில் சேராது என்பதைக் கவனியுங்கள். மாறாக, அவர்கள் சொந்தமாக சிறிய திட்டங்களை
          உருவாக்குகிறார்கள்.
      3:
        image: notes/hoc_poem_art_2021_events_03.jpg
        text: 'உங்கள் கவிதையைப் படித்து, மனநிலை மாறும் தருணத்தைக் கண்டறியவும். எந்த
          வரியில் நடக்கிறது என்று எண்ணுங்கள்: ஒன்று, இரண்டு, மூன்று. உங்கள் நிகழ்வு
          தொகுதியில், வரியின் எண்ணை உள்ளிடவும்.'
      4:
        image: notes/hoc_poem_art_2021_events_04.jpg
        text: அந்த வரி திரையில் தோன்றும் போது மனநிலையின் மாற்றத்தை பிரதிபலிக்கும்
          வகையில் ஏதாவது ஒன்றை நிரல் செய்யவும். "Run" என்பதை அழுத்தினால், நீங்கள்
          குறியிட்டதைக் காணலாம்.
    poemart_imagery:
      1:
        image: notes/hoc_poem_art_2021_imagery_01.jpg
        text: கவிதையில், வாசகரின் மனதில் ஒரு படத்தை வரைவதற்கு ஆசிரியர்கள் கற்பனையைப்
          பயன்படுத்துகிறார்கள். முதலை என்ற வார்த்தையைப் பார்த்தாலே நம் மனதில் பச்சை
          நிற முதலை தானாகவே உருவெடுக்கிறது. இது போன்ற ஒரு படத்தை அனிமேஷனில் பெற, நாம்
          உருவங்களைப் பயன்படுத்துவோம்.
      2:
        image: notes/hoc_poem_art_2021_imagery_02.jpg
        text: இது ஒரு புதிய ஸ்ப்ரைட் பிளாக்கை உருவாக்குகிறது. ஸ்பிரைட்டுக்கான உடையை
          தேர்வு செய்ய வேண்டும் என்று நீங்கள் நினைக்கும் கவிதையுடன் பொருந்துகிறது.
      3:
        image: notes/hoc_poem_art_2021_imagery_03.jpg
        text: ஸ்ப்ரைட்டின் இருப்பிடத்தை மாற்ற, இருப்பிடத் தொகுதியில் உள்ள பின் ஐகானைக்
          கிளிக் செய்து, பிளே ஸ்பேஸில் அது எங்கு செல்ல வேண்டும் என்பதைக் கிளிக் செய்யவும்.
      4:
        image: notes/hoc_poem_art_2021_imagery_04.jpg
        text: அடுத்த சில நிலைகளில் நீங்கள் சில புதிய தொகுதிகளைக் காண்பீர்கள். இந்த
          பிளாக் உங்கள் ஸ்பிரைட்டின் அளவை மாற்ற அனுமதிக்கிறது. இந்த பிளாக் உங்கள்
          ஸ்பிரைட்டை நடத்தை மூலம் உயிரூட்ட அனுமதிக்கிறது.
      5:
        image: notes/hoc_poem_art_2021_imagery_05.jpg
        text: ஒரு கவிதை அலைந்து திரியும் மேகங்களைப் பற்றிக் கூறினால், முதலில் மேகத்தை
          ஸ்பிரைட் செய்யுங்கள், பின்னர் இந்த நடத்தைத் தொகுதியைத் தேர்ந்தெடுத்து, அதை
          இழுத்து, அலைந்து திரிவதைத் தேர்ந்தெடுக்கவும்.
      6:
        image: notes/hoc_poem_art_2021_imagery_06.jpg
        text: உங்கள் ஸ்பிரைட் ஆடைகள் பொருந்துவதை உறுதிசெய்யவும். நீங்கள் ரன் அழுத்தினால்,
          அலைந்து திரிந்த மேகத்தைப் படித்துப் பார்ப்பீர்கள்.
      7:
        image: notes/hoc_poem_art_2021_imagery_07.jpg
        text: இப்போது நீங்கள் கவிதையில் உள்ள வார்த்தைகளை விளக்குவதற்கு நேரடியான படங்களை
          சேர்க்கலாம். மகிழுங்கள்!
    poemart_celebration:
      1:
        image: notes/hoc_poem_art_2021_celebration_01.jpg
        text: வாழ்த்துகள்! கணினி அறிவியலின் அடிப்படைகளையும் ஒரு கவிதையின் மனநிலையை
          எவ்வாறு கண்டுபிடிப்பது என்பதையும் நீங்கள் கற்றுக்கொண்டீர்கள். இப்போது நீங்கள்
          உங்கள் சொந்த அனிமேஷன் கவிதையை உருவாக்கி உங்கள் நண்பர்களுடன் பகிர்ந்து கொள்ளலாம்.
      2:
        image: notes/hoc_poem_art_2021_celebration_02.jpg
        text: முழுக்கவிதைக்கும் எளிமையான காட்சியை கவனமாக தேர்ந்தெடுப்பீர்களா?
      3:
        image: notes/hoc_poem_art_2021_celebration_03.jpg
        text: அல்லது உங்கள் கவிதையின் ஒவ்வொரு வரிக்கும் ஒரு புதிய காட்சியை உருவாக்க
          நிறைய நிகழ்வுகளைப் பயன்படுத்துவீர்களா?
      4:
        image: notes/hoc_poem_art_2021_celebration_04.jpg
        text: டுடோரியலின் முடிவில், உங்கள் படைப்புக்கான இணைப்பை உங்கள் நண்பர்களுடன்
          பகிர்ந்து கொள்ளலாம்.
      5:
        image: notes/hoc_poem_art_2021_celebration_05.jpg
        text: உங்கள் கற்பனையை விரித்து மகிழுங்கள்!
    hello_world_intro:
      1:
        image: notes/hoc_hello_world_2021_introduction_01.jpg
        text: வணக்கம்! என் பெயர் எரின், நான் இங்கே Code.org இல் ஒரு மென்பொருள் பொறியாளர்.
          நான் மிகவும் உற்சாகமாக இருக்கிறேன், ஏனென்றால் நீங்கள் செய்யவிருக்கும் டுடோரியலில்
          நான் வேலை செய்ய வேண்டும்! நாங்கள் அதை "ஹலோ வேர்ல்ட்" என்று அழைக்கிறோம்.
      2:
        image: notes/hoc_hello_world_2021_introduction_02.jpg
        text: '"ஹலோ வேர்ல்ட்" என்பது கணினி அறிவியலில் ஒரு பிரபலமான சொற்றொடர், மேலும்
          அந்த சொற்றொடரைக் காண்பிப்பது கணினி அறிவியலைக் கற்றுக்கொள்வதற்கான பொதுவான
          முதல் படியாகும். அடுத்த ஒரு மணி நேரத்தில், ஸ்ப்ரைட் லேப்பில் புரோகிராமிங்
          செய்து கணினி அறிவியலைத் தொடங்கப் போகிறீர்கள்.'
      3:
        image: notes/hoc_hello_world_2021_introduction_03.jpg
        text: ஸ்ப்ரைட் லேப் என்பது கற்பனை மற்றும் வேடிக்கையான திட்டங்களை உருவாக்க
          நீங்கள் பயன்படுத்தக்கூடிய ஒரு கருவியாகும். உங்கள் திரை மூன்று முக்கிய பகுதிகளாகப்
          பிரிக்கப்பட்டிருப்பதைக் காண்பீர்கள். இடதுபுறம் விளையாட்டு இடம். இங்குதான்
          உங்கள் உருவங்கள் வெளிப்படும்.
      4:
        image: notes/hoc_hello_world_2021_introduction_04.jpg
        text: கதை அல்லது கேமில் உள்ள பாத்திரம் அல்லது உருப்படி போன்றவற்றுடன் நீங்கள்
          தொடர்பு கொள்ளக்கூடிய திரையில் உள்ள பொருள்கள் ஸ்பிரைட்டுகள்.
      5:
        image: notes/hoc_hello_world_2021_introduction_05.jpg
        text: இந்த நடுத்தர பகுதி கருவிப்பெட்டி. நீங்கள் பாடங்களைப் படிக்கும்போது,
          புதிய குறியீடு தொகுதிகள் இந்த இடத்தில் கிடைக்கும்.
      6:
        image: notes/hoc_hello_world_2021_introduction_06.jpg
        text: வலதுபுறம் உள்ள இடம் பணியிடமாகும். உங்கள் நிரலை உருவாக்க, கருவிப்பெட்டியிலிருந்து
          மற்றும் பணியிடத்திற்கு தொகுதிகளை இழுக்கலாம்.
      7:
        image: notes/hoc_hello_world_2021_introduction_07.jpg
        text: ஒவ்வொரு நிலைக்கான வழிமுறைகள் இங்கே திரையின் மேற்புறத்தில் இருக்கும்.
          உங்களுக்கு குறிப்பு தேவைப்பட்டால், ஒளி விளக்கைக் கிளிக் செய்யவும்.
      8:
        image: notes/hoc_hello_world_2021_introduction_08.jpg
        text: தொடங்குவதற்கு, ஒரு மனிதனை உருவாக்குவோம்! இந்த பிளாக் உங்கள் ஸ்பிரிட்டுக்கு
          ஒரு ஆடை மற்றும் இருப்பிடத்தை வழங்க உதவுகிறது. ஆடை என்பது ஒரு மனிதனின் தோற்றத்தை
          விவரிக்க நாம் பயன்படுத்தும் சொல். ஸ்ப்ரைட்டின் இருப்பிடத்தை மாற்ற, இருப்பிடத்
          தொகுதியில் உள்ள பின் ஐகானைக் கிளிக் செய்து, அது எங்கு செல்ல வேண்டும் என்பதைக்
          கிளிக் செய்யலாம்.
      9:
        image: notes/hoc_hello_world_2021_introduction_09.jpg
        text: இப்போது ஸ்பிரைட் தன்னை அறிமுகப்படுத்திக் கொள்ளட்டும்! ஸ்பிரைட் ஏதாவது
          சொல்ல, இந்த "சே" பிளாக்கைப் பயன்படுத்தி, அதை உங்கள் நிரலில் சேர்க்கவும்.
          உங்கள் "சே" பிளாக்கில் தேர்ந்தெடுக்கப்பட்ட ஆடை உங்கள் ஸ்பிரைட்டில் உள்ள
          ஆடையுடன் பொருந்துகிறதா என்பதை உறுதிப்படுத்திக் கொள்ளுங்கள்.
      10:
        image: notes/hoc_hello_world_2021_introduction_10.jpg
        text: நீங்கள் "ரன்" என்பதை அழுத்தினால், நீங்கள் எந்த உரையைச் சொன்னாலும் ஸ்ப்ரைட்
          சொல்லும். இப்போது ஸ்ப்ரைட் லேப்பைத் தொடங்குவதற்கான நேரம் வந்துவிட்டது, மேலும்
          உங்கள் கற்பனை உங்களை எங்கு அழைத்துச் செல்கிறது என்பதைப் பார்க்கவும்!
    hello_world_events:
      1:
        image: notes/hoc_hello_world_2021_events_01.jpg
        text: ஸ்ப்ரைட் லேப்பைப் பயன்படுத்துவது எப்படி என்பதை இப்போது நீங்கள் கற்றுக்கொண்டீர்கள்,
          உங்கள் புரோகிராம் யாரேனும் விளையாடும் போது அதை செயல்பட வைக்க விரும்புகிறீர்கள்.
          அதைச் செய்ய, நீங்கள் நிகழ்வுகளைப் பயன்படுத்தப் போகிறீர்கள். ஒரு நிகழ்வு
          உங்கள் நிரலுக்கு ஏதாவது நடப்பதைக் கேட்கச் சொல்கிறது, பின்னர் உடனடியாக செயல்படுங்கள்.
      2:
        image: notes/hoc_hello_world_2021_events_02.jpg
        text: மவுஸ் கிளிக், அம்புக்குறி பொத்தான் அல்லது திரையில் தட்டுவது போன்ற நிகழ்வுகளின்
          சில எடுத்துக்காட்டுகள். "கிளிக் செய்யப்படும்போது" போன்ற தொகுதிகள் நிகழ்வுத்
          தொகுதிகள் எனப்படும். நிகழ்வுத் தொகுதியுடன் இணைக்கப்பட்ட குறியீடு பொருத்தமான
          செயலைக் கண்டறியும் போது இயங்கும்.
      3:
        image: notes/hoc_hello_world_2021_events_03.jpg
        text: எடுத்துக்காட்டாக, இந்த "சொல்" பிளாக்கை "கிளிக் செய்யப்படும் போது" நிகழ்வில்
          இணைத்தால், பயனர் கிளிக் செய்யும் போது அல்லது அதைத் தட்டும்போது எனது ஸ்பிரைட்
          ஏதாவது சொல்லும். நிகழ்வுத் தொகுதிகள் உங்கள் முக்கிய திட்டத்தில் சேராது என்பதைக்
          கவனியுங்கள். மாறாக, அவர்கள் சொந்தமாக சிறிய திட்டங்களை உருவாக்குகிறார்கள்.
      4:
        image: notes/hoc_hello_world_2021_events_04.jpg
        text: உங்களிடம் பல உருவங்கள் இருந்தால், ஊடாடும் கதையைச் சொல்ல கூடுதல் நிகழ்வுகளைப்
          பயன்படுத்தலாம்.
      5:
        image: notes/hoc_hello_world_2021_events_05.jpg
        text: ஸ்ப்ரைட்டின் அளவு அல்லது தோற்றத்தை மாற்றுவது, வெவ்வேறு பின்னணிகளை அமைப்பது,
          ஒலிகளை இயக்குவது மற்றும் பலவற்றை ஸ்ப்ரைட் ஆய்வகத்தில் எப்படி செய்வது என்று
          விரைவில் கற்றுக்கொள்வீர்கள். உங்கள் ஸ்பிரிட்களுடன் யாராவது தொடர்பு கொள்ளும்போது
          என்ன செய்ய வேண்டும் என்று விரும்புகிறீர்கள்? அது உன் இஷ்டம்!
    hello_world_congrats:
      1:
        image: notes/hoc_hello_world_2021_freeplay_01.jpg
        text: வாழ்த்துகள்! கணினி அறிவியலின் அடிப்படைகளை நீங்கள் இப்போதுதான் கற்றுக்கொண்டீர்கள்.
          இப்போது நீங்கள் ஸ்ப்ரைட் ஆய்வகத்தைப் பயன்படுத்தி நீங்கள் விரும்பியதை உருவாக்கலாம்.
      2:
        image: notes/hoc_hello_world_2021_freeplay_02.jpg
        text: ஆடைகள் என்று ஒரு பட்டனைக் காண்பீர்கள். நீங்கள் அதைக் கிளிக் செய்தால்,
          நூலகத்திலிருந்து புதிய ஸ்ப்ரைட் ஆடைகளைத் தேர்ந்தெடுக்கலாம்.
      3:
        image: notes/hoc_hello_world_2021_freeplay_03.jpg
        text: நீங்கள் சொந்தமாக வரையலாம்! நீங்கள் விரும்பும் உடையை நீங்கள் பெற்றவுடன்,
          உங்கள் குறியீட்டிற்குச் செல்லவும்.
      4:
        image: notes/hoc_hello_world_2021_freeplay_04.jpg
        text: இப்போது, உங்கள் ஸ்பிரைட்டுக்கு அந்த உடையைத் தேர்ந்தெடுக்கவும்.
      5:
        image: notes/hoc_hello_world_2021_freeplay_05.jpg
        text: நீங்கள் கருவிப்பெட்டியில் பார்த்தால், நீங்கள் இதுவரை பார்த்திராத சில
          புத்தம் புதிய தொகுதிகளைக் காணலாம். எடுத்துக்காட்டாக, வேடிக்கையான மற்றும்
          சுவாரஸ்யமான வழிகளில் உங்கள் உருவத்தை நகர்த்துவதற்கு உங்களை அனுமதிக்கும்
          பல நடத்தைத் தொகுதிகள் உள்ளன.
      6:
        image: notes/hoc_hello_world_2021_freeplay_06.jpg
        text: இரண்டு உருவங்கள் ஒன்றோடு ஒன்று மோதும்போது என்ன நடக்கும் என்பதைக் கட்டுப்படுத்த
          "தொடும்போது" நிகழ்வுத் தொகுதியைப் பயன்படுத்தலாம்.
      7:
        image: notes/hoc_hello_world_2021_freeplay_07.jpg
        text: '"விளைவை உருவாக்கு" தொகுதியைத் தேடுங்கள். இந்த சக்தி வாய்ந்த தொகுதியானது,
          கட்டளையின் பேரில் வெடிக்கும், அல்லது பாப், அல்லது மழை போன்ற உருவங்களை முழுவதுமாக
          உருவாக்க பயன்படுகிறது.'
      8:
        image: notes/hoc_hello_world_2021_freeplay_08.jpg
        text: சுற்றிப் பார்த்து, இந்தப் புதிய தொகுதிகள் மற்றும் அம்சங்களைப் பரிசோதித்துப்
          பார்க்கவும். டுடோரியலின் முடிவில், "பகிர்" பொத்தானைக் கிளிக் செய்து, உங்கள்
          படைப்புக்கான இணைப்பை உங்கள் நண்பர்களுடன் பகிர்ந்துகொள்ளவும்.
      9:
        image: notes/hoc_hello_world_2021_freeplay_09.jpg
        text: ஸ்ப்ரைட் லேப்பில் ஆப்ஸ், கேம்கள் மற்றும் பிற புதிய புரோகிராம்களை உருவாக்கத்
          தொடங்க தேவையான அனைத்து சக்திவாய்ந்த திறன்களும் உங்களிடம் உள்ளன! உங்கள் புதிய
          சக்திகளை நன்மைக்காகப் பயன்படுத்துங்கள். நீங்கள் காகிதத்தில் எதையாவது உருவாக்கினால்
          அல்லது நண்பருடன் பேசுவதைப் போலவே அன்பாகவும் மரியாதையாகவும் இருங்கள்.
      10:
        image: notes/hoc_hello_world_2021_freeplay_10.jpg
        text: எனவே நீங்கள் என்ன உருவாக்குவீர்கள்? உங்களைப் பற்றி நீங்கள் ஒரு கதையைச்
          சொல்லலாம்... அல்லது உங்கள் சொந்த சிறப்புக் கதாபாத்திரங்களைக் கொண்டு ஒன்றை
          உருவாக்கலாம். உங்கள் அடுத்த பள்ளித் திட்டத்திற்கு உங்கள் புதிய கணினி அறிவியல்
          திறன்களைப் பயன்படுத்தவும் கூடும்! உங்கள் கற்பனையை விரித்து மகிழுங்கள்!
