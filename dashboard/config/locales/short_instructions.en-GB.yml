---
en-GB:
  data:
    short_instructions:
      2-3 Artist 1 new: |-
        Hi, I'm an artist. You can write code to make
        me draw almost anything. Use a few blocks to make me draw over the grey lines
        in the picture. (Each line is 100 pixels long)
      2-3 Artist 11: "Give the stop sign a border by making an octagon\nwith 100 pixels
        sides. \r\n\r\n"
      2-3 Artist 12: "Create a circle to finish the eyeball!\r\n\r\nIf\nthe artist
        turns 1 degree with each loop, how many times do you need to repeat\nthe code
        to draw a circle? 180? 360? 500?"
      2-3 Artist 2 new: "This house has a half-finished wall. Each side\nis 100, but
        the half-finished wall is only 50. Complete the wall. "
      2-3 Artist 2: "This house has a half-finished wall. Each side\nis 100, but the
        half-finished wall is only 50. Complete the wall. "
      2-3 Artist 3.4: |-
        The jump block moves the artist without drawing.
        Draw the dashed line using both the `jump forward` and `move forward` blocks.
        Each line is 50 pixels long.
      2-3 Artist 3: |-
        This hat is 100 pixels high. Draw a hat that is
        70 pixels less.
      2-3 Artist 3new: "The red hat is 100 pixels tall. Finish drawing\na black hat
        that is 70 pixels shorter. \r\n(Note: The width of each hat is\n50 pixels.)"
      2-3 Artist 4: Help me complete the house for this cat.
      2-3 Artist 5: |-
        Replace this code with a "repeat times" block
        to draw the same house using only 3 blocks.
      2-3 Artist 6: |-
        This house needs a roof! Draw the triangle.  Hint:
        all three sides are the same length.
      2-3 Artist 7: "Finish drawing the last set of windows on the school\nso that
        everyone in class can see outside. The sides of each square window\npane are
        25 pixels long. "
      2-3 Artist 8: |-
        Complete the rooms for each of the animals by splitting
        the rectangle into 2 equal-sized squares. The rectangle is 200 pixels wide
        and 100 pixels tall. There are many different ways to solve this puzzle, so
        have some fun!
      2-3 Artist 9 NEW: Finish this kite
      2-3 Artist 9 REPLACEMENT: Finish drawing these stairs!
      2-3 Artist 9: Finish this kite
      2-3 Artist Assessment 1: |-
        Assessment: Finish drawing the last tooth.
        It is 25 pixels wide and 25 pixels tall.
      2-3 Artist Debugging 1: |-
        This hat should only be 50 pixels wide.  Can
        you fix it?
      2-3 Artist Debugging 10: "The direction pad on my game controller\nis too narrow.
        \r\n\r\nCan you make it wider by 10 pixels?\r\n\r\nTry running\nthe code first
        to see what's wrong."
      2-3 Artist Debugging 11: "My snowflake is falling apart!\r\n\r\nCan\nyou figure
        out what's going wrong?"
      2-3 Artist Debugging 12: |-
        I'm supposed to add an ocean wave to
        this scene.  Can you help me?
      2-3 Artist Debugging 2: "This code for the cat's whiskers is wrong.\n\r\n\r\nFix
        this code to draw whiskers that are all the same length."
      2-3 Artist Debugging 3: "My boat has a hole! \r\n\r\nWhat do you\nneed to fix
        to make the ends meet?"
      2-3 Artist Debugging 5: "The code that we have for the leg and\nfoot is wrong.
        \r\n\r\nCan you fix it?"
      2-3 Artist Debugging 6: "Looks like I'm sitting on a chair thatâ€™s\nmissing a
        leg!\r\n\r\nEdit the code to draw the last leg."
      2-3 Artist Debugging 7: "Looks like the C in code is drawn backwards!\r\n\r\nCan\nyou
        make it look like a C again?"
      2-3 Artist Debugging 8: "My teacher says that I should finish what\nI start!\r\n\r\nHelp
        me finish my pinwheel. Can you figure out what's wrong?"
      2-3 Artist Debugging 9: "Something is off!\r\n\r\nThe code for\nthis stem is
        wrong. Can you figure out how to get the artist to trace the\nstem the right
        way?"
      2-3 Artist Debugging Assessment 1: "Assessment: Why does this square\nend up
        being 75 pixels too small on each side?  \r\n\r\nWhere does the code\ngo wrong?"
      2-3 Artist Free Play: Free-play! Draw anything you'd like.
      2-3 Artist Functions 1 a: "\"Me zombie artist. Me love drawing!\"  \r\n\r\nHelp\nthe
        zombie draw square glasses.  \r\n\r\nThe bridge between the glasses is\n25
        pixels shorter than the width of the squares, which is 100 pixels."
      2-3 Artist Functions 1: "\"Me zombie artist. Me love drawing!\"  \r\n\r\nHelp\nthe
        zombie draw square glasses.  \r\n\r\nThe bridge between the glasses is\n25
        pixels shorter than the width of the squares, which is 100 pixels."
      2-3 Artist Functions 10: |-
        Freeplay: Here are two functions, one
        to draw a big gear and one to draw a small gear. Use them to draw the inside
        of a machine!
      2-3 Artist Functions 11 a: "We've renamed the `draw a square` function\nto `draw
        a hexagon`, but it's still giving us squares! Can you modify the\n`draw a
        hexagon` function to draw a hexagon with 50 pixel sides? \r\n\r\nDraw\nthe
        image using the new function!"
      2-3 Artist Functions 11.5 a: "Here's that same `draw a hexagon`\nfunction. \r\n\r\nWhat
        happens if you loop the main program 6 times, turning\n60 degrees each time
        you loop?"
      2-3 Artist Functions 11.5: "Here's that same `draw a hexagon`\nfunction. \r\n\r\nWhat
        happens if you loop the main program 6 times, turning\n60 degrees each time
        you loop?"
      2-3 Artist Functions 11: "We've renamed the `draw a square` function\nto `draw
        a hexagon`, but it's still giving us squares! Can you modify the\n`draw a
        hexagon` function to draw a hexagon with 50 pixel sides? \r\n\r\nDraw\nthe
        image using the new function!"
      2-3 Artist Functions 12 Mike: "Functions are really great for drawing\ncomplex
        things multiple times. \r\n\r\nCan you use the `draw a flower` function\nto
        fill the rest of the planter box?\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 12 a: "Functions are really great for drawing\ncomplex
        things multiple times. \r\n\r\nCan you use the `draw a flower` function\nto
        fill the rest of the planter box?\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 12: "Functions are really great for drawing\ncomplex things
        multiple times. \r\n\r\nCan you use the `draw a flower` function\nto fill
        the rest of the planter box?\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 13: |-
        We've provided you with four functions.
        Use them any way you like inside of one or more loops to make pictures that
        you can share with your friends. Press run to see an example.
      2-3 Artist Functions 2: "Functions let you define new blocks! \r\n\r\nWe've\nmoved
        the blocks needed for drawing a square into a function called `draw\na square`.
        This time, use the `draw a square` function to create the glasses.\n\r\n\r\nThe
        squares are 75 pixels apart."
      2-3 Artist Functions 3: "Edit the function to draw a square with\na side length
        of 115 to draw the bigger glasses. \r\n\r\nThe squares are now\n45 pixels
        apart."
      2-3 Artist Functions 4: |-
        Now, put the function inside of a loop
        to draw these three squares.
      2-3 Artist Functions 9: |-
        Freeplay: Here is a snowflake function.
        Experiment with it to create a winter scene! This is a free play level, so
        there is no puzzle to solve. Have fun!
      2-3 Artist Loops 11: |-
        Now let's put *another* loop around our
        whole creation!  Don't forget to add an angle at the end of the outer loop.
      2-3 Artist Loops 4: |-
        Want to see what happens when we repeat that
        shape over and over again using a loop?
      2-3 Artist Loops 8: Let's put both elements inside a loop.
      2-3 Artist Loops New 1: |-
        Let's draw this robot's head! Can you
        make a square with sides that are 100 pixels?
      2-3 Artist Loops New 10: |-
        Now let's connect a bunch of V's together
        in a loop.
      2-3 Artist Loops New 11: |-
        Rebuild the code from the last puzzle,
        but this time, add a left turn of 30 degrees inside the loop. Now, repeat
        it 24 times instead of 8.
      2-3 Artist Loops New 12: 'Draw a diamond with sides of 100 pixels.

'
      2-3 Artist Loops New 13: "We are going to start you with some code\n(in grey)
        to make one diamond. \r\n\r\nLoop the grey code to create a fun\npattern!"
      2-3 Artist Loops New 14: |-
        Play around with the code for the diamond
        and see what other patterns you can make. Try changing how many degrees you
        turn and how many times you loop.
      2-3 Artist Loops New 15: Now, draw anything you like!
      2-3 Artist Loops New 2: "Here is the same puzzle that we just solved,\nbut this
        time, we can only use one `move forward` block and one `turn` block\nthis
        time.\r\n\r\nCan you use a `repeat` to solve this puzzle?"
      2-3 Artist Loops New 9: |-
        Draw a simple V (where both sides are
        50 pixels) to complete the arrow.
      2-3 Bee Functions 8: |-
        Create your own function that gets 7 nectar,
        moves forward, and makes 7 honey. Use the function to collect nectar at each
        flower and make honey at each honeycomb.
      2-3 Bee Functions 9: |-
        Create your own function that goes down a
        path, gets nectar, makes honey, and then returns the bee to the top of the
        path.
      2-3 Bee Functions Assessment 1: |-
        Assessment: Use the given function
        to collect nectar from each flower.
      2-3 Bee Functions Assessment 2: |-
        Assessment: Create a function
        to turn, move forward and make 3 honey, then return the bee to where it started
        and turn back.
      2-3 Bee Loops 1: "Those flowers look tasty!\r\n\r\nCollect nectar\nfrom each
        of the flowers using the fewest blocks possible."
      2-3 Bee Loops 10: |-
        Can you use a while loop inside of two other
        loops to collect all of the nectar?
      2-3 Bee Loops 11: |-
        Use while loops to collect all of the nectar
        from the flowers in this field.
      2-3 Bee Loops 12: |-
        Use while loops to collect all of the nectar
        from the flowers in this field.
      2-3 Bee Loops 13: |-
        Assessment: Collect all of the nectar using
        the fewest blocks possible.
      2-3 Bee Loops 1A: "Hi, I'm a bee. Can you help me collect the\nnectar from these
        flowers? "
      2-3 Bee Loops 2: |-
        Collect all the nectar and make all of the honey
        using the fewest blocks possible.
      2-3 Bee Loops 2A: This time, use a loop to gather all of the nectar.
      2-3 Bee Loops 3: |-
        Collect nectar from each flower and make honey
        at each honeycomb using the fewest blocks possible.
      2-3 Bee Loops 3A: Use a `repeat` loop to collect all of the nectar.
      2-3 Bee Loops 3B: |-
        Now use the `repeat` block to collect all of
        the nectar and make all of the honey.
      2-3 Bee Loops 4: "Such a busy bee!\r\n\r\nHelp bee collect all\nof the nectar
        and make all of the honey with the fewest blocks possible."
      2-3 Bee Loops 4A: "How many times can loops help you in this puzzle?  \r\n\r\nLoops\nare
        your friend! Use a few of them to complete this puzzle with the fewest\nblocks
        possible."
      2-3 Bee Loops 5: "The shape of this path is different than the\nothers. \r\n\r\nCan
        you collect all of the nectar using as few blocks as possible?"
      2-3 Bee Loops 6: |-
        Can you find the quickest way for the bee to
        collect all of the nectar and make all of the honey?
      2-3 Bee Loops 7: |-
        What a beautiful field of flowers!   Help the
        bee visit each one.  Can you find a way to do it with fewer than 7 blocks?
      2-3 Bee Loops 8: "These purple flowers have a different amount of\nnectar each
        time you run the puzzle. \r\n\r\nUse the `while nectar` loop to\ncollect all
        of the nectar. \r\n\r\nThis loop will run as long as the condition\nis true,
        in this case `nectar > 0`."
      2-3 Bee Loops Assessment 1: |-
        Assessment: Use a `while` loop to
        collect all of the nectar from these flowers.
      2-3 Maze 1: "Can you help me catch the naughty pig? Stack a couple\nof `move
        forward` blocks below the `when run` block and press \"Run\". "
      2-3 Maze 11: |-
        Get me to the flower I'm hungry! How many times
        do you have to repeat a block?
      2-3 Maze 12 (old): |-
        Get me to the pig, now with the Repeat times
        block!
      2-3 Maze 12 - One Move Block: |-
        Get to the pig! But this time, you
        can only use one `move forward` block. Do you see any other blocks that could
        help you?
      2-3 Maze 12: |-
        Can you get to the pig by creating a loop that uses
        only one `move forward` block inside of a `repeat`?
      2-3 Maze 13 (old): |-
        Get me to the pig, now with the Repeat until
        block!
      2-3 Maze 13: |-
        Get me to the pig! You can only use one move forward
        block this time
      2-3 Maze 14 (old): Get me to the pig with the Repeat until block!
      2-3 Maze 14: |-
        Get me to the sunflower! (Where is that "repeat
        times" block when I need it?)
      2-3 Maze 15 (old): Get me to the pig with the Repeat until block!
      2-3 Maze 15: |-
        In this puzzle, two `repeat` loops will help you
        get to the pig with the fewest number of blocks!
      2-3 Maze 16 (old): Get me to the pig with the Repeat until block!
      2-3 Maze 16 before: |-
        Can you figure out the fastest way to get
        me to the pig?
      2-3 Maze 16: |-
        Loops even work with more than one block inside!  Can
        you loop this sequence to get the zombie to the sunflower?
      2-3 Maze 2: This pig is ruffling my feathers. Help me get to him!
      2-3 Maze 3: |-
        Trace the path and lead me to the silly pig. Avoid
        TNT or feathers will fly!
      2-3 Maze 6: |-
        Keep calm and help me find the bad pig. Otherwise
        I might get angry!
      2-3 Maze 8: Get me to the pig!
      2-3 Maze Loops 1: |-
        Can you get me to the pig using 5 of the same
        kind of blocks?
      2-3 Maze Loops 17: Use what you learned to get me to the sunflower!
      2-3 Maze Loops 18: "Get me to the sunflower using the fewest blocks\npossible!
        \ \r\n\r\nTry using one `repeat` loop inside of another to cut down\non the
        amount of code you need."
      2-3 Maze Loops 19: "Let's take this to another level! \r\nUse\nloops to get
        me to the sunflower with the fewest loops possible."
      2-3 Maze Loops 20: |-
        Get me to the sunflower using the fewest number
        of blocks possible!
      2-3 Maze Loops 21: |-
        Get me to the sunflower using the fewest blocks
        possible!
      2-3 Maze Loops Assessment 1: "Assessment:  Get me to the sunflower\nusing only
        5 blocks! "
      2-3 Maze sq4: |-
        Keep calm and help me find the bad pig. Otherwise
        I might get angry!
      2-3 maze sq13: |-
        Dear person. Me zombie. Must... get... to sunflower.
        Create loop with "repeat until" block.
      4-5 Maze 13: Get me to the pig!
      4-5 Maze 6: |-
        Get me to the sunflower using the fewest number
        of blocks possible!
      App Lab test: test
      Artist Autorun Test: |-
        Now, put the function inside of a loop
        to draw these three squares.
      Bergeron Robot Maze1: "Can you help me catch the naughty pig? Stack a couple\nof
        `move forward` blocks below the `when run` block and press \"Run\". "
      Course 2 Bee Loops 1: "Hi, I'm a bee. Can you help me collect the\nnectar from
        these flowers? "
      Course E MC Conditionals1: Youâ€™ll find the most valuable resources underground,
        but it can get dark. Place at least 2 torches and mine at least 2 coal.
      Function intro Ryan: Use the `build bridge` function twice to make a path to
        the torch.
      Function intro Ryan_2019: Use the `build bridge` function twice to make a path
        to the torch.
      HOC 2018 Level_11: Build a conduit with Prismarine inside the Ocean Monument.
      HOC 2018 Level_12: Design your own underwater environment, itâ€™s up to you!
      HOC 2018 Level_2: Head to the end of the dock.
      HOC 2018 Level_3: Head across the open seas to the cod.
      HOC 2018 Level_9b: Use the coral as waypoints to reach the treasure.
      K-1 Maze Loops 1: Get me to the pig!
      K-1 Maze Loops 4: Get me to the pig!
      K-1 Maze Loops 9: Get me to the pig!
      Kiki_StarWars_Test_3: Text
      Kiki_StarWars_Test_4: Text
      Kiki_StarWars_Test_5: Text
      Kiki_StarWars_Test_5_Example: Text
      MC_HOC_2017_01_Cole: You need to collect all the tools on this journey. Move
        around using the **arrow keys**, and get to the chest on the path to win
      MC_HOC_2017_01_RETRY: 'Get the Agent to the pressure plate, then press "Run"
        and use the arrow keys to move the player out of the house to collect the
        chest. '
      MC_HOC_2017_01_RETRY_2019: 'Get the Agent to the pressure plate, then press
        "Run" and use the arrow keys to move the player out of the house to collect
        the chest. '
      MC_HOC_2017_02_Cole: 'Move the Agent to the pressure plate so that {currentPlayerName}
        can get to the map. '
      MC_HOC_2017_02_Cole_2019: 'Move the Agent to the pressure plate so that {currentPlayerName}
        can get to the map. '
      MC_HOC_2017_02_Kiki: Get the Agent to the pressure plate, then get the player
        to the orange square.
      MC_HOC_2017_04: Change the loop from the last puzzle to help the Agent make
        a path over the wider part of this river.
      MC_HOC_2017_05: Use a function to help the Agent get to the pressure plate.
      MC_HOC_2017_06_Cole: Fix this code to get the Agent to build a bridge across
        this river.
      MC_HOC_2017_06_Cole_2019: Fix this code to get the Agent to build a bridge across
        this river.
      MC_HOC_2017_06_Josh: Fix this code to help the Agent build a bridge across this
        river.
      MC_HOC_2017_06_Kiki: Fix this code to help the Agent build a bridge across this
        river.
      MC_HOC_2017_07_Cole: Destroy the ice and get {currentPlayerName} to the Minecart.
      MC_HOC_2017_07_Cole_2019: Destroy the ice and get {currentPlayerName} to the
        Minecart.
      MC_HOC_2017_07_Kiki: Use a function to clear the path to the orange square.
      MC_HOC_2017_08_Cole: Change the provided function to work for this biome.
      MC_HOC_2017_08_RY: Use the functions to find a way across the lava.
      MC_HOC_2017_08_Will: Use the functions to find a way across the lava.
      MC_HOC_2017_09_Cole: Program the Agent to clear the player's path.
      MC_HOC_2017_09_Kiki: Program the Agent to clear the player's path and get to
        the pressure plate.
      MC_HOC_2017_10_Cole: Create a function to help you finish this minecart.
      MC_HOC_2017_10_Cole_old: Create a function to help you finish this minecart.
      MC_HOC_2017_10_Kiki: Create a function to help you finish this minecart.
      MC_HOC_2017_10_RETRY: Create a function to help you finish this minecart.
      MC_HOC_2017_10_RETRY_2019: Create a function to help you finish this minecart.
      MC_HOC_2017_10_RYAN: Create a function to help you finish this minecart.
      MC_HOC_2017_10_RYAN2: Create a function to help you finish this minecart.
      MC_HOC_2017_Ali: Use the functions to find a way across the lava.
      MC_HOC_2017_Ali_2019: Use the functions to find a way across the lava.
      MC_HOC_2017_FP10x10: "**Freeplay:** Can you challenge yourself to collect all
        of the diamonds in this level? "
      MC_HOC_2017_FP10x10_RE: "**Freeplay:** Can you challenge yourself to collect
        all of the diamonds in this level? "
      MC_HOC_2017_Ryan_03: Now use loops to help The Agent build a bridge over the
        river by placing blocks in the water.
      MC_HOC_2017_Ryan_05: Destroy these cacti so that the player can get to the goal.
      Overworld Avoid Monsters: Running into a Creeper is a bad idea. Carefully move
        past the Creepers and reach the safety of your home.
      Overworld Avoid Monsters_2018: Running into a Creeper is a bad idea. Carefully
        move past the Creepers and reach the safety of your home.
      Overworld Avoid Monsters_2019: Running into a Creeper is a bad idea. Carefully
        move past the Creepers and reach the safety of your home.
      Overworld Chop Tree - allthethings: Wood is a very important resource. Many
        things are made from it. Walk to the tree and use the "destroy block" command
        to chop it down.
      Overworld Chop Tree: Wood is a very important resource. Many things are made
        from it. Walk to the tree and use the "destroy block" command to chop it down.
      Overworld Chop Tree_2018: Wood is a very important resource. Many things are
        made from it. Walk to the tree and use the "destroy block" command to chop
        it down.
      Overworld Chop Tree_2019: Wood is a very important resource. Many things are
        made from it. Walk to the tree and use the "destroy block" command to chop
        it down.
      Overworld Chop Trees: We need to build a house before the sun goes down. Houses
        require a lot of wood. Cut down all 3 trees.
      Overworld Chop Trees_2018: We need to build a house before the sun goes down.
        Houses require a lot of wood. Cut down all 3 trees.
      Overworld Chop Trees_2019: We need to build a house before the sun goes down.
        Houses require a lot of wood. Cut down all 3 trees.
      Overworld Free Play 20x20: Congratulations! You've completed all our puzzles!
        Now mine, build, and create something unique by using everything you've learned
        so far.
      Overworld Free Play 20x20_2018: Congratulations! You've completed all our puzzles!
        Now mine, build, and create something unique by using everything you've learned
        so far.
      Overworld Free Play 20x20_2019: Congratulations! You've completed all our puzzles!
        Now mine, build, and create something unique by using everything you've learned
        so far.
      Overworld Move to Sheep: Add a second "move forward" command to reach the sheep.
      Overworld Move to Sheep_2018: Add a second "move forward" command to reach the
        sheep.
      Overworld Move to Sheep_2019: Add a second "move forward" command to reach the
        sheep.
      Overworld Place Wall: Every house starts with a wall. Build the first part of
        your house by putting the "place" and "move forward" commands inside the repeat
        loop.
      Overworld Place Wall_2018: Every house starts with a wall. Build the first part
        of your house by putting the "place" and "move forward" commands inside the
        repeat loop.
      Overworld Place Wall_2019: Every house starts with a wall. Build the first part
        of your house by putting the "place" and "move forward" commands inside the
        repeat loop.
      Overworld Plant Crops: Itâ€™s good to plan ahead. Plant crops on both sides of
        the water so you donâ€™t get hungry later on.
      Overworld Plant Crops_2018: Itâ€™s good to plan ahead. Plant crops on both sides
        of the water so you donâ€™t get hungry later on.
      Overworld Plant Crops_2019: Itâ€™s good to plan ahead. Plant crops on both sides
        of the water so you donâ€™t get hungry later on.
      Overworld Powered Minecart: Great job! Youâ€™ve gathered lots of resources and
        built a modest home. Now lay rail from the edge of the map to the door of
        your house.
      Overworld Powered Minecart_2018: Great job! Youâ€™ve gathered lots of resources
        and built a modest home. Now lay rail from the edge of the map to the door
        of your house.
      Overworld Powered Minecart_2019: Great job! Youâ€™ve gathered lots of resources
        and built a modest home. Now lay rail from the edge of the map to the door
        of your house.
      Overworld Shear Sheep: Sheep-shearing time! Use the "shear" command to gather
        wool from both sheep.
      Overworld Shear Sheep_2018: Sheep-shearing time! Use the "shear" command to
        gather wool from both sheep.
      Overworld Shear Sheep_2019: Sheep-shearing time! Use the "shear" command to
        gather wool from both sheep.
      Underground Avoiding Lava: Lava is hiding beneath some of these blocks, which
        you'll need to cover up before moving forward. An "if" command will come in
        handy here. Add a "move forward" command in the correct place to mine these
        blocks.
      Underground Avoiding Lava_2018: Lava is hiding beneath some of these blocks,
        which you'll need to cover up before moving forward. An "if" command will
        come in handy here. Add a "move forward" command in the correct place to mine
        these blocks.
      Underground Avoiding Lava_2019: Lava is hiding beneath some of these blocks,
        which you'll need to cover up before moving forward. An "if" command will
        come in handy here. Add a "move forward" command in the correct place to mine
        these blocks.
      Underground If Statements: Now things are getting tricky. Mine 3 redstone, but
        donâ€™t fall into the lava. Use an "If" command to place cobblestone over any
        lava you uncover.
      Underground If Statements_2018: Now things are getting tricky. Mine 3 redstone,
        but donâ€™t fall into the lava. Use an "If" command to place cobblestone over
        any lava you uncover.
      Underground If Statements_2019: Now things are getting tricky. Mine 3 redstone,
        but donâ€™t fall into the lava. Use an "If" command to place cobblestone over
        any lava you uncover.
      Underground Iron: Walking into molten lava is a bad idea. Place cobblestone
        to create a bridge, then mine at least two of the iron blocks.
      Underground Iron_2018: Walking into molten lava is a bad idea. Place cobblestone
        to create a bridge, then mine at least two of the iron blocks.
      Underground Iron_2019: Walking into molten lava is a bad idea. Place cobblestone
        to create a bridge, then mine at least two of the iron blocks.
      Underground Mining Coal: Youâ€™ll find the most valuable resources underground,
        but it can get dark. Place at least 2 torches and mine at least 2 coal.
      Underground Mining Coal_2018: Youâ€™ll find the most valuable resources underground,
        but it can get dark. Place at least 2 torches and mine at least 2 coal.
      Underground Mining Coal_2019: Youâ€™ll find the most valuable resources underground,
        but it can get dark. Place at least 2 torches and mine at least 2 coal.
      beeDebugVideo1: Use a `repeat` loop to collect all of the nectar.
      birdsDebugVideo1: |-
        Trace the path and lead me to the silly pig. Avoid
        TNT or feathers will fly!
      grade2_CaringForNewPet_10: Get me to the pig!
      grade2_CaringForNewPet_5: Get me to the pig!
      grade2_MakeDogTag_10: Now, draw anything you like!
      grade2_MakeDogTag_8: |-
        Now let's connect a bunch of V's together
        in a loop.
      grade2_MakeDogTag_9: |-
        Rebuild the code from the last puzzle,
        but this time, add a left turn of 30 degrees inside the loop. Now, repeat
        it 24 times instead of 8.
      grade2_PuppyLoops_1: |-
        Can you get me to the pig using 5 of the same
        kind of blocks?
      grade2_PuppyLoops_10: "My teacher says that I should finish what\nI start!\r\n\r\nHelp
        me finish my pinwheel. Can you figure out what's wrong?"
      grade2_PuppyLoops_2: |-
        Can you get to the pig by creating a loop that uses
        only one `move forward` block inside of a `repeat`?
      grade2_PuppyLoops_4: |-
        In this puzzle, two `repeat` loops will help you
        get to the pig with the fewest number of blocks!
      grade2_PuppyLoops_5: |-
        Can you figure out the fastest way to get
        me to the pig?
      grade2_PuppyLoops_7: Use what you learned to get me to the sunflower!
      grade2_PuppyLoops_8: "This code for the cat's whiskers is wrong.\n\r\n\r\nFix
        this code to draw whiskers that are all the same length."
      grade2_PuppyLoops_9: "Looks like the C in code is drawn backwards!\r\n\r\nCan\nyou
        make it look like a C again?"
      grade2_puppy_loops2: |-
        Can you get to the pig by creating a loop that uses
        only one `move forward` block inside of a `repeat`?
      grade2_puppy_loops4: |-
        In this puzzle, two `repeat` loops will help you
        get to the pig with the fewest number of blocks!
      grade3_Conditionals_11 BAD: |-
        Assessment: Use a `while` loop to
        collect all of the nectar from these flowers.
      grade3_Loops_10: "Such a busy bee!\r\n\r\nHelp bee collect all\nof the nectar
        and make all of the honey with the fewest blocks possible."
      grade3_Loops_11: "The shape of this path is different than the\nothers. \r\n\r\nCan
        you collect all of the nectar using as few blocks as possible?"
      grade3_Loops_12: |-
        Can you find the quickest way for the bee to
        collect all of the nectar and make all of the honey?
      grade3_Loops_2: This time, use a loop to gather all of the nectar.
      grade3_Loops_3: Use a `repeat` loop to collect all of the nectar.
      grade3_Loops_4: |-
        Now use the `repeat` block to collect all of
        the nectar and make all of the honey.
      grade3_Loops_5: |-
        What a beautiful field of flowers!   Help the
        bee visit each one.  Can you find a way to do it with fewer than 7 blocks?
      grade3_Loops_6: "How many times can loops help you in this puzzle?  \r\n\r\nLoops\nare
        your friend! Use a few of them to complete this puzzle with the fewest\nblocks
        possible."
      grade3_Loops_7: "Those flowers look tasty!\r\n\r\nCollect nectar\nfrom each
        of the flowers using the fewest blocks possible."
      grade3_Loops_8: |-
        Collect all the nectar and make all of the honey
        using the fewest blocks possible.
      grade3_Loops_9: |-
        Collect nectar from each flower and make honey
        at each honeycomb using the fewest blocks possible.
      grade3_Loops_TeacherIDo: "Those flowers look tasty!\r\n\r\nCollect nectar\nfrom
        each of the flowers using the fewest blocks possible."
      grade3_maze_Loop1: "Assessment:  Get me to the sunflower\nusing only 5 blocks! "
      grade3_maze_loops5: |-
        Get me to the sunflower using the fewest blocks
        possible!
      grade3_maze_nestedLoops1: |-
        Can you get me to the pig using 5 of the same
        kind of blocks?
      grade3_maze_nestedLoops2: |-
        Can you get to the pig by creating a loop that uses
        only one `move forward` block inside of a `repeat`?
      grade3_maze_nestedLoops3: |-
        Get me to the pig! You can only use one move forward
        block this time
      grade3_maze_nestedLoops4: |-
        In this puzzle, two `repeat` loops will help you
        get to the pig with the fewest number of blocks!
      grade4_artist_functions2: "Functions let you define new blocks! \r\n\r\nWe've\nmoved
        the blocks needed for drawing a square into a function called `draw\na square`.
        This time, use the `draw a square` function to create the glasses.\n\r\n\r\nThe
        squares are 75 pixels apart."
      grade4_review_artist1: |-
        Hi, I'm an artist. You can write code to make
        me draw almost anything. Use a few blocks to make me draw over the grey lines
        in the picture. (Each line is 100 pixels long)
      grade4_review_artist2: |-
        This house needs a roof! Draw the triangle.  Hint:
        all three sides are the same length.
      grade4_review_artist3: |-
        The jump block moves the artist without drawing.
        Draw the dashed line using both the `jump forward` and `move forward` blocks.
        Each line is 50 pixels long.
      grade4_review_bee1: |-
        Now use the `repeat` block to collect all of
        the nectar and make all of the honey.
      grade4_review_bee2: |-
        Collect nectar from each flower and make honey
        at each honeycomb using the fewest blocks possible.
      grade4_review_bee3: "Such a busy bee!\r\n\r\nHelp bee collect all\nof the nectar
        and make all of the honey with the fewest blocks possible."
      level 'grade3_Loops_10: "Such a busy bee!\r\n\r\nHelp bee collect all\nof the
        nectar and make all of the honey with the fewest blocks possible."
      level 'grade3_Loops_11: "The shape of this path is different than the\nothers.
        \r\n\r\nCan you collect all of the nectar using as few blocks as possible?"
      level 'grade3_Loops_12: |-
        Can you find the quickest way for the bee to
        collect all of the nectar and make all of the honey?
      level 'grade3_Loops_2: This time, use a loop to gather all of the nectar.
      level 'grade3_Loops_3: Use a `repeat` loop to collect all of the nectar.
      level 'grade3_Loops_4: |-
        Now use the `repeat` block to collect all of
        the nectar and make all of the honey.
      level 'grade3_Loops_5: |-
        What a beautiful field of flowers!   Help the
        bee visit each one.  Can you find a way to do it with fewer than 7 blocks?
      level 'grade3_Loops_6: "How many times can loops help you in this puzzle?  \r\n\r\nLoops\nare
        your friend! Use a few of them to complete this puzzle with the fewest\nblocks
        possible."
      level 'grade3_Loops_7: "Those flowers look tasty!\r\n\r\nCollect nectar\nfrom
        each of the flowers using the fewest blocks possible."
      level 'grade3_Loops_8: |-
        Collect all the nectar and make all of the honey
        using the fewest blocks possible.
      level 'grade3_Loops_9: |-
        Collect nectar from each flower and make honey
        at each honeycomb using the fewest blocks possible.
      level grade3_Loops_2: This time, use a loop to gather all of the nectar.
