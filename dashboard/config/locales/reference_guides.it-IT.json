{
  "it-IT": {
    "data": {
      "reference_guides": {
        "csd-2022/accelerometer-events": {
          "display_name": "Eventi dell'accelerometro",
          "content": "Proprio come gli altri sensori, l'accelerometro disponde degli eventi `data` e `change`. Questi sono particolarmente utili perché permettono di tenere costantemente traccia dei valori aggiornati dell'accelerometro, come l'orientamento.\n\n| Evento   | Descrizione                                                                                                                                                                                                                                       |\n| -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `data`   | Si attiva ogni 100 ms per controllare i dati dall'accelerometro.                                                                                                                                                                                  |\n| `change` | Si attiva ogni volta che l'accelerometro rileva un cambiamento nel movimento. Questo controlla se i dati correnti dal sensore sono gli stessi di 100 ms fa. Se questo è il caso, l'evento non si attiverà. In caso contrario, l'evento si attiva. |\n| `shake`  | Si attiva ogni volta che la scheda viene scossa.                                                                                                                                                                                                  |\n\nA volte non ci interessa quale sia l'orientamento della scheda, ci importava solo che si muovesse. È qui che entrano in gioco eventi come \"change\" e \"shake\". "
        },
        "csd-2022/accuracy-in-ai-lab": {
          "display_name": "L'accuratezza e il Laboratorio IA",
          "content": "## Accuratezza nel laboratorio di intelligenza artificiale\n\n<img style=\"margin-right: 10px; margin-left: 10px; bordo: 2px nero pieno\" src=\"https://curriculum.code.org/media/uploads/03-Evaluating-Accuracy---Categorical- --a.png\"/>\n\n[diagram_nums]\n\n1.  La riga superiore è il punteggio di accuratezza per il tuo modello più recente in Laboratorio IA. Vedi sotto per ulteriori informazioni su come viene calcolata l'accuratezza.\n2.  Puoi anche visualizzare i modelli precedenti che hai addestrato in Laboratorio IA. Questi possono aiutarti a notare i modelli e ricordare quali caratteristiche hanno portato ai modelli più accurati.\n3.  Fare clic sul pulsante Dettagli per visualizzare ulteriori informazioni sull'andamento del modello\n\n[/diagram_nums]\n\n## Come viene calcolata l'accuratezza?\n\n<div style=\"height: 250px\">\n<img style=\"float:left; margin-right: 10px; margin-left: 10px; border: 2px solid black\" src=\"https://curriculum.code.org/media/uploads/image_81IyXga.png\" width=\"50%\" />\n<p>\nDopo aver selezionato le etichette e le caratteristiche, i dati vengono automaticamente suddivisi in due sezioni: <strong>Dati di addestramento</strong> e <strong>Dati di test</strong>.\n</p>\n<p>\nI <strong>dati di addestramento</strong> sono ciò che Bot IA utilizza per cercare schemi che lo aiutino a prendere decisioni. Poiché Bot IA ha bisogno di molti dati per prendere decisioni, utilizza il 90% del set di dati originale per l'addestramento. I <strong>Dati di test</strong> vengono tenuti nascosti da Bot IA fino al termine dell'addestramento.\n</p>\n</div>\n\n<div style=\"height: 250px\">\n<img style=\"float:right; margin-right: 10px; margin-left: 10px; border: 2px solid black\" src=\"https://curriculum.code.org/media/uploads/image_EygFTNF.png\" width=\"50%\" />\n<p>\nUna volta terminato l'addestramento, Bot IA esamina i <strong>Dati di test</strong> in modo da poter confrontare le sue previsioni con i dati originali. È come studiare per un test esaminando le domande pratiche di cui conosci le risposte: provi tu stesso le domande, poi controlli le tue risposte per vedere quanto sei andato bene.\n</p>\n<p>\nQuesto è il modo in cui otteniamo il nostro punteggio di accuratezza: è quanto bene hanno fatto le previsioni di Bot IA quando le confrontiamo con i dati nel set di dati originale. Se Bot IA ha ottenuto la maggior parte delle risposte corrette, allora possiamo essere certi che Bot IA abbia trovato i modelli che corrispondono ai nostri dati originali.\n</p>\n</div>\n\n## Quanto è importante la accuratezza?\n\nL'accuratezza può fare un buon lavoro nel verificare se il tuo modello di machine learning ha avuto successo nel trovare schemi nei tuoi dati, ma questo non significa sempre che il tuo modello sia pronto per iniziare a risolvere i problemi nel mondo reale. Un punteggio elevato di accuratezza non significa che il tuo modello farà un buon lavoro nel mondo reale con utenti reali, significa solo che ha fatto un buon lavoro <em>con i dati che già avevi</em>. Se ci sono stati problemi con i tuoi dati, ci saranno ancora problemi con il tuo modello.\n\n## Video\n\n(Apre YouTube in una nuova scheda)\n\n[![Addestramento e verifica in Laboratorio IA](https://curriculum.code.org/media/uploads/Capture_5J2wlZi.PNG)](https://www.youtube.com/watch?v=Pm70TO--ee4)"
        },
        "csd-2022/ai-lab": {
          "display_name": "Laboratorio IA"
        },
        "csd-2022/analog-sensors": {
          "display_name": "Sensori di Circuit Playground",
          "content": "## Luce, suono e temperatura\n\nIl Circuit Playground ha tre sensori analogici di base, ognuno dei quali prende un input analogico e lo converte in un valore utilizzabile dal computer.\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/cp_sensors.png\" alt=\"analog sensors\" class=\"center\" style=\"width: 500px;\">\n\n1.  Il [\\`lightSensor\\`(#f78183)](/docs/applab/lightSensor/) misura quanto è luminoso o scuro. Quando è molto buio, [\\`lightSensor.value\\`(#f78183)](/docs/applab/lightSensor.value/) è 0, e quando è molto luminoso, il valore è 1023. \n2.  Il [\\`tempSensor\\`(#f78183)](/docs/applab/tempSensor/) controlla la temperatura e la mostra in Fahrenheit ([\\`tempSensor\\`(#f78183)](/docs/applab/tempSensor/)) o Celsius ([\\`tempSensor.C\\`(#f78183) ](/docs/applab/tempSensor.C/)). \n3.  Il [\\`soundSensor\\`(#f78183)](/docs/applab/soundSensor/) misura quanto sono forti i rumori ma non può registrare suoni come un microfono. Dà anche un valore da 0 a 1023.\n\n## Lettura dei dati del sensore\n\nPer leggere i dati dai sensori di suono e luce, puoi usare la proprietà `value` (come [\\`soundSensor.value\\`(#f78183)](/docs/applab/soundSensor.value/)). Se l'intervallo 0-1023 non è quello di cui hai bisogno, puoi modificare l'intervallo utilizzando il metodo setScale(). Ad esempio, [\\`soundSensor.setScale(-50, 50)\\`(#f78183)](/docs/applab/soundSensor.setScale/) fa sì che il sensore del suono mostri valori compresi tra -50 e 50. Il sensore di temperatura mostra già la temperatura in un modo facile da capire.\n\n## Sensibilità del sensore\n\nI sensori sulle tue schede non sono perfetti e potrebbero fornire letture leggermente diverse su schede diverse. Se hai bisogno che il tuo programma funzioni bene con diverse schede, puoi scrivere un codice che ti permetta di regolare i sensori. Se la tua app esegue il programma quando la lettura di un sensore supera un determinato valore, rendi tale valore una variabile che può essere modificata dall'utente. In questo modo, l'utente può modificare la variabile per far funzionare al meglio l'app con la propria scheda."
        },
        "csd-2022/animation-tab": {
          "display_name": "Scheda Animazione",
          "content": "In Sviluppo Giochi, le _Animazioni_ sono disegni o altre immagini che puoi usare per cambiare l'aspetto dei tuoi personaggi. Puoi usare il blocco `sprite.setAnimation()` per cambiare le animazioni del tuo personaggio in una qualsiasi delle animazioni che hai aggiunto nella _scheda Animazione_.\n\n## Utilizzo della scheda Animazione\n\nFacendo clic sul pulsante **Animazione** sopra l'area di visualizzazione, verrai indirizzato alla scheda _Animazione_, dove puoi importare o disegnare animazioni da utilizzare per i tuoi personaggi.\n\n![](https://cdo-curriculum.s3.amazonaws.com/media/uploads/animation_tab.png)\n\n[diagram_nums]\n\n1.  Utilizzare questi pulsanti per passare dalla scheda animazione alla scheda codice e viceversa.\n2.  Questa colonna mostra tutte le animazioni che hai creato. Fai clic su un'animazione da qui per modificarla.\n3.  Fare clic sul segno più per aggiungere una nuova animazione. Puoi selezionare un'animazione dalla libreria, importare un'immagine dal tuo computer o disegnarne una da zero.\n4.  Gli strumenti di disegno in questa colonna consentono di disegnare o modificare le animazioni.\n5.  Disegna o modifica la tua immagine su questa tela.\n6.  Apri questo cassetto per modificare le dimensioni complessive dell'immagine o della tela.\n\n[/diagram_nums]"
        },
        "csd-2022/app-lab": {
          "display_name": "Sviluppo App",
          "content": "Sviluppo App è uno strumento creato con [JavaScript](/concepts/javascript/) che può essere utilizzato per creare app. Scopri di più sulle istruzioni di Sviluppo App nella [documentazione Sviluppo App](/docs/applab/)."
        },
        "csd-2022/applab-overview": {
          "display_name": "Panoramica",
          "content": "Sviluppo App è uno strumento creato con [JavaScript](/concepts/javascript/) che può essere utilizzato per creare app. Scopri di più sulle istruzioni di Sviluppo App nella [documentazione Sviluppo App](/docs/applab/)."
        },
        "csd-2022/arrays": {
          "display_name": "Matrici (arrays)",
          "content": "Una _matrice_ (o array) è un gruppo di valori memorizzati in un ordine particolare. Di solito questi valori sono tutti dello stesso tipo (come tutti i numeri, tutto il testo o anche tutti gli sprite), ma in JavaScript, le matrici possono contenere anche diversi tipi di elementi. È possibile utilizzare le matrici per creare un elenco di elementi da archiviare in un'unica variabile.\n\n## Creazione e utilizzo di matrici\n\nLe matrici hanno l'aspetto di elenchi racchiusi tra parentesi quadre. Ogni valore della matrice deve essere separato da virgole.\n\n`[1,5,7,2]`\n\nOgni volta che crei una matrice, dovrai memorizzarlo subito in una variabile in modo da poter accedere ai valori in un secondo momento. Poiché questo è così importante, il blocco per creare una matrice memorizza automaticamente la matrice in una variabile.\n\n\\[[0]]\n\nÈ possibile accedere a un valore all'interno della matrice utilizzando il suo numero di indice. I numeri dell'indice partono da 0 e contano fino a raggiungere la fine della matrice. Ad esempio, nella matrice precedente, «a» è all'indice 0, «b» è all'indice 1 e «c» è all'indice 2."
        },
        "csd-2022/board-events": {
          "display_name": "Eventi della scheda",
          "content": "Il blocco [\\`onEvent\\`(#fff176)](/docs/applab/onEvent/) aiuta la tua app a sapere quando succede qualcosa, ad esempio quando qualcuno fa clic su un pulsante o sposta il mouse. Il Circuit Playground ha un blocco simile chiamato [\\`onBoardEvent()\\`(#f78183)](/docs/ide/applab/expressions/onBoardEvent) che osserva le cose che accadono sul tabellone.\n\nNella programmazione a eventi (o Event-Driven), ricorda che:\n\n-   **Le persone fanno accadere gli eventi** - Gli eventi accadono quando qualcuno usa i pulsanti, gli interruttori o altre parti del tabellone.\n-   **Gli eventi fanno funzionare il codice** - Quando si verifica un evento, può far funzionare una determinata funzione.\n\n## onBoardEvent\n\nIl blocco [\\`onBoardEvent()\\`(#f78183)](/docs/ide/applab/expressions/onBoardEvent) è un tipo speciale di funzione chiamata gestore di eventi (event listener). Semplifica l'impostazione della gestione degli eventi con una sola istruzione. Ecco un esempio con le etichette:\n\n![](https://cdo-curriculum.s3.amazonaws.com/media/uploads/onBoardEvent_diagram.png)\n\n1.  Quando si fa clic sul pulsante sinistro, `buttonL`, sullo schermo viene visualizzata la parola \"clic\". Usiamo la variabile `buttonL` (senza virgolette), che è diversa da onEvent che usa una stringa per nominare un elemento di progettazione.\n\n2.  Questa funzione non ha un nome ed è chiamata funzione di callback (codice di richiamo). È un po' strano perché non lo usi direttamente nel tuo codice. Al contrario, il sistema richiama la funzione di callback quando si verifica l'evento scelto. Le funzioni di callback sono molto utilizzate nella programmazione guidata dagli eventi.\n\n## Pulsante Eventi\n\n⚠️ Un avvertimento! I pulsanti Circuit Playground e micro:bit possono sembrare simili, ma i loro nomi sono leggermente diversi:\n\n-   I pulsanti **Circuit Playground** sono denominati `buttonL` e `buttonR`\n-   I pulsanti **BBC micro:bit** sono denominati `buttonA` e `buttonB`"
        },
        "csd-2022/body-styling": {
          "display_name": "Stile del corpo del testo (=body)",
          "content": "L'elemento `<body>` è un elemento speciale che racchiude tutto il contenuto visibile di una pagina web. Poiché tutto ciò che vedi è all'interno di questo tag, qualsiasi set di regole che crei per l'elemento body verrà applicato a ogni elemento sulla pagina, a meno che l'elemento stesso non abbia una regola che lo contraddica. Questo è utile per stabilire uno stile di base per tutto sulla tua pagina.\n\n## Esempio\n\nQuesto set di regole renderebbe tutto il testo della tua pagina web blu e centrato.\n\nbody {\n        text-align: center;\n        color: blue;\n    }\n\n## FAQ\n\n1.  **Cosa fa il \"body selector\"?**\n    -   Poiché il contenuto della pagina web è tutto all'interno del tag `body`, il **body selector** fornisce regole di stile per _tutto_ sulla pagina web."
        },
        "csd-2022/booleans-and-comparison-operators": {
          "display_name": "Condizioni logiche (o espressioni booleane) e operatori di confronto",
          "content": "## Frullato di parole: istruzioni conditionali, condizioni logiche, espressioni, istruzioni\n\n<div style=\"width: 33%; float: right; border: solid 1px #00adbc; padding: 10px; margin: 10px;\">\n<Strong>Historical Notes on Booleans</Strong><br>\n<li> Named after mathematician George Boole \n<li> He invented a corner of mathematics that is now named after him called \"Boolean Algebra\" \n<li> Boolean Algebra is math that operates using only true/false values. \n<li> This is important work for computer science because true/false maps very easily to binary.\n</div>\n\nCome hai visto nel video, ci sono un sacco di termini che generalmente parlano tutti della stessa cosa.\n\n**Valori booleani, valori booleani, espressioni booleane:**\n\n-   Un **valore booleano** è semplicemente un termine informatico che indica **un valore vero/falso**.\n-   Un'**espressione booleana** è un'istruzione che _valuta_ in un valore booleano (un singolo vero/falso).\n\n**Condizione, condizionali, istruzioni condizionali**:\n\n-   \"Condizionale\" è semplicemente un termine generico per il codice che altera il flusso del programma in base a valori vero/falso (come un'istruzione [\\`if\\`(#64d5ff)](/docs/spritelab/codestudio_ifStatement/))\n-   Esempi: Condizione, Condizionali, Istruzioni condizionali, esecuzione condizionale\n\n## Operatori di confronto\n\n<img src=\"https://images.code.org/79f2ae7d27a3fa434138aeeb17146cab-image-1479413755076.png\" style=\"float: left; margin-left: 20px; margin-right: 20px\">\n\nUn tipo comune di condizione da verificare è il confronto di due valori. Ecco 6 comuni **operatori di confronto**. Ognuno confronta un valore a sinistra con un valore a destra e restituisce un valore booleano -- **true** o **false**. La maggior parte di questi fa quello che ti aspetteresti.\n\n### Perché questi simboli: **==**, **!=**, **\\<=** e **>=**?\n\n1.  Li usiamo `==` perché il singolo segno di uguale <code>=</code> è l'operatore di assegnazione. Abbiamo bisogno di qualcosa di diverso per indicare che vogliamo confrontare due valori invece di assegnarne uno all'altro.\n\n     **Errore comune:** scrivere qualcosa come [\\`if(age = 18)\\`(#64d5ff)](/docs/spritelab/codestudio_ifStatement/) invece di [\\`if(age == 18)\\`(#64d5ff)](/docs/spritelab/codestudio_ifStatement/). Ci assicureremo di metterlo giù più tardi.\n\n2.  Usiamo `!=`, `<=`, and `>=` perché richiedono solo simboli ASCII. Storicamente i simboli matematici <code>≠</code>, <code>≤</code> and <code>≥</code> erano difficili o impossibili da produrre su alcuni sistemi. Il `!` è universalmente letto come \"no\".\n\n<div style=\"clear: both\">&nbsp;</div>\n\n## Riferimento: esempi\n\nDi seguito sono riportati alcuni esempi di come potresti visualizzare i confronti nel codice. Rivedili se ti piace o continua e torna se hai bisogno di ulteriori riferimenti.\n\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/ea8cf41d0e06e6ddee31086fbb9ea2b9-image-1479232029068.png\" style=\"float: left; margin-left: 50px; margin-right: 50px\">\n\nConfronta due valori (numeri, stringhe o altri valori booleani) e restituisce _true_ se sono uguali, altrimenti _false_.\n\n-   `\"Hello\" == \"hello\"` restituisce _false_ -- perché le stringhe sono maiuscole in modo diverso.\n-   `\"3\" == 3` restituisce _true_ -- perché `==` cerca di essere indulgente. Se può \"costringere\" una stringa in un numero, lo farà per confrontare. <sup>1</sup>\n-   `(2+1) == 3` restituisce _true_ -- perché l'espressione aritmetica restituisce 3.\n-   `x == 7` restituisce _true_ -- quando la variabile x ha il valore 7.\n\n<sup>1.</sup> Anche se è una caratteristica utile che `==` trasformi una stringa in un numero, è considerato **TRICKY** perché la stringa \"3\" non è la stessa del numero intero 3 Ci sono momenti in cui potresti credere che questi non siano uguali. Esiste un operatore di uguaglianza \"rigorosa\" - il \"triplo uguale\" `===` che assicura che sia il tipo di dati che il valore siano uguali. Quindi `\"3\" === 3` è falso.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/67fc10f1dec4f129c64c62d583ebf7ee-image-1479232142029.png\" style=\"float: left; margin-left: 50px; margin-right: 50px\">\n\nConfronta due valori (numeri, stringhe o altri valori booleani) e restituisce \"true\" se **non sono uguali**, altrimenti \"false\".\n\n-   `\"Hello\" != \"hello\"` restituisce _true_ -- perché le stringhe sono leggermente diverse.\n-   `\"3\" != 3` restituisce _false_ -- perché la stringa 3 può essere convertita in un numero prima di essere confrontata con 3. (vedi le note sopra relative al perdono ==).\n-   `(2+1) != 3` restituisce _false_ -- perché l'espressione aritmetica restituisce 3.\n-   `x != 7` restituisce _true_ -- quando la variabile x _è qualsiasi valore diverso da_ 7.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img style=\"float: left; margin-left: 50px; margin-right:50px; margin-bottom: 20px;\" src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/536aed5657843fca3b52a044f2f3bdc7-image-1479242736018.png\">\n\nConfronta due valori per vedere se il numero a sinistra è <em>maggiore di</em> il numero a destra.\n\n-   `4 > 3` restituisce _true_\n-   `3 > 7` restituisce _false_\n-   `age > 17` restituisce _true_ -- quando il valore della variabile \"age\" è strettamente maggiore di 17, altrimenti false.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/3c7c9336270e093bad437d69d155a8c7-image-1479242773012.png\" style=\"float: left; margin-left: 50px; margin-right:50px; margin-bottom: 20px;\">\n\nConfronta due valori per vedere se il numero a sinistra è <em>minore di</em> il numero a destra.\n\n-   `4 < 3` restituisce _false_\n-   `3 < 7` restituisce _true_\n-   `age < 17` restituisce _true_ -- quando il valore della variabile \"age\" è rigorosamente minore di 17, altrimenti false.\n\n<div style=\"clear:both\"> </div>\n<hr>\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/e899b0040a9f8ddc899b1df66773be74-image-1479242843374.png\" style=\"float: left; margin-left: 50px; margin-right: 50px; margin-bottom: 20px\">\n\nConfronta due valori per vedere se il numero a sinistra è _minore o uguale a_ il numero a destra.\n\n-   `3 <= 4` restituisce _true_\n-   `4 <= 3` restituisce _false_\n-   `age <= 18` restituisce _true_ -- quando il valore della variabile \"age\" è 18 o meno.\n\n<div style=\"clear:both\"> </div>\n\n<hr>\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/2ca857bff29bca22a2a42433c6b3981f-image-1479242807960.png\" style=\"float: left; margin-left: 50px; margin-right: 50px; margin-bottom: 20px\">\n\nConfronta due valori per vedere se il numero a sinistra è _maggiore o uguale a_ il numero a destra.\n\n-   `3 >= 4` restituisce _false_\n-   `4 >= 3` restituisce _true_\n-   `age >= 18` restituisce _true_ -- quando il valore della variabile \"age\" è 18 o superiore.\n\n<div style=\"clear:both\"> </div>\n\n<hr>"
        },
        "csd-2022/changing-screens": {
          "display_name": "Modificare le schermate",
          "content": "## Utilizzo del comando _setScreen_ per cambiare schermate con il programma\n\nIl comando [\\`setScreen\\`(#fff176)](/docs/applab/setScreen/) cambia la schermata per mostrare quello che vuoi. Si specifica la schermata tramite il suo ID.\n\n![](https://images.code.org/005222ed01ade7940963ce149d637286-image-1477168080948.png)\n\n[diagram_nums]\n\n1.  Trova [\\`setScreen\\`(#fff176)](/docs/applab/setScreen/) nella casella degli strumenti Elementi dell'interfaccia utente e trascinalo nell'area di lavoro del codice.\n2.  La maggior parte delle volte si cambia la schermata in risposta a qualche evento dell'utente. In questo caso [\\`setScreen\\`(#fff176)](/docs/applab/setScreen/) viene aggiunto a un gestore di eventi \"click\" per l'immagine con ID \"smileyFace\"\n3.  Selezionare l'ID della schermata che si desidera modificare. In questo caso, quando si fa clic sulla faccina sorridente sullo schermo che dice \"ciao\", vogliamo passare allla schermata che dice \"arrivederci\".\n4.  **Idea chiave: Schermi multipli - Un'area di lavoro di codifica.** Questo è il codice che gestisce un evento \"clic\" per un'_immagine che si trova su una schermata diversa_ - il \"goodbyeScreen\". Non puoi vedere quell'immagine in questo momento, o quella schermata, perché la schermata non è selezionata. Tuttavia, il codice per essa va inserito ancora qui.\n\n[/diagram_nums]"
        },
        "csd-2022/changing-sensor-scale": {
          "display_name": "Modificare la scala del sensore",
          "content": "Per impostazione predefinita, ciascuno dei sensori del Circuit Playground e dei dispositivi micro:bit converte i dati rilevati in un intervallo particolare.\n\n-   Il Circuit Playground converte i dati in un intervallo con un valore minimo di 0 e un massimo di 1023. \n-   Il micro:bit converte i propri dati in un intervallo con un valore minimo di 0 e un valore massimo di 255.\n\nPer alcuni programmi, potresti voler regolare questi intervalli in base alle tue esigenze.\n\n## Imposta la scala\n\nIl metodo _setScale_ consente di sovrascrivere l'intervallo predefinito di un sensore. Ad esempio, chiamando [\\`LightSensor.setScale (0, 100) \\`(#f78183)](/docs/applab/lightSensor.setScale/) cambierà la scala del [\\`LightSensor.value\\` (#f78183)](/docs/applab/lightSensor.value/) in modo che il valore più basso (completamente scuro) sia 0 e il più alto (completamente luminoso) sia 100.  "
        },
        "csd-2022/checking-multiple-conditions-with-if-else-if": {
          "display_name": "Verifica più condizioni con se-altrimenti-se (If-Else-If)",
          "content": "| Nome                                      | Codice (blocco)                                                                                | Codice (testo)                                                                                 |\n| ----------------------------------------- | ---------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------- |\n| Verifica di più condizioni con If-Else-If | ![](https://curriculum.code.org/media/uploads/Screenshot-2019-02-25-at-4.06.56-PM_v61bvx3.png) | ![](https://curriculum.code.org/media/uploads/Screenshot-2019-02-25-at-4.07.25-PM_xLaHTHA.png) |\n\n## Come funziona?\n\nIl comando `if-else-if` consente di controllare più condizioni booleane. Il computer controllerà le condizioni nell'ordine in cui sono scritte fino a quando una delle espressioni booleane non restituisce \"true\". Il codice associato a quell'espressione booleana verrà eseguito, ma tutti gli altri verranno saltati. Se nessuna delle espressioni restituisce \"true\", verrà eseguito il codice all'interno del comando \"else\".\n\n## Prima i casi più specifici\n\nQuando scrivi un'istruzione if-else-if, vuoi mettere prima i casi più specifici. Nell'esempio di temperatura sopra si desidera controllare prima le temperature superiori a 100 gradi. Successivamente il codice verifica la presenza di temperature superiori a 90 gradi, ma a causa dell'ordine in cui è scritto il codice sai che nessuna delle temperature che troverai è superiore a 100 gradi. Dopotutto li avresti colti nella precedente dichiarazione if. Ciò significa che puoi essere certo che qualsiasi temperatura rilevata sarà compresa tra 90 e 100 gradi. Mentre continui con l'istruzione if-else-if, usi la stessa logica per verificare i diversi intervalli di temperatura.\n\n## Un esempio non funzionante: lascia per ultimi i casi più specifici\n\nQuesto è un esempio non funzionante che mostra cosa succede se inizi a controllare le temperature in ordine inverso, i casi più specifici per ultimi.\n\n![](https://curriculum.code.org/media/uploads/Screenshot-2019-02-25-at-4.30.52-PM_IOWLVER.png)\n\nPensa a cosa accadrebbe quando questo codice viene eseguito per la temperatura di 82 gradi. Vorresti che l'output dicesse `\"Fa caldo\"`. Se guardi la prima espressione booleana, tuttavia, noterai che 82 è maggiore di 60 gradi, rendendo l'espressione booleana valutata come \"vera\". Come risultato il codice produrrà `\"It's cool\"`. Questo perché la prima espressione non è effettivamente la più specifica."
        },
        "csd-2022/circuit-playground": {
          "display_name": "Panoramica del Circuit Playground",
          "content": "Il Circuit Playground è un semplice computer a scheda singola con molti ingressi e uscite integrati da esplorare. Prima di scavare troppo in profondità, però, iniziamo con le basi.\n\n### Il diodo a emissione di luce (LED)\n\nQuando un computer deve solo comunicare informazioni semplici, spesso una luce intermittente è il modo più rapido e semplice per farlo. I LED, o diodi a emissione luminosa, sono dispositivi piccoli, a bassa potenza e facili da usare per comunicare con la luce. Dai un'occhiata all'immagine Circuit Playground a destra.\n\n<img src=\"//curriculum.code.org/images/circuitplayground/cp_leds.png\" style=\"float: right; width: 400px; margin-left: 10px;\">\n\n1.  La porta USB ti consente di collegare il Circuit Playground. Collegandolo puoi comunicare con la scheda in Sviluppo App, ma fornisce anche elettricità alla scheda in modo che possa fare cose come accendere i LED.\n2.  Il **LED di alimentazione** verde non può essere controllato tramite codice, ma ti consente di sapere se la scheda sta ricevendo elettricità. Se questo LED è spento, non aspettarti che nulla sulla tua scheda funzioni.\n3.  Il **LED** rosso può essere controllato in Sviluppo App utilizzando i blocchi [\\`led\\`(#f78183)](/docs/applab/led/). Può anche essere usato per aiutare a eseguire il debugging della tua scheda: ogni volta che colleghi la scheda, dovresti vedere questo LED lampeggiare per alcuni secondi.\n\n### Collegalo\n\nCollega la scheda al computer tramite un cavo USB e osserva come rispondono questi due LED. In quale altro modo potresti utilizzare una singola luce per comunicare informazioni utili a un utente?"
        },
        "csd-2022/circuit-playground-parent": {
          "display_name": "Adafruit Circuit Playground",
          "content": "Queste risorse fanno riferimento a funzionalità specifiche di [Circuit Playground](/maker/circuitplayground)."
        },
        "csd-2022/circuits-and-buttons": {
          "display_name": "Tasti esterni sul Circuit Playground",
          "content": "<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/button_alligator.png\" alt=\"Button Up and Down\" style=\"width:300px; float: right; margin: 0 20px;\">\n\nPer creare un pulsante o un interruttore è sufficiente un circuito facilmente collegabile e scollegabile. Come un circuito LED, è possibile creare un circuito pulsante collegando un cavo a un pin dati e un altro cavo a un pin di terra. Per \"chiudere\" il circuito (che è come premere un pulsante) si collegano i due cavi, toccandoli l'uno con l'altro o collegandoli a un componente hardware (come un pulsante o un interruttore) che può essere utilizzato per aprire e chiudere il circuito. Un pulsante \"aperto\" equivale all'evento del pulsante \"up\", mentre un circuito \"chiuso\" equivale all'evento del pulsante \"down\".\n\nCon una scheda Circuit Playground Express, puoi creare un circuito pulsante su qualsiasi pin **\"A6\"**, **\"A5\"**, **\"A4\"**, **\"A0\"** o **\"A1\"**\n\nCon una scheda Circuit Playground Classic, puoi creare un circuito pulsante su uno qualsiasi dei pin **0**, **2**, **3**, **6** e **12**.\n\n<div style=\"clear: entrambi\"></div>\n\n## Creazione di circuiti di pulsanti\n\nPer creare un circuito di pulsanti avrai bisogno di un pin dati, due cavi e un pin di terra.\n\n-   Collega un cavo al tuo pin dati numerato.\n-   Collegare un cavo diverso a un pin di terra.\n\n## Codifica di un circuito di pulsanti (Circuit Playground Express)\n\n     \\\\ Crea un perno attaccato al pulsante A5\n     var myButton = createButton(\"A5\");\n\n     \\\\ Aggiungi un gestore di eventi al nuovo pulsante\n     onBoardEvent(myButton, \"down\", function() {\n     console.log(\"button pressed\");\n     });\n\n## Codifica di un circuito di pulsanti (Circuit Playground Classic)\n\n     \\\\ Crea un pin collegato al pulsante 0\n     var myButton = createButton(0);\n\n     \\\\ Aggiungi un gestore di eventi al nuovo pulsante\n     onBoardEvent(myButton, \"down\", function() {\n     console.log(\"button pressed\");\n     });"
        },
        "csd-2022/circuits-and-leds": {
          "display_name": "LED esterni sul Circuit Playground",
          "content": "<img alt=\"Circuit Playground Data Pins\" src=\"https://images.code.org/6821153181b10ce9d5fdc1459beb4445-image-1643339359352.png\" style=\"width:400px; float: right; margin: 0 20px\">\n\nUtilizzando i pad numerati sul Circuit Playground, puoi creare circuiti personalizzati che includono componenti esterni, come LED e pulsanti. Le specifiche di come un circuito viene cablato dipendono dall'hardware specifico che stai tentando di aggiungere, ma tutti i circuiti utilizzeranno alcune combinazioni di pin di alimentazione (che forniscono alimentazione), pin di terra (che sono il punto finale di un circuito) e pin di dati numerati (che possono inviare un segnale di uscita o leggere un ingresso). _Attenzione:_ alcuni dei pin dati sono riservati a funzioni speciali sulla scheda, quindi quando crei i tuoi circuiti, assicurati di utilizzare solo i seguenti pin:\n\nCon una scheda Circuit Playground Express, usa solo pin **\"A6\"**, **\"A5\"**, **\"A4\"**, **\"A0\"** o **\"A1\"**\n\nCon una scheda Circuit Playground Classic, utilizza solo pin **0**, **2**, **3**, **6** e **12**.\n\n## Creazione di circuiti LED\n\nUno dei circuiti più semplici che puoi realizzare con il tuo Circuit Playground è aggiungere un LED. Per creare questo circuito avrai bisogno di un pin dati, due cavi e un pin di terra.\n\n-   Collegare un cavo dal pin dati al lato positivo (**+**) del LED.\n-   Collegare un cavo diverso dal lato negativo (**-**) del LED a qualsiasi pin di terra.\n-   Utilizzando il codice, imposta il pin scelto su \"output\" e attivalo:\n\n## Codifica di un circuito LED (Circuit Playground Express)\n\n     // Crea un LED collegato al pin A5\n     var myLed = createLed(\"A5\");\n\n     // Fai lampeggiare il mio Led\n     myLed.blink(200);\n\n## Codifica di un circuito LED (Circuit Playground Classic)\n\n     // Crea un LED collegato al pin 2\n     var myLed = creaLed(2);\n\n     // Fai lampeggiare il mio Led\n     myLed.blink(200);\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/alligator.png\" style=\"float: left; width: 30%; margin: 10px 5% 10px 0;\">\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/cp-wire.png\" style=\"float: left; width: 30%; margin: 10px 5% 10px 0;\">\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/cp-foil.png\" style=\"float: left; width: 30%; margin: 10px 0;\">\n\nNon devi usare niente di speciale per creare un circuito semplice come questo - qualsiasi cosa che conduca bene l'elettricità andrà bene. Puoi recuperare il cavo dalle vecchie luci natalizie o utilizzare un foglio di alluminio per una soluzione rapida, ma puoi anche acquistare cavo conduttivo che ti consentirà di cucire i tuoi circuiti o ottenere nastro di rame per realizzare circuiti pieghevoli su carta.\n\n## Debug LED\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/sequin.png\" style=\"width: 500px;\" class=\"center\">\n\nI LED sono piuttosto semplici da usare, ma ci sono un paio di trucchi da tenere a mente:\n\n-   Devi prestare attenzione alla direzione in cui scorre l'elettricità, perché i LED funzionano solo in una direzione. Collega sempre il lato positivo del LED alla fonte di alimentazione e il lato negativo a terra.\n-   I LED hanno bisogno di un componente chiamato _resistenza_ per assicurarsi che stiano ricevendo (e prendendo) la giusta quantità di elettricità. Le paillette LED (come l'immagine sopra) hanno un resistore integrato, ma se vuoi usare un semplice LED dovrai aggiungere un resistore su entrambi i lati per evitare di danneggiare la scheda o il LED."
        },
        "csd-2022/classes": {
          "display_name": "Classi",
          "content": "A volte si desidera applicare uno stile solo ad alcuni elementi specifici di un tipo anziché a tutti gli elementi di un tipo. **Le classi consentono a un gruppo di elementi di avere il proprio stile unico.** Questo si applica agli elementi sulla stessa pagina o su pagine separate, purché tutte le pagine siano collegate allo stesso foglio di stile.\n\nPer modellare usando le classi:\n\n1.  Innanzitutto, devi contrassegnare gli elementi in HTML che saranno in quella classe.\n2.  Secondo, devi scrivere un set di regole di stile per quella classe. Per scrivere una regola per una classe di elementi, il selettore per il set di regole ha un `.` prima del nome della classe.\n\nAd esempio, il codice seguente darebbe uno stile alla classe di fantasia che è stata impostata per un elemento di paragrafo:\n\n| File Html                                                         | File CSS                                                                   | Risultato                                                                                                                |\n| ----------------------------------------------------------------- | -------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| <pre> \\<p class=\"fancy\">Good Day\\</p> <br> \\<p>Bad Day\\</p></pre> | <pre>.fancy {<br>  color: darkblue;<br>  font-family: cursive;<br>} </pre> | <img src=\"https://images.code.org/27181e31f4e697a85f1794f28070ba14-image-1481648310560.58.03 AM.png\" alt=\"result image\"> |\n\n<br>\n\n## FAQ\n\n1.  **Perché uno sviluppatore web dovrebbe utilizzare le classi?**\n    -   Uno sviluppatore web utilizza le classi quando alcuni elementi devono avere uno stile diverso rispetto ad altri, anche se sono lo stesso tag. Le classi possono anche essere utilizzate per dare lo stesso stile a elementi che hanno tag diversi.\n\n**Collegamenti W3 Schools**\n\n-   [sintassi CSS (classi)](https://www.w3schools.com/css/css_syntax.asp)"
        },
        "csd-2022/collision-detection": {
          "display_name": "Rilevamento delle collisioni",
          "content": "A volte, vorrai sapere quando due personaggi si toccano. Sviluppo Giochi utilizza il metodo [\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/) per verificare se un personaggio sta toccando un altro personaggio (il bersaglio).\n\n<img src=\"http://curriculum.code.org/media/uploads/istouching.gif\" style=\"width: 200px; float: right; margin: 10px 50px;\">\n\n[\\`isTouching\\`(#f78183)](/docs/gamelab/isTouching/) restituisce un booleano, quindi può essere usato all'interno di un condizionale per far accadere qualcosa solo quando i due personaggi si toccano. Ad esempio, il codice seguente cambia l'animazione dell'anguria quando il personaggio del coltello la tocca.\n\n<pre>\n\nfunction draw() {\n  if (knife.isTouching(watermelon)) {\n    watermelon.setAnimation(\"slice\");\n  }\n  background(\"burlywood\");\n  drawSprites();\n}\n\n</pre>\n\n<img src=\"http://curriculum.code.org/media/uploads/colliders.gif\" style=\"width: 200px; float: right; margin: 10px 50px;\">\n\n### Collisori\n\nQuando Sviluppo Giochi controlla se due cose si toccano, non sa quali parti dell'immagine sono visibili. Invece, controlla se i collisori si toccano. La dimensione dei collisori è determinata dalla dimensione dell'animazione che stai usando, anche dalle parti che non puoi vedere. Puoi vedere i collisori impostando la proprietà [\\`debug\\`(#f78183)](/docs/gamelab/debug/) delpersonaggio su `true`.\n\nNei due esempi a destra, [\\`debug\\`(#f78183)](/docs/gamelab/debug/) è stato impostato su `true`, quindi puoi vedere il contorno verde dei collisori e che l'animazione cambia quando si toccano, anche se le immagini del coltello e dell'anguria non si toccano.\n\nNel secondo esempio, i collisori sono molto grandi, quindi l'animazione dell'anguria cambia molto prima che il coltello la tocchi.\n\n<img src=\"http://curriculum.code.org/media/uploads/colliders2.gif\" style=\"width: 200px; float: right; margin: 10px 50px;\">\n\n<pre>\nwatermelon.debug = true;\nknife.debug = true;\n\nfunction draw() {\n  if (knife.isTouching(watermelon)) {\n    watermelon.setAnimation(\"slice\");\n  }\n  background(\"burlywood\");\n  drawSprites();\n}\n</pre>\n\nPuoi anche cambiare la forma dei collisori usando il metodo [\\`setCollider\\`(#f78183)](/docs/gamelab/setCollider/). Questo metodo rende il collisore un cerchio o un rettangolo.\n\n<pre>\nwatermelon.debug = true;\nknife.debug = true;\nwatermelon.setCollider(\"circle\");\nknife.setCollider(\"circle\");\n\nfunction draw() {\n  if (knife.isTouching(watermelon)) {\n    watermelon.setAnimation(\"slice\");\n  }\n  background(\"burlywood\");\n  drawSprites();\n}\n</pre>"
        },
        "csd-2022/color-lights": {
          "display_name": "Luci colorate",
          "content": "<img src=\"//curriculum.code.org/images/circuitplayground/cp_colorleds.png\" style=\"float: right; width: 400px; margin-left: 25px;\">\n\nIntorno al bordo della tua scheda, noti che ci sono dieci LED aggiuntivi. Questi LED sono leggermente diversi da quelli che abbiamo visto prima; questi sono LED multicolori.\n\n### LED RGB\n\nI LED colorati sono in realtà ciascuno composto da tre LED più piccoli: un rosso, un verde e un blu. Per questo motivo, spesso chiamiamo questi LED RGB (rosso-verde-blu = red-gren-blue).\n\nPoiché ci sono così tanti di questi LED, li abbiamo memorizzati in un elenco chiamato [\\`colorLeds\\`(#f78183)](/docs/applab/colorLeds/). Il primo LED RGB nell'elenco (posizione 0) si trova accanto al LED di alimentazione verde, e gli altri seguono in senso antiorario intorno alla scheda, terminando al decimo LED RGB (posizione 9) accanto al LED rosso.\n\n### Scegli un colore\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/colorLeds_color.png\" style=\"float: right; margin-left: 10px;\">\n\nPer impostazione predefinita, tutti i LED colorati saranno bianchi quando li accendi. Puoi impostare il colore di un LED RGB in molti modi, incluso usando il nome di un colore (come \"red\") una stringa esadecimale (come \"#FF0000\") o usando il comando `rgb()` (per esempio `rgb(255,0,0)`).\n\nSe un LED colorato è spento, `colorLeds[i].color()` imposterà il colore e lo accenderà."
        },
        "csd-2022/counter-patterns-with-event": {
          "display_name": "Schemi a contatore con evento",
          "content": "## Revisione delle variabili\n\nLe variabili memorizzano le informazioni. La variabile è definita sul lato sinistro dell'espressione e il valore è impostato sul lato destro.\n\n![](https://curriculum.code.org/media/uploads/vardefine.PNG)\n\nLeggeremmo questa espressione così:\n\n\\*La variabile `score` ottiene il valore 3\n\n## Schema a contatore con evento\n\n| Nome                          | Codice (blocco)                                                                       | Codice (testo)                                                                                                     |\n| ----------------------------- | ------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------ |\n| Schema a contatore con evento | ![](https://images.code.org/fb4f1477d57648cb4bde14c2b710e196-image-1600883760296.png) | <div>`var myVar = 0;` <br><br> `onEvent(\"id\", \"click\", function() {` <br>    `myVar = myVar + 1;` <br> `});`</div> |\n\nLo schema potrebbe essere letto così:\n\n_La variabile `myVar` ottiene il valore 0. Quando onEvent viene attivato da un clic, la variabile viene aggiornata. `myVar` ora ottiene il valore corrente di `myVar` e ne aggiunge uno. Il nuovo valore viene quindi memorizzato in `myVar`._\n\n### Come funziona?\n\nQuando l'evento viene attivato, la variabile viene aggiornata. Il valore corrente della variabile viene aumentato o diminuito di una quantità impostata. Il nuovo valore viene memorizzato nella variabile.\n\n### Esempi\n\n![](https://curriculum.code.org/media/uploads/counter_pattern_with_event.gif)\n<br>\n_La variabile `score` ottiene il valore 0. Quando onEvent viene attivato da un clic sul pulsante, la variabile viene aggiornata. `score` ora ottiene il valore corrente di `score` e ne aggiunge uno. Il nuovo valore viene quindi memorizzato in `score`. Il punteggio viene quindi visualizzato sullo schermo._\n\n![](https://curriculum.code.org/media/uploads/counter_pattern_with_event2.gif)\n<br>\n_La variabile `score` ottiene il valore 50. Quando onEvent viene attivato da un clic sul pulsante, la variabile viene aggiornata. `score` ora ottiene il valore corrente di `score` e ne sottrae tre. Il nuovo valore viene quindi memorizzato in `score`. Il punteggio viene quindi visualizzato sullo schermo._"
        },
        "csd-2022/creating-a-survey": {
          "display_name": "Creazione di un sondaggio",
          "content": "È possibile utilizzare un modulo online per raccogliere dati che possono essere importati in Laboratorio IA. Questo può essere fatto in Sviluppo App, Google Forms, Microsoft Forms o qualsiasi altra app per moduli che ti consente di esportare i tuoi dati come file CSV.\n\n## Utilizzo di un modello di modulo Google\n\nAbbiamo creato un modello di modulo Google che puoi utilizzare per creare un sondaggio: [fai clic qui per creare una copia del modello](https://docs.google.com/forms/d/1Yzoug2iW-_GUWrQJo4jIlfuKNtelVNrer1PvT4rXF7w/copy). Dopo aver creato una copia, puoi modificare le domande del modello in base alle tue esigenze:\n\n### Domande categoriali\n\n<img style=\"margin-right: 10px; margin-left: 10px; bordo: 2px nero pieno\" src=\"https://curriculum.code.org/media/uploads/Categorical-Questions.png\"/>\n\n[diagram_nums]\n\n1.  Per i dati categoriali, assicurati che la domanda sia elencata come domanda a scelta multipla.\n2.  Digita la tua domanda. Facoltativamente, puoi aggiungere una descrizione con ulteriori informazioni.\n3.  Inserisci ogni risposta come propria scelta. _non_ aggiungere un'opzione Altro, poiché ciò consentirà agli utenti di digitare le proprie risposte che potrebbero causare problemi in Laboratorio IA.\n4.  Assicurati che la domanda sia impostata come \"Obbligatoria\".\n\n[/diagram_nums]\n\n### Domande numeriche\n\n<img style=\"margin-right: 10px; margin-left: 10px; bordo: 2px nero pieno\" src=\"https://curriculum.code.org/media/uploads/Numerical-Questions.png\"/>\n\n[diagram_nums]\n\n1.  Per i dati numerici, assicurarsi che la domanda sia elencata come domanda a risposta breve.\n2.  Digita la tua domanda. Facoltativamente, puoi aggiungere una descrizione con ulteriori informazioni.\n3.  Assicurati di selezionare Convalida risposta nel menu a tre punti nell'angolo in basso a destra. Quindi, scegli \"Numero\" e \"Is Number\" dalle opzioni di convalida. Ciò garantisce che l'utente possa inserire solo numeri in questo campo.\n4.  Assicurati che la domanda sia impostata come \"Obbligatoria\".\n\n[/diagram_nums]\n\n## Video\n\n(Apre YouTube in una nuova scheda)\n\n[![Creazione di un sondaggio](https://curriculum.code.org/media/uploads/Capture.PNG)](https://www.youtube.com/watch?v=ZdakHQ-HIXk)"
        },
        "csd-2022/creative-commons-search": {
          "display_name": "Creative Commons Search",
          "content": "Poiché Creative Commons fornisce un modo così semplice per sapere quali media puoi e non puoi utilizzare, molti motori di ricerca hanno integrato il filtro Creative Commons per garantire che ti forniscano solo risultati che puoi utilizzare. Quando utilizzi un motore di ricerca che supporta il filtro Creative Commons, di solito devi solo selezionare alcune caselle per assicurarti che i contenuti multimediali che trovi siano concessi in licenza per il tuo utilizzo.\n\n## Impostazioni di ricerca\n\nQuando utilizzi un motore di ricerca compatibile con Creative Commons, ti consigliamo di cercare un'impostazione che controlli la **licenza** dei risultati di ricerca. Ad esempio, la ricerca di immagini di Google ha un menu a discesa che ti consente di selezionare tra una manciata di diverse licenze Creative Commons.\n\n<img src=\"https://cdo-curriculum.s3.amazonaws.com/media/uploads/Screenshot-2017-05-02-11.43.56.png\" alt=\"Google CC Image Search\" class=\"center\" style=\"max-width: 400px;\">\n\nIn generale dovresti cercare supporti con licenza per uso **non commerciale**. Se prevedi di apportare modifiche ai media che trovi (come l'aggiunta di testo a un'immagine), dovrai anche assicurarti di avere il diritto di **modificare, adattare o sviluppare** i risultati della tua ricerca.\n\n## Riconoscere il credito\n\nQuando trovi un'immagine o un altro file multimediale che ti piace, assicurati non solo di ottenere una copia del file, ma anche di tenere traccia delle informazioni necessarie per dare credito al suo creatore. Per ogni file che desideri utilizzare, procedi nel seguente modo:\n\n-   Scarica una copia sul tuo computer (in modo da poterla caricare sul tuo sito web nel passaggio successivo)\n-   Annota tutte le informazioni che puoi trovare sull'autore, come ad esempio\n    -   Nome o soprannome\n    -   URL del sito web (non URL dell'immagine stessa)\n    -   Titolo dell'immagine"
        },
        "csd-2022/css": {
          "display_name": "CSS",
          "content": "CSS (Cascading Style Sheets) è il linguaggio utilizzato per definire lo stile e il layout delle pagine web. Puoi trovare ulteriori informazioni sulle regole CSS alla pagina [Documentazione Sviluppo web](/weblab/) ."
        },
        "csd-2022/css-overview": {
          "display_name": "Panoramica",
          "content": "CSS (Cascading Style Sheets) è il linguaggio utilizzato per definire lo stile e il layout delle pagine web. Puoi trovare ulteriori informazioni sulle regole CSS alla pagina [Documentazione Sviluppo web](/weblab/) ."
        },
        "csd-2022/data-and-change-events": {
          "display_name": "Dati ed eventi di modifica",
          "content": "Quando si utilizzano i sensori, è più comune controllare continuamente le modifiche anziché controllare solo quando qualcuno fa clic su un pulsante. Ci sono eventi speciali per questo che continuano a funzionare.\n\n## L'evento Data\n\n![data event](https://cdo-curriculum.s3.amazonaws.com/media/uploads/data_event_MLzY2I1.png)\n\nL'evento «data» si verifica ogni volta che il programma riceve informazioni dalla scheda. Ciò accade continuamente mentre il programma è in funzione. Quando configuri un gestore [\\`onboardEvent()\\`(#f78183)](/docs/applab/onBoardEvent/) per l'evento «data», il codice verrà eseguito ogni 50 millisecondi.\n\nRicorda che, anche se l'evento «dati» è collegato a un sensore specifico, puoi verificare la presenza di nuove informazioni da molti sensori nel gestore eventi.\n\n## L'evento `change`\n\n![change event](https://cdo-curriculum.s3.amazonaws.com/media/uploads/change_event.png)\n\nCome l'evento «dati», l'evento «change» continua a verificarsi, consentendoti di ottenere informazioni dai sensori in ogni momento. Tuttavia, l'evento «change» si verifica solo se il valore del sensore cambia abbastanza. Ogni sensore ha una quantità predefinita di modifiche necessaria per attivare un evento di «modifica» (di solito, la quantità è 1).\n\nL'evento «change» è utile perché reagisce solo a nuovi input e non perde tempo a ripetere lo stesso input. Ciò significa che probabilmente vorrai un evento di «change» separato"
        },
        "csd-2022/design-mode": {
          "display_name": "Modalità interfaccia"
        },
        "csd-2022/design-mode-elements": {
          "display_name": "Elementi della \"Modalità Interfaccia\""
        },
        "csd-2022/designing-screens-with-code": {
          "display_name": "Progettare schermate in modalità codice"
        },
        "csd-2022/drawing-shapes": {
          "display_name": "Disegnare Forme"
        },
        "csd-2022/for-loops": {
          "display_name": "Cicli con contatore"
        },
        "csd-2022/formatting-html": {
          "display_name": "Formattazione HTML"
        },
        "csd-2022/functions": {
          "display_name": "Funzioni"
        },
        "csd-2022/game-lab": {
          "display_name": "Sviluppo Giochi"
        },
        "csd-2022/game-lab-overview": {
          "display_name": "Panoramica"
        },
        "csd-2022/headings-and-paragraphs": {
          "display_name": "Intestazioni e Paragrafi"
        },
        "csd-2022/html": {
          "display_name": "HTML"
        },
        "csd-2022/html-overview": {
          "display_name": "Panoramica"
        },
        "csd-2022/html-tags": {
          "display_name": "Tag HTML"
        },
        "csd-2022/if-else-statements": {
          "display_name": "Istruzioni condizionali Se/Altrimenti"
        },
        "csd-2022/if-statements": {
          "display_name": "Istruzioni condizionali"
        },
        "csd-2022/if-statements-2": {
          "display_name": "Istruzioni condizionali"
        },
        "csd-2022/images-in-html": {
          "display_name": "Immagini in HTML"
        },
        "csd-2022/importing-a-model-in-app-lab": {
          "display_name": "Importazione di un modello in Sviluppo App"
        },
        "csd-2022/importing-screens": {
          "display_name": "Importare le schermate"
        },
        "csd-2022/introduction-to-ai-lab": {
          "display_name": "Introduzione al Laboratorio IA"
        },
        "csd-2022/javascript": {
          "display_name": "JavaScript"
        },
        "csd-2022/javascript-overview": {
          "display_name": "Panoramica"
        },
        "csd-2022/layout-properties": {
          "display_name": "Proprietà della disposizione della pagina (layout)"
        },
        "csd-2022/lists": {
          "display_name": "Liste"
        },
        "csd-2022/maker-toolkit": {
          "display_name": "Maker Toolkit"
        },
        "csd-2022/maker-toolkit-overview": {
          "display_name": "Panoramica"
        },
        "csd-2022/model-cards-in-ai-lab": {
          "display_name": "Schede modello in Laboratorio IA"
        },
        "csd-2022/modifying-arrays": {
          "display_name": "Modifica delle matrici (array)"
        },
        "csd-2022/multi-screen-apps": {
          "display_name": "App multischermo"
        },
        "csd-2022/naming-variables": {
          "display_name": "Denominazione delle variabili"
        },
        "csd-2022/other": {
          "display_name": "Altro"
        },
        "csd-2022/other-overview": {
          "display_name": "Panoramica"
        },
        "csd-2022/patterns-overview": {
          "display_name": "Panoramica"
        },
        "csd-2022/playing-notes": {
          "display_name": "Riprodurre Note"
        },
        "csd-2022/problem-solving-process": {
          "display_name": "Il processo di risoluzione dei problemi"
        },
        "csd-2022/problem-solving-process-general": {
          "display_name": "Il processo di risoluzione dei problemi"
        },
        "csd-2022/random-numbers": {
          "display_name": "Numeri Casuali"
        },
        "csd-2022/responding-to-user-input": {
          "display_name": "Reazione all'input dell'utente"
        },
        "csd-2022/selecting-a-label": {
          "display_name": "Selezione di un'etichetta"
        },
        "csd-2022/selecting-features": {
          "display_name": "Selezione delle caratteristiche"
        },
        "csd-2022/shapes-and-parameters": {
          "display_name": "Forme e Parametri"
        },
        "csd-2022/sprite-interactions": {
          "display_name": "Interazioni tra personaggi"
        },
        "csd-2022/sprite-properties": {
          "display_name": "Proprietà del personaggio"
        },
        "csd-2022/sprites": {
          "display_name": "Personaggi"
        },
        "csd-2022/style-sheets": {
          "display_name": "Fogli di stile"
        },
        "csd-2022/taking-input-with-getproperty": {
          "display_name": "Accettare la ricezione degli input con getProperty"
        },
        "csd-2022/text-properties": {
          "display_name": "Proprietà del testo"
        },
        "csd-2022/the-accelerometer": {
          "display_name": "L'accelerometro"
        },
        "csd-2022/the-counter-pattern": {
          "display_name": "Lo schema a contatore"
        },
        "csd-2022/the-counter-pattern-2": {
          "display_name": "Lo schema a contatore"
        },
        "csd-2022/the-draw-loop": {
          "display_name": "La funzione ciclica `draw()`"
        },
        "csd-2022/using-data-with-categorical-features": {
          "display_name": "Utilizzo di dati con caratteristiche categoriali"
        },
        "csd-2022/using-data-with-numerical-features": {
          "display_name": "Utilizzo di dati con caratteristiche numeriche"
        },
        "csd-2022/variables": {
          "display_name": "Variabili"
        },
        "csd-2022/velocity": {
          "display_name": "Velocità"
        },
        "csd-2022/velocity-and-the-counter-pattern": {
          "display_name": "Velocità e Schema di Conteggio"
        },
        "csd-2022/web-lab": {
          "display_name": "Sviluppo Web"
        },
        "csd-2022/which-type-of-chart": {
          "content": "![](https://curriculum.code.org/media/uploads/Screenshot-2020-02-27-at-10.56.17-PM.png)"
        }
      }
    }
  }
}