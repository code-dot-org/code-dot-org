---
fr:
  data:
    blocks:
      Dancelab_alternateMoves:
        text: "{GROUP} change toutes les {N} mesures \nentre {MOVE1} et {MOVE2}"
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          MOVE1:
            MOVES.Roll: Roulements de hanches
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Clown: Gangnam
            MOVES.Kick: Étoile
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Rest: Aucun
          MOVE2:
            MOVES.Roll: Roulements de hanches
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Clown: Gangnam
            MOVES.Kick: Étoile
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Rest: Aucun
      Dancelab_atTimestamp:
        text: après {TIMESTAMP} {UNIT}
        options:
          UNIT:
            '"seconds"': des secondes
      Dancelab_changeColorBy:
        text: changer {COLOR} {METHOD} de {AMOUNT}
      Dancelab_changeMoveEachLR:
        text: "{GROUP} faire {MOVE} {DIR} pour toujours"
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          MOVE:
            MOVES.Roll: Roulements de hanches
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Clown: Gangnam
            MOVES.Kick: Étoile
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Rest: Aucun
      Dancelab_changeMoveLR:
        text: "{SPRITE} faire {MOVE} {DIR} pour toujours"
        options:
          MOVE:
            MOVES.Roll: Roulements de hanches
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Clown: Gangnam
            MOVES.Kick: Étoile
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Thriller: Zombie
            MOVES.Rest: Aucun
      Dancelab_changePropBy:
        text: changer {SPRITE} {PROPERTY} par {VAL}
        options:
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      Dancelab_changePropEachBy:
        text: changer {GROUP} {PROPERTY} par {VAL}
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      Dancelab_doMoveEachLR:
        text: "{GROUP} faire {MOVE} {DIR} une fois"
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          MOVE:
            MOVES.XBend: Fente
            MOVES.Roll: Roulements de hanches
            MOVES.XClapSide: Tape des mains
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Dab: Dab
            MOVES.XFever: Disco
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Clown: Gangnam
            MOVES.XHeadHips: Tête + hanches
            MOVES.XHop: Saut
            MOVES.XHighKick: Coup de pied
            MOVES.XKnee: Genoux
            MOVES.XKneel: S'agenouiller
            MOVES.XOle: Olé
            MOVES.XArmsSide: Atteindre
            MOVES.XSlide: Glisser
            MOVES.Kick: Étoile
            MOVES.XArmsUp: Étirer
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Thriller: Zombie
            MOVES.Rest: Aucun
      Dancelab_doMoveLR:
        text: "{SPRITE} faire {MOVE} {DIR} une fois"
        options:
          MOVE:
            MOVES.XBend: Fente
            MOVES.Roll: Roulements de hanches
            MOVES.XClapSide: Tape des mains
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Dab: Dab
            MOVES.XFever: Disco
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Clown: Gangnam
            MOVES.XHeadHips: Tête + hanches
            MOVES.XHop: Saut
            MOVES.XHighKick: Coup de pied
            MOVES.XKnee: Genoux
            MOVES.XKneel: S'agenouiller
            MOVES.XOle: Olé
            MOVES.XArmsSide: Atteindre
            MOVES.XSlide: Glisser
            MOVES.Kick: Étoile
            MOVES.XArmsUp: Étirer
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Thriller: Zombie
            MOVES.Rest: Aucun
      Dancelab_eval:
        text: evaluer {CODE}
      Dancelab_everyMeasuresRange:
        text: 'répéter toutes les {N} mesures après {START} '
      Dancelab_everySeconds:
        text: 'répéter toutes les {N} {UNIT} '
        options:
          UNIT:
            '"seconds"': des secondes
      Dancelab_everySecondsRange:
        text: 'chaque {N} {UNIT} de {START} à {STOP} '
        options:
          UNIT:
            measures: Mesures
            seconds: Secondes
      Dancelab_everyVerseChorus:
        text: 'chaque {UNIT} '
      Dancelab_getEnergy:
        text: obtenir {RANGE}
        options:
          RANGE:
            '"low"': grave
            '"mid"': médium
            '"high"': aigu
      Dancelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      Dancelab_getTime:
        text: heure actuelle en {UNIT}
        options:
          UNIT:
            '"seconds"': des secondes
      Dancelab_ifDanceIs:
        text: si {SPRITE} exécute {DANCE}{DO1} {DO2}
        options:
          DANCE:
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Clown: Gangnam
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Roll: Roulements de hanches
            MOVES.Kick: Étoile
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Thriller: Zombie
            MOVES.Rest: Aucun
      Dancelab_ifTime:
        text: si {UNIT} est {OP} {N}{DO1} {DO2}
        options:
          UNIT:
            '"seconds"': des secondes
      Dancelab_jumpTo:
        text: "{SPRITE} passer à {LOCATION}"
        options:
          LOCATION:
            "{x: 200, y: 100}": vers le haut
            "{x: 200, y: 300}": vers le bas
            "{x: 100, y: 200}": vers la gauche
            "{x: 300, y: 200}": vers la droite
            "{x: 200, y: 200}": vers le centre
            "{x: 100, y: 100}": en haut à gauche
            "{x: 300, y: 100}": en haut à droite
            "{x: 100, y: 300}": en bas à gauche
            "{x: 300, y: 300}": en bas à droite
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": aléatoire
      Dancelab_jumpToEach:
        text: sauter {GROUP} à {LOCATION}
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          LOCATION:
            "{x: 200, y: 100}": vers le haut
            "{x: 200, y: 300}": vers le bas
            "{x: 100, y: 200}": vers la gauche
            "{x: 300, y: 200}": vers la droite
            "{x: 200, y: 200}": vers le centre
            "{x: 100, y: 100}": en haut à gauche
            "{x: 300, y: 100}": en haut à droite
            "{x: 100, y: 300}": en bas à gauche
            "{x: 300, y: 300}": en bas à droite
            "{x: randomNumber(60, 340), y: randomNumber(60, 340)}": aléatoire
      Dancelab_layoutSprites:
        text: afficher {GROUP} en tant que {FORMAT}
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          FORMAT:
            '"diamond"': diamant
            '"grid"': grille
            '"random"': aléatoire
      Dancelab_makeAnonymousDanceSprite:
        text: faire un nouveau {COSTUME} à {LOCATION}
        options:
          COSTUME:
            '"ALIEN"': extraterrestre
            '"BEAR"': Ours
            '"CAT"': chat
            '"DOG"': chien
            '"DUCK"': canard
            '"FROG"': Grenouille
            '"MOOSE"': tous les élans
            '"PINEAPPLE"': Ananas
            '"ROBOT"': robot
            '"SHARK"': Requin
            '"UNICORN"': licorne
          LOCATION:
            "{x: 200, y: 100}": vers le haut
            "{x: 200, y: 300}": vers le bas
            "{x: 100, y: 200}": vers la gauche
            "{x: 300, y: 200}": vers la droite
            "{x: 200, y: 200}": vers le centre
            "{x: 100, y: 100}": en haut à gauche
            "{x: 300, y: 100}": en haut à droite
            "{x: 100, y: 300}": en bas à gauche
            "{x: 300, y: 300}": en bas à droite
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": aléatoire
      Dancelab_makeNewDanceSprite:
        text: crée un nouveau {COSTUME}appelé {NAME} à {LOCATION}
        options:
          COSTUME:
            '"ALIEN"': extraterrestre
            '"BEAR"': Ours
            '"CAT"': chat
            '"DOG"': chien
            '"DUCK"': canard
            '"FROG"': Grenouille
            '"MOOSE"': tous les élans
            '"PINEAPPLE"': Ananas
            '"ROBOT"': robot
            '"SHARK"': Requin
            '"UNICORN"': licorne
          LOCATION:
            "{x: 200, y: 100}": vers le haut
            "{x: 200, y: 300}": vers le bas
            "{x: 100, y: 200}": vers la gauche
            "{x: 300, y: 200}": vers la droite
            "{x: 200, y: 200}": vers le centre
            "{x: 100, y: 100}": en haut à gauche
            "{x: 300, y: 100}": en haut à droite
            "{x: 100, y: 300}": en bas à gauche
            "{x: 300, y: 300}": en bas à droite
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": aléatoire
      Dancelab_makeNewDanceSpriteGroup:
        text: faire un {N} nouveau {COSTUME}dans un {LAYOUT}
        options:
          N:
            '2': '2'
            '3': '3'
            '4': '4'
            '5': '5'
            '6': '6'
            '7': '7'
            '8': '8'
            '9': '9'
            '10': '10'
            '11': '11'
            '12': '12'
            '13': '13'
            '14': '14'
            '15': '15'
            '16': '16'
            '17': '17'
            '18': '18'
            '19': '19'
            '20': '20'
          COSTUME:
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          LAYOUT:
            '"diamond"': diamant
            '"grid"': grille
            '"random"': aléatoire
      Dancelab_mixColors:
        text: mélanger {COLOR1} et {COLOR2}
      Dancelab_nMeasures:
        text: "{N} mesures"
      Dancelab_onPointerDown:
        text: sur le pointeur vers le bas
      Dancelab_onPointerDrag:
        text: sur le glissement du pointeur
      Dancelab_onPointerUp:
        text: sur le pointeur vers le haut
      Dancelab_randomColor:
        text: couleur aléatoire
      Dancelab_setBackground:
        text: définir la couleur de fond {COLOR}
      Dancelab_setBackgroundEffect:
        text: définir l’effet d'arrière-plan {EFFECT} {PALETTE}
        options:
          EFFECT:
            '"none"': Aucun
      Dancelab_setBackgroundEffectWithPalette:
        text: définir l'effet d'arrière-plan{PALETTE} {EFFECT}
        options:
          EFFECT:
            '"none"': Aucun
      Dancelab_setDanceSpeed:
        text: changer la vitesse de la danse à {SPEED} pour {SPRITE}
        options:
          SPEED:
            '1': normal
            '2': rapide
            '4': très rapide
            '0.5': lent
            '0.25': très lent
      Dancelab_setDanceSpeedEach:
        text: mettre la vitesse de danse de {GROUP} à {SPEED}
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          SPEED:
            '1': normal
            '2': rapide
            '4': très rapide
            '0.5': lent
            '0.25': très lent
      Dancelab_setForegroundEffect:
        text: définir l’effet de premier plan {EFFECT}
        options:
          EFFECT:
            '"none"': Aucun
      Dancelab_setForegroundEffectExtended:
        text: définir l’effet de premier plan {EFFECT}
        options:
          EFFECT:
            '"none"': Aucun
      Dancelab_setProp:
        text: 'définir {SPRITE} {PROPERTY} à {VAL} '
        options:
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      Dancelab_setPropEach:
        text: définir {GROUP} {PROPERTY} à {VAL}
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      Dancelab_setPropRandom:
        text: randomiser {SPRITE} {PROPERTY}
        options:
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      Dancelab_setPropRandomEach:
        text: randomiser {GROUP} {PROPERTY}
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      Dancelab_setTint:
        text: définir la teinte de {SPRITE} à {VAL}
      Dancelab_setTintEach:
        text: définir la teinte de {THIS} à {VAL}
        options:
          THIS:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
      Dancelab_setTintEachInline:
        text: définir la teinte de {THIS} à {VAL}
        options:
          THIS:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
      Dancelab_setTintInline:
        text: définir la teinte de {SPRITE} à {VAL}
      Dancelab_setVisible:
        text: régler {SPRITE} visible à {VISIBILITY}
        options:
          VISIBILITY:
            'true': visible
            'false': invisible
      Dancelab_setVisibleEach:
        text: Définir la visibilité de {THIS} à {VISIBILITY}
        options:
          THIS:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          VISIBILITY:
            'true': visible
            'false': invisible
      Dancelab_startMapping:
        text: "{SPRITE} commence {PROPERTY} suivant {RANGE}"
        options:
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
          RANGE:
            '"bass"': grave
            '"mid"': médium
            '"treble"': aigu
      Dancelab_startMappingEach:
        text: "{GROUP} commence {PROPERTY} après {RANGE}"
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
          RANGE:
            '"bass"': grave
            '"mid"': médium
            '"treble"': aigu
      Dancelab_stopMapping:
        text: "{SPRITE} arrête {PROPERTY} suivant {RANGE}"
        options:
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
          RANGE:
            '"bass"': grave
            '"mid"': médium
            '"treble"': aigu
      Dancelab_stopMappingEach:
        text: "{GROUP} arrête {PROPERTY} après {RANGE}"
        options:
          GROUP:
            sprites: tout
            '"ALIEN"': tous les extraterrestres
            '"CAT"': tous les chats
            '"DOG"': tous les chiens
            '"MOOSE"': tous les élans
            '"ROBOT"': tous les robots
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
          RANGE:
            '"bass"': grave
            '"mid"': médium
            '"treble"': aigu
      Dancelab_translateStrings:
        text: traduire {STRING}
        options:
          STRING:
            '"diamond"': diamant
            '"x"': x
            '"y"': y
            '"1"': '1'
            '"2"': '2'
            '"3"': '3'
            '"4"': '4'
            '"5"': '5'
            '"6"': '6'
            '"7"': '7'
            '"8"': '8'
            '"9"': '9'
      Dancelab_whenKey:
        text: En appuyant sur {KEY}
        options:
          KEY:
            '"up"': vers le haut
            '"left"': vers la gauche
            '"down"': vers le bas
            '"right"': vers la droite
            '"space"': espace
            '"i"': i
            '"x"': x
            '"y"': y
            '"1"': '1'
            '"2"': '2'
            '"3"': '3'
            '"4"': '4'
            '"5"': '5'
            '"6"': '6'
            '"7"': '7'
            '"8"': '8'
            '"9"': '9'
      Dancelab_whenPeak:
        text: lorsque {RANGE} plafonne
        options:
          RANGE:
            '0': grave
            '1': médium
            '2': aigu
      Dancelab_whenSetup:
        text: configuration
      Dancelab_whenSetup2:
        text: configuration
      Dancelab_whenSetupSong:
        text: 'configurer {SONG} '
      gamelab_addBehaviorSimple:
        text: le lutin {SPRITE} commence à {BEHAVIOR}
      gamelab_allSpritesWithAnimation:
        text: "{ANIMATION}"
      gamelab_atTime:
        options:
          UNIT:
            '"seconds"': des secondes
      gamelab_changePropBy:
        text: changer {SPRITE} {PROPERTY} par {VAL}
        options:
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
            '"speed"': vitesse
      gamelab_checkTouching:
        text: "{CONDITION} {SPRITE1} touche {SPRITE2}"
        options:
          CONDITION:
            '"when"': quand
            '"while"': tant que
      gamelab_clickedOn:
        text: quand {SPRITE} cliqué
      gamelab_clickedSpritePointer:
        text: cliqué {SPRITE}
      gamelab_comment:
        text: 'commentaire : {COMMENT}'
      gamelab_createNewSprite:
        text: crée un nouveau lutin appellé {NAME} avec le costume {COSTUME}  à {LOCATION}
      gamelab_destroy:
        text: supprimer {THIS}
      gamelab_draggable:
        text: Peut être déplacé
      gamelab_edgesDisplace:
        text: les bords empêchent {SPRITE} de bouger
      gamelab_getProp:
        text: "{SPRITE} {PROPERTY}"
        options:
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
            '"speed"': vitesse
      gamelab_getThisSprite:
        text: "{CHOICE} lutin"
        options:
          CHOICE:
            '"other"': autre
      gamelab_getTime:
        options:
          UNIT:
            '"seconds"': des secondes
      gamelab_hideTitleScreen:
        text: cacher l'écran-titre
      gamelab_isKeyPressed:
        options:
          KEY:
            '"up"': vers le haut
            '"down"': vers le bas
            '"left"': vers la gauche
            '"right"': vers la droite
            '"space"': espace
            '"i"': i
            '"x"': x
            '"y"': y
      gamelab_isTouchingEdges:
        text: "{SPRITE} touche les bords"
      gamelab_jumpTo:
        text: "{SPRITE} passer à {LOCATION}"
      gamelab_keyPressed:
        text: "{CONDITION} {KEY} appuyé"
        options:
          CONDITION:
            '"when"': quand
            '"while"': tant que
          KEY:
            '"up"': vers le haut
            '"down"': vers le bas
            '"left"': vers la gauche
            '"right"': vers la droite
            '"space"': espace
            '"i"': i
            '"x"': x
            '"y"': y
      gamelab_locationAt:
        text: 'emplacement x: {X} y: {Y}'
      gamelab_locationMouse:
        text: emplacement de la souris
      gamelab_locationOf:
        text: emplacement de {SPRITE}
      gamelab_location_picker:
        text: "{LOCATION}"
      gamelab_makeNewSpriteAnon:
        text: faire un nouveau lutin {ANIMATION_NAME} à {LOCATION}
      gamelab_mirrorSprite:
        text: "{SPRITE} orienté vers {DIRECTION}"
        options:
          DIRECTION:
            '"right"': vers la droite
            '"left"': vers la gauche
      gamelab_mouseLocation:
        text: emplacement de la souris
      gamelab_moveBackward:
        text: déplace {SPRITE} de {DISTANCE} pixels en arrière
      gamelab_moveForward:
        text: avance {SPRITE} de {DISTANCE} pixels
      gamelab_moveInDirection:
        text: déplacer {SPRITE} de {DISTANCE} pixels vers {DIRECTION}
      gamelab_moveToward:
        text: déplacer {SPRITE} de {DISTANCE} pixels vers {TARGET}
      gamelab_newSpritePointer:
        text: cliqué {SPRITE}
      gamelab_objectSpritePointer:
        text: cliqué {SPRITE}
      gamelab_playSound:
        text: jouer le son {SOUND}
      gamelab_pointInDirection:
        text: diriger {SPRITE} vers {DIRECTION}
      gamelab_printText:
        text: imprimer {TEXT}
      gamelab_randColor:
        text: couleur aléatoire
      gamelab_randomColor:
        text: couleur aléatoire
      gamelab_randomLocation:
        text: lieu aléatoire
      gamelab_removeAllBehaviors:
        text: "{SPRITE} arrête tout"
      gamelab_removeBehaviorSimple:
        text: le lutin {SPRITE} arrête de {BEHAVIOR}
      gamelab_removeTint:
        text: supprimer la couleur de {THIS}
      gamelab_repeatForever:
        text: répéter à l'infini
      gamelab_setAnimation:
        text: Changer le costume de {THIS} en {ANIMATION}
      gamelab_setBackground:
        text: définir la couleur de fond {COLOR}
      gamelab_setBackgroundImage:
        text: établir {IMG} comme arrière-plan
        options:
          IMG:
            '"https://studio.code.org/blockly/media/skins/studio/background_cave.png"': caverne
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': ville
            '"https://studio.code.org/blockly/media/skins/studio/background.png"': tribunal
            '"https://studio.code.org/blockly/media/skins/studio/background_desert.png"': désert
            '"https://studio.code.org/blockly/media/skins/studio/background_space.png"': galaxie
            '"https://studio.code.org/blockly/media/skins/studio/background_grid.png"': grille
            '"https://studio.code.org/blockly/media/skins/studio/background_rainbow.png"': arc-en-ciel
            '"https://studio.code.org/blockly/media/skins/studio/background_santa.png"': étoiles
            '"https://studio.code.org/blockly/media/skins/studio/background_underwater.png"': sous-marin
            '"https://studio.code.org/blockly/media/skins/studio/background_winter.png"': hiver
            undefined: aucun
      gamelab_setBackgroundImageAs:
        text: établir {IMG} comme arrière-plan
      gamelab_setDefaultSpriteSize:
        options:
          SIZE:
            '25': extra small
            '50': small
            '75': intermédiaire
            '100': large
      gamelab_setProp:
        text: établir {PROPERTY} de {SPRITE} à {VAL}
        options:
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
            '"speed"': vitesse
      gamelab_setProp_dropdown:
        options:
          PROPERTY:
            '"scale"': taille
          SIZE:
            '25': extra small
            '50': small
            '75': intermédiaire
            '100': large
      gamelab_setSizes:
        text: établir {PROPERTY} de {SPRITE}  à {N} %
        options:
          PROPERTY:
            '"scale"': taille
            '"width"': largeur
            '"height"': hauteur
      gamelab_setTint:
        text: changer la couleur de {THIS} en {COLOR}
      gamelab_setupSim:
        text: configure la simulation avec {SPRITE1N}{SPRITE1COSTUME}vitesse{SPRITE1SPEED}{SPRITE2N}{SPRITE2COSTUME}vitesse{SPRITE2SPEED}ramassant{SPRITE3N}{SPRITE3COSTUME}
      gamelab_showTitleScreen:
        text: montre le titre de l'écran {BREAK} titre {TITLE} texte {SUBTITLE}
      gamelab_spriteClicked:
        text: "{CONDITION} {SPRITE} cliqué"
        options:
          CONDITION:
            '"when"': quand
            '"while"': tant que
      gamelab_subjectSpritePointer:
        text: cliqué {SPRITE}
      gamelab_turn:
        text: tourner {SPRITE} vers {DIRECTION} de {N} degrés
        options:
          DIRECTION:
            '"right"': vers la droite
            '"left"': vers la gauche
      gamelab_updateTitleWithColor:
        text: affiche le titre à l'écran {BREAK} titre {TITLE} couleur {COLOR}
      gamelab_whenDownArrow:
        text: quand flèche du bas appuyée
      gamelab_whenKey:
        text: En appuyant sur {KEY}
        options:
          KEY:
            '"up"': vers le haut
            '"down"': vers le bas
            '"left"': vers la gauche
            '"right"': vers la droite
            '"space"': espace
      gamelab_whenLeftArrow:
        text: quand flèche de gauche appuyée
      gamelab_whenRightArrow:
        text: quand flèche de droite appuyée
      gamelab_whenTouching:
        text: quand {SPRITE1} touche {SPRITE2}
      gamelab_whenUpArrow:
        text: quand flèche du haut appuyée
      gamelab_whileDownArrow:
        text: tant que flèche du bas appuyée
      gamelab_whileKey:
        text: tant que {KEY} appuyé
        options:
          KEY:
            '"up"': vers le haut
            '"down"': vers le bas
            '"left"': vers la gauche
            '"right"': vers la droite
            '"space"': espace
      gamelab_whileLeftArrow:
        text: tant que flèche gauche appuyée
      gamelab_whileRightArrow:
        text: tant que flèche droite appuyée
      gamelab_whileTouching:
        text: tant que {SPRITE1} touche {SPRITE2}
      gamelab_whileUpArrow:
        text: tant que flèche du haut appuyée
      gamelab_xLocationOf:
        text: coordonnées x de {SPRITE}
      gamelab_yLocationOf:
        text: coordonnées y de {SPRITE}
      Mikelab_addBehaviorSimple:
        text: le lutin {SPRITE} commence à {BEHAVIOR}
      Mikelab_addTrainingData:
        text: 'ajouter des données d''entraînement : {NAME},{LOCATION}'
        options:
          NAME:
            "{x: 201, y: 100}": objet
            "{x: 200, y: 100}": poissons
          LOCATION:
            "{x: randomNumber(51, 350), y: randomNumber(50, 350)}": poissons
            "{x: randomNumber(52, 350), y: randomNumber(50, 350)}": pas de poisson
            "{x: randomNumber(50, 350), y: randomNumber(50, 350)}": my-label
            "{x: randomNumber(53, 350), y: randomNumber(50, 350)}": pas my-label
      Mikelab_allSpritesWithAnimation:
        text: "{ANIMATION}"
      Mikelab_changePropBy:
        options:
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
      Mikelab_createNewSprite:
        options:
          LOCATION:
            "{x: 200, y: 100}": vers le haut
            "{x: 200, y: 300}": vers le bas
            "{x: 100, y: 200}": vers la gauche
            "{x: 300, y: 200}": vers la droite
            "{x: 200, y: 200}": vers le centre
            "{x: 100, y: 100}": en haut à gauche
            "{x: 300, y: 100}": en haut à droite
            "{x: 100, y: 300}": en bas à gauche
            "{x: 300, y: 300}": en bas à droite
      Mikelab_eval:
        text: evaluer {CODE}
      Mikelab_getNext:
        text: obtenir l'objet suivant
      Mikelab_getProp:
        options:
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
      Mikelab_groupChangeAnim:
        text: modifier {SELECT} {COSTUME} en {COSTUME2}
        options:
          SELECT:
            '"all"': tout
      Mikelab_groupChangePropBy:
        text: change {PROPERTY} de {SELECT} {COSTUME} en {VAL}
        options:
          SELECT:
            '"all"': tout
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
      Mikelab_groupCreateNewSprite:
        text: faire un nouveau {COSTUME} à {LOCATION}
        options:
          LOCATION:
            "{x: 200, y: 100}": vers le haut
            "{x: 200, y: 300}": vers le bas
            "{x: 100, y: 200}": vers la gauche
            "{x: 300, y: 200}": vers la droite
            "{x: 200, y: 200}": vers le centre
            "{x: 100, y: 100}": en haut à gauche
            "{x: 300, y: 100}": en haut à droite
            "{x: 100, y: 300}": en bas à gauche
            "{x: 300, y: 300}": en bas à droite
      Mikelab_groupDestroy:
        text: supprimer {SELECT} {COSTUME}
        options:
          SELECT:
            '"all"': tout
      Mikelab_groupDisplace:
        text: tous les {COSTUME} empêchent {COSTUME2} de se déplacer
      Mikelab_groupEdgesDisplace:
        text: les bords empêchent {COSTUME} de se déplacer
      Mikelab_groupGetProp:
        text: "{SELECT} {PROPERTY} de {COSTUME} "
        options:
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
      Mikelab_groupRemoveAllBehaviors:
        text: arrêter {SELECT} comportements de {COSTUME} [1]
        options:
          SELECT:
            '"all"': tout
      Mikelab_groupRemoveBehaviorSimple:
        text: "{SELECT} {COSTUME} arrête {BEHAVIOR}"
        options:
          SELECT:
            '"all"': tout
      Mikelab_groupRemoveTint:
        text: supprimer la couleur de {SELECT} {COSTUME}
        options:
          SELECT:
            '"all"': tout
      Mikelab_groupSetProp:
        text: établir {PROPERTY} de {SELECT} {COSTUME} à {VAL}
        options:
          SELECT:
            '"all"': tout
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
      Mikelab_groupSetTint:
        text: changer la couleur de {SELECT} {COSTUME} en {COLOR}
        options:
          SELECT:
            '"all"': tout
      Mikelab_groupWhenClickedOn:
        text: lorsque {COSTUME} cliqué
      Mikelab_groupWhenXTouchesY:
        text: lorsque{COSTUME} touche {COSTUME2}
      Mikelab_groupWhileClicked:
        text: en cliquant sur {COSTUME}
      Mikelab_groupWhileTouchingAny:
        text: tant que{COSTUME} touche {COSTUME2}{STATEMENT}
      Mikelab_hasBehavior:
        text: En ce moment {SPRITE} fait {BEHAVIOR}
      Mikelab_hideFish:
        text: supprimer {TRASH}
        options:
          TRASH:
            object: objet
            fish: poissons
      Mikelab_ifDanceIs:
        text: si {SPRITE} exécute {DANCE}{DO1} {DO2}
        options:
          DANCE:
            MOVES.ClapHigh: Tape des mains en l'air
            MOVES.Clown: Gangnam
            MOVES.Dab: Dab
            MOVES.DoubleJam: Double la mise
            MOVES.Drop: Grand écart
            MOVES.Floss: Floss dance
            MOVES.Fresh: Fresh dance
            MOVES.Roll: Roulements de hanches
            MOVES.Kick: Étoile
            MOVES.ThisOrThat: Ceci ou cela
            MOVES.Thriller: Zombie
            MOVES.Rest: Aucun
      Mikelab_ifLabel:
        text: si {DANCE}faire {DO1} sinon {DO2}
        options:
          DANCE:
            MOVES.ClapHigh: poissons
            MOVES.Clown: my-label
      Mikelab_ifRecognizeLabel:
        text: si reconnaître l'objet comme {DANCE}faire {DO1} sinon {DO2}
        options:
          DANCE:
            MOVES.ClapHigh: poissons
            MOVES.Clown: my-label
      Mikelab_ifRecognizeLabelOnly:
        text: si reconnaître l'objet comme {DANCE}faire {DO1}
        options:
          DANCE:
            MOVES.ClapHigh: poissons
            MOVES.Clown: pas my-label
      Mikelab_locationAt:
        text: 'emplacement x: {X} y: {Y}'
      Mikelab_location_picker:
        text: "{LOCATION}"
      Mikelab_randomColor:
        text: couleur aléatoire
      Mikelab_removeBehaviorSimple:
        text: le lutin {SPRITE} arrête de {BEHAVIOR}
      Mikelab_repeatUntilComplete:
        text: répéter à l'infini
      Mikelab_sendBad:
        text: déplacer l'objet vers la gauche
      Mikelab_sendGood:
        text: déplacer l'objet vers la droite
      Mikelab_setBG:
        options:
          BG:
            '"https://studio.code.org/api/v1/animation-library/04L4sdTODkNZF1OHf4qO_I.Al3QP43wA/category_backgrounds/city.png"': ville
      Mikelab_setProp:
        options:
          PROPERTY:
            '"scale"': taille
            '"x"': position x
            '"y"': position y
      Mikelab_setupSim:
        text: configure la simulation avec {SPRITE1N}{SPRITE1COSTUME}vitesse{SPRITE1SPEED}{SPRITE2N}{SPRITE2COSTUME}vitesse{SPRITE2SPEED}ramassant{SPRITE3N}{SPRITE3COSTUME}
      Mikelab_showScoreboard:
        options:
          CORNER:
            '"right"': vers la droite
            '"left"': vers la gauche
      Mikelab_sprite:
        text: nouveau {COSTUME} lutin à {LOCATION}
        options:
          LOCATION:
            "{x: 200, y: 100}": vers le haut
            "{x: 200, y: 300}": vers le bas
            "{x: 100, y: 200}": vers la gauche
            "{x: 300, y: 200}": vers la droite
            "{x: 200, y: 200}": vers le centre
            "{x: 100, y: 100}": en haut à gauche
            "{x: 300, y: 100}": en haut à droite
            "{x: 100, y: 300}": en bas à gauche
            "{x: 300, y: 300}": en bas à droite
      Mikelab_whenClickedOn:
        text: quand {SPRITE} cliqué
      Mikelab_whenKeyPressed:
        text: En appuyant sur {KEY}
        options:
          KEY:
            '"up"': flèche « vers le haut »
            '"down"': flèche « vers le bas »
            '"left"': flèche « vers la gauche »
            '"right"': flèche « vers la droite »
            '"w"': O
            '"a"': A
            '"s"': S
            '"d"': D
      Mikelab_whenKeyReleased:
        options:
          KEY:
            '"up"': flèche « vers le haut »
            '"down"': flèche « vers le bas »
            '"left"': flèche « vers la gauche »
            '"right"': flèche « vers la droite »
            '"w"': O
            '"a"': A
            '"s"': S
            '"d"': D
      Mikelab_whenMouseClicked:
        text: quand souris cliquée
      Mikelab_whenYesNoClicked:
        text: lorsque {KEY} a cliqué sur
      Mikelab_whileKeyPressed:
        options:
          KEY:
            '"up"': flèche « vers le haut »
            '"down"': flèche « vers le bas »
            '"left"': flèche « vers la gauche »
            '"right"': flèche « vers la droite »
      Mikelab_xLocationOf:
        text: coordonnées x de {SPRITE}
      Mikelab_yLocationOf:
        text: coordonnées y de {SPRITE}
      RyanLab_moveForward:
        text: avancer
      RyanLab_turnLeft:
        text: tourner à gauche
      RyanLab_turnRight:
        text: tourner à droite
      SpriteLab2Beta_spriteSay:
        text: lutin {SPRITE} dire {TEXT} pendant {SECONDS} secondes
      Vector_createSpriteWith:
        text: crée un lutin en train de{STATEMENT}
      Vector_log:
        text: message de journal {MESSAGE}
      Vector_positionCenter:
        text: vers le centre
      Vector_push:
        text: établir vitesse à{VECTOR}
      Vector_randomLocation:
        text: lieu aléatoire
      Vector_setColor:
        text: établir couleur sur {COLOR}
      Vector_setSize:
        text: établir largeur à {WIDTH} hauteur à {HEIGHT}
      Vector_teleportTo:
        text: établir position {POSITION}
      Vector_vectorNorth:
        text: nord
      Vector_where:
        text: chaque lutin où {PROPERTY} est {VALUE} fait{STATEMENT}
        options:
          PROPERTY:
            "'shapeColor'": couleur
      aalab_layoutSprites:
        options:
          FORMAT:
            '"grid"': grille
            '"random"': aléatoire
      aalab_someGraduallyStartIntervention:
        options:
          PORTION:
            '1': tout
            '0.75': most
            '0.5': half of
            '0.25': few
      aalab_someStartIntervention:
        options:
          PORTION:
            '1': tout
            '0.75': most
            '0.5': half of
            '0.25': few
      binary_drawBin:
        text: dessiner binaire {BIN}
      binary_drawBinScreen:
        text: |-
          dessiner écran
          {B1}{B2}{B3}{B4}{B5}{B6}123_321  123_321 123_321[B7] 123_321 123_321  123_321 123_321  123_321 123_321 123_321  123_321 123_321 123_321[6]{B8}
      binary_drawDec:
        text: dessiner décimale {DEC}
      binary_drawPixelHere:
        text: définir pixel {VAL}
        options:
          VAL:
            '0': désactivé
            '1': activé
      binary_drawString:
        text: tirer ficelle {STR}
      binary_goTo:
        text: sauter à {LOC}
      binary_goToHome:
        text: sauter en haut à gauche
      binary_gridSize:
        text: définir taille de la grille {SIZE}
      binary_move:
        text: déplacer {DIR}
        options:
          DIR:
            '"up"': vers le haut
            '"down"': vers le bas
            '"left"': vers la gauche
            '"right"': vers la droite
      binary_whenKey:
        text: En appuyant sur {KEY}
        options:
          KEY:
            '"up"': vers le haut
            '"down"': vers le bas
            '"left"': vers la gauche
            '"right"': vers la droite
            '"space"': espace
      craft_ifPath:
        text: si chemin {DIR}{STATEMENT}
        options:
          DIR:
            "'ahead'": devant
      craft_ifStandingOn:
        text: si debout sur {TYPE}{STATEMENT}
        options:
          TYPE:
            "'sand'": sable
            "'planksOak'": planches en chêne
      craft_ifStandingOnLimit:
        text: si debout sur {TYPE}{STATEMENT}
        options:
          TYPE:
            "'sand'": sable
      craft_log:
        text: message de journal {MESSAGE}
      craft_moveForward:
        text: avancer
      craft_placeBlock:
        text: placer {blockType}
      craft_placePrismarine:
        text: placer prismarine
      craft_placeTorch:
        text: placer la torche
      craft_repeatUntilConduit:
        text: répéter jusqu'à ce que le tuyau soit terminé{STATEMENT}
      craft_repeatUntilGoal:
        text: répéter jusqu'au but{STATEMENT}
      craft_spawnEntity:
        text: œuf {ENTITY}
        options:
          ENTITY:
            '"dolphin"': dauphin
            '"squid"': poulpe
      craft_turn:
        text: tourner {DIR}
        options:
          DIR:
            right: droite ↻
            left: gauche ↺
