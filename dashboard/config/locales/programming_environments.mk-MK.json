{
  "mk-MK": {
    "data": {
      "programming_environments": {
        "weblab": {
          "description": "Веб-базиран HTML/CSS eдитор.",
          "categories": {
            "css_properties": {
              "name": "Својства во CSS"
            }
          }
        },
        "gamelab": {
          "name": "Работилница за апликации",
          "description": "Game Lab е програмерска средина каде можете да создадете возбудливи игри и анимации. Дизајнирајте ги вашите ликови, кодирајте со Blocks или JavaScript и споделете ја вашата игра за неколку секунди.",
          "categories": {
            "game_lab": {
              "name": "Работилница за апликации",
              "expressions": {
                "keyDown": {
                  "palette_params": {
                    "code": {
                      "type": "Стринг"
                    }
                  }
                },
                "keyWentDown": {
                  "palette_params": {
                    "code": {
                      "type": "Стринг"
                    }
                  }
                },
                "keyWentUp": {
                  "palette_params": {
                    "code": {
                      "type": "Стринг"
                    }
                  }
                },
                "mouseDown": {
                  "palette_params": {
                    "button": {
                      "type": "Стринг"
                    }
                  }
                },
                "mouseWentDown": {
                  "palette_params": {
                    "button": {
                      "type": "Стринг"
                    }
                  }
                },
                "mouseWentUp": {
                  "palette_params": {
                    "button": {
                      "type": "Стринг"
                    }
                  }
                },
                "playSound": {
                  "palette_params": {
                    "url": {
                      "type": "Стринг"
                    },
                    "loop": {
                      "type": "Булова"
                    }
                  }
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Стринг"
                    },
                    "gender": {
                      "type": "Стринг"
                    },
                    "language": {
                      "type": "Стринг"
                    }
                  }
                },
                "showMobileControls": {
                  "palette_params": {
                    "spaceButtonVisible": {
                      "type": "Булова"
                    },
                    "dpadVisible": {
                      "type": "Булова"
                    },
                    "dpadFourWay": {
                      "type": "Булова"
                    },
                    "mobileOnly": {
                      "type": "Булова"
                    }
                  }
                },
                "stopSound": {
                  "palette_params": {
                    "url": {
                      "type": "Стринг"
                    }
                  }
                }
              }
            },
            "sprites": {
              "name": "Сприти",
              "expressions": {
                "mirrorX": {
                  "palette_params": {
                    "dir": {
                      "type": "Број"
                    }
                  }
                },
                "mirrorY": {
                  "palette_params": {
                    "dir": {
                      "type": "Број"
                    }
                  }
                },
                "pointTo": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "setAnimation": {
                  "palette_params": {
                    "label": {
                      "type": "Стринг"
                    }
                  }
                },
                "setCollider": {
                  "palette_params": {
                    "type": {
                      "type": "Стринг"
                    },
                    "xOffset": {
                      "type": "Број"
                    },
                    "yOffset": {
                      "type": "Број"
                    },
                    "width/radius": {
                      "type": "Број"
                    },
                    "height": {
                      "type": "Број"
                    },
                    "rotationOffset": {
                      "type": "Број"
                    }
                  }
                },
                "setFrame": {
                  "palette_params": {
                    "frame": {
                      "type": "Број"
                    }
                  }
                },
                "setSpeedAndDirection": {
                  "palette_params": {
                    "speed": {
                      "type": "Број"
                    },
                    "angle": {
                      "type": "Број"
                    }
                  }
                },
                "setVelocity": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "createSprite": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "width": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    },
                    "height": {
                      "type": "Број"
                    }
                  }
                }
              }
            },
            "groups": {
              "name": "Групи",
              "expressions": {
                "get": {
                  "palette_params": {
                    "i": {
                      "type": "Број"
                    }
                  }
                },
                "pointToEach": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "setAnimationEach": {
                  "palette_params": {
                    "label": {
                      "type": "Стринг"
                    }
                  }
                },
                "setColliderEach": {
                  "palette_params": {
                    "type": {
                      "type": "Стринг"
                    },
                    "yOffset": {
                      "type": "Број"
                    },
                    "width/radius": {
                      "type": "Број"
                    },
                    "height": {
                      "type": "Број"
                    },
                    "rotationOffset": {
                      "type": "Број"
                    }
                  }
                },
                "setHeightEach": {
                  "palette_params": {
                    "height": {
                      "type": "Број"
                    }
                  }
                },
                "setLifetimeEach": {
                  "palette_params": {
                    "lifetime": {
                      "type": "Број"
                    }
                  }
                },
                "setMirrorXEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Број"
                    }
                  }
                },
                "setMirrorYEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Број"
                    }
                  }
                },
                "setRotateToDirectionEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Булова"
                    }
                  }
                },
                "setRotationEach": {
                  "palette_params": {
                    "angle": {
                      "type": "Број"
                    }
                  }
                },
                "setRotationSpeedEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Број"
                    }
                  }
                },
                "setScaleEach": {
                  "palette_params": {
                    "scale": {
                      "type": "Број"
                    }
                  }
                },
                "setSpeedAndDirectionEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Број"
                    },
                    "angle": {
                      "type": "Број"
                    }
                  }
                },
                "setVelocityEach": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "setVelocityXEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Број"
                    }
                  }
                },
                "setVelocityYEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Број"
                    }
                  }
                },
                "setVisibleEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Булова"
                    }
                  }
                },
                "setWidthEach": {
                  "palette_params": {
                    "width": {
                      "type": "Број"
                    }
                  }
                }
              }
            },
            "drawing": {
              "expressions": {
                "arc": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    },
                    "w": {
                      "type": "Број"
                    },
                    "h": {
                      "type": "Број"
                    },
                    "start": {
                      "type": "Број"
                    },
                    "stop": {
                      "type": "Број"
                    }
                  }
                },
                "background": {
                  "palette_params": {
                    "color": {
                      "type": "Стринг"
                    }
                  }
                },
                "ellipse": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    },
                    "w": {
                      "type": "Број"
                    },
                    "h": {
                      "type": "Број"
                    }
                  }
                },
                "fill": {
                  "palette_params": {
                    "color": {
                      "type": "Стринг"
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "Број"
                    },
                    "y1": {
                      "type": "Број"
                    },
                    "x2": {
                      "type": "Број"
                    },
                    "y2": {
                      "type": "Број"
                    }
                  }
                },
                "point": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    },
                    "w": {
                      "type": "Број"
                    },
                    "h": {
                      "type": "Број"
                    }
                  }
                },
                "regularPolygon": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    },
                    "sides": {
                      "type": "Број"
                    },
                    "size": {
                      "type": "Број"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Број"
                    },
                    "g": {
                      "type": "Број"
                    },
                    "b": {
                      "type": "Број"
                    },
                    "a": {
                      "type": "Број"
                    }
                  }
                },
                "shape": {
                  "palette_params": {
                    "x1": {
                      "type": "Број"
                    },
                    "y1": {
                      "type": "Број"
                    },
                    "x2": {
                      "type": "Број"
                    },
                    "y2": {
                      "type": "Број"
                    }
                  }
                },
                "stroke": {
                  "palette_params": {
                    "color": {
                      "type": "Стринг"
                    }
                  }
                },
                "strokeWeight": {
                  "palette_params": {
                    "size": {
                      "type": "Број"
                    }
                  }
                },
                "text": {
                  "palette_params": {
                    "str": {
                      "type": "Стринг"
                    },
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    },
                    "width": {
                      "type": "Број"
                    },
                    "height": {
                      "type": "Број"
                    }
                  }
                },
                "textAlign": {
                  "palette_params": {
                    "horiz": {
                      "type": "Стринг"
                    },
                    "vert": {
                      "type": "Стринг"
                    }
                  }
                },
                "textFont": {
                  "palette_params": {
                    "font": {
                      "type": "Стринг"
                    }
                  }
                },
                "textSize": {
                  "palette_params": {
                    "pixels": {
                      "type": "Број"
                    }
                  }
                }
              }
            },
            "control": {
              "name": "Контрола",
              "expressions": {
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "description": "Бројот на милисекунди помеѓу секое извршување на функцијата."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "description": "Бројот на милисекунди да се чека пред извршување на функцијата."
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Математика",
              "expressions": {
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "value1": {
                      "type": "Број"
                    },
                    "value2": {
                      "type": "Број"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Променливи",
              "expressions": {
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Низата за пребарување."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Низата за пребарување."
                    }
                  }
                },
                "length": {
                  "return_value": "Должината на стрингот"
                }
              }
            }
          }
        },
        "applab": {
          "categories": {
            "ui_controls": {
              "name": "UI контроли",
              "expressions": {
                "button": {
                  "short_description": "Создава копче на екранот прикажувајќи го текстот обезбеден и референциран од дадениот id на стандардна локација (0,0)."
                },
                "getProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Стринг"
                    },
                    "property": {
                      "type": "Стринг"
                    }
                  }
                },
                "onEvent": {
                  "palette_params": {
                    "type": {
                      "type": "Стринг"
                    },
                    "id": {
                      "type": "Стринг"
                    },
                    "callback": {
                      "type": "Функција"
                    }
                  }
                },
                "playSound": {
                  "palette_params": {
                    "loop": {
                      "type": "Булова"
                    }
                  }
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Стринг"
                    },
                    "gender": {
                      "type": "Стринг"
                    },
                    "language": {
                      "type": "Стринг"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Број"
                    },
                    "g": {
                      "type": "Број"
                    },
                    "b": {
                      "type": "Број"
                    },
                    "a": {
                      "type": "Број"
                    }
                  }
                },
                "setProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Стринг"
                    },
                    "property": {
                      "type": "Стринг",
                      "description": "Имотот да се промени."
                    }
                  },
                  "short_description": "Поставува својство на нова вредност за наведениот елемент."
                },
                "setScreen": {
                  "short_description": "Го поставува екранот на дадениот screenID."
                },
                "showElement": {
                  "short_description": "Го покажува елементот со обезбедениот ID."
                },
                "textLabel": {
                  "short_description": "Создава текстуална етикета на екранот која го прикажува текстот обезбеден и референциран од дадениот id на стандардна локација (0,0)."
                }
              }
            },
            "canvas": {
              "name": "Canvas",
              "expressions": {
                "circle": {
                  "palette_params": {
                    "radius": {
                      "description": "Радиусот на кругот, во пиксели."
                    }
                  }
                },
                "drawImage": {
                  "palette_params": {
                    "id": {
                      "description": "Позицијата x во пиксели на горниот лев агол на сликата за да се подготви."
                    },
                    "x": {
                      "description": "Позицијата x во пиксели на горниот лев агол на сликата за да се подготви."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели на горниот лев агол на сликата за да се подготви."
                    }
                  }
                },
                "getAlpha": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    }
                  },
                  "short_description": "Ја враќа количината на алфа (непроѕирност) (која се движи од 0 до 255) во бојата на пикселот кој се наоѓа на дадената x и y позиција во дадените податоци за сликата."
                },
                "getBlue": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    }
                  }
                },
                "getGreen": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    }
                  }
                },
                "getImageData": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели за да започнете со снимање."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели за да започнете со снимање."
                    },
                    "width": {
                      "description": "Ширината на граничниот правоаголник за снимање на податоците за сликата."
                    },
                    "height": {
                      "description": "Висината на граничниот правоаголник за снимање на податоците за сликата."
                    }
                  }
                },
                "getRed": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    }
                  }
                },
                "putImageData": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата за да ги поставите податоците на платното."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата за да ги поставите податоците на платното."
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели на горниот лев агол на правоаголникот."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели на горниот лев агол на правоаголникот."
                    },
                    "width": {
                      "description": "Хоризонталната ширина во пиксели на правоаголникот."
                    },
                    "height": {
                      "description": "Вертикалната висина во пиксели на правоаголникот."
                    }
                  }
                },
                "setAlpha": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "alphaValue": {
                      "description": "Количината на алфа (непроѕирност) (од 0 до 255) за да се постави во пикселот."
                    }
                  },
                  "short_description": "Ја поставува количината на алфа (непроѕирност) (која се движи од 0 до 255) во бојата на пикселот кој се наоѓа на дадената x и y позиција во дадените податоци за сликата."
                },
                "setBlue": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "blueValue": {
                      "description": "Износот на сина (од 0 до 255) за да го поставите во пиксел."
                    }
                  },
                  "short_description": "Ја поставува количината на сина (која се движи од 0 до 255) во бојата на пикселот кој се наоѓа на дадената x и y позиција во дадените податоци за сликата до влезниот износ на BlueValue."
                },
                "setFillColor": {
                  "palette_params": {
                    "color": {
                      "type": "Стринг"
                    }
                  }
                },
                "setGreen": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "greenValue": {
                      "description": "Износот на зелена (од 0 до 255) да се постави во пиксел."
                    }
                  },
                  "short_description": "Ја поставува количината на зелена (која се движи од 0 до 255) во бојата на пикселот кој се наоѓа на дадената x и y позиција во дадените податоци за сликата до влезната количина на GreenValue."
                },
                "setRGB": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "red": {
                      "description": "Износот на црвено (од 0 до 255) за да го поставите во пиксел."
                    },
                    "green": {
                      "description": "Износот на зелена (од 0 до 255) да се постави во пиксел."
                    },
                    "blue": {
                      "description": "Износот на сина (од 0 до 255) за да го поставите во пиксел."
                    },
                    "alpha": {
                      "description": "Факултативна. Износот на непроѕирност (од 0 до 255) да се постави во пиксел. Дефекти на 255 (целосна непроѕирност)."
                    }
                  }
                },
                "setRed": {
                  "palette_params": {
                    "x": {
                      "description": "Позицијата x во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "y": {
                      "description": "Позицијата y во пиксели почнувајќи од горниот лев агол на сликата."
                    },
                    "redValue": {
                      "description": "Износот на црвено (од 0 до 255) за да го поставите во пиксел."
                    }
                  },
                  "short_description": "Го поставува количеството на црвено (кое се движи од 0 до 255) во бојата на пикселот кој се наоѓа на дадената x и y позиција во дадените податоци за сликата до влезниот износ на RedValue."
                },
                "setStrokeColor": {
                  "palette_params": {
                    "color": {
                      "type": "Стринг"
                    }
                  }
                }
              }
            },
            "data": {
              "name": "Податоци",
              "expressions": {
                "createRecordSync": {
                  "palette_params": {
                    "table": {
                      "type": "Стринг"
                    }
                  }
                },
                "drawChartFromRecords": {
                  "palette_params": {
                    "tableName": {
                      "description": "Името на табелата за да се добие евиденција од."
                    }
                  }
                },
                "getColumn": {
                  "palette_params": {
                    "table": {
                      "type": "Стринг"
                    },
                    "column": {
                      "type": "Стринг"
                    }
                  }
                },
                "getKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "Името на клучот што треба да се добие."
                    }
                  }
                },
                "getPrediction": {
                  "palette_params": {
                    "name": {
                      "type": "Стринг"
                    },
                    "id": {
                      "type": "Стринг"
                    },
                    "callback": {
                      "type": "Функција"
                    }
                  }
                },
                "getUserId": {
                  "short_description": "Добива единствен идентификатор за тековниот корисник на оваа апликација."
                },
                "onRecordEvent": {
                  "palette_params": {
                    "table": {
                      "description": "Името на табелата на која се однесува овој настан управувачот."
                    }
                  }
                },
                "readRecordsSync": {
                  "palette_params": {
                    "table": {
                      "type": "Стринг"
                    }
                  }
                },
                "setKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "Името на клучот што треба да се чува."
                    },
                    "value": {
                      "description": "Податоците што треба да се чуваат."
                    }
                  },
                  "short_description": "Складира пар клуч/вредност во складирање на податоци за клуч/вредност на App Lab и ја повикува функцијата за повратен повик кога дејството е завршено."
                },
                "startWebRequest": {
                  "palette_params": {
                    "url": {
                      "description": "Веб адресата на услуга која враќа податоци."
                    }
                  }
                }
              }
            },
            "turtle": {
              "name": "Turtle (Желка)",
              "expressions": {
                "arcLeft": {
                  "short_description": "Ја поместува желката напред и налево во мазен, кружен лак."
                },
                "getX": {
                  "short_description": "Добива тековната x координата во пиксели на желка."
                },
                "getY": {
                  "short_description": "Добива тековната y координата во пиксели на желка."
                },
                "hide": {
                  "short_description": "Ја прави желката невидлива на сегашната локација."
                },
                "move": {
                  "palette_params": {
                    "x": {
                      "description": "Бројот на пиксели за движење на желка право."
                    },
                    "y": {
                      "description": "Бројот на пиксели за движење на желка надолу."
                    }
                  }
                },
                "moveBackward": {
                  "short_description": "Се движи желка назад даден број на пиксели од тековната насока."
                },
                "moveForward": {
                  "short_description": "Се движи желка напред даден број на пиксели во тековната насока."
                },
                "moveTo": {
                  "short_description": "Поместува желка на одредена (x, y) позиција на екранот."
                },
                "penColor": {
                  "palette_params": {
                    "color": {
                      "type": "Стринг"
                    }
                  },
                  "short_description": "Ја поставува бојата на пенкалото што ја користи желката за цртање линии и точки."
                },
                "penDown": {
                  "short_description": "Го става пенкалото надолу па желката повлекува линија зад неа додека се движи."
                },
                "penRGB": {
                  "palette_params": {
                    "r": {
                      "type": "Број"
                    }
                  },
                  "short_description": "Користејќи вредности на RGBA, ја поставува бојата на пенкалото што ја користи желката за цртање линии и точки."
                },
                "penUp": {
                  "short_description": "Го зема пенкалото па желката не повлекува линија како што се движи."
                },
                "penWidth": {
                  "short_description": "Ја поставува ширината на линијата во пиксели што желката ги влече зад неа додека се движи."
                },
                "show": {
                  "short_description": "Ја прави желката видлива на нејзината сегашна локација."
                },
                "speed": {
                  "short_description": "Ја поставува брзината за извршување на апликацијата, која ја вклучува брзината на желката."
                },
                "turnLeft": {
                  "short_description": "Ротира желка лево од страна на одреден агол. Позицијата на желката останува иста."
                },
                "turnRight": {
                  "short_description": "Ротира желка право со наведениот агол. Позицијата на желката останува иста."
                },
                "turnTo": {
                  "short_description": "Ја менува насоката на желката до одреден агол. 0 е нагоре, 90 е во право, 180 е долу, а 270 е лево."
                }
              }
            },
            "control": {
              "name": "Контрола",
              "expressions": {
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "description": "Вредноста вратена од функцијата SetTimeout да се откаже."
                    }
                  }
                },
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "description": "Бројот на милисекунди помеѓу секое извршување на функцијата."
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "description": "Бројот на милисекунди да се чека пред извршување на функцијата."
                    }
                  }
                },
                "stopTimedLoop": {
                  "palette_params": {
                    "loop": {
                      "type": "Број"
                    }
                  }
                },
                "timedLoop": {
                  "palette_params": {
                    "ms": {
                      "type": "Број"
                    },
                    "callback": {
                      "type": "Функција"
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Математика",
              "expressions": {
                "mathPow": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Променливи",
              "expressions": {
                "declareAssign_list_123": {
                  "short_description": "Изјави и додели низа на променлива"
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Низата за пребарување."
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Низата за пребарување."
                    }
                  }
                },
                "addPair": {
                  "palette_params": {
                    "key": {
                      "type": "Стринг"
                    }
                  }
                },
                "getValue": {
                  "palette_params": {
                    "key": {
                      "type": "Стринг"
                    }
                  }
                },
                "length": {
                  "return_value": "Должината на стрингот"
                }
              }
            },
            "advanced": {
              "name": "Напредно",
              "expressions": {
                "setStyle": {
                  "palette_params": {
                    "id": {
                      "type": "Стринг"
                    },
                    "css": {
                      "type": "Стринг"
                    }
                  }
                }
              }
            },
            "maker": {
              "name": "Maker",
              "expressions": {
                "pinMode": {
                  "palette_params": {
                    "pin": {
                      "type": "Број"
                    },
                    "mode": {
                      "type": "Стринг"
                    }
                  }
                }
              }
            },
            "circuit": {
              "expressions": {
                "isPressed": {
                  "return_value": "Булова"
                },
                "buzzer.play": {
                  "palette_params": {
                    "tempo": {
                      "type": "Број"
                    }
                  }
                },
                "buzzer.playNotes": {
                  "palette_params": {
                    "tempo": {
                      "type": "Број"
                    }
                  }
                },
                "buzzer.playSong": {
                  "palette_params": {
                    "tempo": {
                      "type": "Број"
                    }
                  }
                },
                "toggleSwitch.isOpen": {
                  "return_value": "Булова"
                }
              }
            },
            "micro_bit": {
              "expressions": {
                "ledScreen.off": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "ledScreen.on": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                },
                "ledScreen.scrollNumber": {
                  "palette_params": {
                    "number": {
                      "type": "Број"
                    }
                  }
                },
                "ledScreen.scrollString": {
                  "palette_params": {
                    "String": {
                      "type": "Стринг"
                    }
                  }
                },
                "ledScreen.toggle": {
                  "palette_params": {
                    "x": {
                      "type": "Број"
                    },
                    "y": {
                      "type": "Број"
                    }
                  }
                }
              }
            }
          }
        },
        "spritelab": {
          "description": "Sprite Lab е Blocky програмска средина каде можете да создадете интерактивни проекти.",
          "categories": {
            "sprites": {
              "name": "Сприти"
            },
            "world": {
              "name": "Светот"
            },
            "location": {
              "name": "Локации"
            },
            "actions": {
              "name": "Акции"
            },
            "behaviors": {
              "name": "Однесувања"
            },
            "loops": {
              "name": "Лупови"
            },
            "variables": {
              "name": "Променливи"
            },
            "math": {
              "name": "Математика"
            },
            "logic": {
              "name": "Логика"
            },
            "text": {
              "name": "Текст"
            },
            "comments": {
              "name": "Коментари"
            }
          }
        },
        "javalab": {
          "categories": {
            "java_lab_shortcuts": {
              "name": "Java Lab Кратенки"
            },
            "general": {
              "name": "Основи во Јava"
            },
            "org_code_theater": {
              "name": "org.code.theater"
            },
            "org_code_media": {
              "name": "org.code.media"
            },
            "org_code_neighborhood": {
              "name": "org.core.neighborhood"
            },
            "java_io": {
              "name": "java.io"
            },
            "java_util": {
              "name": "java.util"
            },
            "java_lang": {
              "name": "java.lang"
            },
            "control_structures": {
              "name": "Контролни Структури"
            },
            "data_structures": {
              "name": "Дата Структури"
            }
          }
        }
      }
    }
  }
}