"bg":
  data:
    instructions:
      2-3 _instruction: Лилавите цветя могат да имат 1 или 0 нектар. Бъдете внимателни
        и не събирайте нектар от лилаво цвете, което няма такъв.
      2-3 Artist 1 new_instruction: Здравейте аз съм художник. Можете да напишете
        код, с който да ме накарате да нарисувам почти всичко. Използвайте няколко
        блока за да довърша сивите линии в картината. (Всеки ред е дълъг 100 пиксела)
      2-3 Artist 11_instruction: 'Дайте на знак стоп тяло, като начертаете осмоъгълник
        със страни по 100 пиксела дължина. На колко градуса трябва да ме завъртите?
        (Съвет: Какво е 360 делено на 8?) '
      2-3 Artist 12_instruction: Задайте на "повтаря пъти" блока стойност, така че
        да създаде "кръг"и да завърша очната ябълка. Ако след всяко движение се завъртам
        на един градус, колко пъти трябва да повтарям това за да завърша кръга? 180?
        360? 500?
      2-3 Artist 2 new_instruction: 'Тази къща има полуготова стена. Всяка страна
        е 100, но незавършената стена е само 50. Завърши стената. '
      2-3 Artist 2_instruction: 'Тази къща има полуготова стена. Всяка страна е 100,
        но незавършената стена е само 50. Завърши стената. '
      2-3 Artist 3.4_instruction: Скок блокът премества художник без да оставя следа.
        Начертайте пунктирана линия с помощта на блоковете за скок и чертане.
      2-3 Artist 3_instruction: Тази шапка е висока 100 пиксела. Начертайте шапка,
        която е 70 пиксела по-малка.
      2-3 Artist 3new_instruction: Червената шапка е 100 пиксела висока. Завършете
        рисуването на черната шапка, която е по-малка с 70 пиксела. Ширината на черна
        шапка е 50 пиксела.
      2-3 Artist 4_instruction: Помогнете ми да довърша къщата на тази котка.
      2-3 Artist 5_instruction: Замести този код с "повтаря пъти" блок за да нарисувате
        същата къща само с 3 блока.
      2-3 Artist 6_instruction: 'Тази къща се нуждае от покрив! Начертайте триъгълника.  Съвет:
        всички три страни имат еднаква дължина.'
      2-3 Artist 7_instruction: 'Завършите рисуването на дясната половина на последния
        прозорец. Всеки квадрат на прозореца е 25 пиксела. '
      2-3 Artist 8_instruction: Завършете стаите за всяко от животните чрез разделяне
        на правоъгълника на 2 равни по размер квадрата. Правоъгълника е 200 пиксела
        ширина и височина 100 пиксела.
      2-3 Artist 9_instruction: Завърши това хвърчило
      2-3 Artist Assessment 1_instruction: 'Оценка: Завършете рисуването на последният
        зъб, 25 пиксела ширина и 25 пиксела височина.'
      2-3 Artist Debugging 1_instruction: Можете ли да направите тази шапка с  дължина
        от 100?
      2-3 Artist Debugging 10_instruction: 'Джойстика на моя игрови контролер е твърде
        тесен. Съвет: Направи го по-широк с 10 пиксела'
      2-3 Artist Debugging 11_instruction: Помогнете ми да завърша моята красива снежинка.
        Колко пъти трябва да се "повтаря" за да я довърша?
      2-3 Artist Debugging 12_instruction: Предполагам, че трябва да добавя морска
        вълна на тази сцена.  Можете ли да ми помогнете?
      2-3 Artist Debugging 2_instruction: 'Кодът за трите мустаци, които виждате е
        грешен. Съвет: всеки мустак е дълъг 75 пиксела. Поправете този код, за да
        начертаете мустаците.'
      2-3 Artist Debugging 3_instruction: 'Лодката ми е с дупка! Може ли да я поправим
        чрез промяна на ъгъла на линията? Съвет: последният ъгъл трябва да се промени
        с 15 градуса.'
      2-3 Artist Debugging 4_instruction: Какво е изображението, което ние се опитваме
        да начертаем? Направете свързването на точките с помощта на правилните линии
        и ъгли.
      2-3 Artist Debugging 5_instruction: 'Кодът за стъпалото и крака, които виждате
        е погрешен. Съвет: Крака е твърде дълъг, ние може да се наложи да изтрием
        стъпка (игра на думи)'
      2-3 Artist Debugging 6_instruction: Изглежда, че аз съм седнал на стол, на който
        липсва крак. Добавете блокове, за да начертаете крака.
      2-3 Artist Debugging 7_instruction: Изглежда, че C от code е изписано обратно.
        Може ли да го правим за да изглежда като C?
      2-3 Artist Debugging 8_instruction: Моето колело не е завършено. Колко пъти
        трябва да повтарям за да го довърша?
      2-3 Artist Debugging 9_instruction: 'Кода за това стебло е неправилен. Съвет:
        Ъгълът на завъртане е 60 градуса'
      2-3 Artist Debugging Assessment 1_instruction: 'Тази форма е твърде малка. Може
        ли да я направите по-голяма? Съвет: трябва да бъде 75 пиксела по-дълга от
        всяка страна.'
      2-3 Artist Free Play_instruction: Свободна игра! Начертайте каквото искате.
      2-3 Artist Functions 1_instruction: 'Здравейте. Аз зомби художник. Аз обичам
        рисува! Помогнете ми да нарисувам квадратни очила.  Съвет: моста между стъклата
        е по-къс от дължината на квадратите с 25 пиксела.'
      2-3 Artist Functions 10_instruction: Ето две функции, една за изчертаване на
        голямо съоръжение и една за изчертаване на малко съоръжение. Използвайте ги
        за изготвяне на вътрешността на машината!
      2-3 Artist Functions 11.5_instruction: Ето същата "Начертайте шестоъгълник"
        функция. Какво става, ако завъртате само на 60 градуса всеки път след цикъл?
      2-3 Artist Functions 11_instruction: Преименувахме "начертай квадрат" функцията  на
        "начертай шестоъгълник", но тя все още чертае квадрати! Може ли да я модифицирате
        за да начертаете шестоъгълник с 50 пиксела страни и направите изображението
        с помощта на функцията?
      2-3 Artist Functions 12_instruction: 'Функциите са наистина страхотни за няколкократно
        изчертаване на сложни неща. Може да използвате функцията "рисува цвете" да
        запълни останалата част от  лехата?(Съвет: растенията са разделени на 100
        пиксела едно от друго)  '
      2-3 Artist Functions 13_instruction: Ние сме ви предоставили четири функции.
        Използвайте ги както искате в рамките на един или повече цикли за да нарисувате
        картини, които можете да споделяте с приятелите си. Натиснете "Старт", за
        да видите пример.
      2-3 Artist Functions 2_instruction: Функциите ви позволяват да дефинирате нови
        блокове! Ние поместихме блоковете, за  изчертаване на квадрат във функция,
        наречена "начертайте квадрат". Можете ли да използвате тази функция за създаване
        на очила? Квадратите са със страни 75 пиксела.
      2-3 Artist Functions 3_instruction: Редактирайте функцията, за чертане на квадрат
        със страни дълги 115 и направете по-големи очила. Квадратите са на 45 пиксела
        един от друг.
      2-3 Artist Functions 4_instruction: Използвайте блок за повторение за да начертаете
        тези 3 квадрата.
      2-3 Artist Functions 7_instruction: 'Използвайте функцията "рисува къща", за
        да нарисувате две къщи, като се използват два различни параметъра. (Съвет:
        първата къща е 100 пиксела).'
      2-3 Artist Functions 9_instruction: Ето една функция за снежинка. Експериментирайте
        с нея за да се създадете зимна сцена! Тук няма никакъв пъзел за решаване.
        Забавлявай се!
      2-3 Artist Loops 1_instruction: Можете ли да направите шестоъгълник със страни,
        които са 100 пиксела дълги, за да завършим в клетката? Не забравяйте, че това
        означава, че ще трябва да се завъртате само на  60 градуса!
      2-3 Artist Loops 10_instruction: Какво се случва с дизайна, когато ние правим
        нашата последна стъпка напред наполовина по-къса?
      2-3 Artist Loops 11_instruction: Сега нека да поставим * друг * цикъл около
        нашето цялостно творение!  Не забравяйте да добавите един ъгъл в края на външния
        цикъл.
      2-3 Artist Loops 2_instruction: Сега използвайте блок за повторение да направите
        черупка от клетки.
      2-3 Artist Loops 4_instruction: Искате ли да видите какво се случва, когато
        повтаряме тази фигура отново и отново, като използвате цикъл?
      2-3 Artist Loops 5_instruction: Сега, нека да направим една малка промяна на
        цикъла и да видим колко различна ще стане картината ни.
      2-3 Artist Loops 6_instruction: Прибавям още един ход и друг ред във вътрешността
        на цикъла и вижте как се променя вашия дизайн.
      2-3 Artist Loops 7_instruction: Можем да използваме цикли за да направим всички
        видове многоъгълници.  Можете ли да създадете ромб вътре в този шестоъгълник?
      2-3 Artist Loops 8_instruction: Нека да поставим двата елемента вътре в цикъла.
      2-3 Artist Loops 9_instruction: "Ние ще повторим същите елементи, но сега ще
        добавим известно разстояние между тях. \r Използвайте един и същ код както
        преди, но добавете стъпка напред в края на външния цикъл."
      2-3 Artist Loops New 1_instruction: Нека да начертаем главата на този робот!
        Можете ли да направите квадрат със страни, които са 100 пиксела дълги?
      2-3 Artist Loops New 10_instruction: Сега нека да свържем едно с друго тези
        V-та, чертаейки ги чрез  цикъл.
      2-3 Artist Loops New 11_instruction: Този път нека да го начертаем 24 пъти.
        Добавяме ляв завой на 30 градуса към този код и  го поставяме в блок за повторение.
      2-3 Artist Loops New 12_instruction: |
        Начертайте диамант със страни от 100 пиксела.
      2-3 Artist Loops New 13_instruction: Сега начертайте диамант 3 пъти в цикъл.
      2-3 Artist Loops New 14_instruction: Сега нека да начертаем 10 диаманта, но  ще
        завъртаме на 90 градуса между всеки диамант.
      2-3 Artist Loops New 15_instruction: Начертайте нещо забавно.
      2-3 Artist Loops New 2_instruction: Ето код, който използвахте за начертаване
        на този квадрат. Какво става, ако използвате блок за повторение, който да
        изпълнява този код 4 пъти?
      2-3 Artist Loops New 9_instruction: Начертайте просто V, където и двете страни
        са 50 пиксела за да завършите стрелката.
      2-3 Artist Match Hex Pic_instruction: 'Свържи: Помогни за да завършим шестоъгълника.'
      2-3 Artist Match Rho Pic_instruction: 'Съвпадение: Довърши липсващия код.'
      2-3 Artist Match Sq Pic_instruction: 'Съвпадение: Довършете липсващия код'
      2-3 Artist Match Tri pic_instruction: 'Съвпадение: Попълнете липсващия код.'
      2-3 Artist Nested Loops 1_instruction: "Вие използвахте цикли за да чертаете
        фигури, но знаете ли, че можете да поставите един цикъл вътре в друг? \r Повторете
        целия блок от код 3 пъти, за да начертаете модела."
      2-3 Artist Nested Loops 10_instruction: Повторете този код 12 пъти за завършване
        на модела.
      2-3 Artist Nested Loops 11_instruction: Повтори този код 4 пъти за да завърша
        модела, завъртете на 90 градуса след всеки кръг.
      2-3 Artist Nested Loops 12_instruction: Повторете този код 12 пъти за да завършите  кривите.
      2-3 Artist Nested Loops 2_instruction: Сега, повторете триъгълника 6 пъти. След
        всеки триъгълник трябва да завъртате на 60 градуса преди изготвянето на следващия.
      2-3 Artist Nested Loops 3_instruction: Трябва да повторите триъгълника 12 пъти
        за да изготвите този модел. Разделете градусите в кръга (360) на броя на фигурите,
        които ще чертаем (12), за да разберете на колко градуса да завивате след всяка
        фигура.
      2-3 Artist Nested Loops 4_instruction: 'Повторете този диамант 12 пъти, за да
        нарисувате цвете. Съвет: 12 диаманти са точно като 12 триъгълници, нали -
        на колко градуса трябва да завивате след всяка фигура?'
      2-3 Artist Nested Loops 5_instruction: Запълнете прозорците на тази сграда с
        вложен цикъл. Прозорците са дълги 20 пиксела и са на 20 пиксела разстояние
        един от друг.
      2-3 Artist Nested Loops 6_instruction: Този динозавър има 8 шипа по опашка си;
        Всеки шип е дълъг 30 пиксела. Обработете триъгълника 8 пъти с повторение(цикъл),
        но се уверете, че се движите напред след всяко повторение.
      2-3 Artist Nested Loops 7_instruction: Повторете този триъгълник 10 пъти, за
        да нарисувате слънцето. Трябва да се движите и обръщате след всеки триъгълник.
        Можете да разберете на колко да се обръщате като разделите броя на градусите
        в кръга на броя фигури, които го правят.
      2-3 Artist Nested Loops 8_instruction: Сега нека добавим малко трева на нашата
        картина. Всеки кичур трева е на 50 пиксела един от друг.
      2-3 Artist Nested Loops 9_instruction: Ние ще завърши тази картина чрез добавяне
        на цвете. Повторете (с цикъл) диаманта 12 пъти, за да нарисувате вашето цвете.
      2-3 Artist Nested Loops Free Play_instruction: Свободна игра, направи нещо готино
        с вложени повторения (цикли).
      2-3 Bee Conditionals 1_instruction: Здравейте! Аз съм пчела. Помогнете ми да
        събера нектар от цветето.
      2-3 Bee Conditionals 10_instruction: 'Лилавите цветя могат да имат 1 или 0 нектар.
        Внимавайте да не събирате нектар от лилаво цвете, ако то няма такъв (нектара
        е 0). '
      2-3 Bee Conditionals 11_instruction: Съберете нектара от цветята.
      2-3 Bee Conditionals 12_instruction: Използвайте повторение, за да проверите
        и съберете нектар от всички тези цветя.
      2-3 Bee Conditionals 13_instruction: "Съберете нектар и направете мед. \nСъвет:
        какво се случва, ако използвате \"ако нектар\" да зависи от червеното цвете?
        Можете ли да направите това с повторение(цикъл)?\n"
      2-3 Bee Conditionals 14_instruction: Съберете нектар и направете мед. Бъдете
        внимателни да не събирате нектар от лилаво цвете, ако то няма нектар.
      2-3 Bee Conditionals 15_instruction: Съберете нектар от всички четири цветя.
      2-3 Bee Conditionals 2_instruction: Здравейте, аз съм пчела! Помогнете ми да
        се събера всичкия на нектар от цветята. Използвайте повторение(цикъл).
      2-3 Bee Conditionals 3_instruction: Помогнете ми се събера всичкия на нектар
        от цветята и да направя мед. Използвайте повторение(цикъл).
      2-3 Bee Conditionals 4_instruction: Помогнете ми да събера всичкия нектар от
        цветята и да направи всичкия мед.
      2-3 Bee Conditionals 5_instruction: Лилавите цветя могат да имат 1 или 0 нектар,
        но не знаем кои имат и кои не! Бъдете внимателни да не събирате нектар от
        лилаво цвете, което няма нектар. Проверете дали нектара е равен на 1 с помощта
        на "ако" блок.
      2-3 Bee Conditionals 6_instruction: Проверете това цвете с "ако" блок, за да
        видите дали има нектар.
      2-3 Bee Conditionals 7_instruction: Съберете от всяко цвете нектар, ако има
        такъв.
      2-3 Bee Conditionals 8_instruction: Това поле има червени и лилави цветя. Червените
        цветя имат известено количество нектар, но нектара в лилавите цветя не е известен.
        Съберете всичкия нектар от двата вида цветя.
      2-3 Bee Conditionals 9_instruction: Съберете всичкия нектар от всяко цвете.
      2-3 Bee Conditionals Assessment 1_instruction: 'Оценка: Съберете всичкия нектар.
        Бъдете внимателни да не съберете нектар от лилаво цвете, ако то няма такъв.'
      2-3 Bee Debugging 1_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 10_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 2_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 3_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 4_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 5_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
        Можете да използвате бягай(давай) и стъпка.
      2-3 Bee Debugging 6_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 7_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 8_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging 9_instruction: Тези блокове наистина ме предизвикват. Поправете
        грешката(грешките), за да съберете всичкия нектар и да направите всичкия мед.
      2-3 Bee Debugging Assessment 1_instruction: 'Оценка: Тези блокове наистина ме
        предизвикват. Поправете грешката(грешките), за да съберете всичкия нектар
        и да направите всичкия мед.'
      2-3 Bee Functions 1_instruction: Функциите са блокове с код, които изпълняват
        задача. Използвайте функцията "вземи 2 нектар", за събиране на нектар от всяко
        цвете.
      2-3 Bee Functions 10_instruction: Лилавите цветя могат да имат 1 или 0 нектар.  Създайте
        функция, която събира нектара само от лилави цветя, които имат нектар.
      2-3 Bee Functions 2_instruction: Функциите са блокове с код, които изпълняват
        задача. Използвайте функцията "получи 5", за да получите 5 нектара едновременно.
        Също, не забравяйте да използвате повторение(цикъл), за да получите желания
        брой.
      2-3 Bee Functions 3_instruction: Съберете всичкия нектар от всяко цвете.
      2-3 Bee Functions 4_instruction: Функцията "движи се и получи нектар" завърта
        пчелата, събира нектар и след това връща пчелата от където е започнала. Използвайте
        функцията, за да съберете всичкия нектар.
      2-3 Bee Functions 5_instruction: Сега има повече нектар в цветята. Редактирайте
        дадената функция, така че да събира 4 нектара и я използвайте, за да се съберете
        всичкя на нектар от цветята.
      2-3 Bee Functions 6_instruction: Сега използвайте същата функция, за да съберете
        нектар от трите цветя.
      2-3 Bee Functions 7_instruction: Цветята вече са по далеч. Редактирайте дадената
        функция и я използвайте, за да съберете всичкия нектар от цветята.
      2-3 Bee Functions 8_instruction: Създайте своя собствена функция, която получава
        7 нектар, движи се напред и после прави 7 мед. Използвайте функцията, за да
        съберете нектара от всяко цвете и правете мед на всяка медена пита.
      2-3 Bee Functions 9_instruction: Създайте своя собствена функция, която тръгва
        по пътеката, добива нектар, прави мед и след това връща пчелата в началото
        на пътя.
      2-3 Bee Functions Assessment 1_instruction: 'Оценка: Използвайте дадената функция,
        за да събирете нектар от всяко цвете.'
      2-3 Bee Functions Assessment 2_instruction: 'Оценка: Създайте функция, за да
        направите 3 пъти мед наведнъж.'
      2-3 Bee Loops 1_instruction: 'Всеки цвят съдържа една единица нектар. Събират
        нектар от всяко цвете. '
      2-3 Bee Loops 10_instruction: Можете ли да използвате "докато" повторение(цикъл)
        вътре в две други повторения(цикъла), за да съберете всичкия нектар?
      2-3 Bee Loops 11_instruction: Използвайте "докато" повторения(цикли), за да
        съберeтe всичкия нектар от цветята в това поле.
      2-3 Bee Loops 12_instruction: Използвайте "докато" повторения(цикли), за да
        съберeтe всичкия нектар от цветята в това поле.
      2-3 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      2-3 Bee Loops 1A_instruction: 'Здравейте аз съм пчела. Можете ли да ми помогнете
        да събера нектар от тези цветя? '
      2-3 Bee Loops 2_instruction: Използвайте повторение(цикъл), за да съберете нектар
        и направете мед.
      2-3 Bee Loops 2A_instruction: Можете ли да направите същото, но по-лесно с един
        цикъл?
      2-3 Bee Loops 3_instruction: Съберете нектар от всеки цвят и направете мед на
        всяка пита.
      2-3 Bee Loops 3A_instruction: Можете ли да използвате повторение, за да се събера
        всичкия нектар?
      2-3 Bee Loops 3B_instruction: Сега, използвайте новият блок за повторение за
        да се събере всичкия нектар и да се направи всичко на мед.
      2-3 Bee Loops 4_instruction: Използвайте подобно повторение(цикъл) като при
        последната загадка, но сложете един завой в него.
      2-3 Bee Loops 4A_instruction: Какво става ако повторите тази последователност
        три пъти? Не забравяйте да направите мед в края!
      2-3 Bee Loops 5_instruction: Използвайте повторение(цикъл), за да отидете надолу
        по стъпките и съберете нектара.
      2-3 Bee Loops 6_instruction: |
        Използвайте повторение(цикъл), за да съберете нектар от всяко цвете и направете мед на всяка пита.
      2-3 Bee Loops 7_instruction: Пъхнете тези блокове в повторение(цикъл), за да
        съберете нектара от всяко цвете.
      2-3 Bee Loops 8_instruction: Тези лилави цветя имат неизвестно количество нектар.
        Използвайте "докато нектар" повторението(цикъла), за да съберете всичкия нектар.
        Това повторение(цикъл) ще продължи докогато условието е вярно, в този случай
        нектар > 0.
      2-3 Bee Loops 9_instruction: '"докато" повторението(цикъла) може да извършва
        същото действие като "ако" условието в повторение(цикъл). Добавете "докато"
        повторение(цикъл) към този код, за да изпълните същата задача.'
      2-3 Bee Loops Assessment 1_instruction: Оценка - Използвйте "докато" повторение(цикъл),
        за да съберете всичкия нектар от това цвете.
      2-3 Maze 1_instruction: 'Можете ли да ми помогнете да уловя непослушната свиня?
        Съберете няколко "движи напред" блока заедно и натиснете "Изпълни". '
      2-3 Maze 10_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 11_instruction: Заведи ме до цветето, аз съм гладен! Колко пъти трябва
        да се повтаря блока?
      2-3 Maze 12 (copy 1)_instruction: 'Можеш ли да замениш предишния отговор само
        с два блока? (Съвет: Създай повторение(цикъл), като използваш блока "повтари  пъти").'
      2-3 Maze 12 (copy 2)_instruction: 'Можеш ли да замениш предишния отговор само
        с два блока? (Съвет: Създай повторение(цикъл), като използваш блока "повтари  пъти").'
      2-3 Maze 12 (old)_instruction: Заведи ме при прасето, този път използвай блока
        за "повтори докато"!
      2-3 Maze 12_instruction: 'Можеш ли да замениш тези пет блока само с два блока?
        (Съвет: Създай повторение(цикъл) като използваш блока "повтари  пъти").'
      2-3 Maze 13 (old)_instruction: Заведи ме при прасето, този път използвай блока
        "повтори докато"!
      2-3 Maze 13_instruction: Заведи ме до прасето, използвайки само два блока.
      2-3 Maze 14 (old)_instruction: Заведи ме за прасето, като използваш "докато"
        блок!
      2-3 Maze 14_instruction: Заведи ме до слънчогледа! (Къде е този "повтори пъти"
        блок, когато имам нужда от него?)
      2-3 Maze 15 (old)_instruction: Заведи ме до прасето, като използваш "докато"
        блок!
      2-3 Maze 15_instruction: Използвайте два цикъла, за да стигнем до прасето  с
        по-малко блокове.
      2-3 Maze 16 (old)_instruction: Заведи ме до прасето, като използваш "докато"
        блок!
      2-3 Maze 16 before_instruction: Заведи ме до прасето.
      2-3 Maze 16_instruction: Заведи ме до слънчогледа. Повтори поредицата действия!
      2-3 Maze 2_instruction: Това прасе ми разрошва перушината. Помогнете ми да го
        хвана!
      2-3 Maze 3_instruction: Проследи пътя и ме заведи до глупаво прасе. Избягвайте
        TNT(динамита) или ще летят пера!
      2-3 Maze 4_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 5_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 6_instruction: Запази спокойствие и ми помогни ми да намеря лошото
        прасе. В противен случай може да се ядосам!
      2-3 Maze 7_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze 8_instruction: Заведи ме до прасето!
      2-3 Maze 9_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze Loops 1_instruction: Можеш ли да ме заведеш до прасето с 5 блока?
      2-3 Maze Loops 17_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 18_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 19_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 20_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops 21_instruction: Заведи ме до слънчогледа!
      2-3 Maze Loops Assessment 1_instruction: 'Оценка: Заведи ме до слънчогледа,
        като използваш само 5 блока! '
      2-3 Maze sq1 _instruction: Това прасе ми лази по нервите. Помогнете ми да го
        намеря!
      2-3 Maze sq10_instruction: Заведи ме до прасето! Кои блокове трябва да се повторят?
      2-3 Maze sq10v2_instruction: Заведи ме до прасето! Кои блокове трябва да се
        повторят?
      2-3 maze sq11_instruction: Заведи ме до прасето! Кои блокове трябва да се повторят?
      2-3 maze sq12_instruction: Можеш ли да замениш предишния отговор с едно повторение(цикъл)
        с помощта на блока "повтаря пъти"?
      2-3 maze sq13_instruction: Скъпи човеко. Аз зомби. Трябва... отида... до слънчогледа.
        Създайте повторение(цикъл) с блока "повтаряй докато".
      2-3 maze sq14_instruction: Можете ли да стигнете до слънчогледа, използвайки
        само четири блока?
      2-3 maze sq15_instruction: Можете ли да стигнете до слънчогледа, използвайки
        само пет блока?
      2-3 maze sq16_instruction: Добре това е подбно, но малко по-различно. Можеш
        ли да го направиш само в пет блока?
      2-3 Maze sq2_instruction: Проследи пътя и ме заведи до глупавото прасе.  Избягвайте
        TNT(динамит) или ще летят пера!
      2-3 Maze sq3_instruction: Заведи ме до зелената лошотия! (Внимавай за динамит)
      2-3 Maze sq4_instruction: Запази спокойствие и ми помогни ми да намеря лошото
        прасе. В противен случай може да се ядосам!
      2-3 Maze sq5_instruction: Заведи ме до прасето! Колко пъти трябва да повтариш
        блока?
      2-3 Maze sq6_instruction: 'Можеш ли да замениш предишния отговор само с два
        блока? (Съвет: създай повторение(цикъл), като използваш блока "повтори пъти".)'
      2-3 Maze sq7_instruction: Заведи ме до зеления нарушител, използвайки само три
        блока.
      2-3 Maze sq8_instruction: Заведи ме до прасето! (Къде е този "повтори пъти"
        блок, когато имам нужда от него?)
      2-3 Maze sq9_instruction: Създайте цикли за да стигнем до прасето, използвайки
        по-малко блокове.
      2-3level1_instruction: Подпомогнете на птицата да улови палавото прасе като
        я преместите напред
      4-5 Artist 1_instruction: 'Помогнете ми да дорисувам моята кутия. (Всяка линия
        е дълга 300 пиксела) '
      4-5 Artist 10_instruction: Натиснете "Изпълни", за да изпробвате кода. След
        това го повторете достатъчно пъти, за да завършите рисунката. Цветовете ще
        бъдат различни всеки път.
      4-5 Artist 11_instruction: Завърши зелените линии. Линиите са дълги 300 пиксела
        и са на 15 пиксела разстояние една от друга.
      4-5 Artist 2_instruction: Можеш ли да повториш този код, за да завърша квадрата?
      4-5 Artist 3.5_instruction: Ок, опитай се да разбереш какво става, ако изпълниш
        този код (или натисни "Изпълни", за да го изпробваш). След това, го повтори
        достатъчно пъти, за завършиш рисунката. Цветовете (най-вероятно) ще са различни
        всеки път.
      4-5 Artist 3_instruction: Това правоъгълно легло от цветя има периметър от 600.
        Дългата страна има дължина от 200. Начертайте правоъгълник.
      4-5 Artist 4_instruction: Колко градуса има в 1 кръг?  Направи повторение(цикъл)
        на блокове, за да създадеш кръг от цветове.
      4-5 Artist 5_instruction: Какъв ъгъл да използваме?
      4-5 Artist 6_instruction: Този равностранен триъгълник има ъгли от 60, 60 и
        60 градуса. Всяка страна е 200 пиксела. Завърши рисунката.
      4-5 Artist 7_instruction: Този правоъгълен триъгълник е с ъгли  30, 60 и 90
        градуса. Дължината на наклонените страни  е двойна на височината, която е
        100 пиксела. Завърши рисунката.
      4-5 Artist 8_instruction: Средната линия на футболно игрище е перпендикулярна
        на периферията. Това поле има периметър 800 пиксела и е дълго 240 пиксела.
        Колко е широко? Начертайте границите и централната линия.
      4-5 Artist 9_instruction: Начертайте другата половина, така че дизайнът да е
        симетричен. Триъгълниците са равностранни и с дължина 50 пиксела.
      4-5 Artist Assessment 1_instruction: 'Оценка: Използвайте цикъл за изчертаване
        на равностранен триъгълник. Всяка страна е 300 пиксела.'
      4-5 Artist For Loops 1_instruction: Поставете числата от 1 до 10 в блоковете
        за параметър "ширина"  и стартирайте кода.
      4-5 Artist For Loops 11_instruction: Завършете "за" блока, така че той да брои
        0, 20, 40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'Какво става, ако обърнете местата на "от"
        и "до" номерата? Завършете "за" блока, така че той да брои 200, 180, 160,
        140, 120... 0. '
      4-5 Artist For Loops 13_instruction: 'Този дизайн е започнал без цикъл "за"
        и е с твърде много блокове!  Използвайте блок "за", за да завършите спиралата.  Съвет:
        на последния ред дължината е 250 пиксела.'
      4-5 Artist For Loops 14_instruction: 'Някой е започнал кода, но след това е
        разбрал, че трябва да има по-бърз начин! Използвайте блок "за", за да замените
        блоковете и да завършите триъгълната спирала. (Съвет: в последния ред дължината
        е 300 пиксела.'
      4-5 Artist For Loops 15_instruction: 'Някой е започнал кода, но след това е
        разбрал, че трябва да има по-бърз начин! Използвайте блок "за", за да замените
        блоковете и да завършите триъгълната спирала. (Съвет: в последния ред дължината
        е 200 пиксела.'
      4-5 Artist For Loops 2_instruction: Това е "за" блок. Вместо да въвеждате 1,2,3...
        10, "за" блока може да повтаря блокове, които са вътре в него и да преброява  числата
        за вас. Поставете 10 в раздела "да" на "за" блока.
      4-5 Artist For Loops 3_instruction: Как може да преброим от 1 до 50? Редактирайте
        "за" блока.
      4-5 Artist For Loops 4_instruction: Завършете "за" блока, така че той да брои
        от 1 до 10 през 1.
      4-5 Artist For Loops 6_instruction: Начертайте квадрат със страни от 50, 60,
        70, 80 и 90 пиксела. Трябва да използвате функцията "начертава квадрат" пет
        пъти.
      4-5 Artist For Loops 7_instruction: 'Начертайте същите квадрати, но използвайте  блок
        брояч за промяна на размерите. Поставете блока брояч във функцията "начертава
        квадрат". Съвет: Тя е в категорията променливи.'
      4-5 Artist For Loops 8_instruction: Може ли да завършите програмата чрез поставяне
        на блокове в "за" блока, който да брои от 10 до 200 през 10? Можете да намерите
        на "за" блока в категорията цикъл.
      4-5 Artist For Loops 9_instruction: Тези кръгове са с размер 5, 10, 15, 20,
        25, 30 и 35. Начертайте кръговете с помощта на "за" блока.
      4-5 Artist Free Draw 1_instruction: Свободно рисуване!  Начертайте каквото вдъхновението
        ви каже.
      4-5 Artist Functions 1_instruction: Използвайте повторение за да начертаете
        този триъгълник.
      4-5 Artist Functions 10a_instruction: Поставете този код във функцията "начертава
        снежинка" и заменете 50 с параметъра "размер". Функцията вече е извикана да
        направи снежинка, която е 100 пиксела.
      4-5 Artist Functions 10b_instruction: 'Използвайте функцията "начертава снежинка"
        за създаване на различни по размер снежинки.  Съвет: първата снежинка е с
        25 дължина и всяка следваща снежинка е два пъти по-голяма от предишната.'
      4-5 Artist Functions 11_instruction: 'Тази "начертава шестоъгълник" функция
        използва функцията "Начертава триъгълник". Завършете функцията за шестоъгълник.
        (Съвет: шестоъгълникът има 6 страни, всяка по 100 пиксела дълга)'
      4-5 Artist Functions 12_instruction: 'Изпълните функцията "начертава вълни".  Всяка
        вълна се състои от един гребен и едно понижение.   Съвет: Начертайте 5 сини
        вълни.'
      4-5 Artist Functions 13 Free play_instruction: Ето функции,с които да нарисувате
        планети, звезди, ракети и роботи. Използвайте ги както прецените за да направите
        картини, които можете да споделяте с приятелите си.
      4-5 Artist Functions 14 Free play_instruction: Тук ние сме ви предоставим няколко
        функции.  Използвайте ги както искате в рамките на един или повече цикли за
        да направите картини, които можете да споделяте с приятелите си. Щракнете
        върху "Старт" за да видите готов пример.
      4-5 Artist Functions 15 Assessment_instruction: 'Оценка: Използвайте функцията
        "начертава квадрат" за създаване на квадрати.  Квадратите са със страни 50,
        100 и 150 пиксела.'
      4-5 Artist Functions 2a_instruction: Сега сложете тези блокове в нова функция,
        наречена "начертава малък триъгълник" и я извикайте.
      4-5 Artist Functions 2b_instruction: Сега създайте функция, наречена "Начертава
        малък триъгълник" с помощта на предоставените блокове.
      4-5 Artist Functions 3_instruction: 'Сега създайте функциите "Начертава среден
        триъгълник" и "начертава голям триъгълник". Функцията "Начертава малък триъгълник"
        е направена за вас. Триъгълниците имат странични дължини 50 (малък), 100 (среден)
        и 150 (голям). '
      4-5 Artist Functions 4_instruction: Тази нова "Начертава триъгълник" функция
        има параметър и може да извърши работата на всичките три функции от предишната
        задача. Начертайте същите триъгълници с помощта на тази нова функция.
      4-5 Artist Functions 5_instruction: Може ли да модифицирате функцията "Начертава
        триъгълник" в "начертава квадрат" функция за да промените чертежа?
      4-5 Artist Functions 6_instruction: 'Използвайте "начертава квадрат" и "Начертава
        триъгълник" функциите за да се направи една къща. (Съвет: страните на квадрата
        са 200 пиксела)'
      4-5 Artist Functions 6b_instruction: Използвайте начертава квадрат и триъгълник
        функции, както и други блокове, за да начертаете къща, като ги добавите към
        "начертава къща" функцията и я извикате за да завършите чертежа.
      4-5 Artist Functions 7_instruction: Използвайте функцията "начертава къща",
        за да нарисувате къщи, които са 100 пиксела и 50 пиксела. Двете къщи са разделени
        от 50 пиксела.
      4-5 Artist Functions 8_instruction: Функцията "рисува цвете" е параметър, който
        ви позволява да настроите височината на стъблото.  Задайте го на 200 и вижте
        какво се случва.
      4-5 Artist Functions 9_instruction: Начертайте тези 3 цветя. Първото е с височина
        100 и следващото цвете е винаги с 50 пиксела повече от височината на предишното.
        Цветята също са 100 пиксела разстояние едно от друго.
      4-5 Artist Patterns 1_instruction: Можете ли да чертаете този квадрат като използвате
        цикъл? Всяка страна е дълга 20 пиксела.
      4-5 Artist Patterns 10_instruction: 'Този код чертае два реда от шестоъгълници
        - повторете всичко 4 пъти за да нарисувате цялата медена пита. Съвет: Трябва
        да се скочи назад 120 пиксела във вашия най-последен цикъл за да не рисува
        извън екрана художника.'
      4-5 Artist Patterns 11_instruction: 'Колко пъти трябва да се повтори това за
        да се направи половин кръг? Съвет: ако в кръга има 360 градуса и всеки цикъл
        добавя 3 градуса, колко пъти ще повтаряме за да се направи пълен кръг?'
      4-5 Artist Patterns 12_instruction: повторите този цикъл и завиете наляво вместо
        надясно, какво става? Можете ли да повторите това за да начертаем тази вълна?
      4-5 Artist Patterns 13_instruction: Сега, нека повторим това четири пъти за
        да създадете тази рамка за картина. Следете за ъглите - не можете да завиете
        само на 90 градуса! Ако повторите завиване на  3 градуса 60 пъти ще правите
        полукръг, кой от тези блокове с код ще направи една четвърт кръг за ъглите?
      4-5 Artist Patterns 2_instruction: Ако поставите квадратно повторение(цикъл)
        вътре в друго повторение(цикъл), ние наричаме това вложено повторение(цикъл).
        Какво трябва да добавите към вашето външно повторение (цикъл), за да се уверите,
        всички 15 квадрати се нареждат в една линия един до друг?
      4-5 Artist Patterns 3_instruction: Сега нека отидем едно ниво по-дълбоко! Ние
        сме вложили целия блок от код в друго повторение(цикъл), но вие трябва да
        върнете художника обратно на място, за да нарисува следващата линия. Кои от
        тези блокове код може да поставите в края на най-отдалеченото повторение(цикъл),
        за да нарисувате цялата мрежа?
      4-5 Artist Patterns 4_instruction: Този диамант има 50 пикселови страни и ъгли
        от 120 и 60 градуса. Използвайте повторение(цикъл), за да го нарисувате.
      4-5 Artist Patterns 5.5_instruction: Колко пъти трябва да се повтаря този блок,
        за да се начертае пълната мрежа от диаманти?
      4-5 Artist Patterns 5_instruction: Нека да повторим това, за да направиш ред
        от 6 диаманти. Обърни внимание, че променихме нашия диамантен код да се повтаря
        3 пъти вместо 2 - Защо мислиш че направихме това?
      4-5 Artist Patterns 6_instruction: Колко пъти трябва да се повтаря този блок
        за да се изчертае пълната мрежа от диаманти?
      4-5 Artist Patterns 7_instruction: Нека променим кода от последната загадка
        да направим този по-сложен модел. Забележете как диамантите се припокриват
        сега, опитайте се да промените първото "скочи назад" от 100 до 50 (наполовината)
        - сега докъде трябва да отиде художника във второто "скочи назад"?
      4-5 Artist Patterns 8_instruction: Използвайте повторение(цикъл), за да нарисувате
        този шестоъгълник с 40 пикселови страни и 60 градусови ъгли.
      4-5 Artist Patterns 9.5_instruction: Направи повторение(цикъл) на този код,
        за да начертаеш два реда шестоъгълници. Забележете как нашият втори ред се
        измества надясно.
      4-5 Artist Patterns 9_instruction: Сега, повторете кода 3 пъти, за да начертаете
        на целия ред. Съвет:, всеки шестоъгълник е на 80 пиксела отдалечен от наляво
        надясно.
      4-5 Artist Patterns Free Play_instruction: Безплатна игра - опитай да направиш
        твой собствен модел!
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: Пчела не може да различи дали това е цвете
        или медена пита. Събирай нектар само от цветята, но първо провери дали това
        е цвете или медена пита.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: Пчелата иска нектар точно сега. Не забравяйте,
        не всички обекти са цветя, така че направете проверка да събирате нектар само
        от цветята.
      4-5 Bee Conditionals 3_instruction: Сега пчела просто иска да направи мед. Проверете
        че правите меда само в медни пити.
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: Неизвестния обект е цвете или медена пита.
        Използвайте ако/иначе блок, за да съберете нектар ако е цвете, иначе направете
        мед (защото е медена пита).
      4-5 Bee Conditionals 5_instruction: Може да има цвете или медена пита под тези
        облаци. Използвайте ако/иначе блок да събирате нектар, ако има цвете, иначе
        павете мед (защото има медена пита).
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: Това лилаво цвете може да има 3, 2 или 1
        нектар. Тук ако-иначе блок е комбиниран с друг ако-иначе блок, за да създадете
        ако, иначе-ако, иначе блок. Завършете решението, за да съберете неизвестното
        количество нектар.
      4-5 Bee Conditionals 7_instruction: Не забравяйте, че лилавите цветя може да
        имат 3, 2 или 1 нектар. Допълнете функцията "провери лилаво цвете" и я използвайте,
        за да се съберете всичкия нектар от цветята.
      4-5 Bee Conditionals 8_instruction: Напиши функция вътре в блока наречен "провери
        цвете прави мед." Твоята функция трябва да провери колко нектар има лилавото
        цвете и да го събере - движи се напред и след това направи мед.
      4-5 Bee Conditionals Assessment 1_instruction: |
        Оценяване: Този код не е наред.
        Изпълни функцията "вземи нектар или направи мед", а след това я извикай, за да събереш всичкия нектар и мед. Не забравяй, че лилавите цветя може да имат 3, 2 или 1 нектари.
      4-5 Bee Debugging 1_instruction: Тези блокове наистина ме бъгват(подразнят).
        Можете ли да ги коригирате?
      4-5 Bee Debugging 10_instruction: Открий грешките и ги поправи.
      4-5 Bee Debugging 11_instruction: Дали това брои правилно?
      4-5 Bee Debugging 2_instruction: Помогни на пчелата да вземе нектар и направи
        мед.
      4-5 Bee Debugging 3_instruction: Открий грешките и ги поправи.
      4-5 Bee Debugging 4_instruction: Тези блокове не работят. Какъв е модела?
      4-5 Bee Debugging 5_instruction: Нещо не е наред тук...
      4-5 Bee Debugging 6_instruction: Лилавото цвете има неизвестна сума нектар.
        Поправи блоковете, за да получиш всичкия нектар от цветето.
      4-5 Bee Debugging 7_instruction: На функцията й липсва нещо...
      4-5 Bee Debugging 8_instruction: Тази функция е правилна, но тя не се използва
        по правилен начин.
      4-5 Bee Debugging 9_instruction: Защо пчелата не прави достатъчно мед?
      4-5 Bee Debugging Assessment 1_instruction: 'Оценяване: Оправи кода.'
      4-5 Bee Nested Loops 1_instruction: Използвайте повторение(цикъл), за да се
        съберете всичкия нектар.
      4-5 Bee Nested Loops 2_instruction: 'Съберете всичкия на нектара от всяко цвете.
        Използвайте вложено повторение(цикъл). '
      4-5 Bee Nested Loops 3_instruction: 'Съберете всичкия нектар чрез въвеждане
        на началния код във вложено повторение(цикъл). '
      4-5 Bee Nested Loops 4_instruction: 'Съберете всичкия нектара от всяко цвете
        и правете мед на всяка пита. Използвайте вложено повторение(цикъл). '
      4-5 Bee Nested Loops 5_instruction: 'Съберете всичкия нектара чрез създаване
        на вложено повторение(цикъл). '
      4-5 Bee Nested Loops 6_instruction: Съберете всичкия нектар.
      4-5 Bee Nested Loops 7_instruction: Постави това повторение(цикъл) в друго повторение(цикъл),
        за да създадеш вложено повторение(цикъл) и да събереш всичкия нектар от цветята.
      4-5 Bee Nested Loops 8_instruction: 'Събери всичкия нектар от тези цветя като
        вложиш "докато" повторение(цикъл). Замени вътрешния блок за повтори пъти с  "докато"
        повторение(цикъл). '
      4-5 Bee Nested Loops 9_instruction: Събери всичкия нектар от тези цветя като
        вложиш  "докато" повторение(цикъл) вътре в повторение.
      4-5 Bee Nested Loops Assessment 1_instruction: 'Оценяване: Събери всичкия нектар
        и направи всичкия мед като използваш повторения(цикли).'
      4-5 Bee Nested Loops Rows_instruction: Събери нектар от редовете цветя! Използвай
        вложено повторение(цикъл).
      4-5 Maze 1 (copy 1)_instruction: Скъпи човеко. Аз зомби. Трябва... отиде...
        до слънчогледа.
      4-5 Maze 1_instruction: Скъпи човеко. Аз зомби. Трябва... отиде... до слънчогледа.
      4-5 Maze 10_instruction: Можете ли да стигнете до слънчогледа, използвайки само
        четири блока?
      4-5 Maze 11_instruction: Можете ли да отидете до слънчогледа, като използвате
        само шест блока?
      4-5 Maze 12_instruction: ОК, това е малко по-различно. Можете ли да го направите
        само с шест блока?
      4-5 Maze 13_instruction: Заведи ме до прасето!
      4-5 Maze 14_instruction: Отведи ме до прасето! Използвай блока за Повторяй докато.
      4-5 Maze 2 (copy 1)_instruction: Заведи зомбито до слънчогледа, но избягвай
        хищното цвете!
      4-5 Maze 2_instruction: Заведи зомбито до слънчогледа, но избягвай хищното цвете!
      4-5 Maze 3 (copy 1)_instruction: Трябва... отиде... до слънчогледа.
      4-5 Maze 3_instruction: Трябва... отиде... до слънчогледа.
      4-5 Maze 4 (copy 1)_instruction: Опитай блока "повтаряй", за да използваш по-малко
        блокове...
      4-5 Maze 4_instruction: Опитай блока "повтаряй", за да използваш по-малко блокове...
      4-5 Maze 5 (copy 1)_instruction: Можеш ли да решиш този пъзел, с помощта на
        възможно най-малък брой блокове?
      4-5 Maze 5_instruction: Можеш ли да решиш този пъзел, с помощта на възможно
        най-малък брой блокове?
      4-5 Maze 6 (copy 1)_instruction: Можеш ли да решиш този пъзел, с помощта на
        възможно най-малък брой блокове?
      4-5 Maze 6_instruction: Можеш ли да решиш този пъзел, с помощта на възможно
        най-малък брой блокове?
      4-5 Maze 7_instruction: Скъпи човеко. Аз зомби. Трябва... отиде... до слънчогледа.
      4-5 Maze 8_instruction: Използвай блока "повтаря", за да заведеш зомбито до
        слънчогледа. (Избягвайте хищните цветя!)
      4-5 Maze 9_instruction: Създай повторение(цикъл) с "повтаряй докато" блок.
      4-5 Maze Assessment 1_instruction: 'Оценяване: Стигни до слънчогледа.'
      4-5 Maze Conditionals 1_instruction: Използвай блока за повторение, за да заведеш
        зомбито до слънчогледа.
      4-5 Maze Conditionals 10_instruction: Можеш ли да добавиш само 3 блока, за да
        ми помогнеш да разгадая един по-сложен лабиринт? Ако го направиш правилно,
        аз мога да извървя по всяка крива пътека, независимо колко е дълга.
      4-5 Maze Conditionals 2_instruction: Използвай блока за повторение, за да заведеш
        зомбито до слънчогледа.
      4-5 Maze Conditionals 3_instruction: 'Използвай "Ако" блок, за да ми позволиш
        да реша кога да обърна. Съвет: трябва само още един блок, но научи как ние
        правим цялото нещо, така че да можеш ти сам да го направиш следващия път.'
      4-5 Maze Conditionals 4_instruction: Добре, това е точно като последната загадка,
        но трябва да си спомниш как използва заедно блока "ако" и блока "повтаряй".
      4-5 Maze Conditionals 5_instruction: Аз иска слънчоглед! Използвай "ако" блок
        да ме заведеш дотам с най-малкия брой блокове.
      4-5 Maze Conditionals 6_instruction: Аз иска слънчоглед! Използвай "ако" блок
        да ме заведеш дотам с най-малкия брой блокове.
      4-5 Maze Conditionals 7_instruction: ОК, нека направим това отново за практика
        - то не е много по-различено, но внимавай за хищните цветя!
      4-5 Maze Conditionals 8_instruction: Блоковете "ако-иначе"  проверяват условие,
        и след това правя едно нещо ИЛИ другото. За да ме  заведеш до слънчогледа
        опитай да използваш този нов блок.
      4-5 Maze Conditionals 9_instruction: Още една практика на блока "ако-иначе",
        можеш ли да го напрвиш правилно още на първия си опит?
      4-5 Maze Conditionals Assessment 1_instruction: Използвай "повтаряй докато"
        и "ако-иначе" блок, за да ме заведеш към слънчогледа с възможно най-малко
        блокове.
      4-5 Nested Loops 1_instruction: 'Допълнете кода, за да нарисувате тези триъгълници.  Първият
        е направен за теб.  Упътване: 3 триъгълника в 360 градусово завъртане.'
      4-5 Nested Loops 10_instruction: Начертайте последния ред на звездите на този
        флаг като повторите предоставените блокове. Звездите са на 50 пиксела разстояние
        една от друга, но не забравяйте, че самите звезди са 30 пиксела широки.
      4-5 Nested Loops 11_instruction: Можете ли да начертаете тези 10 квадрата на
        този тротоар, използвайки цикъл? Всеки квадрат е 30 пиксела.
      4-5 Nested Loops 12_instruction: Можеш ли да начертаеш тези 36 триъгълници с
        помощта на вложено повторение(цикъл)?
      4-5 Nested Loops 2_instruction: 'Сега постави в този цикъл друг цикъл за да
        начертаем 10 триъгълници.  Това се нарича вложен цикъл.  Съвет: Всички 10
        триъгълници правят 360 градуса завъртане.  '
      4-5 Nested Loops 3_instruction: "Създайте слънцето чрез влагане на първоначалния
        код в цикъл. Това се нарича вложен цикъл. \r\n"
      4-5 Nested Loops 5_instruction: Направи  повторение(цикъл) на дадения код за
        да създаде вятърна мелница.
      4-5 Nested Loops 6_instruction: Може ли да начертаете шестоъгълник като повторите
        кода на триъгълника?
      4-5 Nested Loops 7_instruction: 'Повторете този дизайн 10 пъти. Колко ли трябва
        да се завъртате всеки път след повторение? (Съвет: Колко е 360 делено на 10?)'
      4-5 Nested Loops 8_instruction: 'Повторете този дизайн 6 пъти. Колко ли трябва
        да се завъртате всеки път след повторение? (Съвет: Колко е 360, разделено
        на 6?)'
      4-5 Nested Loops 9_instruction: Начертайте зъбите в устата на алигатора!
      4-5 Nested Loops Assessment 1_instruction: Използвайте вложен цикъл, за да завършите
        дизайна.
      4-5 While Loops 1_instruction: Премести ме до ямата за да я напълня с две лопати
        пръст, с помощта на блок за запълване.
      4-5 While Loops 2_instruction: Ме местят към купчината за да я премахна с 5
        лопати с помощта на блок за премахване.
      4-5 While Loops 3_instruction: 'Премести ме към купчината за да я изравня, след
        това ме премести до ямата за да я запълня  Съвет: Използвайте по-малко блокове
        ако е възможно.'
      4-5 While Loops 4_instruction: 'Уау, аз намерих наистина дълбока яма! Не знам
        с колко лопати да я запълня.  Можете ли да напишете програма, която ще запълва
        с колкото лопати е нужно?  Съвет: Опитайте се да използвате "докато" повторение.'
      4-5 While Loops 5_instruction: Уау, сега има две дълбоки ями! Можете ли да напишете
        програма, която да ги изпълва и двете?
      4-5 While Loops 6_instruction: Уау, сега там има голяма купчина! Можете ли да
        напишете програма, която да премахва излишната почва, докато земята се заравни?
      4-5 While Loops 7_instruction: Уау, сега има три купчини! Можете ли да напишете
        програма, която премахва всяка от тях, докато се заравни земята?
      4-5 While Loops 8_instruction: 'Това е наистина дълбока яма и наистина голяма
        купчина пръст.  Колко лопати ще трябват  за да се заравни земята?  Съвет:
        Използвайте цикъл и за двете.'
      4-5 While Loops Assessment 1_instruction: Има много ями и купчини.  Помогнете
        ми да ги запълня и премахна излишната почва, за да заравня земята.
      Artist - Nested Loops 1_instruction: 'Допълнете кода, за да нарисувате тези
        триъгълници.  Първият е направен за теб.  Упътване: 3 триъгълника в 360 градусово
        завъртане.'
      Artist - Nested Loops 10_instruction: Начертайте последния ред от звезди на
        този флаг с повторение(цикъл) на предоставените блокове. Звездите са 50 пиксела
        една от друга, но запомнете, че самите звезди са 30 пиксела.
      Artist - Nested Loops 11_instruction: Можеш ли да начертаеш тези 10 квадрата
        на този тротоар, с вложени повторения(цикли)? Всеки квадрат е 30 пиксела.
      Artist - Nested Loops 12_instruction: Можеш ли да начертаеш тези 36 триъгълници
        с помощта на вложени повторения(цикли)?
      Artist - Nested Loops 2_instruction: 'Сега вложи това повторение(цикъл) вътре
        друго повторение(цикъл), за да нарисуваш 10 триъгълника.  Това се нарича вложено(вътрешно)
        повторение(цикъл).  Упътване: Всички 10 триъгълника правят 360 градусово завъртане.  '
      Artist - Nested Loops 3_instruction: 'Създай слънцето чрез влагането на начален
        код в друго повторение(цикъл). Това се нарича вложено(вътрешно)  повторение(цикъл).  '
      Artist - Nested Loops 5_instruction: Направи  повторение(цикъл) на дадения код
        и създавай вятърна мелница.
      Artist - Nested Loops 6_instruction: Може ли да начертаете шестоъгълник като
        повторяте кода на триъгълника?
      Artist - Nested Loops 7_instruction: 'Повторете този дизайн 10 пъти. Колко ли
        трябва да се завъртаме всеки път след повторение? (Съвет: Колко е 360 делено
        на 10?)'
      Artist - Nested Loops 8_instruction: 'Повторете този дизайн 6 пъти. Колко ли
        трябва да се завъртаме всеки път след повторение? (Съвет: Колко е 360, разделено
        на 6?)'
      Artist - Nested Loops 9_instruction: Начертайте зъбите в устата на алигатора!
      Artist - Nested Loops Assessment 1_instruction: Използвайте цикъл, за да завършите
        дизайна.
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click run to see what your game can currently do (not much!), update any variables
        you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: Задачата на "актуализиране-цел" функцията
        е да  следи текущата стойност на x и да връща актуализираната ѝ стойност.
        Завършете "актуализиране-цел" функцията, така че тя да добавя стойността на
        х, всеки път, щом е извикана. Колкото повече добавяте към x, толкова по-бързо
        целта ще се движи.
      Big Game Animation 3_instruction: Функцията "актуализиране-опасност" трябва
        да работи точно както "актуализиране-цел", с изключение, че опасността трябва
        да се движи отдясно наляво. Допълнете функцията "актуализиране-опасност" да
        задвижи опасността да лети по екрана.
      Big Game Animation 4_instruction: В този момент опасността в играта ви трябва
        да се движи на екрана отдясно наляво, а вашата цел трябва да се задвижи отляво
        надясно. Те няма да се върнат на екрана ако излязат от него, но ние ще се
        погрижим за това по-късно. Поиграйте си с играта за да се уверите, че работи
        като искате, и след това щракнете върху Готово, за да продължите.
      Big Game Booleans 1_instruction: Когато последно работехте върху играта си добавихте
        целта и опасността да летят на екрана, но не да се връщат като стигнат края
        на полето. Щракнете върху Старт за да видите как играта в момента работи и
        след това ние ще поработим за да направим тези обекти да се връщат на екрана,
        след като са излезли от него.
      Big Game Booleans 2_instruction: Сега, това ли е екранът Ви? Чрез функциите
        Сейф-ляво? и сейф дясно? Ние проверяваме може да изпълни действие. Преминете
        към раздела "Функции" на кутията с инструменти и довършете Сейф-ляво? функцията,
        така че тя да връща true ако стойността х на Спрайта е  по-голяма от -50.
        Ако сте успели да я довършите правилно, то трябва да видите опасността да
        напуска лявата страна на екрана и, след това, да се връща от дясната страна.
      Big Game Booleans 3_instruction: Сега, след като имате Сейф ляво?, да попълним
        Сейф-дясно? -Тя трябва да проверява Спрайт x координата и да връща true, ако
        тя е по-малка от 450. След като Сейф-дясно? е завършена, трябва да видите
        дали целта излиза от дясната страна на екрана и се връща от ляво.
      Big Game Booleans 4_instruction: |
        We've provided a couple of empty functions
        for safe-left? and safe-right? The first thing you need to do is complete
        the onscreen? function so that it checks whether both safe-left? and safe-right?
        are true. TIP - even after you add safe-left? and safe-right? your sprites
        won't return to the screen - why do you think that is?
      Big Game Booleans 5_instruction: В този момент, в играта ви опасността трябва
        да се движи на екрана отдясно наляво и вашата цел също трябва да се движи,
        но отляво надясно. В един момент двете трябва да обърнат на противоположната
        страна. Пробвайте за да се уверите, че вашата игра работи като искате, и след
        това щракнете върху Готово, за да продължите.
      Big Game Collision 1 (copy 1)_instruction: Когато последно работехте върху играта
        си добавихте целта и опасността да летят на екрана, но не да се връщат като
        стигнат края на полето. Щракнете върху Старт за да видите как играта в момента
        работи и след това ние ще поработим за да направим тези обекти да се връщат
        на екрана, след като са излезли от него.
      Big Game Collision 1_instruction: На този етап Вие сте програмирани видео игра
        с подвижна мишена и опасност, и двете се връщат на екрана, след като са излезли
        от него, и един играч, който отговаря на натискане на клавиши. Щракнете върху
        Старт за да видите как играта работи в момента, а след това ние ще програмираме
        последната липсваща част - отчитане на сблъсък!
      Big Game Collision 2_instruction: За да преместим играча нагоре и надолу, ние
        ще трябва да използваме условен блок, който да разбере кой клавиш е натиснат
        и да реагира по съответния начин. Компютрите разчитат клавишите като цифрови
        кодове - стрелка нагоре е 38 и стрелката надолу е 40. Можете да погледнете
        и други цифрови кодове във вашата работна книга. Редактирайте "актуализира-играч"
        функцията, така че играчът се движи нагоре когато се натисне стрелка нагоре
        или надолу когато се натисне стрелка надолу.
      Big Game Collision 3_instruction: |
        Let's fix this distance function so our
        collision detection works properly. Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy). We've provided a working
        line-length function to help you out.
      Big Game Collision 4_instruction: |
        The 'distance' function returns the distance
        between two sprites. Complete the 'collide?' function so that it returns
        true if the distance between two points is less than 100 pixels apart. If
        you're successful, your sprites will instantly collide - why do you think
        that is?
      Big Game Complete (copy 1)_instruction: 'Демо на завършен CS в алгебрата: проект
        "Голямата игра"'
      Big Game Complete_instruction: 'Демо на завършен CS в алгебрата: проект "Голямата
        игра"'
      Big Game Final_instruction: Ти го направи! Сега, играта трябва да бъде напълно
        функционираща! Ще отнеме известно време да се насладите на новата си игра,
        но трябва да направим някои крайни настройки. Когато сте доволни от крайния
        продукт, щракнете върху Готово и ще имате възможност да споделите връзка към
        играта си. Добра работа!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so the player moves up when
        the up arrow is pressed, and moves down when the down arrow is pressed.
      Big Game Testing_instruction: 'Демо на завършен CS в алгебрата: проект "Голямата
        игра"'
      Big Game Vars 1 (copy 1)_instruction: |
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |
        The first step to making this game your own is
        to give it a good Title. Click edit on the 'title' and 'subtitle' variables
        and change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the 'bg' variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for Addition which
        takes two numbers and returns their sum. Use this Addition block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a multiplication block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function "f" that takes a parameter
        "x" and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function 'f'
        every time; create a function called 'times-ten' that should take a parameter
        'x' and return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called 'half' that takes
        a number 'x' and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called "cube" - this function should have a domain of Number, range
        of Number, and return the given number to the power of 3. Make sure to write
        two example cases! When you're done, use your new function to calculate 7
        cubed.
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou
        need to track the cost of making each cookie, the money paid, and the\ntotal
        profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r\nWrite\nthe
        function `cost`, which takes in the number of cookies you intend to sell,\nand
        returns the cost of making those cookies."
      Calc Design Recipe 3_instruction: |
        Write the function `sales` which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function `profit`, which takes in the number of cookies you sold, and
        gives you back the total profit you make from selling your cookies, accounting
        for the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor
        the function \"rocket-height\" that states it has a range of Number, domain\nof
        Number, and should return the height of the rocket traveling at 15 m/s\nafter
        a given number of seconds. Let's write an example case now for the\nheight
        of the rocket at 3 seconds.\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 1_instruction: "In the last puzzle you wrote a contract for the\nfunction
        \"rocket-height\" that states it has a range of Number, domain of\nNumber,
        and should return the height of the rocket traveling at 15 m/s after\na given
        number of seconds. Let's write an example case now for the height\nof the
        rocket at 3 seconds.\r\n\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the "age" variable to 17 years.
        Can you write an expression that calculates "age" in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called "age". Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called "age-in-months"
        - use the variable "age" to set "age-in-months"
      Calc Vars 2_instruction: |
        Can you write an expression that calculates "age"
        in months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: "Draw the line. It is\n200
        pixels long. \n"
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels
        long. \n"
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80,
        90, to 100 pixels long. \n"
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to
        140 pixels. \n"
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe
        line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode
        to draw the line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast_instruction: "Draw the line.\nEach
        segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      course 1 artist 1 level 10_instruction: |
        Draw the dashed line by using both
        the jump and draw blocks
      course 1 artist 1 level 9_instruction: Draw this using three lines
      Course 2 Bee Loops 1_instruction: "Hi, I'm a bee. Can you help me collect\nthe
        nectar from these flowers? \n"
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: Можеш ли да ме заведеш до прасето с 5 блока?
      Course 4 2_instruction: Пчелата иска нектар точно сега. Не забравяйте, не всички
        обекти са цветя, така че проверете цветята за събиране на нектар.
      Course 4 Artist 1_instruction: 'Помогнете ми да завърша моята кутия. (Всеки
        ред е дълъг 300 пиксела) '
      Course 4 Artist 10_instruction: 'Сега е време за импровизации! Забавлявайте
        се и направете това, което Ви харесва. '
      Course 4 Artist 2_instruction: Можете ли да повторите този код, за да начертаете
        Сивите контури на квадрата?
      Course 4 Artist 3_instruction: Добре, опитайте се да разберете какво ще стане
        ако стартирате този код (или натиснете "Старт", за да го пробвате). След това
        го повторете достатъчно време за да завършите чертежа.
      Course 4 Artist 4_instruction: Колко градуса има една окръжност?  Попълнете
        блокът за повторение с такова число, че да се създаде кръг от цветове.
      Course 4 Artist 5_instruction: Начертайте другата половина на този дизайн така,
        че да е симетричен. Триъгълниците са равностранни и с дължина 50 пиксела.
      Course 4 Artist 6_instruction: 'Попълнете кода, за да начертаете тези триъгълници.
        Съвет: 3 триъгълници за 360 градуса завъртане.'
      Course 4 Artist 7_instruction: 'Сега, внесете този цикъл в друг за да начертаете
        10 триъгълници.  Това се нарича вложен цикъл.  Съвет: Всички 10 триъгълници
        образуват окръжност от 360 градуса.  '
      Course 4 Artist 8_instruction: Начертайте това слънце като повторите този цял
        блок от код 12 пъти.
      Course 4 Artist 9_instruction: 'Повторете този дизайн 10 пъти и се уверете,
        че ще се завъртате между всяка фигура, от която е съставен. Ето един съвет
        на колко градуса ще се завъртате: Колко е 360 делено на 10?'
      Course 4 Artist Binary 1_instruction: Това е функция, която взема двоичен низ
        от 1 и 0 и възлага на художника да се движи отляво надясно, отгоре надолу,
        като попълва квадратчета, когато вижда 1 и ги прескача, когато  вижда 0. Изпълнете
        този код, за да видите как художникът използва бинарния код за да изготви
        този модел.
      Course 4 Artist Binary 2_instruction: Кои от тези двоични низове трябва да повторите
        8 пъти за да изготвите това изображение?
      Course 4 Artist Binary 3_instruction: Можете ли да начертаете този модел като
        повторите трицифровия двоичен низ?
      Course 4 Artist Binary 4_instruction: Всеки бинарен низ представлява един ред
        от тази картина. Можете ли да ги подредите, така че тя прилича на усмихнато,а
        не на намръщено лице?
      Course 4 Artist Binary 5_instruction: Кои 6-цифрен двоичен низ, повторен11 пъти,
        ще изготви това изображение?
      Course 4 Artist Binary 6_instruction: Кой е най-краткия двоичен низ, който можете
        да повторите за да се изготви това изображение?
      Course 4 Artist Binary 7_instruction: Завърши този чертеж.
      Course 4 Artist Binary Free Play 2_instruction: 'Свободна игра: Тук резолюцията
        на платното е по-висока - 16 бита на 16 бита!'
      Course 4 Artist Binary Free Play_instruction: 'Свободна игра: Нарисувате каквото
        си искате с двоичен код!'
      Course 4 Artist For  Functions 10_instruction: "Нека го настроим малко\nможеш
        ли да нарисуваш звездна форма, използвайки фукнцията \"Нарисувай квадратна
        линия\"? \nУспех!\n"
      Course 4 Artist For  Functions 11_instruction: "Нека го настроим малко\nможеш
        ли да нарисуваш звездна форма, използвайки фукнцията \"Нарисувай квадратна
        линия\"? \nУспех!\n"
      Course 4 Artist For Loops 1_instruction: 'Нарисувай триъгълник, който е с размер
        50 пиксела. Подсказка: използвай блок за повторение.'
      Course 4 Artist For Loops 10_instruction: Време е за свободна игра! Забавлявай
        се, нарисувай каквото искаш с блоковете, които си научил как да използваш
      Course 4 Artist For Loops 11_instruction: 'Помните ли когато използвахме променливи
        за да контролираме броя на страните в геометрична форма? Тази форма започва
        като триъгълник като допълва по една страна докато не се получи десетоъгълник
        ( 10 страни). Всяка страна трябва да бъде 100 пиксела дълга. Съвет: Разделете
        360 на страните на фигурата за да получите ъгъла на завъртане.'
      Course 4 Artist For Loops 12_instruction: 'Това изглеждаше много готино, но
        сега бих искал да начертаем всяка фигура до последната. Този път всяка страна
        е 20 пиксела. Използвайте "скок" блок за да скачате напред 40 пиксела след
        всяка фигура. '
      Course 4 Artist For Loops 13_instruction: Хммм , тези фигури стават все по -големи
        всеки път! Но нерешихме ли тези задачи вече използвайки променливи? Как да
        използваме бройните променливи за да умалим страните на многоъгълника? Вместо
        да се премествате напред на точна величина , опитайте да разделите  величината
        първо на 100 пиксела.
      Course 4 Artist For Loops 14 _instruction: Ако когато чертаете фигура  завъртите
        малко повече или по-малко от обикновено,ще получите фигура близка до оригиналната
        .Опитайте да завъртите на 89 градуса за да полъчите тази сложна спирала.
      Course 4 Artist For Loops 14_instruction: Ако когато чертаете фигура  завъртите
        малко повече или по-малко от обикновено,ще получите фигура близка до оригиналната
        .Опитайте да завъртите на 89 градуса за да полъчите тази сложна спирала.
      Course 4 Artist For Loops 15_instruction: 'Свободно чертане: Опитайте да начертаете
        нещо като използвате функцията за цикли. Добавихме няколко общи променливи
        които може да използвате.'
      Course 4 Artist For Loops 2_instruction: 'Сложих кода за изчертаване на триъгълника
        вътре във функцията за цикли която брой от 50 до 100 през десет . Разгледайте
        кода и натиснете "Тръгни" когато сте готови да видите как работи. '
      Course 4 Artist For Loops 3_instruction: Страните на малкия триъгълник имат
        20 пиксела дължина, а на най-големия 200 пиксела, всеки триъгълник е с 20
        пиксела по-голям от предходния. Актуализирайте цикъла, за да начертаете тези
        триъгълници.
      Course 4 Artist For Loops 4_instruction: Използвайте цикли за да начертаете
        квадратчета. Най-малкото е 50 пиксела, а най-голямото е 300 пиксела, като
        всеки квадрат е с 25 пиксела по-голям от предходния. Дал съм ви почти целия
        код -един блок липсва, кой ?
      Course 4 Artist For Loops 5_instruction: 'Свъпшихте добра работа с последния
        пъзел. Нека да използваме блока "бройни" променливи отново за да нарисуваме
        тази страхотна картина. '
      Course 4 Artist For Loops 6_instruction: Свободно чертане! Опитайте да начертаете
        уголемяваща се фигура използвайки цикл и собствен дизайн.
      Course 4 Artist For Loops 7_instruction: Какво ще стане ако премахнете "Повтори
        3" от алгоритъма , оставите блоковете "премести" и " завий" ? В този спираловиден
        триъгълник всяка от страните е 20 пиксела по-дълга от предишната.
      Course 4 Artist For Loops 8_instruction: Най-малката линия от тази квадратна
        спирала е 10, най-голямата е 200, и всяка линия е с 10 пиксела по-дълга от
        предходната. Можете ли да подпълните липсващите блокове за да завършите тази
        страхотна картина?
      Course 4 Artist For Loops 9_instruction: Можете ли да направите спирала? Преместете
        се на пред от 1 до 75 пиксела, като увеличавате с 1 пиксел всеки път.
      Course 4 Artist Functions 1_instruction: Можете ли да начертаете квадрат от
        100 пиксела каро използвате цикл?
      Course 4 Artist Functions 10_instruction: Кой блок трябва да използвате за да
        поставите триъгълника на върха на квадрата?
      Course 4 Artist Functions 11_instruction: Проверете този код който изчертава
        куб- можете ли да го преместите във функцията наречена" Начертай Куб"
      Course 4 Artist Functions 12_instruction: Направи повторение(цикъл) на квадратна
        функция, за да начертаеш линия
      Course 4 Artist Functions 13_instruction: Вижте имаме нова функция наречена
        " начертай линия от квадратчета". Погледнете в блока за да разгледате как
        сме го направили. Щракнете на "Тръгни" когато сте готови да започнете следващия
        пъзел.
      Course 4 Artist Functions 14_instruction: Вие се справяте страхотно! Нека да
        използвате вашата нова "Начертайте линия от квадрати" функция да начертаете
        квадратна форма. Не забравяйте, всеки квадрат има 40 пиксела дължина.
      Course 4 Artist Functions 15_instruction: 'Нека да ускорим нещата малко, можете
        ли да направите звезда форма, като използвате функцията "начертайте линия
        от квадрати"? На добър час! Съвет: може да се наложи да завивате на 144 градуса'
      Course 4 Artist Functions 2_instruction: 'Можете ли да начертаете 3 квадрата
        на разсточние 20 пиксела един от друг? Съвет: всеки квадрат е 100 пиксела'
      Course 4 Artist Functions 3_instruction: "Можете ли да начертаете тази картина
        използвайки блока \"начертай квадрат\" ?Съвет: всеки квадрат е на 20 пиксела
        от предходния.\r\n"
      Course 4 Artist Functions 4_instruction: 'Готови ли сте да направите своя собствена
        функция? Щракнете на блока " Функция", наименувайте я "начертай триъгълник",
        после направете триъгълник с блоковете Действие и Цикли .После щракнете на
        Запиши и Затвори в горния десен ъгъл.Съвет: Направете триъгълник от 100 пиксела.
        На добър час!'
      Course 4 Artist Functions 5 OLD_instruction: Нека опитаме да използваме двете
        функции за начертаването на  къща- как  да се поправи кода за правилни изчертаване?
      Course 4 Artist Functions 5_instruction: "Можете ли да начертаете тази картина
        използвайки блока \"начертай квадрат\" ?Съвет: всеки квадрат е на 20 пиксела
        от предходния.\r\n"
      Course 4 Artist Functions 6_instruction: Кой блок трябва да използвате за да
        поставите триъгълника на върха на квадрата?
      Course 4 Artist Functions 7_instruction: Можете ли да чертаете линия на квадратчета
        с помощта на квадратна функция? Всеки квадрат е 40 пиксела дължина.
      Course 4 Artist Functions 8_instruction: 'Разбрахте ли как се използва блока
        функция? Нека да промениме квадрата на 200 пиксела.Съвет:щракнете на "Редактиране"
        да промените размера в блока" начертай квадрат". Незабравяйте да  щракнете
        на "запиши затвори" за да излезете от редктирането на функции меню. '
      Course 4 Artist Functions 9_instruction: Направили сме по-голямата част от кода
        за направа на функция. Обаче, има нещо което липсва. Можете ли да допълните
        този блок за функции?
      Course 4 Artist Params 1_instruction: Да редактираме функция която изчертава
        квадрат от 50 пиксела
      Course 4 Artist Params 10_instruction: 'Можете да извикате функция която се
        намира в друга функция! Използвайте функция "фигура'' и начертайте 3 къщи
        като всяка е ц 20 пиксела по-голяма , първата е 50пиксела. Помогнете ис като
        изолзвате цикл "бройни" . '
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: Използвайте функцията "колело" за да
        начертаете тези фигури. Дължината на всяка от страните е 50 .
      Course 4 Artist Params 13_instruction: 'Допълнително: Това са функциите които
        написахте и няколко допълнителни. Начертайте нещо страхотно!'
      Course 4 Artist Params 2_instruction: |
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: 'Страхотно можете ли да начертаете всеки
        от тези триъгълници с новата функция?Първият е 25 пиксела, вторият е 50, и
        третият е 75. '
      Course 4 Artist Params 4_instruction: Можеш ли да добавиш нова функция наречена
        квадрат(square)?Трябва да определите дължината , също като при триъгълника.Този
        път начертайте 3 квадрата 25,50 и 75 пиксила, раздалечени на  100 пиксела.
      Course 4 Artist Params 5_instruction: |
        Използвайте двете нови функции да начертаете тази фигура. За улеснение използвайте цикли и параметъра "бройни".
      Course 4 Artist Params 6_instruction: "Нека редактираме функцията \"начертай
        фигура\".\nТя вече има \"дължина\". Сега нека променим функцията така, че
        да добави и \"ширина\".\nЗапомнете, че ъгълът на една фигура е 360 разделен
        на страните му.\nСъвет:Дължините на всяка триъгълна фигура са 100 пиксела,
        на всеки шестоъгълник е 25 пиксела, а на всеки квадрат 50 пиксела. \n"
      Course 4 Artist Params 7_instruction: "Можете ли да начертаете тези фигури като
        запълните \"???\" пространството?\nКвадратът и триъгълникът са 100 пиксела
        по размер, докато шестоъгълникът е 75 пиксела по размер. \n"
      Course 4 Artist Params 8_instruction: "Можеш ли да разгадаеш как да начертаеш
        тази фигура?\nЕто съвет. Създай нова функция с 6 страни наречена \"шестоъгълник\"
        (hexagon). \n \n"
      Course 4 Artist Params 9_instruction: Помните ли коогато използвахме бройни
        цикли но премахнахме внедрения цикъл?Хайде да се позабавляваме като използваме
        функцията "начертай фигура" със зададени "параметри" и "дължина". Можете ли
        да начертаете тези фигури? За квадрата задайте бройните 5/100/5, за триъгълника
        10/100/10 и за шестоъгълника 2/100/2.
      Course 4 Artist Var 9_instruction: 'Това е алгоритъм, с който да нарисувате
        триъгълник, да го промените, така че да използва променлива "страни". Заменете
        цифрата 3 с променливата "страни". Съвет: не забравяйте да използвате "задава
        страни" блок.'
      Course 4 Artist Vars 1_instruction: Ще ми помогнете ли да начертая триъгълник?
        Всяка от страните е 100 пиксела.
      Course 4 Artist Vars 10_instruction: |
        Ето алгоритъм който ще начертае триъгълник от по-малки триъгълници.
        Можеш ли да го промениш (модифицираш) така, че да използва страните си променливо, начертавайки всеки триъгълнк? Прегледай кодът и всеки път когато видиш числото 3, замени го със своите променливи страни. Незабравяй да използваш блокчето "задай страни".
      Course 4 Artist Vars 11_instruction: Това е  алгоритъма който използвахме в
        последния пъзел- какво число трябва да напишете в блока "страни" за да начертаете
        тази картина от квадрати?
      Course 4 Artist Vars 12_instruction: Да зададем 5 на променливата в блок "страни".Колкото
        повече страни  толкова по голяма фигур ще получим. Да добавим нова променлива
        "дължина" и я използваме там където имаме блок" премести напред"Задайте на
        променливта в блока" дължина" 75.
      Course 4 Artist Vars 13_instruction: Колкото повече страни има фигурата толкова
        по-къси трябва да са,за да може цялата фигура да се побере на екрана.Вместо
        да задаваме всеки път дължината, да използваме променлива и математическа
        формула .Използвайте правилното уравнение от кутията с инструменти да зададете
        стойност на променливата в блок "дължина" и актуализирайте блока"страни".
      Course 4 Artist Vars 14_instruction: 'Допълнително: Вижте, сега вашият алгоритм
        е внедрен в още един цикъл. Екцпериментирайте да начертаете нови модели като
        променяте двете променливи.'
      Course 4 Artist Vars 2_instruction: Блока"премести напред с 100" е заменен с
        променливата в блок "дължина".Можете ли да и зададете стойност 150 и начертаете
        нов триъгълник?
      Course 4 Artist Vars 3_instruction: Това е цикъл за изчертаване на квадрат,но
        нещо липсва.Можете ли да го поправите да използва променливта "дължина" за
        да определите дължината на всяка страна.
      Course 4 Artist Vars 4_instruction: Искам да направя правоъгълник,два пъти по
        висок отколкото широк.Имаме променливата "ширина" със стойност 100.Можете
        ли да използвате математически блокове и завършите кода?
      Course 4 Artist Vars 5_instruction: Използвайте променливата "страни" да контролирате
        повторенията на цикъла.
      Course 4 Artist Vars 6_instruction: 'Хмм опитах се променя променливата "страни"
        на 4 от кода в последната загадка, но тя все още прилича на триъгълник. Можете
        ли да използвате променливата на "страни" (заедно с математическия блок) за
        да сте сигурни, че се обърна нужното количество пъти? Съвет: 360, разделен
        на броя на страните ще ви даде броят градуси за завъртане.'
      Course 4 Artist Vars 7_instruction: Променете променливата "страни" и ми помогнете
        да начертая този шестоъгълник.
      Course 4 Artist Vars 8_instruction: 'Допълнително:Експеримент със страните на
        фигурата. Можете ли да промените алгоритъма така че големината на фигурата
        е постоянна независимо от броя на страните? Помощ: Може да използвате математическите  блокове
        (на две места разделете 360 на блока "страни") '
      Course 4 Artist Vars 9_instruction: Променете алгоритъма да използва променливата
        "страни" вместо статично число за начертаване на триъгълник. Заместете числото
        3 със "страни" и използвайте блока "задай страните".
      Course 4 Bee 1_instruction: 'Пчелата не може да прецени да ли това е цвете или
        медена пита.Провери първо да ли е цвете или пита, и всеми нектар ако е цвете. '
      Course 4 Bee 2_instruction: Провери всеки обект да ли е цвете , ако е тогава
        вземи нектар.
      Course 4 Bee 3_instruction: Неизвестния обект е или цвете или медена пита. Използвай
        блока Ако-Иначе да вземеш нектар ако е цвете, иначе направи мед ( защото това
        значи че е медена пита).
      Course 4 Bee 4_instruction: Това лилаво цвете може да има 3, 2 или 1 нектар.
        Тук ако-иначе блок е комбиниран с друг ако-иначе блок, за да създадете ако,
        иначе-ако, иначе блок. Завършете решението, за да съберете неизвестното количество
        нектар.
      Course 4 Bee For Loops 1_instruction: Използвайте цикъл за да съберете нектар
        от всяко цвете.
      Course 4 Bee For Loops 10_instruction: Ако цикъла е намаляващ, стъпката е се
        движи с намаляващ ред във всеки цикъл.Каква трябва да е стъпката за да съберете
        нектар от 9, 6 и накрая 3?
      Course 4 Bee For Loops 2_instruction: Това е един нов вид цикъл наречен " за
        цикъл". Той ще преброи от 1 до 5 ( многократно събиране на числото 1) и ще
        повтаря цикъла от начало .Помогнете на пчелата да вземе нектара.
      Course 4 Bee For Loops 3_instruction: Може да решите пъзела като използвате  блока
        " за цикъл" да преброите от 1до 3.Хайде да съберем нектара!
      Course 4 Bee For Loops 4_instruction: Съберете всичкия нектар от цветятя . Чудя
        се няма ли по лесен начин от този...
      Course 4 Bee For Loops 5_instruction: 'С блока " за цикъл" става по- лесно!
        Използвайте променливата "бройни" от блока " за цикъл" за да повторите  блока
        "вземи нектар" толкова пъти колкото е цикъла . Оу! Толкова много цикли.Целия
        код е даден погледнете как е направен и натиснете "Започни" за да видите как
        работи. '
      Course 4 Bee For Loops 6_instruction: Можете също да използвате " за цикъл"
        за да броите наобратно.Пробвайте да вземете нектар като броите от 5 до 1 ,
        намалявайте с единица.
      Course 4 Bee For Loops 7_instruction: Използвайте променливата "брояч" от "за
        цикъл" да контролирате колко далече да отидете хоризонтално.
      Course 4 Bee For Loops 8_instruction: Можете ли да използвате променливи в цикъла
        да конртолирате преместване и събиране на нектар?
      Course 4 Bee For Loops 9_instruction: Последното число от цикъла "за цикъл"
        се нарича "стъпка" и всеки път когато цикъла се повтаря водещата променлива
        нараства със "стъпката". Опитайте се да суберете нектара от цветята като използвате
        стъпка=2.
      Course 4 Bee Params 1_instruction: Използвайте функцията " вземи нектар 3" завийте,
        преместете се да вземете нектара и се върнете в изходан позиция. Напишете
        последователността за събирането на нектар с "вземи нектар 3"
      Course 4 Bee Params 2_instruction: Променете функциаята "вземи нектар 3" такаче
        да ме премести на дясно, вместо на ляво.
      Course 4 Bee Params 3 (copy 1)_instruction: Сега цветята са от двете страни!
        Може би ще използвате параметър така чеда използвате една функция за двете
        страни.Добавих параметъра " посока" към функциата . Ако параметара  в "посока"
        е равен на 0 трябва да завия на ляво, ако е равен на 1, трябва да завия на
        дясно.
      Course 4 Bee Params 3_instruction: Има цветя от двете страни! Добавих параметъра
        "посока". Използвайте променливите "ляво' и 'дясно" да контролирате посоката.
        Подълнете останалата част от функцията а натиснете" запомни" и "затвори"
      Course 4 Bee Params 4 (copy 1)_instruction: Опитайте се да използвате новата
        функция да съберете всички цветя. Запомнете , 0=ляво и 1=дясно.
      Course 4 Bee Params 4 backup_instruction: Няма ли да е по добре ако можехме
        да съберем целия нектар с една функция? Опитайте се да добавите нов параметър
        "нектари" за да контролирате количеството на събрания нектар. Вероятно ще
        искате да преименувате функцията също!
      Course 4 Bee Params 4_instruction: Опитайте се да използвате новата функция
        за събиране на цветя. Запомнете да използвате променливите ляво и дясно.
      Course 4 Bee Params 5_instruction: Хайде да започнем от начало- можете ли да
        създадете нова функция наречена " вземи 5 нектара" с параметър на посока?
      Course 4 Bee Params 6 (copy 1)_instruction: Опитайте да използвате новата функция
        и да съберете целия нектар.
      Course 4 Bee Params 6_instruction: Няма ли да е по добре ако можехме да съберем
        целия нектар с една функция? Опитайте се да добавите нов параметър "нектари"
        за да контролирате количеството на събрания нектар. Вероятно ще искате да
        преименувате функцията също!
      Course 4 Bee Params 7 (copy 1)_instruction: Опитайте да използвате новата функция
        и да съберете целия нектар.
      Course 4 Bee Params 7_instruction: Опитайте се да използвате новата функция
        за да съберете целия нектар.
      Course 4 Bee Params 8_instruction: Ох, сега трябва да се справим и с меда!Как
        можете да актуализарате вашата функция за да получите нектар или мед.
      Course 4 Binary 1_instruction: Това е функция която използва доичена бройна
        система съставена от числата 1 и 0 и инструктира фермера да се движи от ляво
        на дясно от долу на горе, обръщайки квадрадите със 0. Активирайте предоставения
        код за да видите как феремра използва двоичната система за да начертае картина.
      Course 4 Binary 2_instruction: 'Кой двоичен низ може да повторите 8 пъти за
        да начертаете тази картина? Помощ: числото "1"  запълва дупка.'
      Course 4 Binary 3_instruction: Можете ли да начертаете този модел като повторите
        един двоичен низ?
      Course 4 Binary 5 (copy 1)_instruction: Кой двоичен низ повторен 10 пъти ще
        начертае тази картина?
      Course 4 Binary 5_instruction: Кой двоичен низ повторен 10 пъти ще начертае
        тази картина?
      Course 4 Binary 6 (copy 1)_instruction: Кой двоичен низ повторен 10 пъти ще
        начертае тази картина?
      Course 4 Binary 6_instruction: Кой двоичен низ повторен 10 пъти ще начертае
        тази картина?
      Course 4 Binary 7 (copy 1)_instruction: Можете да довършите  това изображение
        като повторите 5 битовия двоичен номер - тогава ти ще нужен и още един 4 битов
        номер за да се получи долния десен ъгъл.
      Course 4 Binary 7_instruction: Кой двоичен низ повторен 10 пъти ще начертае
        тази картина?
      Course 4 Binary 8_instruction: Може да довършите по голяма част от картината
        като повторите  5 байтено двоично число - след това ви трябва 4 байтно двоично
        число за да стигнете до долен -десен ъгъл.
      Course 4 Maze 1_instruction: Преместете ядосаната птица до прасето!
      Course 4 Maze 2_instruction: Избягвайте тротила!
      Course 4 Maze 3_instruction: 'Прграмирайте ядосаната птица да стигне до прасето. '
      Course 4 Maze 4_instruction: Опитай блока "повтаряй", за да използваш по-малко
        блокове...
      Course 4 Maze 5_instruction: Можеш ли да решиш този пъзел, с помощта на възможно
        най-малък брой блокове?
      Course 4 Maze 6_instruction: Можеш ли да решиш този пъзел, с помощта на възможно
        най-малък брой блокове?
      Course 4 Play Lab For Loops 2_instruction: Този пит нека да опитаме д апреброим
        нечетните числа от 1 до 100.
      Course 4 Play Lab Params 1 (copy 1)_instruction: Това е функция наречена "скок"
        която прави вашият герой да скочи 100 пиксела. Използвайте я за да съберете
        знамената.
      Course 4 Play Lab Params 1_instruction: Това е функция наречена "скок" която
        прави вашият герой да скочи 100 пиксела. Използвайте я за да съберете знамената.
      Course 4 Play Lab Params 10_instruction: |
        Добавихме още една последна функция за вас. Програмирайте вашата игра да отвори фyнкцията  " едно ниво по нагоре" ако " играча има >10 точки". Ако преминете 4-то ниво може да се преместите на следващият пъзел.
      Course 4 Play Lab Params 2 (copy 1)_instruction: |
        Сега знамената са високи за достигане! Нека сложим нов параметър към нашата функция "скок" наречен "височина'. Стрелката нагоре трябва да скочи 100 пиксела , стрелката надолу 300 пиксела. Внимавайте , нетрябва да ударите  <future barrier
        above lower flags>!
      Course 4 Play Lab Params 2_instruction: Сега знамената са високи за достигане!
        Нека сложим нов параметър към нашата функция "скок" наречен "височина'. Стрелката
        нагоре трябва да скочи 200 пиксела , стрелката надолу 100 пиксела. Щракнете
        на "редактирай" във функцията 'скок" и промени така че да използва параметира
        за височина вместо просто да скача 100 пиксела.
      Course 4 Play Lab Params 3_instruction: 'Хайде да добавим нов параметър във
        функциата скок, така че да я използваме с други актьори. Всеки актьор е представен
        с номер , започващ от 1. Редактирайте функцията ''скок" така че да включва
        параметъра "актьор". '
      Course 4 Play Lab Params 4_instruction: "Тази функция се нарича \"патрул\".
        \nРедактирайте я за да преместите котката с 400 пиксела нагоре или надолу.\n"
      Course 4 Play Lab Params 5_instruction: Подпълнете параметъра за 'актьор" зад
        а извикаме  функцията "патрул" за всеки от актьорите. Запомнете , актьорите
        отговарят на числата 1,2, и 3.
      Course 4 Play Lab Params 6_instruction: Добавете нов параметър "скорост" към
        функцията 'патрул". Използвайте блок "зададена скорост" със нов параметър
        във "скорост".
      Course 4 Play Lab Params 7_instruction: Използвайте стрелките на клавиатурата
        за да контролирате Кучето и съберете всички знамена.
      Course 4 Play Lab Params 8_instruction: Използвайте блока " когато докосна"
        да изпратите Кучето обратно в горния ляв ъгъл ако то докосне някои от актьорите.
      Course 4 Play Lab Params 9_instruction: 'В една от игрите над които работихме
        по рано добавихме функцията "спечели_точки" която използва параметъра ''точки".
        Редактирайте функцията така че параметъра "точки" да се добави към променливата
        "играч_точки"Като Кучето спечели 10 точки ще се премести на следващият пъзел. '
      Course 4 Play Lab Vars 1_instruction: Не трябва да пишете никакъв код , просто
        натиснете "Започни" за да игарете!Тук вие сте Кучето което се опитва да събере
        повече знамена от Котката. Използвайте стрелката надолу за да го нконтролирате.
        Натиснете " Завърших" когато сте готови.
      Course 4 Play Lab Vars 2_instruction: Това състезание не е много честно!Променете
        променливата "куче_скорост" за да сте сигурни че ще съберет повече знамена
        от Котката. Първият който събере 10 знамена печели!
      Course 4 Play Lab Vars 3 (copy 1)_instruction: |
        Ето една нова игра!
        Използвайте лявата и дясна стрелка да се премествате , и стрелката нагоре да скачате. Вижте, ако може да съберете всички знамена.
      Course 4 Play Lab Vars 3_instruction: |
        Ето една нова игра!
        Използвайте лявата и дясна стрелка да се премествате , и стрелката нагоре да скачате. Вижте, ако може да съберете всички знамена.
      Course 4 Play Lab Vars 4_instruction: 'Сега използваме променливата наречена
        "височина" за да контролираме колко високо ще скочи кучето. Променете променливата
        във "височина" така че кучето да ксочи достатъчно високо.Помощ: новите знамена
        са на височина 200 пиксела.'
      Course 4 Play Lab Vars 5_instruction: 'Хайде да направим игра!Първо ще ни трябва
        резултат. Използвайте блока " достигане на точки до" за да зададете резултат
        до 10. '
      Course 4 Play Lab Vars 6 (copy 1)_instruction: Браво, сега имаме променлива
        за резултата , но как да я изпозваме ?Какво ще кажете да добвяме всеки път
        към променливата щом ударим противника с огнено кълбо? Използвайте събитието"
        когато актьор 2 пипне нещо" да предизвикате актуализация на резултата когато
        ударите котката с огнено кълбо. Можете да увеличавате резултата като зададете
        резултат+резултат+1. Достигнете до 10 ( ъвеличавайки с 1) за да преминете
        нивото.
      Course 4 Play Lab Vars 6_instruction: Как да печелим точки в нашата игра? Прибавете
        1 към променливата "точки" всеки път когато Кучето удари котката с огнено
        кълбо. Използвайте събитието "когато актьор 2 докосне нещо" да задейства актуализация
        на резултата. Можете да увеличавате променливите като зададете "точки=точки+1."
        Достигнете до резултат 10 ( точка по точка) за да преминете нивото.
      Course 4 Play Lab Vars 7 (copy 1)_instruction: Хубаво, нека сме сигурни че играта
        не е мнхого лесна - всеки път като ви ударят с огнено кълбо , ще губите точка.Нека
        започнем с 10 точки за по-лесно. За дапремините нивото трябва да стигнете
        от 10 до 0.
      Course 4 Play Lab Vars 7_instruction: Хубаво, нека сме сигурни че играта не
        е мнхого лесна - всеки път като Кучето ( актьор 1) е ударен  с огнено кълбо
        , ще губите точка.Нека започнем с 10 точки за по-лесно. За дапремините нивото
        трябва да стигнете от 10 до 0.
      Course 4 Play Lab Vars 8 (copy 1)_instruction: Добре, последно за таи игра -
        нека да направим така че играча да губи (или печели). Използвайте цикъл за
        винаги, за да проверите стойността на резултата- ако е някога по голям  от
        20 , направете противника да изчезне.Ако е някога по-малък от 0 , противника
        изчезва. Щракнете "Готово" когато играта работи така както искате.
      Course 4 Play Lab Vars 8_instruction: Нека да направим така че Кучето да губи
        (или печели). Използвайте цикъл за винаги, за да проверите стойността на резултата-
        ако е някога по голям  от 20 , направете противника (Котката)да изчезне.Ако
        е някога по-малък от 0 , играча ( Кучето) изчезва. Щракнете "Готово" когато
        играта работи така както искате.
      Course 4 Play Lab Vars 9_instruction: Допълнително!Това са всичките променливи
        които използвахме до момента , и още няколко ако искате да ги използвате.Направете
        игра или история като ги използвате. Помощ:превъртете надолу за да видите
        всички команди в работното пространство.
      Course 4 Play Lab Vars_instruction: Добре, последно за таи игра - нека да направим
        така че играча да губи (или печели). Използвайте цикъл за винаги, за да проверите
        стойността на резултата- ако е някога по голям  от 20 , направете противника
        да изчезне.Ако е някога по-малък от 0 , противника изчезва.
      Course 4 Play Labs For Loops 1_instruction: Хайде да накараме кучето да казва
        всяко число от 1 до 100. Използвайте "за цикъл" и блока "брояч" за произнасяне
        на променливите всеки път като се завърти цикъла.
      Course 4 Play Labs For Loops 2_instruction: Този пит нека да опитаме д апреброим
        нечетните числа от 1 до 100.
      Course 4 Play Labs For Loops 3_instruction: Ако броим с по големи числа ще преброим
        много повече за същото време. Опитайте да направите кучето да брои от 10 до
        1000 , през 10.
      Course 4 Play Labs For Loops 4 (copy 1)_instruction: Нарастването на стъпката
        е полезно, но ние все още броим линейно ( всяко число е на еднаква дистанция
        от предходното. Виж Линейна Алгебра/математика) . Какво ще стане ако например
        започнем да броим експоненциално  ? Без да променяме настройките на функцията
        "за цикъл" , можете ли да избройте  1,4,9,16,25....( в квадратно броене)?
      Course 4 Play Labs For Loops 4_instruction: Нарастването на стъпката  е полезно,
        но ние все още броим линейно ( всяко число е на еднаква дистанция от предходното.
        Виж Линейна Алгебра/математика) . Какво ще стане ако например започнем да
        броим експоненциално  ? Без да променяме настройките на функцията за цикличност
        , можете ли да избройте  1,4,9,16,25....( в квадратно броене)?
      Course 4 Play Labs For Loops 5_instruction: В предишното ниво използвахме броене
        втора степен. Опитайте да броите на трета степен като промените "counter^2"
        със "counter^3" за да изброите третата степен на всяко число ( 1,8,27,64,125,216,343..)
      Course 4 Play Labs For Loops 6_instruction: Може би си спомняте че просто число
        е всяко число което се дели на себеси и на едно.Използвайте функцията "е_просто
        число" да изкажете само простите числа от 1 до 100.
      Course 4 Play Labs For Loops 7_instruction: Можете ли да използвате функцията  'за
        цикъл' и да ми помогнете да разбера тази последователност 1,4,7,10,13,16,19,22,25?
      Course 4 Play Labs For Loops 8_instruction: |
        Коя функция ще изрази тази последователност ?
        19,27,35,43,51?
      Course1BeePuzzle12_instruction: Get three nectars and then make two honey
      Course1MazeAssessment1_instruction: "This is a test!\r\nMove one way, then\nanother
        to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\r\nMove one way, then\nanother
        to get me to the pig."
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either "true" or "false." Click "Run"
        to see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as "true"?
      Eval Booleans 3_instruction: |
        The "string-length" function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        "true."
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the "string=?" function to make conditionals
        that respond to text input. Here's a function called "green shape" that
        takes a string parameter for the shape. Complete the conditions so that the
        correct shape is drawn when the function is run with "circle," "triangle,"
        "square," or "rectangle."
      Eval Cond 5_instruction: |
        Here's a similar function "red shape" with an
        additional parameter for size. Complete the conditionals so the correct image
        is drawn for "circle," "triangle," and "star."
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin
        the name of a food and produces a String that says how you feel about that\nfood.
        For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic
        “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review,
        but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\r\nOne
        example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes
        in the name of a shape and produces a solid green shape. Your function\nshould
        work with at least “circle”, “star” and “rectangle”, but you can add\nother
        shapes if you like. You can choose the size of each shape. Don’t forget\nto
        add an “else” clause!\r\nOne example - and part of the definition -  has\nalready
        been done for you!\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave
        your own business by 30. Write a function called life-goals, which takes\nin
        an age and produces a string that describes your life goals by then. Don’t\nforget
        to add an “else” clause!\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The "scale" function returns an image that
        is either larger or smaller than the input image. Try scaling this circle
        by a factor of 10. How is the returned image different than if you'd just
        made a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the "star" function to produce a solid
        red star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the "text" function to write this
        "Hello, world!" in teal at size 40.
      Eval Contracts shrink_instruction: "Can you complete this image using the \"shrink\"\nfunction
        block? The radius is 20. \n"
      Eval Define Funcs 1_instruction: |
        Here's a new function called "green-triangle"
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle
      Eval Define Funcs 2_instruction: |
        Let's look inside that "green-triangle"
        function to see how it works. Can you modify it so that the "green-triangle"
        function always draws outlined green triangles?
      Eval Define Funcs 3_instruction: "Here's the start of another new function\ncalled
        \"purple-circle\" with a domain of one Number (the radius) and a range\nof
        Image. The body of the function is broken though, it always draws a circle\nof
        50 pixel radius instead of using the radius parameter. Replace the current\nNumber
        with the \"radius\" block from the domain. \n"
      Eval Define Funcs 4_instruction: |
        Create a new function called "aqua-star"
        that has a Domain of a single Number for radius and returns an aqua star of
        the given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that "aqua-star" function to
        make a row of different sized stars. From left to right, the stars should
        have radiuses of 25, 50, and 75.
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called "square-circle" with domain Number String and range Image. Click
        Edit to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The design recipe for "wide-rect" already
        has a contract and one example. Can you write a second example and then complete
        the definition. The "wide-rect" function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        "starburst" that has two domains. 1) a number of points and 2) a radius.
        "starburst" returns a yellow radial star with given points, and an inner
        radius that is half the outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        "striped-flag" that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Using the Design Recipe, write a function
        "large-polygon" that should output a polygon of given sides and color that
        takes up most of the window, regardless of the number of sides. To make sure
        that the polygon doesn't get too large as you increase the number of sides,
        side length should be inversely proportional to side number, with a length
        of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the design recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The "string-append" function takes two
        Strings and returns a single combined String. Add a String "Universe" to
        the second argument of "string-append."
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This "star" function takes in a Number and two Strings,
        and it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the "rectangle" block to draw
        this solid red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        "overlay" to place a 100 pixel white triangle on top of a 200 pixel red
        circle.
      Eval Strings Images 6_instruction: |
        Use the overlay function to place a 75
        pixel radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The "offset" block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called "radial-star" and it allows you to draw stars with any number
        of points! Use it to create a solid orange star with an inner radius of 75
        pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      frozen circle function in circle_instruction: Сега, нека да създадем 20 частично
        застъпващи се кръгове като се завъртаме на 18 градуса след всеки кръг.
      frozen circle function with parameter_instruction: Тук е "Създайте кръг" блока,
        който може да направи кръгове с различни размери. Можете ли да използвате
        това, за да се създаде малък кръг с размери 5 и по-голям кръг от размер 10?
      frozen circle function_instruction: Използвайте новия "създайте кръг" блок,
        за да създадете 10 припокриващи се кръгове. Не забравяйте да скочи напред
        между кръговете.
      frozen circle_instruction: Кръгът е специална форма. Можете ли да разберете
        с какво число да замените въпросителните знаци, за да начертаете кръг?
      frozen cross rotate dense_instruction: 'Нека да повторим това 90 пъти! Колко
        пъти 90 се съдържа в 360? Съвет: Това е малка стойност.'
      frozen cross rotate_instruction: Сега повторете това 10 пъти. На колко градуса
        трябва да се завъртате между всеки ред?
      frozen cross_instruction: Използвайте  блок за повторение, за да създадете знак
        плюс. Забелязахте ли, че Елза може да се движи напред и назад?
      frozen diamond mini snowflake_instruction: Знаете ли, че всяка снежинка е различна
        форма? Нека създадем нова снежинка с помощта на блок за повторение като повторим
        успоредника 4 пъти, и завиваме надясно на 90 градуса между всеки успоредник.
      frozen diamond snowflake_instruction: Сега, нека създадем нова снежинка с помощта
        на блок за повторение като повторим успоредника 10 пъти и завиваме надясно
        на 36 градуса между всеки от тях.
      frozen diamond_instruction: 'Нека да начертаем ромб. Той е подобен на квадрата,
        но има различни ъгли: 60 и 120 градуса  вместо 90 градуса.'
      frozen freeplay_instruction: Вие официално сте главен художник! Създайте зимна
        приказка и я споделете с приятелите си.
      frozen line_instruction: Здравейте! Аз съм Елза от Арендейл. Помогнете ми да
        създам отсечка.
      frozen perpendicular_instruction: Сега, нека да видим дали можем да създадем
        две линии, които образуват 90 градуса ъгъл помежду си. Ще трябва да използвате
        блок за завъртане, както и на блок за преместване.
      frozen snowflake branch_instruction: Опитайте да използвате "създаване клонче
        на снежинка" блока за да създадем три клончета, които започват да изглеждат
        като снежинка.
      frozen snowflake full_instruction: Сега, нека да повторим 8 пъти за да се получи
        красива снежинка!
      frozen snowflower_instruction: Сложните снежни модели могат да бъдат създадени
        от много прости форми. Можете ли да направите модел от повтарящи се 5 кръгчета
        от размер 5 и 5 кръгчета с размер 10?
      frozen square iterative_instruction: Изглежда, че ние направихме половинката
        на квадрат. Нека съединим 4-те линии заедно, за да създадем квадрат.
      frozen square loop 3x_instruction: Нека създадем три квадрата, като след всеки
        се завъртаме под ъгъл от 120 градуса.
      frozen square loop_instruction: Здравейте аз съм Анна от Арендел! Нека направим
        квадрат с блок за повторение, който ни позволява да ползваме по-малко блокове.
        Колко пъти (?) трябва да повторим действието в  блока за повторение за да
        начертаем квадрат?
      frozen square snowflake_instruction: Можете ли да създадете снежинка с помощта
        на  блок за повторение? Повторете квадрата 10 пъти и се завъртайте на 36 градуса
        между всеки квадрат.
      Infinity_catch_instruction: Можете ли да накарате Елза ("актьор 2"), използвайки
        клавишите със стрелки, да достигне Анна?
      Infinity_finale_instruction: Създайте нещо, което ви харесва и  го споделете!
      Infinity_move_collide_instruction: Хиро е "актьор 1".  Преместете го към Баумах
        и когато те се докоснат трябва да се възпроизведе звук.
      Infinity_move_directions_instruction: Баумаx е "актьор 2".  Добавете блок за
        движение и след това преместете Баумах с помощта на стрелките.  Накарайте
        го да докосне двама други герои.
      Infinity_move_right_instruction: Хиро е "актьор 1".  Използвайте блок за движение,
        за да преместите Хиро към Баумах и те да се докоснат.
      Infinity_repeat_instruction: Използвайте "повтаря завинаги" блок, за да накарате
        Анна да се движи нагоре и надолу по 400 пиксела.
      Infinity_say_instruction: Накарайте Анна да каже "Здрасти." с помощта на блок
        за текст.
      Infinity_shoot_instruction: Баумаx е "актьор 2".  Накарай Баумах да хвърля ракета
        по Хиро.
      Infinity_shoot_directions_instruction: Хиро е "актьор 3".  Накарайте Хиро да
        хвърли ракета по всеки от четирите героя.  Изчаквайте по една секунда между
        всяко хвърляне.
      Infinity_test_instruction: Това е тест на Infinity ниво.
      Infinity_touch_faster_instruction: Докоснете още повече снежинки!
      Infinity_touch_four_instruction: Премести Анна, нагоре, надолу наляво и надясно,
        за да докосне всяка от четирите снежинки.
      Infinity_touch_score_instruction: Направете така, че Анна да получава точка,
        когато докосне снежинка.  След това щракнете върху бутона "Старт" и я направлявайте
        да докосне всяка снежинка по веднъж.
      K-1 Artist 1 Assessment 1_instruction: Начертай къса линия нагоре и дълга  вдясно!
      K-1 artist 1 level 10_instruction: Начертай пунктирана линия с помощта на  блокове
        за скок и чертане
      K-1 artist 1 level 9_instruction: Начертай това с три линии
      K-1 Artist Loops 1_instruction: Направи тази линия чрез преместване на изток
        4 пъти.
      K-1 Artist Loops 2_instruction: Може ли да начертаете същата линия с цикъл?
      K-1 Artist Loops 3_instruction: Можете ли да повторите тези блокове за да начертаете
        6 линии?
      K-1 Artist Loops 4_instruction: Може ли с повторение да начертаеш  горната част
        на този замък?
      K-1 Artist Loops 5_instruction: Какво ще повторите 4 пъти, за да нарисувате
        тези стълбища?
      K-1 Artist Loops 6_instruction: 'Тук се нуждаете от два цикъла: един за качване
        нагоре по стълбите и един за слизане.'
      K-1 Artist Loops 7_instruction: Можете ли да завършите този модел с два цикъла?
      K-1 Artist Loops 8_instruction: Това стълбище има по-широки стъпала.
      K-1 Artist Loops 9_instruction: 'Оценка: Използвайте цикъл за да начертаете
        стълбите'
      K-1 Artist Loops Free Play_instruction: Свободна игра, начертайте нещо забавно!
      K-1 Artist1 1_instruction: Начертайте стъпалото на човек с една линия
      K-1 Artist1 10_instruction: Чертай и скочи по пунктираната пътя към съкровището
        X
      K-1 Artist1 2_instruction: Начертайте мустаците котката с две линии!
      K-1 Artist1 3_instruction: Начертай две линии на изток и две на север за да
        довършиш къщата!
      K-1 Artist1 4_instruction: Начертай линии нагоре, отгоре и  надолу за да довършиш
        замъка!
      K-1 Artist1 5.5_instruction: Завърши третата кула на замъка, използвайки къси
        линии
      K-1 Artist1 5_instruction: Начертай стъблото на това цвете с две линии!
      K-1 Artist1 6_instruction: Завърши картината с помощта на "скок" блок!
      K-1 Artist1 7_instruction: Използвайте "скок" блока за да се движите без чертане.
        Скочете и начертайте линия.
      K-1 Artist1 8_instruction: Начертай пунктирана линия с помощта на  блокове за
        скок и чертане
      K-1 Artist1 9_instruction: Чертай и скачай за да направиш пунктирана линия
      K-1 Artist1 Assessment 1_instruction: Начертай къси и дълги линии!
      K-1 Artist1 Assessment 2_instruction: Начертай къси пунктирани линии!
      K-1 Artist2 1_instruction: Начертайте квадрат под триъгълника.
      K-1 Artist2 2_instruction: Скочи и начертай квадрат до къщата.
      K-1 Artist2 3_instruction: Начертайте квадрат над другия квадрат
      K-1 Artist2 4_instruction: Начертайте правоъгълник за завършване на моста.
      K-1 Artist2 5_instruction: Начертайте правоъгълник за завършване на крепежа
        на моста
      K-1 Artist2 6_instruction: Начертайте два квадрата за да направим един правоъгълник!
      K-1 Artist2 Assessment1_instruction: 'Оценка: Начертайте квадрат до другите
        квадрати.'
      K-1 Artist2 Free Draw_instruction: Начертайте нещо!
      K-1 Artist2_7_instruction: Начертайте правоъгълник да дадете на скрина горно
        чекмедже!
      K-1 Bee 1_instruction: Премести ме до цветето, вземи нектар, тогава ме премести
        в медената пита и направи мед
      K-1 Bee 10_instruction: Вземи четири нектара и след това направи два пъти мед!
      K-1 Bee 11.5_instruction: Вземи четири нектара и направи четири  пъти мед!
      K-1 Bee 11_instruction: Получи три нектара и след това направи един път мед
      K-1 Bee 12_instruction: Получи три нектара и след това направи един път мед!
      K-1 Bee 13_instruction: Получи три нектара и след това направи един път мед!
      K-1 Bee 14_instruction: Заведи ме до нектара,  вземи го, заведи ме до меда и
        направи мед
      K-1 Bee 15_instruction: Вземи две нектара за да направиш два пъти мед!
      K-1 Bee 2_instruction: Премести ме до цветето, вземи нектар, тогава ме премести
        в медената пита и направи мед
      K-1 Bee 3_instruction: Премести ме до цветето, вземи нектар, тогава ме премести
        в медената пита и направи мед
      K-1 Bee 4_instruction: Получи две нектара и след това направи два пъти мед!
      K-1 Bee 5_instruction: Получи три нектара и след това направи три пъти мед!
      K-1 Bee 6_instruction: Получи две нектара и след това направи два пъти мед!
      K-1 Bee 7_instruction: Получи три нектара и след това направи един път мед!
      K-1 Bee 8_instruction: Получи две нектара и след това направи два пъти мед!
      K-1 Bee 9_instruction: Получи две нектара и след това направи два пъти мед!
      K-1 Bee Assessment 1_instruction: Вземи нектар да направиш мед!
      K-1 Bee Assessment 2_instruction: Вземи нектар да направиш мед!
      K-1 Bee Loops 1_instruction: Вземи нектара да направиш мед!
      K-1 Bee Loops 10_instruction: Използвай функция за цикличност( повторения) за
        да вземеш нектар, направиш мед , и да продължиш!
      K-1 Bee Loops 11_instruction: Задача! Използвай функция за цикиличност и вземи
        нектара и направи мед!
      K-1 Bee Loops 12_instruction: Задача! Използвай функция за цикличност да вземеш
        меда, направиш мед , и продължиш!
      K-1 Bee Loops 2_instruction: Използвай функция за цикличност да се преместиш,
        вземеш нектар и направиш мед!
      K-1 Bee Loops 3_instruction: Използвай цикиличност да вземеш нектар и направиш
        мед!
      K-1 Bee Loops 4_instruction: Използвай цикличност , да вземеш нектар, направиш
        мед и се преместиш!
      K-1 Bee Loops 5_instruction: Използвай цикиличност да вземеш нектар и направиш
        мед!
      K-1 Bee Loops 6_instruction: Използвай функция за цикличност( повторения) за
        да вземеш нектар, направиш мед , и да продължиш!
      K-1 Bee Loops 7_instruction: Използвай цикиличност да вземеш нектар и направиш
        мед!
      K-1 Bee Loops 8_instruction: Използвай цикиличност да вземеш нектар и направиш
        мед!
      K-1 Bee Loops 9_instruction: Използвай функция за цикличност( повторения) за
        да вземеш нектар, направиш мед , и да продължиш!
      K-1 Bee Loops Assessment 1_instruction: Вземи нектар да направиш мед и използвай
        цикличност да се преместиш!
      K-1 Bee Loops Assessment 2_instruction: За да вземете нектар и направите мед
        използвайте цикиличност!
      K-1 Bee Puzzle 12_instruction: Get three nectars and then make two honey
      K-1 Building a Foundation Assessment_instruction: Нправете пирамида от три нива,
        няма никакви условия так че играйте с отделните части докато не я сглобите
        правилно!
      k-1 maze 1_instruction: Можеш ли да направиш така че, да отида на Запад и достигна
        прасето?
      K-1 Maze 10_instruction: Заобиколи ТНТ за да мога да стигна  до прасето!
      K-1 Maze 11_instruction: 'Проследи пътя и ме заведи до прасето. Стой далече
        от динамита ( TNT) или ще хвърчи перушина! Подсказване: той е на Юг от мен.'
      K-1 Maze 2_instruction: Премести ме на Изток за да стигна до прасето!
      K-1 Maze 3_instruction: Премести ме на Юг за да стигна до праето!
      K-1 Maze 4_instruction: Премести ме на Север за са стигна до прасето!
      K-1 Maze 5_instruction: Премести ме на Изток за да стигна до прасето!
      K-1 Maze 6_instruction: Премести ме в една посока , после в друга за да стигна
        до прасето!
      K-1 Maze 7_instruction: Премести ме в една посока , после в друга за да стигна
        до прасето!
      K-1 Maze 8_instruction: Премести ме в една посока , после в друга за да стигна
        до прасето!
      K-1 Maze 9_instruction: Премести ме в една посока , после в друга за да стигна
        до прасето!
      K-1 Maze Assessment 1_instruction: Задача- Заведи ме до прасето!
      K-1 Maze Assessment 12_instruction: Ниво със оценки
      K-1 Maze Assessment 13_instruction: Ниво със оценки
      K-1 Maze Assessment 2_instruction: Задача- Заведи ме до прасето!
      K-1 maze debug 1_instruction: Промени кода за да ме заведеш до прасето!
      K-1 maze debug 10_instruction: Корегирай нивото като преместваш и добавяш блокове
        за да достигна до прасето!
      K-1 maze debug 11_instruction: "Така се тестват различни функции \"test!\r\"\nКорегирай
        нивото като преместваш и добавяш блокове за да достигна до прасето."
      K-1 maze debug 2_instruction: Отгатнете какво липсва и добавете необходимите
        блокове за да стигна до прасето!
      K-1 maze debug 3_instruction: Отгатнете какво липсва и премахмете  излишните  блокове
        за да стигна до прасето!
      K-1 maze debug 4_instruction: Прегледайте блоковете и ги поправете! Мисля ,
        че отивам в неправилната посока.
      K-1 maze debug 5_instruction: Корегирай нивото като преместваш и добавяш блокове
        за да достигна до прасето!
      K-1 maze debug 6_instruction: Корегирай нивото като преместваш и добавяш блокове
        за да достигна до прасето!
      K-1 maze debug 7_instruction: Корегирай нивото като преместваш и добавяш блокове
        за да достигна до прасето!
      K-1 maze debug 8_instruction: Корегирай нивото като преместваш и добавяш блокове
        за да достигна до прасето!
      K-1 maze debug 9_instruction: Корегирай нивото като преместваш и добавяш блокове
        за да достигна до прасето!
      K-1 Maze debug Assessment 1_instruction: Задача-Корегирай нивото като преместваш
        и добавяш блокове за да достигна до прасето!
      K-1 Maze Loops 1_instruction: Заведи ме до прасето!
      K-1 Maze Loops 10_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 11_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 12_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 2_instruction: Използвай Повтори Блока функция за да стигна до
        прасето !
      K-1 Maze Loops 3_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 4_instruction: Заведи ме до прасето!
      K-1 Maze Loops 5_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 6_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 7_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 8_instruction: Заведи ме до прасето! Използвай повтарящ се цикл.
      K-1 Maze Loops 9_instruction: Заведи ме до прасето!
      K-1 Maze Loops Assessment 1_instruction: Задача- Използвай цикли за да стигна
        до прасето!
      K-1 Maze Loops Assessment 2_instruction: Задача- Използвай цикли за да стигна
        до прасето!
      K-1 Maze Multi 14_instruction: Ниво със оценки
      K-1 Maze Multi 15_instruction: Ниво със оценки
      K-1 Maze Sequence Assessment 1_instruction: "Така се тестват различни функции
        \"test!\r\"\nПремести ме в една посока,\nпосле в друга за да стигна до прасето"
      K-1 Maze Sequence Assessment 2_instruction: "Така се тестват различни функции
        \"test!\r\"\nПремести ме в една посока,\nпосле в друга за да стигна до прасето"
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the "cost" function, and we'll return the
        price of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the "cost" function. Once you've added your toppings, test out
        the function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the "else" clause so that we charge them
        a premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: "Free Play: What can you do to make Luigi's cost\nfunction
        even better? Try one (or more) of the following:\r\n- Display an\nimage of
        the chosen pizza\r\n- Allow for multiple topping combinations\r\n-\nAllow
        for ordering multiple pizzas\r\n- Add a coupon code for a 50% discount"
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called "my-shape" and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your "my-shape" variable and use it
        with this provided code to draw two identical green triangles that are 50
        pixels in size.
      MSM Defining Vars 4_instruction: |
        Edit your "my-shape" variable so that it
        draws 75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: |
        Draw something awesome! Your code is saved
        as a project that you can return to at any time.
      NEW Course 4 Artist Functions 1_instruction: Можете ли да начертаете квадрат
        с дължина на страните 100 пиксела като използвате цикъл?
      NEW Course 4 Artist Functions 10_instruction: Щракнете върху "Редактиране" за
        да подпълните блокчетата във функцията и направите квадрат от 40 пиксела.
      NEW Course 4 Artist Functions 11_instruction: Имаме нова функция, наречена "начертайте
        линия от квадрати." Чувствайте се свободни да погледнете вътре в блока на
        функцията за да видите как сме я построили. Щракнете върху "Старт", когато
        сте готови за следващия пъзел.
      NEW Course 4 Artist Functions 12_instruction: Използвайте функцията "начертайте
        линия от квадрати" от последната загадка, за да нарисувате този модел."
      NEW Course 4 Artist Functions 13_instruction: 'Можете ли да начертаете звезда
        като използвате функцията " начертай линия от квадрати"? Съвет: можете да
        се преместите напред с 60 пиксела и завъртите на 144 градуса'
      NEW Course 4 Artist Functions 14_instruction: 'Свободно време за игра! '
      NEW Course 4 Artist Functions 2_instruction: 'Можете ли да начертаете 3 квадрата
        на разсточние 20 пиксела един от друг? Съвет: всеки квадрат е 100 пиксела'
      NEW Course 4 Artist Functions 3_instruction: 'Това е нов тип блок. Той се нарича
        "функционален блок". Щракнете върху "Старт", за да видите какво може да направи. '
      NEW Course 4 Artist Functions 4_instruction: 'Използвайте функцията "начертава
        квадрат", за да изготвите този модел. Съвет: Вие ще трябва да използвате "завърти
        надясно на 120 градуса" блока след всеки квадрат.'
      NEW Course 4 Artist Functions 5_instruction: Как "начертава квадрат" блокът
        знае какви команди да изпълни? Щракнете върху "Редактиране" в блока "начертава
        квадрат" функцията. Блоковете в редактора на функцията определят какво ще
        направи "начертава квадрат." Когато сте готови с огледа, щракнете върху "Запиши
        и затвори" и след това "Старт."
      NEW Course 4 Artist Functions 6_instruction: "С помощта на \"чертае квадрат\"
        функционалния блок можете ли да нарисувате тази картина? Съвет: всеки квадрат
        е на 20 пиксела от другия. \r\n"
      NEW Course 4 Artist Functions 7_instruction: 'Разбрахте ли как се използва блока
        функция? Нека да променим страните на квадрата на 200 пиксела. Съвет:щракнете
        на "Редактиране" да промените размера в блока" начертай квадрат". Не забравяйте
        да  щракнете на "запиши затвори" за да излезете от менюто за редактиране на
        функции. '
      NEW Course 4 Artist Functions 8_instruction: Ние сме приготвили повечето от
        кода, за да се създаде функция. Въпреки това изглежда, че нещо липсва. Можете
        ли да редактирате дефиницията на функцията и да нарисувате триъгълника?
      NEW Course 4 Artist Functions 9_instruction: Кой блок трябва да се добави, за
        да се постави триъгълник върху квадрата?
      New Course 4 Artist Functions Level 4_instruction: Използвайте функцията "чертае
        квадрат", за да изготвите този модел.
      NEW Course 4 Artist Params 1_instruction: Нека да дефинираме тази функция, която
        ще чертае квадрат със страни 50 пиксела. Щракнете върху "Редактиране", за
        да започнете.
      NEW Course 4 Artist Params 10_instruction: 'Създайте "начертава шестоъгълник"
        функция с параметър "дължина". Съвет: Страната на този шестоъгълник е 100
        пиксела. '
      NEW Course 4 Artist Params 11_instruction: Може ли да разберете как се прави
        тази форма? Редактирайте функцията, за да използвате параметъра "страни".
      NEW Course 4 Artist Params 12_instruction: Можете ли да завършите тази рисунка?
        Страните на всички фигури са дълги 100 пиксела.
      NEW Course 4 Artist Params 13_instruction: |
        Нека редактираме функцията "начертай фигура".
        Тя вече има "дължина". Сега нека променим функцията така, че да се добави и "ширина".
        Запомнете, че големината на ъглите на всяка фигура се получават като разделим 360 градуса страните ѝ.
        Съвет:Страните на триъгълника са 100 пиксела, на шестоъгълника 25 пиксела, а на квадрата- 50 пиксела.
      NEW Course 4 Artist Params 14_instruction: 'Можете ли отново да пресъздадете
        тези фигури? Плъзнете параметърът "дължина" в дефиницията на функцията. '
      NEW Course 4 Artist Params 15_instruction: 'ФрийПлей: Тук са функциите, които
        сте написали. Начертайте нещо страхотно!'
      NEW Course 4 Artist Params 2 _instruction: Създайте " функция за начертаване
        на триъгълник със страни 50 пиксела"
      NEW Course 4 Artist Params 2_instruction: Създайте " функция за начертаване
        на триъгълник със страни 50 пиксела"
      NEW Course 4 Artist Params 3_instruction: "Сега, нека да използваме функцията
        да начертае 3-те триъгълника от последната загадка в един ред. Съвет: всеки
        триъгълник е на 50 пиксела от другия. \r "
      NEW Course 4 Artist Params 4_instruction: Забелязвате ли нещо различно в тези
        функционални блокове? Щракнете върху "Старт", за да видите какво се случва.
      NEW Course 4 Artist Params 5_instruction: 'Запълнете  полето с ??? в параметъра
        за "дължина" . Съвет: Страните на пентагона са 100 пиксела дължина. '
      NEW Course 4 Artist Params 6_instruction: Попълнете параметъра "дължина", за
        да повтори тези фигури като замените "???" с правилния номер. Квадратът и
        триъгълникът са с дължина на страните 100 пиксела, докато на шестоъгълника
        е 75 пиксела.
      NEW Course 4 Artist Params 7_instruction: 'Можете ли да завършите тази рисунка?
        Съвет: всеки триъгълник е 25 пиксела по-голям от предходния.  Първия триъгълник
        е със страни от 25 пиксела.'
      NEW Course 4 Artist Params 8_instruction: 'Можете ли да начертаете всеки един
        от тези триъгълници с тази нова функция? Страните на първия са дълги 25 пиксела,
        на втория 50, а на третия- 75. Съвет: започнете, като щракнете върху "Редактиране"
        в блока на функцията.'
      NEW Course 4 Artist Params 9_instruction: 'Щракнете върху "Редактиране", за
        да попълните в дефиницията на функцията на "чертае квадрат" и добавете параметъра.
        Тя трябва да вземе параметър за дължина, точно като триъгълника. Този път,
        начертайте 3 квадрата със страни: 25, 50 и 75 пиксела, всеки е на 100 пиксела
        от другия.'
      NEW Course 4 Artist Vars 1.5_instruction: 'Погледнете в кода, можете ли да разберете
        как "поставя дължина" блока и "дължина" блока работят заедно? Щракнете върху
        "Старт", за да го видите в действие. '
      NEW Course 4 Artist Vars 12_instruction: Промени този алгоритъм, така че той
        да използва "страни" променливата вместо фиксирано число, за да нарисувате
        петоъгълник. Заместете числото 5 с променлива "страни" и използвате "Задаване
        страни" блока.
      NEW Course 4 Artist Vars 2.5_instruction: 'Погледнете в кода, можете ли да разберете
        как "поставя дължина" блока и "дължина" блока работят заедно? Щракнете върху
        "Старт", за да го видите в действие. '
      NEW Course 4 Artist Vars 2_instruction: 'Плъзнете блок за номер към "поставям
        дължина" блок, за да нарисувате няколко триъгълника със страни 50 пиксела. '
      NEW Course 4 Artist Vars 4 5_instruction: Страхотна работа свършихме в последната
        загадка, нека да пробваме отново, този път нека да направим този страхотен
        дизайн със шестоъгълници. Страната на всеки е 60 пиксела.
      NEW Course 4 Artist Vars 4_instruction: Нека да  опитаме отново. Сега, нека
        да направим този страхотен дизайн от шестоъгълници със страна 60 пиксела.
      NEW Course 4 Artist Vars 6_instruction: Можете ли да ми помогнете да изготвя
        този готин модел като поставите блокът на променливата "дължина"  на правилните
        места?
      NEW Course 4 Bee For Loops 1_instruction: Използвайте цикъл, за да събера нектар
        от всяко цвете.
      NEW Course 4 Bee For Loops 10_instruction: Използвайте вашата променлива за  "брояч"
        на повторенията да контролира колко далеч да се движи хоризонтално.
      NEW Course 4 Bee For Loops 11_instruction: Можете ли да използвате променливата
        на цикъла за контрол на движението и събирането на нектар?
      NEW Course 4 Bee For Loops 2_instruction: Добавете код, необходим за да се уверите,
        че пчелата събира нектар. Погледнете колко код Ви трябва за този пъзел! (Ние
        ще Ви научим на по-прост начин в следващия пъзел.)
      NEW Course 4 Bee For Loops 3_instruction: 'Ах, с цикъл това се прави много по-лесно!
        Всичкият код, който трябва е там, погледнете как той е обединен и след това
        щракнете върху "Старт", за да видите как работи. '
      NEW Course 4 Bee For Loops 4 4_instruction: 'Можете ли да помогнете на пчелата
        в събирането на останалата част от меда, ползвайки това за повторение? '
      NEW Course 4 Bee For Loops 4_instruction: 'Замени??? в цикъла с най-голямото
        количество нектар, който пчелите трябва да съберат. '
      NEW Course 4 Bee For Loops 5 5_instruction: Можа ли да разбереш как се използва
        цикъла? Нека да помогнем на пчелата с останалата част от нектара.
      NEW Course 4 Bee For Loops 5_instruction: Можете също да използвате " за цикъл"
        за да броите наобратно.Пробвайте да вземете нектар като броите от 5 до 1 ,
        намалявайте с единица.
      NEW Course 4 Bee For Loops 6_instruction: Последното число в цикъла се нарича
        "стъпка", и всеки път цикъла се управлява променливата "брояч", която се променя
        от стъпката. Опитайте да съберете тези цветя, като използвате стъпка с 2.
      NEW Course 4 Bee For Loops 7_instruction: Разбрахте ли как работят циклите ?
        Подобно е последният пъзел, но сега трябва да вземете нектарите 2,4,6,8,10.
        Кода е започнат с изключение на числата във циклите за броене!
      NEW Course 4 Bee For Loops 8_instruction: "Ако вашият цикъл брои с възходяща
        стъпка, то стъпката се добавя към вашия брояч, който се променя след всяко
        действие. Каква трябва да е стъпката ви за да съберете 3, 6, 9 нектара? \r "
      NEW Course 4 Bee For Loops 9_instruction: Ако цикъла е намаляващ, стъпката е
        се движи с намаляващ ред във всеки цикъл.Каква трябва да е стъпката за да
        съберете нектар от 9, 6 и накрая 3?
      NEW Course 4 Play Lab Params 11 (copy 1)_instruction: 'Сега е време за игра!
        Забавлявайте се с всички блокове на вашата кутия с инструменти. '
      NEW Course 4 Play Lab Params 11_instruction: 'Сега е време за игра! Забавлявайте
        се с всички блокове на вашата кутия с инструменти. '
      NEW Course 4 Play Lab Params 5 5_instruction: 'Попълнете параметъра на актьора
        с въвеждане на числа (1, 2 и 3), за да накара тези участници да патрулират. '
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Какво мислите, че прави този код?
        Натиснете "Старт", за да видите какво се случва."'
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Сега е време за игра!
        Забавлявайте се с всички блокове на вашата кутия с инструменти. '
      New Play Lab Project_instruction: Създайте своя собствена история или игра!
        Вашият код се записва като проект, към който можете да върнете по всяко време.
      Ninjacat Demo B (copy 1)_instruction: "\r\nLet’s begin by exploring a simple\nvideogame,
        and then figuring out how it works. You can use the arrow keys\nto move the
        ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\r\n\r\n\r\n\r\n
        \ \r\n\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops
        together. Use the \"if\" block to decide when to turn. Hint: you only\nneed
        one more block to complete this puzzle. \n"
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin
        order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto
        an action on demand. Make the octopus say \"Hello\" only when you click\non
        the Octopus. \n"
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: Функциите ви позволяват да дефинирате нови блокове!
        Ние поместихме блоковете, за  изчертаване на квадрат във функция, наречена
        "начертайте квадрат". Можете ли да използвате тази функция за създаване на
        очила? Квадратите са със страни 75 пиксела.
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe
        \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience,
        this is called a \"loop.\" \n"
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image!  Find error and fix it!  Hint: a few extra bits
        were added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'.  The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101.  Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want.  Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2 (copy 1)_instruction: |
        We've added your contract and two
        examples into the Design Recipe for rocket-height. Now write the function
        for rocket-height.
      Play Lab Rocket 2 (copy 2)_instruction: |
        We've started the Design Recipe for
        rocket-height using the contract and examples you just wrote. Complete the
        function definition for rocket-height and run your animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B (copy 1)_instruction: |
        We've started the Design Recipe
        for rocket-height using the contract and examples you just wrote. Complete
        the function definition for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3 (copy 1)_instruction: |
        Awesome, now can you update that function
        so that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Use the arrow keys to move Sam
        around his yard, making note of Sam's coordinates at different locations.
        Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called "safe-left?"
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's inside the left boundary of the yard (x > -25). If
        your function works, Sam shouldn't be able to leave the yard from the left
        side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Fill out the "safe-right?"
        function to make sure Sam can't go past x = 425.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        from going either direction? Try using the "AND" block to program the function
        "on-screen?" to check if Sam is safe-left? AND safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, now Sam can't leave
        the yard from the left or the right, but what about up and down? We've added
        an additional parameter 'y' to the 'onscreen?' function. Can you update
        your program so Sam can't leave from the top (y = 425) or bottom (y = -25)
        either? Test your program by moving Sam as far as he can go in all four directions.
        Click Finish when Sam is completely protected.
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: Жълъд!Жълъд!Жълъд! Използвайте "Ако" блок за да отидете
        до жълъда с най-малко  на брой блокове.
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: Добре, хаиде да го направим още веднъж - не е много трудно
        , но внимавайте за стената!
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: '"Ако-Иначе "  блока е проверява едно  условие , и след
        това прави едно или дгруго нещо взависимост от условието. За да отидете до
        жълъда опитайте да използвате този блок.'
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: Още веднъж да упражним използването на блок "ако-иначе".
        Можете да се справите правилно от първия опит?
      scrat 20_instruction: Можете ли да добавите само 3 блока, за да ми помогнете
        да реша този по-сложен лабиринт? Ако го направите, аз ще мога да ходя по всяка
        крива независимо от дължината. Побързайте! Ледът се топи!
      SpecialFrozenLevel_instruction: Вие официално сте главен художник! Създайте
        зимна приказка и я споделете с приятелите си.
      Standalone_Artist_1_instruction: Добре дошли при Художника! Първо, нека се опитаме
        да направим прост квадрат с помощта на блок за завъртане надясно и блок за
        преместване напред. Всяка страна трябва да бъде дълга 100 пиксела.
      Standalone_Artist_2_instruction: Начертайте този диамант с 120 и 60 градуса
        ъгли и 150 пиксела дълги страни.
      Standalone_Artist_3_instruction: Можете ли да начертаете този шестоъгълник със
        100 пиксела дълги страни и завои на 60 градуса ?
      Standalone_Artist_4_instruction: Сега имаш нов блок, с който да си играеш и
        повтаряш. Той ще повтаря набор от команди. Какво става ако повторите тези
        команди 6 пъти?
      Standalone_Artist_5.5_instruction: 'Забележете как ние опростихме кода на диаманта,
        като го превърнахме в една линия. Можете ли да повторите линията 12 пъти,
        за да нарисувате цвете. Съвет: Трябва да се завъртате на 30 градуса след всеки
        диамант. Така няма да чертаете върху предишния диамант.'
      Standalone_Artist_5_instruction: Колко пъти трябва да повторите този диамант,
        за да нарисувате цвете?
      Standalone_Artist_6_instruction: 'Повторете кода за този шестоъгълник 6 пъти
        за създаване на дизайн. На колко градуса ще ще се завъртате всеки път? Съвет:
        разделете броя градуси в окръжността от броя повторения.'
      Standalone_Artist_7_instruction: 'Функцията е друг програмен инструмент, който
        ви помага да избегнете повторното писане на един и същи код. С тази функция
        правим цвете, така че да го използвате всеки път, когато искате да нарисувате
        цвете. Използвайте това и новият скок блок, за да нарисувате тези цветя. Съвет:
        Цветята са отдалечени на 150 пиксела едно от друго'
      Standalone_Artist_8_instruction: Това е функция, наречена "начертай фигура",
        която ние сме програмирани да нарисувате шестоъгълници. Стартирайте кода,
        за да видите какво прави той и след това експериментирайте с функцията за
        да видите промените. Можете ли да я накарате да чертае модел на квадрати,
        триъгълници или осмоъгълници?
      Standalone_Artist_9_instruction: Сега, върви напред и направи картина, каквато
        искаш! Дори имаш празна функция, която може да направи каквото си поискаш!
      Standalone_Artist_v2_instruction: Добре дошли при Художника! Първо, нека се
        опитаме да направим прост квадрат с помощта на блок за завъртане надясно и
        блок за преместване напред. Всяка страна трябва да бъде дълга 100 пиксела.
      Text Compression Peter Piper_instruction: Това стихотворение е компресирано
        чрез замяна на две общи фрази със символи в речника. Можете ли да посочите
        друг общ модел за допълнително компресиране на поемата?
      U1L4 NetSim SendAB_instruction: |
        NetSim: Variant 1 playground: UNDER CONSTRUCTION:
        Variant 1 is not yet functional because P2P connections have not been implemented.
        Variant 1 allows students to manually work out the timing of sending bits
        back and forth.
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the simulator a
        DNS service is provided for you. Send a message in the form GET [hostname]
        to the DNS service at address 15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L2 NetSim Hub Mode_instruction: "You'll now play the \"Game of Messages\"\ngame
        you just played in person, but this time using the Internet Simulator.\nJoin
        a room to be connected to your group, and then follow the instructions\non
        the worksheet handed out by your teacher.\r\n"
      U2L3 NetSim Hub Mode_instruction: "With your group, invent a standard addressing\nscheme
        for the \"Game of Messages\" game, and try it out using the Internet\nSimulator.
        \n"
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter
        with the others in your group. Important note: The router will only\nproperly
        route messages where the first 4 bits are the To: address and the\nsecond
        4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical
        addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na
        router with the others in your group. The Internet Simulator now provides\na
        place for you to put the To and From addresses, so you don't have to type\nout
        the bits manually.\r\n\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U313 Two Buttons with Ids_instruction: |
        Now you try it! We've given you some
        starting code with two buttons and two event handlers on the screen, but we've
        just left the default Ids of "id".  You need to change the ids to connect
        the right event handler to the right button. (Interestingly, the incorrect
        program does work, but exhibits some bizarre behavior.  We'll discuss this
        more in the next lesson.  Make the buttons work correctly for now).
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Write the turnAround() function
        and use it to make the turtle move as depicted.
      U3L03 define turnRight and draw a rectangle_instruction: "Create a turnRight()\nfunction
        and draw a rectangle twice as tall as it is wide by having the turtle\nnavigate
        clockwise to draw the rectangle. \n"
      U3L03 Draw a T using turnAround_instruction: |
        The turnAround function is now
        provided for you in the code.  Use the turnAround() function to draw a T as
        depicted.
      U3L03 draw diamond_instruction: "Use any and all of the functions you wrote\npreviously
        to make a 'diamond' shape as shown in the image.\r\n\r\nNOTE:\nthis is another
        tricky one.  The 4 sides of the diamond are made by drawing\nthree steps with
        other movement made between calls.  HINT: you might want\nto make another
        function that handles drawing one side of the diamond. "
      U3L03 Three Steps_instruction: |
        Draw 3 "steps" moving up and to the right.  Notice
        the pattern in the movement. You should define a function called drawStep()
        which draws one of the steps, and then call it 3 times to achieve the effect.
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 Challenge 1 triangle_instruction: |
        Check out the extended Turtle palette
        now made available to you. These new commands accept parameters, allowing
        you to specify precisely how the function operates rather than only being
        able to move or turn a predetermined amount. Make use of these functions to
        draw the triangle as shown.
      U3L06 Challenge 2 purple square_instruction: |
        This time we're going to learn
        a little bit about changing the turtle's pen. Read through the documentation
        for penWidth() and penColor(), and then draw the purple square as shown.
      U3L06 Challenge 3 fill pink_instruction: |
        Now let's try to fill in the entire
        background of the screen. To make it a little easier for you, we can tell
        you the color we chose is one of the 140 named colors.  If you don't know
        what the named colors are, take a closer look at the documentation for penColor()
        again. Hint: you need to use dot().
      U3L06 Challenge 4 bullseye_instruction: |
        Let's try this out one more time.
        This time the colors are NOT named colors - you need to use the hex-color
        number to set the color.  So that you're not randomly guessing, we'll give
        you a hint -- each of the colors shown in the target image is one of these
        one of the five in the following list:  #00ABDC, #CC4400, #1188CC, #006699,
        #11CC00  You might be able to guess correctly if you apply what you know about
        RGB colors.
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: |
        Next we're going to be adding some
        curves to our drawing. Read the documentation for the "arc" commands and
        then draw the squiggles as shown. To make things easier here's a hint: all
        the parameters are multiples of 10, and the colors are from the following
        list of named colors: PowderBlue, lightBlue, Indigo, Purple, Magenta.
      U3L06 Challenge 7 smiley face_instruction: |
        To make this smiley face you'll
        need to look at the documentation for the move() command and then use it with
        the others you've learned.  You can make reasonable guesses about the colors.
      U3L06 Challenge 8 make your own_instruction: |
        Use the tools you've learned
        today to create a drawing of your own creation. If you have time, challenge
        your friends to see if they can duplicate your image.  We'll show you the
        drawing we made for ourselves.  You can try to duplicate that if you want
        to, otherwise, have fun making your own!
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play!  Use what you learned
        from loops and random to make your own little scene.  Have fun.
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand
        random numbers to generate an image of starry night sky similar to one\nshown
        here.  We have given you some starter code to generate the ground and\nsky
        (just two giant dots), you will add code to this project to make the stars,\ngrass,
        and moon.  All of the effects are clever applications of turtle dots,\nlines,
        and colors.  To get started, follow the series of steps suggested in\nthe
        accompanying worksheet. \n"
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof
        syntax error.  App Lab did not understand which object it should be listening\nto
        for a \"click\" event so it showed an error message in the console to let\nyou
        know.  Another kind of error is a logical error - the program is valid,\nbut
        it's not doing what you want it to do.\r\n\r\nThis program has 2 errors.\nA
        (tricky) syntax error and logical error.  Find them, fix them, and make\nthe
        program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        This program has problem!  Can you figure
        it out?  Run the program and see if you can figure out from the error messages
        in the console what the issue is.  There is not much code, so you might be
        able to figure it out just by reading carefully.  Make a change that will
        make the program work as expected.
      U3L13 - Turtle Driver Project_instruction: |
        Challenge: Create a “turtle driver”
        with at least three buttons on the screen to move the turtle forward, and
        turn the turtle right and left. You can copy/paste code from a previous level
        if you like but it will help build your coding muscles if you create this
        small program from scratch.  If you have time, try adding additional buttons!  You
        can also have fun changing the parameters on the turtle functions, using colors,
        etc.
      U3L13 - Turtle move with button_instruction: "Drag a button out onto the screen\nand
        set its text to \"Go forth!\".  Add an event handler for the button, that\nmakes
        the turtle move forward.  Run the program to make sure it works. \n"
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L16 - challenge say hi app_instruction: "In this challenge we give you starter\ncode
        that lays all the elements out on the screen.  Here’s what you need to\ndo:\r\nAdd
        event handler to textInput with the event type ‘input’ that shows\nthe “Say
        hi” button when that event occurs.\r\nAdd event handler to button\nso that
        on click, it writes a hello message to the screen and hides the textInput\nand
        button."
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons!
        - textLabels and images.  First try replacing your button with a\ntextLabel.
        \ Will the text respond to events just like the button?  Try connecting\nan
        event handler to it.  We've started you out with code similar to the result\nof
        the last level, you can copy your code from that level into here if you\nprefer.
        \n"
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith
        an image..  Will the image respond to events just like the button?  Try\nconnecting
        an event handler to it.  We've started you out with code similar\nto the result
        of the last level, you can copy your code from that level into\nhere if you
        prefer. \n"
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command!  Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: "We'll be building upon some simple\nstarting
        code throughout this lesson.  Your first task: use moveTo and randomNumber\nto
        get the turtle to move to a random location with each button click.  We've\ngiven
        you starting code for our common setup: a button that moves the turtle\nwhen
        clicked.  You should modify this code.  \n"
      U3L16 - text labels_instruction: "Introducing textLabels.  First try replacing\nyour
        button with a textLabel.  Will the text respond to events just like the\nbutton?
        \ Try connecting an event handler to it.  We've started you out with\ncode
        similar to the result of the last level, you can copy your code from\nthat
        level into here if you prefer. \n"
      U3L16 - textInput getText write_instruction: |
        Introducing textInput, getText
        and write.  First run the starter code several times.  Try to change what's
        written to the screen when the button is clicked. Then use getText to write
        to the screen what the user entered in the text box.
      U3L16 - use images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer.
      U3L19 - Debugging with consoleLog_instruction: |
        This example shows how you
        might insert console.log statements in your code to verify for yourself how
        the values in the variables change during the running of the code.  This is
        an important debugging technique to use when each line in your program doesn't
        have a visual effect on the app that you can see to verify things are working
        right.  Run the code to see the output in the console.
      U3L19 - DEMO up down count practice app_instruction: |
        This is a demonstration
        of a simple App that uses variables, arithmetic and setText.  Play with it
        a little bit here to see what it does.  You can also come back to experiment
        if you want.  You are going to try to create this app yourself on the next
        screen.  Don't worry, we'll start you out with some of the code and leave
        the rest for you to complete.
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof
        code from the previous screen.  Try changing the value assigned to foo\nto
        see the string change. \r\nDo this: \r\n1. Try changing the value assigned\nto
        foo to see the string change. \r\n2. By only modifying the lines of code\nthat
        were given to you, try to get the output to say: “The value of foo is:\n9.
        \ And isn’t that fine.” \r\n"
      U3L19 - fix the var name syntax error_instruction: "We've given you some code\nwith
        an error.  It doesn’t recognize the variable.  Can you figure out why?  Fix\nthe
        error and get the program to run.  Also note the error message since it\nmight
        come up at some point later in your life.\r\n\r\n"
      U3L19 - practice with setText_instruction: |
        We've started you out with the
        code shown on the previous screen.  First experiment with the app.  Identify
        where setText is being used.  CHALLENGE: modify the code to also use setText
        to change the text on the button itself when it's clicked.  GIF: U3L19 -
        setTextOfButton.gif
      U3L19 - Target Clicker App_instruction: "# A motivating example\r\n\r\nHere\nis
        an example of the kind of app we want to make.  Study this for the elements\ncontained
        in the app rather than what it is or does.  Things to investigate:\n\r\n\r\n1.
        what happens when you click on the Code.org logo? \r\n2. What happens\nwhen
        you click somewhere else? \r\n3. Try the reset button.   \r\n\r\nThe\nelements
        contained in this app appear to be simple, and they are in some ways.\nHowever,
        the computing principles involved - controlling and keeping track\nof things
        in memory while the program is running - get into some deeper issues\nof programming
        and computer science in general.  There are some devilish details\nand paths
        that can lead to misunderstanding if you're not careful.\r\n\r\nSo,\nkeep
        this app in mind as you go through the different levels in this lesson.  It\nmight
        seem like you need to learn a lot in order to get this simple thing\nworking.
        \ But it's worth taking the time to understand at a deeper level\nwhat is
        going on.  Because this one topic: controlling memory leads to many\npossible
        misunderstandings about coding, and how computers work.  We want\nto make
        sure you get it right from the outset.  \r\n\r\nSo take your time.  Work\nthrough
        the issues.  Read the explanations.  You'll come out on the other\nside a
        better programmer with much deeper knowledge and understanding of how\nthings
        work.  \r\n\r\nAre you ready?  Click 'finish' to move to the next\npage and
        start the lesson."
      U3L19 - test reassignment of two vars_instruction: |
        Why is this happening?
        The code given here is the same as the example from the previous page where
        we asked you to make a prediction about what will happen.  Run this code to
        find out if you were right.  If you weren't, that's okay.  You might experiment  a
        little if you want to, but bon't spend too much time here. We'll explain
        more on the next page.
      U3L19 - three basic ops of variables_instruction: "Do this:\r\nWe've given\nyou
        the three lines of code shown in the previous page.  Add three lines of\ncode
        just below the ones shown here to make your own variable, assign it a\nvalue
        and write it to the screen.  NOTE: change the variable name from the\ndefault
        x to something else.\r\n"
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe
        statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).
        \ Run\nthe program and you should see the output show up in the console area
        below\nthe workspace.  Then try adding a few more console.log statements.
        \ Display\nsome text.  Make another variable and display that.  \r\nThe app
        screen will\nbe blank -- that's the point.  With console.log you can test
        output behind\nthe scenes in a way the user cannot see.  \r\n\r\n\r\nGIF:
        U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        This app is only SLIGHTLY
        different from the previous one, but much more dynamic.  See if you can figure
        out how and why the count is going up.  Once you've figured it out then you
        should be able to DO THIS: add a button to the app that when clicked makes
        the count go down, and updates the label.  When you're done the app should
        work as shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        We've given you
        the code from the previous page.  Right now, because the code only sets the
        values of variables, the app doesn't display anything. DO THIS: insert write
        or console.log statements into the code to figure out what the values of a,
        b, and c are after the code has executed.  You should have first made a prediction
        to see if your mental model of how the computer works is correct.  We'll
        ask for the answer on the next page.
      U3L19 - variable scope problem 2_instruction: |
        First run the program to see
        the problem.  You don't need to write code to solve any problem here.  But
        you do need to investigate the code and come up with an explanation for WHY
        what's happening is happening.  Why aren't 3 things being written to the
        screen?  Why does the variable foo seem to exist once but not the other times?  If
        you switch to code mode you'll see some warning messages next to two lines
        of code -- why do you get those messages?  Once you think you have a good
        answer, continue to the next page.
      U3L19 - variable scoping problem debugging_instruction: "Here is the code from\nprevious
        page that has a subtle problem with it.  FIRST: run the app and try\nit to
        see the problem. NOTE: NaN stands for \"Not a Number\".   DO THIS: figure\nout
        what's happening, where, and fix the problem.  We'll explain the issue\non
        the next page. \n"
      U3L19 - write var and string with same name_instruction: |
        Now look at this
        example. We’ve added another write statement.  Before you run the code, see
        if you can predict what the output will be.  Seriously, write it down. THEN
        run the code, mess with it if you like, and continue to the next page for
        an explanation.
      U3L2 Using Simple Commands_instruction: |
        Draw a square using only moveForward
        and turnLeft.  The square should be drawn above and to the left of the turtle's
        starting position.
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid above and to the right of
        the turtle. Try to do so with the fewest number of commands possible. NOTE:
        This is a very challenging problem.  You may need to play with it for a while
        and tweak it.  You might also consider using pencil and paper to sketch your
        ideas.
      U3L2_TurtleSquare_right_instruction: |
        Draw a square using only moveForward
        and turnLeft, but this time, make the square appear ABOVE and to the RIGHT
        of the starting location.
      XML Scratchpad_instruction: Използвай това тестово ниво заа да вземеш xml-а
        за unit тестове
