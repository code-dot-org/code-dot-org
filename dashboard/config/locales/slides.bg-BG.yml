"bg":
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Добре дошли в първия си час по програмиране! Нека да се потопим направо
          в първото си предизвикателство.
      2:
        image: notes/hoc1_2.jpg
        text: Ние ще  използваме Blockly. Това е визуален език за програмиране, където
          трябва само да плъзнете и пуснете блоковете за да напишете код.
      3:
        image: notes/hoc1_3.jpg
        text: Кодът се пише, но Blockly е визуален език. Всеки блок, обаче, отговаря
          на един ред от "истински" код.
      4:
        image: notes/hoc1_4.jpg
        text: Ще научите основите на компютърните науки, концепции, които се използват
          навсякъде дори за създаването на приложения за контролиране на марсоходът
          на Марс.
      5:
        image: notes/hoc1_5.jpg
        text: Програмата е набор от инструкции за вашия компютър, които  да следва.
      6:
        image: notes/hoc1_6.jpg
        text: Целта на вашата първа програма е да посочите на ядосаната птица пътят,
          по който да достигне и удари зеленото прасе.
      7:
        image: notes/hoc1_7.jpg
        text: От лявата страна е лабиринтът, където се изпълнява вашата програма.
          Инструкциите за всеки пъзел са под лабиринта.
      8:
        image: notes/hoc1_8.jpg
        text: В средата на кутията с инструменти има команди за ядосаната птица. Използвайте
          ги,  за да изградите вашия код.
      9:
        image: notes/hoc1_9.jpg
        text: Вдясно е вашата работна област, където ще можете да плъзгате блокове
          от кутията с инструменти. За да изтриете блок просто го плъзнете в кошчето.
      10:
        image: notes/hoc1_10.jpg
        text: Всеки блок е една инструкция. Ако плъзнете "продължи напред" блок във
          вашата работна област и натиснете "Старт", птицата ще се премести едно квадратче  напред
          в лабиринта.
      11:
        image: notes/hoc1_11.jpg
        text: За да направите повече от едно действие, можете да плъзнете много блокове
          във вашата работна област и да ги прикрепите заедно. Птицата ще извърши
          командите отгоре надолу.
      12:
        image: notes/hoc1_12.jpg
        text: Ако стартирате програмата и искате да поправите кода си за да опитате
          отново, натиснете бутона "Начално състояние".
      13:
        image: notes/hoc1_13.jpg
        text: Да вървим да хванем тези прасета!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: Здравейте аз съм младши! На всеки състезателен екип са му  необходими
          компютърни учени, за да спечели. Те анализират данни от колата за да може
          тя да се подобри.
      2:
        image: notes/stage5_2.jpg
        text: В тези пъзели вие ще бъдете художник, който чертае линия зад себе си,
          където и да отиде.
      3:
        image: notes/stage5_3.jpg
        text: Този блок се казва "премества напред със 100 пиксела." Пикселите са
          много малки точки на вашия екран.
      4:
        image: notes/stage5_4.jpg
        text: Този блок се казва, "завърта надясно на 90 градуса." Той ще завърти
          вашия художник във определената посока както "обърни" блоковете при ядосаните
          птици.
      5:
        image: notes/stage5_5.jpg
        text: Кликнете върху стрелката в някой от тези блокове, за да промените броя
          на движенията на художника напред или при въртене. Поиграйте си с блоковете,
          за да се запознаете с техните възможности.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Здравейте аз съм Паола! В тези пъзели Вие сте фермер, който трябва да
          заравни нивата си за да започне засаждане на семена.
      2:
        image: notes/stage9_2.jpg
        text: Трябва да премахнете всички купчинки и запълните всички дупки.
      3:
        image: notes/stage9_3.jpg
        text: Новите блокове премахват една лопата мръсотия от купчината и запълват
          с една лопата дупката.
      4:
        image: notes/stage9_4.jpg
        text: Купчинките и дупките са с различни размери, така че вие трябва да кажете
          на фермера колко лопати да използва.
    flappy_intro:
      1:
        image: бележки/flappy01.jpg
        text: Здравейте аз съм Кейти! Едно от най-вълнуващите неща за компютърните
          науки е, че една компютърна програма може да бъде интерактивна.
      2:
        image: бележки/flappy02.jpg
        text: Ако някой кликне или докосне компютър или телефон, той генерира събитие,
          и има  код, който решава какво да се направи, когато възникне събитие.
      3:
        image: бележки/flappy03.jpg
        text: 'Например, може да имаме МАНИПУЛАТОР на събитие, който казва "когато
          мишката е натисната ще се възпроизведе звук" '
      4:
        image: бележки/flappy04.jpg
        text: Чували ли сте за играта FlappyBird? С помощта на манипулатори на събития,
          ние ще ви научим да програмирате своя собствена потребителска версия на
          FlappyBird!
      5:
        image: бележки/flappy05.jpg
        text: Кодът, който вие ще напишете се състои от блокове, които представляват
          команди за компютъра. Зад всеки от тези блокове стои реален код.
      6:
        image: бележки/flappy06.jpg
        text: 'Ако погледнете в работната област, ще видите зелени блокове, които
          сме попълнили за вас - това са "манипулатори" '
      7:
        image: бележки/flappy07.jpg
        text: Ако искате птицата да пляска с крила при щракане с мишката, трябва да
          поставите блокът "пляскане с крила" при манипулатора на събитие, и сега
          в играта си всеки път, когато щракнете с мишката, птица ще пляска с криле.
      8:
        image: бележки/flappy08.jpg
        text: При всеки пъзел от тази дейност, ние ще въвеждаме нови типове събития
          под формата на зелени блокове в работната област, а вие ще решавате как
          да ги ползвате.
      9:
        image: бележки/flappy09.jpg
        text: Когато видиш стрелка за падащо меню като тази, това означава, че можеш
          да промениш настройките - примерно какъв звук да се възпроизведе когато
          flappy удари земята.
      10:
        image: бележки/flappy10.jpg
        text: Във финалния пъзел ще успееш да създадеш своя собствена игра и да я
          споделиш със своите приятели. Забавлявай се!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Здравейте аз съм Марк! Нека да обясня какво представляват командите
          за повторения. Тези команди казват на компютъра да повтаря отново и отново
          набор от действия, хиляди или дори милиони пъти.
      2:
        image: notes/hoc2_2.jpg
        text: В този пъзел ние трябва да накараме птицата да се придвижи напред с
          5 квадратчета, за да стигне до прасето.
      3:
        image: notes/hoc2_3.jpg
        text: Можем да използваме новите блокове за повторение за да си помогнем.
      4:
        image: notes/hoc2_4.jpg
        text: Вместо да плъзгаме 5 "върви напред" блокове...
      5:
        image: notes/hoc2_5.jpg
        text: Ние ще поставим "върви напред" блока вътре в блока  за повторение и
          ще напишем число, за да кажем колко пъти да се повтори действието.
      6:
        image: notes/hoc2_6.jpg
        text: 'това е важно: можете да поставите повече от една команда в блока за
          повторене.'
      7:
        image: notes/hoc2_7.jpg
        text: Насладете се на използването на вашия нов блок за повторение!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: Здравейте аз съм Крис. Преди да постъпя в Маями Хийт, бях в Джорджия
          Tech за да уча компютърни науки. Нека опитаме нашия нов " повтаряй докато"
          блок.
      2:
        image: notes/hoc3_2.jpg
        text: Какво става, ако ние не знаем колко далеч птицата трябва да се премести
          за да стигне до прасето?
      3:
        image: notes/hoc3_3.jpg
        text: Ако сложим "предвижи се напред" блок вътре в блока, "повтаряй докато",
          птицата ще продължи напред, докато достигне прасето (или ще се блъсне в
          стената).
      4:
        image: notes/hoc3_4.jpg
        text: 'И това е важно: както преди, можем да сложим няколко блока вътре в
          блока, "повтори докато", и всички те ще бъдат повтаряни.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'Здравейте аз съм Бил! Нека да научим нова основна концепция: "Ако".
          С нея ние учим компютрите да вземат решения.'
      2:
        image: notes/hoc4_2.jpg
        text: Вие използвате "ако" концепцията всеки ден. Преди да отидете навън всяка
          сутрин, вие си казвате, ако навън вали, трябва да си взема яке.
      3:
        image: notes/hoc4_3.jpg
        text: Ние можем да кажем на зомбито да провери дали има път наляво, и ако
          то открие път, да се придвижи в тази посока.
      4:
        image: notes/hoc4_4.jpg
        text: За да напишем код за това, нека да поставим "Ако" блок и в него да вмъкнем
          "Завий наляво".
      5:
        image: notes/hoc4_5.jpg
        text: Сега ако сложим "върви напред" блок над него и блок за повторение около
          всичко, всеки път, когато зомбито се движи, то ще проверява дали има път
          наляво. Командата за повторение е от решаващо значение, за да проверите
          за завой на всяка стъпка.
      6:
        image: notes/hoc4_6.jpg
        text: '"Ако" твърденията са много важни за компютърните науки. Една от първите
          програми, която съм написал е игра на кръстчета и нули, и съдържаше "ако"
          твърдение: ако другият човек е на път да победи, компютърът трябва да блокира
          мястото, което му позволило да спечели.'
      7:
        image: notes/hoc4_7.jpg
        text: Забавлявайте се с помощта на "Ако" блока!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: Здравейте моето име е Салони. Използвам компютърни науки, за да помогна
          за решаването на проблемите в здравеопазването и медицината. Нека да сe
          научим  да използваме "ако иначе" блока. Той изглежда като блокът "Ако",
          но има допълнителна част в края, която казва "иначе".
      2:
        image: notes/hoc5_2.jpg
        text: Ако сложим блок за предвижване в мястото, където пише "ако"  и "завърти
          наляво" блок където пише "друго" това означава, че зомбито ще избира между
          две опции. Ако има път напред, зомбито ще се движи напред, или (ако липса
          такава възможност)- зомбито ще завие наляво.
      3:
        image: notes/hoc5_3.jpg
        text: Точно като при "Ако" блока, можем да сложим "ако иначе" блокира вътре
          в блокове за повторение, така че зомбито ще продължава да се движи и "ако
          иначе" блокът ще прави проверка, ако има някъде да се завие.
      4:
        image: notes/hoc5_4.jpg
        text: Сега, преведете зомбитата до местата, където те трябва да стигнат!
    if_else_scrat:
      1:
        image: notes/saloni_ifelse_scrat1.jpg
        text: '"Ако иначе" твърдението е решение между две неща. Нека видим как можем
          да използваме "ако иначе" с нашия приятел Scrat катерицата.'
      2:
        image: notes/saloni_ifelse_scrat2.jpg
        text: Този блок изглежда по същия начин като "Ако" блока, но е добавена допълнителна
          част накрая, която казва "иначе". Ако поставите блок за движение, където
          се казва "ако" и блок за завиване наляво, където се казва "иначе", това
          означава, че Scrat катерицата ще се движи напред ако е има път напред. Ако
          няма път напред, Scrat ще завие наляво.
      3:
        image: notes/saloni_ifelse_scrat3.jpg
        text: Това е вземане на решение за правене на едно от двете действия въз основа
          на това решение. И точно като "Ако" блоковете, можете да поставите "Ако
          иначе" блоковете в  блокове за повторение.
      4:
        image: notes/saloni_ifelse_scrat4.jpg
        text: Сега, нека да помогнем на Scrat катерицата да вземе жълъда!
    function:
      1:
        image: notes/stage13_1.jpg
        text: Здравейте аз съм Брина, инженер от Instagram. Функция е няколко реда
          с код, които искаме да използваме отново и отново, така че вместо да повтаряме
          изписването на кода, ние използваме само един блок.
      2:
        image: notes/stage13_2.jpg
        text: Ще научите как да дефинирате функции. Дефинициите имат звезда в ъгъла
          на блока си. Името на функцията е написано на най-горния ред.
      3:
        image: notes/stage13_3.jpg
        text: Блоковете, които влизат вътре в дефиницията ни казват какво прави тя.
          Дефиницията, която ще използваме се нарича "запълни 5" и тя се състои от
          блок за повторение и блок за запълване.
      4:
        image: notes/stage13_4.jpg
        text: Дефиницията се намира на работната област, но нашият фермер няма да
          изпълни функцията, докато ние не поставим блок за функция "запълва 5" от
          категорията функции.
      5:
        image: notes/stage13_5.jpg
        text: 'Нека върнем "fun" обратно във "FUNкцията!" '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: Здравейте аз съм Макинде! Нека да научим за "докато" блока.
      2:
        image: notes/stage9_6.jpg
        text: '"Докато блокът" ще повтаря действие, докато се отчете, че действието
          е извършено.'
      3:
        image: notes/stage9_7.jpg
        text: Например ако фермерът е стъпил върху купчина, той ще продължи да я премахва
          с по 1 лопата, докато все още има купчина под него.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Здравейте аз съм Трина, и работя за Pixar. Работила съм в няколко филми,
          включително и в Шрек.
      2:
        image: notes/stage11_2.jpg
        text: Това е нашият нов "брояч" за цикли. Той ще извършва действия отново
          и отново, а вие можете да направите така, че действията да се променят леко
          всеки път.
      3:
        image: notes/stage11_3.jpg
        text: В този пример, нашият "брояч" на цикли  казва "ще броя с брояч от 50
          до 90  през 10" и вътре в него, ние имаме нашият "начертай квадрат" блок.
          Плъзнете блока "брояч" от раздела "Променливи" в мястото за "дължина".
      4:
        image: notes/stage11_4.jpg
        text: Това означава, че художникът ще начертае квадрат, който има 50 пиксела
          дължина на страните, тогава той ще добави 10, и ще начертае квадрат с дължина
          на страните 60 пиксела. Тогава ще продължи докато начертае квадрат със страни
          90. Така ще имаме квадрати със страни 50, 60, 70, 80 и 90 пиксела.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Здравейте аз съм Джанет и съм инженер в Zynga.
      2:
        image: notes/stage15_2.jpg
        text: Как ще начертаете куп триъгълници  със различни размери на страните
          им?
      3:
        image: notes/stage15_3.jpg
        text: Можем да напишем целия този код на ръка или можем да използваме функция
          с параметри.
      4:
        image: notes/stage15_4.jpg
        text: За да добавите параметър на функцията, щракнете върху синята звезда.
          След това плъзнете "въведете име" във "вмъкни" блока.
      5:
        image: notes/stage15_5.jpg
        text: Тогава, ако  напишете "дължина" на мястото на "х" и натиснете "Enter",
          вие ще създадете нов параметър "дължина" за вашата функция.
      6:
        image: notes/stage15_6.jpg
        text: След това кликнете върху звездата. Сега кликнете върху категорията "променливи"
          и плъзнете блок "дължина" в "премества напред" блок във вашата дефиниция
          на функция. Плъзнете стария блок за номер от външната страна.
      7:
        image: notes/stage15_7.jpg
        text: За да използвате вашата функция с параметри, щракнете върху категорията
          функции и изберете "Начертай триъгълник с дължина" функция.
      8:
        image: notes/stage15_8.jpg
        text: Сега можете да използвате математически блок за да въведете различни
          числа и да начертаете триъгълници с различни размери.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Поздравления! С последната загадка, която разгадахте, вие просто написахте
          код, който може да каже на всеки робот как да си придвижи, без да се губи
          в лабиринта или тунела. Това можете да повторите и със зомбито, птицата,
          марсохода или дори самоуправляващ се автомобил.
      2:
        image: notes/hoc6_2.jpg
        text: Основните понятия, които използвахте са в основата на всяка програма
          или приложение, които сте ползвали. Изучихме циклите на "повтори няколко
          пъти" и "повторение, докато" и  командите "ако" и "ако / иначе".
      3:
        image: notes/hoc6_3.jpg
        text: Ако ви харесва  първия час на кодиране, посетете code.org за да продължите
          образованието си в компютърните науки! След като завършите нашият 20 часов
          курс, вие ще сте усвоили основите на програмирането и може да се научите
          как да създавате програми за телефони, инструкции за роботи, игри, и др.
      4:
        image: notes/hoc6_4.jpg
        text: 'Технологията променя всичко, което правим и няма значение, ако сте
          млад или стар: програмирането е забавно, това е творчество  и всеки може
          да се научи!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: Очаквайте скоро показването на бележки!
    frozen_intro:
      1:
        image: notes/frozen1_1.jpg
        text: Здравейте моето име е Линдзи. Модел съм, създавам и пиша мои собствени
          приложения. Нека да използваме кода, за да се присъединим към Анна и Елза,
          докато те опознават магията и красотата на леда.
      2:
        image: notes/frozen1_2.jpg
        text: Вие ще създадете снежинки и десени от следите на зимните кънки и ще
          направите зимна приказка, която след това можете да споделите с приятелите
          си.
      3:
        image: notes/frozen1_3.jpg
        text: В следващия час ще се научите на основите на кодирането. Традиционното
          програмиране обикновено е текстово, но ние ще използваме Blockly, който
          използва визуални блокове, които можете да плъзнете и пуснете, за да пишете
          програми. Така дори студентите изучават основите. Под капака, Вие все още
          създавате код.
      4:
        image: notes/frozen1_4.jpg
        text: Програмата е набор от инструкции, които казват на компютъра какво да
          прави. Нека построим код, или програма, която ще помогне на Елза да създаде
          проста линия или отсечка. Ще използваме това по-късно, за да създадем по-сложни
          модели.
      5:
        image: notes/frozen1_5.jpg
        text: Екрана е разделен на три основни части. В ляво е повърхността на леда,
          където ще изпълнявате вашата програма. Инструкциите за всяко ниво са написани
          точно под повърхността.
      6:
        image: notes/frozen1_6.jpg
        text: Тази средна област е кутията с инструменти, и всеки от тези блокове
          е действие, което Елза и Анна могат да извършат.
      7:
        image: notes/frozen1_7.jpg
        text: Празно пространство вдясно се нарича работната област, и това е мястото,
          където ние ще изградим нашата програма. За да се местите по повърхността
          на леда, ще използвате блок за преметване.
      8:
        image: notes/frozen1_8.jpg
        text: Тук, блокът за преместване казва, "премества напред със 100 пиксела."
          Когато натиснете "Старт", какво се случва? Елза се придвижва напред на екрана,
          точно 100 пиксела в действителност! Пикселите са много малки квадратчета
          на екрана на компютъра.
      9:
        image: notes/frozen1_9.jpg
        text: Друг блок, който имаме в този пъзел казва "завърти надясно на 90 градуса."
          И когато ние използваме този блок, караме Елза да се завърта на определени
          градуси. Можете да опитате блока и да  завъртите Елза на колкото искате
          градуси. Ъгълът се измерва от пътя пред Elsa. Така че това е завой на 90
          градуса. И това е завой на 120 градуса.
      10:
        image: notes/frozen1_10.jpg
        text: Не забравяйте, че можете да промените броя на пикселите и градусите
          чрез натискане на стрелките до тях.
    frozen_loops:
      1:
        image: notes/frozen2_1.jpg
        text: Здравейте аз съм Паола! Компютрите са наистина добри в повтарянето на
          действия. Можете да броите от 10, 20 или 100. Но един компютър може да брои
          до един милиард или трилиони. Той няма да се отегчи и ще му отнеме само
          няколко секунди. Дали това е броене, или чертеж, или нещо подобно--компютрите
          могат да повтарят неща стотици или дори милиарди пъти.
      2:
        image: notes/frozen2_2.jpg
        text: В програмирането, ние наричаме това цикъл. Цикъл е, когато се повтаря
          код отново и отново. За следващия пъзел целта ви е да помогнете на Анна
          да създаде квадрат с блок за повторение.
      3:
        image: notes/frozen2_3.jpg
        text: Всички блокове с код, които поставяте вътре в блока за повторение, ще
          се повтарят последователно, толкова пъти, колкото искате.
      4:
        image: notes/frozen2_4.jpg
        text: За да нарисувате квадрат, можете да използвате "премества напред" и
          "завърта надясно" блок 4 пъти. Но по-лесен начин е да кажете на компютъра
          да "премества напред" и "завърта надясно на 90 градуса" веднъж и след това
          той да повтаря тази двойка действия 4 пъти. За да направите това, трябва
          да поставите двойката действия в блок за повторение.
      5:
        image: notes/frozen2_5.jpg
        text: Не забравяйте, че можете да промените номера в "Повтори" блока  и той
          ще  повтаря това, което е вътре в него много пъти.
    frozen_functions:
      1:
        image: notes/frozen3_1.jpg
        text: Здравейте аз съм Крис Бош. Аз съм професионален баскетболист, и се учех
          да кодирам в колежа.
      2:
        image: notes/frozen3_2.jpg
        text: Едно от най-важните понятия по компютърни науки е как да се дефинират
          нови команди. Повечето компютърни езици имат само около 100 думи или команди.
          И наистина, изкуството и магията е в определянето на собствени нови думи,
          създадени на основата на тези градивни блокове.
      3:
        image: notes/frozen3_3.jpg
        text: След като сте научили компютъра как да направи едно действие, с помощта
          на тази последователност от команди, можете да дадете собствено име за това
          действие, така че е лесно да го повторите по-късно. Когато дефинирате своя
          собствена команда и й давате име, вие създавате функция.
      4:
        image: notes/frozen3_4.jpg
        text: Здравейте аз съм Джес. При програмирането с блокове, трябва да използвате
          функции за набор от действия, които искате да използвате много пъти. Например
          ако сте написали код, за да създадете квадрат.
      5:
        image: notes/frozen3_5.jpg
        text: 'Можете да дефинирате това като функция, наречена "чертае квадрат." '
      6:
        image: notes/frozen3_6.jpg
        text: Сега имате нов блок, който можете да използвате няколко пъти за да създадете
          няколко квадратчета.
      7:
        image: notes/frozen3_7.jpg
        text: Много от простите форми може да се използват за създаване на по-сложни
          модели. В следващия пъзел кода, който наскоро написахме да  направи един
          кръг е достъпен за вас като нова функция, която може да направи кръгове
          с различни размери. Можете ли да използвате това, за да помогнете на Елза
          да създаде сложен и красив модел в снега?
    C3_playlab_create_game:
      1:
        image: notes/playlab_1.png
        text: Досега сте създавали анимация или история, която прави точно същото
          нещо всеки път, когато го стартирате. Сега можете да направите една интерактивна
          игра, която да играете.
      2:
        image: notes/playlab_2.png
        text: Там е "когато стрелка" блок и блок "премести актьор". Можете да поставите
          тези блокове заедно, за да движите актьорите с клавишите със стрелки.
      3:
        image: notes/playlab_3.png
        text: И има някои блокове, които правят неща, когато участниците се сблъскат
          или е кликнато върху им. Проверете ги и се забавлявайте!
    playlab_intro:
      1:
        image: notes/playlab_intro_1.png
        text: Ние ще създаваме игри като използваме Игрална Лаборатория. Добрите игри
          имат история, а всяка история си има герои. Ще се научим как да караме нашите
          герои като вещици, извънземни и животни да говорят, да се движат и да комуникират
          едни с други. До края на този урок, ще можеш да създаваш игра от подръчни
          средства и ще я споделяш със твоите приятели.
      2:
        image: notes/playlab_intro_2.png
        text: Екрана е разделен на 3 основни части. Вляво е игралното поле, където
          вашата програма ще се изпълни. Инструкции за всяко ниво са дадени под него.
      3:
        image: notes/playlab_intro_3.png
        text: Средната зона е кутията с инструменти, и всеки от тези блокове е част
          от код. Празното пространство вдясно се нарича работната област и това е
          мястото, където ние ще изградим нашата програма.
      4:
        image: notes/playlab_intro_4.png
        text: За да започнете, трябва да свържете вашите блокове с оранжевия "при
          стартиране" блок. Можете да свържете множество блокове заедно, като ги плъзнете
          докато виждате жълта линия, и след това те ще се съединят заедно.
      5:
        image: notes/playlab_intro_5.png
        text: В този първи пъзел, нашият актьор е пингвин и ние ще го накараме да
          казва "Здравей!" като плъзнем "казва" блок, и го свържем към "при стартиране"  блока.
          Ще напишем в него "Здравей." Ние можем да движим пингвина с помощта на блоковете
          за движение. След като сте поставили блоковете на място, натиснете бутона
          Старт, за да видите какво сте програмирали.
      6:
        image: notes/playlab_intro_6.png
        text: Започнете и до края, ще можете да създадете своя собствена игра с всички
          видове герои, които могат да си взаимодействат, щастливи или тъжни, да печелят
          точки, или да хвърлят огнени топки, или дори да изчезват от полето. Това
          е всичко е за вас и играта, която искате да направите.
    playlab_events:
      1:
        image: notes/playlab_events_1.png
        text: Сега ние ще учим за неща,  които всички  програмисти на игри използват
          всеки ден. Те се наричат събития. Събитието казва на програмата ви да слуша  когато
          нещо се случва. Когато това нещо се случи, тя извършва действие.
      2:
        image: notes/playlab_events_2.png
        text: Някои примери на събития слушат за щракване с мишката, бутон със стрелка
          или натискане на екрана.
      3:
        image: notes/playlab_events_3.png
        text: Тук ние ще да се накараме космическия робот да каже "Поздрави, земляни!",
          когато играчът кликне върху него. Ние ще използваме "когато е кликнато върху"
          блок и "казва" блока, които ще прикрепим към "при стартиране" блока. Когато
          играчът кликне върху робота, всичко, прикрепено към "когато е кликнато върху"
          събитийния блок ще се извърши. Какво ли би казало вашето извънземно?
      4:
        image: notes/playlab_events_4.png
        text: Има и "когато стрелка" блокове. Ако свържете блокове "премести" с тях,
          можете да движите актьорите нагоре, надолу, наляво, или надясно. Стъпка
          по стъпка играта става по-интерактивна.
    playlab_repeat_forever:
      1:
        image: notes/playlab_repeat_forever_1.png
        text: Това е "повтаря завинаги" блокът. Ако поставите друг блок вътре в него,
          той ще се повтаря завинаги в играта.
      2:
        image: notes/playlab_repeat_forever_2.png
        text: Ако искаме актьора да  направи нещо няколко пъти, се налага да поставим
          тези блокове вътре в блока, "повтаря завинаги".
      3:
        image: notes/playlab_repeat_forever_3.png
        text: В този пъзел нашата цел е да помогнем на магьосника да патрулира по
          границите на кралството, наляво и надясно. Научете как  работят командите
          за повторение, това ще ви спести един тон време по-късно, когато създавате
          своя собствена игра.
