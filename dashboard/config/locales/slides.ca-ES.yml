"ca":
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Benvingut a la teva primera hora de codi! Anem a submergir-nos en la
          teva primera experiència de programació.
      2:
        image: notes/hoc1_2.jpg
        text: Farem servir Blockly, un llenguatge de programació visual on pots arrossegar
          i deixar anar blocs per escriure codi.
      3:
        image: notes/hoc1_3.jpg
        text: La majoria de codi s'escriu a mà, però Blocky és visual. Cada bloc correspon
          a una línia de codi "real".
      4:
        image: notes/hoc1_4.jpg
        text: Aprendràs els fundaments de la informàtica, conceptes que s'utilitzen
          en qualsevol lloc, des de fer aplicacions fins a controlar el Mars rover.
      5:
        image: notes/hoc1_5.jpg
        text: Un programa és un conjunt d'instruccions que el teu ordinador segueix.
      6:
        image: notes/hoc1_6.jpg
        text: L'objectiu del teu primer programa és guiar un Angry Bird a través d'un
          laberint per colpejar al porc verd.
      7:
        image: notes/hoc1_7.jpg
        text: El costat esquerra és el laberint on s'executa el teu programa. Les
          instruccions per a cada puzzle estan a sota el laberint.
      8:
        image: notes/hoc1_8.jpg
        text: La caixa d'eines del mig té les ordres per l'"Angry Bird". Utilitzaràs
          aquestes caixes per construir el teu codi.
      9:
        image: notes/hoc1_9.jpg
        text: A la dreta hi ha la teva àrea de treball on podràs arrossegar els blocs
          de la caixa d'eines per construir el teu programa. Per eliminar un bloc,
          arrossega'l a la paperera del cantó.
      10:
        image: notes/hoc1_10.jpg
        text: Cada bloc és una instrucció. Si arrossegues el bloc "avançar" a la teva
          àrea de treball i prems "Executar Programa", l'ocell es mou un espai en
          el laberint.
      11:
        image: notes/hoc1_11.jpg
        text: Per fer més d'una acció, arrossegueu molts blocs a l'espai de treball
          i ajunteu-los. L'ocell executarà les ordres de dalt a baix.
      12:
        image: notes/hoc1_12.jpg
        text: Si executes un programa i el vols arreglar i provar de nou, prem el
          botó "Reset".
      13:
        image: notes/hoc1_13.jpg
        text: Anem a per aquells porcs!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: Hola, sóc en JR! Tots els equips d'automobilisme necessiten informàtics
          per guanyar. Ells analitzen les dades del cotxe per fer-lo corre més ràpid.
      2:
        image: notes/stage5_2.jpg
        text: En aquests puzles, tu seràs un artista que dibuixarà una línia, darrera
          seu, per allà on passi.
      3:
        image: notes/stage5_3.jpg
        text: Aquest bloc diu "avança 100 píxels". Els píxels són punts realment petits
          de la teva pantalla.
      4:
        image: notes/stage5_4.jpg
        text: Aquest bloc diu "gira a la dreta 90º". Farà que el teu artista giri
          tant com feia el bloc de "gira" en el puzle del laberint.
      5:
        image: notes/stage5_5.jpg
        text: Clica sobre la fletxa d'aquests blocs per canviar la quantitat d'avançaments
          o girs que el teu artista farà. Practica amb aquests nous blocs per familiaritzar-t'hi.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Hola, sóc la Paola! En aquest puzzle, tu ets una pagesa que ha d'aconseguir
          tenir el seu camp totalment pla per començar a plantar la collita.
      2:
        image: notes/stage9_2.jpg
        text: Has d'ajudar-la a recollir totes les piles de brutícia i omplir els
          forats.
      3:
        image: notes/stage9_3.jpg
        text: Els nous blocs treuen 1 palada de terra d'una pila i omplen 1 palada
          de terra d'un forat.
      4:
        image: notes/stage9_4.jpg
        text: Les piles i els forats son de diferents mides, per la qual cosa li hauràs
          de dir a la pagesa quantes palades haurà d'utilitzar.
    flappy_intro:
      1:
        image: notes/flappy01.jpg
        text: Hola, sóc la Katie! Una de les coses més emocionants sobre l'informàtica
          és que un programa informàtic pot ser interactiu.
      2:
        image: notes/flappy02.jpg
        text: Cada vegada que algú clica o toca o escriu en un ordinador o telèfon,
          això genera un esdeveniment, i hi ha algun codi que decideix què fer quan
          es produeix un esdeveniment.
      3:
        image: notes/flappy03.jpg
        text: 'Per exemple, tu pots tenir un controlador d''incidències que diu "quan
          hi hagi un clic del ratolí, reprodueix un so" '
      4:
        image: notes/flappy04.jpg
        text: Has sentit parlar del joc "FlappyBird"? Mitjançant controladors d'incidències,
          aprendrem a programar la nostra pròpia versió de "FlappyBird"!
      5:
        image: notes/flappy05.jpg
        text: El codi que escriuràs implica arrossegar i col·locar blocs que representen
          ordres per a l'ordinador. Sota la seva façana, cada un d'aquests blocs conté
          codi real.
      6:
        image: notes/flappy06.jpg
        text: 'Si observes l''àrea de treball, hi ha alguns blocs verds que han estat
          configurats - aquests són "controladors d''incidències" '
      7:
        image: notes/flappy07.jpg
        text: Si vols que l'ocell aletegi quan fas clic amb el ratolí, ho pots fer
          adjuntant el bloc "Aleteig" al controlador d'incidències adequat. I ara,
          en el teu joc, sempre que cliquis el ratolí, l'ocell aletejarà.
      8:
        image: notes/flappy08.jpg
        text: En tots els puzles d'aquesta activitat introduirem nous tipus d'esdeveniments,
          com a blocs verds, a l'àrea de treball. Pots decidir els blocs apropiats
          per afegir en resposta a aquests esdeveniments.
      9:
        image: notes/flappy09.jpg
        text: Quan vegis una fletxa desplegable com aquesta, significa que pots canviar
          les característiques - com el so que es reproduirà quan el "Flappy" toqui
          el terra.
      10:
        image: notes/flappy10.jpg
        text: En el puzle final podràs crear el teu propi joc i compartir-lo amb els
          teus amics. Diverteix-te!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Hola, sóc Mark! Anem aprendre sobre els bucles. Utilitzant bucles pots
          dir-li a l'ordinador que repeteixi un conjunt d'accions una y una altra
          vegada, milers o fins i tot milers de millons de vegades.
      2:
        image: notes/hoc2_2.jpg
        text: En aquest puzzle, volem fer l'ocell avançar 5 espais per agafar el porc.
      3:
        image: notes/hoc2_3.jpg
        text: Podem utilitzar el nou bloc "repetir" per ajudar-nos.
      4:
        image: notes/hoc2_4.jpg
        text: En lloc d'arrossegar 5 blocs "avançar"...
      5:
        image: notes/hoc2_5.jpg
        text: Podem posar el bloc "avançar" dins el bloc "repetir" i escriure un nombre
          en el bloc per dir-li quantes vegades ha de repetir.
      6:
        image: notes/hoc2_6.jpg
        text: 'I això és important: pots posar més d''una ordre dins un bloc "repetir".'
      7:
        image: notes/hoc2_7.jpg
        text: Disfruta utilitztant el teu nou bloc "repetir"!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: Hola, sóc Chris. Abans d'unir-me als Miami Heat, vaig anar a Georgia
          Tech per estudiar Informàtica. Anem a provar el nostre nou bloc, el bloc
          "repetir fins".
      2:
        image: notes/hoc3_2.jpg
        text: Què passaria si no sabéssim quant tindria que moure's l'ocell per arribar
          al porc?
      3:
        image: notes/hoc3_3.jpg
        text: Si posam un bloc "avança" dins un bloc "repetir fins", l'ocell avançarà
          FINS que alcanci el porc (o xoqui amb una paret).
      4:
        image: notes/hoc3_4.jpg
        text: 'I això és important: com abans, podem posar varis blocs dins el bloc
          "repetir fins", i tots es repetiran.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'Hola, sóc Bill! Anem a aprendre un nou concepte fundamental: les declaracions
          "Si". Així és com els ordinadors prenen decisions.'
      2:
        image: notes/hoc4_2.jpg
        text: Tu mateix utilitzes les declaracions "Si" cada dia. Abans de que surtis
          cada matí, dius SI està plovent, necessit agafar l'impermeable.
      3:
        image: notes/hoc4_3.jpg
        text: Podem dir-li al zombie que comprovi SI hi ha un camí a l'esquerra, i
          si troba un camí a l'esquerra, podem fer-lo girar en aquella direcció.
      4:
        image: notes/hoc4_4.jpg
        text: Per escriure el codi per a això, anem a arrossegar el bloc "si" i posar
          un bloc "girar a l'esquerra" a dins.
      5:
        image: notes/hoc4_5.jpg
        text: Ara, si posam un bloc "avançar" damunt aquest i un bloc "repetir" al
          voltant de tot, cada vegada que el zombie es mogui, ell comprovarà si hi
          ha algun camí a l'esquerra i girarà. El comandament "repetir" és crític
          per comprovar si té que girar en cada pas.
      6:
        image: notes/hoc4_6.jpg
        text: 'Les delcaracions "Si" són molt importants en la informàtica. Un dels
          primers programes que vaig escriure era un joc de tic-tac-toe, i hi havia
          tres declaracions "Si" que deien: SI l''altre persona estaà a punt de guanyar,
          bloqueja el lloc que li permeti guanyar.'
      7:
        image: notes/hoc4_7.jpg
        text: Diverteix-te utilitzant el bloc "Si"!
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: Hola, em dic Saloni. Utilitzo la programació per resoldre problemes
          de salut i medicina. Fem un cop d'ull al bloc "sinó". S'assembla al bloc
          "si" però té una part extra al final que diu "no".
      2:
        image: notes/hoc5_2.jpg
        text: Si poso un bloc "avançar" en el forat on diu "fer" i el bloc "girar
          a l'esquerra" on diu "en cas contrari" significa que el zombi haurà de triar
          entre dues opcions. Si hi ha un camí davant, el zombi avançarà, EN CAS CONTRARI
          (no hi ha camí davant), el zombi girarà a l'esquerra.
      3:
        image: notes/hoc5_3.jpg
        text: Així com el bloc "si", podem posar els blocs "sinó" dins dels blocs
          "repetir" per tal que el zombi es continuï movent i el bloc "sinó" li faci
          comprovar si hi ha algun lloc on girar.
      4:
        image: notes/hoc5_4.jpg
        text: Col·loqueu aquells zombis al lloc on pertanyen!
    if_else_scrat:
      1:
        image: notes/saloni_ifelse_scrat1.jpg
        text: Una declaració si-sinó és una decisió entre dues coses. Fixeu-vos en
          com utilitzar una declaració si-sinó amb el nostres amic l'esquirol Scrat.
      2:
        image: notes/saloni_ifelse_scrat2.jpg
        text: Aquest bloc sembla igual que el bloc "si", però hi ha una part extra
          a la part inferior que diu "sinó". Si poso un bloc "moure endavant" on diu
          "fer" i un bloc "girar esquerra" on diu "sinó", això significa que l'esquirol
          Scrat es mourà cap endavant si hi ha un camí endavant. Si no hi ha un camí
          endavant, Scrat girarà a l'esquerra.
      3:
        image: notes/saloni_ifelse_scrat3.jpg
        text: Es tracta de prendre una decisió i fer una de les dues accions basades
          en aquesta decisió. Així com els blocs "si", podeu posar els blocs "si-sinó"
          dins dels blocs de "repetir".
      4:
        image: notes/saloni_ifelse_scrat4.jpg
        text: Ajudeu l'esquirol Scrat a aconseguir aquesta gla!
    function:
      1:
        image: notes/stage13_1.jpg
        text: Hola, sóc la Brina, enginyera a Instagram. Una funció es un conjunt
          de línies de codi que vols utilitzar una vegada i una altra, per la qual
          cosa enlloc de escriure aquest codi cada vegada, pots simplement utilitzar
          un bloc.
      2:
        image: notes/stage13_2.jpg
        text: Anem a aprendre com definir una funció. Les definicions de funcions
          tenen una estrella a la cantonada. El nom de la funció està escrit a la
          línia de dalt de tot.
      3:
        image: notes/stage13_3.jpg
        text: Els blocs que van dins la definició ens diuen que fa la funció. Per
          tant aquesta definició de funció es diu "omple 5" i està construïda amb
          un bloc de "repetició" i un bloc de "omplir".
      4:
        image: notes/stage13_4.jpg
        text: La definició resta en l'àrea de treball, però el nostre agricultor no
          executarà la funció fins que haguem arrossegat el nostre bloc funció "omplir
          5" fora de la categoria de funcions.
      5:
        image: notes/stage13_5.jpg
        text: Let's put the "fun" back in "FUNction!"
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: notes/stage9_6.jpg
        text: El "bloc mentre" farà tot el que posem a l'interior durant l'estona
          que l'expressió que l'encapçala sigui certa.
      3:
        image: notes/stage9_7.jpg
        text: Per exemple, si l'agricultor està sobre una pila de sorra, continuarà
          traient 1 palada de terra MENTRE hi hagi una pila de sorra sota.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Hola, sóc la Trina, i treballo a Pixar. He treballat en un grapat de
          pel·lícules, incloent-hi Shrek.
      2:
        image: notes/stage11_2.jpg
        text: Aquest és el nostre bucle "contador". Aquest executarà accions una vegada
          i una altra i tu pots fer que les accions canviïn una mica cada vegada.
      3:
        image: notes/stage11_3.jpg
        text: En aquest exemple, el nostre bucle "comptador" diu "compta amb el comptador
          des de 50 a 90 de  10 en 10" i dins d'aquest tenim un bloc de "dibuixa un
          quadrat", Arrossega el bloc "comptador" des de la secció de "variables"
          al lloc "longitud".
      4:
        image: notes/stage11_4.jpg
        text: Això significa que el nostre artista dibuixarà un quadrat de 50 píxels
          de costat, afegirà 10 al valor i dibuixarà un quadrat de 60 píxels de costat.
          Llavors seguirà afegint 10 i dibuixant quadrats fins que arribi a 90. Per
          tant tindrem quadrats de 50, 60, 70, 80 i 90.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Hola, sóc la Janete, i sóc enginyera a Zynga.
      2:
        image: notes/stage15_2.jpg
        text: Què passa si volem dibuixar un grapat de triangles i que tinguin mides
          diferents?
      3:
        image: notes/stage15_3.jpg
        text: Podríem escriure tot el codi a ma o podem utilitzar una funció amb paràmetres.
      4:
        image: notes/stage15_4.jpg
        text: Per fer això, clica sobre l'estrella blava de la definició de la funció
          "dibuixa un triangle". Llavors arrossega "introdueix un nom" en el bloc
          "introduir".
      5:
        image: notes/stage15_5.jpg
        text: A continuació, si escrius "longitud" on diu "x" i prems "Intro" crearàs
          la longitud d'entrada de la teva funció.
      6:
        image: notes/stage15_6.jpg
        text: Llavors clica sobre l'estrella. Ara, clica a la categoria variables
          i arrossega el bloc "longitud" en el bloc "avança" de la definició de la
          teva funció. Retira el bloc numero anterior.
      7:
        image: notes/stage15_7.jpg
        text: Per utilitzar la funció amb paràmetres, feu clic a la categoria de funcions
          i arrossega la teva funció  "dibuixa un triangle amb longitud".
      8:
        image: notes/stage15_8.jpg
        text: Ara pots utilitzar un bloc matemàtic per introduir els diferents números
          per dibuixar triangles de diferents mides.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Felicitats! Amb l'últim puzzle que has resolt, acabes d'escriure codi
          que pot dir-li a QUALSEVOL robot com trobar el seu camí a través d'un laberint
          sense ramificació o túnel de qualsevol longitud. No importa si és un zombie,
          un ocell, un rover de Mart o fins i tot un cotxe sense conductor.
      2:
        image: notes/hoc6_2.jpg
        text: Els conceptes bàsics que has utilitzat són el cor de qualsevol programa
          o aplicació que provis. Hem après sobre bucles, declaracions "repetir fins",
          "si" i "si altre".
      3:
        image: notes/hoc6_3.jpg
        text: Si t'ha agradat la teva primera hora de codi, visita code.org per continuar
          la teva educació informàtica! Una vegada has complet el nostre curs de 20
          hores, hauràs dominat els fundaments bàsics de programació, i podràs començar
          a aprendre a escriure aplicacions mòbils, instruccions de robots, jocs,
          el que tu vulguis.
      4:
        image: notes/hoc6_4.jpg
        text: 'La tecnologia està canviant tot el que fem i no importa si ets jove
          o vell: programar és divertit, és creatiu, i qualsevol pot aprendre!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: Les notes animades estaran disponibles aviat!
    frozen_intro:
      1:
        image: notes/frozen1_1.jpg
        text: Hola, el meu nom és Lyndsey. Sóc model, actuo i escric les meves pròpies
          apps. Utilitzeu el codi per unir-vos a l' Anna i l' Elsa mentre exploren
          la màgia i la bellesa del gel.
      2:
        image: notes/frozen1_2.jpg
        text: You'll create snowflakes and patterns as you ice skate and make a winter
          wonderland that you can then share with your friends.
      3:
        image: notes/frozen1_3.jpg
        text: In the next hour, you're going to learn the basics of how to code. Traditional
          programming is usually in text, but we'll use Blockly, which uses visual
          blocks that you can drag and drop to write programs. This is how even university
          students learn the basics. Under the hood, you're still creating code.
      4:
        image: notes/frozen1_4.jpg
        text: Un programa és un conjunt d'instruccions que indica què fer a un ordinador.
          Anem a construir un codi o un programa, que ajudarà a l' Elsa a crear una
          simple línia. Ho utilitzarem més tard per crear patrons més complexos.
      5:
        image: notes/frozen1_5.jpg
        text: La pantalla es divideix en tres parts principals. A l'esquerra, hi ha
          la zona blanca on executareu el vostre programa. Les instruccions per a
          cada nivell estan escrites sota aquesta zona.
      6:
        image: notes/frozen1_6.jpg
        text: La zona central és la caixa d'eines on cada bloc és una acció que l'Elsa
          i l'Anna poden fer.
      7:
        image: notes/frozen1_7.jpg
        text: The white space on the right is called the workspace, and this is where
          we'll build our program. To move around the ice surface, you'll use the
          "Move Forward" block.
      8:
        image: notes/frozen1_8.jpg
        text: Aquí, el bloc "avançar" diu "avançar 100 píxels". Quan premeu "Executa",
          què passa? L' Elsa avança un tros a la pantalla, en realitat són 100 píxels!
          Els píxels són bàsicament petits quadrats de la pantalla de l'ordinador.
      9:
        image: notes/frozen1_9.jpg
        text: The other block we have in this puzzle says "turn right by 90 degrees."
          And when we use this "Turn Right" block, that makes Elsa turn a certain
          amount. You can play around with how far you want Elsa to turn. The angle
          is measured from the path ahead of Elsa. So, this is a 90 degree turn. And
          this is a 120 degree turn.
      10:
        image: notes/frozen1_10.jpg
        text: Recordeu que podeu canviar el nombre de píxels i graus clicant a les
          fletxes del seu costat.
    frozen_loops:
      1:
        image: notes/frozen2_1.jpg
        text: Hola, sóc Paola! Els ordinadors són realment bons en repetir accions.
          Podeu comptar fins a 10, 20 o 100. Però un ordinador pot comptar fins a
          mil milions o un trilió. No s'avorreixen i només tarden uns quants segons.
          Tant si és comptar, dibuixar o qualsevol altre cosa -- els ordinadors poden
          repetir coses centenars o fins i tot milers de milions de vegades.
      2:
        image: notes/frozen2_2.jpg
        text: En programació, anomenem això bucle. Un bucle és la manera de repetir
          el codi de programació una i altra vegada. Pel següent trencaclosques, l'objectiu
          és que ajudeu l'Anna a crear un quadrat amb el bloc "repetir".
      3:
        image: notes/frozen2_3.jpg
        text: Qualssevol blocs de codi que posi dins del bloc "Repetir" es repetiran
          seqüencialment, tantes vegades com vulguis.
      4:
        image: notes/frozen2_4.jpg
        text: Per dibuixar un quadrat, pots utilitzar els blocs "Avança" i "Gira a
          la dreta" 4 vegades. Però el camí més fàcil és dir-li a l'ordinador "Avança"
          i "Gira a la dreta 90 graus" una sola vegada i llavors dir-li que ha de
          repetir 4 vegades aquest parell d'accions. Per això, cal posar els blocs
          "Avança" i "Gira a la dreta" dins d'un bloc "Repetir".
      5:
        image: notes/frozen2_5.jpg
        text: Recorda, pots canviar el número al bloc "Repetir" per qualsevol valor,
          i es repetirà el que hi ha dins el bloc tantes vegades com hagis dit.
    frozen_functions:
      1:
        image: notes/frozen3_1.jpg
        text: Hola, sóc en Chris Bosh. Sóc un jugador de bàsquet de la NBA i vaig
          fer programació a l'institut.
      2:
        image: notes/frozen3_2.jpg
        text: One of the most important concepts in computer science is how to define
          new commands. Most computer languages have only about 100 words or commands.
          And really, the art and magic is in defining your own new words out of these
          building blocks.
      3:
        image: notes/frozen3_3.jpg
        text: Un cop li heu ensenyat a l'ordinador com fer una acció utilitzant una
          seqüència d'ordres, podeu inventar-vos un nom per aquesta acció de manera
          que sigui fàcil de repetir-la posteriorment. Quan definiu les ordres i els
          hi doneu un nom, això s'anomena funció.
      4:
        image: notes/frozen3_4.jpg
        text: Hola, sóc Jess. Quan programeu amb blocs, utilitzeu funcions si hi ha
          un conjunt d'accions que voleu utilitzar moltes vegades. Per exemple, heu
          escrit un codi per crear un quadrat.
      5:
        image: notes/frozen3_5.jpg
        text: 'Podeu definir-ho com a una funció anomenada "crea un quadrat." '
      6:
        image: notes/frozen3_6.jpg
        text: Ara tens un bloc nou que pots utilitzar moltes vegades per crear múltiples
          quadrats.
      7:
        image: notes/frozen3_7.jpg
        text: A lot of simple shapes can be used to create more complex patterns.
          In the next puzzle, the code you recently wrote to make a circle is available
          to you as a new function that can make circles of different sizes. Can you
          use it to help Elsa create intricate and beautiful patterns in the snow?
    C3_playlab_create_game:
      1:
        image: notes/playlab_1.png
        text: Fins ara heu estat fent una animació o una història que fa exactament
          la mateixa cosa cada vegada que s'executa. Ara podeu fer un joc interactiu
          que de fet podeu jugar.
      2:
        image: notes/playlab_2.png
        text: There's the "when arrow" block and the "move actor" block. You can put
          these blocks together to move the actors around with the arrow keys.
      3:
        image: notes/playlab_3.png
        text: Hi ha alguns blocs que fan coses quan els personatges xoquen o els hi
          feu clic a sobre. Comproveu-los i divertiu-vos!
    playlab_intro:
      1:
        image: notes/playlab_intro_1.png
        text: We're going to create games using Play Lab. Good games have a story,
          and every story has actors. We'll learn how to make our actors like witches,
          alinens, and animals speak, move, and interact with each other. By the end
          of this tutorial, you can build a game from scratch and share it with your
          friends.
      2:
        image: notes/playlab_intro_2.png
        text: La pantalla es divideix en 3 parts. L'esquerra és l'espai del joc on
          el programa s'executarà. Les instruccions per a cada nivell estan escrites
          a sota.
      3:
        image: notes/playlab_intro_3.png
        text: La zona central és la caixa d'eines, i cada un d'aquests blocs és una
          peça de codi. L'espai blanc a la dreta s'anomena l'àrea de treball i aquí
          és on construirem el programa.
      4:
        image: notes/playlab_intro_4.png
        text: To start off, you'll need to link your blocks to the orange "when run"
          block. You can link multiple blocks together by dragging them out until
          you see the yellow line, and then they'll snap together.
      5:
        image: notes/playlab_intro_5.png
        text: En el primer trencaclosques, el nostre personatge és un pingüí i farem
          que digui "Hola" arrossegant el bloc dir cap a fora, unint-lo al bloc quan
          executa i escrivint-hi "Hola". També podem fer moure el pingüí utilitzant
          els blocs de moure a la dreta i moure a l'esquerra. Quan tinguem els blocs
          col·locats, premeu el botó executa per veure què heu programat.
      6:
        image: notes/playlab_intro_6.png
        text: Comenceu i cap al final sereu capaços de crear el vostre propi joc amb
          tot tipus de jugadors que poden interaccionar, posar-se trists o feliços,
          anotar punts, llençar boles de foc o fins i tot desaparèixer mútuament.  Tot
          depèn de vosaltres i del joc que volgueu fer.
    playlab_events:
      1:
        image: notes/playlab_events_1.png
        text: Apreneu sobre coses que tots els programadors de jocs fan servir diàriament.
          S'anomenen esdeveniments. Un esdeveniment li diu al programa que estigui
          alerta quan passa alguna cosa. Quan això passa, es realitza una acció.
      2:
        image: notes/playlab_events_2.png
        text: Alguns exemples d'esdeveniments s'activen amb un clic del ratolí, una
          tecla de fletxa o quan es toca la pantalla.
      3:
        image: notes/playlab_events_3.png
        text: Here, we're going to make the space bot greet the earthlings when a
          player clicks on him. We'll use the "when clicked" block and attach the
          "say" block to it. When the player clicks on the space bot, everything attached
          to this "when clicked" event block will be performed. What does your alien
          say?
      4:
        image: notes/playlab_events_4.png
        text: There are also "when arrow" blocks. If you link the "move" blocks to
          these, you can start to move your actors up, down, left, or right. Step
          by step, your game is getting more interactive.
    playlab_repeat_forever:
      1:
        image: notes/playlab_repeat_forever_1.png
        text: Aquest és el bloc de "repetir per sempre". Qualsevol cosa dins d'aquest
          bloc es repetirà eternament al joc.
      2:
        image: notes/playlab_repeat_forever_2.png
        text: Si volem que l'actor faci alguna cosa repetidament, sense que el jugador
          hagi de fer res, posarem els blocs dins del bloc "repetir per sempre".
      3:
        image: notes/playlab_repeat_forever_3.png
        text: In this next puzzle, our goal is to help the wizard patrol the boundaries
          of the kingdom, left and right continuously. Learning how the repeat commands
          works, will save you a ton of time later when you build your own game.
