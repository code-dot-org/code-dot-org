{
  "pl-PL": {
    "data": {
      "programming_environments": {
        "applab": {
          "categories": {
            "advanced": {
              "expressions": {
                "setStyle": {
                  "palette_params": {
                    "css": {
                      "type": "Łańcuch"
                    },
                    "id": {
                      "type": "Łańcuch"
                    }
                  }
                }
              },
              "name": "Zaawansowane"
            },
            "canvas": {
              "expressions": {
                "circle": {
                  "examples": {
                    "Example: One Circle": {
                      "name": "Przykład: Jeden okrąg"
                    },
                    "Example: Red Dot": {
                      "name": "Przykład: Czerwona kropka"
                    },
                    "Example: Red Line  ": {
                      "name": "Przykład: Czerwona linia  "
                    },
                    "Example: Two Circles": {
                      "name": "Przykład: Dwa okręgi"
                    }
                  },
                  "palette_params": {
                    "radius": {
                      "description": "Promień okręgu w pikselach.",
                      "type": "liczba"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Rysuje okrąg na aktywnym obszarze z jego środkiem w określonym położeniu (x, y) i określonym promieniu."
                },
                "clearCanvas": {
                  "examples": {
                    "Example: Clear a square": {
                      "name": "Przykład: Wyczyść kwadrat"
                    }
                  }
                },
                "createCanvas": {
                  "palette_params": {
                    "[height]": {
                      "type": "liczba"
                    },
                    "[width]": {
                      "type": "liczba"
                    }
                  }
                },
                "drawImage": {
                  "examples": {
                    "Example: Set width and height": {
                      "name": "Przykład: Ustaw szerokość i wysokość"
                    }
                  },
                  "palette_params": {
                    "[height]": {
                      "type": "liczba"
                    },
                    "[width]": {
                      "type": "liczba"
                    },
                    "id": {
                      "description": "Pozycja x w pikselach lewego górnego rogu obrazka do wstawienia."
                    },
                    "x": {
                      "description": "Pozycja x w pikselach lewego górnego rogu obrazka do wstawienia.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach lewego górnego rogu obrazka do wstawienia.",
                      "type": "liczba"
                    }
                  }
                },
                "drawImageURL": {
                  "examples": {
                    "Example: Draw a cat": {
                      "name": "Przykład: Narysuj kota"
                    },
                    "Example: Greyscale": {
                      "name": "Przykład: Skala szarości"
                    }
                  }
                },
                "getAlpha": {
                  "examples": {
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    },
                    "Example: How Transparent?": {
                      "name": "Przykład: Jak przezroczysty?"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  },
                  "short_description": "Zwraca wartość alfy (przezroczystość) (od 0 do 255) koloru piksela znajdującego się na pozycji x i y w danym obrazku."
                },
                "getBlue": {
                  "examples": {
                    "Example: From a Pixel": {
                      "name": "Przykład: Z piksela"
                    },
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  }
                },
                "getGreen": {
                  "examples": {
                    "Example: From a Pixel": {
                      "name": "Przykład: Z piksela"
                    },
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  }
                },
                "getImageData": {
                  "palette_params": {
                    "height": {
                      "description": "Wysokość prostokąta wyznaczającego obszar, z którego zostanie przechwycony fragment obrazka.",
                      "type": "liczba"
                    },
                    "width": {
                      "description": "Szerokość prostokąta wyznaczającego obszar, z którego zostanie przechwycony fragment obrazka.",
                      "type": "liczba"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach, od której będzie przechwycony fragment obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach, od której będzie przechwycony fragment obrazka.",
                      "type": "liczba"
                    }
                  }
                },
                "getRed": {
                  "examples": {
                    "Example: From a Pixel": {
                      "name": "Przykład: Z piksela"
                    },
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "liczba"
                    },
                    "x2": {
                      "type": "liczba"
                    },
                    "y1": {
                      "type": "liczba"
                    },
                    "y2": {
                      "type": "liczba"
                    }
                  }
                },
                "putImageData": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach, na której będzie lewy górny róg obrazka wstawionego na płótnie.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach, na której będzie lewy górny róg obrazka wstawionego na płótnie.",
                      "type": "liczba"
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "height": {
                      "description": "Wysokość prostokąta z płótnem w pikselach.",
                      "type": "liczba"
                    },
                    "width": {
                      "description": "Szerokość prostokąta z płótnem w pikselach.",
                      "type": "liczba"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach lewego górnego rogu prostokąta.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach lewego górnego rogu prostokąta.",
                      "type": "liczba"
                    }
                  }
                },
                "setAlpha": {
                  "palette_params": {
                    "alphaValue": {
                      "description": "Wartość alfy (przezroczystości) (od 0 do 255) do ustawienia w pikselu.",
                      "type": "liczba"
                    },
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  },
                  "short_description": "Ustawia wartość alfy (przezroczystość) (od 0 do 255) koloru piksela znajdującego się na pozycji x i y w danym obrazku."
                },
                "setBlue": {
                  "palette_params": {
                    "blueValue": {
                      "description": "Ilość koloru niebieskiego (wartość od 0 do 255) do ustawienia w pikselu.",
                      "type": "liczba"
                    },
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  },
                  "short_description": "Ustawia ilość koloru niebieskiego (wartość od 0 do 255) w kolorze piksela znajdującego się na pozycji x i y w danym obrazku na wprowadzoną wartość blueValue."
                },
                "setFillColor": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setGreen": {
                  "palette_params": {
                    "greenValue": {
                      "description": "Ilość koloru zielonego (wartość od 0 do 255) do ustawienia w pikselu.",
                      "type": "liczba"
                    },
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  },
                  "short_description": "Ustawia ilość koloru zielonego (wartość od 0 do 255) w kolorze piksela znajdującego się na pozycji x i y w danym obrazku na wprowadzoną wartość greenValue."
                },
                "setRGB": {
                  "palette_params": {
                    "alpha": {
                      "description": "Opcjonalne. Wartość przezroczystości (od 0 do 255) do ustawienia w pikselu. Domyślnie wynosi 255 (nieprzezroczyste).",
                      "type": "liczba"
                    },
                    "blue": {
                      "description": "Ilość koloru niebieskiego (wartość od 0 do 255) do ustawienia w pikselu.",
                      "type": "liczba"
                    },
                    "green": {
                      "description": "Ilość koloru zielonego (wartość od 0 do 255) do ustawienia w pikselu.",
                      "type": "liczba"
                    },
                    "imageData": {
                      "type": "obiekt"
                    },
                    "red": {
                      "description": "Ilość koloru czerwonego (wartość od 0 do 255) do ustawienia w pikselu.",
                      "type": "liczba"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  }
                },
                "setRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "redValue": {
                      "description": "Ilość koloru czerwonego (wartość od 0 do 255) do ustawienia w pikselu.",
                      "type": "liczba"
                    },
                    "x": {
                      "description": "Pozycja x w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Pozycja y w pikselach licząc od lewego górnego rogu obrazka.",
                      "type": "liczba"
                    }
                  },
                  "short_description": "Ustawia ilość koloru czerwonego (wartość od 0 do 255) w kolorze piksela znajdującego się na pozycji x i y w danym obrazku na wprowadzoną wartość redValue."
                },
                "setStrokeColor": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setStrokeWidth": {
                  "palette_params": {
                    "width": {
                      "type": "liczba"
                    }
                  }
                }
              }
            },
            "circuit": {
              "expressions": {
                "blink": {
                  "examples": {
                    "Simple Button Press": {
                      "name": "Proste naciśnięcie przycisku"
                    }
                  },
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "buzzer.frequency": {
                  "palette_params": {
                    "duration": {
                      "type": "liczba"
                    },
                    "frequency": {
                      "type": "liczba"
                    }
                  }
                },
                "buzzer.note": {
                  "palette_params": {
                    "duration": {
                      "type": "liczba"
                    }
                  }
                },
                "buzzer.play": {
                  "palette_params": {
                    "tempo": {
                      "type": "Liczba"
                    }
                  }
                },
                "buzzer.playNotes": {
                  "palette_params": {
                    "notes": {
                      "description": "Tablica nut (takich jak '['C4', 'D4', 'E4']`). Każda nuta będzie odtwarzana w kolejności od pierwszej (indeks 0) do ostatniej (indeks`notes.length - 1\\`)."
                    },
                    "tempo": {
                      "type": "Liczba"
                    }
                  }
                },
                "buzzer.playSong": {
                  "palette_params": {
                    "notes": {
                      "description": "Jest to dwuwymiarowa tablica nut i czasu trwania (np. `[['C4'], 1], [['D4'], 1/2], [['E4'], 1/4]`). Każda nuta będzie odtwarzana w kolejności od pierwszej do ostatniej w odpowiedniej długości nuty."
                    },
                    "tempo": {
                      "type": "Liczba"
                    }
                  }
                },
                "color": {
                  "palette_params": {
                    "blue": {
                      "type": "liczba"
                    },
                    "green": {
                      "type": "liczba"
                    },
                    "red": {
                      "type": "liczba"
                    }
                  }
                },
                "intensity": {
                  "palette_params": {
                    "brightness": {
                      "type": "liczba"
                    }
                  }
                },
                "isPressed": {
                  "return_value": "Wartość logiczna"
                },
                "led.blink": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "led.pulse": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "onBoardEvent": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    }
                  }
                },
                "pulse": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "toggleSwitch.isOpen": {
                  "return_value": "Wartość logiczna"
                }
              }
            },
            "control": {
              "expressions": {
                "clearInterval": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "description": "Wartość zwracana przez funkcję setTimeout do anulowania.",
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "forLoop_i_0_4": {
                  "examples": {
                    "Example: Count Down": {
                      "description": "Odliczanie do zera od dziesięciu przy użyciu ujemnego przyrostu.",
                      "name": "Przykład: Odliczanie"
                    },
                    "Example: Flower": {
                      "name": "Przykład: Kwiat"
                    },
                    "Example: One Inch": {
                      "name": "Przykład: Jeden cal"
                    }
                  },
                  "palette_params": {
                    "condition": {
                      "type": "Wyrażenia logiczne"
                    }
                  }
                },
                "getTime": {
                  "examples": {
                    "Example: Five Clicks": {
                      "name": "Przykład: Pięć kliknięć"
                    },
                    "Example: How Fast?": {
                      "name": "Przykład: Jak szybko?"
                    }
                  }
                },
                "ifBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "ifElseBlock": {
                  "examples": {
                    "Example: Even or Odd": {
                      "description": "Określa, czy liczba losowa jest parzysta czy nieparzysta.",
                      "name": "Przykład: parzysty lub nieparzysty"
                    }
                  },
                  "palette_params": {
                    "condition": {
                      "type": "Wyrażenia logiczne"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "setInterval": {
                  "examples": {
                    "Example: Set Interval": {
                      "name": "Przykład: Ustaw przedział"
                    }
                  },
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "ms": {
                      "description": "Ilość milisekund pomiędzy każdym wykonaniem funkcji.",
                      "type": "liczba"
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "ms": {
                      "description": "Liczba milisekund, która upłynie przed wykonaniem funkcji.",
                      "type": "liczba"
                    }
                  }
                },
                "stopTimedLoop": {
                  "palette_params": {
                    "loop": {
                      "type": "Liczba"
                    }
                  }
                },
                "timedLoop": {
                  "palette_params": {
                    "callback": {
                      "type": "Funkcja"
                    },
                    "ms": {
                      "type": "Liczba"
                    }
                  }
                },
                "whileBlock": {
                  "return_value": "Brak wartości zwracanej."
                }
              }
            },
            "data": {
              "expressions": {
                "createRecord": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "record": {
                      "type": "obiekt"
                    }
                  }
                },
                "createRecordSync": {
                  "palette_params": {
                    "record": {
                      "type": "Obiekt"
                    },
                    "table": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "deleteRecord": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "record": {
                      "type": "obiekt"
                    }
                  }
                },
                "drawChart": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "options": {
                      "type": "obiekt"
                    }
                  }
                },
                "drawChartFromRecords": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "options": {
                      "type": "obiekt"
                    },
                    "tableName": {
                      "description": "Nazwa tabeli, z której pobiera rekordy."
                    }
                  }
                },
                "getColumn": {
                  "palette_params": {
                    "column": {
                      "type": "Łańcuch"
                    },
                    "table": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "getKeyValue": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "key": {
                      "description": "Nazwa klucza, który ma być pobrany."
                    }
                  }
                },
                "getPrediction": {
                  "palette_params": {
                    "callback": {
                      "type": "Funkcja"
                    },
                    "data": {
                      "type": "Obiekt"
                    },
                    "id": {
                      "type": "Łańcuch"
                    },
                    "name": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "getUserId": {
                  "short_description": "Pobierz unikalny identyfikator dla obecnego użytkownika tej aplikacji."
                },
                "onRecordEvent": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "includeAll": {
                      "type": "wartość logiczna"
                    },
                    "table": {
                      "description": "Nazwa tabeli, której dotyczy ten kontroler zdarzeń."
                    }
                  }
                },
                "readRecords": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "terms": {
                      "type": "obiekt"
                    }
                  }
                },
                "readRecordsSync": {
                  "palette_params": {
                    "table": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setKeyValue": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "key": {
                      "description": "Nazwa klucza, który ma być przechowywany."
                    },
                    "value": {
                      "description": "Dane, które mają być przechowywane."
                    }
                  },
                  "short_description": "Przechowuje parę klucz/wartość w magazynie danych klucz/wartość App Lab i wywołuje funckcję zwrotną po zakończeniu akcji."
                },
                "startWebRequest": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "url": {
                      "description": "Adres internetowy usługi, która zwraca dane."
                    }
                  }
                },
                "updateRecord": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "record": {
                      "type": "obiekt"
                    }
                  }
                }
              },
              "name": "Dane"
            },
            "functions": {
              "expressions": {
                "callMyFunction_n": {
                  "palette_params": {
                    "param1, ... paramN": {
                      "type": "Dowolny"
                    }
                  }
                },
                "comment": {
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu."
                },
                "functionParams_n": {
                  "palette_params": {
                    "param1, param2, ..., paramN": {
                      "type": "Dowolny"
                    }
                  }
                },
                "return": {
                  "palette_params": {
                    "__": {
                      "type": "Dowolny"
                    }
                  }
                }
              },
              "name": "Funkcje"
            },
            "maker": {
              "expressions": {
                "createButton": {
                  "palette_params": {
                    "Pin": {
                      "type": "liczba"
                    }
                  }
                },
                "createLed": {
                  "palette_params": {
                    "Pin": {
                      "type": "liczba"
                    }
                  }
                },
                "pinMode": {
                  "palette_params": {
                    "mode": {
                      "type": "Łańcuch"
                    },
                    "pin": {
                      "type": "Liczba"
                    }
                  }
                }
              }
            },
            "math": {
              "expressions": {
                "addOperator": {
                  "examples": {
                    "Adding a Few Things": {
                      "name": "Dodawanie kilku rzeczy"
                    }
                  },
                  "palette_params": {
                    "value1": {
                      "type": "Dowolny"
                    },
                    "value2": {
                      "type": "Dowolny"
                    }
                  }
                },
                "andOperator": {
                  "examples": {
                    "Working 9 to 5": {
                      "description": "Określa, czy są to aktualnie godziny pracy.",
                      "name": "Praca od 9 do 5"
                    }
                  },
                  "palette_params": {
                    "expression1": {
                      "type": "wartość logiczna"
                    },
                    "expression2": {
                      "type": "wartość logiczna"
                    }
                  },
                  "return_value": "Boolean (prawda lub fałsz)"
                },
                "divideOperator": {
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "equalityOperator": {
                  "examples": {
                    "Example: \"Alan Turing\" equals \"ALAN TURING\"?": {
                      "name": "Przykład: „Alan Turing” równa się „ALAN TURING”?"
                    },
                    "Example: 5 equals \"5\"?": {
                      "name": "Przykład: 5 równa się „5\"?"
                    }
                  },
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "greaterThanOperator": {
                  "palette_params": {
                    "__": {
                      "type": "dowolny"
                    }
                  },
                  "return_value": "Boolean (prawda lub fałsz)"
                },
                "greaterThanOrEqualOperator": {
                  "palette_params": {
                    "__": {
                      "type": "dowolny"
                    }
                  }
                },
                "inequalityOperator": {
                  "examples": {
                    "Example: 5 equals \"5\"?": {
                      "description": "\\*\\*Przykład: 5 równa się „5\"? \\*\\* Konwersja łańcucha liczb na liczbę jest automatyczna w App Lab.",
                      "name": "Przykład: 5 równa się „5\"?"
                    },
                    "Example: 5 equals \"five\"?": {
                      "description": "\\*\\*Przykład: 5 równa się „pięć”? \\*\\* Konwersja łańcucha słów na liczbę nie jest automatyczna w App Lab."
                    }
                  },
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "lessThanOperator": {
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "lessThanOrEqualOperator": {
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "mathAbs": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMax": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMin": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathPow": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "mathRound": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "multiplyOperator": {
                  "palette_params": {
                    "num1": {
                      "type": "dowolny"
                    },
                    "num2": {
                      "type": "dowolny"
                    }
                  }
                },
                "notOperator": {
                  "examples": {
                    "Example: Working 9 to 5": {
                      "description": "Określa, czy są to aktualnie godziny pracy."
                    }
                  },
                  "palette_params": {
                    "expression": {
                      "type": "wartość logiczna"
                    }
                  }
                },
                "orOperator": {
                  "palette_params": {
                    "expression1": {
                      "type": "wartość logiczna"
                    },
                    "expression2": {
                      "type": "wartość logiczna"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "max": {
                      "description": "Zwrócona największa liczba",
                      "type": "liczba"
                    },
                    "min": {
                      "description": "Zwrócona najmniejsza liczba",
                      "type": "liczba"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "max": {
                      "description": "Zwrócona największa liczba",
                      "type": "liczba"
                    },
                    "min": {
                      "description": "Zwrócona najmniejsza liczba",
                      "type": "liczba"
                    }
                  }
                },
                "subtractOperator": {
                  "palette_params": {
                    "Name": {
                      "type": "dowolny"
                    }
                  }
                }
              },
              "name": "Matematyka"
            },
            "micro_bit": {
              "expressions": {
                "ledScreen.clear": {
                  "content": "Służy do wyłączania wszystkich diod LED wcześniej aktywowanych na wyświetlaczu micro:bita.",
                  "examples": {
                    "Turn off the 4 Corner lights": {
                      "description": "Korzystając z ledScreen.clear(), wyłączysz 4 diody LED znajdujące się w rogach płytki.",
                      "name": "Wyłącz 4 światła narożne"
                    },
                    "Vanishing Diagonal Lines": {
                      "description": "Kliknij przycisk A, aby wyłączyć każdą diodę LED",
                      "name": "Znikające ukośne linie"
                    }
                  },
                  "short_description": "Wyłącza wszystkie diody LED na wyświetlaczu LED",
                  "tips": "Użyj ledscreen.clear () z blokiem `OnboardEvent`"
                },
                "ledScreen.display": {
                  "content": "W tablicy wyświetlania użyjesz 1 lub 0 jako parametru, aby włączyć lub wyłączyć diodę LED. Tablica składa się z 5 linii 5 diod (parametrów), z każdą włączoną, gdy blok jest po raz pierwszy użyty w kodzie. Aby wyłączyć poszczególne diody LED, zastąp 1 przez 0.",
                  "examples": {
                    "Beating Heart": {
                      "description": "ledscreen.display (boardArray) i dwa onboardEvents z przyciskiem A, aby utworzyć animację bijącego serca.",
                      "name": "Bijące serce"
                    },
                    "Diamond": {
                      "description": "Korzystanie z ledscreen.display (boardArray) tworzy kształt diamentu na wyświetlaczu micro:bita. Pomyśl o innych kształtach, które możesz stworzyć podobnie",
                      "name": "Diament"
                    }
                  },
                  "palette_params": {
                    "boardArray": {
                      "description": "Użyj 1s i 0s w tablicy, aby włączyć i wyłączyć diody LED.",
                      "type": "Tablica tablic"
                    }
                  },
                  "short_description": "Kontroluj, które diody LED są włączone lub wyłączone",
                  "tips": "Użyj 1, aby aktywować diodę LED w tablicy\n\nUżyj 0, aby dezaktywować diodę LED w tablicy"
                },
                "ledScreen.off": {
                  "content": "Wyłącz diody LED na micro:bicie\n\nledScreen.off(0, 0); polecenie pozwala na wyłączenie poszczególnych diod LED na micro:bicie. Micro:bit ma 25 diod LED rozmieszczonych w siatce 5x5, które można wyłączyć indywidualnie używając współrzędnych x, y. ",
                  "examples": {
                    "Every Other Light On": {
                      "description": "Po naciśnięciu przycisku A każda dioda LED w pierwszej kolumnie włączy się. Po naciśnięciu przycisku B dwie diody LED wyłączają się.",
                      "name": "Każda inna włączona"
                    },
                    "Shape Reveal": {
                      "description": "Czy potrafisz zgadnąć, jaki kształt zostanie pokazany? \n\nPo naciśnięciu przycisku A, niektóre diody LED zostaną wyłączone, aby odsłonić kształt.",
                      "name": "Ujawnij kształt"
                    },
                    "Winking Smile": {
                      "description": "Mrugając lewym okiem na uśmiechniętej buźce.",
                      "name": "Mrugający uśmiech"
                    }
                  },
                  "palette_params": {
                    "x": {
                      "description": "Położenie x określa położenie diod LED na siatce współrzędnych 5x5. (0,1,2,3,4)",
                      "type": "Liczba"
                    },
                    "y": {
                      "description": "Położenie y określa położenie diod LED na siatce współrzędnych 5x5. (0,1,2,3,4)",
                      "type": "Liczba"
                    }
                  },
                  "short_description": "Wyłącz diody LED na micro:bicie",
                  "tips": "Dioda LED umieszczona w lewym górnym rogu micro:bitu to pozycja (0,0)\n\n![](https://images.code.org/126cab46e3188fc496d4c618e8cfee03-image-1676328086265.png)"
                },
                "ledScreen.on": {
                  "content": "Włącz diody LED na micro:bicie\n\nledScreen.on(0, 0); polecenie pozwala na włączenie poszczególnych diod LED na micro:bicie. Micro:bit ma 25 diod LED rozmieszczonych w siatce 5x5, które można włączyć indywidualnie używając współrzędnych x, y. ",
                  "examples": {
                    "Four Corners": {
                      "description": "Włącz każdą diodę LED znajdującą się w każdym rogu micro:bita"
                    },
                    "X Marks the Spot": {
                      "description": "Włącz diody LED, aby utworzyć X ",
                      "name": "X oznacza miejsce"
                    }
                  },
                  "palette_params": {
                    "x": {
                      "description": "Położenie x określa położenie diod LED na siatce współrzędnych 5x5. ",
                      "type": "Liczba"
                    },
                    "y": {
                      "description": "Położenie y określa położenie diod LED na siatce współrzędnych 5x5. ",
                      "type": "Liczba"
                    }
                  },
                  "short_description": "Włącz diody LED na micro:bicie",
                  "tips": "Dioda LED umieszczona w lewym górnym rogu micro:bitu to pozycja (0,0)\n\n![](https://images.code.org/126cab46e3188fc496d4c618e8cfee03-image-1676328086265.png)"
                },
                "ledScreen.scrollNumber": {
                  "content": "Tworzy przewijany wyświetlacz liczb za pomocą diod LED w nieprzrwanej pętli. Przewijanie jest wyświetlane od lewej do prawej. ",
                  "examples": {
                    "Count Down and Up Timer": {
                      "description": "Za pomocą przycisku A i B utwórz timer, który będzie odliczał w dół od 9 i odliczał w górę od 1",
                      "name": "Odliczanie do dołu i do góry Timera"
                    },
                    "You are number one": {
                      "description": "Wyświetla liczbę 1 po naciśnięciu przycisku A",
                      "name": "Jesteś numerem jeden"
                    }
                  },
                  "palette_params": {
                    "number": {
                      "description": "Użyta liczba zostanie wyświetlona jako wartość pokazana w przewijaniu diod LED. Jeśli liczba jest zbyt duża, aby można ją było zobaczyć jednocześnie, będzie pokazywana od lewej do prawej.",
                      "type": "Liczba"
                    }
                  },
                  "short_description": "Wyświetl przewijane liczby na wyświetlaczu LED",
                  "tips": "W przypadku użycia bez bloku `OnEvent`, przewijanie powtórzy się\n\nMożna użyć tylko liczb "
                },
                "ledScreen.scrollString": {
                  "content": "Sprawi, że tekst, cyfry i znaki interpunkcji pojawią się na wyświetlaczu LED. Tekst będzie przewijany od lewej do prawej. W celu wyświetlenia tekst musi on być umieszczony wewnątrz cudzysłowów.",
                  "examples": {
                    "Are you Happy or Sad?": {
                      "description": "Odpowiedz, jak się czujesz, używając światów i/lub symboli do wyświetlania tekstu reprezentującego emocje, które odczuwasz. \n\n-   Przycisk A → Szczęśliwy :) \n-   Przycisk B → Smutny :( ",
                      "name": "Jesteś szczęśliwy czy smutny?"
                    },
                    "Name Badge": {
                      "description": "Utwórz plakietkę z imieniem za pomocą ledscreen.scrollString(string), aby wyświetlić swoje imię na wyświetlaczu LED",
                      "name": "Plakietka z imieniem"
                    }
                  },
                  "palette_params": {
                    "String": {
                      "description": "Używaj liter, cyfr i znaków interpunkcyjnych wewnątrz cudzysłowów, aby wyświetlić je na wyświetlaczu LED",
                      "type": "Łańcuch"
                    }
                  },
                  "short_description": "Wyświetla litery, cyfry i znaki interpunkcyjne ",
                  "tips": "Musi umieścić tekst wewnątrz \" \", aby był wyświetlany"
                },
                "ledScreen.toggle": {
                  "content": "Spowoduje to włączenie diod LED, gdy są wyłączone i ich wyłączenie, gdy są włączone. Określ, która dioda LED ma być kontrolowana, używając współrzędnych x, y.",
                  "examples": {
                    "Turn on and off the center LED light": {
                      "description": "Użyj przycisku A, aby włączyć i wyłączyć środkowe diody LED (2,2)",
                      "name": "Włącz i wyłącz środkowe światło LED"
                    },
                    "Yes and No Question Response Pad": {
                      "description": "Użyj przycisków A i B, aby włączyć i wyłczyć: Y dla TAK (A) i N dla NIE (B) za pomocą diod LED.",
                      "name": "Podkładka odpowiedzi Tak i Nie na pytanie"
                    }
                  },
                  "palette_params": {
                    "x": {
                      "description": "Położenie x diody LED do włączania i wyłączania",
                      "type": "Liczba"
                    },
                    "y": {
                      "description": "Położenie y diody LED do włączania i wyłączania",
                      "type": "Liczba"
                    }
                  },
                  "short_description": "Włącza i wyłącza diody LED",
                  "tips": "Użyj ledscreen.toggle (x, y) z blokiem `onBoardEvent`. Wartości x i y rozpoczynają się od (0, 0) w lewym górnym rogu.\n\n![](https://images.code.org/126cab46e3188fc496d4c618e8cfee03-image-1676328086265.png)"
                }
              },
              "name": "micro:bit"
            },
            "turtle": {
              "expressions": {
                "arcLeft": {
                  "examples": {
                    "Example: Negative Angle": {
                      "description": "arcLeft zawsze przesuwa żółwia w kierunku przeciwnym do ruchu wskazówek zegara. Dla ujemnego _angle_ żółw przesuwa się o (360+_angle_) stopni."
                    }
                  },
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    },
                    "radius": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Przesuwa żółwia do przodu i w lewo po gładkim, okrągłym łuku."
                },
                "arcRight": {
                  "examples": {
                    "Example: U-Turn": {
                      "description": "Płynnie obróć żółwia."
                    }
                  },
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    },
                    "radius": {
                      "type": "liczba"
                    }
                  }
                },
                "dot": {
                  "palette_params": {
                    "radius": {
                      "type": "liczba"
                    }
                  }
                },
                "getDirection": {
                  "return_value": "Zwraca liczbę całkowitą z zakresu od 0 do 359 reprezentującą kierunek, w którym zwrócony jest żółw. ",
                  "short_description": "Zwraca bieżący kierunek, w którym zwrócony jest ten żółw. Zero stopni oznacza, że jest skierowany w górę. Kierunek zwiększa zgodnie z ruchem wskazówek zegara."
                },
                "getX": {
                  "content": "Współrzędna x to odległość żółwia od lewej strony ekranu.",
                  "examples": {
                    "Am I off the screen?": {
                      "name": "Czy jestem poza ekranem?"
                    },
                    "To the Right": {
                      "description": "Przesuń żółwia o 50 pikseli w prawo."
                    }
                  },
                  "short_description": "Pobiera aktualną współrzędną x żółwia w pikselach."
                },
                "getY": {
                  "short_description": "Pobiera aktualną współrzędną y żółwia w pikselach."
                },
                "hide": {
                  "short_description": "Ukrywa żółwia na jego obecnej pozycji."
                },
                "move": {
                  "palette_params": {
                    "x": {
                      "description": "Liczba pikseli, o którą przesunąć żółwia w prawo.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Liczba pikseli, o którą przesunąć żółwia w dół.",
                      "type": "liczba"
                    }
                  }
                },
                "moveBackward": {
                  "palette_params": {
                    "pixels": {
                      "description": "Liczba pikseli, o którą przesunąć żółwia do tyłu od jego aktualnego kierunku. Jeśli nie jest podana, żółw przesunie się naprzód o 25 pikseli",
                      "type": "liczba"
                    }
                  },
                  "short_description": "Przesuwa żółwia do tyłu o daną ilość pikseli od aktualnego kierunku.",
                  "tips": "-   Użyj [penUp()](/docs/applab/penUp) przed wywołaniem moveBackward (), aby żółw nie rysował podczas ruchu.\n-   Domyślny rozmiar ekranu to 320 pikseli szerokości i 450 pikseli wysokości, ale możesz przesunąć żółwia poza ekran, wykraczając poza te wymiary.\n-   Istnieją trzy sposoby przesuwania żółwia w linii prostej:\n    -   Określ liczbę pikseli, aby przesunąć żółwia w kierunku, w którym jest skierowany korzystając z [moveForward(pixels)](/docs/applab/moveForward) lub moveBackward(pixels).\n    -   Określ liczbę pikseli w kierunku x i y, aby przesunąć żółwia korzystając z [move(x,y)](/docs/applab/move), niezależnie od kierunku, w którym żółw jest zwrócony.\n    -   Określ współrzędne x i y na ekranie, aby przesunąć żółwia korzystając z [moveTo(x,y)](/docs/applab/moveTo), niezależnie od kierunku, w którym zwrócony jest żółw."
                },
                "moveForward": {
                  "content": "moveForward() jest najprostszym sposobem na przesunięcie żółwia w linii prostej w kierunku, w którym jest skierowany. W użyciu z turnLeft() oraz turnRight() możesz przemieszczać żółwia w dowolne miejsce lub rysować dowolne obrazy z prostych linii.",
                  "palette_params": {
                    "pixels": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Przesuwa żółwia naprzód o daną ilość pikseli w jego aktualnym kierunku."
                },
                "moveTo": {
                  "palette_params": {
                    "x": {
                      "description": "Współrzędna x na ekranie, na którą przesunąć żółwia.",
                      "type": "liczba"
                    },
                    "y": {
                      "description": "Współrzędna y na ekranie, na którą przesunąć żółwia.",
                      "type": "liczba"
                    }
                  },
                  "short_description": "Przesuwa żółwia na konkretne (x,y) współrzędne na ekranie."
                },
                "penColor": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  },
                  "short_description": "Ustawia kolor pióra używanego przez żółwia do rysowania linii i kropek."
                },
                "penDown": {
                  "short_description": "Opuszcza pióro, aby żółw rysował linię podczas ruchu."
                },
                "penRGB": {
                  "palette_params": {
                    "a": {
                      "type": "liczba"
                    },
                    "b": {
                      "type": "liczba"
                    },
                    "g": {
                      "type": "liczba"
                    },
                    "r": {
                      "type": "Liczba"
                    }
                  },
                  "short_description": "Używając wartości RGBA, ustawia kolor pióra używanego przez żółwia do rysowania linii i kropek."
                },
                "penUp": {
                  "short_description": "Podnosi pióro, aby żółw nie rysował linii podczas ruchu."
                },
                "penWidth": {
                  "palette_params": {
                    "width": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Ustawia szerokość linii w pikselach, którą żółw rysuje podczas ruchu."
                },
                "show": {
                  "short_description": "Sprawia, że żółw jest widoczny w obecnym miejscu."
                },
                "speed": {
                  "palette_params": {
                    "value": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Ustawia szybkość wykonywania aplikacji, w tym prędkość żółwia."
                },
                "turnLeft": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Obraca żółwia w lewo o określony kąt. Pozycja żółwia pozostaje taka sama."
                },
                "turnRight": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Obraca żółwia w prawo o określony kąt. Pozycja żółwia pozostaje taka sama."
                },
                "turnTo": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    }
                  },
                  "short_description": "Zmienia kierunek żółwia na okreśony kąt. 0 to góra, 90 to prawo, 180 to dół, a 270 to lewo."
                }
              }
            },
            "ui_controls": {
              "expressions": {
                "button": {
                  "content": "Tworzy na ekranie przycisk wyświetlający podany _text_ i do którego odwołuje się dane _id_ na domyślnej pozycji (0,0).\n\nWiele aplikacji używa przycisków, aby pozwolić użytkownikowi zainicjować niektóre działania aplikacji. Kontroler zdarzeń musi zostać stworzony na każdy rodzaj interakcji użytkownika z przyciskiem używając [`onEvent()`(#fff176)](/docs/applab/onEvent/) oraz _id_.",
                  "examples": {
                    "Example: Simple Turtle Control 1": {
                      "description": "Przesuń żółwia do przodu za każdym wciśnięciem przycisku.",
                      "name": "Przykład: Proste sterowanie żółwiem 1"
                    },
                    "Example: Simple Turtle Control 2": {
                      "description": "Przesuń żółwia do przodu lub do tyłu w zależności od wciśniętego przycisku.",
                      "name": "Przykład: Proste sterowanie żółwiem 2"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "Unikalny identyfikator przycisku. id służy do odwoływania się do przycisku w kontrolerach zdarzeń lub innych funkcjach modyfikujących elementy interfejsu użytkownika. Musi zaczynać się od litery, nie zawierać spacji,  i może zawierać litery, cyfry, - oraz \\_."
                    },
                    "text": {
                      "description": "Tekst wyświetlany na przycisku. "
                    }
                  },
                  "short_description": "Tworzy na ekranie przycisk wyświetlający podany tekst i do którego odwołuje się przez dany id, na domyślnej pozycji (0,0)."
                },
                "checkbox": {
                  "examples": {
                    "Example: Checkbox Click Event": {
                      "description": "Pobierz i wyświetl wartość pola wyboru."
                    },
                    "Example: Privacy Statement": {
                      "name": "Przykład: Oświadczenie o ochronie prywatności"
                    }
                  },
                  "palette_params": {
                    "checked": {
                      "description": "Czy pole wyboru jest początkowo zaznaczone.",
                      "type": "wartość logiczna"
                    },
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_. |"
                    }
                  },
                  "short_description": "Tworzy na ekranie pole wyboru z początkowo określoną wartością logiczną checked i do którego odwołuje się przez dany id, na domyślnej pozycji (0,0)."
                },
                "deleteElement": {
                  "examples": {
                    "Delete on Click": {
                      "name": "Usuń po Kliknięciu"
                    },
                    "Squash the ant swarm!": {
                      "description": " Mrówki będą losowo pojawiać się na ekranie co sekundę przez minutę. Kliknij mrówkę, aby ją zgnieść i usunąć z ekranu.",
                      "name": "Zgnieć rój mrówek!"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, do którego odwołuje się ten kontroler zdarzeń. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  },
                  "short_description": "Usuwa element o podanym id."
                },
                "dropdown": {
                  "examples": {
                    "Example Simple Form": {
                      "name": "Przykład: Prosta forma"
                    },
                    "Example Two Moods": {
                      "name": "Przykład: Dwa nastroje"
                    }
                  },
                  "palette_params": {
                    "option1": {
                      "description": "Tekst wyświetlany na rozwijanym menu."
                    },
                    "option2": {
                      "description": "Tekst wyświetlany na rozwijanym menu."
                    }
                  }
                },
                "getChecked": {
                  "examples": {
                    "Example: Finding the Checked Item": {
                      "name": "Przykład: Szukanie Zaznaczonego Elementu"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": " Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz.",
                  "short_description": "Pobiera stan pola wyboru lub przycisku radiowego.",
                  "tips": "-   Pole wyboru lub przycisk radiowy można również utworzyć w trybie projektowania."
                },
                "getImageURL": {
                  "examples": {
                    "Example: Image Swap": {
                      "description": "Wciśnij przycisk, aby zmienić obrazek postaci z psa na pszczołę i z powrotem.",
                      "name": "Przykład: Zamiana Obrazków"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  },
                  "return_value": "Zwraca ciąg znaków zawierający url obrazka dla danego id.",
                  "short_description": "Pobiera adres URL dla danego id elementu obrazka.",
                  "tips": "-   Zwrócony ciąg zawiera URL obrazka. Na przykład zwraca http\\:// code.org/images/logo.png jako https\\:// studio.code.org/media?u=http%3A%2F%2Fcode.org%2Fimages%2Flogo.png"
                },
                "getNumber": {
                  "examples": {
                    "Example: Fahrenheit to Celsius": {
                      "name": "Przykład: Stopnie Fahrenheita na Celsjusza"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  },
                  "return_value": "Liczba zawierająca zawartość elementu ekranu.",
                  "short_description": "Pobiera liczbę z określonego elementu ekranu."
                },
                "getProperty": {
                  "palette_params": {
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, do którego odwołuje się ta funkcja. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_.",
                      "type": "Łańcuch"
                    },
                    "property": {
                      "description": "Właściwość do pobrania.",
                      "type": "Łańcuch"
                    }
                  },
                  "short_description": "Obecna wartość właściwości wybranego elementu."
                },
                "getText": {
                  "examples": {
                    "Example Random Thoughts": {
                      "description": " Zademonstruj czytanie, a następnie czyszczenie pola TextInput.",
                      "name": "Przykład: losowe myśli"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  },
                  "return_value": "Łańcuch zawierający zawartość elementu ekranu.",
                  "short_description": "Pobiera tekst z określonego elementu ekranu.",
                  "tips": "-   [`getText ()`(#fff176)](/docs/applab/getText/) może również odczytać tekst na [`button ()`(#fff176)](/docs/applab/button/) lub [`textLabel ()`(#fff176)](/docs/applab/textLabel/)."
                },
                "getXPosition": {
                  "examples": {
                    "Am I off the screen?": {
                      "name": "Czy jestem poza ekranem?"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, którego znajduje pozycję x. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  },
                  "return_value": "Zwraca liczbę reprezentującą bieżącą współrzędną x w pikselach elementu interfejsu użytkownika w wyświetlaczu aplikacji.",
                  "short_description": "Pobiera pozycję x elementu.",
                  "tips": "-   Domyślny rozmiar ekranu to 320 pikseli szerokości i 450 pikseli wysokości, ale możesz przenieść element interfejsu użytkownika poza ekran, wykraczając poza te wymiary.\n-   Element interfejsu użytkownika można przesunąć poza ekran, zatem \\_getXPosition () \\_ może zwrócić liczbę ujemną, jeśli element znajduje się poza ekranem po lewej stronie, a \\_getXposition () \\_ może zwrócić liczbę większą niż 320, jeśli element jest poza ekranem po prawej stronie.\n\n<img src='https://images.code.org/7de9a1ac26ad8630ebcb92e608c3803c-image-1445616750775.jpg'>"
                },
                "getYPosition": {
                  "examples": {
                    "Am I off the screen?": {
                      "description": "Sprawdź, czy logo zostało wyświetlone zbyt blisko dolnej krawędzi.",
                      "name": "Czy jestem poza ekranem?"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, którego znajduje pozycję x. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  }
                },
                "hideElement": {
                  "examples": {
                    "Blinking": {
                      "description": " Spraw, by logo Code.org migotało.",
                      "name": "Miganie"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": " ID elementu interfejsu użytkownika, do którego odwołuje się ten kontroler zdarzeń. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_. "
                    }
                  },
                  "return_value": "Brak wartości zwracanej. Modyfikuje tylko wyświetlanie.",
                  "tips": "-   [showElement](/applab/docs/showElement) jest często używany z hideElement."
                },
                "image": {
                  "examples": {
                    "Example Add a Logo": {
                      "name": "Przykład Dodaj logo"
                    },
                    "Example Image Changer": {
                      "name": "Przykładowy zmieniacz obrazu"
                    }
                  }
                },
                "onEvent": {
                  "examples": {
                    "Event Details": {
                      "name": "Szczegóły zdarzenia"
                    },
                    "Shrink and Grow": {
                      "name": "Kurcz się i rośnij"
                    },
                    "The Event parameter": {
                      "name": "Parametr zdarzenia"
                    },
                    "Two Different Types": {
                      "name": "Dwa różne typy"
                    }
                  },
                  "palette_params": {
                    "callback": {
                      "type": "Funkcja"
                    },
                    "id": {
                      "type": "Łańcuch"
                    },
                    "type": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "open": {
                  "palette_params": {
                    "url": {
                      "description": "Adres URL do otwarcia."
                    }
                  },
                  "short_description": "App Lab - otwarte"
                },
                "playSound": {
                  "examples": {
                    "Example: Don't Go Too Far": {
                      "name": "Przykład: Nie idź za daleko"
                    },
                    "Making Music": {
                      "name": "Tworzenie muzyki"
                    }
                  },
                  "palette_params": {
                    "loop": {
                      "type": "Wartość logiczna"
                    }
                  },
                  "short_description": "Odtwarza plik MP3 z podanego adresu URL."
                },
                "playSpeech": {
                  "palette_params": {
                    "gender": {
                      "type": "Łańcuch"
                    },
                    "language": {
                      "type": "Łańcuch"
                    },
                    "text": {
                      "description": "Tekst do czytania na głos",
                      "type": "Łańcuch"
                    }
                  }
                },
                "radioButton": {
                  "examples": {
                    "Example: Finding the Checked Item": {
                      "name": "Przykład: Szukanie Zaznaczonego Elementu"
                    }
                  },
                  "palette_params": {
                    "checked": {
                      "type": "wartość logiczna"
                    },
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  }
                },
                "rgb": {
                  "examples": {
                    "Flag of France": {
                      "name": "Flaga Francji"
                    }
                  },
                  "palette_params": {
                    "a": {
                      "type": "Liczba"
                    },
                    "b": {
                      "type": "Liczba"
                    },
                    "g": {
                      "type": "Liczba"
                    },
                    "r": {
                      "type": "Liczba"
                    }
                  }
                },
                "setChecked": {
                  "palette_params": {
                    "checked": {
                      "type": "wartość logiczna"
                    },
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_. |"
                    }
                  }
                },
                "setImageURL": {
                  "examples": {
                    "Example: Image Swap": {
                      "description": "Wciśnij przycisk, aby zmienić obrazek postaci z psa na pszczołę i z powrotem.",
                      "name": "Przykład: Zamiana Obrazków"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  }
                },
                "setNumber": {
                  "palette_params": {
                    "id": {
                      "description": " Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    },
                    "number": {
                      "type": "liczba"
                    }
                  }
                },
                "setPosition": {
                  "palette_params": {
                    "height": {
                      "type": "liczba"
                    },
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, do którego odwołuje się ten kontroler zdarzeń. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    },
                    "width": {
                      "type": "liczba"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "setProperty": {
                  "palette_params": {
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, do którego odwołuje się ta funkcja. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_.",
                      "type": "Łańcuch"
                    },
                    "property": {
                      "description": "Właściwość do zmiany.",
                      "type": "Łańcuch"
                    }
                  },
                  "short_description": "Ustawia nową wartość właściwości dla wybranego elementu."
                },
                "setScreen": {
                  "short_description": "Ustawia ekran na ekran o danym screenId. "
                },
                "setSize": {
                  "palette_params": {
                    "height": {
                      "type": "liczba"
                    },
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, do którego odwołuje się ten kontroler zdarzeń. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    },
                    "width": {
                      "type": "liczba"
                    }
                  }
                },
                "setText": {
                  "examples": {
                    "Example Random Thoughts": {
                      "name": "Przykład: losowe myśli"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "Unikalny identyfikator elementu ekranu. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  }
                },
                "showElement": {
                  "examples": {
                    "Blinking": {
                      "name": "Miganie"
                    }
                  },
                  "palette_params": {
                    "id": {
                      "description": "ID elementu interfejsu użytkownika, do którego odwołuje się ten kontroler zdarzeń. Musi zaczynać się literą, nie zawierać spacji, może zawierać litery, cyfry, - oraz \\_."
                    }
                  },
                  "short_description": "Pokazuje element  o podanym id."
                },
                "textInput": {
                  "examples": {
                    "Example Simple Form": {
                      "name": "Przykład: Prosta forma"
                    }
                  }
                },
                "textLabel": {
                  "short_description": "Tworzy na ekranie etykietę tekstową wyświetlającą podany tekst i do której odwołuje się przez dany id, na domyślnej pozycji (0,0)."
                }
              }
            },
            "variables": {
              "expressions": {
                "addPair": {
                  "palette_params": {
                    "key": {
                      "type": "Łańcuch"
                    },
                    "object": {
                      "type": "Obiekt"
                    },
                    "value": {
                      "type": "Dowolny"
                    }
                  },
                  "return_value": "Żaden"
                },
                "declareAssign_list_123": {
                  "short_description": "Zadeklaruj tablicę i przypisz ją do zmiennej"
                },
                "declareAssign_object": {
                  "examples": {
                    "Choose Your Own Adventure": {
                      "name": "Wybierz własną przygodę"
                    }
                  }
                },
                "getValue": {
                  "palette_params": {
                    "key": {
                      "type": "Łańcuch"
                    },
                    "object": {
                      "type": "Obiekt"
                    }
                  }
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Szukany ciąg"
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Szukany ciąg"
                    }
                  }
                },
                "insertItem": {
                  "palette_params": {
                    "index": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "length": {
                  "examples": {
                    "Example: Palindrome": {
                      "description": "Sprawdź, czy słowo to palindromem."
                    }
                  },
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch, aby znaleźć jego długość."
                    }
                  },
                  "return_value": "Długość łańcucha",
                  "short_description": "Zwraca długość łańcucha.",
                  "tips": "-   _length_ is always >= 0"
                },
                "removeItem": {
                  "palette_params": {
                    "index": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "substring": {
                  "examples": {
                    "Example: Palindrome": {
                      "description": "Sprawdź, czy słowo to palindromem."
                    }
                  },
                  "palette_params": {
                    "end": {
                      "description": "(end-1) jest końcową pozycją podstringu.",
                      "type": "liczba"
                    },
                    "start": {
                      "description": "Pozycja początkowa podstringu.",
                      "type": "liczba"
                    },
                    "string": {
                      "description": "Łańcuch, aby znaleźć jego podłańcuch."
                    }
                  },
                  "return_value": "Podłańcuch od start do end-1",
                  "short_description": "Zwraca łańcuch wyodrębniony z pozycji _start_ do pozycji poprzedzającej _end_ w oryginalnym łańcuchu.",
                  "tips": "-   \\_substring () \\_ zakłada start\\\\ \\<=end, lub zamienia je, jeśli nie są."
                },
                "toLowerCase": {
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch do skopiowania i konwersji na małe litery."
                    }
                  },
                  "return_value": "Kopia łańcucha przekonwertowana na małe litery."
                }
              },
              "name": "Zmienne"
            }
          },
          "description": "App Lab jest środowiskiem programistycznym, w którym możesz tworzyć proste aplikacje. Zaprojektuj aplikację i zakoduj za pomocą bloków lub JavaScript, aby działała, następnie natychmiast udostępnij swoją aplikację.",
          "name": "App Lab"
        },
        "gamelab": {
          "categories": {
            "control": {
              "expressions": {
                "clearInterval": {
                  "examples": {
                    "Example: Countdown": {
                      "name": "Przykład: Odliczanie"
                    }
                  },
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "comment_Control": {
                  "examples": {
                    "Example with Comments": {
                      "name": "Przykład z komentarzami"
                    }
                  },
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "forLoop_i_0_4": {
                  "examples": {
                    "Example: Count Down": {
                      "description": "Odliczanie do zera od dziesięciu przy użyciu ujemnego przyrostu.",
                      "name": "Przykład: Odliczanie"
                    },
                    "Example: Flower": {
                      "name": "Przykład: Kwiat"
                    },
                    "Example: One Inch": {
                      "name": "Przykład: Jeden cal"
                    }
                  },
                  "palette_params": {
                    "condition": {
                      "type": "Wyrażenia logiczne"
                    }
                  }
                },
                "getTime": {
                  "examples": {
                    "Example: Five Clicks": {
                      "name": "Przykład: Pięć kliknięć"
                    },
                    "Example: How Fast?": {
                      "name": "Przykład: Jak szybko?"
                    }
                  }
                },
                "ifBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "ifElseBlock": {
                  "examples": {
                    "Example: Even or Odd": {
                      "description": "Określa, czy liczba losowa jest parzysta czy nieparzysta.",
                      "name": "Przykład: parzysty lub nieparzysty"
                    }
                  },
                  "palette_params": {
                    "condition": {
                      "type": "Wyrażenia logiczne"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "setInterval": {
                  "examples": {
                    "Example: Set Interval": {
                      "name": "Przykład: Ustaw przedział"
                    }
                  },
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "ms": {
                      "description": "Ilość milisekund pomiędzy każdym wykonaniem funkcji.",
                      "type": "liczba"
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "callback": {
                      "type": "funkcja"
                    },
                    "ms": {
                      "description": "Liczba milisekund, która upłynie przed wykonaniem funkcji.",
                      "type": "liczba"
                    }
                  }
                },
                "whileBlock": {
                  "return_value": "Brak wartości zwracanej."
                }
              }
            },
            "drawing": {
              "expressions": {
                "arc": {
                  "palette_params": {
                    "h": {
                      "type": "Liczba"
                    },
                    "start": {
                      "type": "Liczba"
                    },
                    "stop": {
                      "type": "Liczba"
                    },
                    "w": {
                      "type": "Liczba"
                    },
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "background": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "comment_Drawing": {
                  "short_description": "// Komentarz"
                },
                "ellipse": {
                  "examples": {
                    "Animated Ellipse": {
                      "name": "Animowana elipsa"
                    },
                    "Quarter of an Ellipse": {
                      "description": "Zmień grubość obrysu elipsy wypełnionego zielonym kolorem, narysowanego w lewym górnym rogu ekranu.",
                      "name": "Ćwierć elipsy"
                    },
                    "Red Line": {
                      "description": "Zmień kolor konturu elipsy narysowanego na środku wyświetlacza.",
                      "name": "Czerwona linia"
                    },
                    "Two Ellipses": {
                      "description": "Narysuj dwie elipsy w tym samym miejscu, ale z różnymi szerokościami obrysu i bez koloru wypełnienia.",
                      "name": "Dwie elipsy"
                    }
                  },
                  "palette_params": {
                    "h": {
                      "type": "Liczba"
                    },
                    "w": {
                      "type": "Liczba"
                    },
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "fill": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "Liczba"
                    },
                    "x2": {
                      "type": "Liczba"
                    },
                    "y1": {
                      "type": "Liczba"
                    },
                    "y2": {
                      "type": "Liczba"
                    }
                  }
                },
                "point": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "h": {
                      "type": "Liczba"
                    },
                    "w": {
                      "type": "Liczba"
                    },
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "regularPolygon": {
                  "palette_params": {
                    "sides": {
                      "type": "Liczba"
                    },
                    "size": {
                      "type": "Liczba"
                    },
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "rgb": {
                  "examples": {
                    "Flag of France": {
                      "name": "Flaga Francji"
                    }
                  },
                  "palette_params": {
                    "a": {
                      "type": "Liczba"
                    },
                    "b": {
                      "type": "Liczba"
                    },
                    "g": {
                      "type": "Liczba"
                    },
                    "r": {
                      "type": "Liczba"
                    }
                  }
                },
                "shape": {
                  "examples": {
                    "Star": {
                      "description": "Narysuj gwiazdę.",
                      "name": "Star"
                    }
                  },
                  "palette_params": {
                    "x1": {
                      "type": "Liczba"
                    },
                    "x2": {
                      "type": "Liczba"
                    },
                    "y1": {
                      "type": "Liczba"
                    },
                    "y2": {
                      "type": "Liczba"
                    }
                  }
                },
                "stroke": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "strokeWeight": {
                  "palette_params": {
                    "size": {
                      "type": "Liczba"
                    }
                  }
                },
                "text": {
                  "palette_params": {
                    "height": {
                      "type": "Liczba"
                    },
                    "str": {
                      "type": "Łańcuch"
                    },
                    "width": {
                      "type": "Liczba"
                    },
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "textAlign": {
                  "examples": {
                    "Horizontal Alignments": {
                      "name": "Poziome wyrównanie"
                    },
                    "Vertical Alignments": {
                      "description": "Wyświetl różne wyrównania tekstu w pionie.",
                      "name": "Pionowe wyrównanie"
                    }
                  },
                  "palette_params": {
                    "horiz": {
                      "type": "Łańcuch"
                    },
                    "vert": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "textFont": {
                  "palette_params": {
                    "font": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "textSize": {
                  "palette_params": {
                    "pixels": {
                      "type": "Liczba"
                    }
                  },
                  "short_description": "Ustawia/pobiera bieżący rozmiar czcionki. "
                }
              },
              "name": "Rysowanie"
            },
            "functions": {
              "expressions": {
                "callMyFunction_n": {
                  "palette_params": {
                    "param1, ... paramN": {
                      "type": "Dowolny"
                    }
                  }
                },
                "comment": {
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu."
                },
                "return": {
                  "palette_params": {
                    "ret": {
                      "type": "dowolny"
                    }
                  }
                }
              },
              "name": "Funkcje"
            },
            "game_lab": {
              "expressions": {
                "World.allSprites": {
                  "examples": {
                    "Rotating Stickers": {
                      "description": "Użyj 26 różnych obrazów do naklejek i randomNumber, aby umieścić naklejki"
                    }
                  },
                  "return_value": "Tablica zawierająca wszystkie aktywne duszki.",
                  "short_description": "Zwraca tablicę zawierającą wszystkie aktywne duszki.",
                  "tips": "-   Jeśli chcesz wykonać jakąś akcję na podzbiorze aktywnych duszków, utwórz Grupę, zamiast używać allSprites."
                },
                "World.frameCount": {
                  "examples": {
                    "Timer": {
                      "name": "Zegar"
                    }
                  },
                  "return_value": "Liczba klatek, które zostały wyświetlone od momentu uruchomienia programu.",
                  "short_description": "Liczba klatek, które zostały wyświetlone od momentu uruchomienia programu."
                },
                "World.frameRate": {
                  "examples": {
                    "": {
                      "description": "Przyspiesz kwadrat na ekranie."
                    }
                  },
                  "return_value": "Liczba razy na sekundę ekran jest odświeżany.",
                  "short_description": "Liczba razy na sekundę ekran jest odświeżany."
                },
                "World.height": {
                  "content": "Zwraca wysokość świata w pikselach.\n\nTo jest własność świata tylko do odczytu. Nie można tego zmienić.",
                  "return_value": "Zwraca wysokość świata w pikselach.",
                  "short_description": "Zwraca wysokość świata w pikselach."
                },
                "World.mouseX": {
                  "content": "Współrzędna x myszy.\n\nwartości mousEx są ograniczone do rozmiaru obszaru wyświetlania. Domyślny obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).",
                  "return_value": "Współrzędna x myszy.",
                  "short_description": "Współrzędna x myszy."
                },
                "World.mouseY": {
                  "content": "Współrzędna y myszy.\n\nwartości mouseY są ograniczone do rozmiaru obszaru wyświetlania. Domyślny obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).",
                  "return_value": "Współrzędna y myszy.",
                  "short_description": "Współrzędna y myszy."
                },
                "World.seconds": {
                  "examples": {
                    "Example: Title Screen": {
                      "name": "Przykład: Tytułowy ekran"
                    }
                  },
                  "return_value": "Liczba sekund (w pełnych sekundach, a nie milisekundach)",
                  "short_description": "Liczy, ile sekund minęło od uruchomienia programu."
                },
                "World.width": {
                  "content": "Zwraca szerokość świata w pikselach.\n\nTo jest własność świata tylko do odczytu. Nie można tego zmienić.",
                  "return_value": "Szerokość świata w pikselach.",
                  "short_description": "Zwraca szerokość świata w pikselach."
                },
                "camera.isActive": {
                  "examples": {
                    "": {
                      "description": "Przewiń obraz za pomocą myszy, przestań przewijać, gdy lewy przycisk myszy jest opuszczony."
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz.",
                  "short_description": "Zwraca true, jeśli kamera jest aktywna, w przeciwnym razie zwraca false.",
                  "tips": "-   Kamera jest automatycznie włączana na początku każdej pętli [`draw ()`(#fff176)](/docs/gamelab/draw/). "
                },
                "camera.mouseX": {
                  "return_value": "Współrzędna x myszy przetłumaczona na widok kamery.",
                  "short_description": "Współrzędna x myszy przetłumaczona na widok kamery."
                },
                "camera.mouseY": {
                  "return_value": "Współrzędna y myszy przetłumaczona na widok kamery.",
                  "short_description": "Współrzędna y myszy przetłumaczona na widok kamery."
                },
                "camera.off": {
                  "examples": {
                    "": {
                      "description": "Przytrzymaj mysz w dół, aby aktywować kamerę i połączyć się z ruchem duszka."
                    }
                  },
                  "short_description": "Dezaktywuje kamerę. ",
                  "tips": "-   Kamera jest automatycznie włączana na początku każdej pętli [`draw ()`(#fff176)](/docs/gamelab/draw/). "
                },
                "camera.on": {
                  "examples": {
                    "": {
                      "description": "Przytrzymaj mysz w dół, aby aktywować kamerę i połączyć się z ruchem duszka."
                    },
                    "Follow the Alien": {
                      "description": "Połącz kamerę z ruchem głównego duszka i przewiń stacjonarne duszki.",
                      "name": "Podążaj za obcym"
                    }
                  },
                  "tips": "-   Kamera jest automatycznie włączana na początku każdej pętli [`draw ()`(#fff176)](/docs/gamelab/draw/). "
                },
                "camera.x": {
                  "examples": {
                    "Follow the Alien": {
                      "description": "Połącz kamerę z ruchem głównego duszka i przewiń stacjonarne duszki.",
                      "name": "Podążaj za obcym"
                    },
                    "Looking for Something": {
                      "description": "Badaj tło, łącząc kamerę z myszą.",
                      "name": "Szukać czegoś"
                    }
                  },
                  "return_value": "Współrzędna x środka kamery.",
                  "short_description": "Położenie x kamery.",
                  "tips": "-   Obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).\n-   Aby uzyskać dostęp lub zaktualizować właściwości kamery, należy użyć notacji kropkowej (kamera, po której następuje kropka, z etykietą właściwości).\n-   Wszelkie zmiany właściwości kamery będą widoczne dopiero po wywołaniu [`drawSprites ()`(#fff176)](/docs/gamelab/drawSprites/) ."
                },
                "camera.y": {
                  "examples": {
                    "Follow the Alien": {
                      "description": "Połącz kamerę z ruchem głównego duszka i przewiń stacjonarne duszki.",
                      "name": "Podążaj za obcym"
                    },
                    "Looking for Something": {
                      "description": "Badaj tło, łącząc kamerę z myszą.",
                      "name": "Szukać czegoś"
                    }
                  },
                  "return_value": "Współrzędna y środka kamery.",
                  "short_description": "Pozycja y kamery.",
                  "tips": "-   Obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).\n-   Aby uzyskać dostęp lub zaktualizować właściwości kamery, należy użyć notacji kropkowej (kamera, po której następuje kropka, z etykietą właściwości).\n-   Wszelkie zmiany właściwości kamery będą widoczne dopiero po wywołaniu [`drawSprites ()`(#fff176)](/docs/gamelab/drawSprites/) ."
                },
                "camera.zoom": {
                  "examples": {
                    "Near and Far": {
                      "description": "Powiększ i pomniejsz.",
                      "name": "Blisko i daleko"
                    }
                  },
                  "return_value": "Współczynnik powiększenia aparatu.",
                  "short_description": "Współczynnik powiększenia aparatu.",
                  "tips": "-   Obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).\n-   Aby uzyskać dostęp lub zaktualizować właściwości kamery, należy użyć notacji kropkowej (kamera, po której następuje kropka, z etykietą właściwości).\n-   Wszelkie zmiany właściwości kamery będą widoczne dopiero po wywołaniu [`drawSprites ()`(#fff176)](/docs/gamelab/drawSprites/) ."
                },
                "comment_GameLab": {
                  "examples": {
                    "Example with Comments": {
                      "name": "Przykład z komentarzami"
                    }
                  },
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "draw": {
                  "examples": {
                    "TV Static Line": {
                      "description": "Animuj linię jak na zepsutym starym telewizorze."
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "drawSprites": {
                  "palette_params": {
                    "group": {
                      "type": "Obiekt"
                    }
                  }
                },
                "keyDown": {
                  "examples": {
                    "Driving": {
                      "name": "Jazda"
                    }
                  },
                  "palette_params": {
                    "code": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz.",
                  "short_description": "Sprawdza, czy podany klawisz jest naciśnięty."
                },
                "keyWentDown": {
                  "examples": {
                    "Click Counter": {
                      "description": "Prosty licznik kliknięć przy użyciu KeyWentDown ().",
                      "name": "Licznik kliknięć"
                    }
                  },
                  "palette_params": {
                    "code": {
                      "description": "Nazwa klucza, który chcesz sprawdzić. Klucze bez litery lub cyfry mają nazwy takie jak „w górę”, „w lewo”, „przesunięcie”, „tab”, „spacja” itp.",
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz.",
                  "short_description": "Sprawdza, czy podany klawisz został naciśnięty."
                },
                "keyWentUp": {
                  "examples": {
                    "Falling Star": {
                      "description": "Upuść gwiazdę, gdy klawisz spacji zostanie zwolniony.",
                      "name": "Spadająca gwiazda"
                    }
                  },
                  "palette_params": {
                    "code": {
                      "description": "Nazwa klucza, który chcesz sprawdzić. Klucze bez litery lub cyfry mają nazwy takie jak „w górę”, „w lewo”, „przesunięcie”, „tab”, „spacja” itp.",
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz.",
                  "short_description": "Sprawdza, czy określony klucz został zwolniony."
                },
                "mouseDidMove": {
                  "content": "Sprawdza, czy mysz się poruszyła.\n\nNiektóre interaktywne gry używają myszy dla użytkownika do sterowania grą.",
                  "return_value": "Logiczna prawda lub fałsz.",
                  "short_description": "Sprawdza, czy mysz się poruszyła."
                },
                "mouseDown": {
                  "content": "Sprawdza, czy podany przycisk myszy jest naciśnięty.\n\nNiektóre interaktywne gry używają myszy dla użytkownika do sterowania grą.",
                  "examples": {
                    "Pencil Drawing": {
                      "description": "Prosty rysunek ołówkiem z MouseDown ().",
                      "name": "Rysunek ołówkiem"
                    }
                  },
                  "palette_params": {
                    "button": {
                      "description": "Przycisk myszy, który chcesz sprawdzić, albo „leftButton” lub „RightButton”.",
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz.",
                  "short_description": "Sprawdza, czy podany przycisk myszy jest naciśnięty."
                },
                "mouseIsOver": {
                  "examples": {
                    "Green is Good": {
                      "name": "Zielony jest dobry"
                    }
                  },
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "mousePressedOver": {
                  "examples": {
                    "Green is Good": {
                      "name": "Zielony jest dobry"
                    }
                  },
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "mouseWentDown": {
                  "examples": {
                    "Black and White": {
                      "name": "Czarno-białe"
                    }
                  },
                  "palette_params": {
                    "button": {
                      "description": "Przycisk myszy, który chcesz sprawdzić, albo „leftButton” lub „RightButton”.",
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "mouseWentUp": {
                  "palette_params": {
                    "button": {
                      "description": "Przycisk myszy, który chcesz sprawdzić, albo „leftButton” lub „RightButton”.",
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "playSound": {
                  "examples": {
                    "Making Music": {
                      "name": "Tworzenie muzyki"
                    },
                    "Stay on the Screen": {
                      "name": "Pozostań na ekranie"
                    }
                  },
                  "palette_params": {
                    "loop": {
                      "type": "Wartość logiczna"
                    },
                    "url": {
                      "type": "Łańcuch"
                    }
                  },
                  "short_description": "Odtwarza plik MP3 z podanego adresu URL."
                },
                "playSpeech": {
                  "palette_params": {
                    "gender": {
                      "type": "Łańcuch"
                    },
                    "language": {
                      "type": "Łańcuch"
                    },
                    "text": {
                      "description": "Tekst do czytania na głos",
                      "type": "Łańcuch"
                    }
                  }
                },
                "showMobileControls": {
                  "palette_params": {
                    "dpadFourWay": {
                      "type": "Wartość logiczna"
                    },
                    "dpadVisible": {
                      "type": "Wartość logiczna"
                    },
                    "mobileOnly": {
                      "type": "Wartość logiczna"
                    },
                    "spaceButtonVisible": {
                      "type": "Wartość logiczna"
                    }
                  }
                },
                "stopSound": {
                  "examples": {
                    "Stop the Music": {
                      "description": "Zatrzymaj dźwięk w tle, gdy duszek dociera do krawędzi obszaru wyświetlania.",
                      "name": "Zatrzymaj muzykę"
                    }
                  },
                  "palette_params": {
                    "url": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Brak wartości zwracanej. Przestaje odtwarzać tylko dźwięk."
                }
              },
              "name": "Laboratorium Gier (Game Lab)"
            },
            "groups": {
              "expressions": {
                "add": {
                  "palette_params": {
                    "sprite": {
                      "description": "Duszek do dodania do grupy.",
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Brak wartości zwracanej.",
                  "short_description": "Dodaj duszka do grupy."
                },
                "comment_Groups": {
                  "short_description": "// Komentarz"
                },
                "contains": {
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "createGroup": {
                  "examples": {
                    "Stay Cool!": {
                      "name": "Zachowaj spokój!"
                    }
                  }
                },
                "get": {
                  "palette_params": {
                    "i": {
                      "type": "Liczba"
                    }
                  },
                  "return_value": "Duszek na pozycji indeksu i.",
                  "short_description": "Pobiera duszka w pozycji indeksu i grupy."
                },
                "group.bounce": {
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "group.collide": {
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "group.displace": {
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "group.isTouching": {
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "group.overlap": {
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "maxDepth": {
                  "return_value": "Najwyższa głębokość w grupie.",
                  "short_description": "Zwraca najwyższą głębokość w grupie."
                },
                "minDepth": {
                  "return_value": "Najniższa głębokość w grupie.",
                  "short_description": "Zwraca najniższą głębokość w grupie."
                },
                "pointToEach": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "remove": {
                  "palette_params": {
                    "sprite": {
                      "description": "Duszek do usunięcia z grupy.",
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Brak wartości zwracanej.",
                  "short_description": "Usuń duszka z grupy."
                },
                "setAnimationEach": {
                  "palette_params": {
                    "label": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setColliderEach": {
                  "palette_params": {
                    "height": {
                      "type": "Liczba"
                    },
                    "rotationOffset": {
                      "type": "Liczba"
                    },
                    "type": {
                      "type": "Łańcuch"
                    },
                    "width/radius": {
                      "type": "Liczba"
                    },
                    "xOffset": {
                      "type": "Liczba"
                    },
                    "yOffset": {
                      "type": "Liczba"
                    }
                  }
                },
                "setColorEach": {
                  "palette_params": {
                    "color": {
                      "type": "Kolor"
                    }
                  }
                },
                "setHeightEach": {
                  "palette_params": {
                    "height": {
                      "description": "Wysokość duszków w pikselach.",
                      "type": "Liczba"
                    }
                  }
                },
                "setLifetimeEach": {
                  "palette_params": {
                    "lifetime": {
                      "type": "Liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "setMirrorXEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "setMirrorYEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "setRotateToDirectionEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Wartość logiczna"
                    }
                  }
                },
                "setRotationEach": {
                  "palette_params": {
                    "angle": {
                      "type": "Liczba"
                    }
                  }
                },
                "setRotationSpeedEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Liczba"
                    }
                  }
                },
                "setScaleEach": {
                  "palette_params": {
                    "scale": {
                      "type": "Liczba"
                    }
                  }
                },
                "setSpeedAndDirectionEach": {
                  "palette_params": {
                    "angle": {
                      "type": "Liczba"
                    },
                    "speed": {
                      "type": "Liczba"
                    }
                  }
                },
                "setTintEach": {
                  "palette_params": {
                    "color": {
                      "type": "Kolor"
                    }
                  }
                },
                "setVelocityEach": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVelocityXEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVelocityYEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVisibleEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Wartość logiczna"
                    }
                  }
                },
                "setWidthEach": {
                  "palette_params": {
                    "width": {
                      "type": "Liczba"
                    }
                  }
                }
              },
              "name": "Grupy"
            },
            "math": {
              "expressions": {
                "addOperator": {
                  "examples": {
                    "Adding a Few Things": {
                      "name": "Dodawanie kilku rzeczy"
                    }
                  },
                  "palette_params": {
                    "value1": {
                      "type": "Dowolny"
                    },
                    "value2": {
                      "type": "Dowolny"
                    }
                  }
                },
                "andOperator": {
                  "examples": {
                    "Working 9 to 5": {
                      "description": "Określa, czy są to aktualnie godziny pracy.",
                      "name": "Praca od 9 do 5"
                    }
                  },
                  "palette_params": {
                    "expression1": {
                      "type": "wartość logiczna"
                    },
                    "expression2": {
                      "type": "wartość logiczna"
                    }
                  },
                  "return_value": "Boolean (prawda lub fałsz)"
                },
                "comment_Math": {
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "divideOperator": {
                  "palette_params": {
                    "___": {
                      "type": "Dowolny"
                    }
                  },
                  "return_value": "iIoraz dwóch liczb.",
                  "short_description": "Podziel dwie liczby."
                },
                "equalityOperator": {
                  "examples": {
                    "Example 2: 5 equals \"five\"?": {
                      "description": "\\*\\*Przykład: 5 równa się „pięć”? \\*\\* Konwersja łańcucha słów na liczbę nie jest automatyczna w App Lab.",
                      "name": "Przykład 2: 5 równa się „pięć”?"
                    },
                    "Example: \"Alan Turing\" equals \"ALAN TURING\"?": {
                      "description": "\\*\\*Przykład: „Alan Turing” równa się „ALAN TURING”? \\*\\* Podstawowe sprawdzanie równości łańcuchów. Wielkość liter ma znaczenie dla porównania łańcuchów.",
                      "name": "Przykład: „Alan Turing” równa się „ALAN TURING”?"
                    },
                    "Example: 5 equals \"5\"?": {
                      "description": "\\*\\*Przykład: 5 równa się „5\"? \\*\\* Konwersja łańcucha liczb na liczbę jest automatyczna w App Lab.",
                      "name": "Przykład: 5 równa się „5\"?"
                    },
                    "Example: equality check": {
                      "name": "Przykład: kontrola równości"
                    }
                  },
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "greaterThanOperator": {
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "greaterThanOrEqualOperator": {
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "inequalityOperator": {
                  "examples": {
                    "Example: 5 equals \"5\"?": {
                      "name": "Przykład: 5 równa się „5\"?"
                    }
                  },
                  "palette_params": {
                    "___": {
                      "type": "Dowolny"
                    }
                  }
                },
                "lessThanOperator": {
                  "palette_params": {
                    "___": {
                      "type": "Dowolny"
                    }
                  }
                },
                "lessThanOrEqualOperator": {
                  "palette_params": {
                    "___": {
                      "type": "dowolny"
                    }
                  }
                },
                "mathAbs": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMax": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMin": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathRound": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "value1": {
                      "type": "Liczba"
                    },
                    "value2": {
                      "type": "Liczba"
                    }
                  }
                },
                "multiplyOperator": {
                  "palette_params": {
                    "num1": {
                      "type": "dowolny"
                    },
                    "num2": {
                      "type": "dowolny"
                    }
                  }
                },
                "notOperator": {
                  "examples": {
                    "Example: Working 9 to 5": {
                      "description": "Określa, czy są to aktualnie godziny pracy."
                    }
                  },
                  "palette_params": {
                    "expression": {
                      "type": "wartość logiczna"
                    }
                  }
                },
                "orOperator": {
                  "palette_params": {
                    "expression1": {
                      "type": "wartość logiczna"
                    },
                    "expression2": {
                      "type": "wartość logiczna"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "max": {
                      "description": "Zwrócona największa liczba",
                      "type": "liczba"
                    },
                    "min": {
                      "description": "Zwrócona najmniejsza liczba",
                      "type": "liczba"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "max": {
                      "description": "Zwrócona największa liczba",
                      "type": "liczba"
                    },
                    "min": {
                      "description": "Zwrócona najmniejsza liczba",
                      "type": "liczba"
                    }
                  }
                },
                "subtractOperator": {
                  "palette_params": {
                    "value1": {
                      "type": "dowolny"
                    },
                    "value2": {
                      "type": "dowolny"
                    }
                  }
                }
              },
              "name": "Matematyka"
            },
            "sprites": {
              "expressions": {
                "bounce": {
                  "examples": {
                    "Four Collisions": {
                      "description": "Zademonstruj wszystkie cztery rodzaje kolizji.",
                      "name": "Cztery kolizje"
                    }
                  },
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "bounceOff": {
                  "examples": {
                    "Four Collisions": {
                      "description": "Zademonstruj wszystkie cztery rodzaje kolizji.",
                      "name": "Cztery kolizje"
                    }
                  },
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "collide": {
                  "examples": {
                    "Four Collisions": {
                      "description": "Zademonstruj wszystkie cztery rodzaje kolizji.",
                      "name": "Cztery kolizje"
                    }
                  },
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "comment_Sprites": {
                  "short_description": "// Komentarz"
                },
                "createEdgeSprites": {
                  "examples": {
                    "Stay Cool!": {
                      "name": "Zachowaj spokój!"
                    }
                  }
                },
                "createSprite": {
                  "palette_params": {
                    "height": {
                      "type": "Liczba"
                    },
                    "width": {
                      "type": "Liczba"
                    },
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "depth": {
                  "return_value": "Głębokość duszka.",
                  "short_description": "Głębokość duszka w kolejności rysowania. "
                },
                "destroy": {
                  "examples": {
                    "Rain, Rain Go Away": {
                      "description": "Parasol usuwa krople deszczu."
                    }
                  },
                  "short_description": "Usuwa duszka z animacji."
                },
                "displace": {
                  "examples": {
                    "Four Collisions": {
                      "description": "Zademonstruj wszystkie cztery rodzaje kolizji.",
                      "name": "Cztery kolizje"
                    },
                    "Umbrella": {
                      "name": "Parasol"
                    }
                  },
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "getSpeed": {
                  "examples": {
                    "Spiral": {
                      "name": "Spirala"
                    }
                  }
                },
                "isTouching": {
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  },
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "mirrorX": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "mirrorY": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "overlap": {
                  "palette_params": {
                    "target": {
                      "type": "Duszek lub Grupa"
                    }
                  }
                },
                "pointTo": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "rotateToDirection": {
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "setAnimation": {
                  "palette_params": {
                    "label": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setCollider": {
                  "palette_params": {
                    "height": {
                      "type": "Liczba"
                    },
                    "rotationOffset": {
                      "type": "Liczba"
                    },
                    "type": {
                      "type": "Łańcuch"
                    },
                    "width/radius": {
                      "type": "Liczba"
                    },
                    "xOffset": {
                      "type": "Liczba"
                    },
                    "yOffset": {
                      "type": "Liczba"
                    }
                  }
                },
                "setFrame": {
                  "palette_params": {
                    "frame": {
                      "type": "Liczba"
                    }
                  }
                },
                "setSpeedAndDirection": {
                  "palette_params": {
                    "angle": {
                      "type": "Liczba"
                    },
                    "speed": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVelocity": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "sprite.height": {
                  "return_value": "Wysokość duszka."
                },
                "sprite.width": {
                  "return_value": "Szerokość duszka."
                },
                "visible": {
                  "return_value": "Logiczna prawda lub fałsz."
                },
                "x": {
                  "examples": {
                    "Movement": {
                      "description": "Przesuń duszka, zwiększając wartość sprite.x w funkcji rysowania.",
                      "name": "Ruch"
                    }
                  },
                  "return_value": "Współrzędna x środka duszka.",
                  "short_description": "Pozycja x środka duszka."
                },
                "y": {
                  "examples": {
                    "Movement": {
                      "description": "Przesuń duszek, zwiększając wartość sprite.y w funkcji rysowania.",
                      "name": "Ruch"
                    }
                  },
                  "return_value": "Współrzędna y środka duszka.",
                  "short_description": "Pozycja y środka duszka."
                }
              },
              "name": "Duszki"
            },
            "variables": {
              "expressions": {
                "assign_x": {
                  "short_description": "Przypisuje wartość do istniejącej zmiennej. Na przykład, x=0;"
                },
                "comment_Variables": {
                  "examples": {
                    "Example with Comments": {
                      "name": "Przykład z komentarzami"
                    }
                  },
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "console.log": {
                  "examples": {
                    "Example: it speaks": {
                      "name": "Przykład: mówi"
                    },
                    "Example: random thoughts": {
                      "name": "Przykład: losowe myśli"
                    },
                    "Example: what's in the box?": {
                      "name": "Przykład: co jest w pudełku?"
                    }
                  }
                },
                "includes": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Szukany ciąg"
                    }
                  }
                },
                "indexOf": {
                  "palette_params": {
                    "searchValue": {
                      "description": "Szukany ciąg"
                    }
                  }
                },
                "length": {
                  "examples": {
                    "Example: first and last": {
                      "name": "Przykład: pierwszy i ostatni"
                    },
                    "Example: how long?!": {
                      "name": "Przykład: jak długo?!"
                    },
                    "Example: palindrome": {
                      "description": "Sprawdź, czy słowo to palindromem.",
                      "name": "Przykład: palindrom"
                    }
                  },
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch, aby znaleźć jego długość."
                    }
                  },
                  "return_value": "Długość łańcucha",
                  "short_description": "Zwraca długość łańcucha.",
                  "tips": "-   _length_ is always >= 0"
                },
                "substring": {
                  "examples": {
                    "Example: first and last": {
                      "name": "Przykład: pierwszy i ostatni"
                    },
                    "Example: palindrome": {
                      "description": "Sprawdź, czy słowo to palindromem.",
                      "name": "Przykład: palindrom"
                    }
                  },
                  "palette_params": {
                    "end": {
                      "description": "(end-1) jest końcową pozycją podstringu.",
                      "type": "liczba"
                    },
                    "start": {
                      "description": "Pozycja początkowa podstringu.",
                      "type": "liczba"
                    },
                    "string": {
                      "description": "Łańcuch, aby znaleźć jego podłańcuch.",
                      "type": "łańcuch "
                    }
                  },
                  "return_value": "Podłańcuch od start do end-1",
                  "short_description": "Zwraca łańcuch wyodrębniony z pozycji _start_ do pozycji poprzedzającej _end_ w oryginalnym łańcuchu.",
                  "tips": "-   \\_substring () \\_ zakłada start\\\\ \\<=end, lub zamienia je, jeśli nie są."
                },
                "toLowerCase": {
                  "examples": {
                    "Example: a string and a variable": {
                      "name": "Przykład: łańcuch i zmienna"
                    },
                    "Example: colors of fruits": {
                      "name": "Przykład: kolory owoców"
                    }
                  },
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch do skopiowania i konwersji na małe litery."
                    }
                  },
                  "return_value": "Kopia łańcucha przekonwertowana na małe litery."
                },
                "toUpperCase": {
                  "examples": {
                    "Example: a string and a variable": {
                      "name": "Przykład: łańcuch i zmienna"
                    },
                    "Example: colors of fruits": {
                      "name": "Przykład: kolory owoców"
                    }
                  }
                }
              },
              "name": "Zmienne"
            }
          },
          "name": "Laboratorium Gier (Game Lab)"
        },
        "javalab": {
          "name": "Java Lab"
        },
        "spritelab": {
          "categories": {
            "actions": {
              "name": "Działania"
            },
            "behaviors": {
              "name": "Zachowanie"
            },
            "comments": {
              "name": "Komentarze"
            },
            "events": {
              "name": "Zdarzenia"
            },
            "functions": {
              "name": "Funkcje"
            },
            "location": {
              "name": "Położenie"
            },
            "logic": {
              "name": "Logika"
            },
            "loops": {
              "name": "Pętle"
            },
            "math": {
              "name": "Matematyka"
            },
            "sprites": {
              "name": "Duszki"
            },
            "text": {
              "name": "Tekst"
            },
            "variables": {
              "name": "Zmienne"
            },
            "world": {
              "name": "Świat"
            }
          },
          "name": "Sprite Lab"
        },
        "weblab": {
          "categories": {
            "css_properties": {
              "expressions": {
                "font-size": {
                  "examples": {
                    "Changing the Font Size": {
                      "name": "Zmiana rozmiaru czcionki"
                    }
                  }
                },
                "height": {
                  "examples": {
                    " Height as a percentage": {
                      "name": " Wysokość w procentach"
                    },
                    " Height in pixels": {
                      "description": "Ustaw wysokość elementu `<p>` na 100 px.",
                      "name": " Wysokość w pikselach"
                    }
                  }
                },
                "text-align": {
                  "content": "# Wyrównaj tekst",
                  "short_description": "Wyrównaj tekst"
                },
                "width": {
                  "examples": {
                    "Width as a percentage": {
                      "name": "Szerokość w procentach"
                    },
                    "Width in pixels": {
                      "name": "Szerokość w pikselach"
                    }
                  }
                }
              }
            },
            "html_tags": {
              "name": "Tagi HTML"
            }
          },
          "name": "Web Lab"
        }
      }
    }
  }
}