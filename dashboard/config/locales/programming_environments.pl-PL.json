{
  "pl-PL": {
    "data": {
      "programming_environments": {
        "weblab": {
          "name": "Web Lab",
          "categories": {
            "html_tags": {
              "name": "Tagi HTML"
            }
          }
        },
        "gamelab": {
          "name": "Laboratorium Gier (Game Lab)",
          "categories": {
            "game_lab": {
              "name": "Laboratorium Gier (Game Lab)",
              "expressions": {
                "World.allSprites": {
                  "examples": {
                    "Rotating Stickers": {
                      "description": "Użyj 26 różnych obrazów do naklejek i RandomNumber, aby umieścić naklejki"
                    }
                  },
                  "return_value": "Tablica zawierająca wszystkie aktywne duszki.",
                  "short_description": "Zwraca tablicę zawierającą wszystkie aktywne sprites.",
                  "tips": "-   Jeśli chcesz wykonać jakąś akcję na podzbiorze aktywnych duszków, utwórz Grupę, zamiast używać allSprites."
                },
                "World.frameCount": {
                  "examples": {
                    "Timer": {
                      "name": "Zegar"
                    }
                  },
                  "return_value": "Liczba klatek, które zostały wyświetlone od momentu uruchomienia programu.",
                  "short_description": "Liczba klatek, które zostały wyświetlone od momentu uruchomienia programu."
                },
                "World.frameRate": {
                  "examples": {
                    "": {
                      "description": "Przyspiesz kwadrat na ekranie."
                    }
                  },
                  "return_value": "Liczba razy na sekundę ekran jest odświeżany.",
                  "short_description": "Liczba razy na sekundę ekran jest odświeżany."
                },
                "World.height": {
                  "content": "Zwraca wysokość świata w pikselach.\n\nTo jest własność świata tylko do odczytu. Nie można tego zmienić.",
                  "return_value": "Zwraca wysokość świata w pikselach.",
                  "short_description": "Zwraca wysokość świata w pikselach."
                },
                "World.mouseX": {
                  "content": "Współrzędna x myszy.\n\nwartości mousEx są ograniczone do rozmiaru obszaru wyświetlania. Domyślny obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).",
                  "return_value": "Współrzędna x myszy.",
                  "short_description": "Współrzędna x myszy."
                },
                "World.mouseY": {
                  "content": "Współrzędna y myszy.\n\nwartości mouseY są ograniczone do rozmiaru obszaru wyświetlania. Domyślny obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).",
                  "return_value": "Współrzędna y myszy.",
                  "short_description": "Współrzędna y myszy."
                },
                "World.seconds": {
                  "examples": {
                    "Example: Title Screen": {
                      "name": "Przykład: Tytułowy ekran"
                    }
                  },
                  "return_value": "Liczba sekund (w pełnych sekundach, a nie milisekundach)",
                  "short_description": "Liczy, ile sekund minęło od uruchomienia programu."
                },
                "World.width": {
                  "content": "Zwraca szerokość świata w pikselach.\n\nTo jest własność świata tylko do odczytu. Nie można tego zmienić.",
                  "return_value": "Szerokość świata w pikselach.",
                  "short_description": "Zwraca szerokość świata w pikselach."
                },
                "camera.isActive": {
                  "examples": {
                    "": {
                      "description": "Przewiń obraz za pomocą myszy, przestań przewijać, gdy lewy przycisk myszy jest opuszczony."
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz.",
                  "short_description": "Zwraca true, jeśli aparat jest aktywny, w przeciwnym razie zwraca false.",
                  "tips": "-   Kamera jest automatycznie włączana na początku każdej pętli [`draw ()`(#fff176)](/docs/gamelab/draw/). "
                },
                "camera.mouseX": {
                  "return_value": "Współrzędna x myszy przetłumaczona na widok kamery.",
                  "short_description": "Współrzędna x myszy przetłumaczona na widok kamery."
                },
                "camera.mouseY": {
                  "return_value": "Współrzędna y myszy przetłumaczona na widok kamery.",
                  "short_description": "Współrzędna y myszy przetłumaczona na widok kamery."
                },
                "camera.off": {
                  "examples": {
                    "": {
                      "description": "Przytrzymaj mysz w dół, aby aktywować kamerę i połączyć się z ruchem duszka."
                    }
                  },
                  "short_description": "Dezaktywuje kamerę. ",
                  "tips": "-   Kamera jest automatycznie włączana na początku każdej pętli [`draw ()`(#fff176)](/docs/gamelab/draw/). "
                },
                "camera.on": {
                  "examples": {
                    "": {
                      "description": "Przytrzymaj mysz w dół, aby aktywować kamerę i połączyć się z ruchem duszka."
                    },
                    "Follow the Alien": {
                      "name": "Podążaj za obcym",
                      "description": "Połącz kamerę z ruchem głównego duszka i przewiń stacjonarne duszki."
                    }
                  },
                  "tips": "-   Kamera jest automatycznie włączana na początku każdej pętli [`draw ()`(#fff176)](/docs/gamelab/draw/). "
                },
                "camera.x": {
                  "examples": {
                    "Follow the Alien": {
                      "name": "Podążaj za obcym",
                      "description": "Połącz kamerę z ruchem głównego duszka i przewiń stacjonarne duszki."
                    },
                    "Looking for Something": {
                      "name": "Szukać czegoś",
                      "description": "Badaj tło, łącząc aparat z myszą."
                    }
                  },
                  "return_value": "Współrzędna x środka kamery.",
                  "short_description": "Położenie x kamery.",
                  "tips": "-   Obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).\n-   Aby uzyskać dostęp lub zaktualizować właściwości kamery, należy użyć notacji kropkowej (kamera, po której następuje kropka, z etykietą właściwości).\n-   Wszelkie zmiany właściwości kamery będą widoczne dopiero po wywołaniu [`drawSprites ()`(#fff176)](/docs/gamelab/drawSprites/) ."
                },
                "camera.y": {
                  "examples": {
                    "Follow the Alien": {
                      "name": "Podążaj za obcym",
                      "description": "Połącz kamerę z ruchem głównego duszka i przewiń stacjonarne duszki."
                    },
                    "Looking for Something": {
                      "name": "Szukać czegoś",
                      "description": "Badaj tło, łącząc aparat z myszą."
                    }
                  },
                  "return_value": "Współrzędna y środka kamery.",
                  "short_description": "Pozycja y kamery.",
                  "tips": "-   Obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).\n-   Aby uzyskać dostęp lub zaktualizować właściwości kamery, należy użyć notacji kropkowej (kamera, po której następuje kropka, z etykietą właściwości).\n-   Wszelkie zmiany właściwości kamery będą widoczne dopiero po wywołaniu [`drawSprites ()`(#fff176)](/docs/gamelab/drawSprites/) ."
                },
                "camera.zoom": {
                  "examples": {
                    "Near and Far": {
                      "name": "Blisko i daleko",
                      "description": "Powiększ i pomniejsz."
                    }
                  },
                  "return_value": "Współczynnik powiększenia aparatu.",
                  "short_description": "Współczynnik powiększenia aparatu.",
                  "tips": "-   Obszar wyświetlania to 400 pikseli x 400 pikseli, a lewy górny róg to (0,0).\n-   Aby uzyskać dostęp lub zaktualizować właściwości kamery, należy użyć notacji kropkowej (kamera, po której następuje kropka, z etykietą właściwości).\n-   Wszelkie zmiany właściwości kamery będą widoczne dopiero po wywołaniu [`drawSprites ()`(#fff176)](/docs/gamelab/drawSprites/) ."
                },
                "comment_GameLab": {
                  "examples": {
                    "Example with Comments": {
                      "name": "Przykład z komentarzami"
                    }
                  },
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "drawSprites": {
                  "palette_params": {
                    "group": {
                      "type": "Obiekt"
                    }
                  }
                },
                "draw": {
                  "return_value": "Brak wartości zwracanej."
                },
                "keyDown": {
                  "palette_params": {
                    "code": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "keyWentDown": {
                  "palette_params": {
                    "code": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "keyWentUp": {
                  "palette_params": {
                    "code": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "mouseDidMove": {
                  "return_value": "Logiczna prawda czy fałsz.",
                  "short_description": "Sprawdza, czy mysz się poruszyła."
                },
                "mouseDown": {
                  "examples": {
                    "Pencil Drawing": {
                      "name": "Rysunek ołówkiem"
                    }
                  },
                  "palette_params": {
                    "button": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "mouseIsOver": {
                  "examples": {
                    "Green is Good": {
                      "name": "Zielony jest dobry"
                    }
                  },
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "mousePressedOver": {
                  "examples": {
                    "Green is Good": {
                      "name": "Zielony jest dobry"
                    }
                  },
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "mouseWentDown": {
                  "examples": {
                    "Black and White": {
                      "name": "Czarno-białe"
                    }
                  },
                  "palette_params": {
                    "button": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "mouseWentUp": {
                  "palette_params": {
                    "button": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "playSound": {
                  "examples": {
                    "Making Music": {
                      "name": "Tworzenie muzyki"
                    },
                    "Stay on the Screen": {
                      "name": "Pozostań na ekranie"
                    }
                  },
                  "palette_params": {
                    "url": {
                      "type": "Łańcuch"
                    },
                    "loop": {
                      "type": "Wartość logiczna"
                    }
                  },
                  "short_description": "Odtwarza plik MP3 z podanego adresu URL."
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Łańcuch",
                      "description": "Tekst do czytania na głos"
                    },
                    "gender": {
                      "type": "Łańcuch"
                    },
                    "language": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "showMobileControls": {
                  "palette_params": {
                    "spaceButtonVisible": {
                      "type": "Wartość logiczna"
                    },
                    "dpadVisible": {
                      "type": "Wartość logiczna"
                    },
                    "dpadFourWay": {
                      "type": "Wartość logiczna"
                    },
                    "mobileOnly": {
                      "type": "Wartość logiczna"
                    }
                  }
                },
                "stopSound": {
                  "palette_params": {
                    "url": {
                      "type": "Łańcuch"
                    }
                  }
                }
              }
            },
            "sprites": {
              "name": "Duszki",
              "expressions": {
                "comment_Sprites": {
                  "short_description": "// Komentarz"
                },
                "createEdgeSprites": {
                  "examples": {
                    "Stay Cool!": {
                      "name": "Zachowaj spokój!"
                    }
                  }
                },
                "bounce": {
                  "examples": {
                    "Four Collisions": {
                      "name": "Cztery kolizje"
                    }
                  }
                },
                "bounceOff": {
                  "examples": {
                    "Four Collisions": {
                      "name": "Cztery kolizje"
                    }
                  }
                },
                "collide": {
                  "examples": {
                    "Four Collisions": {
                      "name": "Cztery kolizje"
                    }
                  }
                },
                "displace": {
                  "examples": {
                    "Four Collisions": {
                      "name": "Cztery kolizje"
                    },
                    "Umbrella": {
                      "name": "Parasol"
                    }
                  }
                },
                "getSpeed": {
                  "examples": {
                    "Spiral": {
                      "name": "Spirala"
                    }
                  }
                },
                "sprite.height": {
                  "return_value": "Wysokość duszka."
                },
                "isTouching": {
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "mirrorX": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "mirrorY": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "pointTo": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "rotateToDirection": {
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "setAnimation": {
                  "palette_params": {
                    "label": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setCollider": {
                  "palette_params": {
                    "type": {
                      "type": "Łańcuch"
                    },
                    "xOffset": {
                      "type": "Liczba"
                    },
                    "yOffset": {
                      "type": "Liczba"
                    },
                    "width/radius": {
                      "type": "Liczba"
                    },
                    "height": {
                      "type": "Liczba"
                    },
                    "rotationOffset": {
                      "type": "Liczba"
                    }
                  }
                },
                "setFrame": {
                  "palette_params": {
                    "frame": {
                      "type": "Liczba"
                    }
                  }
                },
                "setSpeedAndDirection": {
                  "palette_params": {
                    "speed": {
                      "type": "Liczba"
                    },
                    "angle": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVelocity": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "visible": {
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "sprite.width": {
                  "return_value": "Szerokość duszka."
                },
                "createSprite": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "width": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    },
                    "height": {
                      "type": "Liczba"
                    }
                  }
                }
              }
            },
            "groups": {
              "name": "Grupy",
              "expressions": {
                "comment_Groups": {
                  "short_description": "// Komentarz"
                },
                "add": {
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "contains": {
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "get": {
                  "palette_params": {
                    "i": {
                      "type": "Liczba"
                    }
                  }
                },
                "group.isTouching": {
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "pointToEach": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "remove": {
                  "palette_params": {
                    "sprite": {
                      "type": "Duszek"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "setAnimationEach": {
                  "palette_params": {
                    "label": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setColliderEach": {
                  "palette_params": {
                    "type": {
                      "type": "Łańcuch"
                    },
                    "yOffset": {
                      "type": "Liczba"
                    },
                    "width/radius": {
                      "type": "Liczba"
                    },
                    "height": {
                      "type": "Liczba"
                    },
                    "rotationOffset": {
                      "type": "Liczba"
                    }
                  }
                },
                "setColorEach": {
                  "palette_params": {
                    "color": {
                      "type": "Kolor"
                    }
                  }
                },
                "setHeightEach": {
                  "palette_params": {
                    "height": {
                      "type": "Liczba"
                    }
                  }
                },
                "setLifetimeEach": {
                  "palette_params": {
                    "lifetime": {
                      "type": "Liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "setMirrorXEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "setMirrorYEach": {
                  "palette_params": {
                    "dir": {
                      "type": "Liczba"
                    }
                  }
                },
                "setRotateToDirectionEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Wartość logiczna"
                    }
                  }
                },
                "setRotationEach": {
                  "palette_params": {
                    "angle": {
                      "type": "Liczba"
                    }
                  }
                },
                "setRotationSpeedEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Liczba"
                    }
                  }
                },
                "setScaleEach": {
                  "palette_params": {
                    "scale": {
                      "type": "Liczba"
                    }
                  }
                },
                "setSpeedAndDirectionEach": {
                  "palette_params": {
                    "speed": {
                      "type": "Liczba"
                    },
                    "angle": {
                      "type": "Liczba"
                    }
                  }
                },
                "setTintEach": {
                  "palette_params": {
                    "color": {
                      "type": "Kolor"
                    }
                  }
                },
                "setVelocityEach": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVelocityXEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVelocityYEach": {
                  "palette_params": {
                    "velocity": {
                      "type": "Liczba"
                    }
                  }
                },
                "setVisibleEach": {
                  "palette_params": {
                    "bool": {
                      "type": "Wartość logiczna"
                    }
                  }
                },
                "setWidthEach": {
                  "palette_params": {
                    "width": {
                      "type": "Liczba"
                    }
                  }
                },
                "createGroup": {
                  "examples": {
                    "Stay Cool!": {
                      "name": "Zachowaj spokój!"
                    }
                  }
                }
              }
            },
            "drawing": {
              "name": "Rysowanie",
              "expressions": {
                "arc": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    },
                    "w": {
                      "type": "Liczba"
                    },
                    "h": {
                      "type": "Liczba"
                    },
                    "start": {
                      "type": "Liczba"
                    },
                    "stop": {
                      "type": "Liczba"
                    }
                  }
                },
                "background": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "comment_Drawing": {
                  "short_description": "// Komentarz"
                },
                "ellipse": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    },
                    "w": {
                      "type": "Liczba"
                    },
                    "h": {
                      "type": "Liczba"
                    }
                  }
                },
                "fill": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "Liczba"
                    },
                    "y1": {
                      "type": "Liczba"
                    },
                    "x2": {
                      "type": "Liczba"
                    },
                    "y2": {
                      "type": "Liczba"
                    }
                  }
                },
                "point": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    },
                    "w": {
                      "type": "Liczba"
                    },
                    "h": {
                      "type": "Liczba"
                    }
                  }
                },
                "regularPolygon": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    },
                    "sides": {
                      "type": "Liczba"
                    },
                    "size": {
                      "type": "Liczba"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Liczba"
                    },
                    "g": {
                      "type": "Liczba"
                    },
                    "b": {
                      "type": "Liczba"
                    },
                    "a": {
                      "type": "Liczba"
                    }
                  }
                },
                "shape": {
                  "examples": {
                    "Star": {
                      "name": "Star"
                    }
                  },
                  "palette_params": {
                    "x1": {
                      "type": "Liczba"
                    },
                    "y1": {
                      "type": "Liczba"
                    },
                    "x2": {
                      "type": "Liczba"
                    },
                    "y2": {
                      "type": "Liczba"
                    }
                  }
                },
                "stroke": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "strokeWeight": {
                  "palette_params": {
                    "size": {
                      "type": "Liczba"
                    }
                  }
                },
                "text": {
                  "palette_params": {
                    "str": {
                      "type": "Łańcuch"
                    },
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    },
                    "width": {
                      "type": "Liczba"
                    },
                    "height": {
                      "type": "Liczba"
                    }
                  }
                },
                "textAlign": {
                  "palette_params": {
                    "horiz": {
                      "type": "Łańcuch"
                    },
                    "vert": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "textFont": {
                  "palette_params": {
                    "font": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "textSize": {
                  "palette_params": {
                    "pixels": {
                      "type": "Liczba"
                    }
                  }
                }
              }
            },
            "control": {
              "expressions": {
                "ifBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "ifElseBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "whileBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "clearInterval": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "comment_Control": {
                  "examples": {
                    "Example with Comments": {
                      "name": "Przykład z komentarzami"
                    }
                  },
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "type": "liczba"
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "type": "liczba"
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Matematyka",
              "expressions": {
                "mathAbs": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMax": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMin": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathRound": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "value1": {
                      "type": "Liczba"
                    },
                    "value2": {
                      "type": "Liczba"
                    }
                  }
                },
                "comment_Math": {
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "type": "liczba",
                      "description": "Zwrócona najmniejsza liczba"
                    },
                    "max": {
                      "type": "liczba",
                      "description": "Zwrócona największa liczba"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "type": "liczba",
                      "description": "Zwrócona najmniejsza liczba"
                    },
                    "max": {
                      "type": "liczba",
                      "description": "Zwrócona największa liczba"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Zmienne",
              "expressions": {
                "assign_x": {
                  "short_description": "Przypisuje wartość do istniejącej zmiennej. Na przykład, x=0;"
                },
                "length": {
                  "examples": {
                    "Example: how long?!": {
                      "name": "Przykład: jak długo?!"
                    },
                    "Example: first and last": {
                      "name": "Przykład: pierwszy i ostatni"
                    },
                    "Example: palindrome": {
                      "name": "Przykład: palindrom",
                      "description": "Sprawdź, czy słowo to palindromem."
                    }
                  },
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch, aby znaleźć jego długość."
                    }
                  },
                  "return_value": "Długość łańcucha",
                  "short_description": "Zwraca długość łańcucha.",
                  "tips": "-   _length_ is always >= 0"
                },
                "substring": {
                  "examples": {
                    "Example: first and last": {
                      "name": "Przykład: pierwszy i ostatni"
                    },
                    "Example: palindrome": {
                      "name": "Przykład: palindrom",
                      "description": "Sprawdź, czy słowo to palindromem."
                    }
                  },
                  "palette_params": {
                    "string": {
                      "type": "łańcuch ",
                      "description": "Łańcuch, aby znaleźć jego podłańcuch."
                    },
                    "start": {
                      "type": "liczba",
                      "description": "Pozycja początkowa podstringu."
                    },
                    "end": {
                      "type": "liczba",
                      "description": "(end-1) jest końcową pozycją podstringu."
                    }
                  },
                  "return_value": "Podłańcuch od start do end-1",
                  "short_description": "Zwraca łańcuch wyodrębniony z pozycji _start_ do pozycji poprzedzającej _end_ w oryginalnym łańcuchu.",
                  "tips": "-   \\_substring () \\_ zakłada start\\\\ \\<=end, lub zamienia je, jeśli nie są."
                },
                "toLowerCase": {
                  "examples": {
                    "Example: a string and a variable": {
                      "name": "Przykład: łańcuch i zmienna"
                    },
                    "Example: colors of fruits": {
                      "name": "Przykład: kolory owoców"
                    }
                  },
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch do skopiowania i konwersji na małe litery."
                    }
                  },
                  "return_value": "Kopia łańcucha przekonwertowana na małe litery."
                },
                "toUpperCase": {
                  "examples": {
                    "Example: a string and a variable": {
                      "name": "Przykład: łańcuch i zmienna"
                    },
                    "Example: colors of fruits": {
                      "name": "Przykład: kolory owoców"
                    }
                  }
                },
                "comment_Variables": {
                  "examples": {
                    "Example with Comments": {
                      "name": "Przykład z komentarzami"
                    }
                  },
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu.",
                  "tips": "-   Możesz skomentować blok instrukcji używając `/*` przed pierwszą instrukcją i `*/` po ostatniej instrukcji."
                },
                "console.log": {
                  "examples": {
                    "Example: it speaks": {
                      "name": "Przykład: mówi"
                    },
                    "Example: random thoughts": {
                      "name": "Przykład: losowe myśli"
                    },
                    "Example: what's in the box?": {
                      "name": "Przykład: co jest w pudełku?"
                    }
                  }
                }
              }
            },
            "functions": {
              "name": "Funkcje",
              "expressions": {
                "comment": {
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu."
                }
              }
            }
          }
        },
        "applab": {
          "name": "App Lab",
          "description": "App Lab jest środowiskiem programistycznym, w którym możesz tworzyć proste aplikacje. Zaprojektuj aplikację i zakoduj za pomocą bloków lub JavaScript, aby działała, następnie natychmiast udostępnij swoją aplikację.",
          "categories": {
            "ui_controls": {
              "expressions": {
                "button": {
                  "examples": {
                    "Example: Simple Turtle Control 1": {
                      "name": "Przykład: Proste sterowanie żółwiem 1"
                    },
                    "Example: Simple Turtle Control 2": {
                      "name": "Przykład: Proste sterowanie żółwiem 2"
                    }
                  }
                },
                "dropdown": {
                  "examples": {
                    "Example Two Moods": {
                      "name": "Przykład Dwa nastroje"
                    },
                    "Example Simple Form": {
                      "name": "Przykład Prosta forma"
                    }
                  }
                },
                "getChecked": {
                  "return_value": "Logiczna prawda czy fałsz."
                },
                "getNumber": {
                  "examples": {
                    "Example: Fahrenheit to Celsius": {
                      "name": "Przykład: Fahrenheit na Celsjusz"
                    }
                  }
                },
                "getProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Łańcuch"
                    },
                    "property": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "getText": {
                  "examples": {
                    "Example Random Thoughts": {
                      "name": "Przykład: losowe myśli",
                      "description": " Zademonstruj czytanie, a następnie czyszczenie pola TextInput."
                    }
                  },
                  "return_value": "Łańcuch zawierający zawartość elementu ekranu.",
                  "short_description": "Pobiera tekst z określonego elementu ekranu.",
                  "tips": "-   [`getText ()`(#fff176)](/docs/applab/getText/) może również odczytać tekst na [`button ()`(#fff176)](/docs/applab/button/) lub [`textLabel ()`(#fff176)](/docs/applab/textLabel/)."
                },
                "getXPosition": {
                  "examples": {
                    "Am I off the screen?": {
                      "name": "Czy jestem poza ekranem?"
                    }
                  },
                  "return_value": "Zwraca liczbę reprezentującą bieżącą współrzędną x w pikselach elementu interfejsu użytkownika w wyświetlaczu aplikacji.",
                  "short_description": "Pobiera pozycję x elementu."
                },
                "getYPosition": {
                  "examples": {
                    "Am I off the screen?": {
                      "name": "Czy jestem poza ekranem?",
                      "description": "Sprawdź, czy logo zostało wyświetlone zbyt blisko dolnej krawędzi."
                    }
                  }
                },
                "hideElement": {
                  "examples": {
                    "Blinking": {
                      "description": " Spraw, by logo Code.org migotało."
                    }
                  },
                  "tips": "-   [showElement](/applab/docs/showElement) jest często używany z HideElement."
                },
                "image": {
                  "examples": {
                    "Example Add a Logo": {
                      "name": "Przykład Dodaj logo"
                    },
                    "Example Image Changer": {
                      "name": "Przykładowy zmieniacz obrazu"
                    }
                  }
                },
                "onEvent": {
                  "examples": {
                    "Shrink and Grow": {
                      "name": "Kurcz się i rośnij"
                    },
                    "Event Details": {
                      "name": "Szczegóły zdarzenia"
                    },
                    "The Event parameter": {
                      "name": "Parametr zdarzenia"
                    },
                    "Two Different Types": {
                      "name": "Dwa różne typy"
                    }
                  },
                  "palette_params": {
                    "type": {
                      "type": "Łańcuch"
                    },
                    "id": {
                      "type": "Łańcuch"
                    },
                    "callback": {
                      "type": "Funkcja"
                    }
                  }
                },
                "open": {
                  "palette_params": {
                    "url": {
                      "description": "Adres URL do otwarcia."
                    }
                  },
                  "short_description": "App Lab - otwarte"
                },
                "playSound": {
                  "examples": {
                    "Example: Don't Go Too Far": {
                      "name": "Przykład: Nie idź za daleko"
                    },
                    "Making Music": {
                      "name": "Tworzenie muzyki"
                    }
                  },
                  "palette_params": {
                    "loop": {
                      "type": "Wartość logiczna"
                    }
                  },
                  "short_description": "Odtwarza plik MP3 z podanego adresu URL."
                },
                "playSpeech": {
                  "palette_params": {
                    "text": {
                      "type": "Łańcuch",
                      "description": "Tekst do czytania na głos"
                    },
                    "gender": {
                      "type": "Łańcuch"
                    },
                    "language": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "rgb": {
                  "palette_params": {
                    "r": {
                      "type": "Liczba"
                    },
                    "g": {
                      "type": "Liczba"
                    },
                    "b": {
                      "type": "Liczba"
                    },
                    "a": {
                      "type": "Liczba"
                    }
                  }
                },
                "setNumber": {
                  "palette_params": {
                    "number": {
                      "type": "liczba"
                    }
                  }
                },
                "setPosition": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "width": {
                      "type": "liczba"
                    },
                    "height": {
                      "type": "liczba"
                    }
                  }
                },
                "setProperty": {
                  "palette_params": {
                    "id": {
                      "type": "Łańcuch"
                    },
                    "property": {
                      "type": "Łańcuch",
                      "description": "Właściwość do zmiany."
                    }
                  }
                },
                "setSize": {
                  "palette_params": {
                    "height": {
                      "type": "liczba"
                    },
                    "width": {
                      "type": "liczba"
                    }
                  }
                },
                "setText": {
                  "examples": {
                    "Example Random Thoughts": {
                      "name": "Przykład: losowe myśli"
                    }
                  }
                },
                "textInput": {
                  "examples": {
                    "Example Simple Form": {
                      "name": "Przykład Prosta forma"
                    }
                  }
                }
              }
            },
            "canvas": {
              "expressions": {
                "circle": {
                  "examples": {
                    "Example: One Circle": {
                      "name": "Przykład: Jeden okrąg"
                    },
                    "Example: Red Line  ": {
                      "name": "Przykład: Czerwona linia  "
                    },
                    "Example: Red Dot": {
                      "name": "Przykład: Czerwona kropka"
                    },
                    "Example: Two Circles": {
                      "name": "Przykład: Dwa okręgi"
                    }
                  },
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "radius": {
                      "type": "liczba",
                      "description": "Promień okręgu w pikselach."
                    }
                  },
                  "short_description": "Rysuje okrąg na aktywnym obszarze z jego środkiem w określonym położeniu (x, y) i określonym promieniu."
                },
                "clearCanvas": {
                  "examples": {
                    "Example: Clear a square": {
                      "name": "Przykład: Wyczyść kwadrat"
                    }
                  }
                },
                "createCanvas": {
                  "palette_params": {
                    "[width]": {
                      "type": "liczba"
                    },
                    "[height]": {
                      "type": "liczba"
                    }
                  }
                },
                "drawImage": {
                  "examples": {
                    "Example: Set width and height": {
                      "name": "Przykład: Ustaw szerokość i wysokość"
                    }
                  },
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "[width]": {
                      "type": "liczba"
                    },
                    "[height]": {
                      "type": "liczba"
                    }
                  }
                },
                "drawImageURL": {
                  "examples": {
                    "Example: Draw a cat": {
                      "name": "Przykład: Narysuj kota"
                    },
                    "Example: Greyscale": {
                      "name": "Przykład: Skala szarości"
                    }
                  }
                },
                "getAlpha": {
                  "examples": {
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    },
                    "Example: How Transparent?": {
                      "name": "Przykład: Jak przezroczysty?"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "getBlue": {
                  "examples": {
                    "Example: From a Pixel": {
                      "name": "Przykład: Z piksela"
                    },
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "getGreen": {
                  "examples": {
                    "Example: From a Pixel": {
                      "name": "Przykład: Z piksela"
                    },
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "getImageData": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "width": {
                      "type": "liczba"
                    },
                    "height": {
                      "type": "liczba"
                    }
                  }
                },
                "getRed": {
                  "examples": {
                    "Example: From a Pixel": {
                      "name": "Przykład: Z piksela"
                    },
                    "Example: From an image": {
                      "name": "Przykład: Z obrazu"
                    }
                  },
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "line": {
                  "palette_params": {
                    "x1": {
                      "type": "liczba"
                    },
                    "y1": {
                      "type": "liczba"
                    },
                    "x2": {
                      "type": "liczba"
                    },
                    "y2": {
                      "type": "liczba"
                    }
                  }
                },
                "putImageData": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "rect": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "width": {
                      "type": "liczba"
                    },
                    "height": {
                      "type": "liczba"
                    }
                  }
                },
                "setAlpha": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "alphaValue": {
                      "type": "liczba"
                    }
                  }
                },
                "setBlue": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "blueValue": {
                      "type": "liczba"
                    }
                  }
                },
                "setFillColor": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setGreen": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "greenValue": {
                      "type": "liczba"
                    }
                  }
                },
                "setRGB": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "red": {
                      "type": "liczba"
                    },
                    "green": {
                      "type": "liczba"
                    },
                    "blue": {
                      "type": "liczba"
                    },
                    "alpha": {
                      "type": "liczba"
                    }
                  }
                },
                "setRed": {
                  "palette_params": {
                    "imageData": {
                      "type": "obiekt"
                    },
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    },
                    "redValue": {
                      "type": "liczba"
                    }
                  }
                },
                "setStrokeColor": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setStrokeWidth": {
                  "palette_params": {
                    "width": {
                      "type": "liczba"
                    }
                  }
                }
              }
            },
            "data": {
              "name": "Dane",
              "expressions": {
                "createRecord": {
                  "palette_params": {
                    "record": {
                      "type": "obiekt"
                    }
                  }
                },
                "createRecordSync": {
                  "palette_params": {
                    "table": {
                      "type": "Łańcuch"
                    },
                    "record": {
                      "type": "Obiekt"
                    }
                  }
                },
                "deleteRecord": {
                  "palette_params": {
                    "record": {
                      "type": "obiekt"
                    }
                  }
                },
                "drawChart": {
                  "palette_params": {
                    "options": {
                      "type": "obiekt"
                    }
                  }
                },
                "drawChartFromRecords": {
                  "palette_params": {
                    "options": {
                      "type": "obiekt"
                    }
                  }
                },
                "getColumn": {
                  "palette_params": {
                    "table": {
                      "type": "Łańcuch"
                    },
                    "column": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "getPrediction": {
                  "palette_params": {
                    "name": {
                      "type": "Łańcuch"
                    },
                    "id": {
                      "type": "Łańcuch"
                    },
                    "data": {
                      "type": "Obiekt"
                    },
                    "callback": {
                      "type": "Funkcja"
                    }
                  }
                },
                "readRecords": {
                  "palette_params": {
                    "terms": {
                      "type": "obiekt"
                    }
                  }
                },
                "readRecordsSync": {
                  "palette_params": {
                    "table": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "setKeyValue": {
                  "palette_params": {
                    "key": {
                      "description": "Nazwa klucza, który ma być przechowywany."
                    },
                    "value": {
                      "description": "Dane, które mają być przechowywane."
                    }
                  }
                },
                "updateRecord": {
                  "palette_params": {
                    "record": {
                      "type": "obiekt"
                    }
                  }
                }
              }
            },
            "turtle": {
              "expressions": {
                "arcLeft": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    },
                    "radius": {
                      "type": "liczba"
                    }
                  }
                },
                "arcRight": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    },
                    "radius": {
                      "type": "liczba"
                    }
                  }
                },
                "dot": {
                  "palette_params": {
                    "radius": {
                      "type": "liczba"
                    }
                  }
                },
                "getX": {
                  "examples": {
                    "Am I off the screen?": {
                      "name": "Czy jestem poza ekranem?"
                    }
                  }
                },
                "move": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "moveBackward": {
                  "palette_params": {
                    "pixels": {
                      "type": "liczba"
                    }
                  }
                },
                "moveForward": {
                  "palette_params": {
                    "pixels": {
                      "type": "liczba"
                    }
                  }
                },
                "moveTo": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    },
                    "y": {
                      "type": "liczba"
                    }
                  }
                },
                "penColor": {
                  "palette_params": {
                    "color": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "penRGB": {
                  "palette_params": {
                    "r": {
                      "type": "Liczba"
                    },
                    "g": {
                      "type": "liczba"
                    },
                    "b": {
                      "type": "liczba"
                    },
                    "a": {
                      "type": "liczba"
                    }
                  }
                },
                "penWidth": {
                  "palette_params": {
                    "width": {
                      "type": "liczba"
                    }
                  }
                },
                "show": {
                  "short_description": "Sprawia, że żółw jest widoczny w obecnym miejscu."
                },
                "speed": {
                  "palette_params": {
                    "value": {
                      "type": "liczba"
                    }
                  }
                },
                "turnLeft": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    }
                  }
                },
                "turnRight": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    }
                  }
                },
                "turnTo": {
                  "palette_params": {
                    "angle": {
                      "type": "liczba"
                    }
                  }
                }
              }
            },
            "control": {
              "expressions": {
                "ifBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "ifElseBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "whileBlock": {
                  "return_value": "Brak wartości zwracanej."
                },
                "clearInterval": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "clearTimeout": {
                  "palette_params": {
                    "timeout": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "setInterval": {
                  "palette_params": {
                    "ms": {
                      "type": "liczba"
                    }
                  }
                },
                "setTimeout": {
                  "palette_params": {
                    "ms": {
                      "type": "liczba"
                    }
                  }
                },
                "stopTimedLoop": {
                  "palette_params": {
                    "loop": {
                      "type": "Liczba"
                    }
                  }
                },
                "timedLoop": {
                  "palette_params": {
                    "ms": {
                      "type": "Liczba"
                    },
                    "callback": {
                      "type": "Funkcja"
                    }
                  }
                }
              }
            },
            "math": {
              "name": "Matematyka",
              "expressions": {
                "mathAbs": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMax": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathMin": {
                  "palette_params": {
                    "n1, n2,..., nX": {
                      "type": "liczba"
                    }
                  }
                },
                "mathPow": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "mathRound": {
                  "palette_params": {
                    "x": {
                      "type": "liczba"
                    }
                  }
                },
                "mathSqrt": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    }
                  }
                },
                "moduloOperator": {
                  "palette_params": {
                    "x": {
                      "type": "Liczba"
                    },
                    "y": {
                      "type": "Liczba"
                    }
                  }
                },
                "randomNumber_min_max": {
                  "palette_params": {
                    "min": {
                      "type": "liczba",
                      "description": "Zwrócona najmniejsza liczba"
                    },
                    "max": {
                      "type": "liczba",
                      "description": "Zwrócona największa liczba"
                    }
                  }
                },
                "randomNumber": {
                  "palette_params": {
                    "min": {
                      "type": "liczba",
                      "description": "Zwrócona najmniejsza liczba"
                    },
                    "max": {
                      "type": "liczba",
                      "description": "Zwrócona największa liczba"
                    }
                  }
                }
              }
            },
            "variables": {
              "name": "Zmienne",
              "expressions": {
                "declareAssign_object": {
                  "examples": {
                    "Choose Your Own Adventure": {
                      "name": "Wybierz własną przygodę"
                    }
                  }
                },
                "substring": {
                  "examples": {
                    "Example: Palindrome": {
                      "description": "Sprawdź, czy słowo to palindromem."
                    }
                  },
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch, aby znaleźć jego podłańcuch."
                    },
                    "start": {
                      "type": "liczba",
                      "description": "Pozycja początkowa podstringu."
                    },
                    "end": {
                      "type": "liczba",
                      "description": "(end-1) jest końcową pozycją podstringu."
                    }
                  },
                  "return_value": "Podłańcuch od start do end-1",
                  "short_description": "Zwraca łańcuch wyodrębniony z pozycji _start_ do pozycji poprzedzającej _end_ w oryginalnym łańcuchu.",
                  "tips": "-   \\_substring () \\_ zakłada start\\\\ \\<=end, lub zamienia je, jeśli nie są."
                },
                "toLowerCase": {
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch do skopiowania i konwersji na małe litery."
                    }
                  },
                  "return_value": "Kopia łańcucha przekonwertowana na małe litery."
                },
                "addPair": {
                  "palette_params": {
                    "object": {
                      "type": "Obiekt"
                    },
                    "key": {
                      "type": "Łańcuch"
                    }
                  },
                  "return_value": "Żaden"
                },
                "getValue": {
                  "palette_params": {
                    "object": {
                      "type": "Obiekt"
                    },
                    "key": {
                      "type": "Łańcuch"
                    }
                  }
                },
                "insertItem": {
                  "palette_params": {
                    "index": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                },
                "length": {
                  "examples": {
                    "Example: Palindrome": {
                      "description": "Sprawdź, czy słowo to palindromem."
                    }
                  },
                  "palette_params": {
                    "string": {
                      "description": "Łańcuch, aby znaleźć jego długość."
                    }
                  },
                  "return_value": "Długość łańcucha",
                  "short_description": "Zwraca długość łańcucha.",
                  "tips": "-   _length_ is always >= 0"
                },
                "removeItem": {
                  "palette_params": {
                    "index": {
                      "type": "liczba"
                    }
                  },
                  "return_value": "Brak wartości zwracanej."
                }
              }
            },
            "functions": {
              "name": "Funkcje",
              "expressions": {
                "comment": {
                  "return_value": "Komentarze są ignorowane przez komputer.",
                  "short_description": "Zapisuje opis jakiegoś kodu."
                }
              }
            },
            "advanced": {
              "name": "Zaawansowane",
              "expressions": {
                "setStyle": {
                  "palette_params": {
                    "id": {
                      "type": "Łańcuch"
                    },
                    "css": {
                      "type": "Łańcuch"
                    }
                  }
                }
              }
            },
            "maker": {
              "expressions": {
                "createButton": {
                  "palette_params": {
                    "Pin": {
                      "type": "liczba"
                    }
                  }
                },
                "createLed": {
                  "palette_params": {
                    "Pin": {
                      "type": "liczba"
                    }
                  }
                },
                "pinMode": {
                  "palette_params": {
                    "pin": {
                      "type": "Liczba"
                    },
                    "mode": {
                      "type": "Łańcuch"
                    }
                  }
                }
              }
            },
            "circuit": {
              "expressions": {
                "isPressed": {
                  "return_value": "Wartość logiczna"
                },
                "buzzer.frequency": {
                  "palette_params": {
                    "frequency": {
                      "type": "liczba"
                    },
                    "duration": {
                      "type": "liczba"
                    }
                  }
                },
                "buzzer.note": {
                  "palette_params": {
                    "duration": {
                      "type": "liczba"
                    }
                  }
                },
                "buzzer.play": {
                  "palette_params": {
                    "tempo": {
                      "type": "Liczba"
                    }
                  }
                },
                "blink": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "color": {
                  "palette_params": {
                    "red": {
                      "type": "liczba"
                    },
                    "green": {
                      "type": "liczba"
                    },
                    "blue": {
                      "type": "liczba"
                    }
                  }
                },
                "intensity": {
                  "palette_params": {
                    "brightness": {
                      "type": "liczba"
                    }
                  }
                },
                "pulse": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "led.blink": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "led.pulse": {
                  "palette_params": {
                    "interval": {
                      "type": "liczba"
                    }
                  }
                },
                "toggleSwitch.isOpen": {
                  "return_value": "Wartość logiczna"
                }
              }
            }
          }
        },
        "spritelab": {
          "name": "Sprite Lab",
          "categories": {
            "sprites": {
              "name": "Duszki"
            },
            "world": {
              "name": "Świat"
            },
            "location": {
              "name": "Położenie"
            },
            "actions": {
              "name": "Działania"
            },
            "events": {
              "name": "Zdarzenia"
            },
            "behaviors": {
              "name": "Zachowanie"
            },
            "loops": {
              "name": "Pętle"
            },
            "variables": {
              "name": "Zmienne"
            },
            "math": {
              "name": "Matematyka"
            },
            "logic": {
              "name": "Logika"
            },
            "functions": {
              "name": "Funkcje"
            },
            "text": {
              "name": "Tekst"
            },
            "comments": {
              "name": "Komentarze"
            }
          }
        },
        "javalab": {
          "name": "Java Lab"
        }
      }
    }
  }
}