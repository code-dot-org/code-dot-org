"he":
  data:
    game:
      name:
        Unplug1: "היכרות למדעי המחשב"
        Maze: "המבוך"
        Multi: "דברי בחירות מרובות"
        Unplug2: "חשיבה חישובית"
        Unplug3: "תכנות לנייר משבצות"
        Artist: "האמן"
        Unplug4: "אלגוריתמים"
        Artist2: "האומן 2"
        Unplug5: "פונקציות"
        Farmer: "האיכר"
        Unplug6: "תנאים"
        Artist3: "האומן 3"
        Unplug7: "כתיבת שיר"
        Farmer2: "האיכר 2"
        Unplug8: "הפשטה"
        Artist4: "האמן 4"
        Unplug9: "הרץ פעולה בשנית"
        Farmer3: "האיכר 3"
        Unplug10: "האינטרנט"
        Artist5: "האומן 5"
        Unplug11: "סיום"
        MazeEC: "המבוך"
        Bounce: "להקפיץ"
        Flappy: "ציפור מתנופפת"
        Jigsaw: "פאזל"
        MazeStep: "מצב שלב מבוך"
        Wordsearch: "תפזורת"
        Webapp: "מעבדת היישומים"
        ArtistEC: "האמן"
        TextMatch: "התאמת טקסט"
        StudioEC: "מעבדת משחקים"
        Applab: "מעבדת היישומים"
        NetSim: "מדמה אינטרנט"
        Custom: "אמן"
        CustomStudio: "מעבדת משחקים"
        Gamelab: Game Lab
    trophy:
      name:
        Bronze: "ארד"
        Silver: "כסף"
        Gold: "זהב"
    concept:
      description:
        sequence: "סדרה"
        if: בלוק "אם"
        if_else: "בלוק ״אם-אחרת״"
        loop_times: "בלוק ״חזור פעמים״"
        loop_until: "בלוק ״חזור עד״"
        loop_while: "בלוק בעת"
        loop_for: "בלוק ״מונה״"
        function: "פונקציות"
        parameters: "פונקציות ופרמטרים"
    level:
      instructions:
        maze_2_2: 'תוכל לעזור לי לתפוס את החזיר השובב? חבר כמה בלוקים של "לך קדימה"
          יחד ותלחץ על "הפעל תוכנית" כדי לעזור לי להגיע אליו. '
        maze_2_1: "החזיר הזה מבלגן לי את הנוצות. תעזור לי למצוא אותו!"
        maze_2_2_5: "תשרטטו את השביל ותובילו אותי אל החזיר המטופש הזה. תזהרו מדנמיט
          או הנוצות שלי יעופו!"
        maze_2_3: "תוביל אותי לרוע הירוק!(תיזהר מדינמיט)"
        maze_2_4: "תהיו רגועים ותעזרו לי למצוא את החזיר הרע. אחרת אני עלול להתעצבן!"
        maze_2_5: "יש דרך בה אני אוכל להגיע לחזיר הטפשי כשאני אשתמש רק ב2 בלוקים.
          אתם יכולים למצוא אותה?"
        maze_2_6: "נסה להביא אותי לפולש הירוק תוך שימוש רק בשלושה בלוקים."
        maze_2_7: עזור לי לגרש את החזרזיר הרע באמצעות כמה שפחות בלוקים. נסה להשתמש
          בבלוק "חזור על הפקודה" יותר מפעם אחת.
        maze_2_8: 'כאשר בלוק אפור, פירוש הדבר הוא שאסור למחוק אותו. פיתרו את החידה
          באמצעות הבלוק "חזור", אשר חוזר על עצמו 3 פעמים. נסו לשים את 3 הבלוקים הבאים
          בתוך הבלוק "חזור" האפור: קדימה, קדימה, פנה.'
        maze_2_9: 'נסה להשתמש בבלוק החדש: "חזור עד ש" -  הוא יחזור על עצמו עד שאגיע
          לחזרזיר המעצבן.'
        maze_2_10: "טוב, בפעם האחרונה לאימון - האם אתה יכול לפתור זאת באמצעות רק 4
          בלוקים?"
        maze_2_11: "איש יקר. אני זומבי. אני רעב. חייב... להגיע.... אל החמנית... אתה
          יכול להוביל אותי לשם באמצעות 5 בלוקים בלבד?"
        maze_2_12: ". בסדר, זה דומה, אבל שונה במקצת. האם אתה יכול לעשות זאת רק בעזרת
          5 בלוקים?"
        maze_2_13: 'השתמש בבלוק החדש "אם" על מנת לעזור לי לחהליט מתי לפנות. רמז: אתה
          צריך רק עוד בלוק אחד נוסף, אבל תלמד איך ליישם זאת על מנת שתוכל בפעם הבאה
          לעשות בעצמך.'
        maze_2_14: טוב, זה בדיוק כמו החידה האחרונה, אבל עליך לזכור איך להשתמש בבלוק
          "אם" ובבלוק "חזור שוב" יחד.
        maze_2_15: אני רוצה חמניות! השתמש בבלוק "אם" על מנת להביא אותי לשם תוך שימוש
          בכמה שפחות בלוקים.
        maze_2_16: "טוב, בו נעשה זאת שוב על מנת להתאמן - זה לא מאוד קשה, אבל תיזהר
          מהצ'ומפרים!"
        maze_2_17: הבלוק "אם - אז" בודק את המצב, ועושה פעולה אחת או אחרת. על מנת להביא
          אותי לחמניות השתדל להשתמש בבלוק החדש.
        maze_2_18: עוד תרגול אחד של הבלוק "אם - אז", האם אתה יכול להצליח בנסיון הראשון?
        maze_2_19: "האם אתה יכול להוסיף רק 3 בלוקים על מנת לעזור לי לפתור מבוך מסובך
          יותר? אם תעשה זאת נכון, אני אוכל ללכת  בכל דרך מפותלת לא משנה מה אורכה."
        turtle_1_1: "שלום אני אמן, אתה יכול לכתוב קוד כדי לגרום לי לצייר כמעט הכל.
          תשתמש בכמה בלוקים כדי לגרום לי לצייר על הקווים האפורים בתמונה."
        turtle_1_2: 'עכשיו צייר ריבוע. הערה: השתמש בצבע האהוב עלייך ע"י בחירתו בבלוק
          החדש "הגדר צבע".'
        turtle_1_3: "צור ריבוע באמצעות 3 בלוקים בלבד."
        turtle_1_4: 'צייר משולש שכל אחת מהפאות שלו בצבע שונה ע"י שימוש באפשרות "צבע
          אקראי" שבוחר צבע שונה בכל פעם. רמז: עליך להפעיל ע"י לחיצה על המספר בבלוק
          הסיבוב.'
        turtle_1_5: "עכשיו לאימון, צייר משולש ואז מרובע על מנת לצייר מעטפה."
        turtle_1_6: "האם אתה יכול לצייר את המשולש והריבוע הזה? רמז: צייר את המשולש
          קודם, ואז מצא כמה צריך להסתובב בטרם תצייר את הריבוע."
        turtle_1_7: "בסדר, בוא ננסה רמה קצת יותר קשה -בוא נראה אם אתה יכול לצייר משקפיים
          ירוקים. והריבועים צריכים 100 פיקסלים בכל צד, ובנפרד - 50 פיקסלים. אל תשכח
          לצייר בצבע ירוק!"
        turtle_1_8: בסדר, נסה להבין מה קורה אם תפעיל קוד זה (או לחץ "הפעל" על מנת
          לנסות). עכשיו חזור על כך מספיק פעמים על מנת להשלים את הציור. הצבעים יהיו
          שונים בכל פעם.
        turtle_1_9: "האם אתה יכול להבין מהו המספר שצריך להחליף את סימני השאלה כדי
          לצייר עיגול?"
        turtle_1_10: 'עשית זאת! עכשיו צייר מה שאתה רוצה. כמה רעיונות כיפיים: מר קו,
          פתית שלג או ספירלה. כמו כן נסה את הבלוק החדש "קבע עובי". תהנה!'
        turtle_4_1: 'האם אתה יכול לצייר משולש (עם קצוות של 100 פיקסלים) בעזרת 3 בלוקים
          בלבד? רמז: השתמש בבלוק "חזור".'
        turtle_4_2: 'הוסף בלוק: "פנה ימינה ב90 מעלות" במקום כלשהו באמצע של הקוד כבר
          מחוץ לסביבת העבודה כדי לצייר את המשולשים האלה.'
        turtle_4_3: בסדר, הנה הקוד שכתבת על מנת לצייר משולש. האם אתה יכול להוסיף בלוקים
          של "חזור שוב" ו"סובב" על מנת לצייר פרח יפה?
        turtle_4_4: "הנה אותו קוד מהחידה הקודמת, אך מסובבת  ב36 מעלות אחרי ציור של
          כל משולש. כמה פעמים יהיה צורך לחזור? (רמז: אחרי 360 מעלות של סיבוב הציור
          יצור מעגל שלם)"
        turtle_4_5: "הנה אותו קוד מהחידה הקודמת. אבל חוזרת 36 פעמים. בכמה מעלות הסיבוב
          אמור להיות? (רמז: אחרי 360 מעלות של סיבוב  הציור יהפוך לעיגול שלם)"
        turtle_4_6: "על ידי שימוש ב-3 בלוקים, האם אתה יכול לצייר ריבוע עם קצוות של
          20 פיקסלים?"
        turtle_4_7: "הנה הקוד עבור ציור הריבוע מהפאזל האחרון. האם תוכל לחזור עליו
          ולצייר 10 משבצות סמוכות כמו סולם? רמז: אתה צריך רק עוד שני בלוקים ."
        turtle_4_8: "הנה הפתרון לחידה הקודמת. האם תוכל להוסיף עוד 2 אבני בנייה כדי
          להשלים את הציור?"
        turtle_4_9: "הנה הפתרון לחידה הקודמת. כמה מעלות עליך להסתובב כדי להשלים את
          הציור?(אתה ודאי תצטרך לנחש מס' פעמים)"
        turtle_4_10: "הנה הפתרון לחידה הקודמת. כמה פעמים עלייך לחזור על הפעולה בכדי
          להשלים את הציור?"
        turtle_4_11: נסה לשנות את המספרים של אבני הבנייה המורות על "סיבוב" ו "חזור"
          ליצירת דפוסים שונים. נסה לשנות את כל יתר הקוד כדי לצייר כל דבר אחר שאתה
          רוצה.
        maze_karel_1_1: . היי, אני חקלאי. אני זקוק לעזרתך כדי לשטח את השדה בחווה שלי
          על מנת להכין אותו לנטיעה. תקדם אותי אל ערימת העפר ותשתמש בבלוק "הסר" כדי
          להסיר אותו.
        maze_karel_1_2: עכשיו, תביא אותי לבור ותמלא אותו עם שני דליים של עפר, תוך
          שימוש בבלוק "למלא".
        maze_karel_1_3: "העבר אותי אל ערימת העפר, ותגיד לי כמה shovelfuls יש להסיר
          על-ידי שימוש במספר הקטן ביותר של אבני בנייה."
        maze_karel_1_4: "תוכל לעזור לי להסיר את כל ארבע ערימות עפר? רמז: השתמש באבן
          בנייה לפעולה שחוזרת על עצמה אם אתה יכול."
        maze_karel_1_5: 'עזור לי למלא את כל הבורות האלו עם shovelfuls 5 של עפר. רמז:
          את יכולה להשתמש באבן בנייה "פעולה חוזרת" בתוך אבן הבנייה "תוך כדי".'
        maze_karel_1_6: הסר את כל ערימות העפר, באמצעות אבני בנייה מעטות ככל האפשר.
          האפשרויות החדשות בתפריט הנפתח על אבן הבנייה "תוך כדי" תאמר לי אם אני עומדת
          על ערימה או חור.
        maze_karel_1_7: "וואו, מצאתי בור ממש עמוק! איני יודע כמה דליים של עפר אני
          צריך. האם אתה יכול לכתוב תוכנית תמלא את הבור עד שהאדמה תהיה מאוזנת?"
        maze_karel_1_8: "עזור לי למלא את החור בקצה של השדה, באמצעות אבני בנייה מעטות
          ככל האפשר."
        maze_karel_1_9: 'גרום לי להסיר את כל ערימות העפר האלו. נסה להשתמש באבני בנייה
          מעטות ככל האפשר. רמז: נסה להשתמש באבן הבנייה "תוך כדי".'
        maze_karel_1_10: 'אני עובד עד מאוחר, כך שבחוץ חשוך ואני לא יכול לומר עד כמה
          גדולות ערימות העפר האלו. כעת, אין לי את כל האפשרויות שהיו לי במסגרת אבן
          הבנייה "תוך כדי". הזז אותי לאורך המגרש ואם ישנה ערמת עפר הזז אותה מהדרך. '
        maze_karel_1_11: 'עדיין חשוך בחוץ. הזז אותי לאורך המגרש. אם ישנה ערמת עפר
          הסר אותה, ואם ישנו חור, מלא אותו בעפר. רמז: השתמש בתפריט האפשרויות הנפתח
          באבן הבנייה "אם".'
        turtle_2_1: "שלום. אני אומן זומבי. אני אוהב לצייר! עזור לי לצייר ריבוע בצבע
          מיוחד. הערה חשובה: יש לך את אותם אבני בנייה אבל כעת הן מסודרות בקטגוריות."
        turtle_2_2: ברוכים הבאים לשימוש בפונקציות., אשר ייתנו לך את האפשרות להגדיר
          אבני בנייה חדשות! נסו את אבן הבנייה "צייר ריבוע", היא נמצאת בקטגורית הפונקציות,
          כדי לצייר ריבוע קטן ירוק 50X50.
        turtle_2_3: תשתמש בבלוק "חזור שוב" (בקטגוריית חזרות) על מנת לצייר 3 מרובעים
          בגודל 100, כל אחד במרחק 120 מעלות מהשני. עשה זאת בשלושה צבעים אקראיים.
        turtle_2_4: "עכשיו אנחנו הולכים להשביח את הקוד. נשנה את הקוד כדי לייצור 36
          ריבועים, ברוחב 100 פיקסלים , ובמרחק של 10 מעלות האחד מהשני. רמז: ייתכן שתרצה
          להשתמש במחוון כדי לגרום לי להתקדם מהר יותר."
        turtle_2_5: 'צייר מס'' ריבועים עם צלעות ברוחב של 50, 60, 70, 80, ו-90 פיקסלים
          בכל פעם. תצטרך להשתמש בפונקציות "צייר ריבוע" חמש פעמים. '
        turtle_2_6: 'בסדר, תכנית זו תשתמש במונה, כדי לצייר את אותם הריבועים כמו בפעם
          הקודמת. אתה רוצה שהריבוע יהיה באותו הגודל כמו המונה, לכן השתמש באבן בנייה
          "מונה". רמז: הוא נמצא בקטגוריות המשתנים. '
        turtle_2_7: 'הנה תכנית ליצירת ספירלה, אבל אבני הבנייה מנוטרלות ולכן לא יריצו
          אותה. צור תכנית חדשה על ידי השימוש באבן בנייה "ספור עם"(בקטגורית לופים)
          ובאבן בנייה "מונה" (בקטגורית משתנים) על-מנת לצייר את אותה הספירלה. '
        turtle_2_7_5: 'ישנה פונקציה חדשה בשם "צייר איש שלג"(בקטגורית הפונקציות). צייר
          שני אנשי שלג, האחד בגובה 250 והשני בגובה 100. '
        turtle_2_8: זה אחד קצת מטעה. השתמש בפונקציה "צייר איש שלג" ובבלוק החדשה "קפוץ
          קדימה" (בקטגוריית הפעולות). צייר 3 אנשי-שלג בצבעים שונים, במרחק 100 פיקסלים
          אחד מהשני.
        turtle_2_9: השתמש בלולאה חוזרת "ספור עם" כדי לצייר משפחת אנשי-שלג עם גבהים
          של 110, 100, 90, 80, ו70. בין כל שני אנשי שלג צריך להיות מרחק של 60 פיקסלים.
        turtle_2_10: "הנה קצת קוד כדי להתנסות בכל מיני ספירלות. מה קורה אם נשנה את
          כמות הסיבוב? או נגדיר צבה רנדומלי בלולאה? צייר מה שתרצה."
        maze_karel_2_1: "תנסה להשתמש בבלוקים כדי לעזור לי להסיר את כל הערימות ולמלא
          את כל הבורות באדמה. נסה להשתמש בלולאות במקום להשתמש ביותר מדי בלוקים. רמז:
          אתה יכול לשים לולאה בתוך לולאה."
        maze_karel_2_2: אנחנו הגדרנו את הבלוק שלנו שנקרא "מלא 5", שעכשיו בקטגוריית
          הפונקציות. השתמש בזה כדי לעזור לי למלא את החור הזה.
        maze_karel_2_3: השתמש בפונקציה החדשה "מלא 5" כדי לגרום לי למלא את כל הבורות.
          תצטרך לגרור את הבלוק "מלא 5" מתוך קטגוריית הפונקציות.
        maze_karel_2_4: "הגדר פונקציה חדשה שמסירה 7 דליים. אז השתמש בזה כדי לכתוב
          תוכנה שעוזרת לי להסיר את כל הערימות."
        maze_karel_2_5: "צור פונקציה חדשה שמסירה 6 דליים מערמה, והשתמש בזה כדי לעזור
          לי ליישר את כל הערימות."
        maze_karel_2_6: השתמש בשתי הפונקציות החדשות, "מלא 8" ו"הסר 8" כדי לעזור לי
          לישר את הערימה ולמלא את הבור.
        maze_karel_2_7: "יש פרה בשדה שלי! כתוב פונקציה חדשה שעוזרת לי להימנע מהפרה
          ולהסיר את הערימה. שים את כל הבלוקים שלך בתוך הפונקציה החדשה."
        maze_karel_2_8: השתמש בפונקציה החדשה "הימנע מהפרה והסר 1" כדי לעזור לי להסיר
          את כל הערימות.
        maze_karel_2_9: "אוקיי, הנה פונקציה שמסירה 4 ערימות של עפר בטור אנכי. נסה
          לשים את הפונקציה הזאת בתוך לולאה, כך שתסיר את כל ערימות העפר, ותשתמש רק
          במעט פונקציות חדשות."
        maze_karel_2_10: "הזז אותי לצד השני של השדה, והשתמש בשתי הפונקציות האלו כדי
          לעזור לי להסיר את כל הערימות ולמלא את כל הבורות."
        turtle_3_1: חידה זו מראה לך איך פונקציות "צייר ריבוע" ו- "צייר עיגול" מוגדרות.
          הגדרת פונקציה אינה מפעילה את הבלוקים שלה. עליך למשוך את הבלוק "צייר ריבוע"
          כדי באמת לצייר ריבוע.
        turtle_3_2: תוך שימוש בפונקציה "צייר ריבוע" כדוגמה, צור פונקציה של "צייר משולש"
          והשתמש בה.
        turtle_3_3: "צייר גדרות משולשות סביב החתולים וגדר מרובעת סביב הפרה. עצה: בדוק
          את התוכנית במהלך הכתיבה."
        turtle_3_4: בוא נראה אם אתה יכול להשתמש ב- "צייר ריבוע" ו- "צייר משולש" (וגם
          מספר בלוקים אחרים) כדי לצייר בית מסביב לאריה.
        turtle_3_5: 'עכשיו צור פונקצית "צייר בית" חדשה והשתמש בה ליצור בית לשתי חתולים.
          רמז: כדי ליצור פונקציה חדשה, השתמש בבלוק "עשה משהו", ושנה את שם הלוק על-ידי
          כתיבת הטקסט שלך שם.'
        turtle_3_6: 'בשימוש ב"צייר ריבוע" כדוגמה, הוסף קלט בשם "אורך" ל"צייר משולש".
          אחר-כך, צייר משולשים בגדלים שונים. (רמז: לחץ על הכוכב כדי להוסיף קלט לפונקציה)'
        turtle_3_7: הוסף קלט בשם "אורך" ל"צייר בית" ובנה בית גדול לפיל (עם צדדים באורך
          150 פיקסלים)
        turtle_3_8: להלן כל הבלוקים של החידה הקודמת.  שנה את "צייר בית" כך שאני אסיים
          בפינה הימנית התחתונה לאחר ציור בית חדש. השתמש בפונקציה ששונתה כדי לצייר
          שלושה בתים.
        turtle_3_9: האם תוכל ליצור מחדש את פונקציית "צייר בית" ללא עזרה? נסה את זה
          ולאחר מכן צייר שורת בתים.
        turtle_3_10: "למדת הרבה! עתה השתמש בזה כדי לצייר את מה שאתה רוצה. נסה לצייר
          כוכב, או ספירלה, או פתית שלג מהודר."
        maze_karel_debug_seq_1: "ברוך הבא לניפוי! הקוד שלי לא עובד כמו שצריך. האם
          אתה יכול למצוא את התקלה ולתקן אותה כדי שאני אוכל ליישר את השדה שלי ולהכין
          אותו לשתילה?"
        maze_karel_debug_seq_2: "מה שגוי בתוכנית הזאת? כיצד הוכל לתקן ובכך אני הוכל
          להסיר את העירמה?"
        maze_karel_debug_repeat: "נפה את התוכנה הזאת בשבילי כדי שהשדה שלי יהיה ישר
          וחלק."
        maze_karel_debug_while: "כיצד תוכל לשנות את התוכנית בשביל שתוכל לעזור לי למלא
          את החור?"
        maze_karel_debug_if: "עזרה! תקן את התוכנית בשביל שהחלקה שלי תהיה ישרה לחלוטין."
        maze_karel_debug_if_else: "נפה את התוכנה הזאת בשבילי כדי שאוכל למלא את הבורות
          ולהסיר את כל הערימות."
        maze_karel_debug_function_1: "מה אתה צריך לשנות בתוכנית הזאת בשביל לעזור לי
          להסיר את כל הערימות?"
        maze_karel_debug_function_2: "האם תוכל לנפות בשבילי את התוכנה הזאת כדי שאוכל
          ליישר את השדה שלי?"
        maze_karel_debug_function_3: "ערוך את התוכנה הזאת כדי שאני אסיר את כל הערימות
          שבשדה שלי."
        turtle_5_1: "נסה להפעיל תוכנית זו ולבצע שינויים כדי לראות מה מתרחש. האם אתה
          יכול להבין איך התוכנית עובדת? (או למחוק אותה ולהחליף אותה במשהו שונה לגמרי)"
        turtle_5_2: "נסה להפעיל תוכנית זו ולבצע שינויים כדי לראות מה מתרחש. האם אתה
          יכול להבין איך התוכנית עובדת? (או למחוק אותה ולהחליף אותה במשהו שונה לגמרי)"
        turtle_5_3: "נסה להפעיל תוכנית זו ולבצע שינויים כדי לראות מה מתרחש. האם אתה
          יכול להבין איך התוכנית עובדת? (או למחוק אותה ולהחליף אותה במשהו שונה לגמרי)"
        turtle_5_4: "נסה להפעיל תוכנית זו ולבצע שינויים כדי לראות מה מתרחש. האם אתה
          יכול להבין איך התוכנית עובדת? (או למחוק אותה ולהחליף אותה במשהו שונה לגמרי)"
        turtle_5_5: "נסה להפעיל תוכנית זו ולבצע שינויים כדי לראות מה מתרחש. האם אתה
          יכול להבין איך התוכנית עובדת? (או למחוק אותה ולהחליף אותה במשהו שונה לגמרי)"
        turtle_5_6: "נסה להפעיל תוכנית זו ולבצע שינויים כדי לראות מה מתרחש. האם אתה
          יכול להבין איך התוכנית עובדת? (או למחוק אותה ולהחליף אותה במשהו שונה לגמרי)"
        maze_3_1: "אני צריך להגיע לחזיר הזה! הכנס כמה פעמים move(); כדי שאוכל להחזיר
          את הביצים שלי."
        maze_3_2: "כתוב לי תוכנה כדי שאוכל להגיע עד לחזיר."
        maze_3_3: "איך אני אגיע לחזיר? תזהר שאני לא יתקל בTNT!"
        maze_3_4: "אוף! כתוב לי תוכנה שעוזרת לי לעבור מסביב לTNT ולהגיע לחזיר."
        bounce_1_basketball: Attach a block to the "when left arrow" block and press
          "Run". Move the hand using the left arrow to reach the finish target.
        bounce_2_basketball: Attach a block to the "when right arrow" and "when left
          arrow" blocks. Move the hand to reach both finish targets.
        bounce_5_basketball: We're going to send a ball flying down towards the hand.
          Attach a block to the "when ball hits hand" block to ensure the ball reaches
          the flag.
        bounce_6_basketball: Now the flag is on the top. You need to attach blocks
          to both of the "when ball hits" blocks to solve this puzzle.
        bounce_7_basketball: Attach blocks to each of the "when" blocks. Bounce the
          ball until it hits the flag.
        bounce_10_basketball: Now there is a goal at the top! Attach the "score point"
          and "score opponent point" blocks to the "when ball in goal" and "when ball
          misses hand" blocks to make a game. See how many points you can score before
          your opponent scores twice.
        bounce_11_basketball: You can now attach blocks to the "when run" block. You
          have to attach the new "throw new ball" block in more than one place. Also,
          try changing the scene or the speed of the hand and the ball and see how
          many points you can score before your opponent scores twice!
        bounce_12_basketball: Create your own Basketball game. You can change all
          the rules. When you're done, click Finish to let friends try your game on
          their phones.
        bounce_1_sports: Get to the flag! Attach a block to the "when left arrow"
          block and press "Run" to move the player to the flag.
        bounce_2_sports: There are two flags now! Attach a block to the "when left
          arrow" and "when right arrow" blocks to make your player move in two directions.
        bounce_5_sports: The hockey puck is going to fly down toward the player! Attach
          a block to the "when ball hits player" block to hit the flag.
        bounce_6_sports: Now the flag is on the top. You need to attach blocks to
          both of the "when ball hits" blocks to solve this puzzle.
        bounce_7_sports: Attach blocks to each of the "when" blocks. Bounce the ball
          until it hits the flag.
        bounce_10_sports: Now there is a goal at the top! Attach the "score point"
          and "score opponent point" blocks to the "when ball in goal" and "when ball
          misses hand" blocks to make a game. See how many points you can score before
          your opponent scores twice!
        bounce_11_sports: You can now attach blocks to the "when run" block. You have
          to attach the new "throw new ball" block in more than one place. Also, try
          changing the scene or the speed of the hand and the ball and see how many
          points you can score before your opponent scores twice!
        bounce_12_sports: 'Create your own game! You''re in charge here: you can change
          all the rules, mix and match sports, get creative! When you''re done, click
          Finish to let friends try your game on their phones.'
        bounce_1: צרף בלוק לבלוק "כאשר לוחצים על החץ שמאלה" ולאחר מכן לחץ על "הפעל".
          הזז את המשוט בעזרת החץ שמאלה כדי להגיע ליעד.
        bounce_2: צרף בלוק לבלוק "כאשר לוחצים על החץ ימינה" ול-"כאשר לוחצים על החץ
          שמאלה". הזז את המשוט כדי להגיע לשני היעדים.
        bounce_3: עכשיו נסה משהו דומה עם הבלוק "כאשר חץ למעלה". הזז את המשוט כדי להגיע
          למטרת הסיום בלמעלה.
        bounce_4: "הפעם תצטרך להוסיף ארבע בלוקים. הזז את המשוט לכל ארבע מטרות הסיום
          כדי לסיים את החידה הזה."
        bounce_5: אנחנו הולכים לשלוח כדור לכיוון המשוט. הוסף בלוק לבלוק "כאשר כדור
          פוגע במשוט" כדי לוודע שהכדור מגיע למטרת הסיום.
        bounce_6: עכשיו מטרת הסיום היא למעלה. אתה צריך להוסיף בלוקים לשני הבלוקים
          "כאשר כדור פוגע" כדי לפתור את החידה הזאת.
        bounce_7: צרפו בלוקים לכל אחד מבלוקים ה-"כאשר...". תקפיצו את הכדור עד שהוא
          פוגע במטרת הסיום.
        bounce_10: There is a now a goal at the top. Attach the "score point" and
          "score opponent point" blocks to the "when ball in goal" and "when ball
          misses paddle" blocks to make a game. See how many points you can score
          before your opponent scores twice.
        bounce_11: You can now attach blocks to the "when run" block. You have to
          attach the new "launch new ball" block in more than one place. Also, try
          changing the scene or the speed of the paddle and the ball and see how many
          points you can score before your opponent scores twice.
        bounce_12: Create your own Bounce game. You can change all the visuals and
          the rules. When you're done, click Finish to let friends try your game on
          their phones.
        Custom_builder: גרור בלוקים מתיבת הכלים אל סביבת העבודה כדי לצייר שלב שאתה
          רוצה ליצור. לחץ "הרץ" כשאתה מוכן.
        flappy_1: הוסיפו בלוק לבלוק "בזמן קליק" ולאחר מכן לחץ על "הרץ". לחץ או הקש
          על המסך כדי להעביר את פלאפי אל המטרה.
        flappy_2: כעת הוספנו את הקרקע. צרפו בלוק לבלוק ה-"כאשר פוגע באדמה". התוכנית
          שבניתם זקוקה לבלוק "סיים המשחק" כאשר פלאפי מתרסק.
        flappy_3: הבלוק "התחל ריצה" מאפשר להריץ קוד בתחילת המשחק. נסה להגדיר את המהירות
          ונסה לעוף לכיוון המטרה.
        flappy_4: פלאפי יעוף דרך המכשולים אלא אם תכתוב קוד שיגרום לו להתרסק. הוסף
          בלוק לבלוק "כאשר פוגע במכשול". הקוד שלך צריך ל-'סיים המשחק' כאשר פלאפי מתרסק
          לתוך סט הצינורות הראשונים.
        flappy_5: בואו נוסיף לוח תוצאות ונספור נקודות כאשר פלאפי עובר מכשול. הוסף
          לבלוק "כאשר עובר מכשול", ואז נוסיף נקודה כאשר פלאפי עף דרך את הסט הראשון
          של הצינורות.
        flappy_6: "ראו אם תוכלו עדיין לקבל נקודה אחרי שתגרמו לפלאפי לנפנף בכמות קטנה
          או גדולה יותר."
        flappy_7: עכשיו, נסה לשנות את הרקע על-ידי הוספת בלוק אחר לבלוק "התחל ריצה".
        flappy_8: "באפשרותך להגדיר נראות בכל עת, לא רק כאשר המשחק מתחיל. נסה להגדיר
          רקע אקראי כאשר קורים אירועים אחרים, לדוגמה, כאשר עוברים מכשול."
        flappy_9: "כדי לסבך דברים, כאשר פוגעים במכשול, במקום לסיים את המשחק נסה לשנות
          את התוצאה חזרה ל-0."
        flappy_11: צרו משחק "פלאפי" משלכם. אתם יכולים לשנות את הדמויות ואת כל החוקים,
          אפילו את כוח המשיכה. כשתסיימו, הקליקו על "סיים" כדי לאפשר לחברים שלכם לנסות
          את המשחק שבניתם על המכשירים הניידים שלהם.
        flappy_k1_1: "לשחק Flappy"
        flappy_k1_2: הוסיפו בלוק לבלוק "בזמן קליק" ולאחר מכן לחץ על "הרץ". לחץ או
          הקש על המסך כדי להעביר את פלאפי אל המטרה.
        flappy_k1_3: כעת הוספנו את הקרקע. צרפו בלוק לבלוק ה-"כאשר פוגע באדמה". התוכנית
          שבניתם זקוקה לבלוק "סיים המשחק" כאשר פלאפי מתרסק.
        flappy_k1_4: הבלוק "התחל ריצה" מאפשר להריץ קוד בתחילת המשחק. נסה להגדיר את
          המהירות ונסה לעוף לכיוון המטרה.
        flappy_k1_5: פלאפי יעוף דרך המכשולים אלא אם תכתוב קוד שיגרום לו להתרסק. הוסף
          בלוק לבלוק "כאשר פוגע במכשול". הקוד שלך צריך ל-'סיים המשחק' כאשר פלאפי מתרסק
          לתוך סט הצינורות הראשונים.
        flappy_k1_6: בואו נוסיף לוח תוצאות ונספור נקודות כאשר פלאפי עובר מכשול. הוסף
          לבלוק "כאשר עובר מכשול", ואז נוסיף נקודה כאשר פלאפי עף דרך את הסט הראשון
          של הצינורות.
        flappy_k1_7: "תראו אם תוכלו לקבל מספר נקודות כאשר עוברים מכשול"
        flappy_k1_8: עכשיו, נסה לשנות את הרקע על-ידי הוספת בלוק אחר לבלוק "התחל ריצה".
        flappy_k1_9: תנסו לשנות את השחקן על-ידי הוספת בלוק "קבע שחקן" לבלוק "התחל
          ריצה".
        jigsaw_1: "לחץ על הבלוק"
        jigsaw_2: "גרור את הבלוק אל המטרה"
        jigsaw_3: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_4: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_5: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_6: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_7: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_8: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_9: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_10: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_11: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_12: "ארגן את הבלוקים כדי ליצור תמונה"
        jigsaw_13: "פתור את החידה!"
        mazestep_1: "תיאור צעדי ההליכה במבוך כאן"
        mazestep_2: "תיאור צעדי ההליכה במבוך כאן"
        mazestep_3: "תיאור צעדי ההליכה במבוך כאן"
        mazestep_4: "תיאור צעדי ההליכה במבוך כאן"
        mazestep_5: "תיאור צעדי ההליכה במבוך כאן"
        studio_c2_1: Can you make this dog say "hello world"?
        studio_c2_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_c2_3: Can you write a program to make this dog move to the cat?
        studio_c2_4: Can you write a program that makes the dog move to the cat, and
          have the cat say "hello" when the dog reaches him?
        studio_c2_5: Can you write a program to make the octopus say "hello" when
          it is clicked?
        studio_c2_6: "האם תוכל לכתוב תכנית אשר תגרום לפינגווינים לנוע בעזרת מקשי למעלה
          / למטה / ימינה/שמאלה כדי להגיע לכל המטרות?"
        studio_c2_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c2_8: Can you have the penguin say "Ouch!" and play a "hit" sound if
          he runs into the dinosaur, and then move him with the arrows to make that
          happen?
        studio_c2_9: Can you add a block to score a point when the penguin runs into
          the octopus, and then move him with the arrows until you score?
        studio_c2_10: Can you add blocks to change the background and the speed of
          the penguin, and then move him with the arrows until you score?
        studio_c2_11: Create your own story. When you're done, click Finish to let
          friends try your story on their phones.
        studio_c3_story_1: Can you make this dog say "hello world"?
        studio_c3_story_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_c3_story_3: Can you write a program to make this dog move to the cat?
        studio_c3_story_4: Can you write a program that makes the dog move to the
          cat, and have the cat say "hello" when the dog reaches him?
        studio_c3_story_5: Can you add a block to make the octopus happy?
        studio_c3_story_6: Create your own story. When you're done, click Finish to
          let friends try your story on their phones.
        studio_c3_game_1: Can you write a program to make the octopus say "hello"
          when it is clicked?
        studio_c3_game_2: "האם תוכל לכתוב תכנית אשר תגרום לפינגווינים לנוע בעזרת מקשי
          למעלה / למטה / ימינה/שמאלה כדי להגיע לכל המטרות?"
        studio_c3_game_3: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c3_game_4: Can you have the penguin say "Ouch!" and play a "hit" sound
          if he runs into the dinosaur, and then move him with the arrows to make
          that happen?
        studio_c3_game_5: Can you add a block to score a point when the penguin runs
          into the octopus, and then move him with the arrows until you score?
        studio_c3_game_6: Can you add blocks to change the background and the speed
          of the penguin, and then move him with the arrows until you score?
        studio_c3_game_7: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
        studio_playlab_1: פינגווין רוצה לומר "שלום" - יכולים לעזור לו?
        studio_playlab_2: ילד המערות (שחקן 1) וילדת המערות (שחקן 2) רוצים לומר "שלום"
          אחד לשניה. יכולים לעזור להם על-ידי שימוש פעמיים בבלוק "אומר"?
        studio_playlab_3: Can you help Tennis Girl get to the flag?
        studio_playlab_4: Can you help Tennis Boy (actor 1) get to Tennis Girl (actor
          2) and play a sound when he gets there?
        studio_playlab_5: Can you help the Spacebot say "greetings earthlings" when
          it is clicked? Don’t forget to click it after you click Run
        studio_playlab_6: Can you help the Witch move around using the up/down/right/left
          arrow keys to get to all the magical fireballs?
        studio_playlab_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to it to help the wizard move right and left repeatedly?
        studio_playlab_8: Can you add a block to score a point and a block to play
          a sound when the unicorn runs into the wizard, and then move him with the
          arrows until you score?
        studio_playlab_9: Set the background for this alien invasion and help the
          Spacebot get to the alien faster by changing its speed. Then move him with
          the arrow keys to get to the Spacebot and alert everyone else
        studio_playlab_10: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
        studio_iceage_hello1: Sid wants to gather everyone for a new adventure. Can
          you help him say "hello" by dragging the `say` block out into the work area
          and typing the word "hello" inside?
        studio_iceage_hello2: Sid (actor 1) found Manny (actor 2) and wants to invite
          him on the adventure.  Help them greet each other by using the the "actor
          say" block twice.
        studio_iceage_move_to_flag: Scrat is looking for his acorn!  Help him go the
          last 200 pixels using the "move" block.
        studio_iceage_move_to_actor: Diego (actor 1) is searching for Manny (actor
          2). Help Diego get 200 pixels down to Manny using the "move actor" block.
          Next, connect a block to the "when actor touches" event to play a sound
          when they find each other.
        studio_iceage_repeat: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to it to help Granny get some exercise by moving left
          and right repeatedly?
        studio_iceage_click_hello: Can you help Sid do a final call for friends when
          clicked? Don’t forget to click on him after you hit Run.
        studio_iceage_move_events: Scrat is still looking for acorns! Help him scamper
          around by attaching the "move" block to each of the events and changing
          the direction to work for each arrow key. When you’re done, click Run and
          try to collect all of the acorns.
        studio_iceage_sound_and_points: We’ve provided most of the code that keeps
          Granny moving left and right, as well as the code to move Sid around the
          screen. Can you finish the code and add blocks to the "when actor touches"
          event to make it so that you both play a sound and score a point when Sid
          and Granny collide? Press Run to play the game.
        studio_iceage_warn_ice_age: Everyone needs to move faster because an ice age
          is coming! Change the background to "icebergs" and set Sid’s speed to fast,
          then press Run and move him to Diego to warn him.
        studio_iceage_throw_hearts: Sid wants to let his grandmother, Granny, know
          that he loves her. Use the "actor throw" command to have Sid (actor 1) throw
          hearts at Granny (actor 2)! Set Granny's mood to happy when she gets hit
          with the hearts.
        studio_iceage_free_play: Time to create your own game or story! When you're
          done, click Finish to let friends try your game on their phones, tablets,
          or computers!
        studio_gumball_hello1: Anais wants to make some new friends. Can you help
          her say "hello" by dragging the "say" block out into the work area and typing
          the word "hello" inside?
        studio_gumball_hello2: Darwin (actor 1) and his brother Gumball (actor 2)
          are heading to school.  Help them greet each other by using the the "actor
          say" block twice.
        studio_gumball_move_to_flag: Banana Joe is about to win a field day race!  Help
          him go the last 200 pixels using the "move" block.
        studio_gumball_move_to_actor: Gumball (actor 1) and Darwin (actor 2) are late
          for the field day! Help Gumball get 200 pixels down to Darwin using the
          "move actor" block.  Next, connect a block to the "when actor touches" event
          to play a sound when they find each other.
        studio_gumball_repeat: The "repeat forever" block allows you to run code continuously.  Can
          you attach blocks to it to help Gumball warm up for his race by moving left
          and right repeatedly?
        studio_gumball_click_hello: Can you help Anton announce the start of a race
          by saying "Ready, set, go!"? To test your program, don’t forget to click
          Anton after you click Run!
        studio_gumball_move_events: Darwin is in the flag gathering contest! Help
          him run around by attaching the "move" block to each of the events. When
          you’re done, click Run and try to collect all of the flags.
        studio_gumball_sound_and_points: We’ve provided most of the code that keeps
          Anton (actor 2) moving left and right, as well as the code to move Banana
          Joe (actor 1) around the screen.  Can you finish the code and add blocks
          to the "when actor touches" event to make it so that you both play a sound
          and score a point when Banana Joe and Anton collide?  Press Run to play
          the game.
        studio_gumball_warn_food_fight: Darwin just escaped a food fight! Change the
          background to "characters" and set Darwin’s speed to fast, then press Run
          and move him to Penny to warn her.
        studio_gumball_join_food_fight: Join the food fight! Use the "actor throw
          item right" command to have Banana Joe (actor 1) throw food at Anton (actor
          2)! Set Anton’s mood to angry when he gets hit.
        studio_gumball_free_play: Create your own game or story. When you're done,
          click Finish to let friends try your game on their phones, tablets, or computers!
        studio_full_sandbox: Create your own game. When you're done, click Finish
          to let friends try your game on their phones.
        studio_k1_1: Can you make this dog say "hello world"?
        studio_k1_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_k1_3: Can you write a program to make this dog move to the cat?
        studio_k1_4: Make the dog move to the cat and the cat say "hello" when he
          gets there.
        studio_k1_5: Can you add a block to make the octopus happy?
        studio_k1_6: Create your own story! Move around the cat and dog, and make
          them say things.
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell
          the word STORY
        applab_ec_simple: Create your app by using the blocks in the toolbox.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking
          it in the new "penColor" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas:
          a stick figure, snowflake, or spiral. Also try the new "penWidth" block.
          Have fun!'
        studio_ec_sandbox: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
    video:
      name:
        maze_intro: "מבוא למבוך"
        artist_intro: "מבוא לאמן"
        farmer_intro: "מבוא חקלאים"
        flappy_intro: "מבוא למשחק פלאפי"
        loop_times: "בלוק חזור שוב מספר פעמים"
        loop_until: "בלוק חזור שוב עד"
        if: בלוק "אם"
        if_else: "בלוק אם/אחרת"
        if_else_scrat: "בלוק אם/אחרת"
        function: "פונקציות"
        loop_while: "בלוק בעת"
        loop_for: "בלוק ספירה"
        parameters: "פונקציות ופרמטרים"
        hoc_wrapup: "סיום שעה של קוד"
        Unplug1: "מהו מדעי המחשב?"
        Unplug2: "חשיבה חישובית"
        Unplug3: "תכנות לנייר משבצות"
        Unplug4: "אלגוריתמים"
        Unplug5: "פונקציות"
        Unplug6: "תנאים"
        Unplug7: "כתיבת שירים"
        Unplug8: "הפשטה"
        Unplug9: Relay programming
        Unplug10: Internet
        Unplug11: "סיום"
        C1_happy_maps_unplugged: "מפות שמחות"
        C1_moveitmoveit_unplugged: "זוזו, זוזו"
        C1_bigevent_unplugged: "האירוע הגדול"
        C1_getting_loopy: Getting Loopy
        C1_pair_programming: "תכנות בזוגות"
        C1_maze_intro_sequencing: Maze Sequencing Intro
        C1_maze_debugging: "מבוך: איתור באגים"
        C1_bee_level_intro: "שלב הדבורה - מבוא"
        C1_artist_intro: "מבוא לאמן"
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: Maze Loops
        C1_bee_loops: Bee Loops
        C1_maze_loops: Maze Loops
        C1_playlab_storytelling: "שחק במעבדה - ליצור סיפור"
        C1_planting_seed: "זריעת זרע"
        C1_building_foundation: Building a Foundation
        C1_going_places_safely: Going Places Safely
        C2_maze_intro: "מבוא למבוך"
        C2_artist_intro: "מבוא לאמן"
        C2_zuck_repeat_loop: Maze Loops
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: Bee Loops
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: Bee Conditionals
        C2_playlab_createstory: "שחק במעבדה - ליצור סיפור"
        C2_graph_paper: "תכנות לנייר משבצות"
        C2_conditionals_with_cards: "תנאים"
        C2_binary_bracelets: Binary Bracelets
        C2_relay_programming: "הרץ פעולה בשנית"
        C2_paper_airplanes: Paper Airplanes
        C2_digital_footprint: Your Digital Footprint
        C2_digital_footprint_v2: Your Digital Footprint
        C3_maze_level_4: Maze Loops
        C3_artist_intro: "מבוא לאמן"
        C3_artist_functions: Artist Functions
        C3_bee_functions: Bee Functions
        C3_bee_conditionals: Bee Conditionals
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: Nested Loops
        C3_farmer_while: "בעוד לולאות"
        C3_bee_nested_loops: Nested Loops
        C3_bee_debugging: Bee Debugging
        C3_bounce: "להקפיץ"
        C3_playlab_create_game: Play Lab - Create a Game
        C3_computational_thinking: "חשיבה חישובית"
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Functional Suncatchers
        C3_songwriting_with_parameters: Songwriting With Parameters
        C4_intro: "מבוא"
        C4_loops_zombie: "לולאות"
        C4_bee_conditional: Bee Conditionals
        C4_variables_artist: Variables - Artist
        C4_variables_playlab: Variables - Play Lab
        C4_for_loops: "בשביל לולאות"
        C4_for_loops_bee: "בשביל לולאות"
        C4_for_loops_no_bee: "בשביל לולאות"
        C4_math_artist: Programming the Artist with Math
        C4_function_edit: Editing Functions
        C4_function_create: Creating Functions
        C4_function_parameters: "פונקציות ופרמטרים"
        C4_conditionals: "תנאים"
        C4_unplugged_algorithms: Algorithms with Tangrams
        C4_unplugged_madlibs: "ליפס"
        C4_unplugged_variables: Variables in Envelopes
        C4_unplugged_forloops: "בשביל לולאות"
        C4_unplugged_parameters: Songwriting with Parameters
        C4_unplugged_binary: "בינארי"
        CSF_artist_angles: Angles in Artist
        CSF_collector_k1_blocks: 'CS Fundamentals: The Collector'
        CSF_collector_repeat_loops: Collector Repeat Loops
        CSF_collector_text_blocks: 'CS Fundamentals: The Collector'
        CSF_create_functions: Create Functions
        CSF_debugging_k1_blocks: Debugging
        CSF_debugging_text_blocks: Debugging
        CSF_EF_cs_matters: Computer Science Matters
        CSF_maze_intro_k1_blocks: Intro to Code Studio
        CSF_maze_intro_text_blocks: Intro to Code Studio
        CSF_my_robotic_friends: "חברי הרובוטיים"
        CSF_stevie_big_project: Stevie and the Big Project
        CSF_unspotted_bugs: Unspotted Bugs
        CSF_zuck_loops_short: Repeat Loops
        frozen_intro: Hour of Code Intro
        frozen_loops: Introduction to Loops
        frozen_functions: Introduction to Functions
        playlab_intro: Introduction to Play Lab
        playlab_events: Play Lab Events
        playlab_repeat_forever: Play Lab Repeat Forever
        tutorial_puzzle_challenge: Tutorial Puzzle Challenge
        infinity_playlab_intro: Play Lab - Introduction
        infinity_playlab_events: Play Lab - Events
        infinity_playlab_repeat_forever: Play Lab - Repeat Forever
        csd_concept_computer: What Makes a Computer, a Computer?
        csd_concept_search: How Search Works
        csd_gamelab_animation_tab: The Animation Tab
        csd_gamelab_draw_1: Drawing in Game Lab - Part 1
        csd_gamelab_draw_2: Drawing in Game Lab - Part 2
        csd_gamelab_drawloop: Introduction to the Draw Loop
        csd_gamelab_sprites_1: Introduction to Sprites
        csd_gamelab_sprites_2: Animating Sprites
        csd_gamelab_velocity: Velocity
        csd_weblab_intro_1: Intro to Web Lab - Part 1
        csd_weblab_intro_2: Intro to Web Lab - Part 2
        csd_weblab_css_1: Intro to CSS - Part 1
        csd_weblab_css_2: Intro to CSS - Part 2
        csd_weblab_intro_3: Intro to Web Lab - Part 3
        csp_applab_objects: Introduction to Objects
        csp_applab_databases_1: Introduction to Databases - Part 1
        csp_applab_databases_2: Introduction to Databases - Part 2
        csp_applab_processing_lists: Processing Lists with Loops
        csp_applab_lists_1: Introduction to Lists - Part 1
        csp_applab_lists_2: Introduction to Lists - Part 2
        csp_applab_lists_3: Introduction to Lists - Part 3
        csp_applab_lists_4: Introduction to Lists - Part 4
        csp_applab_conditionals_1: Introduction to Conditionals - Part 1
        csp_applab_conditionals_2: Introduction to Conditionals - Part 2
        csp_applab_conditionals_2A: Introduction to Conditionals - Part 2a
        csp_applab_conditionals_2B: Introduction to Conditionals - Part 2b
        csp_applab_conditionals_2C: Introduction to Conditionals - Part 2c
        csp_applab_conditionals_3: Introduction to Conditionals - Part 3
        csp_applab_design: Introduction to Design Mode
        csp_applab_variables_1: Introduction to Variables - Part 1
        csp_applab_variables_2: Introduction to Variables - Part 2
        csp_applab_functions: Introduction to Functions
        csp_applab_functions_parameters: "פונקציות ופרמטרים"
        csp_applab_loops: "לולאות"
        csp_applab_turtle: Turtle Programming
        csp_concept_bigdata_medicine: Data & Medicine
        csp_concept_cybercrime: 'The Internet: Cybersecurity & Crime'
        csp_concept_encryption: 'The Internet: Encryption & Public Keys'
        csp_concept_http_html: 'The Internet: HTTP & HTML'
        csp_concept_what_is_internet: What is the Internet?
        csp_concept_internet_ip_dns: 'The Internet: IP Addresses & DNS'
        csp_concept_internet_packets_reliability: 'The Internet: Packets, Routing
          & Reliability'
        csp_concept_internet_wires_cables_wifi: 'The Internet: Wires, Cables & Wifi'
        csp_concept_rgb: A Little Bit About Pixels
        csp_cs_is_changing_everything: Computer Science is Changing Everything
        csp_pixelation_color_1: Color pixelation widget - Part 1
        csp_pixelation_color_2: Color pixelation widget - Part 2
        csp_pixelation_color_3: Color pixelation widget - Part 3
        csp_pixelation_bw: Black and white pixelation widget
        csp_U1L14_tipstricks: Unit 1 Lesson 14 Teacher Tips & Tricks
        csp_textcompression: Text compression widget
        csp_textcompression_new: Text compression widget
        csp_internetsimulator_1: Internet Simulator - Part 1
        csp_internetsimulator_2: Internet Simulator - Part 2
        csp_internetsimulator_3: Internet Simulator - Part 3
        alg_1_intro: CS in Algebra - Introduction
        alg_2_eval_block: CS in Algebra - Evaluation Blocks
        alg_3_pemdas: CS in Algebra - Order of Operations
        alg_4_data_types: CS in Algebra - Data Types
        alg_5_contracts: CS in Algebra - Contracts
        alg_6_variables: CS in Algebra - Variables
        alg_7_function: CS in Algebra - Functions
        alg_8_design_recipe: CS in Algebra - Design Recipe
        alg_9_booleans: CS in Algebra - Booleans
        alg_10_conditionals: CS in Algebra - Conditionals
        alg_11_coordinate_plane: CS in Algebra - Coordinate Plane
        alg_12_biggame_variables: CS in Algebra - Big Game Variables
        alg_13_biggame_animation: CS in Algebra - Big Game Animation
        alg_14_biggame_booleans: CS in Algebra - Big Game Booleans
        alg_15_biggame_update_player: CS in Algebra - Big Game Update Player
        alg_16_biggame_collision_detection: CS in Algebra - Big Game Collision Detection
        alg_17_sambat_compound_booleans: CS in Algebra - Compound Booleans
        hoc2015_preview_blocks: Make your own game blocks
        hoc2015_preview_typing: Make your own game typing
        hoc2015_preview_conclusion: Make your own game conclusion
        starwars_intro: "מלחמת הכוכבים: בונים גלקסיה באמצעות קוד - מבוא"
        starwars_typing: "מלחמת הכוכבים: בונים גלקסיה באמצעות קוד - JavaScript"
        starwars_events: "מלחמת הכוכבים: בונים גלקסיה באמצעות קוד - אירועים"
        starwars_congrats: "מלחמת הכוכבים: בונים גלקסיה באמצעות קוד - מזל טוב"
        starwars_blocks_intro: "מלחמת הכוכבים: בונים גלקסיה באמצעות קוד - מבוא"
        starwars_blocks_events: "מלחמת הכוכבים: בונים גלקסיה באמצעות קוד - אירועים"
        starwars_blocks_congrats: "מלחמת הכוכבים: בונים גלקסיה באמצעות קוד - מזל טוב"
        mc_intro: "מיינקראפט - מבוא"
        mc_repeat: "מיינקראפט - לולאות"
        mc_if_statements: "מיינקראפט - אירועי אם ואז"
        mc_congrats_share: "מיינקראפט - סיום"
        mc_congrats_no_share: "מיינקראפט - סיום"
        gumball_intro: Gumball Hour of Code - Introduction
        gumball_events: Gumball Hour of Code - Events
        gumball_repeat: Gumball Hour of Code - Repeat statements
        iceage_intro: Ice Age Hour of Code - Introduction
        iceage_events: Ice Age Hour of Code - Events
        iceage_repeat: Ice Age Hour of Code - Repeat statements
        mc_2016_intro: Minecraft Hour of Code - Introduction
        mc_2016_loops: Minecraft Hour of Code - Loops
        mc_2016_events: Minecraft Hour of Code - Events
        mc_2016_spawn: Minecraft Hour of Code - Spawn
        mc_2016_congrats: Minecraft Hour of Code - Congratulations
    callout:
      text:
        drag_blocks: Drag a "move" block and snap it below the other block
        run: לחץ על "הרץ" כדי לנסות את התוכנה שלך
        watch_again: Click here to watch the video again
        gray_block_explanation: Blocks that are grey can't be deleted. Can you solve
          the puzzle anyway?
        show_code_explanation: Click here to see the code for the program you're making
        instructions_repeat_explanation: The instructions for each puzzle are repeated
          here
        category_explanation: You have all the same blocks but they've now been arranged
          in categories
        set_sprite_image: Attach a "set actor to image" block to the "when story starts"
          block to enable an actor for this story
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: "לחץ על הבלוק הזה!"
        move_elsa_forward: גרור בלוק "הזז קדימה" והצמד מתחת לבלוק "מתי לרוץ", בשביל
          שאלזה תזוז קדימה
        turn_elsa: Use the "Turn" block to make Elsa turn. The number in the drop-down
          determines how much Elsa turns
        replace_questions: Use the drop-down to replace "???" with a number
        replace_questions_degree: Use the drop-down to replace "???" with the correct
          degree to turn
        repeat_blocks: Use the "Repeat" block and wrap it around the blocks in the
          workspace
        repeat_blocks_1: "(1) Use this block and put it around the grey blocks in
          the workspace"
        repeat_blocks_2: (2) Move the "Repeat" block here, and place the gray blocks
          inside
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each
          angle in degrees.
        set_sides: Use this block to set "sides" to the number needed to complete
          the puzzle.
        set_length: Use this block to set "length" to the correct value.
        which_equation: Which equation makes each side shorter for shapes with more
          sides?
        get_nectar: Use the new "get nectar" block.
        actions_category: The tool box got a new look! The "Actions" blocks are in
          here now.
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Click here to edit your function.
        create_function: Click here to open the "Functions" flyout, then click the
          "Create a Function" button.
        house_hint: It's ok if the picture doesn't look like a house yet. We will
          fix it in the next puzzle.
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction
          the Bee will turn to get the nectar.
        logic_category: Open the "Logic" flyout to find the "if/else" block.
        length_parameter: Can you update this function so it uses the "length" parameter?
        frozen_diamond_repeat: Use the repeat block to create this shape.
        frozen_circle_function_in_circle_turn: Don't forget to turn after creating
          each circle.
        frozen_circle_function_with_parameter_circle: Use the "create a circle" block
          and change the size.
        frozen_snowflake_branch: השתמש בבלוק מסוג "צור ענף של פתיתי שלג"
        frozen_create_square: Attach more blocks here to create a square
        playlab_drag_say: Drag the "say" block here and type "hello"
        playlab_use_twice: Use this block twice and remember to change the actor number
        playlab_move_girl: Use the "move right" block to move Tennis Girl
        playlab_play_sound: Add "play sound" block here
        playlab_arrow_keys: Remember to use these to move the witch after clicking
          on Run
        playlab_add_move: Add "move" blocks inside this repeat block
        playlab_add_score: Add score blocks here
        playlab_add_blocks: Add your blocks here
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect
          here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: This is your function definition. These blocks
          run everytime you use the "draw a square" block
        change_here: Make your change here
        write_draw_square_function: Drag blocks from the toolbox into here that draw
          a square
        write_draw_triangle_function: Drag blocks from the toolbox into here that
          draw a triangle
        edit_add_parameter: Click edit to add a parameter in your function
        add_and_drag_parameter: Write in the name of your parameter here, click add,
          and then drag it into your function definition
        fill_in_actor: Fill in the ??? with numbers that correspond to each actor
          (1, 2, and 3)
        repeat: Put blocks inside the loop to repeat commands
        if_bee_nectar: Use the "if" block to decide if the bee should get nectar
        if_else_bee: Use the "if/else" block so that the Bee gets nectar from a flower,
          and makes honey if it's not a flower
        repeat_full_circle: Enter in the number of times the zombie has to move to
          make a full circle
        place_length_variable: Drag the length variable here to replace the question
          marks
        arrows_move_actor: Use the arrows to move the actor
        right_arrow_fireball: Use the right arrow to shoot fireballs
        name_function: Write the name of your function here
        Infinity_move_right_runbutton: Add move block here
        Infinity_move_directions_callout: Which block will make Baymax move up when
          the up arrow is pressed?
        Infinity_move_directions_callout_arrow: Use these arrows to steer
        Infinity_move_collide_callout: Play a sound when this event occurs.
        Infinity_repeat_callout: Place Move blocks inside here
        craft_run_button_callout: לחצו על "התחל" כדי לנסות את התוכנית שלכם
        craft_drag_block_callout: גררו את בלוק "moveForward()" וחברו אותו מתחת לבלוק
          הקודם
        craft_callout_preplaced: "הצבנו מספר בלוקים כאן על מנת לסייע לכם להתחיל"
        craft_inside_repeat: "חזרו על הפעולות באמצעות הצבת בלוקים כאן"
        craft_callout_preplaced_house: "הקוד הזה יתחיל לבנות את הבית שלכם. האם תוכלו
          לסיים אותו?"
        craft_what_is_iron: "כרה את הברזל הזה!"
        craft_callout_moveforward: "הקוד הזה יבדוק האם יש לבה. האם תוכלו להוסיף פקודה
          על מנת לנוע קדימה?"
