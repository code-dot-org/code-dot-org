"fil":
  data:
    instructions:
      2-3 Artist 1 new_instruction: Hi, Ako ay isang artist. Maaari mong isulat ang
        code upang ako ay gumuhit ng halos kahit ano. Gumamit ng ilang mga block upang
        ako ay gumuhit sa loob ng kulay-abo na mga linya sa larawan. (Ang bawat linya
        ay 100 pixels ang haba)
      2-3 Artist 11_instruction: 'Gumuhit ng octagon (parisukat na may walong sulok)
        upang bigyan ng palatandaan ang stop sign kung saan bawat gilid ay may sukat
        na 100 pixels. Sa anong anngulo ka liliko? (Ano ang sagot kapag hinati mo
        sa 8 ang 360?) '
      2-3 Artist 12_instruction: Itakda ang blokeng "ulitin ng ilang beses" upang
        gumawa ng bilog para tapusin ang mata. Kung sa bawat galaw ay liliko sa kanan
        ng isang antas, ilang beses mo itoo uulitin para mabuo ang bilog? 180 beses?
        360 beses? 500 beses?
      2-3 Artist 2 new_instruction: 'Ang bahay na ito ay may isang pader na hindi
        pa kumpeto.  Bawat gilid nito ay 100 pixels, ngunit ang hindi pa tapos na
        pader ay 50 pixels lamang.  Tapusin ang pader . '
      2-3 Artist 2_instruction: "This house has a half-finished wall. Each side is\n100,
        but the half-finished wall is only 50. Complete the wall. "
      2-3 Artist 3.4_instruction: "Sa pamamagitan ng blokeng tumalon, gagalaw  ang
        artista nang hindi gumuguhit. \nIguhit ang mga linya gamit pareho ang mga
        blokeng gumuhit at tumalon."
      2-3 Artist 3_instruction: Ang sombrerong ito ay may tass na 100 pixels. Gumuhit
        ng sombrero na mas maigsi nang 70 pixels.
      2-3 Artist 3new_instruction: Ang pulang sombrero ay may tass na 100 pixels.  Gumuhit
        ka ng itim na sombrerong mas maigsi nang 70 pixels.  ang lapad nang itim na
        sobrero ay 50 pixels.
      2-3 Artist 4_instruction: Tulungan mo akong tapusin ang bahay para sa pusang
        ito.
      2-3 Artist 5_instruction: "Palitan mo itong kodigong ito nang  blokeng \"ulitin
        nang ilang beses\" \npara gumuhit ng bahay gamit lamang ay 3 bloke."
      2-3 Artist 6_instruction: '"Ang bahay na ito ay nangangailangan ng isang bubong!
        Iguhit ang tatsulok. Hint: lahat ng tatlong panig ay parehong haba".'
      2-3 Artist 7_instruction: 'Tapusin ang pagguhit sa huling hanay ng mga bintana
        sa paaralan para ang lahat sa klase ay makakakita sa labas. Ang gilid ng bawat
        parisukat ng salamin ng bintana ay 25 pixels ang haba. '
      2-3 Artist 8_instruction: Kumpletohin ang mga silid para sa bawat hayop sa pamamagitan
        ng paghati sa isang parihaba sa 2 parisukat na magkapareho ang laki. Ang parihaba
        ay 200 pixels ang lapad at 100 pixels ang taas. Mayroong maraming iba't ibang
        pamamaraan para malutas ang palaisipang ito, kaya magsaya!
      2-3 Artist 9 NEW_instruction: Tapusin ang saranggola na ito
      2-3 Artist 9 REPLACEMENT_instruction: Tapusin ang pagguhit sa mga bituing ito!
      2-3 Artist 9_instruction: Tapusin ang saranggola na ito
      2-3 Artist Assessment 1_instruction: 'Pagtatasa: Tapusin ang pagguhit sa huling
        ngipin. Ito ay 25 pixels ang haba at 25 pixels ang taas.'
      2-3 Artist Debugging 1_instruction: Ang sombrero ay dapat 50 pixels lang ang
        haba. Maaari mo bang ayusin ito?
      2-3 Artist Debugging 10_instruction: |-
        Ang direksyon na pad sa aking kontroller ng laro ay masyadong makitid.\r
        \r
        Maaari mo ba itong pahabain ng 10 pixels?\r
        \r
        Subukan munang patakbuhin ang code para makita kung ano ang problema.
      2-3 Artist Debugging 11_instruction: |-
        Ang aking niyebe ay nagkawatak-watak!\r
        \r
        Maaari mo bang malaman kung ano ang problema?
      2-3 Artist Debugging 12_instruction: Dapat sana akong magdagdag ng alon ng dagat
        sa eksenang ito. Maaari mo ba akong tulungan?
      2-3 Artist Debugging 2_instruction: |-
        Ang code na ito para sa bigote ng pusa ay mali.
        \r
        \r
        Ayusin ang code para maiguhit ang mga bigote na pareho ang haba ng lahat.
      2-3 Artist Debugging 3_instruction: |-
        Ang aking barko ay may butas!\r
        \r
        Ano ang kailangan mong gawin para ang dulo ay mag-abot?
      2-3 Artist Debugging 4_instruction: |-
        What is the image that we're trying to
        draw? Finish connecting the dots using the proper lines and angles.
      2-3 Artist Debugging 5_instruction: |-
        Ang code na mayroon tayo para sa binti at paa ay mali.\r
        \r
        Maaari mo bang ayusin ito?
      2-3 Artist Debugging 6_instruction: |-
        Parang ako ay nakaupo sa isang upoan na kulang ang binti!\r
        \r
        Baguhin ang code para maiguhit ang huling paa.
      2-3 Artist Debugging 7_instruction: |-
        Mung ang C sa code ay naguhit nang paurong!\r
        \r
        Maaari mo ba itong gawing parang C ulit?
      2-3 Artist Debugging 8_instruction: |-
        Ang aking guro ay nagsasabi na dapat kung tapusin kung ano ang aking nasimulan!\r
        \r
        Tulungan akong tapusing ang aking pinwheel. Maaari mo bang matukoy kung ano ang problema?
      2-3 Artist Debugging 9_instruction: |-
        May bagay na kakaiba!\r
        \r
        Ang code para sa sangang ito ay mali. Maaari mo bang matukoy kung paano mapagawa ang artista na bakasin ang sanga sa maaayos na paraan?
      2-3 Artist Debugging Assessment 1_instruction: |-
        Pagtatasa: Bakit ang parisukat na ito ay naging 75 pixel na masmayadong mababa sa bawat panig? \r
        \r
        Saan nagkakamali ang code?
      2-3 Artist Free Play_instruction: Libreng laro! Gumuhit ng anumang gusto mo.
      2-3 Artist Functions 1 a_instruction: |-
        "Ako zombie na artista. Ako gusto magguhit!" \r
        \r
        Tulungan ang mga zombie na makaguhit ng parisukat na mga baso. \r
        \r
        Ang tulay sa pagitan ng mga baso ay 25 pixel na mas maikli kaysa sa lapad ng mga parisukat, kung saan ay 100 pixel.
      2-3 Artist Functions 1_instruction: |-
        "Ako zombie na artista. Ako gusto magguhit!" \r
        \r
        Tulungan ang mga zombie na makaguhit ng parisukat na mga baso. \r
        \r
        Ang tulay sa pagitan ng mga baso ay 25 pixel na mas maikli kaysa sa lapad ng mga parisukat, kung saan ay 100 pixel.
      2-3 Artist Functions 10_instruction: 'Libreng Laro: Narito ang dalawang mga
        function, isa ay para gumuhit ng malaking gear at isa para gumuhit ng maikling
        gear. Gamitin ang mga ito para maiguhit ang loob ng makina!'
      2-3 Artist Functions 11 a_instruction: |-
        We've renamed the `draw a square`
        function to `draw a hexagon`, but it's still giving us squares! Can you modify
        the `draw a hexagon` function to draw a hexagon with 50 pixel sides? \r
        \r
        Draw
        the image using the new function!
      2-3 Artist Functions 11.5 a_instruction: |-
        Eto ang parehong `gumuhit ng hexagon` na function.\r
        \r
        Ano ang mangyayari kapag nag-loop ka ng pangunahing programa nang 6 na beses, na umiikot nang 60 degrees sa bawat beses na mag-loop ka?
      2-3 Artist Functions 11.5_instruction: |-
        Eto ang parehong `gumuhit ng hexagon` na function.\r
        \r
        Ano ang mangyayari kapag nag-loop ka ng pangunahing programa nang 6 na beses, na umiikot nang 60 degrees sa bawat beses na mag-loop ka?
      2-3 Artist Functions 11_instruction: |-
        Aming binago ang pangalan ng `gumuhit ng parisukat` na function sa `gumuhit ng hexagon`, Maaari mo bang baguhin `gumuhit ng hexagon` na function para gumuhit ng hexagon na may 50 pixel ang mga gilid?\r
        \r
        Iguhit ang larawan gamit ang bagong function!
      2-3 Artist Functions 12 Mike_instruction: |-
        Ang mga function ay talagang mahusay para sa pagguhit ng mga kumplikadong mga bagay nang maraming beses. \r
        \r
        Maaari mo bang gamit ang `gumuhit ng bulaklak` na function para punan ang natitirang mga kahon nang nagtanim?\r
        Ang mga tanim ay dapat 100 pixels ang layo.
      2-3 Artist Functions 12 a_instruction: |-
        Ang mga function ay talagang mahusay para sa pagguhit ng mga kumplikadong mga bagay nang maraming beses. \r
        \r
        Maaari mo bang gamit ang `gumuhit ng bulaklak` na function para punan ang natitirang mga kahon nang nagtanim?\r
        Ang mga tanim ay dapat 100 pixels ang layo.
      2-3 Artist Functions 12_instruction: |-
        Ang mga function ay talagang mahusay para sa pagguhit ng mga kumplikadong mga bagay nang maraming beses. \r
        \r
        Maaari mo bang gamit ang `gumuhit ng bulaklak` na function para punan ang natitirang mga kahon nang nagtanim?\r
        Ang mga tanim ay dapat 100 pixels ang layo.
      2-3 Artist Functions 13_instruction: |-
        Kami ay nagbibigay sa iyo ng apat na mga function.
        Gamitin ang mga ito sa kahit anong paraan na gusto mo sa loob ng isa o maraming mga loop para makagawa ng mga larawan na maaari mong ibahagi sa iyong mga kaibigan. Pindutin ang run para makakita ng halimbawa.
      2-3 Artist Functions 2 a_instruction: "Use the small green `draw a square`\nblock
        to call this new function and create the glasses. "
      2-3 Artist Functions 2_instruction: |-
        Ang mga function ay nagbibigay daan sa iyo na makagawa ng bagong mga bloke! \r
        \r
        Aming inilipat ang mga bloke na kinakailangan para sa pagguhit ng mga parisukat sa isang function na tinatawag na `gumuhit ng parisukat`. Sa oras na ito, gamitin ang `gumuhit ng parisukat` na function para makalikha ng mga baso.
        \r
        \r
        Ang mga parisukat ay 75 pixels ang layo.
      2-3 Artist Functions 3 a_instruction: |-
        Edit the "draw a square" function
        to draw glasses with frames that are 115px on each side. \r
        \r
        The squares
        are now 45 pixels apart.
      2-3 Artist Functions 3_instruction: |-
        Baguhin ang function para makaguhit ng parisukat na may haba ng gilid na 115 para makaguhit ng mas malaking mga baso. \r
        \r
        Ang mga parisukay ngayon ay 45 pixels ang layo.
      2-3 Artist Functions 4 a_instruction: |-
        Now, put the function inside of a loop
        and add an extra turn to draw these three squares.
      2-3 Artist Functions 4_instruction: Ngayon, ilagay ang function sa loob ng isang
        loop para maiguhit ang tatlong mga parisukat na ito.
      2-3 Artist Functions 7_instruction: |-
        Use the "draw a house" function to draw
        two houses using two different parameters. (Hint: the first house is 100 pixels).
      2-3 Artist Functions 9_instruction: |-
        Libreng laro: Eto ang niyebe na function.
        Paglaruan ang mga ito para maglikha ng taglamig na eksena! Ito ay isang libreng laro na antas, kaya walang palaisipan na ilutas. Magsaya!
      2-3 Artist Loops 1_instruction: |-
        Can you make a hexagon with sides that are
        100 pixels long to finish the cell? Remember, that means that you will only
        need to turn 60 degrees!
      2-3 Artist Loops 10_instruction: |-
        What happens to the design when we make our
        final step forward half as long?
      2-3 Artist Loops 11_instruction: Ngayon ay maglagay tayo ng *isa pang* loop
        sa paligid ng ating buong nilikha! Huwag kalimutang magdagdag ng anggulo sa
        dulo ng panlabas na loop.
      2-3 Artist Loops 2_instruction: |-
        Now use a repeat block to make the cell a
        shell.
      2-3 Artist Loops 4_instruction: Gusto mong makita kung ano ang mangyari kapag
        uulitin natin ang hugis nang paulit-ulit gamit ang loop?
      2-3 Artist Loops 5_instruction: |-
        Now let's make a small change to the loop
        and see how different our picture becomes.
      2-3 Artist Loops 6_instruction: |-
        Add one more move and another turn inside
        the loop and see how your design changes.
      2-3 Artist Loops 7_instruction: |-
        We can use loops to make all kinds of polygons.  Can
        you create a rhombus inside this hexagon?
      2-3 Artist Loops 8_instruction: Ilagay natin ang parehong mga elemento sa loob
        ng isang loop.
      2-3 Artist Loops 9_instruction: |-
        We're going to loop the same elements, but
        now we're going to add some distance between them.\r
        Use the same code as
        before, but add a step forward at the end of the outer loop.
      2-3 Artist Loops New 1_instruction: Ating iguguhit ang ulo ng robot! Maaari
        ka bang gumawa ng parisukat na may mga gilid na 100 pixels?
      2-3 Artist Loops New 10_instruction: Ngayon ay ating ikonekta ang isang bungkos
        ng mga V nang sama-sama sa isang loop.
      2-3 Artist Loops New 11_instruction: |-
        Muling buoin ang code mula sa nakaraang palaisipan,
        ngunit sa oras na ito, magdagdag ng kaliwang pagliko mga 30 degrees sa loob ng loop. Ngayon, ulitin
        ito ng 24 na beses sa halip na 8.
      2-3 Artist Loops New 12_instruction: 'Gumuhit ng diyamante na may mga gilid
        na 100 pixels.

'
      2-3 Artist Loops New 13_instruction: |-
        Kami ay magsisimula sa iyo sa iilang code
        (nasa kulay na abo) para makagawa ng isang dyamante.\r
        \r
        I-loop ang kulay abo na code para makalikha ng masayang
        pattern!
      2-3 Artist Loops New 14_instruction: |-
        Paglaruan ang code para sa dyamante
        at tingnan kung ano pang mga pattern ang magagawa mo. Subukang baguhin kung ilang mga degrees ang iyong
        pag-ikot at kung ilang beses ka nag-loop.
      2-3 Artist Loops New 15_instruction: Ngayon, gumuhit ng kahit anung gusto mo!
      2-3 Artist Loops New 2_instruction: |-
        Ito ang parehong palaisipan na kakalutas lang natin,
        pero ngayon, maaari lang nating gamitin ang isang `move forward` na bloke at isang `turn` na bloke.\r
        \r
        Maaari mo bang gamitin ang `repeat` para malutas ang palaisipang ito?
      2-3 Artist Loops New 9_instruction: |-
        Gumuhit ng isang simpleng V (kung saan ang dalawang panig ay
        50 pixel) para makumpleto ang arrow.
      2-3 Artist Match Hex Pic_instruction: 'Match: Tumulong na tapusin ang Hexagon.'
      2-3 Artist Match Rho Pic_instruction: 'Match: Tapusing ang nawawalang code.'
      2-3 Artist Match Sq Pic_instruction: 'Match: Kumpletohin ang nawawalang code'
      2-3 Artist Match Tri pic_instruction: 'Matching: Punan ang nawawalang code.'
      2-3 Artist Nested Loops 1_instruction: "Maglagay ng isang `repeat` na bloke
        sa paligid ng buong \nsalansan ng code na ito para maguhit ang pattern."
      2-3 Artist Nested Loops 10_instruction: |-
        I-loop ang code na ito nang 12 beses para makumpleto
        ang pattern.
      2-3 Artist Nested Loops 11_instruction: |-
        I-loop ang code na ito nang 4 na beses para makumpleto
        ang pattern, umikot ng 90 degrees pagkatapos ng bawat bilog.
      2-3 Artist Nested Loops 12_instruction: |-
        I-loop ang code na ito nang 12 beses para makumpleto
        ang mga kulot.
      2-3 Artist Nested Loops 2_instruction: |-
        Ngayon ay i-loop ang tatsulok nang 6 na beses.\r
        \r
        Pagkatapos
        bawat tatsulok, kailangan mong paikutin ng 60 degrees bago guguhit sa susunod.
      2-3 Artist Nested Loops 3_instruction: |-
        Kakailanganin mong i-loop ang tatsulok nang 12
        beses para maiguhit ang pattern na ito. \r
        \r
        Hatiin ang bilang ng degrees sa isang bilog
        (360) sa pamamagitan ng bilang ng mga hugis na iguguhit mo (12) para matukoy kung gaano kalayo ang
        iikotin mo pagkatapos ng bawat hugis.
      2-3 Artist Nested Loops 4_instruction: |-
        I-loop ang dyamanteng ito nang 12 beses para makaguhit
        na bulaklak!\r
        \r
        Tandaan: Gagamit tayo ng parehong anggulo para mai-loop ang 12 dyamante gaya ng ating
        ginawa para sa 12 mga tatsulok. \r
        Magkano ang kakailanganin mo sa pag-ikot pagkatapos ng bawat hugis?
      2-3 Artist Nested Loops 5_instruction: |-
        Punan ang mga bintana ng gusaling ito gamit
        ang naka-nest na mga loop. \r
        \r
        Ang mga bintana ay 20 pixels ang haba at 20 pixesl ang pagitan.
      2-3 Artist Nested Loops 6_instruction: |-
        Ang dinosaur na ito mayroong 8 mga pako na tumatakbo
        sa taas ng buntot nito.\r
        Bawat pako ay 30 pixels ang haba. I-loop ang tatsulok nang 8 beses, ngunit
        siguraduhing tumalon pasulong sa bawat isa!
      2-3 Artist Nested Loops 7_instruction: |-
        I-loop ang tatsulok na ito nang 10 beses para maiguhit
        ang araw.\r
        \r
        Kakailangan mong gumalaw at paikotin pagkatapos ng bawat tatsulok. \r
        \r
        Ikaw
        ay maaaring mag-alam kung ilan ang dapat ikutin sa pamamagitan ng paghati sa numero ng degrees sa isang bilog
        sa bilang ng mga tatsulok na bumuo nito.
      2-3 Artist Nested Loops 8_instruction: |-
        Ngayon ay magdadagdag tayo ng damo sa ating larawan.
        \r
        \r
        Bawat kumpol ng damo ay 50 pixels ang pagitan.
      2-3 Artist Nested Loops 9_instruction: |-
        Ating tatapusin ang larawang ito sa pamamagitan ng pagdagdag ng ating bulaklak.\r
        \r
        I-loop ang dyamante nang 12 beses para maguhit ang bulaklak.
      2-3 Artist Nested Loops Free Play_instruction: Libreng maglaro, gumuhit ng isang
        bagay na kamangha-mangha gamit ang mga naka-nest na mga loop.
      2-3 Bee Conditionals 1_instruction: Hi! Ako ay isang bubuyog. Tulungan akong
        kumuha ng nektar mula sa bulaklak.
      2-3 Bee Conditionals 10_instruction: |
        Purple flowers may have either 1 or 0
        nectar. Be careful not to collect nectar from a purple flower if it doesn't
        have any.\r
      2-3 Bee Conditionals 11_instruction: "Ako ay nagtaka kung ano ang nandoon!\\r\n\\r\nTulungan
        akong lumipad palibot sa bakuran at magkolekta lang sa mga bulaklak na may
        mga nektar. "
      2-3 Bee Conditionals 12_instruction: Tulungan akong maghanap sa lahat ng mga
        nektar gamit ang iilang bloke lang hangga't maaari!
      2-3 Bee Conditionals 13_instruction: |-
        Mayroong maraming nangyari dito!\r
        \r
        Gamitin kung ano ang natutunan mo para makolekta ang lahat ng nektar at pagkatapos ay makagawa ng pulot.
      2-3 Bee Conditionals 14_instruction: |-
        Ating ipagsama ang lahat!\r
        \r
        Gamitin ang iyong natutunan para matulungan akong magkolekta sa mga bulaklak lang na mayroong mga nektar, gamit ang iilang mga bloke lang hangga't maaari. Huwag kalimutang gumawa ng mga pulot sa dulo.
      2-3 Bee Conditionals 15_instruction: |-
        Ang pattern ng baitang na hagdan ay dapat magmukhang pamilyar. \r
        \r
        Maaari mo bang magkolekta sa mga bulaklak lang na mayroong mga nektar, gamit ang iilang mga bloke lang hangga't maaari?
      2-3 Bee Conditionals 2_instruction: |-
        Ako ay isang gutom na bubuyog! \r
        Tulungan akong kolektahin ang lahat ng mga nektar mula sa mga bulaklak gamit ang pinakamaliit na bilang ng mga bloke.
      2-3 Bee Conditionals 3_instruction: "Tingnan ang lahat ng mga nektar na iyan!\\r\n\\r\nTulungan
        akong kolektahin ang nektar at gumawa ng pulot gamit ang iilang mga bloke
        lang hangga't maaari.  "
      2-3 Bee Conditionals 4_instruction: Tulungan akong kolektahin ang lahat ng mga
        nektar mula sa mga bulaklak at gawin ang lahat ng mga pulot.
      2-3 Bee Conditionals 5_instruction: |-
        Maging maingat na hindi makolekta ang nektar mula sa lilang na bulaklak kung wala itong laman. \r
        Dapat mo munang suriin kung ang nektar ay katumbas sa 1 gamit ang `if nectar` na bloke.
      2-3 Bee Conditionals 6_instruction: Suriin kung bulaklak na ito gamit ang "if"
        na bloke para masuri kung mayroon pang kahit anong nektar na makukuha.
      2-3 Bee Conditionals 7_instruction: Magkolekta ng nektar mula sa bawat bulaklak
        kung mayroon lang itong laman.
      2-3 Bee Conditionals 8_instruction: |-
        Ang bukiring ito ay mayroon mga pula at lilang mga bulaklak.
        Ang mga pulang bulaklak ay mayroong kilalahang halaga ng nektar, ngunit ang lilang bulaklak ay hindi nalalaman.
        Kolektahin ang lahat ng mga nektar.
      2-3 Bee Conditionals 9_instruction: Kolektahin ang lahat ng mga nektar mula
        sa bawat bulaklak.
      2-3 Bee Conditionals Assessment 1_instruction: 'Pagtatasa: Kolektahin ang lahat
        ng mga nektar. Mag-ingat na hindi mo masubukang magkolekta ng nektar sa lilang
        bulaklak kung wala itong laman.'
      2-3 Bee Debugging 1_instruction: Ang mga blokeng ito ay nakaka-inis sa akin.
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar.
      2-3 Bee Debugging 10_instruction: |-
        Ang palaisipang ito ay naggawa sa akin na loopy!\r
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar at magawa ang lahat ng mga pulot.
      2-3 Bee Debugging 2_instruction: |-
        Mahahanap mo ba ang problema dito?\r
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar.
      2-3 Bee Debugging 3_instruction: |-
        Ohh, ang isang ito ay nangangagat!\r
        \r
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar.
      2-3 Bee Debugging 4_instruction: Ang mga blokeng ito ay talagang nakaka-inis
        sa akin. Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar
        at magawa ang lahat ng mga pulot.
      2-3 Bee Debugging 5_instruction: |-
        Ang bulaklak na iyan ay mukhang masarap!\r
        \r
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar. Maaari mo na ngayong gamit ang parehong run at step.
      2-3 Bee Debugging 6_instruction: |-
        Napakatamis na hamon!\r
        \r
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar.
      2-3 Bee Debugging 7_instruction: Ayusin ang (mga) kamalian para makolekta ang
        lahat ng mga nektar at gawin ang lahat ng mga pulot.
      2-3 Bee Debugging 8_instruction: |-
        Napakaraming magagandang bulaklak!\r
        \r
        Ayusin ang (mga) problema para makolekta ang lahat ng mga nektar.
      2-3 Bee Debugging 9_instruction: |-
        "Maging" matiyaga sa isang ito!\r
        \r
        Kailangan mong ayusin ang iilang mga bagay sa programang ito para makolekta ang lahat ng nektar at magawa ang lahat ng mga pulot.
      2-3 Bee Debugging Assessment 1_instruction: |-
        Pagtatasa: Ngayon na ang oras para ipakita ang iyong nalalaman!\r
        \r
        Ayusin ang (mga) kamaliaan para makolekta ang lahat ng mga nektar at magawa ang lahat ng mga pulot.
      2-3 Bee Functions 1_instruction: Ang mga function ay mga bloke na code na nagsasagawa
        ng isang gawain. Gamitin ang "get 2 nectar" na function para makolekta ang
        nektar mula sa bawat bulaklak.
      2-3 Bee Functions 10_instruction: |-
        Ang lilang mga bulaklak ay magbago sa pagitan ng alinman sa 1 o 0 na nektar bawat beses na patakbuhin mo ang palaisipan.  \r
        \r
        Maglikha ng function na nagkokolekta sa mga lilang bulaklak lang na may nektar.
      2-3 Bee Functions 2_instruction: |-
        Ang mga function ay mga bloke ng code na nagsasagawa ng isang gawain.  \r
        \r
        Gamitin ang `get 5` na function para magkuha ng 5 mga nektar sa bawat beses.
      2-3 Bee Functions 3_instruction: Kolektahin ang lahat ng mga nektar mula sa
        bawat bulaklak.
      2-3 Bee Functions 4_instruction: |-
        Ang `move and get nectar` na mga function ay nag-iiikot sa bubuyog, nagkokolekta ng nektar, at pagkatapos ay nagpapabalik sa bubuyog kung saan ito nagsimula.  \r
        \r
        Gamitin ang function para kolektahin ang lahat ng nektar.
      2-3 Bee Functions 5_instruction: Ngayon ay mayroon nang maraming mga nektar
        sa mga bulaklak. Baguhin ang binigay na function para makakolekta ito ng 4
        na mga nektar at gamitin ito para makolekta ang lahat ng mga nektar mula sa
        mga bulaklak.
      2-3 Bee Functions 6_instruction: Ngayon ay gamitin ang parehong function para
        mangolekta ng nektar mula sa tatlong mga bulaklak.
      2-3 Bee Functions 7_instruction: Ang mga bulaklak ay malayo na ngayon. Baguhin
        ang binigay na function at gamitin ito para makolekta ang lahat ng mga nektar
        mula sa mga bulaklak.
      2-3 Bee Functions 8_instruction: Lumikha ng iyong sariling function na kukuha
        ng 7 na nektar, gumalaw pasulong, at gumawa ng 7 na pulot. Gamitin ang function
        para magkolekta ng nektar sa bawat bulaklak at gumawa ng pulot sa bawat pulot-pukyutan.
      2-3 Bee Functions 9_instruction: Lumikha ng iyong sariling function na lulusong
        sa landas, kukuha ng nektar, gagawa ng pulot, at pagkatapos ay magbabalik
        sa bubuyog sa taas ng landas.
      2-3 Bee Functions Assessment 1_instruction: 'Pagtatasa: Gamitin ang binigay
        na function para kumolekta ng nektar sa bawat bulaklak.'
      2-3 Bee Functions Assessment 2_instruction: 'Pagtatasa: Lumikha ng function
        para bumaling, gumalaw pasulok at gumawa ng 3 pulot, pagkatapos ay ibalik
        ang bubuyog sa kung saan ito nagsimula at bumalik.'
      2-3 Bee Loops 1_instruction: |-
        Ang mga bulaklak na iyon ay parang masarap!\r
        \r
        Magkolekta ng nektar mula sa bawat bulaklak gamit ang pinakakaunting mga bloke hangga't maaari.
      2-3 Bee Loops 10_instruction: Maaari mo bang gamitin ang while loop sa loob
        ng dalawa pang mga loop para magkolekta sa lahat ng mga nektar?
      2-3 Bee Loops 11_instruction: Gamitin ang mga while loop para magkolekta sa
        lahat ng nektar mula sa mga bulaklak sa kabukirang ito.
      2-3 Bee Loops 12_instruction: Gamitin ang mga while loop para magkolekta sa
        lahat ng nektar mula sa mga bulaklak sa kabukirang ito.
      2-3 Bee Loops 13_instruction: 'Pagtatasa: Kolektahin ang lahat ng mga nektar
        gamit ang pinakakaunting bilang ng mga bloke hangga''t maaari.'
      2-3 Bee Loops 1A_instruction: 'Hi, ako ay isang bubuyog. Maaari mo ba akong
        tulungan na magkolekta ng nektar mula sa mga bulaklak na ito? '
      2-3 Bee Loops 2_instruction: Kolektahin ang lahat ng nektar at gawin ang lahat
        ng mga pulot gamit ang pinakakaunting posibleng mga bloke.
      2-3 Bee Loops 2A_instruction: Sa oras na ito, gumamit ng loop para tipunin ang
        lahat ng mga nektar.
      2-3 Bee Loops 3_instruction: Magkolekta ng nektar mula sa bawat bulaklak at
        gumawa ng pulot sa bawat pulot-pukyutan gamit ang pinakakaunting mga bloke
        hangga't maaari.
      2-3 Bee Loops 3A_instruction: Gamitin ang `repeat` na loop para kolektahin ang
        lahat ng mga nektar.
      2-3 Bee Loops 3B_instruction: Ngayon, gamitin ang `repeat` na bloke para kolektahin
        ang lahat ng mga nektar at gawin ang lahat ng pulot.
      2-3 Bee Loops 4_instruction: |-
        Sadyang abala na bubuyog!\r
        \r
        Tulungan ang bubuyog na magkolekta sa lahat ng nektar at gawin ang lahat ng mga pulot gamit ang pinakakaunting mga bloke hangga't maaari.
      2-3 Bee Loops 4A_instruction: |-
        Ilang beses ba maaaring makakatulong ang mga loop sa iyo sa palaisipang ito? \r
        \r
        Ang mga loop ay iyong kaibigan! Gumamit ng iilan sa kanila para makumpleto ang palaisipang ito gamit ang pinakakaunting mga bloke hangga't maaari.
      2-3 Bee Loops 5_instruction: |-
        Ang hugis ng landas na ito ay kakaiba sa iba.\r
        \r
        Maaari mo bang kolektahin ang lahat ng mga nektar gamit ang pinakakaunting mga bloke hangga't maaari?
      2-3 Bee Loops 6_instruction: Mahahanap mo ba ang pinakamadaling daan para makolekta
        ang lahat ng nektar at magawa ang lahat ng mga pulot ng bubuyog?
      2-3 Bee Loops 7_instruction: Isang napakagandang bukirin ng mga bulaklak!  Tulungan
        ang bubuyog na bisitahin ang bawat isa.  Mahahanap mo ba ang daan para magawa
        ito gamit ang mas kaunti kaysa sa 7 na mga bloke?
      2-3 Bee Loops 8_instruction: |-
        Ang mga lilang bulaklak na ito ay mayroong iba't ibang bilang ng nektar sa bawat beses na patakbuhin mo ang palaisipan.\r
        \r
        Gamitin ang `while nectar` na loop para kolektahin ang lahat ng mga nektar.\r
        \r
        Ang mga loop na ito ay tatakbo hangga't ang kondisyon ay true, sa kasong ito `nectar > 0`.
      2-3 Bee Loops 9_instruction: |-
        The while loop can perform the same action as
        an if statement in a loop. Add a while loop to this code to perform the same
        task.
      2-3 Bee Loops Assessment 1_instruction: 'Pagtatasa: Gamitin ang `while` loop
        para kolektahin ang lahat ng nektar mula sa mga bulaklak na ito.'
      2-3 Maze 1_instruction: 'Matutulungan mo ba ako na hulihin ang malaikot na baboy?
        Magsalansan ng iilang `move forward` na mga bloke sa baba ng `when run` na
        bloke at pindutin ang "Run". '
      2-3 Maze 10_instruction: Gabayan mo ako sa berdeng kademonyohan! (Mag-ingat
        sa mga TNT)
      2-3 Maze 11_instruction: Dalhin ako sa bulaklak, ako ay gutom! Ilang beses mo
        ba kailangang ulitin ang bloke?
      2-3 Maze 12 (copy 1)_instruction: |-
        Can you replace the previous answer with
        only two blocks? (Hint: Create a loop using a "repeat times" block.)
      2-3 Maze 12 (copy 2)_instruction: |-
        Can you replace the previous answer with
        only two blocks? (Hint: Create a loop using a "repeat times" block.)
      2-3 Maze 12 (old)_instruction: Dalhin ako sa baboy, ngayon ay gamit ang Repeat
        times na bloke!
      2-3 Maze 12 - One Move Block_instruction: Pumunta sa baboy! Pero ngayon, maaari
        mo lang gamitin ang isang `move forward` na bloke. Nakakita ka ba ng ibang
        mga bloke na maaaring makatulong sa iyo?
      2-3 Maze 12_instruction: Makapunta ka ba sa baboy sa pamamagitan ng paglikha
        ng loop na gumagamit lang ng isang `move forward` na bloke sa loob ng isang
        `repeat`?
      2-3 Maze 13 (old)_instruction: Dalhin ako sa baboy, ngayon gamit ang Repeat
        until na bloke!
      2-3 Maze 13_instruction: Dalhin mo ako sa baboy! Maaari ka lang gumamit ng isang
        move forward na bloke sa pagkakataong ito
      2-3 Maze 14 (old)_instruction: Dalhin mo ako sa baboy gamit ang Repeat until
        na bloke!
      2-3 Maze 14_instruction: Dalhin mo ako sa mirasol! (Nasaan na ang "repeat times"
        na blokeang iyan kapag kailangan ko ito?)
      2-3 Maze 15 (old)_instruction: Dalhin mo ako sa baboy gamit ang Repeat until
        na bloke!
      2-3 Maze 15_instruction: Sa palaisipang ito, ang dalawang `repeat` na mga loop
        ay makakatulong sa iyo na makapunta sa baboy gamit ang pinakakaunting bilang
        ng mga bloke!
      2-3 Maze 16 (old)_instruction: Dalhin mo ako sa baboy gamit ang Repeat until
        na bloke!
      2-3 Maze 16 before_instruction: Maaari mo bang malaman ang pinakamabilis na
        paraan para madala mo ako sa baboy?
      2-3 Maze 16_instruction: Ang mga loops ay gagana rin kapag may higit sa isang
        bloke sa loob! Maaari mo bang i-loop ang pagkasunod-sunod na ito para mapapunta
        ang zombie sa mirasol?
      2-3 Maze 2_instruction: Ang baboy na ito ay dumadampi sa aking mga balahibo.
        Tulungan akong makuha siya!
      2-3 Maze 3_instruction: Sundan ang landas at ihatid ako sa pasaway na baboy.
        Iwasan ang TNT para hindi lilipad ang mga balahibo!
      2-3 Maze 4_instruction: Gabayan mo ako sa berdeng kademonyohan! (Mag-ingat sa
        mga TNT)
      2-3 Maze 5_instruction: Gabayan mo ako sa berdeng kademonyohan! (Mag-ingat sa
        mga TNT)
      2-3 Maze 6_instruction: Maging kalmado at tulungan akong hanapin ang masamang
        baboy. Kung hindi baka magalit ako!
      2-3 Maze 7_instruction: Gabayan mo ako sa berdeng kademonyohan! (Mag-ingat sa
        mga TNT)
      2-3 Maze 8_instruction: Dalhin ako sa baboy!
      2-3 Maze 9_instruction: Gabayan mo ako sa berdeng kademonyohan! (Mag-ingat sa
        mga TNT)
      2-3 Maze Loops 1_instruction: Madadala mo ba ako sa baboy gamit ang 5 na magkaparehong
        uri ng mga bloke?
      2-3 Maze Loops 17_instruction: Gamitin ang natutunan mo para madala ako sa mirasol!
      2-3 Maze Loops 18_instruction: |-
        Dalhin mo ako sa mga mirasal gamit ang iilang mga bloke lang hangga't maaari. \r
        \r
        Sugbukang gumamit ng isang `repeat` na loob sa loob ng isa pa para mabawasan ang dami ng code na kakailanganin mo.
      2-3 Maze Loops 19_instruction: |-
        Pahusayin pa natin ito! \r
        Gamitin ang mga loop para mapapunta ako sa mirasol gamit ang napakaliit na mga loop lang hangga't maaari.
      2-3 Maze Loops 20_instruction: Dalhin ako sa mirasol gamit ang iilang bilang
        ng mga bloke hangga't maaari!
      2-3 Maze Loops 21_instruction: Dalhin ako sa mirasol gamit ang iilang mga bloke
        hangga't maaari!
      2-3 Maze Loops Assessment 1_instruction: 'Pagtatasa: Dalhin ako sa mirasol gamit
        ang 5 mga bloke lang! '
      2-3 Maze sq1_instruction: |-
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: Get me to the pig! What blocks got repeated?
      2-3 Maze sq10v2_instruction: Get me to the pig! What blocks got repeated?
      2-3 Maze sq2_instruction: Sundan ang landas at gabayan ako patungo sa pasaway
        na babot. Iwasan ang mga TNT para hindi lilipad ang mga balahibo!
      2-3 Maze sq3_instruction: Gabayan mo ako sa berdeng kademonyohan! (Mag-ingat
        sa mga TNT)
      2-3 Maze sq4_instruction: Maging kalmado at tulungan akong hanapin ang masamang
        baboy. Kung hindi baka magalit ako!
      2-3 Maze sq5_instruction: |-
        Get me to the pig! How many times do you have to
        repeat a block?
      2-3 Maze sq6_instruction: |-
        Can you replace the previous answer with only two
        blocks? (Hint: Create a loop using a "repeat times" block.)
      2-3 Maze sq7_instruction: Dalhin ako sa berdeng mapanghimasok gamit ang tatlong
        mga bloke lang.
      2-3 Maze sq8_instruction: Dalhin ako sa baboy! (Nasaan na ang "repeat times"
        na blokeng iyan kapag kailangan ko ito?)
      2-3 Maze sq9_instruction: Create loops to get to the pig using less blocks.
      2-3 maze sq11_instruction: Get me to the pig! What blocks got repeated?
      2-3 maze sq12_instruction: |-
        Can you replace the previous answer with a loop
        by using a "repeat times" block?
      2-3 maze sq13_instruction: |-
        Mahal na tao. Ako zombie. Dapat... punta... sa mirasol.
        Maglikha ng loop gamit ang "repeat until" na bloke.
      2-3 maze sq14_instruction: Maaari ka bang makapunta sa mirasol gamit ang apat
        na mga bloke lang?
      2-3 maze sq15_instruction: Maaari ka bang makapunta sa mirasol gamit ang 5 mga
        bloke lang?
      2-3 maze sq16_instruction: Ok, pareho lang ito, ngunit medyo kakaiba. Magagawa
        mo ba ito gamit ang limang mga bloke lang?
      2-3_instruction: |-
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Tulungan ang ibon na mahuli ang malikot na baboy sa pamamagitan
        ng pagpagalaw nito pasulong
      20hr_farmer_stage9_1_instruction: |-
        Hi, I'm a farmer. I need your help to flatten
        the field on my farm so it's ready for planting. Move me to the pile of dirt
        and use the "remove" block to remove it.
      20hr_farmer_stage9_10_instruction: |-
        I'm working late, so it's dark out, and
        I can't tell how large the piles are. Now I don't have all the options I
        used to have on the while block. Move me along the field, and if there is
        a pile, remove it
      20hr_farmer_stage9_11_instruction: |-
        It's still dark outside. Move me along
        the field. If there is a pile, remove it, and if there is a hole, fill it
        in. Hint: use the dropdown menu of options on the "if" block.
      20hr_farmer_stage9_2_instruction: |-
        Next, move me to the hole and fill it with
        TWO shovelfuls of dirt, using the "fill" block.
      20hr_farmer_stage9_3_instruction: |-
        Move me to the pile of dirt and tell me
        how many shovelfuls to remove using as few blocks as possible.
      20hr_farmer_stage9_4_instruction: |-
        Can you help me remove all four piles of
        dirt? Hint: use a repeat block if you can.
      20hr_farmer_stage9_5_instruction: |-
        Help me fill in all these holes with 5 shovelfuls
        of dirt. Hint: you can put a "repeat" block inside the "while" block.
      20hr_farmer_stage9_6_instruction: |-
        Remove all the piles of dirt, using as few
        blocks as possible. The new options in the dropdown menu on the "while"
        block tell me if I'm standing on a pile or a hole.
      20hr_farmer_stage9_7_instruction: |-
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs. Can you write a program that fills
        it until the ground is even?
      20hr_farmer_stage9_8_instruction: |-
        Help me fill in the hole at the end of the
        field, using as few blocks as possible.
      20hr_farmer_stage9_9_instruction: |-
        Make me remove all these piles of dirt.
        Try to use as few blocks as possible. Hint: try using a "while" block.
      20hr_maze_stage2_1_instruction: |-
        Can you help me to catch the naughty pig?
        Stack a couple of "move forward" blocks together and press "Run" to help
        me get there.
      20hr_maze_stage2_10_instruction: |-
        Ok, try the new "repeat until" block -
        it will repeat until I reach the annoying pig.
      20hr_maze_stage2_11_instruction: |-
        Ok, one last time for practice - can you
        solve this one using only 4 blocks?
      20hr_maze_stage2_12_instruction: |-
        Dear person. Me zombie. Me hungry. Must...
        get... to sunflower... Can you get me there with only 5 blocks?
      20hr_maze_stage2_13_instruction: |-
        Ok, this is similar, but slightly different.
        Can you do it in only 5 blocks?
      20hr_maze_stage2_14_instruction: |-
        Use the new "if" block to let me decide
        when to turn. Hint: you only need one more block, but learn how we set it
        up so you can do it on your own next time.
      20hr_maze_stage2_15_instruction: |-
        Ok, this is just like the last puzzle, but
        you need to remember how you used the "if" block and the "repeat" block
        together.
      20hr_maze_stage2_16_instruction: |-
        Me want sunflower! Use an "if" block to
        get me there with the fewest number of blocks.
      20hr_maze_stage2_17_instruction: |-
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the chompers!
      20hr_maze_stage2_18_instruction: |-
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the sunflower try to use
        this new block.
      20hr_maze_stage2_19_instruction: |-
        One more practice of the "if-else" block,
        can you get it right on your first try?
      20hr_maze_stage2_2_instruction: |-
        This pig is ruffling my feathers. Help me
        to find him!
      20hr_maze_stage2_20_instruction: |-
        Can you add just 3 blocks to help me solve
        a more complex maze? If you do it right, I can walk any curvy path no matter
        the length.
      20hr_maze_stage2_3_instruction: |-
        Trace the path and lead me to the silly pig.
        Avoid TNT or the feathers will fly!
      20hr_maze_stage2_4_instruction: |-
        Guide me to the green evilness! (Watch out
        for TNT)
      20hr_maze_stage2_5_instruction: |-
        Keep calm and help me to find the bad pig.
        Otherwise I might get angry!
      20hr_maze_stage2_6_instruction: |-
        There's a way I can get to the silly pig
        using only 2 blocks. Can you figure it out?
      20hr_maze_stage2_7_instruction: |-
        Try to get me to the green intruder using
        only three blocks.
      20hr_maze_stage2_8_instruction: |-
        Help me banish this bad piggy using the fewest
        number of blocks. Try using more than one "repeat times" block.
      20hr_maze_stage2_9_instruction: |-
        When a block is grey, that means you can't
        delete it. Solve this puzzle using the "repeat" block that repeats 3 times.
        Try putting these 3 blocks inside the grey "repeat" block: move, move, turn.
      4-5 Artist 1_instruction: 'Tulungan akong tapusin ang pagguhit sa aking kahon.
        (Bawat linya ay 300 pixel ang haba) '
      4-5 Artist 10_instruction: Pindutin ang "Run" para subukan ang code. Pagkatapos,
        ulitin ito nang ilang beses para makompleto ang drowing. Ang mga kulay ay
        iba-iba bawat beses.
      4-5 Artist 11_instruction: Kompletohin ang mga berdeng linya. Ang mga linya
        ay 300 pixels ang haba at 15 pixels ang pagitan.
      4-5 Artist 2_instruction: I-loop ang code na ito gamit ang `repeat` na bloke
        para makumpleto ang parisukat.
      4-5 Artist 3.5_instruction: Subukang alamin kung ano ang mangyayari kung ipapatakbo
        mo ang code na ito (o pindutin lang ang "Run" at subukan ito). Sa sunod, ulit
        ang code ng ilang ulit para makumpleto ang drowing!
      4-5 Artist 3_instruction: |-
        Ang parihaba na taniman ng mga bulaklak na ito ay 600 ang palibot nito.
        Ang mahabang panig ay 200 ang haba. Gumuhit ng parihaba gamit ang iilang mga bloke lang hangga't maaari.
      4-5 Artist 4_instruction: Ilang degrees ba mayroon ang isang bilog? I-loop ang
        mga bloke para makalikha ng isang bilog ng mga kulay.
      4-5 Artist 5_instruction: Ano ang maaari nating ipalit sa "???" para masiguro
        na makukumpleto ng zombie ang drowing na ito gamit ang ibinigay na loop?
      4-5 Artist 6_instruction: Ang parigilid na tatsulok na ito ay mayroong mga anggulo
        na 60, 60, at 60 degrees. Bawat panig ay 200 pixels. Kumpletohin ang drowing.
      4-5 Artist 7_instruction: Ang kanang tatsulok na ito ay mayroong mga anggulo
        na 30, 60, at 90 degrees. Ang haba ng nakahilis na gilid (haba ng hypotenuse)
        ay 200 pixels. Kompletohin ang drowing.
      4-5 Artist 8_instruction: |-
        Ang panggitnang linya sa soccer na field ay tadlong sa mga gilid na linya.  \r
        Ang parihabang ito ay mayroong kabuuan na 800 pixels ang paligid, at ito ay 240 pixels ang haba. Gaano kataas ito?  \r
        \r
        Gumuhit ng mga hangganan at ang kalagitnaang linya.
      4-5 Artist 9_instruction: Iguhit ang kanang bahagi ng larawang ito para ang
        disenyo ay magkapantay. Ang mga tatsulok ay paragilid at mayroong mga gilid
        na 50 pixels ang haba.
      4-5 Artist Assessment 1_instruction: 'Pagtatasa: Gumamit ng loop para maiguhit
        ang parigilid na tatsulok. Bawat panig ay 300 pixels.'
      4-5 Artist For Loops 1_instruction: Ilagay ang mga numerong 1 hanggang 10 sa
        lapad na mga bloke at patakbuhin ang code.
      4-5 Artist For Loops 11_instruction: Kumpletohin ang "for" na bloke para ito
        ay bibilang ng 0, 20, 40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'Ano ang mangyayari kung baligtarin mo
        ang "mula" at "hanggang" na mga numero? Kumpletohin ang "for" na bloke para
        ito ay bibilang ng 200, 180, 160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: 'Ang desinyong ito ay nasimulan nang walang
        isang "for" na loop at iyo ay gumamit nang napakaraming mga bloke. Gumamit
        ng "for" na bloke para makumpleto ang balukay. Hint: ang haba ng huling linya
        ay 250 pixels.'
      4-5 Artist For Loops 14_instruction: 'May isang tao na nagsimula sa code, ngunit
        natanto, na dapat ay mayroong mas mabilis na paraan! Gumamit ng "for" na bloke
        para mapalitan ang mga bloke at makumpleto ang parang tatsulok na balukay.
        (Hint: ang haba ng huling linya ay 300 pixels.)'
      4-5 Artist For Loops 15_instruction: 'May isang tao na nagsimula sa code, ngunit
        natanto na dapat mayroong mas mabilis na paraan! Gumamit ng "for" na bloke
        para palitan ang mga bloke at kumpletohin ang hexagonal na balukay. (Hint:
        ang haba ng huling linya ay 200 pixels.)'
      4-5 Artist For Loops 2_instruction: Ito ay isang "for" na bloke. Sa halip na
        mag-type ng 1,2,3... 10, ang "for" na bloke ay maaaring ulitin ang mga bloke
        sa loob nito at magbilang sa mga numero para sa iyo. Ilagay ang numerong 10
        sa "hanggang" na bahagi ng "for" na bloke.
      4-5 Artist For Loops 3_instruction: Paano natin mabilang ang 1 hanggang sa 50.
        I-edit ang "for" na bloke.
      4-5 Artist For Loops 4_instruction: Kumpletohin ang "for" na bloke para bibilang
        ito mula 1 hanggang 10 na may pagitan na 1.
      4-5 Artist For Loops 6_instruction: Magguhit ng mga parisukat na may mga haba
        na 50, 60, 70, 80, at 90 pixels. Kakailanganin mong gumamit ng "draw a square"
        na function nang limang beses.
      4-5 Artist For Loops 7_instruction: |-
        Draw the same squares but use a "count
        with" block to change the sizes. Place the "counter" block in the "draw
        a square" function. Hint: It's in the Variables category.
      4-5 Artist For Loops 8_instruction: Maaari mo bang makumpleto ang programa sa
        pamamagitan ng paglagay sa mga bloke sa loob ng isang "for" na bloke na nagbibilang
        mula 10 hanggang 20 ng 10? Maaari mong mahanap ang "for" na bloke sa Loops
        na kategorya.
      4-5 Artist For Loops 9_instruction: |-
        These circles are size 5, 10, 15, 20,
        25, 30, and 35. Draw the circles using a "for" block.
      4-5 Artist Free Draw 1_instruction: Libreng Pagguhit! Magguhit nang kahit anumang
        nagbigay inspirasyon sa iyo na maglikha.
      4-5 Artist Functions 1_instruction: Gumamit ng repeat loop para iguhit ang tatsulok
        na ito.
      4-5 Artist Functions 10a_instruction: |-
        Put this code into the 'draw a snowflake'
        function and replace the 50 with the parameter 'size'. The function is already
        called on to make a snowflake that is 100 pixels.
      4-5 Artist Functions 10b_instruction: |-
        Use the 'draw a snowflake' function
        to create different size flakes.  Hint: the first snowflake is 25 in length
        and each snowflake is twice the size of the one before.
      4-5 Artist Functions 11_instruction: |-
        This "draw a hexagon" function uses
        the "draw a triangle" function. Complete the hexagon function. (Hint: A
        hexagon has 6 sides, each 100 pixels long)
      4-5 Artist Functions 12_instruction: |-
        Complete the 'draw waves' function.  Each
        wave is made up of one Upper wave and one Lower wave.   Hint: Draw 5 blue
        waves.
      4-5 Artist Functions 13 Free play_instruction: |-
        Here are some functions to
        draw planets, stars, rockets, and robots. Use them any way you like to make
        pictures that you can share with your friends.
      4-5 Artist Functions 14 Free play_instruction: Dito, kami ay nagbibigay sa iyo
        ng iilang mga function. Gamitin sila sa kahit anong paraan na gusto mo sa
        loob ng isa o higit pang mga loop para makagawa ng mga larawan na maaari mong
        ibahagi sa iyong mga kaibigan. Pindutin ang 'Run' para makakita ng halimbawa.
      4-5 Artist Functions 15 Assessment_instruction: 'Pagtatasa: Gamitin ang "draw
        a square" na function para makalikha ng mga parisukat. Ang mga parisukat ay
        50, 100, at 150 pixels.'
      4-5 Artist Functions 2a_instruction: Ngayon ay ilagay ang mga blokeng ito sa
        isang bagong function na tinatawag na "draw a small triangle" at tawagin ito.
      4-5 Artist Functions 2b_instruction: Ngayon maglikha ng function na tinatawag
        na "draw a small triangle" gamit ang ibinigay na mga bloke.
      4-5 Artist Functions 3_instruction: "Now create the functions \"draw a medium\ntriangle\"
        and \"draw a large triangle\". The \"draw a small triangle\" function\nis
        done for you. The triangles have side lengths of 50 (small), 100 (medium),\nand
        150 (large). "
      4-5 Artist Functions 4_instruction: |-
        This new "draw a triangle" function
        has a parameter and can do the work of all three functions before. Draw the
        same triangles using this new function.
      4-5 Artist Functions 5_instruction: Maaari mo bang baguhin ang "draw a triangle"
        na function sa "draw a square" na function para mabago ang drowing?
      4-5 Artist Functions 6_instruction: |-
        Use the "draw a square" and "draw a
        triangle functions" to draw a house. (Hint: The square's sides are 200 pixels)
      4-5 Artist Functions 6b_instruction: |-
        Use the draw a square and triangle functions
        along with other blocks to create a house by adding them to the 'draw a house"
        function and calling it.
      4-5 Artist Functions 7_instruction: |-
        Use the "draw a house" function to draw
        houses that are 100 pixels and 50 pixels. The two houses are separated by
        50 pixels.
      4-5 Artist Functions 8_instruction: Ang "draw a flower" na function ay mayroong
        parameter na nagbibigay daan sa iyo na magtakda ng taas ng tangkay. Itakda
        ito sa 200 at tingnan kung ano ang mangyayari.
      4-5 Artist Functions 9_instruction: |-
        Draw these 3 flowers. The first one's
        height is 100 and the next flower is always 50 pixels more than the height
        of the previous one. The flowers are also 100 pixels apart.
      4-5 Artist Patterns 1_instruction: |-
        Iguhit ang parisukat na ito gamit ang loop.\r
        \r
        Bawat gilid ay 20 pixels ang haba.
      4-5 Artist Patterns 10_instruction: |
        Ang code na ito ay nagguguhit ng dalawang hanay ng mga hexagon - i-loop ang buong bagay nang 4 na beses para maiguhit ang buong pulot-pukyutan. \r
        \r
        Kakailanganin mong tumalon pabalik nang 120 pixels sa iyong panlabas na loop para masiguro na ang artista ay hindi makaguhit sa labas ng screen.\r
      4-5 Artist Patterns 11_instruction: 'Ilang beses ba kailangan itong i-loop para
        maiguhit ang kalahating bilog? '
      4-5 Artist Patterns 12_instruction: |-
        Kung ikaw ay lilikha ng isa pang loop gaya nito, ngunit liliko ka sa kaliwa sa halip na sa kanan, ano ang mangyayari? \r
        \r
        Maaari mo bang ulitin ang lahat ng ito para maguhit ang alon na ito?
      4-5 Artist Patterns 13_instruction: |-
        Ngayon ay ating i-loop ang buong bagay nang apat na beses para malikha ang kuwadro ng larawang ito. Mag-ingat sa mga sulok - hindi ka lang makakaikot ng 90 degrees nang ganon na lang! \r
        \r
        Kung ang pag-loop ng 3 degree na pag-ikot nang 60 na beses ay nakakagawa ng kalahating bilog, aling sa mga blokeng ito ng code ang makakagawa ng karagdagang ikaapat na bilog para sa mga sulok?
      4-5 Artist Patterns 2_instruction: Kung ilagay mo ang iyong parisukat na loop
        sa loob ng isa pang loop, tinatawag natin itong isang naka-nest na loop. Ano
        ang kailangan mong idagdag bilang panlabas na loop para masiguro na lahat
        ng 15 na mga parisukat ay nakalinya katabi ng isa't isa?
      4-5 Artist Patterns 3_instruction: Ngayon ay pupunta tayo nang mas malalim!
        Ating nai-nest ang buong bloke ng code sa isang loop, ngunit kailangan mong
        pabalikin ang artista sa lugar para maiguhit ang sunod na linya. Alin sa mga
        code na blokeng ito ang maaaring maglagay sa dulo ng pinakalabas na loop para
        maiguhit ang buong grid?
      4-5 Artist Patterns 4_instruction: Ang dyamanteng iyo ay mayroong 50 pixel na
        mga gilid at anggulo na 120 at 60 degrees. Gumamit ng loop para maiguhit ito.
      4-5 Artist Patterns 5.5_instruction: Ilang beses ba kailangan mong ulitin ang
        blokeng ito para maiguhit ang buong grid ng mga dyamante?
      4-5 Artist Patterns 5_instruction: |
        Ulitin ang code na ito para makagawa ng isang hanay ng 6 na mga dyamante.
        \r
        \r
        Bigyang pansin na ating binago ang ating dyamanteng code para mag-ulit ng 3 beses sa halip na 2 - bakit kaya?\r
      4-5 Artist Patterns 6_instruction: Ilang beses ba kailangan mong ulitin ang
        blokeng ito para maiguhi ang buong grid ng mga dyamante?
      4-5 Artist Patterns 7_instruction: Ating baguhin ang code mula sa nakaraan palaisipan
        para magawa ang mas kumplikadong pattern na ito. Bigyang pansin kung paano
        ang mga dyamante nagsasapawan, subukang baguhin ang unang "jump backwards"
        mula 100 sa 50 (kalahati ang layo) - ngayon gaano kalayo dapat gagawa ang
        artista sa pangalawang "jump backwards"?
      4-5 Artist Patterns 8_instruction: Gumamit ng loop para maiguhit ang hexagon
        na ito na may 40 pixels ang gilid at 60 degree ang mga anggulo.
      4-5 Artist Patterns 9.5_instruction: Ating i-loop ang code na ito para maiguhit
        ang dalawang mga hanay ng mga hexagon. Bigyang pansin na ang ating pangalawang
        hanay ay inilipat pakanan.
      4-5 Artist Patterns 9_instruction: |-
        Ngayon, ulitin ang code na ito nang 3 beses at iguhit ang buong hanay. \r
        \r
        Bawat hexagon ay 80 pixels ang lapad mula sa pinakadulong mga puntos sa kaliwa hanggang sa kanan.
      4-5 Artist Patterns Free Play_instruction: Libreng laro - subukan ang iyong
        kamay sa paggawa ng sarili mong pattern!
      4-5 Bee Conditionals - FC Test_instruction: |-
        The bee only wants nectar right
        now. Not all objects are flowers, so check underneath EVERY CLOUD to see if
        it is hiding a flower. If it is, then you can gather nectar.
      4-5 Bee Conditionals 1 (copy 1)_instruction: |-
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: Ang ulap na ito ay nakaharang sa aking paningin.
        Suriin kung makita kung mayroong isang bulaklak sa ilalim ng ulap, at kumuha
        lang ng nektar kung mayroong bulaklak. Maging maingat, maaari itong magbago!
      4-5 Bee Conditionals 2 (copy 1)_instruction: |-
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: |-
        Mas marami pang mga ulap! \r
        \r
        Tingnan sa baba ng bawat ulap para makita kung ito ba ay nagtatago ng bulaklak bago ikaw makakakuha ng nektar.  \r
        \r
        Tandaan:
        Hindi lahat ng mga ulap ay magkapareha!
      4-5 Bee Conditionals 3_instruction: Ngayon ay gusto ko lang makagawa ng pulot.
        Ang ilan sa mga ulap na ito ay maaaring magkaroon ng pulot-pukyutan sa ilalim
        ng mga ito. Siguraduhin na masuri mo ang bawat ulap!
      4-5 Bee Conditionals 4 (copy 1)_instruction: |-
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: Minsan ang ulap na ito ay nagtatakip sa
        bulaklak, at minsan tinatakpan nito ang pulot-pukyutan! Gamitin ang if/else
        na bloke para magkolekta ng nektar kung ito ay isang bulaklak, kung hindi
        gumawa ng pulot (dahil ito ay isang pulot-pukyutan).
      4-5 Bee Conditionals 5_instruction: |-
        Mayroon lang isang bulaklak o pulot-pukyutan sa ilalim ng bawat isa sa mga ulap na iyon!\r
        \r
        Gamitin ang `if/else` na bloke para magkolekta ng nektar kung mayroong isang bulaklak.\r
        Kung hindi, gumawa ng pulot (dahil mayroong pulot-pukyutan).
      4-5 Bee Conditionals 6 (copy 1)_instruction: |-
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: |-
        Hindi ako sigurado kung magkano ang nektar sa loob ng bulaklak na ito, ngunit alam ko na ito ay mayroong 1, 2, o 3 na nektar.\r
        \r
        Pagsamahin ang kondisyonal na mga bloke (`if` at/o `if/else`) para makuha lang ang nektar na nilalaman ng bulaklak.
        \r
        \r
        Tandaan, na ang bilang ng nektar ay maaring magbago bawat beses na patakbuhin mo ang palaisipan!
      4-5 Bee Conditionals 7_instruction: |-
        Ang mga bulaklak na mga ito ay maaaring magkaroon ng 3, 2, o 1 na nektar.
        \r
        \r
        Kumpletohin ang `check purple flower` na function at gamitin ito para kolektahin ang lahat ng mga nektar na nasa mga bulaklak.
      4-5 Bee Conditionals 8_instruction: |-
        Isulat ang function para sa `check flower make honey`. \r
        \r
        Ang iyong function ay dapat titingin kung ang lilang bulaklak ay mayroong 3, 2, o 1 na nektar at kunin ang lahat ng nektar. \r
        Pagkatapos, gumalaw pasulong at gumawa ng pulot.
      4-5 Bee Conditionals Assessment 1_instruction: |
        **Pagtatasa:** Ang ulap na ito ay nagtatago ng bulaklak na may isang nektar o isang pulot-pukyutan na nangangailangan ng isang pulot. \r
        \r
        Kumpletohin ang `get nectar or make honey` na function, pagkatapos ay tawagin ito para kolektahin ang nektar o pulot.\r
      4-5 Bee Debugging 1_instruction: |-
        Ang mga blokeng ito ay talagang nakakainis sa akin. \r
        \r
        Maaari mo bang ayusin ang mga ito?
      4-5 Bee Debugging 10_instruction: Hanapin ang mga mali at ayusin ang mga ito.
      4-5 Bee Debugging 11_instruction: Tama ba ang pagbilang nito?
      4-5 Bee Debugging 2_instruction: Tulungan ang bubuyog na kukuha ng nektar at
        gumawa ng pulot.
      4-5 Bee Debugging 3_instruction: Hanapin ang mga mali at ayusin ang mga ito.
      4-5 Bee Debugging 4_instruction: Ang mga blokeng ito ay hindi gumagana. Ano
        ang pattern?
      4-5 Bee Debugging 5_instruction: May ilang bagay na hindi tama dito...
      4-5 Bee Debugging 6_instruction: |-
        Ang lilang bulaklak ay mayrong iba't ibang bilang ng nektar bawat beses na patakbuhin mo ang palaisipan. \r
        \r
        Ayusin ang mga bloke para makuha ang lahat ng nektar mula sa bulaklak sa bawat oras.
      4-5 Bee Debugging 7_instruction: Ang function ay may kulang na bagay...
      4-5 Bee Debugging 8_instruction: Ang function na ito ay walang problema, ngunit
        hindi wasto ang pagkagamit nito.
      4-5 Bee Debugging 9_instruction: Bakit ang bubuyog hindi nakagawa ng sapat na
        pulot?
      4-5 Bee Debugging Assessment 1_instruction: 'Pagtatasa: Ayusin ang code.'
      4-5 Bee Nested Loops 1_instruction: Maggamit ng loop para ikolekta ang lahat
        ng nektar.
      4-5 Bee Nested Loops 2_instruction: "Kolektahin ang lahat ng nektar mula sa
        bawat bulaklak.\nGumamit ng naka-nest na loop. "
      4-5 Bee Nested Loops 3_instruction: Kolektahin ang lahat ng nektar sa pamamagitan
        ng paglagay sa panimulang code sa loob ng iba pang loop.
      4-5 Bee Nested Loops 4_instruction: "Kolektahin ang lahat ng nektar mula sa
        bawat bulaklak at gumawa ng pulot sa pulot-pukyutan. \\r\n\\r\nGumamit ng
        naka-nest na loop. "
      4-5 Bee Nested Loops 5_instruction: Kolektahin ang lahat ng nektar sa pamamagitan
        ng paglikha ng naka-nest na loop.
      4-5 Bee Nested Loops 6_instruction: Kolektahin ang lahat ng nektar.
      4-5 Bee Nested Loops 7_instruction: Ilagay ang loop na ito sa loob ng isa pang
        loop para makalikha ng isang naka-nest na loop at kolektahin ang lahat ng
        mga nektar mula sa mga bulaklak.
      4-5 Bee Nested Loops 8_instruction: 'Kolektahin ang lahat ng mga nektar mula
        sa mga bulaklak na ito sa pamamagitan ng pag-nest ng while na loop. Palitan
        ang panloob na repeat times na bloke sa isang while na bloke. '
      4-5 Bee Nested Loops 9_instruction: Kolektahin ang lahat ng mga nektar mula
        sa mga bulaklak na ito sa pamamagitan ng pag-nest ng while loop sa loob ng
        isang repeat.
      4-5 Bee Nested Loops Assessment 1_instruction: "**Pagtatasa:** Kolektahin ang
        lahat ng mga nektar at gawin lahat ng mga pulot gamit ang mga loop."
      4-5 Bee Nested Loops Rows_instruction: |-
        Tipunin ang nektar mula sa mga hanay ng mga bulaklak!
        Gumamit ng naka-nest na loop.
      4-5 Maze 1 (copy 1)_instruction: Mahal na tao. Ako zombie. Dapat... punta...
        sa mirasol.
      4-5 Maze 1_instruction: Mahal na tao. Ako zombie. Dapat... punta... sa mirasol.
      4-5 Maze 10_instruction: Maaari ka bang makapunta sa mirasol gamit ang apat
        na mga bloke lang?
      4-5 Maze 11_instruction: Maaari ka bang makapunta sa mirasol gamit ang anim
        na mga bloke lang?
      4-5 Maze 12_instruction: Sige, ito ay medyo kakaiba. Magagawa mo ba ito gamit
        ang anim na mga bloke lang?
      4-5 Maze 13_instruction: Dalhin ako sa baboy!
      4-5 Maze 14_instruction: Dalhin mo ako sa baboy! Gamitin ang Repeat until na
        bloke.
      4-5 Maze 2 (copy 1)_instruction: Dalhin ang zombie sa mirasol, ngunit iwasan
        ang chomper!
      4-5 Maze 2_instruction: Dalhin ang zombie sa mirasol, ngunit iwasan ang chomper!
      4-5 Maze 3 (copy 1)_instruction: Dapat... punta... sa mirasol.
      4-5 Maze 3_instruction: Dapat... punta... sa mirasol.
      4-5 Maze 4 (copy 1)_instruction: Subukan ang "repeat" na bloke para makagamit
        ng kaunting mga bloke...
      4-5 Maze 4_instruction: Gamitin ang "repeat" na bloke para madaling malutas
        ang palaisipan...
      4-5 Maze 5 (copy 1)_instruction: Malutas mo ba ang palaisipan gamit ang pinakakaunting
        bilang ng posibleng mga bloke?
      4-5 Maze 5_instruction: Malutas mo ba ang palaisipang ito gamit ang pinakakaunting
        bilang ng mga bloke hangga't maaari?
      4-5 Maze 6 (copy 1)_instruction: Malutas mo ba ang palaisipan gamit ang pinakakaunting
        bilang ng posibleng mga bloke?
      4-5 Maze 6_instruction: Dalhin ako sa mirasol gamit ang pinakakaunting bilang
        ng mga bloke hangga't maaari!
      4-5 Maze 7_instruction: Mabilis na dalhin ang zombie sa mirasol! Maaari mo bang
        lutasin ang palaisipan gamit ang hindi tataas sa 11 na mga bloke?
      4-5 Maze 8_instruction: |-
        Dalhin ang zombie sa mirasol gamit ang iilang mga bloke lang hangga't maaari.  \r
        (Iwasan ang mga chompers!)
      4-5 Maze 9_instruction: |-
        Ngayon ay mayroon na tayong bagong bloke na tinatawag na `repeat until`.  \r
        Ito ay nagbibigay-daan sa atin na manatiling mag-loop hanggang maabot ng zombie ang mirasol.  \r
        \r
        Gamitin ang bagong `repeat until` na bloke para malutas ang palaisipang ito gamit ang kaunting mga utos hangga't maaari.
      4-5 Maze Assessment 1_instruction: 'Pagtatasa: Pumunta sa mirasol gamit ang
        kaunting mga bloke hangga''t maaari.'
      4-5 Maze Conditionals 1_instruction: Gamitin ang `repeat until` na bloke para
        mapapunta ang zombie sa mirasol.
      4-5 Maze Conditionals 10_instruction: |-
        Makakadagdag ka ba ng 3 mga bloke lang para matulungan ang zombie na maglutas ng mas kumplikadong mga maze? \r
        \r
        Kung magawa mo ito ng tama, siya ay makakalakad sa kahit anung baliko na daan anuman ang haba nito!
      4-5 Maze Conditionals 2_instruction: Gamitin ang `repeat until` na bloke para
        mapapunta ang zombie sa mirasol.
      4-5 Maze Conditionals 3_instruction: 'Gamitin ang `if` na bloke para makatulong
        sa pagdesisyon kung kailan liliko. \r

'
      4-5 Maze Conditionals 4_instruction: Ok, lutasin ang isang ito gaya lang ng
        huling palaisipan, ngunit dapat mong tandaan kung paano mo sama-samang ginamit
        ang `if` at `repeat until`.
      4-5 Maze Conditionals 5_instruction: |-
        "Ako gusto mirasol!" \r
        \r
        Gamitin ang `if` na pahayag para mapapunta ang zombie sa mirasol gamit ang pinakakaunting bilang ng mga bloke.
      4-5 Maze Conditionals 6_instruction: |-
        "Kain mirasol!"\r
        \r
        Gumamit ng `if` na pahayag para mapapunta ang zombie sa mirasol gamit ang pinakakaunting bilang ng mga bloke.
      4-5 Maze Conditionals 7_instruction: Ang solusyon sa palaisipang ito ay hindi
        masyadong kakaiba, ngunit mag-ingat sa mga chompers!
      4-5 Maze Conditionals 8_instruction: |-
        Ang `if/else` na bloke ay nagsusuri sa isang kondisyon, at pagkatapos ay gumawa ng isang bagay O iba. \r
        \r
        Gamitin ang bagong bloke na ito para madala ako sa mirasol.
      4-5 Maze Conditionals 9_instruction: |-
        Isa pang pagsasanay na palaisipan para sa `if/else` na bloke!\r
        \r
        Sundin ito gamit ang iyong mga daliri para tingnan kung mapagwari mo ito sa iyong unang pagsubok.
      4-5 Maze Conditionals Assessment 1_instruction: "**Pagtatasa:** Gamitin ang
        `repeat until` at ang `if/else` na bloke para mahatid ako sa mirasol gamit
        ang kaunting mga bloke lang hangga't maaari."
      4-5 Nested Loops 1_instruction: 'Kumpletohin ang code para maiguhit ang mga
        tatsulok na ito. Ang una ay nagawa na para sa iyo. Higing: 3 tatsulok sa isang
        360 degre na pag-ikot.'
      4-5 Nested Loops 10_instruction: |-
        Draw the last row of stars on this flag by
        looping the provided blocks. The stars are 50 pixels apart, but remember that
        the stars themselves are 30 pixels wide.
      4-5 Nested Loops 11_instruction: Maaaril mo bang iguhit ang 10 na mga parisukat
        ng bangketang ito gamit ang naka-nest na loop? Bawat parisukat ay 30 pixels.
      4-5 Nested Loops 12_instruction: Maaari mo bang iguhit ang 36 na mga tatsulok
        na ito gamit ang naka-nest na loop?
      4-5 Nested Loops 2_instruction: 'Ngayon ay i-nest ang loop na ito sa loob ng
        isa pang loop para maiguhit ang 10 mga tatsulok na ito. Ito ang tinatawag
        na "naka-nest" na loop.  '
      4-5 Nested Loops 3_instruction: |-
        Maglikha ng araw sa pamamagitan ng pag-nest sa panimulang code sa isa pang loop.\r
        \r
        Para magawa ang magandang disenyong ito na walang laman sa gitna, kakailanganin mong tumalon pasulong sa haba ng tatsulok bago umikot.
      4-5 Nested Loops 5_instruction: I-loop ang ibinigay na code para makalikha ng
        isang mulino.
      4-5 Nested Loops 6_instruction: Makakaguhit ka ba ng isang hexagon sa pamamagitan
        ng pag-loop ng code ng tatsulok?
      4-5 Nested Loops 7_instruction: |-
        I-loop ang disenyong ito nang 10 beses. \r
        \r
        Ilang beses ka ba dapat iikot sa bawat beses na mag-loop ka?
      4-5 Nested Loops 8_instruction: "I-loop ang hugis na ito nang 6 na beses. \\r\n\\r\nIlang
        ikot ba dapat ang kailangang gawin mo sa bawat beses na mag-loop ka? "
      4-5 Nested Loops 9_instruction: Iguhit ang ngipin sa loob ng bibig ng buwaya!
      4-5 Nested Loops Assessment 1_instruction: 'Pagtatasa: Gumamit ng naka-nest
        na loop para makumpleto ang disenyo.'
      4-5 While Loops 1_instruction: Ilipat ako sa butas at punan ito ng dawalang
        pala ng lupa, gamit ang `fill` na bloke.
      4-5 While Loops 2_instruction: Ilipat ako sa tumpok ng lupa at tanggalin ito
        gamit ang 5 pala, gamit ang `remove 1` na bloke.
      4-5 While Loops 3_instruction: |-
        Gumamit ng kaunting mga bloke lang hangga't maaari para malutas ang palaisipang ito!  \r
        \r
        Ilipat ako sa tumpok at alisin ang lahat ng mga dumi, pagkatapos ay ilipat ako sa butas at punan ito nang lubusan.
      4-5 While Loops 4_instruction: "Wow, tingnan mo iyan!\\r\n\\r\nHindi ko alam
        kung ilang pala ng lupa ang kakailanganin ng butas na ito.  \\r\nMaaari ka
        bang magsulat ng programa na palaging gumagamit ng `fill` na bloke hanggang
        sa mapatag na ang lupa?  "
      4-5 While Loops 5_instruction: Wow, ngayon ay mayroon nang dalawang malalim
        na butas! Maaari ka bang magsulat ng programa na pupuno sa dalawang ito hanggang
        sa mapatag na ang lupa?
      4-5 While Loops 6_instruction: Wow, ngayon ay mayroong malaking tumpok ng dumi!
        Maaari ka bang magsulat ng programa na nagtatangal sa lahat ng mga ito para
        mapatag ang lupa?
      4-5 While Loops 7_instruction: Wow, ngayon ay mayroong tatlong malaking mga
        tumpok ng dumi! Maaari ka bang magsulat ng programa na magtatanggal sa bawat
        isa nito hanggang sa mapatag ang lupa?
      4-5 While Loops 8_instruction: " Mayroong isang lubhang malalim na butas at
        isang malaking tumpok ng lupa. Ilang pala ng lupa ang kailangang ilipat para
        mapatag ang lupain?"
      4-5 While Loops Assessment 1_instruction: Mayroong napakaraming mga butas at
        tambak. Tulungan akong punan at magtanggal sa mga ito para mapatag ang lupain.
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      Alien Defender_instruction: 'Ideya ng Proyekto: Gumawa ng isang tagapagtanggol
        na laro sa Play Lab!'
      Alien Defender_2018_instruction: 'Ideya ng Proyekto: Gumawa ng isang tagapagtanggol
        na laro sa Play Lab!'
      AllTheThings Applab - Turtle move with button_instruction: |-
        Add a button that
        moves the turtle when clicked.  (Click to see full instructions)
      'AllTheThings: Pixelation - Lesson 14 - Make the Letter A_instruction': 'Gumawa
        ng isang 3x5 na letrang ''A''. Ang widget ay na-setup gamit ang maling mga
        sukat. Ang iyong unang gawain ay para itakda ang pangalawang byte sa 8-bit
        na binary code para sa 5: 0000 0101. Pagkatapos ay magsimulang magpasok ng
        pixel na mga datos.'
      'AllTheThings: Pixelation - Lesson 15 - Color Shades 4x4_instruction': 'Pinasimula
        ka namin sa isang 4x4 na larawan na nilikha ni Maddie sa video. Ang iyong
        unang gawain ay punan ang 4x4 na grid ng mga kulay gamit ang 12-bits kada
        pixel. Narito ang mga kahilingan: Hanay 1 - punan ng iba''t-ibang kulay na
        pula. Hanay 2 - iba''t ibang kulay na berde. Hanay 3 - iba''t ibang kulay
        na bughaw. Hanay 4 - iba''t ibang kulay na abo.'
      'AllTheThings: Pixelation - Lesson 15 - Complete 3-bit color_instruction': Pinagsisimula
        ka namin sa isang 4x2 na larawan na nalikha ni Maddie, ngunit iniwan namin
        ang huling dalawang mga parisukat. Tapusin ang larawan sa pamamagitan ng pagtukoy
        kung alin sa dalawang mga kulay ang wala at i-encode ang mga ito.
      App Lab test_instruction: subukan
      AppLab_test02_instruction: |-
        One sentence summary of the activity. Click to
        view full instructions.
      Applab AllTheThings ResourcesTab AllResources_instruction: |-
        Draw a 1x1 square
        above and to the left of the turtle's starting position. Click to see full
        instructions.
      Applab AllTheThings ResourcesTab MapReference_instruction: |-
        Draw a 1x1 square
        above and to the left of the turtle's starting position. Click to see full
        instructions.
      Applab AllTheThings ResourcesTab ReferenceLinks_instruction: |-
        Draw a 1x1 square
        above and to the left of the turtle's starting position. Click to see full
        instructions.
      Applab allthethings onRecordEvent_instruction: |-
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      Applab test_instruction: This level is submittable. For testing only!
      Artist - Nested Loops 1_instruction: |-
        Complete the code to draw these triangles.  The
        first one is done for you.  Hint:  3 triangles in a 360 degree rotation.
      Artist - Nested Loops 10_instruction: |-
        Draw the last row of stars on this flag
        by looping the provided blocks. The stars are 50 pixels apart, but remember
        that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: |-
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: |-
        Can you draw these 36 triangles using
        a nested loop?
      Artist - Nested Loops 2_instruction: "Now nest this loop inside another loop\nto
        draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles\ncomplete
        a 360 degree rotation.  "
      Artist - Nested Loops 3_instruction: |
        Create a sun by nesting the starter code
        in another loop. This is called a nested loop.\r
      Artist - Nested Loops 5_instruction: Loop the given code to create a windmill.
      Artist - Nested Loops 6_instruction: |-
        Can you draw a hexagon by looping the
        triangle code?
      Artist - Nested Loops 7_instruction: |-
        Loop this design 10 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 10?)
      Artist - Nested Loops 8_instruction: |-
        Loop this design 6 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 6?)
      Artist - Nested Loops 9_instruction: Draw the teeth in the alligator's mouth!
      Artist - Nested Loops Assessment 1_instruction: Gumamit ng naka-nest na loop
        para makumpleto ang disenyo.
      Artist Inspiration_instruction: "Free Play Inspiration: You've now learned\neverything
        you need to know to make a pattern like this! If this picture inspires\nyou,
        try to make something similar. Otherwise, create something all your own.\\r\n\n\\r\nWant
        to know how our inspiration pattern was made? "
      Auto Open Function Editor_instruction: "You can call functions from inside\nother
        functions! Using your \"shape\" function as a base, create 3 house shapes\neach
        20 pixels larger than the last starting at 50 pixels in length. Using\na counter
        loop might be helpful. "
      Bee Recommended Blocks test_instruction: |-
        Purple flowers may have either 1
        or 0 nectar, but you don't know which one! Be careful not to collect nectar
        from a purple flower if it doesn't have any. Check if the nectar is equal
        to 1 by using the if block.
      Bergeron Robot Maze1_instruction: |
        Can you help me catch the naughty pig? Stack
        a couple of `move forward` blocks below the `when run` block and press "Run".
      Big Game Animation 1 (copy 1)_instruction: |-
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |-
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click "Run" to see what your game can currently do (not much!), update any
        variables you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |-
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |-
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |-
        The update-danger function should work just
        like update-target, except that the danger should move from the right side
        over towards the left. Complete update-danger to make the danger fly across
        the screen.
      Big Game Animation 4_instruction: |-
        At this point in your game, your danger
        should run across the screen from right to left, and your target should run
        across from left to right. They don't ever come back on screen once they've
        left, but we'll take care of that later. Take a minute to make sure your
        game is working like you want it to, and then click "Finish" to move on.
      Big Game Booleans 1_instruction: |-
        When you last worked on your game we got
        our target and danger sprites to fly across the screen, but they never come
        back. Click "Run" to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Booleans 2_instruction: |-
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on the right side.
      Big Game Booleans 3_instruction: |-
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |-
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |-
        At this point your Danger should run across
        the screen from right to left, your Target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        "Finish" to move on.
      Big Game Collision 1 (copy 1)_instruction: |-
        When you last worked on your game
        we got our target and danger sprites to fly across the screen, but they never
        come back. Click run to see how your game is currently working, and then click
        finish and we'll work on making those sprites reappear on screen after they've
        left.
      Big Game Collision 1_instruction: |-
        At this point you've programmed a video
        game with a moving Target and Danger, both of which return to the screen once
        they've left, and a Player that responds to keyboard input. Click "Run"
        to see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |-
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |-
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |-
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete_instruction: |-
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Final_instruction: |-
        You made it! At this point your game should be
        fully functioning, take some time to enjoy your new game and make any final
        tweaks to it. When you're happy with the final product, click Finish and
        you'll have an opportunity to share a link to your game. Good work!
      Big Game Player 1_instruction: |-
        We're getting really close to a finished game!
        Last time you worked on your game, you used booleans to make your Target and
        Danger return to the screen once they've left. Click Run to see how your
        game looks right now, and then we'll get to making your Player move up and
        down.
      Big Game Player 2_instruction: |-
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: |-
        A demo of the completed CS in Algebra Big Game
        project
      Big Game Vars 1 (copy 1)_instruction: |-
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |-
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |-
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |-
        The first step to making this game your own is
        to give it a good Title. Click edit on the title and subtitle variables and
        change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |-
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |-
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |-
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |-
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Brad Spooky House Copy_instruction: |-
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      Brad Spooky House_instruction: |-
        Freeplay: Here are the functions you've written,
        and some more for you to play with. Draw something awesome! Play with the
        pen width to see how different your drawings look!
      Building a Foundation Assessment_instruction: |-
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      Busy Bee 2_instruction: Ang bubuyog na ito ay mayroong napakaraming trabaho!
        Nakapansin ka ba ng kahit anong pattern na maaari mong magamit para magawang
        simple ang iyong code?
      Busy Bee_instruction: Ang bubuyog na ito ay mayroong napakaraming trabaho! Nakapansin
        ka ba ng kahit anong pattern na maaari mong magamit para magawang simple ang
        iyong code?
      C3-Farmer While Loops 1_instruction: |-
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |-
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |-
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |-
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |-
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |-
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |-
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2-
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |-
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      CSD Hackathon Pt 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Pt 2_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 1_instruction: "(Click to see full instructions)"
      CSD Hackathon Week 2_instruction: "(Click to see full instructions)"
      CSD U3 Background Discuss_instruction: |-
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Background Experiment_instruction: |-
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Boolean Modify_instruction: |-
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Boolean Modify_2018_instruction: |-
        Modify the code so that all of the
        console.log commands print true
      CSD U3 Boolean Predict_instruction: |-
        What do you think this code will do when
        it is run? Predict what each console.log() command will print, then run the
        program to check your predictions.
      CSD U3 Boolean Predict_2018_instruction: |-
        What do you think this code will
        do when it is run? Predict what each console.log() command will print, then
        run the program to check your predictions.
      CSD U3 Draw Loop Discuss_instruction: |-
        Here's a program that looks pretty
        similar to what you've been writing, but may behave quite differently. You'll
        want to stop and discuss with the class before moving on.
      CSD U3 Draw Loop Experiment_instruction: |-
        Try using some of the other shape
        functions you've learned in the draw loop. What happens when you use randomNumber()
        to generate some of the inputs?You'll want to stop and discuss with the class
        before moving on.
      CSD U3 Expressions calculator_instruction: |-
        Add the numbers 1 through 10. Multiply
        the numbers 1 through 10. Check your answers with a neighbor.
      CSD U3 Frame Rate_instruction: Slow down Gamelab Gary's animation with frameRate()
      CSD U3 Keypress Boolean-2018_instruction: |-
        Modify the code so that all of the
        console.log commands print true
      CSD U3 Keypress Boolean_instruction: |-
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Boolean_2018_instruction: |-
        Modify the code so that all of the
        console.log commands print true
      CSD U3 Keypress Watchers_instruction: |-
        Modify the code so that all of the console.log
        commands print true
      CSD U3 Keypress Watchers_2018_instruction: |-
        Modify the code so that all of
        the console.log commands print true
      CSD U3 L5 Freeplay_instruction: |-
        Palitan ang halaga ng petalSize nang maraming beses.
        Paano nito nabago ang iyong drowing?
      CSD U3 L5 Freeplay_2018_instruction: |-
        Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Mouse Input Bee 2_instruction: Do this
      CSD U3 Mouse Input Bee 2_2018_instruction: Do this
      CSD U3 Random Animation_instruction: |-
        Use randomNumber() to animate Gary's
        mouth.
      CSD U3 Random Choice_instruction: |-
        Use the randomNumber() block to generate
        either 0 or 1
      CSD U3 Random Color_instruction: |-
        Could you use randomNumber() to pick random
        colors as well? Try setting one or more of the channels in the rgb block with
        a random number. What should the maximum value be?
      CSD U3 Random Intro_instruction: |-
        What do you think this code will do when
        it is run? Make a prediction, then run this code 5 - 10 times, recording the
        output each time. Share your results with your neighbor.
      CSD U3 Random Min Max_instruction: |-
        Using console.log() write a program that
        randomly returns a number in a range you define.
      CSD U3 Random Width Height_instruction: |-
        Pick a shape block and use calls to
        randomNumber() in place of one or more of the parameters. Maker sure you run
        it a few times so you can see the effect of randomization.
      CSD U3 Simple Drawing - Animation 2_instruction: |-
        Use randomNumber() on the
        x position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Animation_instruction: |-
        Use randomNumber() on the x
        position and width of your cloud ellipses to introduce a bit of animation.
      CSD U3 Simple Drawing - Background_instruction: |-
        Put all of your code into
        a draw() loop and then add set the background to blue with the background()
        block.
      CSD U3 Simple Drawing - Personal Animation_instruction: DO This
      CSD U3 Sprites intro sprites_instruction: Do This
      CSD U3 Sprites intro sprites_2018_instruction: Do This
      CSD U3 Variable Arithmetic pt2_instruction: |-
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variable Arithmetic_instruction: |-
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variable Incrementation pt2_instruction: |-
        Predict: What two numbers
        will be displayed in the console?
      CSD U3 Variable Incrementation_instruction: |-
        Predict: What two numbers will
        be displayed in the console?
      CSD U3 Variables CHALLENGE gamelab gary_instruction: |-
        Use variables to animate
        Game Lab Gary
      CSD U3 Variables Initialize_instruction: |-
        Predict: What will get displayed
        in the console?
      CSD U3 Variables Intro_instruction: |
        Create your own variable, give it a value,
        and display that value in the console.
      CSD U3 Variables Random_instruction: |-
        Predict: What will get displayed in the
        console?
      CSD U3 Variables Reassign pt2_instruction: |-
        Create and assign a new variable
        in a single line.
      CSD U3 Variables Reassign_instruction: |-
        Predict: What will get displayed in
        the console?
      CSD U3 Variables Square Random Loop_instruction: |-
        Test your predictions from
        the last level.
      CSD U3 Variables Square Random_instruction: |-
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables Square_instruction: |-
        Change the value "size" initialized
        to make a larger square.
      CSD U3 Variables TEMPLATE square_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables change circle size_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables change circle size_2018_instruction: |-
        Change the value of
        petalSize multiple times. How does it change your drawing?
      CSD U3 Variables create and assign_instruction: |-
        Create and assign size in
        a single line of code.
      CSD U3 Variables draw loop newVars_instruction: |-
        Extend this project to create
        your own random art visualization with variables.
      CSD U3 Variables draw loop rgb_instruction: |-
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables draw loop xy_instruction: |-
        Assign the variables x1 and y1
        random values inside the draw loop and use them to control where the square
        is drawn.
      CSD U3 Variables eyeBrows_instruction: |-
        Predict what will happen when you move
        the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables make a big square_instruction: |-
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables make a square_instruction: |-
        Change the value of size multiple
        times. How does it change your drawing?
      CSD U3 Variables multiple assignments_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules v2-2018_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules v2_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules v2_2018_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables naming rules_instruction: |-
        Change the value of petalSize multiple
        times. How does it change your drawing?
      CSD U3 Variables random assignment_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random draw loop_instruction: |-
        Predict what will happen when
        you move the assignment of eyeSize inside the draw loop. Then try it out
      CSD U3 Variables random drawing exemplar_instruction: |-
        Check out this example
        randomized drawing.
      CSD U3 Variables random with assignment_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      CSD U3 Variables random with assignment_2018_instruction: |-
        Change the value
        of petalSize multiple times. How does it change your drawing?
      CSD U3 Variables use value rect_instruction: |-
        Predict: What will get displayed
        in the console?
      CSD U3 Variables write_instruction: |-
        Use the write block to display the value
        of size
      CSD U3 Variables2 expressions in commands_instruction: |-
        Use expressions inside
        a drawing command
      CSD U3 Variables2 expressions in variables_instruction: |-
        Assign the value of
        each expression to a variable and console.log that variable.
      CSD U3 Variables2 expressions_instruction: |-
        Use console.log to display the
        results of each expression. Then create your own.
      CSD U4 - Events Template_instruction: |-
        Add a large red button to your screen
        using Design Mode. (Click for full instructions.)
      CSD U5 black white images pixelation 2_instruction: Gumuhit ng isang smiley
        na mukha (mag-click dito para makita ang larawan)
      CSD U5 black white images pixelation 3_instruction: Palitan ang lapad at taas
        ng mga slider para mahanap ang larawan (mag-click dito para makakita ng higit
        pa)
      CSD U5 black white images pixelation 4_instruction: Magdagdag ng mga kilay sa
        smiley na mukha (mag-click dito para makita ang larawan)
      CSD U5 black white images pixelation 5_instruction: Gumuhit ng kahit anong gusto
        mo
      CSD U5 black white images pixelation_instruction: Kumpletohin ang X na hugis
        sa pamamagitan ng pag-type ng mga 0 at mga 1
      CSD U6 params modify clouds_instruction: |-
        # Mga Ulap\r
        \r
        Ang programang ito ay nagpapagalaw sa mga ulap kapag nag-ihip ka nang tunog sa sensor, ngunit hindi pa ito tapos.\r
        \r
        #Gawin Ito\r
        * Maglikha ng bagong function na `moveCloud(name)` na magpapagalaw sa kahit anong ulap.\r
         *
        (Hint: ikaw ay gagamit na halos kaparehong code nang `moveCloud()` na function\r
        *
        Tawagin ang iyong bagong `moveCloud(name)` na function sa loob ng pangyayari na bloke, isang beses sa bawat pangalan ng ulap.\\r
        * (Hint: ito ay kapareho kung paano ang `loopCloud(name)` na function ay tinawag nang napakaraming beses.
      CSD U6 params modify clouds_2018_instruction: |-
        # Clouds\r
        \r
        This program
        makes the clouds move when you blow on the sound sensor, but it's not finished.\r
        \r
        #
        Do This\r
        * Create a new function `moveCloud(name)` that will move any cloud.\r
          *
        (Hint: you will use almost all the same code as the `moveCloud0` function)\r
        *
        Call your new `moveCloud(name)` function inside the event block, once for
        each cloud name.\r
         * (Hint: this is similar to how the `loopCloud(name)`
        function is called many times.
      CSD U6 params modify planes_instruction: |-
        # Maraming Lapya na Controller\r
        \r
        Ang programang ito ay gumagalaw sa tatlong lapya gamit ang accelerometer at ang on-screen na mga checkbox. Sa ngayon, tanging ang pulang lapya lang ang gumagana.\r
        \r
        # Gawin Ito\r
        * Maglikha ng bagong `movePlane(name)` na function na maaaring maggalaw sa kahit anong lapya.\r
        * Tawagin ang `movePlane(name)` na function sa loob ng bloke ng pangyayari, para gagalaw lang ito kapag ang checkbox nito ay may tsek.\r
        \r
        _Hamon: Sa ngayon ang lapya ay gumagalaw nang masyadong mabilis. Maaari mo bang matukoy kung paano baguhin ang code para mapabagal ang kanilang pagkilos?_
      CSD U6 params modify planes_2018_instruction: |-
        # Maraming Lapya na Controller\r
        \r
        Ang programang ito ay gumagalaw sa tatlong lapya gamit ang accelerometer at ang on-screen na mga checkbox. Sa ngayon, tanging ang pulang lapya lang ang gumagana.\r
        \r
        # Gawin Ito\r
        * Maglikha ng bagong `movePlane(name)` na function na maaaring maggalaw sa kahit anong lapya.\r
        * Tawagin ang `movePlane(name)` na function sa loob ng bloke ng pangyayari, para gagalaw lang ito kapag ang checkbox nito ay may tsek.\r
        \r
        _Hamon: Sa ngayon ang lapya ay gumagalaw nang masyadong mabilis. Maaari mo bang matukoy kung paano baguhin ang code para mapabagal ang kanilang pagkilos?_
      CSDU4 - AppLab - 1_instruction: |-
        Read the documentation for penColor() and
        penWidth() before using them to draw the blue square.
      CSDU4 - AppLab - 2_instruction: |-
        Write a program that acts as a simple calculator.
        (click to see full instructions)
      CSDU4 - AppLab - 3_instruction: |-
        Use console to check the ending value of num.
        (Click to see full instructions)
      CSDU4 - AppLab - 4_instruction: |2-
         Use the Debug Commands to make a list of
        all the values rolled before a 6. (Click to see full instructions)
      CSDU4 - Design Mode - 1_instruction: |-
        Add a button that moves the turtle when
        clicked.  (Click to see full instructions)
      CSDU4 - Design Mode - 10_instruction: |-
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      CSDU4 - Design Mode - 11_instruction: |-
        Experiment with different event types
        and select the one that you think is best. (Click to see full instructions)
      CSDU4 - Design Mode - 12_instruction: |-
        Use the textLabel command to replace
        the button in your program with a text label. (Click to see full instructions)
      CSDU4 - Design Mode - 16_instruction: |-
        Add an event handler for the button
        using the "Insert and show" link in the Design Mode Events tab. (Click to
        see full instructions).
      CSDU4 - Design Mode - 17_instruction: |-
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      CSDU4 - Design Mode - 18_instruction: |-
        Fix the layout of the bullseye game.
        (Click to see full instructions)
      CSDU4 - Design Mode - 2_instruction: |-
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      CSDU4 - Design Mode - 24_instruction: |-
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      CSDU4 - Design Mode - 25_instruction: |-
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      CSDU4 - Design Mode - 26_instruction: |-
        Save the age and name of the user in
        variables (Click to see full instructions)
      CSDU4 - Design Mode - 27_instruction: |-
        Output a message to the 'textArea'
        (Click to see full instructions)
      CSDU4 - Design Mode - 28_instruction: |-
        Write a greeting to the user when they
        hit 'enter' in the text input, using the 'change' event. (Click to see
        full instructions)
      CSDU4 - Design Mode - 29_instruction: |-
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      CSDU4 - Design Mode - 30_instruction: |-
        Show different die images for the random
        number generated. (Click to see full instructions)
      CSDU4 - Design Mode - 31_instruction: |-
        Set up an event handler to respond to
        keypress events, and display event.key in the console. Hit keys on the keyboard
        to see what happens. (Click to see full instructions)
      CSDU4 - Design Mode - 32_instruction: |-
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      CSDU4 - Design Mode - 33_instruction: |-
        Change the code so the sound will only
        play when the up arrow is pressed. (Click to see full instructions)
      CSDU4 - Design Mode - 4_instruction: |-
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      CSDU4 - Design Mode - 5_instruction: |-
        Debug the program by verifying your IDs
        are being referenced properly. (Click to see full instructions)
      CSDU4 - Design Mode - 6_instruction: |-
        Debug the program by properly ordering
        your button commands and event handlers. (Click to see full instructions)
      CSDU4 - Design Mode - 7_instruction: |-
        Debug the program by fixing the logical
        error within the program. (Click to see full instructions)
      CSDU4 - Design Mode - 8_instruction: |-
        Move the button to the middle of the
        screen. (Click to see full instructions)
      CSDU4 nameAgeTemplate_instruction: |-
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      CSDU6 - Arrays - expressionsAsIndexes_instruction: |-
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 - Arrays - indexPractice_instruction: |-
        Write the contents of the array
        to the screen in numerical order. (Click to see full instructions)
      CSDU6 - Arrays - length_instruction: |-
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      CSDU6 - Arrays - lengthMinus1_instruction: |-
        Use list.length - 1 to log the
        last item in the array to the console. (Click to see full instructions)
      CSDU6 - for loop - color buttons with for_instruction: Isulat ang mga nilalaman
        ng array sa screen ayon sa pagkasunod-sunod ng numero. (I-click para makita
        ang buong mga instrusyon)
      CSDU6 - for loop - color buttons_instruction: |-
        Write the contents of the array
        to the screen in numerical order. (Click to see full instructions)
      CSDU6 - for loop - why for_instruction: |-
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      CSDU6 arrays rainbow_instruction: Isulat ang mga nilalaman ng array sa screen
        ayon sa pagkasunod-sunod ng numero. (I-click para makita ang buong mga instrusyon)
      CSDU6 arrays random_instruction: Magsulat ng programa na nagpapakita ng isang
        random na napiling kulay mula sa array. (I-click para makita ang buong mga
        instruksyon)
      CSDU6 arrays select icons_instruction: Magsulat ng programa na nagpapakita ng
        isang random na napiling kulay mula sa array. (I-click para makita ang buong
        mga instruksyon)
      CSDU6 arrays select rainbow_instruction: |-
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      CSDU6 arrays select rainbow_2018_instruction: |-
        Write the contents of the array
        to the screen in numerical order. (Click to see full instructions)
      CSDU6 arrays select random_instruction: Magsulat ng programa na nagpapakita
        ng isang random na napiling kulay mula sa array. (I-click para makita ang
        buong mga instruksyon)
      CSDU6 arrays select random_2018_instruction: |-
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays select variable_instruction: Magsulat ng programa na nagpapakita
        ng isang random na napiling kulay mula sa array. (I-click para makita ang
        buong mga instruksyon)
      CSDU6 arrays select variable_2018_instruction: |-
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      CSDU6 arrays variable_instruction: Magsulat ng programa na nagpapakita ng isang
        random na napiling kulay mula sa array. (I-click para makita ang buong mga
        instruksyon)
      CSP Data Unit - Counting Multiple Things_instruction: |-
        If you can count one
        thing you can count multiple things\r
        \r
        Find out how many people like something
        other than dogs and cats\r
        \r
        Count dogs\r
        Count cats\r
        Count total\r
        Do
        the math\r
        \r
        blank/ blank toal\r
        \r
        Can also use this to find percents
        from this\r
        \r
        x% are dog lovers
      CSP Data Unit -Counting Records - Easy Way_instruction: |
        ReadRecords with specific
        criteria \r
        find the length of an array\r
      CSP Data Unit -Counting Records - Hard Way_instruction: |
        \r
        1. ReadRecords
        for all records\r
        2. Way to loop through and count\r
      CSP U4 - JSON Object Intro - Bad Way_instruction: |-
        Trigger both the keyboard
        and mouse event and examine the event objects displayed in the console. Why
        might an object be the best way to store this information? (Click to see full
        instructions)
      CSP U4 - JSON Object Intro - Good Way_instruction: "Create an object with at\nleast
        5 values including at least one string and one number. (Click to see\nfull
        instructions) "
      CSP U4 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions) "
      CSP student contact info_instruction: Pakilagay ang iyong email address.
      CSPU5 Add Screens to Chaser Game_instruction: |-
        Recreate the game from the "Chaser
        Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add a 2nd Screen_instruction: |-
        Make a 2 screen app with a black screen
        and a white screen. (Click to see detailed instructions)
      CSPU5 Add full screen image to bg of chaser game_instruction: |-
        Recreate the
        game from the "Chaser Game" with a Welcome Screen and Game Over Screen.
        (Click to see full instructions.)
      CSPU5 Add game over screen_instruction: |-
        Recreate the game from the "Chaser
        Game" with a Welcome Screen and Game Over Screen. (Click to see full instructions.)
      CSPU5 Add onEvent from Design Mode_instruction: |-
        Add an event handler for the
        button using the "Insert and show" link in the Design Mode Events tab. (Click
        to see full instructions).
      CSPU5 Add welcome screen to chaser game_instruction: |-
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      CSPU5 Adding Screens Template_instruction: |-
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      CSPU5 Debugging Overlapping Objects and Screen Events_instruction: |-
        Recreate
        the "Chaser Game" from the last lesson using Design Mode. (Click to see
        full instructions.)
      CSPU5 First Time Console.log_instruction: |-
        Add a 3 console.log messages and
        test them out. (Click to see full instructions.)
      CSPU5 Layering and Deleting in Design Mode_instruction: |-
        Fix the layout of
        the bullseye game. (Click to see full instructions)
      CSPU5 Project - Multi Screen App_instruction: |-
        Create your multi-screen app.
        (Click to see full instructions.)
      CSPU5 Use Console.log to update IDs_instruction: |-
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      CSPU5 Use setScreen for first time_instruction: |-
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      CSPU5_AddImageToChaserGame_instruction: |-
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      CSPU5_AddImage_andMakeChaserGame_instruction: |-
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      CSPU5_AddLabelToChaserGame_instruction: |-
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      CSPU5_Debugging predict unexpected behavior - two onEvents to one ID_instruction: |-
        Predict
        what will happen. Once you've made a prediction, run the code to see what
        happens. (Click to see full instructions)
      CSPU5_FinalizeChaserGame_instruction: |-
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      CSPU5_Project - Multi Screen App_instruction: |-
        Create your multi-screen app.
        (Click to see full instructions.)
      CSPU5_U3 - Arrays - Demo App_instruction: |-
        Use the "My Favorite Things" app.
        How might this app be making use of an array? (Click to see full instructions)
      CSPU5_U3 - Arrays - appendItem_instruction: |-
        Create an array of odd numbers
        1-11 by using appendItem. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment_instruction: |-
        Use indexes to change the values
        in this array from 1 to 0. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment2_instruction: |-
        Calculate the sum of three values
        stored in an array. (Click to see full instructions)
      CSPU5_U3 - Arrays - assignment3_instruction: |-
        Increase the value of each value
        in the randomly generated array by 1. (Click to see full instructions)
      CSPU5_U3 - Arrays - createFirstArray_instruction: |-
        Create an array of the even
        numbers from 0 to 10 and display its contents with console.log. (Click to
        see full instructions)
      CSPU5_U3 - Arrays - expressionsAsIndexes_instruction: |-
        Write a program that
        displays a randomly chosen color from the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Counting Variable_instruction: |-
        Create a global
        variable for the current index and use it to display the first item in the
        array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings Next_instruction: |-
        Write code that allows the
        user to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      CSPU5_U3 - Arrays - favThings Prev_instruction: |-
        Write code that allows the
        user to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      CSPU5_U3 - Arrays - favThings addItem_instruction: |-
        Write code that allows
        a user to add their own favorite things to the list. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings bounds_instruction: |-
        Add if statements to your
        event handlers that prevent the global index from going out of bounds. (Click
        to see full instructions)
      CSPU5_U3 - Arrays - favThings createArray_instruction: |-
        Create an array of
        words describing your favorite things. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings firstOutput_instruction: |-
        Use setText to display
        the first item in the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings giveIDs_instruction: |-
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      CSPU5_U3 - Arrays - favThings keepPlaying_instruction: |-
        Make any other improvements
        you want! (Click to see full instructions)
      CSPU5_U3 - Arrays - indexPractice_instruction: |-
        Write the contents of the array
        to the screen in numerical order. (Click to see full instructions)
      CSPU5_U3 - Arrays - insertingItems_instruction: |-
        Insert items into an array
        to form a complete sentence. (Click to see full instructions)
      CSPU5_U3 - Arrays - insertionErrors_instruction: |-
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      CSPU5_U3 - Arrays - introIndex_instruction: |-
        Display the first and last element
        in the array. Display the number 5 from the array. (Click to see full instructions)
      CSPU5_U3 - Arrays - length_instruction: |-
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      CSPU5_U3 - Arrays - lengthMinus1_instruction: |-
        Use list.length - 1 to log the
        last item in the array to the console. (Click to see full instructions)
      CSPU5_U3 - Arrays - remove_instruction: |-
        Remove items from an array to form
        a complete sentence. (Click to see full instructions)
      CSPU5_U3 - Arrays - stringsInArrays_instruction: |-
        Write a sentence word by
        word by adding strings to an array. (Click to see full instructions)
      CSPU5_U3 - Canvas - 200dots_instruction: |-
        Add a loop to your program that draws
        200 dots on your canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - One Dot sprayPaint_instruction: |-
        Write code that redraws
        your image using a dot whose x and y locations use offsetX and offsetY with
        a small random value added. (Click to see full instructions)
      CSPU5_U3 - Canvas - appendToArray_instruction: |-
        Create an array to store each
        event parameter. Append each event parameter to this array within your event
        handler. (Click to see full instructions)
      CSPU5_U3 - Canvas - changeToMouseMove_instruction: |-
        Change your program so
        that dots are drawn at the location of the mouse as the user moves the mouse
        on the canvas. (Click to see full instructions)
      CSPU5_U3 - Canvas - clickToAdd_instruction: |-
        Change your program so that dots
        are added to the canvas when the user clicks on it. (Click to see full instructions)
      CSPU5_U3 - Canvas - delete_instruction: |-
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      CSPU5_U3 - Canvas - draw at click point_instruction: |-
        Change your program so
        that dots are drawn at the location of the mouse click. (Click to see full
        instructions)
      CSPU5_U3 - Canvas - freePlay_instruction: |-
        Extend the functionality of one
        of the effects, or create an entirely new one of your own. (Click to see full
        instructions)
      CSPU5_U3 - Canvas - introCanvas_instruction: |-
        Add a canvas to your app and
        set it to be the active canvas. Then add a large dot to your canvas. (Click
        to see full instructions)
      CSPU5_U3 - Canvas - movementFunction fix Orig_instruction: |-
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      CSPU5_U3 - Canvas - movementFunction_instruction: |-
        Write a function that takes
        the movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      CSPU5_U3 - Canvas - redrawOriginal_instruction: |-
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      CSPU5_U3 - Canvas - redrawRandom_instruction: |-
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      CSPU5_U3 - Canvas - redrawRandom2_instruction: |-
        Write a function that processes
        your array, redrawing every dot with a random size. (Click to see full instructions)
      CSPU5_U3 - Canvas - shiftKey_instruction: |-
        Add an if statement to your event
        handler so dots are only drawn when the shift key is pressed. (Click to see
        full instructions)
      CSPU5_U3 - Canvas - sketch_instruction: |-
        Write code that redraws your image
        using a sketch effect. (Click to see full instructions)
      CSPU5_U3 - Canvas - sprayPaint_instruction: |-
        Update the spray paint code so
        that it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      CSPU5_U3 - Canvas - transparentDots_instruction: |-
        Change the colors of your
        dots so they have a fully transparent stroke and partially transparent fill.
        (Click to see full instructions)
      CSPU5_U3 - Canvas - usingOffsetXY_instruction: |-
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      CSPU5_U3 - Conditional Basics - 6_instruction: |-
        Add a setText after the if
        statement to "Nope. Guess again." (Click to see full instructions)
      CSPU5_U3 - Conditionals - Combine AND OR Simple_instruction: |-
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      CSPU5_U3 - Conditionals - Combine AND OR and NOT_instruction: |-
        Write an if
        statement that uses AND and OR to display "Time to go to school!" if it's
        not the weekend and the user is under 18. (Click to see full instructions.)
      CSPU5_U3 - Conditionals - Simple AND_instruction: |-
        Write an if statement that
        uses AND to display "You are a teenager." if the user enters an age between
        13 and 19. (Click to see full instructions)
      CSPU5_U3 - Conditionals - Simple OR_instruction: |-
        Write an if statement that
        uses OR to display "It's the weekend!" if the user enters a weekend day
        at the prompt. (Click to see full instructions)
      CSPU5_U3 - Design Mode - Console Log_instruction: |-
        Update the ID names and
        `console.log` messages to match the correct button. (Click to see full instructions.)
      CSPU5_U3 - Design Mode - Layers and Delete_instruction: |-
        Fix the layout of
        the bullseye game. (Click to see full instructions)
      CSPU5_U3 - Design Mode - Multi Screens 2_instruction: |-
        Make a 2 screen app
        which can switch back and forth between a black screen and a white screen
        using buttons. (Click to see detailed instructions.)
      CSPU5_U3 - Design Mode - Multi Screens_instruction: |-
        Make a 2 screen app with
        a black screen and a white screen. (Click to see detailed instructions)
      CSPU5_U3 - Design Mode - WTF Console Log_instruction: |-
        Add a 3 console.log
        messages and test them out. (Click to see full instructions.)
      CSPU5_U3 - Design Mode -Recreate Beyond Buttons_instruction: |-
        Recreate the
        game from the "Chaser Game" with a Welcome Screen and Game Over Screen.
        (Click to see full instructions.)
      CSPU5_U3 - Design Mode 1_instruction: |-
        Add a large red button to your screen
        using Design Mode. (Click for full instructions.)
      CSPU5_U3 - Dice - Dropdown and Score_instruction: |-
        Add guess and score to the
        Dice Game (Click to see full instructions)
      CSPU5_U3 - Dice - Dropdown with Strings_instruction: |-
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      CSPU5_U3 - Dice - If_instruction: |-
        Show different die images for the random
        number generated. (Click to see full instructions)
      CSPU5_U3 - Dice - Nested_instruction: |-
        Use nested if statements to make the
        scoring different for the different game levels. (Click to see full instructions)
      CSPU5_U3 - High Low - Debug_instruction: |-
        Debug the order of the conditionals
        so that it will actually tell the user when their guess is close. (Click to
        see full instructions)
      CSPU5_U3 - High Low - Dropdown_instruction: |-
        Add a dropdown for their guess
        instead of promptNum (Click to see full instructions)
      CSPU5_U3 - High Low - Else if_instruction: |-
        Add an else-if statement in order
        to tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      CSPU5_U3 - High Low - Else_instruction: |
        Add an else statement so that the
        program will tell the user when they are right and when they are wrong. (Click
        to see full instructions)\r
      CSPU5_U3 - High Low - If_instruction: |-
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      CSPU5_U3 - Keys - Add Image URLs_instruction: |-
        Add image URLs to your array.
        Replace the text area with an image and setText with setImageURL. Then test
        your app! (Click to see full instructions)
      CSPU5_U3 - Keys - Buttons and Keys_instruction: |-
        Have the program respond the
        same way for both clicking images on the screen and hitting the up and down
        keys on the keyboard. (Click to see full instructions)
      CSPU5_U3 - Keys - Demo App_instruction: |-
        Play with the image scroller. Press
        the left and right arrows to progress through the images.
      CSPU5_U3 - Keys - Final Image Scroller_instruction: |-
        Update the image scroller
        to respond to buttons and key presses. (Click to see full instructions)
      CSPU5_U3 - Keys - Functions_instruction: |-
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      CSPU5_U3 - Keys - Key Up and Down_instruction: |-
        Try out the keyup and keydown
        events to see how they are different from keypress. (Click to see full instructions)
      CSPU5_U3 - Keys - Multiple Keys_instruction: |-
        Play a different sound when the
        down arrow is pressed. (Click to see full instructions)
      CSPU5_U3 - Loops -  Complex Condition_instruction: |-
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      CSPU5_U3 - Loops - 1_instruction: |-
        Change the condition for the while loop
        to check if the variable num is less than 90. (Click to see full instructions)
      CSPU5_U3 - Loops - 10_instruction: |-
        Write a program that simulates the rolling
        of two dice. Roll the dice repeatedly until the sum of the dice is either
        7 or 11.
      CSPU5_U3 - Loops - 11_instruction: |-
        Fix the condition so that it keeps rolling
        the die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      CSPU5_U3 - Loops - 12_instruction: |-
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      CSPU5_U3 - Loops - 14_instruction: |-
        Change the loop condition to prevent the
        infinite loop and stop counting once the count is past 30. (Click to see full
        instructions)
      CSPU5_U3 - Loops - 15_instruction: |-
        Count the number of times the sum of the
        dice is 12. (Click to see full instructions)
      CSPU5_U3 - Loops - 2_instruction: |-
        Try creating an infinite loop using !=,
        > and <. (Click to see full instructions)
      CSPU5_U3 - Loops - 3_instruction: |-
        Change the if statement to a while loop
        so the program will run until it rolls a 6. (Click to see full instructions)
      CSPU5_U3 - Loops - 4_instruction: Gamitin ang Debug Commands para makagawa ng
        listahan ng lahat ng mga halaga na nakuha bago ang 6. (I-click para makita
        ang buong mga instruksyon)
      CSPU5_U3 - Loops - 5_instruction: |-
        Add code inside the while loop which will
        update the variable num so that the condition will eventually become false.
        (Click to see full instructions)
      CSPU5_U3 - Loops - 6_instruction: |-
        Fix the problem so the loop will run at
        least once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      CSPU5_U3 - Loops - 7_instruction: |-
        Without adding any lines of code, reorder
        the code so that it prints all the values of num. (Click to see full instructions)
      CSPU5_U3 - Loops - 8_instruction: |-
        Debug which number is not getting printed
        and add a write statement to display that value. (Click to see full instructions)
      CSPU5_U3 - Loops - 9_instruction: |2-
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      CSPU5_U3 - Loops - Minus Minus_instruction: |-
        Change the code to count down
        from 10 to 1. (Click to see full instructions)
      CSPU5_U3 - Loops - Plus Plus_instruction: |-
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      CSPU5_U3 - Loops - Typing in Console_instruction: |-
        Use console to check the
        ending value of num. (Click to see full instructions)
      CSPU5_U3 - Loops - minus = operator_instruction: |-
        Update the code to use the
        -= operator to count from 30 down to 0 by 3's. (Click to see full instructions)
      CSPU5_U3 - Loops - plus and minus = operator_instruction: |-
        Update the code
        to use the += operator. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Add 5_instruction: |-
        Add 5 to all the values in
        an array (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Counting Times_instruction: |-
        Count the number
        of times 5 appears in an array. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Divid by 2_instruction: |-
        Divide every value in
        the array by 2. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Find Min_instruction: |-
        Complete the findMinVal
        function to find and display the smallest value in an array  (Click to see
        full instructions)
      CSPU5_U3 - Loops And Arrays - General Search Param_instruction: |-
        Add a second
        parameter to the search function for the value to search for.  (Click to see
        full instructions)
      CSPU5_U3 - Loops And Arrays - Intro For Loop_instruction: |-
        Add a for loop with
        a console.log inside and test out the 3 pieces of the for loop. (Click to
        see full instructions)
      CSPU5_U3 - Loops And Arrays - Linear Search_instruction: |-
        Visit every element
        in the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Loop Array If_instruction: |-
        Use an if statement
        to only display the values in the array that are greater than 5. (Click to
        see full instructions)
      CSPU5_U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |-
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Make it a Function_instruction: |-
        Move the code
        that searches the list for a 5 into a function called "search". (Click to
        see full instructions)
      CSPU5_U3 - Loops And Arrays - Print Array_instruction: |-
        Use a for loop to print
        out all the values in an array. (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Printing Single True_instruction: |-
        Process the
        array and display a single "true" if the array contains a 5 or a single
        "false" if it does not.  (Click to see full instructions)
      CSPU5_U3 - Loops And Arrays - Search with Boolean Var_instruction: |-
        Make a
        boolean variable to use as a flag to keep track of whether there is a 5 in
        the array. (Click to see full instructions)
      CSPU5_U3 - Movie Bot - Multiple If Sequences_instruction: |-
        Add another set
        of if, else if, and else statements inside the question if statement to check
        for keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      CSPU5_U3 - Movie Bot - Nested Motivation_instruction: |-
        Add a separate set of
        if statements to check for a "?" in the input. (Click to see full instructions)
      CSPU5_U3 - Movie Bot - When Multiple If Statements_instruction: |-
        Add an if
        and else-if statement that checks for please and thank you. (Click to see
        full instructions)
      CSPU5_U3 - Movie Bot - toLowerCase_instruction: |-
        Use the toLowerCase command
        to change all user input into lowercase letters after they enter it. (Click
        to see full instructions)
      CSPU5_U3 - Practice Create Performance Task_instruction: |-
        Design and implement
        your practice Create Performance Task. (Click to see full instructions)
      CSPU5_U3 - Return Values - constrainTurtle_instruction: |-
        Use constrain in this
        simple app to keep the turtle from driving off the screen.  (Click to see
        full instructions)
      CSPU5_U3 - Return Values - debuggingConstrain_instruction: |-
        Correct the error
        in constrain so that it returns the appropriate value.  (Click to see full
        instructions)
      CSPU5_U3 - Return Values - debuggingMaxVal_instruction: |-
        Correct the error
        in maxVal so that it correctly reports the maximum value.  (Click to see full
        instructions)
      CSPU5_U3 - Return Values - useMinVal_instruction: |-
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      CSPU5_U3 - Return Values - wrapTurtle_instruction: |-
        Write wrap in this simple
        app to let the turtle "wrap" to the other side of the screen when it goes
        off.  (Click to see full instructions)
      CSPU5_U3 - Return Values - writeMaxVal_instruction: |-
        Write the function maxVal
        and then use it within the console.log statement to calculate the maximum
        of two values.  (Click to see full instructions)
      CSPU5_U3 - Simulation - 1_instruction: |-
        Use a while loop to "flip a coin 10
        times" and write the values to the screen. (Click to see full instructions)
      CSPU5_U3 - Simulation - 2.1_instruction: |-
        Change your looping condition so
        the simulation runs until there are 5 heads flipped. (Click to see full instructions)
      CSPU5_U3 - Simulation - 2.5_instruction: |-
        Run your simulation to get the full
        10,000 heads! How long did it take? (Click to see full instructions)
      CSPU5_U3 - Simulation - 2_instruction: |-
        Keep track of how many heads (1's)
        your program generates and print the results to the screen. (Click to see
        full instructions)
      CSPU5_U3 - Simulation - 3_instruction: |
        Add functionality that counts how many
        heads in a row are flipped. (Click to see full instructions)\r
      CSPU5_U3 - Simulation - 4_instruction: |-
        Update your while loop's condition
        so the the coin flips until there are three heads in a row. (Click to see
        full instructions)
      CSPU5_U3 - Simulation - 5_instruction: |-
        Change your while loop to run until
        you get a streak of 12 heads. How many flips did it take? (Click to see full
        instructions)
      CSPU5_U3 - Simulation - 6_instruction: |-
        Keep adding to your simulation. What
        do you want to explore next? (Click to see full instructions)
      CSPU5_U3 - User Input - Save getText To Variable_instruction: |-
        Save the age
        and name of the user in variables (Click to see full instructions)
      CSPU5_U3 - Variables - Set to Expression with Other Variables_instruction: |-
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      CSPU5_U3 - Variables - Set to Expression_instruction: |-
        Test out the new expressions.
        (Click to see full instructions)
      CSPU5_U3 Digital Assistant Design_instruction: |-
        Pick a topic for your Digital
        Assistant and create the basic layout with a text input and text area. (Click
        to show full instructions)
      CSPU5_U3 Digital Assistant Set Text_instruction: |-
        Have your digital assistant
        repeat back what the user types and include a canned response. (Click to see
        full instructions)
      CSPU5_U3 Digital Assistant Target_instruction: |-
        Try out a demo of the Digital
        Assistant!
      CSPU5_U3 full clicker demo_instruction: Clicker game - Try it out!
      CSPU5_U3- Variables - Create And Assign_instruction: |-
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      CSPU5_U3- Variables - Text Mode_instruction: |-
        1. Switch to text mode and type
        instructions; 2. drag blocks out into text mode; 3. experiment with code completion
      CSPU5_U3-Design Mode-ID and Event Handler_instruction: |-
        Add an event handler
        for the button using the "Insert and show" link in the Design Mode Events
        tab. (Click to see full instructions).
      CSPU5_U3-Design Mode-Image_instruction: |-
        Recreate the "Chaser Game" from
        the last lesson using Design Mode. (Click to see full instructions.)
      CSPU5_U313 Two Buttons with Ids_instruction: |-
        Predict what will happen. Once
        you've made a prediction, run the code to see what happens. (Click to see
        full instructions)
      CSPU5_U313 drag Two Buttons_instruction: |-
        Run a program with two buttons that
        have the same id to see the warning message in the console. Change the ids
        to make the program run without getting a warning message.
      CSPU5_U3L13 - Debug Id Problem_instruction: |-
        Improve the button by choosing
        a descriptive and meaningful ID. (Click to see full instructions)
      CSPU5_U3L13 - Debugging 1_instruction: |-
        Debug the program by verifying your
        IDs are being referenced properly. (Click to see full instructions)
      CSPU5_U3L13 - Debugging 2_instruction: |-
        Debug the program by properly ordering
        your button commands and event handlers. (Click to see full instructions)
      CSPU5_U3L13 - Debugging 3_instruction: |-
        Debug the program by fixing the logical
        error within the program. (Click to see full instructions)
      CSPU5_U3L13 - Debugging IDs case sensitive_instruction: |-
        Debug the program
        by verifying your IDs are being referenced properly. (Click to see full instructions)
      CSPU5_U3L13 - Project_instruction: |-
        Create your multi-screen app. (Click to
        see full instructions.)
      CSPU5_U3L13 - Turtle Driver Project_instruction: |-
        Create a "turtle driver"
        that includes buttons to move the turtle forward and turn it left and right.
        (Click to see full instructions)
      CSPU5_U3L13 - Turtle move with button_instruction: |-
        Add a button that moves
        the turtle when clicked.  (Click to see full instructions)
      CSPU5_U3L13 eventsDetails_instruction: |-
        Add an event handler to the button
        to move the turtle forward. (Click to see full instructions)
      CSPU5_U3L14 - Assigning Random Value_instruction: |-
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      CSPU5_U3L14 - Mini Calculator embed_instruction: |-
        You will be prompted for
        two numbers, one right after the other.  See what happens.  Enter different
        numbers until you get the idea.
      CSPU5_U3L14 - User Input Division calculator_instruction: |-
        Write a program
        that acts as a simple calculator. (click to see full instructions)
      CSPU5_U3L14 - Variable ReAssignment pt2_instruction: |-
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      CSPU5_U3L14 - concatenate simple_instruction: |-
        Modify the write statement on
        line 3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      CSPU5_U3L14 - moving memory challenge1_instruction: |-
        Using only the variables
        provided, assignment (=) and arithmetic (+ - * /) re-assign the values to
        make the console.log statement display the correct value(s).  (Click to see
        full instructions)
      CSPU5_U3L14 - moving memory challenge2_instruction: |-
        Using only the variables
        provided, assignment (=) and arithmetic (+ - * /) re-assign the values to
        make the console.log statement display the correct value(s).  (Click to see
        full instructions)
      CSPU5_U3L14 - moving memory challenge3_instruction: |-
        Using only the variables
        provided, assignment (=) and arithmetic (+ - * /) re-assign the values to
        make the console.log statement display the correct value(s).  (Click to see
        full instructions)
      CSPU5_U3L14 - moving memory challenge4_instruction: |-
        Using only the variables
        provided, assignment (=) and arithmetic (+ - * /) re-assign the values to
        make the console.log statement display the correct value(s).  (Click to see
        full instructions)
      CSPU5_U3L14 - moving memory challenge5_instruction: |-
        Using only the variables
        provided, assignment (=) and arithmetic (+ - * /) re-assign the values to
        make the console.log statement display the correct value(s).  (Click to see
        full instructions)
      CSPU5_U3L14 - moving memory challenge6_instruction: |-
        Using only the variables
        provided, assignment (=) and arithmetic (+ - * /) re-assign the values to
        make the console.log statement display the correct value(s).  (Click to see
        full instructions)
      CSPU5_U3L15 - Add reset button to UpDown app_instruction: |-
        Add code so that
        clicking the start over button will reset the game and send you back to the
        main screen. (Click to see full instructions)
      CSPU5_U3L15 - DEMO up down count practice app_instruction: |-
        Try out the demo
        app (Click to see full instructions)
      CSPU5_U3L15 - Debug forget to update var on reset in UpDown app_instruction: |-
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      CSPU5_U3L15 - Debug if never triggers in UpDown app_instruction: |-
        Run the app
        and use the up and down arrows to try to hit the gameOverScreen. You can't!
        Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Debugging Simple If-statements =v==_instruction: |-
        Run the app,
        and click the up button. Then restart and run it again, and click the down
        button. Find and fix the issue in the code. (Click to see full instructions)
      CSPU5_U3L15 - Simple If-statements in UpDown App_instruction: |-
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      CSPU5_U3L15 - add code to make count down work_instruction: |-
        Write code to
        make the down arrow work as expected. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug forget to set text_instruction: |-
        Find the bug
        in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug logic error wrong update_instruction: |-
        Find
        the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - count upDown bug var not created globally_instruction: |-
        Find
        the bug in the program and fix it. (Click to see full instructions)
      CSPU5_U3L15 - global var example count up_instruction: |-
        Look at the code for
        this app and see how the code works to update the count variable when the
        up arrow is clicked. (Click to see full instructions).
      CSPU5_U3L15 - mini clicker update score_instruction: |-
        Add code to update the
        score when the apple is clicked. (Click to see full instructions)
      CSPU5_U3L15 - practice with setText_instruction: |-
        Use setText to complete the
        click event handler for the down arrow. (Click to see full instructions)
      CSPU5_U3L15 - variable scoping problem debugging_instruction: |-
        See if you can
        figure out why the code is no longer working. (Click to see full instructions)
      CSPU5_U3L15 click add lives_instruction: |-
        Add lives to the clicker game that
        decrement by 1 when the background image is clicked (Click to see full instructions)
      CSPU5_U3L15 full clicker app_instruction: |-
        Complete your clicker game! (Click
        to see full instructions)
      CSPU5_U3L16 - challenge say hi app_instruction: |-
        Write a greeting to the user
        when they hit 'enter' in the text input, using the 'change' event. (Click
        to see full instructions)
      CSPU5_U3L16 - chaserApp_instruction: |-
        Create your own "Chaser Game." (Click
        to see full instructions)
      CSPU5_U3L16 - chooseImages_instruction: |-
        Replace the image in your application
        with one of your own. (Click to see full instructions)
      CSPU5_U3L16 - doubleQuotes_instruction: |-
        Save a string inside a variable and
        log it to the console. (Click to see full instructions)
      CSPU5_U3L16 - intro getText_instruction: |-
        Add an event handler to the Submit
        button so that when the button is clicked it will display the name entered
        in the text box to the console.  Use getText to get the value out of the text
        box. (Click to see full instructions)
      CSPU5_U3L16 - introSetPosition_instruction: |-
        Move the buttons to the bottom
        of the screen. (Click to see full instructions)
      CSPU5_U3L16 - introStrings_instruction: |-
        Save a string inside a variable and
        log it to the console. (Click to see full instructions)
      CSPU5_U3L16 - newEventTypes_instruction: |-
        Experiment with different event types
        and select the one that you think is best. (Click to see full instructions)
      CSPU5_U3L16 - outputWithTextArea_instruction: |-
        Output a message to the 'textArea'
        (Click to see full instructions)
      CSPU5_U3L16 - setPosition to fixed location_instruction: |-
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      CSPU5_U3L16 - setPosition to move button_instruction: |-
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      CSPU5_U3L16 - singleSetPosition_instruction: |-
        Move the button to the middle
        of the screen. (Click to see full instructions)
      CSPU5_U3L16 - text labels_instruction: |-
        Use the textLabel command to replace
        the button in your program with a text label. (Click to see full instructions)
      CSPU5_U3L16 - textInput getText write_instruction: |-
        Add an Text Input box for
        the name and age. (Click to see full instructions)
      CSPU5_U3L16 - toUpper_instruction: |-
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      CSPU5_U3L16 - use images_instruction: |-
        Use the image command to replace the
        text label in your program with an image. (Click to see full instructions)
      CSPU5_U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text\nwhen
        the Play Again button is clicked (Click to see full instructions) "
      CSPU5_U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      CSPU5_U3L16 Mad Lib Student Setup_instruction: |-
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      CSPU5_U3L16 Mad Lib getText_instruction: "Before setting the text area with\nyour
        Mad Libs outline, get the user's text and incorporate their responses.\n(Click
        to see full instructions) "
      CSPU5_U3L16 Mad Lib setText_instruction: "When the Next button is clicked,\nset
        the text area to have the main outline of your How-to Mad Libs (without\nthe
        user's input). (Click to see full instructions) "
      CSPU5_U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase\nstring
        functions to the user's text. (Click to see full instructions) "
      CSPU5_U3L18 comparison operators_instruction: |-
        Use console.log to print out
        the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      CSPU5_U3L19 - fix the var name syntax error v2_instruction: |-
        Fix the error
        and get it to print the value of both variables (Click to see full instructions)
      CSPU5_U3L19 - test reassignment of two vars_instruction: |-
        Predict the value
        of a and b. Add console.log statements to find out the actual value of a and
        b. (Click for full instructions)
      CSPU5_U3L19 - three basic ops of variables_instruction: |-
        Add another variable
        called "lives" and set the value to 3. Print the value of the variable to
        the console. (Click to see full instructions)
      CSPU5_U3L19 - variable reassignment challenge pt2_instruction: |-
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      CSPU5_U3L19 - write var and string with same name v2_instruction: |-
        Fix the
        code so that the values of both variables print to the console. (Click to
        see full instructions)
      CSPU5_U3L23 Chatbot Conditionals 1_instruction: |-
        Add if, else if, and else
        statements to detect the movie genres Comedy, Romance, Action, and Horror.
        (Click to see full instructions)
      CSPU5_U3L24 Chatbot Basic Conditionals_instruction: |-
        Check out the project
        description for instructions. (Click to see full instructions.)
      CSPU5_U3L24 Nested Conditionals 1_instruction: |-
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      CSPU5_U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside
        the if statements to check for a ? in the input. "
      CSPU5_U3L24 introIncludes_instruction: |-
        Practice using the includes command.
        (Click to see full instructions)
      CSPU5_U3L25 - drag out key event_instruction: |-
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      CSPU5_U3L25 - play sound when up key_instruction: |-
        Change the code so the sound
        will only play when the up arrow is pressed. (Click to see full instructions)
      CSPU5_U3L26 AND operator_instruction: |-
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      CSPU5_U3L26 OR operator_instruction: |-
        Update the if statement to use an OR
        to check for a "?" as well as who, what, where, when, why, how in the user
        input. (Click to see full instructions)
      CSPU5_addDescriptiveIDsToTurtleDriver_instruction: |-
        Improve the button by choosing
        a descriptive and meaningful ID. (Click to see full instructions)
      CSPU5_basic if - DIY secret number_instruction: |-
        Use console.log to print out
        the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      CSPU5_basic if - check driving age_instruction: |-
        Use console.log to print out
        the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      CSPU5_basic if - voting examle_instruction: |-
        Use console.log to print out the
        different boolean expressions below to see what information they return. (Click
        to see full instructions)
      CSPU5_basic if-else - driving age_instruction: |-
        Use console.log to print out
        the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      CSPU5_clickerGame_v1_template_instruction: |-
        Create your own "Chaser App".
        (Click to see full instructions)
      CSPU5_moveTurtleOnButtonClick_instruction: |-
        Add an event handler to the button
        to move the turtle forward. (Click to see full instructions)
      CSPU5_playWithEventTypes_instruction: |-
        Debug the program by fixing the logical
        error within the program. (Click to see full instructions)
      CSPU5_setPosition to fixed location_instruction: |-
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      CSPU5_turtleDriver_add2ndButton_instruction: |-
        Debug the program by verifying
        your IDs are being referenced properly. (Click to see full instructions)
      Calc Circles of Eval .1_instruction: |-
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |-
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |-
        Here's a function for addition which
        takes two numbers and returns their sum. Use this Addition Block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |-
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |-
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |-
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |-
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |-
        Use a Multiplication Block to complete
        this code.
      Calc Circles of Eval 3_instruction: |-
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |-
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |-
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |-
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |-
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |-
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 9_instruction: |-
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |-
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |-
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |-
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |-
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |-
        We don't have to call our function f every
        time; create a function called times-ten that should take a parameter x and
        return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |-
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |-
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |-
        Let's use the Design Recipe to create a
        function called cube - this function should take in a Number and return that
        number to the power of 3. Make sure to write two example cases! When you're
        done, use your new function to calculate cube(7).
      Calc Design Recipe 2_instruction: |-
        Your school is holding a bake sale, and
        you need to track the cost of making each cookie, the money paid, and the
        total profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r
        \r
        Write
        the function cost, which takes in the number of cookies you intend to sell,
        and returns the cost of making those cookies.\r
        \r
        Test your function by
        calculating the cost of 42 cookies
      Calc Design Recipe 3_instruction: |-
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).\r
        \r
        Test your function
        by calculating the sales for 135 cookies
      Calc Design Recipe 4_instruction: |-
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.\r
        \r
        Test your function by calculating the total
        profit for 15 cookies.
      Calc Free Play_instruction: |-
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: |
        In the last puzzle you wrote a contract
        for the function "rocket-height" that states it has a range of Number, domain
        of Number, and should return the height of the rocket traveling at 15 m/s
        after a given number of seconds. Let's write an example case now for the
        height of the rocket at 3 seconds.\r
        \r
        \r
        \r
          \r
        \r
      Calc Rocket 1_instruction: |-
        In the last puzzle you wrote a contract for the
        function rocket-height that states it has a range of Number, domain of Number,
        and should return the height of the rocket traveling at 15 m/s after a given
        number of seconds. Let's write an example case now for the height of the
        rocket at 3 seconds.
      Calc Rocket 2_instruction: |-
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |-
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |-
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |-
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |-
        Here's a new variable called age-in-months. Use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |-
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |-
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |-
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |-
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Choose Your Own Adventure_instruction: Magagawa mo ang kahit anong gusto mo
        sa play lab! Narito ang isang halimbawa ng pumili ng sarili mong pakikipagsapalaran
        na kuwento sa play lab.
      Choose Your Own Adventure_2018_instruction: Magagawa mo ang kahit anong gusto
        mo sa play lab! Narito ang isang halimbawa ng pumili ng sarili mong pakikipagsapalaran
        na kuwento sa play lab.
      Code Studio Puzzle Challenge 1 - Artist_instruction: "Draw the line. It is\n200
        pixels long. "
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels
        long. "
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |-
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |-
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |-
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |-
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |-
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |-
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |-
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80,
        90, to 100 pixels long. "
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to
        140 pixels. "
      Code Studio Puzzle Challenge 2 - Artist_instruction: |-
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |-
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |-
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |-
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |-
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |-
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |-
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |-
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |-
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe
        line. Each segment is 100 pixels long. "
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode
        to draw the line. Each segment is 100 pixels long. "
      Code Studio Puzzle Challenge Artist Screencast_instruction: "Draw the line.\nEach
        segment is 100 pixels long. "
      Code Studio Puzzle Challenge Bee Screencast_instruction: |-
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |-
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |-
        Draw a line by using
        a variable "length" set to 180.
      Collector Demo_instruction: |-
        Look at all this loot! Help me get as many coins
        as I can so I can improve my farm. I can only use 9 blocks though!
      Course 2 Bee Loops 1_instruction: "Hi, I'm a bee. Can you help me collect\nthe
        nectar from these flowers? "
      Course 2 Bee Loops 13_instruction: |-
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |-
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |-
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |-
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |-
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: Madadala mo ba ako sa baboy gamit ang 5 bloke
        lang?
      Course 4 2_instruction: |-
        The bee only wants nectar right now. Remember, not
        all objects are flowers, so check to gather nectar only at flowers.
      Course 4 Artist 1_instruction: 'Tulungan mo akong makaguhit ng kahon. (Bawat
        linya ay 200 pixels ang haba) '
      Course 4 Artist 10_instruction: |-
        Mag-click ulit dito para makita ang buong instruksyon!\r
        \r
        Narito ang code para sa isang kawili-wiling hugis. Ano ang mangyayari kapag uulitin mo ito nang ilang beses, nag-iikot sa bawat iterasyon?  Bigyang pansin na ang pag-ikot sa hugis na ito ay nagdadagdag hanggang 420 degrees, ibig sabihin na kapag ang iyong artista ay tapos na sa pagguhit, ito ay nakaharap na sa ibang direksyon sa kung saan ka nagsimula. Ang bagong direksyon na iyan ay eksaktong 60 degrees sa kanan kung saan ka nagsimula.
      Course 4 Artist 11_instruction: Ngayon para sa isang hamon!  Huwag mag-atubiling
        gumamit ng trial and error. Ikaw ay hindi inaasahang makakuha sa perpektong
        larawan sa unang beses.  Gusto mong makakita nang mas marami pang mga hint?  Mag-click
        dito!
      Course 4 Artist 12_instruction: |-
        Gusto ng pangalawang pagtanaw sa mga inspirasyon na disenyo o sa mga hint?  Mag-click dito!\r
        \r
        Kung hindi, gawin ang disenyo na talagang iyong-iyo!
      Course 4 Artist 13_instruction: Naglalaro pa rin? Narito ang isang blangkong
        canvas kung saan maaari kang magdisenyo ng anumang bagay na gusto mo!
      Course 4 Artist 2_instruction: Maaari ka bang gumamit ng loop para iguhit ang
        naka-kulay abo na parisukat? (Bawat gilid ay 300px ang haba)
      Course 4 Artist 20_instruction: Naglalaro pa rin? Narito ang isang blangkong
        canvas kung saan maaari mong ilikha ang anumang gusto mo!
      Course 4 Artist 3_instruction: Subukang alamin kung ano ang mangyayari kapag
        ipatakbo mo ang code na ito (o pindutin ang "Run" para masubukan ito). Pagkatapos,
        ulitin ito nang ilang beses para makumpleto ang drowing.
      Course 4 Artist 4_instruction: Ilang degrees ba mayroon ang isang bilog? Punan
        ang repeat na bloke sa numerong ito para ilikha ang isang bilog ng mga kulay.
      Course 4 Artist 5_instruction: 'Iguhit ang pangalawang kalahati ng disenyong
        ito para ito ay magkatulad. Ang mga tatsulok ay parigilid at ang gild ay may
        haba na 50 pixels. Hint: Maaaring kailangan mong patakbuhin ang code nang
        ilang ulit para matukoy ang lahat ng mga bloke na kailangang idagdag.'
      Course 4 Artist 6_instruction: Kumpletohin ang code para maguhit ang tatlong,
        parigilid na mga tatsulok na ito.
      Course 4 Artist 7_instruction: 'Ngayon ay i-nest ang loop na ito sa loob ng
        isa pang loop para makaguhit ng 10 tatsulok. Ito ang tinatawag na naka-nest
        na loop. Hint: Lahat ng 10 mga tatsulok ay nagkumpleto ng isang 360 degree
        na pag-ikot.  '
      Course 4 Artist 8_instruction: Iguhit ang araw sa pamamagitan ng pag-loop sa
        buong bloke ng code na ito nang maraming beses.
      Course 4 Artist 8a_instruction: Natandaan ang hugis na ito? Ngayon ay hahayaan
        ka naming bumuo nito nang hindi nagbibigay sa iyo ng kahit anong mga bloke
        sa simula!
      Course 4 Artist 9_instruction: 'I-loop ang disenyong ito nang 10 beses at siguraduhing
        umikot sa bawat pagitan ng hugis na naiguhit. \r

'
      Course 4 Artist Binary 1_instruction: |-
        Ito ang isang function na kukuha ng binary string ng mga 1 at mga 0 at nagturo sa artista na sundin ang mga ito mula sa kaliwa hanggang sa kanan, sa taas hanggang sa baba. Pupunan ng artista ang mga parisukat kapag nakakita ito ng 1 at isawalang-bahala kapag nakakita ito ng 0. \r
        \r
        Patakbuhin ang code na ito para makita kung paano ang artista gumagamit ng binary para maiguhit ang pattern na ito.
      Course 4 Artist Binary 1a_instruction: |-
        Ito ang isang function na kukuha ng binary string ng mga 1 at mga 0 at nagturo sa artista na sundin ang mga ito mula sa kaliwa hanggang sa kanan, sa taas hanggang sa baba. Pupunan ng artista ang mga parisukat kapag nakakita ito ng 1 at isawalang-bahala kapag nakakita ito ng 0. \r
        \r
        Patakbuhin ang code na ito para makita kung paano ang artista gumagamit ng binary para maiguhit ang pattern na ito.
      Course 4 Artist Binary 2_instruction: Alin sa mga binary na string na ito ang
        maaari mong i-loop nang 8 beses para maguhit ang larawang ito?
      Course 4 Artist Binary 3_instruction: Maguguhit mo ba ang pattern na ito sa
        pamamagitan ng pag-loop ng tatlong binary digits lang (mga 0 at mga 1)?
      Course 4 Artist Binary 4_instruction: Bawat binary string ay kumakatawan sa
        isang hanay ng larawang ito. Maaari mo bang ayusin ang mga ito para maguhit
        ang isang smiley na mukha sa halip ng isang nakasimangot na mukha?
      Course 4 Artist Binary 5_instruction: Aling 6 digit na binary string, na kung
        uulitin nang 11 na beses ay makakaguhit sa larawang ito?
      Course 4 Artist Binary 6_instruction: Ano ang pinakamaikling binary na string
        ang maaari mong ulit-ulitin para maiguhit ang larawang ito?
      Course 4 Artist Binary 7_instruction: Tapusin ang drowing na ito.
      Course 4 Artist Binary Free Play 2_instruction: 'Libreng Laro: Narito ang isang
        blangkong canvas para guhitan mo. Magsaya!'
      Course 4 Artist Binary Free Play 2a_instruction: |-
        Narito ang isang canvas na may mas mataas pa na resolusyon para maguhitan - 16 pixel sa 16 pixels!\r
        \r
        Tingnan kung ano ang mangyayari kapag tayo ay nagsimulang maging malikhain gamit ang mga bits?
      Course 4 Artist Binary Free Play 2b_instruction: Mag-click dito para makita
        ang mga pahiwatig.
      Course 4 Artist Binary Free Play_instruction: 'Libreng Laro: Gumuhit ng anumang
        gusto mo gamit ang binary!'
      Course 4 Artist Binary pre1_instruction: Gamitin ang mga bloke sa baba para
        mapaguhit ng artista ang "01010101" na binary sa unang hanay.
      Course 4 Artist Binary ryan_instruction: |-
        Ang binary ay isang pamamaraan ng pagrepresenta ng impormasyon gamit ang dalawang opsyon lang.  Dito, tayo ay gagamit ng mga opyson na "off" (kinakatawan ng numerong 0) at "on" (kinakatawan ng numerong 1).  \r
        \r
        Binigyan ka na namin ng isang grid ng mga "pixel" na maaari mong daanan at gawan ng mga disenyo sa pamamagitan ng paglagay ng on sa partikular na mga parisukat. Maaari mo bang ipaguhit sa artista ang "01010101" na binary sa unang hanay?
      Course 4 Artist For  Functions 10_instruction: |-
        Let's Step it up a little,
        can you draw a Star shape using the "Draw a Square Line" function? Good
        luck!
      Course 4 Artist For  Functions 11_instruction: |-
        Let's Step it up a little,
        can you draw a Star shape using the "Draw a Square Line" function? Good
        luck!
      Course 4 Artist For Loops 1_instruction: Gumamit ng isang paulit-ulit na bloke
        para iguhit ang tatsulok na ito na 50 pixels ang lapad.
      Course 4 Artist For Loops 10_instruction: |-
        Free Play Time! Have fun drawing
        whatever you like with the blocks you have learned how to use
      Course 4 Artist For Loops 11_instruction: 'Natandaan mo ba sa nakaraang yugto
        kung saan tayo ay gumamit ng isang variable para i-kontrol ang bilang ng gilid
        sa isang hugis? Tayo ay gagawa ng parehong bagay ngayon gamit ang `counter`
        na variable. Ang pattern na ito ay nagsisimula sa isang tatsulok at nagdadagdag
        ng isang gilid sa isang beses hanggang sa maiguhit nito ang isang decagon
        (10 ang gilid). Bawat gilid ay dapat 100 pixels ang haba. '
      Course 4 Artist For Loops 11a_instruction: |-
        Pagsamahin natin ang lahat ng ito!  Gamitin ang iyong kaalaman sa `for` na mga loop at sa `counter` na variable, ilikha ang drowing na ito kung saan ang bawat hugis ay mayroong higit na 2 panig kung ihambing sa huli. Siguraduhin na ang bawat gilid ay 10 beses na mas mahaba sa bilang ng gilid na nasa polygon.\r
        \r
        Mayroong napakaliit ng code ang inihanda para sa iyo.
      Course 4 Artist For Loops 12_instruction: "That looked pretty cool, but now\nI'd
        like to draw each shape next to the last one. This time each side is\n20 pixels.
        Use a jump block to jump forward 40 pixels after each shape. "
      Course 4 Artist For Loops 13_instruction: |-
        Hmmm, those shapes are getting bigger
        every time! Didn't we already solve this problem with variables? How can
        we use the counter variable to make the sides smaller as there are more of
        them? Instead of moving forward by a set amount, try moving forward (100 /
        counter) pixels.
      Course 4 Artist For Loops 14_instruction: Kung ikaw ay umikot nang kaunti pa
        o mas mababa kaysa sa karaniwan mong pag-ikot para sa isang hugis, ito ay
        naglilikha ng isang malinis na epekto. Subukang gamitin ang ilan sa mga code
        mula sa huling antas, pero iikot nang 89 degrees para malikha ang baluktot
        na parisukat na pilipit na ito.
      Course 4 Artist For Loops 15_instruction: 'Libreng Laro: Subukang gumawa ng
        iilang sarili mong mga drowing gamit ang "for loops". Nagdadagdag rin kami
        ng iilang nakakatulong na mga variable para sa iyo.'
      Course 4 Artist For Loops 2_instruction: 'Aking inilagay ang code para sa pagguhit
        ng tatsulok sa loob ng isang for loop na nagbibilang mula 50 hanggang 100
        ng 10. Paalala: Siguraduhin na tiningnan mo ang code bago pindutin ang "Run".'
      Course 4 Artist For Loops 3_instruction: 'Gamitin ang huling palaisipan bilang
        isang reperensya para makumpleto ang isang ito. Ang pinakamaliit na tatsulok
        ay mayroong 20 pixel na gilid, ang pinakamali ay may 200 pixel na gilid, at
        bawat tatsulok ay mas malaki nang 20 pixels kaysa sa dati.

'
      Course 4 Artist For Loops 4_instruction: 'Paano mo babaguhin ang iyong natutunan
        dati para maiguhit ang mga parisukat na ito? Sila ay nagsisimula sa haba na
        15 pixels, ang pinakamalaki ay 300 pixels ang haba, at bawat parisukat ay
        mas malaki ng 15 pixels kaysa sa dati. '
      Course 4 Artist For Loops 5_instruction: 'Mahusay ang pagkagawa mo sa huling
        palaisipan! Tayo ay gagamit ng "counter" variable na bloke ulit para maiguhit
        ang magandang larawan na ito. '
      Course 4 Artist For Loops 6_instruction: |-
        Free Play! Try using a for loop to
        draw a growing shape pattern of your own design.
      Course 4 Artist For Loops 6a_instruction: Gumawa ng tatlong maliliit na pagbabago
        sa code mula sa huling antas para makuha ito!
      Course 4 Artist For Loops 7_instruction: |-
        What happens if you remove the "Repeat
        3" from this algorithm, keeping the "move" and "turn" blocks in the for
        loop? In this spiraling triangle, each side is 20 pixels longer than the last.
      Course 4 Artist For Loops 8_instruction: |-
        Isa nalang maliit na pagbabago sa code mula sa huling larawan para malikha ang drowing na ito. Maaari mo bang matukoy kung ano ang pagbabago?\r
        \r
        Higing: Kailangan mong magtanggal ng isang bagay!
      Course 4 Artist For Loops 8a_instruction: Isa na lang maliit na pagbabago sa
        code mula sa huling larawan ang makakalikha sa larawang ito. Maaari mo bang
        matukoy kung ano ang pagbabagong ito?
      Course 4 Artist For Loops 9_instruction: |-
        Can you make a spiral? Move forward
        from 1 to 75 pixels, increasing by 1 pixel each time.
      Course 4 Artist For Loops Challenge_instruction: "**Hamon:** Maaari mo bang
        malaman kung paano gamitin ang lahat ng mga bagay na natutunan mo para malikha
        ang larawan na ito ng mga polygon, lahat ay mayroong 40 pixel na mga gilid?"
      Course 4 Artist For Loops Challenge_a_instruction: |-
        Maaari mo bang malaman kung paano gamitin ang lahat ng mga bagay na natutunan mo para malikha ang larawang ito?\r
        \r
        Nangangailangang ng higing? Mag-click dito.
      Course 4 Artist For Loops inspire_instruction: |-
        Libreng-Laro na Inspirasyon: Natutunan mo na ngayon ang lahat ng kailangan mong malaman para makagawa ng pattern gaya nito! Kung ang larawan na ito ay nagbibigay-inspirasyon sa iyo, subukang gumawa ng katulad nito. Kung hindi, gumawa ng isang bagay na gawa-gawa mo lang.\r
        \r
        Nangangailangan ng higing? Mag-click dito.
      Course 4 Artist Functions 1_instruction: Maaari mo bang iguhit ang isang parisukat
        na 100 pixels ang haba, gamit ang loop?
      Course 4 Artist Functions 10_instruction: |-
        Which block do you need to add to
        get the triangle to sit on top of the square?
      Course 4 Artist Functions 11_instruction: Tingnan ang code na ito na gumuguhit
        sa isang cube - maaari mo ba itong ilipat sa isang function na tinatawag na
        "Draw a Cube"
      Course 4 Artist Functions 12.1_instruction: |-
        Let's create a function called
        "draw an octagon 20" that draws an octagon where each side is 20 pixels
        long.
      Course 4 Artist Functions 12_instruction: Loop square function to draw a line
      Course 4 Artist Functions 13.1_instruction: |-
        Now, let's make a function called
        "jump to upper right" that moves the artist to the upper-right of the octagon
        that you just drew so we can finish this pattern.\r
        \r
        Hint:  To get yourself
        to the upper-right corner, try jumping in a pattern that makes just 3/8 of
        the octagon.
      Course 4 Artist Functions 13_instruction: |-
        Check it out we have a new function
        called "draw a line of squares". Feel free to take a look inside the function
        block to see how we built it. Click on "Run" when your are ready for the
        next puzzle.
      Course 4 Artist Functions 14.1_instruction: |-
        Now, let's make a function called
        "jump to upper right" that moves the artist to the top-right of the octagon
        that you just drew so we can finish this pattern.
      Course 4 Artist Functions 14_instruction: |-
        You're doing great! Let's use
        your new "Draw a line of squares" function to draw a Square shape. Remember
        each square is 40 pixels in length.
      Course 4 Artist Functions 15_instruction: |-
        Let's Step it up a little, can
        you draw a star shape using the "draw a line of squares" function? Good
        luck! Hint: you may have to turn 144 degrees
      Course 4 Artist Functions 2_instruction: 'Maaari mo bang iguhit ang 3 mga parisukat
        na 20 pixels ang pagitan sa bawat isa? Higing: bawat parisukat ay 100 pixels
        ang laki'
      Course 4 Artist Functions 3_instruction: |
        Using the "draw a square" function
        block, can you draw this picture? Hint: each square is 120 pixels apart.\r
      Course 4 Artist Functions 4_instruction: |-
        Are you ready to create your own
        "Function Block"? Click on the "Functions" block in the tool box, name
        it "draw a triangle", then create a triangle as you have done before with
        the Action and Loops blocks. Then click on the Save and Close in the upper
        right hand corner. Hint: Create a triangle that is 100 pixels in length. Good
        luck!
      Course 4 Artist Functions 5 OLD_instruction: |-
        Let's try to use our two functions
        to draw a house - what needs to be fixed in this code to draw the house properly?
      Course 4 Artist Functions 5_instruction: |
        Using the "draw a square" function
        block, can you draw this picture? Hint: each square is 120 pixels apart.\r
      Course 4 Artist Functions 6_instruction: |-
        Which block do you need to add to
        get the triangle to sit on top of the square?
      Course 4 Artist Functions 7_instruction: |-
        Can you draw a line of squares using
        a Square function? Each square is 40 pixel's in length.
      Course 4 Artist Functions 8_instruction: 'Nakuha mo na ba kung paano gamitin
        ang mga function na mga bloke? Ating babaguhin ang parisukat na ito para maging
        200 pixels ang laki nito. Higing: i-click ang "edit" para mabago ang laki
        ng "draw a square" na editor ng function. Tandaan ang pag-click sa "save and
        close" para makalabas mula sa editor ng function. '
      Course 4 Artist Functions 9_instruction: |-
        We have given you most of the code
        to create a function. However there seems to be something missing. Can you
        make this function block complete?
      Course 4 Artist Functions Inspiration_instruction: I-click ulit ito para makita
        ang mga higing.
      Course 4 Artist Functions challenge_instruction: I-click ulit ito para makita
        ang mga higing.
      Course 4 Artist Functions inspire_instruction: |-
        Click here to see the inspiration
        picture again.
      Course 4 Artist Inspire_instruction: |-
        Gusto ng pangalawang pagtingin sa mga inspirasyon na disenyo o sa mga higing? Mag-click dito!\r
        \r
        Kung hindi, gumawa ng disenyo nang ikaw lang!
      Course 4 Artist Params 1_instruction: |-
        Let's edit a function that draws a
        square with 50 pixel sides
      Course 4 Artist Params 10_instruction: "You can call functions from inside\nother
        functions! Using your \"shape\" function as a base, create 3 house shapes\neach
        20 pixels larger than the last starting at 50 pixels in length. Using\na counter
        loop might be helpful. "
      Course 4 Artist Params 11_instruction: |-
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: |-
        Use your "pinwheel" function to draw
        each of these shapes. The side length for each image is 50.
      Course 4 Artist Params 13_instruction: 'Libreng Laro: Narito ang mga function
        na nasulat mo, at iilang higit pa para paglaruan mo. Gumuhit ng isang bagay
        na kamangha-mangha!'
      Course 4 Artist Params 2_instruction: |-
        That triangle function would be a whole
        lot more useful if it could draw triangles of different sizes. I've added
        a parameter for line length, but it doesn't do anything yet. Can you update
        the function so it uses the "length" parameter when it draws each side?
        The triangle sizes are 150 pixels, 75 pixels and 25 pixels.
      Course 4 Artist Params 3_instruction: 'Magaling, maaari mo bang iguhit ang bawat
        isa sa mga tatsulok na ito gamit ang bagong function na iyan? Ang una ay 25
        pixels ang haba, ang pangalawa ay 50, at ang pangatlo ay 75. '
      Course 4 Artist Params 4_instruction: |-
        Can you add a new function called square?
        It should also take a length parameter, just like the triangle. This time
        draw 3 squares 25, 50 and 75 pixels in length,100 pixels apart.
      Course 4 Artist Params 5_instruction: |
        Use both of your new functions to draw
        this picture. To make this easier you use a loop with a "counter" parameter.
      Course 4 Artist Params 6_instruction: "Ating baguhin ang \"draw a shape\" na
        function na ito.\nMayroon na itong \"length\" na paremeter. Ngayon, ating
        babaguhin ang function para idagdag rin ang \"sides\" na parameter. Tandaan
        na ang angulo sa pagliko sa kahit anong hugis ay 360 na hinati sa bilang ng
        mga gilid na mayroon ito. Higing: ang mga haba para sa bawat hugis ay 100
        pixels para sa tatsulok, ang hexagon ay 25 pixels at ang parisukat ay 50 pixels. "
      Course 4 Artist Params 7_instruction: "Can you draw these shapes by filling\nin
        the \"???\" The square and triangle are 100 pixels in size while the hexagon\nis
        75 pixels in size. "
      Course 4 Artist Params 8_instruction: 'Maaari mo bang malaman kung paano iguhit
        ang hugis na ito? Narito ang isang higing, maglikha ng bagong function na
        may 6 na gilid na tinatawag na hexagon.

'
      Course 4 Artist Params 9_instruction: Natatandaan mo ba noong ginamit natin
        ang counter na loop ngunit nagtanggal tayo ng loop sa loob? Tayo ay magsaya
        at gagamit ng "draw a shape" na function na may "sides" at "length" na mga
        parameter. Maari mo bang ilikha ulit ang mga hugis na ito? Ang tagabilang
        ng parisukat ay dapat 5/100/5, ang tagabilang ng tatsulok ay dapat 10/10/100
        at ang hexagon ay 2/100/2.
      Course 4 Artist Var 9_instruction: |-
        Here's the algorithm to draw a triangle,
        modify it so it uses the "sides" variable instead. Replace the number 3
        with the "sides" variable. Hint: remember to use the "set sides to" block.
      Course 4 Artist Vars 1_instruction: |-
        Guguhit tayo ng paragilid na tatsulok. \r
        \r
        Dapat itong eksaktong 100 pixels ang haba sa bawat gilid.
      Course 4 Artist Vars 10_instruction: |-
        Here's an algorithm that draws a triangle
        out of smaller triangles. Can you modify it so that it uses the "sides"
        variable to draw each triangle? Look through the code, and every time you
        see the number 3, replace it with your "sides" variable. Remember to use
        the "set sides" block.
      Course 4 Artist Vars 11_instruction: Narito ang mas kumplikadong code gamit
        ang parehong mga konsepto mula sa nakaraang palaisipan - ano dapat ang itakda
        mo sa "sides" na variable para maguhit ang larawang ito na binubuo ng mga
        parisukat?
      Course 4 Artist Vars 12_instruction: Ating itakda ang "sides" na variable sa
        5. Kung mas maraming gilid ang idagdag natin, mas malaki ang buong pattern
        na magagawa nito. Bigyang pansin na mayroong ibang variable na tinatawag na
        "length". Maaari na natin itong gamitin kapag mayroon tayong "move forward".
        Itakda ang "length" na variable sa 75 para sa hugis na ito.
      Course 4 Artist Vars 13_instruction: |-
        Kapag ang hugis ay may maraming mga gilid, bawat gilid ay kailangang mas maikli kung gusto mo na ang buong pattern ay kakasya sa screen.
        \r
        Muli nating likhain ang algoritmo para sa kahanga-hangang pattern na ito, ngunit sa halip ay manu-mano nating itakda ang `length` na variable, gagamit tayo ng math na bloke na may `sides` na variable sa loob para masiguro na bawat hugis ay tama ang akma. Ang paligid ng bawat polygon ay 300 pixels.\r
        Nangangailangan ng ilang mga pahiwatig? Mag-click dito.
      Course 4 Artist Vars 14_instruction: |-
        Libreng Laro: Tingnan ito! Ngayon ang iyong algoritmo ay naka-nest na sa loob ng isa pang loop. Mag-eksperimento sa pamamagitan ng pagbago sa mga halaga ng iyong dalawang variable para makaguhit ng magagandang mga pattern.\r
        \r
        Para sa karagdagan pang mga epekto, subukang paglaruan ang kulay! Gumamit ng mga random na kulay sa loob ng mga loop at tingnan kung paano nito nabago ang iyong disenyo.
      Course 4 Artist Vars 2_instruction: Sa halip na gumamit ng "move forward by
        150," ang "move" na bloke ay nagtukoy na ngayon sa isang variable na tinatawag
        na "length". Maaari mo bang itakda ang "length" sa 150 para maguhit ang bagong
        tatsulok na ito?
      Course 4 Artist Vars 3_instruction: "Here's a loop that draws a square, but\nsomething's
        missing. Can you fix it so that it uses the variable \"length\"\nto figure
        out how long each side should be? "
      Course 4 Artist Vars 4_instruction: Ngayon ay gusto kong gumawa ng isang parihaba
        na doble ang tangkad kaysa sa lawak nito. Mayroon tayong isang variable na
        tinatawag na "width" na nangangailangan nating itakda sa 100. Maaari mo bang
        gamitin ang math na mga bloke para makumpleto ang code?
      Course 4 Artist Vars 5_instruction: Gamit ang variable na "sides" para makontrol
        kung ilang beses ang loop na ito mapapatakbo.
      Course 4 Artist Vars 6_instruction: |-
        Narito ang ilang mga code na maaaring makaguhit ng kahit anong regular na polygon. Mayroong bagong variable na tinatawag na sides na itinakda sa 4. Maaari mo bang gamitin ang sides na variable (kasabay ng math na bloke) para ibaling ang tamang halaga kahit na ilan ang bilang ng gilid na nandoon sa isang polygon?\r
        \r
        Mag-click dito para makabalik sa higing!
      Course 4 Artist Vars 7_instruction: |-
        Gamitin ang natutunan mo sa huling palaisipan para malikha ang hexagon na ito gamit ang "sides" na variable.\r
        \r
        Tingnan kung paano mo maaaring mabago ang isa lang na halaga para maiguhit ang tatsulok, parisukat, pentagon, o octagon?
      Course 4 Artist Vars 8_instruction: 'Libreng Laro: Mag-eksperimento sa bilang
        ng mga panig na mayroon ang hugis na ito. Maaari mo bang baguhin ang algoritmo
        para ang kabuuang laki ng hugis ay manatiling pareho, kahit na ilan ang panig
        na mayroon ito? Higing: Kung hahatiin mo ang iyong panimulang haba sa bilang
        ng mga panig, ang haba sa bawat panig ay magiging maikli habang ang bilang
        ng mga panig ay pataas ng pataas.'
      Course 4 Artist Vars 9_instruction: |-
        Modify this algorithm so it uses the "sides"
        variable instead of a fixed number to draw a triangle. Don't forget to use
        the "set sides to" block.
      Course 4 Bee 1_instruction: |-
        Hindi masasabi ng bubuyog kung ano ang nasa ilalim ng ulap! \r
        \r
        Gamitin ang `if` na bloke para suriin kung mayroon bang bulaklak sa ilalim ng ulap. \r
        \r
        Kumuha ng nektar nang isang beses, kung mayroong isa lang na bulaklak.
      Course 4 Bee 2_instruction: Gamitin ang "if/else" na bloke para suriin ang bawat
        object para makita kung ito ba ay bulaklak o isang pulot-pukyutan. Kung ito
        ay isang bulaklak, magkolekta ng isang nektar ... kung hindi, gumawa ng isang
        pulot!
      Course 4 Bee 3_instruction: Ang hindi kilalang bagay ay maaaring isang bulaklak
        o isang pulot-pukyutan. Sa oras na ito, gamitin ang if/else na bloke para
        magkolekta ng isang nektar kung ito ay isang bulaklak, kung hindi ay gumawa
        ng isang pulot (dahil kapag ganito, ito ay isang pulot-pukyutan).
      Course 4 Bee 4_instruction: |-
        This purple flower may have either 3, 2, or 1
        nectar. Here an if/else block is combined with another if/else block to create
        an "if/else-if/else" statement. Complete the solution to collect the unknown
        amount of nectar.
      Course 4 Bee 5_instruction: |-
        This purple flower may have either 3, 2, or 1
        nectar. Add an if-else block to create an if, else-if, else block. Complete
        the solution to collect the unknown amount of nectar.
      Course 4 Bee 6_instruction: |-
        This purple flower may have either 3, 2, or 1
        nectar. Create an if, else-if, else block to collect the unknown amount of
        nectar.
      Course 4 Bee 7_instruction: |-
        Use everything you have learned so far to collect
        all the nectar. The purple flower may have either 3, 2, or 1 nectar.
      Course 4 Bee For Loops 1_instruction: Gumamit ng loop para makolekta ang nektar
        mula sa bawat bulaklak.
      Course 4 Bee For Loops 10_instruction: Kung ang iyong loop ay nagbibilang pababa,
        ang pangtaas ay kinuha mula sa iyong tagabilang na variable sa bawat pag-loop.
        Ano dapat ang iyong pangtaas para makakolekta ng 9, pagkatapos ay 6, at pagkatapos
        ay 3 na nektar?
      Course 4 Bee For Loops 11_instruction: |-
        What's wrong with this loop? See if
        you can fix it and make the bee collect all the nectar.
      Course 4 Bee For Loops 2_instruction: Narito ang isang bagong uri ng loop, na
        tinatawag na "for" loop. Ang partikular na for loop na ito ay magbibilang
        ng 1 mula sa 1 hanggang sa 5, at ipatakbo ang nilalaman ng loop bawat beses
        na ito ay magbibilang. Tulungan ang Bee na makakuha ng nektar.
      Course 4 Bee For Loops 3_instruction: |-
        You can solve this puzzle by using a
        for loop to count from 1 to 3 by 1. Now let's go get some nectar!
      Course 4 Bee For Loops 4_instruction: |-
        Collect all of the nectar from these
        flowers. I wonder if there's an easier way to do this...
      Course 4 Bee For Loops 5_instruction: "Ah, the for loop makes this much easier!\nUsing
        the \"counter\" variable from the for loop to loop the \"get nectar\"\nblock
        the same number of times as the loop. Whew! That's a lot of loops.\nAll the
        code you need it there, take a look at how it is put together then\nclick
        on Run and see how it works. "
      Course 4 Bee For Loops 6_instruction: Maaari ka ring gumamit ng for loop para
        magbilang pababa. Subukang itipon ang nektar na ito sa pamamagitan nang pagbilang
        ng 1 mula sa 5 hanggang sa 1.
      Course 4 Bee For Loops 7_instruction: |-
        Use your for loop "counter" variable
        to control how far to move horizontally.
      Course 4 Bee For Loops 8_instruction: Magagamit mo ba ang loop na variable para
        makontrol ang paggalaw at pagkolekta ng nektar?
      Course 4 Bee For Loops 9_instruction: Ang huling bilang na nasa iyong for loop
        ay tinatawag na "increment," at bawat beses na ang loop ay papatakbuhin, ang
        tagabilang na variable ay nagbabago ayon sa increment. Subukang magkolekta
        sa mga bulaklak na ito gamit ang increment na 2.
      Course 4 Bee Loops 5 NEW_instruction: Narito ang tatlong mga bulaklak. Maaari
        mo bang mahanap ang pattern ng mga instruksyon na kailangan mong ulitin nang
        3 beses para makakolekta ng nektar gamit ang pinakakaunting bilang ng mga
        bloke?
      Course 4 Bee Loops 5a NEW_instruction: Ngayon, gamitin ang mga loop para matulungan
        ang bubuyog na magkolekta sa lahat ng nektar habang papunta sa pulot-pukyutan
        gamit ang pinakakaunting mga bloke hangga't maaari. Kapag nakarating ka na
        doon, huwag kalimutang gumawa ng pulot!
      Course 4 Bee Params 1_instruction: Magsulat ng pagkakasunod-sunod para makolekta
        ang lahat ng nektar gamit ang `get 3 nectar` na nagpapaikot, nagpapagalaw
        para magkolekta ng nektar, at pagkatapos ay nagpapabalik sa orihinal na lokasyon.
      Course 4 Bee Params 2_instruction: Baguhin ang "get 3 nectar" na function para
        mapaliko ako pakanan sa halip na pakaliwa sa mga bulaklak.
      Course 4 Bee Params 3 (copy 1)_instruction: Ngayon mayroon nang mga bulaklak
        sa magkabilang panig! Baka maaari mong gamitin ang isang parameter para parehong
        function ay gagana sa mga bulaklak sa alimnan na panig. Nagdagdag ako ng parameter
        na tinatawag na "direction" sa function. Kung ang "direction" na parameter
        ay katumbas ng 0, dapat akong liliko pakaliwa, kung ito ay 1, dapat akong
        liliko pakanan.
      Course 4 Bee Params 3_instruction: 'Ngayon ay mayroon nang mga bulaklak sa magkabilang
        panig! Nagdagdag kami ng mga variable na tinatawag na "left" at "right" para
        magamit mo, at nagdagdag ng parameter na tinatawag na "direction" sa "get
        3 nectar". Baguhin ang "get 3 nectar" para ang bubuyog ay liliko sa tamang
        direskyon kapag ang mga variable na "left" o "right" ay ipinasa sa function.  '
      Course 4 Bee Params 4 (copy 1)_instruction: Subukang gamitin ang bagong function
        para magkolekta sa lahat ng mga bulaklak. Tandaan, 0 = kaliwa at 1 = kanan.
      Course 4 Bee Params 4 - Two WhenRun_instruction: Subukang gamitin ang bagong
        function para magkolekta sa lahat ng mga bulaklak. Tandaang gamitin ang left
        at right na mga variable.
      Course 4 Bee Params 4 backup_instruction: Hindi ba mas maganda kung maaari tayong
        magkolekta sa lahat ng mga nektar na ito gamit ang isang function lang? Subukang
        magdagdag ng bagong parameter sa iyong function na tinatawag na "nectars"
        para ma-kontrol ang halaga ng nektar na ikokolekta. Malamang gusto mo ring
        baguhin ang pangalan ng function!
      Course 4 Bee Params 4_instruction: Subukang gamitin ang iyong bagong function
        para magkolekta ng nektar mula sa lahat ng mga bulaklak. Tandaang gamitin
        ang left at right na mga variable.
      Course 4 Bee Params 5_instruction: Magsisimula tayo sa wala - maaari ka bang
        maglikha ng bagong function na tinatawag na "get 5 nectar" na may direksyon
        na parameter?
      Course 4 Bee Params 6 (copy 1)_instruction: Subukang gamitin ang iyong bagong
        function para makolekta ang lahat ng nektar na ito.
      Course 4 Bee Params 6_instruction: Hindi ba mas maganda kung maaari nating ikolekta
        ang lahat ng mga nektar na ito gamit ang isang function lang? Subukang magdagdag
        ng bagong parameter sa iyong function na tinatawag na "nectar units" para
        ikontrol ang halaga ng nektar na ikokolekta. Malamang gusto mo ring baguhin
        ang pangalan ng function!
      Course 4 Bee Params 7 (copy 1)_instruction: Subukang gamitin ang iyong bagong
        function para makolekta ang lahat ng nektar na ito.
      Course 4 Bee Params 7_instruction: Subukang gamitin ang iyong bagong function
        para makolekta ang lahat ng mga nektar na ito.
      Course 4 Bee Params 8 Clone 2_instruction: |-
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 Clone_instruction: |-
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 clone 3_instruction: |-
        Oooh, now there's honey to deal
        with too! How could you update your function to either get nectar or make
        honey.
      Course 4 Bee Params 8 new_instruction: |-
        Oooh, now there's honey to deal with
        too! How could you update your function to either get nectar or make honey.
      Course 4 Bee Params 8_instruction: 'Hamon: Ngayon na mayroon nang ding pulot
        para bigyang-pansin! Isulat ulit ang iyong function para gamitin ang parehong
        bilang ng pulot na mga yunit at ang bilang ng nektar na mga yunit. Paano mo
        ba gagamit ang mga numerong iyon para makapagdesisyon kung ano ang dapat mong
        gawin?'
      Course 4 Bee Params Ex_instruction: Subukang gamitin ang iyong bagong function
        para makolekta ang lahat ng mga nektar na ito.
      Course 4 Binary 1_instruction: Narito ang isang function na kukuha ng binary
        na string ng mga 1 at mga 0 at nagtuturo sa magsasaka na lumiko mula sa kaliwa
        hanggang sa kanan, sa taas hanggang sa baba, at gawing on ang mga parisukat
        kung ang numero ay 0. Patakbuhin ang binigay na code para makita kung paano
        ang mga magsasaka gumamit ng binary para maiguhit ang larawan.
      Course 4 Binary 2_instruction: |-
        What binary string could you loop 8 times to
        draw this image? Hint: the number "1" fills a hole.
      Course 4 Binary 3_instruction: Maaari mo bang iguhit ang pattern na ito sa pamamagitan
        ng pag-loop ng isang binary na string?
      Course 4 Binary 5 (copy 1)_instruction: Aling binary string na inuulit nang
        10 beses ang makakaguhit sa larawang ito?
      Course 4 Binary 5_instruction: Aling binary na string, ang inulit ng 10 beses,
        ang makakaguhit ng larawang ito?
      Course 4 Binary 6 (copy 1)_instruction: Aling binary string na inuulit nang
        10 beses ang makakaguhit sa larawang ito?
      Course 4 Binary 6_instruction: Aling binary na string, ang inulit ng 10 beses,
        ang makakaguhit ng larawang ito?
      Course 4 Binary 7_instruction: Aling binary na string, ang inulit ng 10 beses,
        ang makakaguhit ng larawang ito?
      Course 4 Binary 8_instruction: |-
        You can complete the most of this image by
        looping a 5 bit binary number - then you'll need one more 4 bit number to
        get the bottom right-hand corner.
      Course 4 EC 1a_instruction: Walang mga patakaran. Walang mga pahiwatig. Ang
        hamon lang!
      Course 4 EC 1b_instruction: Walang mga patakaran. Walang mga pahiwatig. Ang
        hamon lang!
      Course 4 EC 2a_instruction: Walang mga patakaran. Walang mga pahiwatig. Ang
        hamon lang!
      Course 4 EC 2b_instruction: Walang mga patakaran. Walang mga pahiwatig. Ang
        hamon lang!
      Course 4 EC 2c_instruction: Walang mga patakaran. Walang mga pahiwatig. Ang
        hamon lang!
      Course 4 EC 2d_instruction: Walang mga patakaran. Walang mga pahiwatig. Ang
        hamon lang!
      Course 4 EC 3_instruction: 'Gamitin ang natutunan mo sa huling antas para maguhit
        ang larawan gaya nito. Tandaan: Ang code ay magiging mas simple kung isama
        mo ang mga parameter. '
      Course 4 EC 3a_instruction: 'Matinding Hamon: Walang mga patakaran. Walang mga
        pahiwatig. Ang hamon lang!'
      Course 4 Maze 1_instruction: Dalhin ang galit na ibon sa baboy!
      Course 4 Maze 2_instruction: Iwasan ang mga TNT!
      Course 4 Maze 3_instruction: 'I-program ang galit na ibon para makapunta sa
        baboy. '
      Course 4 Maze 4_instruction: Subukan ang "repeat" na bloke para makagamit ng
        kaunting mga bloke kapag naglulutas sa palaisipang ito...
      Course 4 Maze 5_instruction: Malutas mo ba ang palaisipang ito gamit ang pinakakaunting
        bilang ng mga bloke hangga't maaari?
      Course 4 Maze 6_instruction: Malutas mo ba ang palaisipang ito gamit ang pinakakaunting
        bilang ng mga bloke hangga't maaari?
      Course 4 Play Lab For Loops 2_instruction: Sa ngayon, susubukan nating magbilang
        ng mga bilang na gansal mula 1 hanggang 100.
      Course 4 Play Lab Params 1_instruction: Narito ang isang function na tinatawag
        na `jump` na nagpapatalon ng 100 pixels sa iyong pangunahing karakter. Patakbuhin
        ang programa at gamitin ang jump na function para ikolekta ang lahat ng mga
        bandila sa pamamagitan ng pagpapagalaw sa aso gamit ang mga arrow key.
      Course 4 Play Lab Params 10_instruction: "Aming idinagdag ang isang huling function
        para sa iyo.\\r\n\\r\nGumamit ng \"if\" na pahayag para ma-program ang iyong
        laro na tatawag lang sa \"level_up\" na function kapag ang \"player_score\"
        ay naging mas malaki sa isang tiyak na numero.\\r\n\\r\nBilang halimbawa:
        \"player_score\" > 6\\r\n\\r\nLaruin ang laro, at abutin ang antas na 3 para
        makapunta sa sunod na palaisipan. "
      Course 4 Play Lab Params 2_instruction: |
        Ngayon ay mayroon tayong mga bandila na mataas pa kaysa sa ating kasalukuyang pagtalon! Gagamit tayo ng parehong "up" at "down" na mga arrow para makagawa tayo ng maraming talon. \r
        \r
        Kakailanganin nating magdagdag ng parameter sa ating jump na function na tinatawag na "height". Ang up na arrow ay dapat makakapagawa sa aso na tatalon ng 200 pixels at ang down arrow ay dapat makapagpatalon lang nito nang 100 pixels.
      Course 4 Play Lab Params 3_instruction: 'Nagdadagdag tayo na ibang parameter
        sa jump na function para magagamit natin ito sa ibang mga aktor. Bawat aktor
        ay kinakatawan ng isang numero, na nagsisimula sa isa. Baguhin ang "jump"
        na function para gagamit ito sa "aktor" na parameter para magawa ang tamang
        pagtalon ng karakter. '
      Course 4 Play Lab Params 4_instruction: |-
        Narito ang isang function na tinatawag na `patrol`.
        \r
        \r
        Baguhin ang `patrol` para pagalawain ang Pusa pataas ng 400 pixels at pagkatapos ay pababa ng 400 pixels.
      Course 4 Play Lab Params 5_instruction: Baguhin ang "patrol" na function para
        madagdag ang "aktor" na parameter, para maaari na nating matawag ito para
        sa bawat aktor na nasa screen. Tandaan, ang mga aktor ay tumutugon sa mga
        numerong 1, 2, at 3.
      Course 4 Play Lab Params 6_instruction: Magdagdag ng isa pang parameter na tinatawag
        na "speed" sa "patrol" na function. Subukang gumamit ng "set speed" na bloke
        kasama ang bagong "speed" na parameter para tulungan ang Pingguwino na makuha
        ang parehong mga bandila bago makakuha ng isa ang ibang mga sprite.
      Course 4 Play Lab Params 7_instruction: |-
        Tayo ay magsaya! Tingnan ang code na ibinigay para makita kung malalaman mo ba kung ano ang ginagawa ng bawat bloke. \r
        Kapag tapos ka na, gamitin ang mga arrow key para kontrolin ang Aso at makolekta ang lahat ng mga bandila.\r
        TANDAAN:
        Hindi mo kailangang gumawa ng anumang pagbabago sa programa
      Course 4 Play Lab Params 8_instruction: Gamitin ang `when actor touches` na
        bloke para mapadala ang Aso pabalik sa kaliwang-itaas LANG kapag ang Aso ay
        nakakahawak sa kahit na sino sa ibang mga aktor.
      Course 4 Play Lab Params 9_instruction: "Narito ang ating laro mula sa mas naunang
        yugto, ngunit karamihan sa mga code ay nakatago. Mayroong bagong function
        na `score_points.`\\r\n\\r\nBaguhin ang function para maaaring madagdag ang
        bagong parameter na tinatawag na `points` sa `player_score`.\n\\r\n\\r\nAng
        variable na `player_score` ay dapat tataas sa bawat beses na ang Aso ay nag-tag
        sa Pusa na may pie, at bababa sa bawat beses na ang Pusa ay naka-tag sa Aso
        na may sandwich.\\r\n\\r\nTandaan:\nKapag tapos ka na, i-click ang \"Run\"
        para maglaro. Kapag ang Aso ay nakakuha na ng 6 na puntos, iikaw ay lilipat
        sa sunod na palaisipan. "
      Course 4 Play Lab Vars 1_instruction: Sa oras na ito, hindi mo na kailangang
        magsulat ng kahit anong code, pindutin lang ang "Run" para maglaro! Sa larong
        ito, ikaw ang aso na nagsusubok na magkolekta ng mas maraming mga bandila
        kaysa sa pusa. Gamitin ang pababa na arrow para ikontrol ang aso. Pindutin
        ang "Finish" kapag tapos ka nang maglaro.
      Course 4 Play Lab Vars 2_instruction: Ang habulan sa huling palaisipan ay hindi
        talaga patas! Palitan ang `dog_speed` na variable para masiguro na makakolekta
        ka ng mas maraming mga bandila kaysa sa Pusa. Ang unang makakakolekta ng 10
        mga bandila ang mananalo!
      Course 4 Play Lab Vars 3_instruction: Gamitin ang kaliwa at kanang mga arrow
        para makagalaw, at ang pataas na arrow para makatalon. Tingnan kung makokolekta
        mo ang lahat ng mga bandila.
      Course 4 Play Lab Vars 4_instruction: Ngayon ay gumagamit tayo ng variable na
        tinatawag na "height" para makontrol kung gaano kataas ang maaaring matalon
        ng aso. I-update ang "height" na variable para makatalon ang aso ng sapat
        na taas para maabot ang lahat ng mga bandila.
      Course 4 Play Lab Vars 5_instruction: 'Tayo ay bubuo ng isang laro! Una ay kakailanganin
        natin ng iskor. Muling ibuo ang code na nakita mo sa huling antas para itakda
        ang puntos sa 10. '
      Course 4 Play Lab Vars 6 (copy 1)_instruction: |-
        Cool, now we've got our score
        variable, but how are we going to make it useful? How about adding to your
        score variable each time you hit the enemy with a fireball? Use the "when
        actor 2 touches anything" event to trigger an update to your score when your
        fireballs hit the cat. You can increment the score by setting score = score
        + 1. Get your score up to 10 (going one at a time!) to pass the level.
      Course 4 Play Lab Vars 6_instruction: |-
        Gamitin ang kanang arrow para itapon ang pie.\r
        \r
        Sa ating laro, paano dapat tayo makaiskor ng puntos? Magdagdag ng 1 sa iyong "points" na variable sa bawat beses na matamaan ng Aso ang Pusa sa piraso ng pie. Gamitin ang "when actor 2 touches anything" na pangyayari para mag-trigger ng update sa iyong puntos. Maaari kang magdagdag sa iyong variable sa pamamagitan ng pagtakda ng "points = points + 1." Paabutin ang iyong iskor sa 10 para (tataas ng isa sa bawat beses!) mapasa ang antas.
      Course 4 Play Lab Vars 7_instruction: Mahusay, ngayon ay ating sisiguradohin
        na ang larong ito ay hindi masyadong madaling laruin. Anumang oras na ang
        Aso (aktor 1) ay matatamaan ng sandwich mula sa Pusa (aktor 2), dapat ay mawawalan
        ka ng puntos. Magsimula sa 10 na puntos para ito ay hindi masyadong mahirap.
        Hayaan ang iyong iskor na bababa mula 10 hanggang 0 para maipasa ang antas.
      Course 4 Play Lab Vars 8 (copy 1)_instruction: |-
        Alright, one last thing for
        this game - let's set it up so the player can win (or lose). Use a forever
        loop to check the value of score - if score is ever greater that 20, make
        the enemy vanish. If the score is every less than 0, make the player vanish.
        Click "Finish" when the game works like you'd like it to.
      Course 4 Play Lab Vars 8_instruction: |-
        Let's set up this game so the Dog can
        win (or lose). Use a forever loop to check the value of score - if score is
        ever greater that 20, make the enemy (the Cat) vanish. If the score is ever
        less than 0, make the player (the Dog) vanish. Click "Finish" when the game
        works like you'd like it to.
      Course 4 Play Lab Vars 9_instruction: |-
        Oras para sa Libreng Laro! Narito ang lahat ng mga variable na napaglaruan na natin sa yugtong ito, pati na rin ang iilan pang kaso na gusto mo ang mga ito. \r
        \r
        Bigyang pansin na mayroon na ngayong napakaraming mga bloke sa ating toolbox na kailangan nilang ayusin! Dito, ating inilagay ang bawat piraso sa isang angkop na kategorya. Gumugol ng ilang oras para tuklasin ang lahat nang magagamit. Kapag tapos ka nang mag-browse, gumawa ng laro o kuwento gamit ang mga repeats, variables at mga pangyayari. \r
        \r
        Higing: mag-scroll pababa para makita ang lahat ng mga utos sa loob ng workspace.
      Course 4 Play Lab Vars_instruction: |-
        Alright, one last thing for this game
        - let's set it up so the player can win (or lose). Use a forever loop to
        check the value of score - if score is ever greater that 20, make the emeny
        vanish. If the score is every less than 0, make the player vanish.
      Course 4 Play Labs For Loops 1_instruction: Gawin natin ang aso na makapagsalita
        sa bawat numero mula 1 hanggang sa 100. Gumamit ng `for` loop at nang counter
        na bloke para isalita ang counter na variable sa bawat beses na tumatakbo
        ang loop.
      Course 4 Play Labs For Loops 2_instruction: Sa oras na ito, tulungan si Olive
        ang Pusa na magbilang sa mga numerong gansal lang mula 1 hanggang sa 101.
      Course 4 Play Labs For Loops 3_instruction: Kung tayo ay bibilang sa pamamagitan
        ng mas malaking mga numero, tayo ay bibilang ng mas mataas pa sa parehong
        halaga ng oras. Subukang pabilangin ang Piratang Pegleg mula 10 hanggang sa
        1000, magdagdag ng 10 sa bawat beses.
      Course 4 Play Labs For Loops 4_instruction: |-
        Changing the increment can be
        helpful, but we're still counting linearly (each number is the same distance
        from the last) What if I wanted to count exponentially? Without changing the
        settings in this for loop, can you count 1, 4, 9 , 16, 25... (counter squared)?
      Course 4 Play Labs For Loops 4a_instruction: |-
        Now, let's blend the variables
        from Stage 7 together with your "counter" variable to make some magic happen.   \r
        \r
        In
        this puzzle, Dog will count from 0 to 1000 by "increment".  Set the "increment"
        variable to 10 at the beginning of your code to see what happens.
      Course 4 Play Labs For Loops 5_instruction: |-
        In the last stage we counted the
        square of each number. Try changing "counter ^ 2" to "counter ^ 3" to
        count the cube of each number (1, 8, 27, 64, 125, 216, 343…)
      Course 4 Play Labs For Loops 5a_instruction: |-
        In this puzzle, Dog will be your
        time keeper.\r
        \r
        Dog will count from 0 to 30 by "increment".  The "increment"
        variable will begin with a value of 1.\r
        \r
        Can you make it so that each
        time you click Dog, the increment increases by 2?  Click the forward arrow
        to run the for loop.\r
        \r
        Run the loop a couple of times, clicking Dog before
        each one.
      Course 4 Play Labs For Loops 6_instruction: |-
        You may recall that a prime number
        is any whole number that is only divisible by itself and 1. Use the "is_prime"
        function to speak out only the prime numbers from 1 to 100.
      Course 4 Play Labs For Loops 6a_instruction: |-
        Dog will still keep time by counting
        with our "for loop" by "increment", but this time, we will add The Wizard
        into the mix.  Can you change the code so that "increment" goes up by two
        each time The Wizard is clicked?\r
        \r
        Watch out!  The Wizard moves quickly!
      Course 4 Play Labs For Loops 7_instruction: Maaari ka bang gumamit ng for loop
        para matulungan akong magsalita sa pagkasunod-sunod na 1, 4, 7, 10, 13, 16,
        19, 22, 25?
      Course 4 Play Labs For Loops 7a_instruction: |-
        Now we're getting somewhere!  What
        if we start counting how many times we can click The Wizard before Dog gets
        to 30?  \r
        \r
        Finish adding blocks to The Wizard so that every time he's
        clicked the variable "clicked" increases by one. You can ignore "increment"
        for now.\r
        \r
        Dog will start counting when you click "Run".
      Course 4 Play Labs For Loops 8_instruction: |-
        Now, help the actors move as they
        count.  \r
        \r
        Dog should move and count by adding 2 (counter + 2) each time.  Cat
        will move and count by multiplying by 2 (counter * 2)  each time. Penguin
        will move and count to the power of 2 (counter ^ 2) each time.  Who will reach
        their flag first?
      Course 4 Play Labs For Loops 8a_instruction: |-
        To finish our game, we need to
        bring back the "increment" variable!    Let's tie it to the level of the
        game.\r
        \r
        1) Keep track of the number of times The Wizard is clicked.\r
        2)
        If The Wizard is clicked at least 10 times before Dog counts to 30, raise
        "increment" by 1 and start again.\r
        3) If The Wizard does not get clicked
        at least 10 times, the game is over.
      Course 4 Playlab For Loop Freeplay_instruction: 'Libreng Laro: Gamitin ang lahat
        ng natutunan mo para gumawa ng laro na naglalakip ng isang `for` loop!'
      Course 4 Playlab For Loops 4b_instruction: Maaari mo bang baguhin ang **increment**
        sa isa sa mga loop para ang habulan ay maging isang tie?
      Course 4 Playlab For Loops 5b_instruction: Isaayos ang pagitan sa mga `for`
        loop na ito para ang dalawang karakter ay makarating sa parehong eksaktong
        lugar.
      Course 4 Playlab For Loops 6b_instruction: "Baguhin ang `for` loop na ito para
        makalikha ng isang laro na masaya para paglaruan mo!\\r\nPindutin ang \"Run\"
        at i-click ang Madame Unicorn nang ilang beses hangga't kaya mo. Matatalo
        mo ba ang aming iskor na 24? "
      Course 4 SCF 1_instruction: Gamit ang iminungkahing mga function para magguhit
        ng apat na hanay ng mga hexagon. Napansin kung paano ang ating hanay na may
        bilang na tukol ay inilipat pakanan?
      Course 4 SCF 1a_instruction: Maaari mo bang malaman kung paano kolektahin ang
        lahat ng mga nektar na ito gamit ang pinakakaunting mga bloke hangga't maaari?
      Course 4 SCF 1b_instruction: Maaari mo bang malaman kung paano kolektahin ang
        lahat ng mga pulot na ito gamit ang pinakakaunting mga bloke hangga't maaari?
      Course 4 SCF 2_instruction: 'Gamitin ang natutunan mo sa mga nakaraang antas
        para makaguhit ng larawan gaya nito. Tandaan: Ang code ay mas magiging simple
        kapag isinama mo ang mga parameter. '
      Course 4 SCF 3 Fail 1_instruction: Can you figure out how to...
      Course 4 SCF 3 Fail 2_instruction: Can you figure out how to...
      Course 4 SCF 3_instruction: 'Gamitin ang natutunan mo sa mga nakaraang antas
        para makaguhit ng larawan gaya nito. Tandaan: Ang code ay mas magiging simple
        kapag isinama mo ang mga parameter. '
      Course 4 SCFL 1_instruction: Lutasin ang palaisipang ito gamit ang pinakakaunting
        bilang ng mga bloke hangga't maaari.
      Course 4 SCFL 1a_instruction: Maaari mo bang ipakuha kay Scrat ang kanyang ensina
        gamit ang kaunting mga bloke hangga't maaari?
      Course 4 SCFL 1b_instruction: Maaari mo bang ipakuha kay Scrat ang kanyang ensina
        gamit ang kaunting mga bloke hangga't maaari?
      Course 4 SCFL 2_instruction: Lutasin ang palaisipang ito gamit ang pinakakaunting
        bilang ng mga bloke hangga't maaari.
      Course 4 SCFL 3_instruction: Maaari mo bang matukoy kung paano ilikha ulit ang
        drowing na ito?
      Course 4 SCFL 4_instruction: Maaari mo bang matukoy kung paano ilikha ulit ang
        drowing na ito?
      Course 4 SCFL 5_instruction: Maaari mo bang matukoy kung paano ilikha ulit ang
        drowing na ito?
      Course 4 SCFL 6_instruction: Maaari mo bang matukoy kung paano iguhit ulit ang
        drowing na ito gamit ang isang loop?
      Course 4 SCFL 7_instruction: Ang arista ay gustong makaranas ng ilang mga alon!
        Maaari mo bang malaman kung paano iguhit muli ang drowing na ito?
      Course 4 SCFP 1_instruction: |-
        Create a function with parameters that allows
        the artist to jump backward and forward by x pixels, and also up and down
        by y pixels (using positive and negative numbers).
      Course 4 SCV 1_instruction: Mag-click dito para matingnan ulit ang mga instruksyon.
      Course 4 SCV 2_instruction: Mag-click dito para matingnan ulit ang mga instruksyon.
      Course 4 SCV 3_instruction: |-
        Ngayon para sa isang laro ng tag! Mag-tag sa Pusa para makakuha ng 2 puntos. Mag-tag sa Pingguwino para makakuha ng 3 puntos. Kumuha ng esksaktong 10 points para manalo!\r
        Ngunit mag-ingat, kapag ang Pusa at ang Pingguwino ay mag-tag sa bawat isa, sila ay kukuha ng puntos.\r
        \r
        Magdagdag ng mga blokeng kinakailangan para gagana ang larong ito sa paraaan na ipinapaliwanag. Paano mo pagalawin ang Aso sa lahat ng mga direksyon gamit ang mga arrow keys? Paaano mo idadag ang mga puntos kapag ang Aso ay naka-tag sa Pusa o Pingguwino? Paano mo tatanggalin ang puntos kapag ang Pusa at Pingguwino ay nagkahawakan?
      Course 4 SCV 4_instruction: Lutasin ang palaisipang ito gamit ang pinakakaunting
        bilang ng mga bloke hangga't maaari.
      Course 4 SCV 5_instruction: Lutasin ang palaisipang ito gamit ang pinakakaunting
        bilang ng mga bloke hangga't maaari.
      Course 4 SCV 6_instruction: Mag-click dito para matingnan ulit ang mga instruksyon.
      Course 4 SCVP 1_instruction: |-
        Create a function with parameters that allows
        the artist to jump backward and forward by x pixels, and also up and down
        by y pixels (using positive and negative numbers).
      Course 4 Variables Assessment_instruction: |-
        Can you create this image using
        a variable for sides? Each line should be 50 pixels long.
      Course1BeePuzzle12_instruction: Kumuha ng tatlong mga nektar at pagkatapos ay
        gumawa ng dalawang pulot
      Course1MazeAssessment1_instruction: |-
        This is a test!\r
        Move one way, then
        another to get me to the pig
      Course1MazeAssessment2_instruction: |-
        This is a test!\r
        Move one way, then
        another to get me to the pig.
      CourseF_PlayLab_vars1_instruction: 'Para makalaro sa larong ito, hindi mo kailangang
        magsulat ng kahit anumang code, pindutin lang ang "Run"! '
      CourseF_PlayLab_vars10_instruction: |-
        Oras para sa Libreng Laro! Narito ang lahat ng mga variable na napaglaruan natin sa yugtong ito pati na rin ang karagdagang mga kaso na gusto mo ang mga ito.\r
        \r
        Pansinin na mayroon na ngayong napakaraming mga bloke sa ating toolbox na kailangan nilang ayusin! Dito, naglagay kami sa bawat piraso sa isang angkop na kategorya. Maglaan ng ilang oras para tuklasin ang lahat na maaaring magamit. Kapag tapos ka nang mag-browse, gumawa ng isang laro o kuwento gamit ang mga repeat, mga variable, at mga pangyayari. \r
        \r
        Higing: mag-scroll sa baba para makita ang lahat ng mga utos sa loob ng workspace.
      CourseF_PlayLab_vars2_instruction: Ang habulan sa huling palaisipan ay hindi
        talaga patas! Palitan ang `dog_speed` na variable para masiguro na makakolekta
        ka ng mas maraming mga bandila kaysa sa Pusa. Ang unang makakakolekta ng 10
        mga bandila ang mananalo!
      CourseF_PlayLab_vars3_instruction: Gamitin ang kaliwa at kanang mga arrow para
        makagalaw, at ang pataas na arrow para makatalon. Tingnan kung makokolekta
        mo ang lahat ng mga bandila.
      CourseF_PlayLab_vars4_instruction: Ngayon ay gumagamit tayo ng variable na tinatawag
        na "height" para makontrol kung gaano kataas ang maaaring matalon ng aso.
        I-update ang "height" na variable para makatalon ang aso ng sapat na taas
        para maabot ang lahat ng mga bandila.
      CourseF_PlayLab_vars5_instruction: 'Tayo ay bubuo ng isang laro! Una ay kakailanganin
        natin ng iskor. Muling ibuo ang code na nakita mo sa huling antas para itakda
        ang puntos sa 10. '
      CourseF_PlayLab_vars6_instruction: |-
        Gamitin ang kanang arrow para itapon ang pie.\r
        \r
        Sa ating laro, paano dapat tayo makaiskor ng puntos? Magdagdag ng 1 sa iyong "points" na variable sa bawat beses na matamaan ng Aso ang Pusa sa piraso ng pie. Gamitin ang "when actor 2 touches anything" na pangyayari para mag-trigger ng update sa iyong puntos. Maaari kang magdagdag sa iyong variable sa pamamagitan ng pagtakda ng "points = points + 1." Paabutin ang iyong iskor sa 10 para (tataas ng isa sa bawat beses!) mapasa ang antas.
      CourseF_PlayLab_vars7_instruction: |-
        Gamitin ang kanang arrow para itapon ang pie.\r
        \r
        Sa ating laro, paano dapat tayo makaiskor ng puntos? Magdagdag ng 1 sa iyong "points" na variable sa bawat beses na matamaan ng Aso ang Pusa sa piraso ng pie. Gamitin ang "when actor 2 touches anything" na pangyayari para mag-trigger ng update sa iyong puntos. Maaari kang magdagdag sa iyong variable sa pamamagitan ng pagtakda ng "points = points + 1." Paabutin ang iyong iskor sa 10 para (tataas ng isa sa bawat beses!) mapasa ang antas.
      CourseF_PlayLab_vars8_instruction: |-
        Gamitin ang kanang arrow para itapon ang pie.\r
        \r
        Sa ating laro, paano dapat tayo makaiskor ng puntos? Magdagdag ng 1 sa iyong "points" na variable sa bawat beses na matamaan ng Aso ang Pusa sa piraso ng pie. Gamitin ang "when actor 2 touches anything" na pangyayari para mag-trigger ng update sa iyong puntos. Maaari kang magdagdag sa iyong variable sa pamamagitan ng pagtakda ng "points = points + 1." Paabutin ang iyong iskor sa 10 para (tataas ng isa sa bawat beses!) mapasa ang antas.
      CourseF_PlayLab_vars9_instruction: Mahusay, ngayon ay ating sisiguradohin na
        ang laro ay hindi masyadong madaling laruin. Anumang oras na ang Aso (aktor
        1) ay matatamaan ng sandwich mula sa Pusa (aktor 2), dapat ay mawawalan ka
        ng puntos. Magsimula sa 10 na puntos para ito ay hindi masyadong mahirap.
        Hayaan ang iyong iskor na bababa mula 10 hanggang sa 0 para maipasa ang antas.
      Crack Random Substitution_instruction: Alituntunin
      Crack a Caesar Cipher_instruction: Alituntunin
      D_Frozen_nested3_instruction: Ating iikot ang linya ng mga hugis sa paligid!
      D_Frozen_nested4_instruction: Panahon na para ipagpatung-patung ang mga hugis
        na ito!
      D_Frozen_nested5_instruction: Paglaruan ang mga niyebe!
      D_Frozen_nested6_instruction: |-
        Draw a stair-step pattern that uses turns between
        75 and 105 degrees.
      D_Frozen_nested7_instruction: |-
        Now, turn around 180 degrees and draw the stair
        pattern again!
      D_Frozen_nested8_instruction: Spin that shape around 5 or 6 times in a circle.
      D_Frozen_nested9_instruction: |-
        Try playing around with what you've created.
        Draw whatever you like!\r
        - What happens if you use two different angles
        in your stair step pattern?\r
        - What happens if you make your diamond pattern
        longer or shorter?\r
        - What does it look like to draw two snowflakes on top
        of one another?
      ECSPD Binary Odometer_instruction: |-
        This is another resource you could use
        with your students.
      Eval Booleans 1_instruction: |-
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |-
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |-
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |-
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |-
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |-
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |-
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |-
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |-
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |-
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |-
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |-
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |-
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |-
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |-
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: |-
        Write a function called food-critic, which takes
        in the name of a food and produces a String that says how you feel about that
        food. For example, (food-critic “pizza”) might evaluate to “delicious”, but
        (food-critic “rotten eggs”) might evaluate to “gross!”. Choose at least two
        foods to review, but you can you write more if you like!  Don’t forget to
        add an “else” clause!\r
        One example - and part of the definition -  has already
        been done for you!
      Eval Cond 7_instruction: |
        Free Play: Write a function called green-shape, which
        takes in the name of a shape and produces a solid green shape. Your function
        should work with at least “circle”, “star” and “rectangle”, but you can add
        other shapes if you like. You can choose the size of each shape. Don’t forget
        to add an “else” clause!\r
        One example - and part of the definition -  has
        already been done for you!\r
      Eval Cond 8_instruction: |
        Free Play: Suppose you want to own a car at 21, or
        have your own business by 30. Write a function called life-goals, which takes
        in an age and produces a string that describes your life goals by then. Don’t
        forget to add an “else” clause!\r
      Eval Contracts 1_instruction: |-
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |-
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |-
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |-
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |-
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |-
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |-
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |-
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |-
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |-
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |-
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: "Can you complete this image using the \"shrink\"\nfunction
        block? The radius is 20. "
      Eval Define Funcs 1_instruction: |-
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |-
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |-
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |-
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |-
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radii of 25, 50, and 75.
      Eval Define Funcs Test_instruction: |-
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Defining Vars Free Play 1_instruction: |-
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |-
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |-
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |-
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |-
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |-
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |-
        The Design Recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition? The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |-
        Use the Design Recipe to create a function
        starburst. When given a number of points and an outer radius, starburst returns
        a yellow radial star with given points, and an inner radius that is half the
        outer radius.
      Eval Design Recipe 5_instruction: |-
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |-
        Write a function large-polygon that should
        output a solid polygon of given sides and color that takes up most of the
        window, regardless of the number of sides. To make sure that the polygon doesn't
        get too large as you increase the number of sides, side length should be inversely
        proportional to side number, with a length of (800/sides).
      Eval Design Recipe Free Play_instruction: |-
        Free Play: Use the Design Recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |-
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |-
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |-
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |-
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |-
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |-
        Try using the rectangle block to draw this
        solid, red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |-
        Try using this new Evaluation Block called
        overlay to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |-
        Use the overlay block to place a 75 pixel
        radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |-
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |-
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |-
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      Farmer for Authored Hint testing_instruction: |-
        Wow, I found a really deep hole!
        I don't know how many shovelfuls of dirt it needs.  Can you write a program
        that fills it until the ground is even?  Hint:  Try using the while loop this
        time.
      Farmer for TTS testing_instruction: |-
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      Finalize Your Chaser Game v.1_instruction: |-
        Introducing the setPosition command!
        Replace the moveTo in the button-click event handler to use setPosition to
        move the button itself to a random location when it's clicked.
      Find the Wizard_instruction: Bumuo ng anumang gusto mo. Ito ay isang halimbawa
        ng laro na paghula ng numero!
      Find the Wizard_2018_instruction: Bumuo ng anumang gusto mo. Ito ay isang halimbawa
        ng laro sa paghula ng numero!
      Food Fight!_instruction: "We've added one last function for you. \\r\n\\r\nUse\nan
        \"if\" statement to program your game to call the \"level_up\" function\nonly
        when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample:
        \"player_score\" > 6\\r\n\\r\nPlay the game, and make it to level 3\nto move
        to the next puzzle. "
      Food Fight_instruction: |-
        You can make whatever you want in play lab! This is
        an example of a game you can make in play lab.
      FoodFight_instruction: Ito ay isang halimbawa ng laro na maaari mong gawin sa
        play lab.
      FoodFight_2018_instruction: Ito ay isang halimba ng laro na maaari mong gawin
        sa play lab.
      Frequency Analysis_instruction: Test
      Function intro Ryan_instruction: Gamitin ang `build_bridge` na function nang
        dalawang beses para makagawa ng landas sa Restone Torch.
      GLJ Drag and fall_instruction: |-
        This Corgi has been a good boy! Drag this carrot
        to him as a special treat.
      GLJ Dragity_instruction: |-
        This Corgi has been a good boy! Drag this carrot
        to him as a special treat.
      GLJ Flappy2_instruction: Click to flap - don't touch the ground!
      GLJr_Behavior_1_instruction: |-
        On your worksheet, write what you think the dog
        will do when you click "Run."
      GLJr_Behavior_2_instruction: |-
        Now you have some new blocks! Try them out and
        see how they work. On your worksheet, write down which ones you tried, and
        what they do.
      GLJr_Behavior_5_instruction: |-
        Now we have two sprites! Use behaviors to make
        the dog jittery and make the cat wander
      GLJr_Behavior_6_instruction: |-
        Let's try some more behaviors - make the dog
        run up and make the cat run right.
      GLJr_Forever_1_instruction: |-
        On your worksheet, write what you think the dog
        will do when you click "Run."
      GLJr_Forever_2_instruction: |-
        Now you have some new blocks! Try them out and
        see how they work. On your worksheet, write down which ones you tried, and
        what they do.
      GLJr_Forever_5_instruction: |-
        Now we have two sprites! Use a loop to make the
        dog jittery and make the cat wander
      'Game Lab Workshop: Random_instruction': |-
        Pick a shape block and use calls
        to randomNumber() in place of one or more of the parameters. Maker sure you
        run it a few times so you can see the effect of randomization.
      Geometric Pattern_instruction: |-
        Project Idea: Create a pattern using geometric
        ideas like shapes. This requires persistence and planning!
      Geometric Sun_instruction: 'Ideya ng Proyekto: Maglikha ng pattern gamit ang
        mga geometrikong mga ideya gaya ng mga hugis. Ito ay nangangailangan ng pagtitiyaga
        at pagpaplano!'
      Geometric Sun_2018_instruction: |-
        Project Idea: Create a pattern using geometric
        ideas like shapes. This requires persistence and planning!
      Get To The Goal_instruction: Bumuo ng anumang gusto mo. Ito ay isang halimbawa
        ng laro na paghula ng numero!
      'Grade 4 Example PlayLab Project #1_instruction': |-
        Take a look at this project.  Do
        you see how it was made?
      'Grade 4 Example PlayLab Project #2_instruction': |-
        Take a look at this project.  Do
        you see how it was made?
      Guess The Number 2_instruction: Bumuo ng anumang gusto mo. Ito ay isang halimbawa
        ng laro sa paghula ng numero!
      Guess The Number_instruction: Bumuo ng anumang gusto mo. Ito ay isang halimbawa
        ng laro sa paghula ng numero!
      Guess The Number_2018_instruction: Bumuo ng anumang gusto mo. Ito ay isang halimbawa
        ng laro sa paghula ng numero!
      Harvester Test_instruction: |-
        It's harvest time! But I forgot what crop I planted
        at which tile. Please help me harvest all my crops, no matter how they were
        originally planted!
      Harvesting_instruction: |-
        Uh oh, I lost my map and can't remember what I planted.
        Every sprout could grow up to be corn, beans, or pumpkins. Can you write some
        code to pick all the crops, no matter what they are?
      Infinity_catch_instruction: Maaari mo bang mapahabol si Elsa ("aktor 2") kay
        Anna gamit ang mga arrow keys?
      Infinity_finale_instruction: Ilikha ang anumang gusto mo at ibahagi ang mga
        ito!
      Infinity_move_collide_instruction: Si Hiro ay ang "aktor 1". Pagalawin siya
        malapit kay Baymax, at magpatugtog ng tunog kapay sila ay nagkahawak.
      Infinity_move_directions_instruction: Si Baymax ay ang "aktor 2". Magdagdag
        ng mga Move na bloke at pagkatapos ay pagalawin si Baymax gamit ang mga arrow.
        Pahawakin siya sa dalawa pang ibang mga karakter.
      Infinity_move_right_instruction: Si Hiro ay ang "aktor 1". Gamitin ang Move
        na bloke para tamang mapagalaw si Hiro para makahawak kay Baymax.
      Infinity_repeat_instruction: Gumamit ng "repeat forever" na bloke para mapagalaw
        si Anna pataas at pababa ng 400 pixels.
      Infinity_say_instruction: Pasabihin si Anna ng "Hi there." gamit ang Say na
        bloke.
      Infinity_shoot_instruction: Si Baymax ay ang "aktor 2". Gawin si Baymax na maghagis
        ng Rocket kay Hiro.
      Infinity_shoot_directions_instruction: Si Hiro ay ang "aktor 3". Gawin si Hiro
        na maghagis na isang projectile sa bawat isa sa apat na mga karakter. Maghintay
        ng isang segundo sa pagitan ng bawat paghagis.
      Infinity_test_instruction: This is a test Infinity level.
      Infinity_touch_faster_instruction: Hawakan ang mas marapi pang mga niyebe!
      Infinity_touch_four_instruction: Pagalawin si Anna pataas, pababa sa kaliwa,
        at pakatanan para mahawakan ang bawat isa sa apat na mga niyebe.
      Infinity_touch_score_instruction: Gawin si Anna na maka-puntos kapag nakahawak
        siya ng isang niyebe. Pagkatapos ay pindutin ang "Run" at pakilusin siya para
        makahawak sa bawat niyebe nang isang beses.
      Inspirational Artwork_instruction: "Free Play Inspiration: You've now learned\neverything
        you need to know to make a pattern like this! If this picture inspires\nyou,
        try to make something similar. Otherwise, create something all your own.\\r\n\n\\r\nWant
        to know how our inspiration pattern was made? "
      InspirationalArtwork_instruction: Kung ang larawang ito ay nagbigay-inspirasyon
        sa iyo, subukang gumawa ng isang bagay na katulad nito. Kung hindi, lumikha
        ng isang bagay na sarili mo.
      InspirationalArtwork_2018_instruction: Kung ang larawang ito ay nagbigay-inspirasyon
        sa iyo, subukang gumawa ng isang bagay na katulad nito. Kung hindi, lumikha
        ng isang bagay na sarili mo.
      'Internet Simulator: Broadcast Mode_instruction': |
        Now use the Internet Simulator
        to send the battleship moves. For setup, join a Room with your group, and
        add ships to your paper board for each opponent. When playing, all communication
        must be done through the tool, so no talking, but have fun!\r
      'Internet Simulator: Broadcast_instruction': |
        Now use the Internet Simulator
        to send the battleship moves. For setup, join a Room with your group, and
        add ships to your paper board for each opponent. When playing, all communication
        must be done through the tool, so no talking, but have fun!\r
      'Internet Simulator: Broadcast_2018_instruction': |
        Now use the Internet Simulator
        to send the battleship moves. For setup, join a Room with your group, and
        add ships to your paper board for each opponent. When playing, all communication
        must be done through the tool, so no talking, but have fun!\r
      'Internet Simulator: DNS Mode_instruction': |-
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: DNS_instruction': |-
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: DNS_2018_instruction': |-
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      'Internet Simulator: Packets_instruction': |-
        Develop a Protocol for Reliably
        Sending a Message.\r
        \r
        Constraints:\r
        - Packets may contain only 8 characters\r
        -
        Packets may drop with small probability\r
        - Packets may not arrive in order
      'Internet Simulator: Packets_2018_instruction': |-
        Develop a Protocol for Reliably
        Sending a Message.\r
        \r
        Constraints:\r
        - Packets may contain only 8 characters\r
        -
        Packets may drop with small probability\r
        - Packets may not arrive in order
      'Internet Simulator: Routers_instruction': |-
        Send messages with your classmates
        (Click to see full instructions)
      'Internet Simulator: Routers_2018_instruction': |-
        Send messages with your classmates
        (Click to see full instructions)
      'Internet Simulator: Sending Binary Messages 1_instruction': "Develop, document,\nand
        test a protocol that allows you to use Internet Simulator to relay a message.\nSee
        the worksheet for more detailed instructions.  "
      'Internet Simulator: Sending Binary Messages_instruction': "Develop, document,\nand
        test a protocol that allows you to use Internet Simulator to relay a message.\nSee
        the worksheet for more detailed instructions.  "
      'Internet Simulator: Sending Binary Messages_2018_instruction': "Develop, document,\nand
        test a protocol that allows you to use Internet Simulator to relay a message.\nSee
        the worksheet for more detailed instructions.  "
      'Internet Simulator: Sending Numbers_instruction': |-
        With your partner, develop
        a protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      'Internet Simulator: Sending Numbers_2018_instruction': |-
        With your partner,
        develop a protocol or set of rules for communicating a drawing using only
        bits. See the worksheet handed out by your teacher for more detailed instructions!
      'Internet Simulator: Sending Text_instruction': |-
        Work with a partner or in
        a small team to develop a protocol that allows you to send formatted text.
        See the worksheet handed out by your teacher for more detailed instructions!
      'Internet Simulator: Sending Text_2018_instruction': |-
        Work with a partner or
        in a small team to develop a protocol that allows you to send formatted text.
        See the worksheet handed out by your teacher for more detailed instructions!
      Just for Testing_instruction: Test instructions
      K-1 Artist 1 Assessment 1_instruction: Gumuhit ng isang maikling linya sa taas
        at isang mahaba pakanan!
      K-1 Artist Loops 1_instruction: Iguhit ang linyang ito sa pamamagitan ng paggalaw
        papuntang Silangan nang apat na beses.
      K-1 Artist Loops 2_instruction: Ngayon, iguhit ang parehong linya gamit ang
        loop.
      K-1 Artist Loops 3_instruction: Maaari mo bang i-loop ang mga blokeng ito para
        maiguhit ang 6 na mga linya?
      K-1 Artist Loops 4_instruction: Makakatulong ba ang loop para maguhit natin
        ang sa taas ng kastilyong ito?
      K-1 Artist Loops 5_instruction: Ano ang maaari mong i-loop nang 4 na beses para
        maguhit ang hagdanang ito?
      K-1 Artist Loops 6_instruction: 'Ang isang ito ay nangangailangan ng dalawang
        loop: isa para aakyat sa mga hagdanan at isa para makababa.'
      K-1 Artist Loops 7_instruction: Ang mga loop ay maaaring makatulong sa iyo para
        tapusin ang pattern na ito.
      K-1 Artist Loops 8_instruction: Ang hagdanang ito ay may mataas na mga hakbang.
      K-1 Artist Loops 9_instruction: Ano ang pinakamadaling paraan para maiguhit
        ang mga hagdanang ito?
      K-1 Artist Loops Free Play_instruction: Libreng laro, gumuhit ng isang bagay
        na masaya!
      K-1 Artist1 1_instruction: Iguhit ang paa ng tao gamit ang isang linya
      K-1 Artist1 10_instruction: Gumuhit at Magtalon para magawa ang naka-dash na
        landas papunta sa kayamanang X
      K-1 Artist1 2_instruction: Iguhit ang bigote sa pusa gamit ang dalawang linya!
      K-1 Artist1 3_instruction: Iguhit ang dalawang linya papuntang silangan at dalawang
        linya papunta sa hilaga para matapos ang bahay!
      K-1 Artist1 4_instruction: Gumuhit ng mga linya pataas, paibabaw, at pababa
        para makumpleto ang kastilyo!
      K-1 Artist1 5.5_instruction: Kumpletohin ang pangatlong tore ng kastilyo gamit
        ang maiikling mga linya
      K-1 Artist1 5_instruction: Iguhit ang tangkay ng bulaklak na ito gamit ang dalawang
        linya!
      K-1 Artist1 6_instruction: Tapusin ang larawan sa pamamagitan ng paggamit ng
        jump na bloke!
      K-1 Artist1 7_instruction: Gamitin ang jump na bloke para mapagalaw nang hindi
        nagguguhit. Magtalon pataas at magguhit ng linya.
      K-1 Artist1 8_instruction: Iguhit ang naka-dash na linya gamit ang parehong
        jump at draw na mga bloke
      K-1 Artist1 9_instruction: Draw at Jump para makagawa ng dashed na linya
      K-1 Artist1 Assessment 1_instruction: Iguhit ang maikli at mahabang mga linya!
      K-1 Artist1 Assessment 2_instruction: Iguhit ang maikling dashed na mga linya!
      K-1 Artist2 1_instruction: Iguhit ang isang parisukat sa ibaba ng tatsulok.
      K-1 Artist2 2_instruction: Tumalon at gumuhit ng parisukat sa tabi ng bahay.
      K-1 Artist2 3_instruction: Gumuhit ng parisukat sa itaas ng isa pang parisukat
      K-1 Artist2 4_instruction: Gumuhit ng isang parihaba para makumpleto ang tulay.
      K-1 Artist2 5_instruction: Gumuhit ng isang parihaba para makumpleto ang mga
        suporta ng tulay
      K-1 Artist2 6_instruction: Gumuhit ng dalawang parisukat para makagawa ng parihaba!
      K-1 Artist2 Assessment1_instruction: 'Pagtatasa: Gumuhit ng isang parisukat
        sa tabi ng isa pang parisukat.'
      K-1 Artist2 Free Draw_instruction: Gumuhit ng kahit ano!
      K-1 Artist2_7_instruction: Gumuhit ng isang parihaba para mabigyan ang tokador
        ng pangtaas na kalsunsilyo!
      K-1 Bee 1_instruction: Ilipat ako sa bulaklak, kunin ang nektar, pagkatapos
        ilipat ako sa pulot-pukyutan, at gumawa ng pulot
      K-1 Bee 10_instruction: Kumuha nang apat na nektar at pagkatapos ay gumawa ng
        dalawang pulot!
      K-1 Bee 11.5_instruction: Kumuha ng apat na nektar para makagawa ng apat na
        pulot!
      K-1 Bee 11_instruction: Kumuha ng tatlong nektar at pagkatapos ay gumawa ng
        isang pulot
      K-1 Bee 12_instruction: Kumuha ng tatlong nektar at pagkatapos ay gumawa ng
        dalawang pulot!
      K-1 Bee 13_instruction: Kumuha ng tatlong nektar at pagkatapos ay gumawa ng
        isang pulot!
      K-1 Bee 14_instruction: Dalhin ako sa nektar, dampotin ito, dalhin ako sa pulot-pukyutan,
        at gumawa ng pulot!
      K-1 Bee 15_instruction: Kumuha ng dalawang nektar para makagawa ng dalawang
        pulot!
      K-1 Bee 2_instruction: Ilipat ako sa bulaklak, kunin ang nektar, pagkatapos
        ilipat ako sa pulot-pukyutan, at gumawa ng pulot
      K-1 Bee 3_instruction: Ilipat ako sa bulaklak, kunin ang nektar, pagkatapos
        ilipat ako sa pulot-pukyutan, at gumawa ng pulot
      K-1 Bee 4_instruction: Kumuha ng dalawang nektar at pagkatapos ay gumawa ng
        dalawang pulot!
      K-1 Bee 5_instruction: Kumuha ng tatlong nektar at pagkatapos ay gumawa ng tatlong
        pulot!
      K-1 Bee 6_instruction: Kumuha ng dalawang nektar at pagkatapos ay gumawa ng
        dalawang pulot!
      K-1 Bee 7_instruction: Kumuha ng tatlong nektar at pagkatapos ay gumawa ng dalawang
        pulot!
      K-1 Bee 8_instruction: Kumuha ng dalawang nektar at pagkatapos ay gumawa ng
        dalawang pulot!
      K-1 Bee 9_instruction: Kumuha ng dalawang nektar at pagkatapos ay gumawa ng
        dalawang pulot!
      K-1 Bee Assessment 1_instruction: Kumuha ng nektar para gumawa ng pulot!
      K-1 Bee Assessment 2_instruction: Kumuha ng nektar para gumawa ng pulot!
      K-1 Bee Loops 1_instruction: Kunin ang nektar para makagawa ng pulit!
      K-1 Bee Loops 10_instruction: Kunin ang lahat ng nektar at gawing pulot ang
        lahat.
      K-1 Bee Loops 11_instruction: Kunin ang lahat ng nektar at pulot!
      K-1 Bee Loops 12_instruction: Kunin ang lahat ng nektar at ang lahat ng pulot.
      K-1 Bee Loops 2_instruction: Gumamit ng `repeat` na loop para makagalaw at pagkatapos
        ay kumuha ng nektar at gumawa ng pulot!
      K-1 Bee Loops 3_instruction: Gumamit ng tatlong `repeat` na mga loop para makakuha
        ng nektar at makagawa ng pulot!
      K-1 Bee Loops 4_instruction: Gumamit ng `repeat` na mga loop para makakuha ng
        nektar, gumawa ng pulot, at para makagalaw!
      K-1 Bee Loops 5_instruction: Gumamit ng `repeat` na mga loop para makakuha ng
        nektar at pulot!
      K-1 Bee Loops 6_instruction: Gumamit ng `repeat` na loop para makakuha ng nektar,
        makakuha ng pulot, at para makagalaw!
      K-1 Bee Loops 7_instruction: Kumuha ng nektar at gumawa ng pulot!
      K-1 Bee Loops 8_instruction: Kumuha ng nektar at gumawa ng pulot!
      K-1 Bee Loops 9_instruction: Kunin ang lahat ng nektar at gawing pulot ang lahat.
      K-1 Bee Loops Assessment 1_instruction: Kumuha ng nektar para makagawa ng pulot
        at gumamit ng mga loop para makagalaw!
      K-1 Bee Loops Assessment 2_instruction: Kumuha ng nektar para makagawa ng pulot
        gamit ang mga loop!
      K-1 Bee Puzzle 12_instruction: Kumuha ng tatlong mga nektar at pagkatapos ay
        gumawa ng dalawang pulot
      K-1 Building a Foundation Assessment_instruction: Bumuo ng tatlong palapag na
        piramid, walang ibang mga direksyon, kaya paglaruan lang ang mga piraso hanggang
        makuha mo ito!
      K-1 Maze 10_instruction: 'Lumibot sa TNT para makapunta sa baboy! '
      K-1 Maze 11_instruction: 'Sundin ang daan at gabayan ako sa pasaway na baboy.
        Iwasan ang TNT para hindi lilipad ang mga balahibo! Higing: Siya ay nasa Timog
        ko.'
      K-1 Maze 2_instruction: Dalhin ako sa Kanluran para marating ko ang baboy!
      K-1 Maze 3_instruction: Dalhin ako sa Timog para marating ko ang baboy!
      K-1 Maze 4_instruction: Dalhin ako sa Hilaga para marating ko ang baboy!
      K-1 Maze 5_instruction: Dalhin ako sa Kanluran para marating ko ang baboy!
      K-1 Maze 6_instruction: Dumaan sa isang daan, pagkatapos ay sa isa pa para maabot
        ko ang babay!
      K-1 Maze 7_instruction: Dumaan sa isang daan, pagkatapos ay sa isa pa para maabot
        ko ang babay!
      K-1 Maze 8_instruction: Dumaan sa isang daan, pagkatapos ay sa isa pa para maabot
        ko ang babay!
      K-1 Maze 9_instruction: Dumaan sa isang daan, pagkatapos ay sa isa pa para maabot
        ko ang babay!
      K-1 Maze Assessment 1_instruction: Pagtatasa -- Dalhin ako sa baboy!
      K-1 Maze Assessment 12_instruction: Antas ng Pagtatasa
      K-1 Maze Assessment 13_instruction: Antas ng Pagtatasa
      K-1 Maze Assessment 2_instruction: Pagtatasa -- Dalhin ako sa baboy!
      K-1 Maze Loops 1_instruction: Dalhin ako sa baboy!
      K-1 Maze Loops 10_instruction: Dalhin ako sa baboy! Ang paggamit ng `repeat`
        na loop ay mas magpapadali nito.
      K-1 Maze Loops 11_instruction: |-
        Dalhin ako sa baboy! \r
        Ang `repeat` na loop ay magpapadali nito.
      K-1 Maze Loops 12_instruction: Dalhin ako sa baboy! Ang `repeat` na loop ay
        magpapadali nito.
      K-1 Maze Loops 2_instruction: Gamitin ang `repeat` na bloke para mapapunta ako
        sa baboy!
      K-1 Maze Loops 3_instruction: Dalhin ako sa baboy! Siguraduhing gumamit ng mga
        `repeat` na mga loop.
      K-1 Maze Loops 4_instruction: Dalhin ako sa baboy!
      K-1 Maze Loops 5_instruction: Dalhin ako sa baboy! Siguraduhing gumamit ng mga
        `repeat` na mga loop.
      K-1 Maze Loops 6_instruction: Dalhin ako sa baboy! Siguraduhing gumamit ng mga
        `repeat` na mga loop.
      K-1 Maze Loops 7_instruction: Dalhin ako sa baboy! Siguraduhing gumamit ng mga
        `repeat` na mga loop.
      K-1 Maze Loops 8_instruction: Gamitin ang `repeat` na mga loop para mapapunta
        ako sa baboy.
      K-1 Maze Loops 9_instruction: Dalhin ako sa baboy!
      K-1 Maze Loops Assessment 1_instruction: Tingnan ang lahat nang ating natutunan!
        Gumamit ng `repeat` na loop para mapapunta ako sa baboy!
      K-1 Maze Loops Assessment 2_instruction: Gumamit ng `repeat` na mga loop para
        mapapunta ako sa baboy!
      K-1 Maze Multi 14_instruction: Antas ng Pagtatasa
      K-1 Maze Multi 15_instruction: Antas ng Pagtatasa
      K-1 Maze Sequence Assessment 1_instruction: |-
        Tingnan kung ano ang natutunan mo!\r
        Dumaan sa isang daan, pagkatapos ay sa isa pa para makapunta ako sa baboy.
      K-1 Maze Sequence Assessment 2_instruction: Dumaan sa isang daan, pagkatapos
        ay sa isa pa para makapunta ako sa baboy.
      K-1 Maze debug Assessment 1_instruction: Pagtatasa -- I-debug ang antas na ito
        sa pamamagitan ng pagbago ng ayos at pagdagdag ng mga bloke para makapunta
        ako sa baboy!
      K-1 artist 1 level 10_instruction: Gumuhit ng dashed na linya gamit ang parehong
        jump at draw na mga bloke
      K-1 artist 1 level 9_instruction: Iguhit ito gamit ang tatlong linya
      K-1 maze debug 1_instruction: Palitan ang code para makapunta ako sa baboy!
      K-1 maze debug 10_instruction: I-debug ang antas na ito sa pamamagitan ng pag-iba
        ng ayos at pagbago sa mga bloke para mapapunta ako sa baboy!
      K-1 maze debug 11_instruction: |-
        Ito ay isang pagtatasa!\r
        I-debug ang antas na ito sa pamamagitan ng pag-iba ng ayos at pagbago sa mga bloke para makapunta ako sa baboy
      K-1 maze debug 2_instruction: Alamin kung ano ang nawawala at pagkatapos magdagdag
        ng mga bloke para makapunta ako sa baboy!
      K-1 maze debug 3_instruction: May isang bagay na hindi tama. TANGGALIN ang mga
        bloke para makapunta ako sa baboy!
      K-1 maze debug 4_instruction: Daanan ang mga blokeng ito at ayusin ang mga ito!
        Sa palagay ko, ako ay parang papunta sa maling direksyon.
      K-1 maze debug 5_instruction: I-debug ang antas na ito sa pamamagitan ng pag-iba
        ng ayos at pagbago sa mga bloke para mapapunta ako sa baboy!
      K-1 maze debug 6_instruction: I-debug ang antas na ito sa pamamagitan ng pag-iba
        ng ayos at pagbago sa mga bloke para mapapunta ako sa baboy!
      K-1 maze debug 7_instruction: I-debug ang antas na ito sa pamamagitan ng pag-iba
        ng ayos at pagbago sa mga bloke para mapapunta ako sa baboy!
      K-1 maze debug 8_instruction: I-debug ang antas na ito sa pamamagitan ng pag-iba
        sa ayos at pagdagdag ng mga bloke para makapunta ako sa baboy!
      K-1 maze debug 9_instruction: I-debug ang antas na ito sa pamamagitan ng pag-iba
        ng ayos at pagbago sa mga bloke para mapapunta ako sa baboy!
      K2.0 sequence 1_instruction: Isang bug! Ayusin ang code para makapunta ako sa
        baboy.
      K2.0 sequence 10_instruction: |-
        Challenge: Move me around the TNT to get to
        the pig.
      K2.0 sequence 12_instruction: 'Let''s get that pig! '
      K2.0 sequence 2_instruction: Ayusin ang code para makapunta ako sa baboy!
      K2.0 sequence 3_instruction: |-
        Something is not quite right. REMOVE a block
        to get me to the pig!
      K2.0 sequence 4_instruction: |-
        Time for a shorter puzzle!  Move one way, then
        another to get me to the pig.
      K2.0 sequence 4a_instruction: Try this puzzle again from the start!
      K2.0 sequence 5_instruction: Dumaan sa isang daan, pagkatapos ay sa isa pa para
        maabot ko ang babay!
      K2.0 sequence 6_instruction: Alamin kung ano ang nawawala at pagkatapos magdagdag
        ng mga bloke para makapunta ako sa baboy!
      K2.0 sequence 7_instruction: |
        Debug this level by changing a block to get me
        to the pig!
      K2.0 sequence 8_instruction: |-
        Debug this level by adding blocks to get me to
        the pig!
      K2.0 sequence 9_instruction: 'Hamon: Umikot sa TNT para makapunta ako sa baboy! '
      K2.0 sequence FP_instruction: |-
        Now figure out how to get the pig any way you
        can!
      K2.0 sequence pre_instruction: Paglaruan ang mga blokeng ito para makita kung
        makakapunta ba ako sa baboy!
      KIKI GLJ Test Response_instruction: |
        Look carefully at the code below.  What
        do you think the plane will do when you click "Run"?\r
      KTest1_instruction: Can you make me move South once more to get to the pig?
      KTest2_instruction: |-
        Trace the path and lead me to the silly pig. Avoid TNT
        or the feathers will fly!
      Kiki_StarWars_Test_3_instruction: Text
      Kiki_StarWars_Test_4_instruction: Text
      Kiki_StarWars_Test_5_instruction: Text
      Kiki_StarWars_Test_5_Example_instruction: Text
      LaurelDebugging4Video1_instruction: Ilipat si Laurel sa paligid at kumuha ng
        maraming ginto hangga't kaya mo!
      Limited Quantity of Blocks Test_instruction: |-
        Get me to the pig by adding only
        one block
      Luigi's Pizza 1_instruction: |-
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |-
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |-
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |-
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |-
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |-
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      MC Agent Freeplay_instruction: "**Libreng laro:** Oras na para magtuklas nang
        ikaw lang!"
      MC HOC 2016 Level 10_instruction: Oras na para gumawa ng iyong sariling Minecraft!
        Mag-spawn ng mga nilalang at pagkatapos ay ipagawa sa kanila ang anumang gusto
        mo. Magsaya!
      MC HOC 2016 Level 2-2_instruction: Ang manoy ay hindi makagalaw. Maglagay ng
        `move` at `turn` na mga bloke sa `when spawned` na butas para mapagalaw ito.
      MC HOC 2016 Level 3_instruction: 'Magaling, nakagalaw na ang manok! Ngunit pagkatapos
        ay tumigil ito. Sa mga laro, ang mga manok ay maglalakad magpakailanman. Gamitin
        ang `forever do` na loop para panatilihin ang mga manok na ito na gumalaw.\r

'
      MC HOC 2016 Level 4_instruction: Ngayon ang mga manoy ay mukhang kakaiba sa
        parehang paggalaw. Ang mga laro ay gumagamit ng mga random na mga galaw para
        parang totoo ang mga bagay. Gawin ang mga manok sa pamamagitan ng `turn random`.
      MC HOC 2016 Level 5_instruction: Ang mga bakang ito ay nawawala! Gabayan sila
        papunta sa mga damo gamit ang `move a step forward` na bloke sa isang `forever
        do` na loop.
      MC HOC 2016 Level 6_instruction: Ngayon ay gagawa ka ng mga zombie. Gamitin
        ang `spawn` na bloke para makagawa ng 3 mga zombie pagsapit ng gabi. Pagalawin
        sila papunta sa iyo. Manatiling ligtas hanggang umaga.
      MC HOC 2016 Level 8_instruction: Ang landas papunta sa tupa ay hinarangan ng
        isang pader na bato. Sa kabutihang-palad, may isang Creeper na nandoon. Ang
        mga Creeper ay sasabog kapag nawakan mo ito. Ipasabog ng Creeper ang pader
        para makarating ka sa tupa!
      MC HOC 2016 New Drop_instruction: Sa Minecraft, ang tupa ay naghuhulog ng balahibo.
        Ilagay ang `drop` na bloke sa `when used`, pagkatapos maglakad sa ibabaw at
        gamitin ang tupa para maghulog ng aytem.
      MC HOC 2016 New Spawn_instruction: Ngayon ay maaari mo nang punan ang mundo
        kung ano ang gusto mo! Ilagay ang `spawn` na mga bloke sa baba ng `when run`
        para i-spawn ang mga bagay kapag nagsimula na ang laro.
      MC HOC 2016 New Walk_instruction: Ating tutuklasin ang mundo! Gumalaw gamit
        ang mga arrow, at pindutin ang space bar o i-tap ang laro para makagamit ng
        mga aytem. Gamitin ang pintuan para makapasok sa bahay.
      MC HOC 2016 SCORE LEVEL_instruction: Ang ilang mga laro ay hahayaan kang magtago
        ng iskor. Maglaro ng tag kasama ang mga Iron Golem na ito at gamitin ang `add
        1 to score` na bloke para mabigyan ang sarili mo ng isang puntos kapag na-tag
        mo sila. Abutin ang 5 puntos para manalo!
      MC HOC 2016 Village Test_instruction: |-
        Naku! Nabihag ka ng mga zombie sa loob!
        I-code ang Iron Golem para humabol at umatake sa mga zombie!
      MC_2017_Ryan_02_instruction: Tulungan ang manlalaro na makalabas sa pamamagitan
        ng paggamit ng mga loop para mapagawa ang Ahente sa pressure na plato.
      MC_HOC_2017 Agent Test_instruction: I-click ang "Run" para mapagalaw ang manlalaro
        sa dalandan na parisukat sa loob ng bahay.
      MC_HOC_2017_01_instruction: I-click ang "Run" para mapagalaw ang manlalaro sa
        dalandan na parisukat sa loob ng bahay.
      MC_HOC_2017_01_Cole_instruction: Kailangan mong ikolekta ang lahat ng mga kagamitan
        sa paglalakbay na ito. Gumalaw sa paligid gamit ang mga **arrow key**, at
        pumunta sa baol na nasa landas para manalo
      MC_HOC_2017_01_Kiki_instruction: I-click ang "Run" para mapagalaw ang manlalaro
        sa dalandan na parisukat sa loob ng bahay.
      MC_HOC_2017_01_RETRY_instruction: 'Magsulat ng code para mapapunta ang Ahente
        sa pressure plate, pagkatapos ay pindutin ang "Run" at gamitin ang mga arrow
        key para mapagalaw ang manlalaro palabas ng bahay para mangolekta ng baol. '
      MC_HOC_2017_02_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_02_Cole_instruction: 'Ilipat ang Ahente sa pressure plate para ang
        {currentPlayerName} ay makakapunta sa mapa. '
      MC_HOC_2017_02_Kiki_instruction: Dalhin ang Ahente sa pressure plate, pagkatapos
        ay dalhin ang manlalaro sa dalandan na parisukat.
      MC_HOC_2017_02_Will_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_03_Cole_instruction: 'I-code ang Ahente para magbukas ng pintuan. '
      MC_HOC_2017_03_Kiki_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_04_instruction: Baguhin ang loop mula sa huling palaisipan para
        matulungan ang Ahente na gumawa ng landas sa ibabaw nang malawak na bahagi
        ng ilog na ito.
      MC_HOC_2017_04POINT5_Cole_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_04POINT5_RYAN_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_04_Cole_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_04_Kiki_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_05_instruction: Gamitin ang function para matulungan ang Ahente
        na makapunta sa pressure plate.
      MC_HOC_2017_05_Cole_instruction: Dalhin ang manlalaro sa pala.
      MC_HOC_2017_05_Josh_instruction: Dalhin ang manlalaro sa pala.
      MC_HOC_2017_05_Kiki_instruction: Dalhin ang manlalaro sa dalandan na parisukat.
      MC_HOC_2017_06_Cole_instruction: Ayusin ang code para mapagawa ang Ahente nang
        isang tulay patawid sa ilog na ito.
      MC_HOC_2017_06_Josh_instruction: Ayusin ang code para matulungan ang Ahente
        na gumawa ng isang tulay patawid sa ilog na ito.
      MC_HOC_2017_06_Kiki_instruction: Ayusin ang code para matulungan ang Ahente
        na gumawa ng isang tulay patawid sa ilog na ito.
      MC_HOC_2017_07_Cole_instruction: Sirain ang yelo at dalhin si {currentPlayerName}
        sa Minecart.
      MC_HOC_2017_07_Kiki_instruction: Gumamit ng function para linisin and landas
        papunta sa dalandan na parisukat.
      MC_HOC_2017_07a_Kiki_instruction: Linawin ang landas papunta sa dalandan na
        parisukat.
      MC_HOC_2017_08_Cole_instruction: Baguhin ang binigay na function para gagana
        sa biome na ito.
      MC_HOC_2017_08_Kiki_instruction: Baguhin ang function para gagana sa palaisipang
        ito.
      MC_HOC_2017_08_RY_instruction: Gumamit ng mga function para makahanap ng daan
        patawid sa laba.
      MC_HOC_2017_08_Will_instruction: Gumamit ng mga function para makahanap ng daan
        patawid sa laba.
      MC_HOC_2017_09_Cole_instruction: I-program ang Ahente para linawin ang daanan
        ng manlalaro.
      MC_HOC_2017_09_Kiki_instruction: I-program ang Ahente para linawin ang daan
        ng manlalaro at mapapunta sa pressure plate.
      MC_HOC_2017_10_Cole_instruction: Lumikha ng function para matulungan kang tapusin
        ang minecart na ito.
      MC_HOC_2017_10_Cole_old_instruction: Lumikha ng function para matulungan kang
        tapusin ang minecard na ito.
      MC_HOC_2017_10_Kiki_instruction: Lumikha ng function para matulungan kang tapusin
        ang minecart na ito.
      MC_HOC_2017_10_RETRY_instruction: Gamitin ang mga functions para matapos ang
        minecart na daanan na ito.
      MC_HOC_2017_10_RYAN_instruction: Lumikha ng function para matulungan kang tapusin
        ang minecart na ito.
      MC_HOC_2017_10_RYAN2_instruction: Lumikha ng function para matulungan kang tapusin
        ang minecart na ito.
      MC_HOC_2017_13_Cole_instruction: "**Libreng laro:** Oras na para magtuklas nang
        ikaw lang!"
      MC_HOC_2017_4.5v2_instruction: Dalhin ang Ahente sa pressure plate.
      MC_HOC_2017_Ali_instruction: Gamitin ang mga function para makahanap ng daan
        patawid sa laba.
      MC_HOC_2017_FP10x10_instruction: "**Libreng laro:** Maaari mo bang hamunin ang
        iyong sarili para ikolekta ang lahat ng mga diyamante sa antas na ito? "
      MC_HOC_2017_FP10x10_RE_instruction: "**Libreng laro:** Maaari mo bang hamunin
        ang iyong sarili para ikolekta ang lahat ng mga diyamante sa antas na ito? "
      MC_HOC_2017_FP20x20_instruction: "**Libreng laro:** Oras na para magtuklas nang
        ikaw lang!"
      MC_HOC_2017_Ryan_03_instruction: Ngayon ay gumamit ng mga loop para matulungan
        Ang Ahente na bumuo ng tulay patawid sa ilog sa pamamagitan ng paglagay ng
        mga bloke sa tubig.
      MC_HOC_2017_Ryan_05_instruction: Sirain ang mga cacti na ito para ang manlalaro
        ay makarating sa layunin.
      MC_HOC_Kiki_02_instruction: Dalhin ang Ahente sa pressure plate.
      MSM Big Game Empty_instruction: |-
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |-
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |-
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |-
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |-
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |-
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |-
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |-
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |-
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |-
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |-
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |-
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |-
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |-
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |-
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      Middle School Hackathon Pt 1_instruction: "(Click to see full instructions)"
      Middle School Hackathon Pt 2_instruction: "(Click to see full instructions)"
      Mike Pair Programming_instruction: Here are the instructions
      Mike Test Bee Conditionals 1_instruction: |-
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      Mike Test Bee Conditionals 2_instruction: |-
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      MikeAssessment1_instruction: Now do it right!
      MikeStar_instruction: Draw this.
      MikeStarHard_instruction: Draw this.
      MikeStarNested_instruction: Draw this.
      MikeTest1_instruction: Who knows what you should do?!?!
      MikeTest2_instruction: Draw something!
      MikeTest3_instruction: Build Something
      NEW Course 4 Artist Functions 1_instruction: Maaari mo bang iguhit ang parisukat
        na 100 pixels ang haba, gamit ang repeat na loop?
      NEW Course 4 Artist Functions 10.1_instruction: |-
        Use the functions from the
        previous puzzles to draw this pattern.
      NEW Course 4 Artist Functions 10_instruction: |-
        Click "edit" to fill out the
        blocks in the function definition to make a 40 pixel square.
      NEW Course 4 Artist Functions 11_instruction: Ngayon ay gusto nating maglikha
        ng bagong function na tinatawag na `draw a line of squares` na nagguguhit
        sa lahat ng anim na parisukat sa isang hanay lang. Maaari mo bang gawin ang
        function gamit ang `draw a square 20` na function na nilikha namin para sa
        iyo?
      NEW Course 4 Artist Functions 12_instruction: Gamitin ang `draw a line of squares`
        na function mula sa huling palaisipan para iguhit ang pattern na ito.
      NEW Course 4 Artist Functions 13_instruction: 'Maaari mo bang iguhit ang isang
        bituin na hugis gamit ang `draw a line of squares` na function?  '
      NEW Course 4 Artist Functions 14_instruction: 'Oras sa Libreng-laro! '
      NEW Course 4 Artist Functions 2_instruction: Maaari ka bang magguhit ng 3 parisukat
        na 20 pixels ang pagitan sa bawat isa? Bawat parisukat ay 100 pixels ang laki.
      NEW Course 4 Artist Functions 3_instruction: |-
        Narito ang isang bagong tipo ng Bloke. Ito ay tinatawag na `function` na bloke. I-click ang "edit", pagkatapos ay punan ito ng code para sa pagguhit ng parisukat na may 100 pixels ang gilid. \r
        \r
        Kapag tapos ka nang mag-edit sa function, i-click ang "Close" para makabalik sa iyong programa.
      NEW Course 4 Artist Functions 4_instruction: Gumamit ng `draw a square` na function
        para iguhit ang pattern na ito.
      NEW Course 4 Artist Functions 5_instruction: |-
        How did the "draw a square"
        block know what commands to run? Click on "edit" in the "draw a square"
        function block. The blocks in the function editor are the definition that
        make up "draw a square." When you're done looking around, click "Save
        and Close" and then "Run."
      NEW Course 4 Artist Functions 6_instruction: |
        Using the "draw a square" function
        block, can you draw this picture? Hint: each square is 20 pixels apart.\r
      NEW Course 4 Artist Functions 7_instruction: 'Nakuha mo na ba kung paano gamitin
        ang function na mga bloke? Ating baguhin ang parisukat na ito para ito ay
        200 pixels na ang laki. I-click ang "edit" para makapasok sa `draw a square`
        na function editor. Tandaang i-click ang "Close" para makalabas sa editor
        ng function. '
      NEW Course 4 Artist Functions 8_instruction: Kami ay naglikha ng bagong function
        na tinatawag na "draw a triangle". Maaari mo bang baguhin ang paglalarawan
        ng function para maiguhit ang tatsulok na may 100 pixels ang gilid?
      NEW Course 4 Artist Functions 9_instruction: Maaari mo bang lutasin ito sa pamamagitan
        ng pagdagdag lang ng isang bloke?
      NEW Course 4 Artist Functions inspire_instruction: |-
        Click here to see the inspiration
        picture again.
      NEW Course 4 Artist Params 1_instruction: Ating bigyang-kahulugan ang function
        na ito para gumuhit ng parisukat na may 50 pixels ang gilid. I-click ang "edit"
        para makapagsimula.
      NEW Course 4 Artist Params 10_instruction: 'Lumikha ng `draw a hexagon` na function
        na bloke na may length na parameter. Ang hexagon na ito ay mayroong mga gilid
        na 100 pixels ang haba. '
      NEW Course 4 Artist Params 11_instruction: Maaari mo bang malaman kung paano
        iguguhit ang hugis na ito? Baguhin ang function para magamit ang "sides" na
        parameter.
      NEW Course 4 Artist Params 12_instruction: Maaari mo bang kumpletohin ang drowing
        na ito? Ang gilid ng lahat ng mga hugis ay 100 pixel ang haba.
      NEW Course 4 Artist Params 12a_instruction: Ang larawang ito ay katulad lang
        sa huli. Maaari mo bang gamitin ang `for` na loop kasabay ng iyong function
        para magawa ang disenyong ito?
      NEW Course 4 Artist Params 13_instruction: |-
        Ating baguhin ang "draw a polygon" na function na ito. Ito ay mayroon nang "length" na parameter. \r
        Ang perimeter sa bawat hugis ay 200 pixels ang haba. Naaalala mo pa ba ang ekwasyon para gagawa sa mga hugis na pareho ang laki kahit na sila ay mayroong iba't ibang bilang ng gilid?
      NEW Course 4 Artist Params 14_instruction: Baguhin ang "draw a spiral edge"
        para makagamit ng "length" at "sides" na mga parameter, pagkatapos ay ilikha
        ulit ang mga hugis na ito.
      NEW Course 4 Artist Params 15_instruction: 'Libreng Laro: Narito ang mga function
        na naisulat mo, at ilang higit pa para iyong mapaglaruan. Gumuhit ng isang
        bahay na kamangha-mangha! Paglaruan ang mga lapad ng pen para makita kung
        paano nagkaiba ang iyong mga drowing!'
      NEW Course 4 Artist Params 2_instruction: Lumikha ng `draw a triangle` na function
        mula sa wala na gumagawa ng tatsulok na may 50 pixel ang mga gilid.
      NEW Course 4 Artist Params 3_instruction: 'Ngayon ay ating gagamitin ang function
        para maiguhit ang 5 tatsulok sa isang hanay. Bawat tatsulok ay 30 pixels ang
        pagitan.\r

'
      NEW Course 4 Artist Params 4_instruction: Napansin mo ba ang anumang bagay na
        kakaiba sa function na mga blokeng ito? I-click ang "Run" para makita kung
        ano ang nangyari.
      NEW Course 4 Artist Params 5_instruction: 'Palitan ang `???` sa loob ng `length`
        na input na parameter na bloke. Ang pentagon ay mayroong 100 pixel na mga
        gilid. '
      NEW Course 4 Artist Params 6_instruction: Punan ang "length" na parameter para
        maiguhit ang mga hugis na ito sa pamamagitan ng pagpalit sa "???" ng tamang
        mga numero. Ang parisukat at tatsulok ay mayroong gilid na 100 pixels habang
        ang bawat gilid ng hexagon ay 75 pixels ang haba.
      NEW Course 4 Artist Params 7_instruction: Maaari mo bang makumpleto ang drowing
        na ito? Ang mga gilid ng bawat tatsulok ay 25 pixel na mas malaki kaysa sa
        huli. Ang unang tatsulok ay mayroon gilid na 25 pixels.
      NEW Course 4 Artist Params 8_instruction: Ang code para sa tatsulok na ito ay
        nasira. Maaari mo bang baguhin ang function para maayos ito, at pagkatapos
        ay gumawa ng mga tatsulok na may mga haba na 25, 50, at 75?
      NEW Course 4 Artist Params 9_instruction: 'I-click ang "edit" para punan ang
        kahulugan ng "draw a square" na function at magdagdag ng parameter. Dapat
        itong kukuha ng length na parameter, gaya lang ng tatsulok. Pero ngayon, gumuhit
        ng 3 mga parisukat: 25, 50, at 75 pixels ang haba, bawat isa ay 100 pixels
        ang pagitan.'
      NEW Course 4 Artist Params inspire_instruction: "Libreng Laro na Inspirasyon:
        Natutunan mo na ang lahat ng kailangan mong malaman para makagawa ng pattern
        na gaya nito! Kung ang mga larawang ito ay nagbigay-inspirasyon sa iyo, subukang
        gumawa ng isang bagay na kapareha. Kung hindi, lumikha ng isang bagay na lahat
        ay ikaw lang.\\r\n\\r\nGustong malaman kung paano nagawa ang aming inspirasyon
        na pattern? "
      NEW Course 4 Artist Vars 1.5_instruction: "Take a look at the code, can you\nsee
        how the \"set length\" block and \"length\" block works together? Click\non
        \"Run\" to see it in action. "
      NEW Course 4 Artist Vars 12_instruction: Ngayon, muling ilikha ang algoritmo
        mula sa huling antas at maglikha ng pentagon na may haba ng mga gilid na 150.
      NEW Course 4 Artist Vars 2.5_instruction: "Take a look at the code, can you\nsee
        how the \"set length\" block and \"length\" block works together? Click\non
        \"Run\" to see it in action. "
      NEW Course 4 Artist Vars 2_instruction: 'I-drag ang number na bloke sa parehong
        `set length` na bloke at sa `repeat_times` na bloke para maiguhit ang isang
        hanay ng 50 pixel na mga tatsulok.

'
      NEW Course 4 Artist Vars 4 5_instruction: |-
        Awesome job on the last puzzle,
        let's try it again this time let's make this cool design with with 60 pixel
        hexagon's.
      NEW Course 4 Artist Vars 4_instruction: |-
        Subukan natin ulit ito! \r
        \r
        Maaari mo bang itakda ang `length` na variable sa 60 para magawa ang maganda disenyong may mga hexagon na ito?
      NEW Course 4 Artist Vars 6_instruction: |-
        Iguhit ang pattern ng mga pentagon na ito na may gilid na 100 pixels sa pamamagitan ng pagtakda ng tamang halaga para sa `length` at maghulog sa `length` na variable sa lahat ng tamang mga lugar. \r
        \r
        Tingnan kung paano mo lang itakda ang halaga ng `length` nang isang beses, at ang code ay gagamit na sa tamang halaga kahit saan?
      NEW Course 4 Bee For Loops 1_instruction: Gumamit ng loop para makolekta ang
        nektar mula sa bawat bulaklak.
      NEW Course 4 Bee For Loops 10_instruction: |-
        Use your for loop "counter" variable
        to control how far to move horizontally.
      NEW Course 4 Bee For Loops 10a_instruction: 'Handa ka ba sa isang hamon? Dalhin
        ang natutunan mo tungkol sa mga loop at subukang lutasin ang problemang ito.
        Tandaan: Malamang ay kakailanganin mong tingnan ang mga solusyon nang napakaraming
        beses bago mo malaman ang lahat ng mga hakbang.'
      NEW Course 4 Bee For Loops 11_instruction: Magagamit mo ba ang loop na variable
        para ikontrol ang paggalaw at pagkolekta ng nektar?
      NEW Course 4 Bee For Loops 2_instruction: Idagdag ang mga kinailangang code
        para masiguro na ang bubuyog ay kokolekta sa lahat ng nektar. Tingnan kung
        ilang code ang kakailanganin mo para sa palaisipang ito! (Matututo tayo ng
        simpleng pamamaraan sa sunod na palaisipan.)
      NEW Course 4 Bee For Loops 3_instruction: 'Ah, ang "for loop" ay mas lalong
        nagpapadali nito! Lahat ng code na kailangan mo ay nandito na, tingnan kung
        paano ito pinagsama-sama, pagkatapos ay i-click ang "Run" para makita kung
        paano ito gumagana. '
      NEW Course 4 Bee For Loops 4 4_instruction: Ngayon kailangan nating lumakad
        pasukong nang "counter" na beses, pagkatapos kunin ang nektar nang "counter"
        na beses. Maaari mo bang gamitin ang dalawang "repeat" na mga loop para lutasin
        ang hamon na ito?
      NEW Course 4 Bee For Loops 4_instruction: 'Palitan ang ??? sa "for loop" sa
        pinakamalaking halaga ng nektar na kailangang ikolekta ng bubuyog. '
      NEW Course 4 Bee For Loops 5 5_instruction: Nakuha mo na ba kung paano gamitin
        ang "for loop"? Tulungan natin ang bubuyog na makuha ang lahat ng natirang
        nektar.
      NEW Course 4 Bee For Loops 5_instruction: Maaari ka ring gumamit ng "for loop"
        para magbilang pababa. Subukang magtipon ng mga nektar na ito sa pamamagitan
        ng pagbilang pababa ng 1 mula sa 5 papuntang 1.
      NEW Course 4 Bee For Loops 6_instruction: Ang huling bilang sa iyong for loop
        ay tinatawag na "increment". Bawat beses na ang loop ay papatakbuhin, ang
        counter na variable ay nagbabago ayon sa halaga ng increment. Subukang magkolekta
        sa mga bulaklak na mga ito gamit ang increment na 2.
      NEW Course 4 Bee For Loops 7_instruction: |-
        Ngayon, ating ipagsama ang "counter" na variable sa math na bloke! Paano mo maaari magamit ang "counter" na variable para mag-navigate sa garden na ito gamit ang pinakakaunting bilang ng mga bloke hangga't maaari? Ano ang kailangan mong gawin para makakolekta ng 3, 6, 9, 12, 15 na nektar sa pagkakataong ito? Ang sekreto ay nasa "counter na variable!\r
        \r
        Tandaan: Kung ang iyong loop ay nagbibilang pataas. Ang increment ay idinagdag sa iyong "counter" na variable bawat beses na mag-loop.
      NEW Course 4 Bee For Loops 8_instruction: Nakuha mo na ito! Ano ang dapat ang
        iyong increment para makakolekta ka ng 3, 6, 9, 12, 15 na nektar?
      NEW Course 4 Bee For Loops 9_instruction: Kung ang iyong loop ay nagbibilang
        pababa, ang increment ay tinanggal mula sa iyong counter na variable sa bawat
        loop. Ano dapat ang iyong increment para makakolekta ng 14, pagkatapos ay
        12, tapos ay 9, 6, 3 na nektar?
      NEW Course 4 Bee For Loops 95_instruction: |-
        Take a look at each piece of the
        "for loop" that you have just created.  Can you figure out which numbers
        you need to double to solve this puzzle? Why does it work?
      NEW Course 4 Play Lab Params 11_instruction: 'Ito ay oras para sa libreng laro!
        Magsaya gamit ang lahat ng mga bloke sa iyong tool box. '
      NEW Course 4 Play Lab Params 5 5_instruction: |-
        Let's try that again, but with
        less help. What do you need to edit this time to make the actors patrol?
      NEW Course 4 Play Lab Vars 4 5_instruction: |-
        “What do you think this code will
        do? Press “Run” to see what happens.”
      NEW Course 4 Play Labs For Loops 7a_instruction: |-
        Using what you learned so
        far, can you have Dinosaur take a step forward every time Penguin counts?
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Ito ay oras para
        sa libreng laro! Magsaya gamit ang lahat ng mga bloke sa iyong tool box. '
      NEW Course 4 Play Labs For Loops 8a_instruction: "Challenge: How would you\nuse
        the \"for loop\" to get every actor to go around and say their actor number,\nthen
        vanish from the screen? "
      NetSim Standalone Automatic DNS_instruction: |-
        In this version of the Internet
        Simulator, a Domain Name System (DNS) is provided for you and knows the IP
        addresses of all connected computers. Send a message in the form GET [hostname]
        to the DNS service at address <yourRouterNumber>.15 to get a student's address.
      NetSim Standalone Broadcast_instruction: |
        In this version of the Internet Simulator,
        you can connect to up to 5 other people in a room. When you send messages
        in the room, everyone receives them. What are some of the challenges of this
        system, and how might you solve them?\r
      NetSim Standalone Classroom Routers_instruction: |-
        In this version of the Internet
        Simulator, everyone connects to a router and has a specific address. To send
        messages, you have to address your message to the specific address of the
        recipient, and the router will take care of delivering it to the right computer.
        If there are other routers created in your class, ask for the address of one
        of your classmates and send them a message! View the Log Router to see the
        path the messages have taken through the network.
      NetSim Standalone Freeplay_instruction: |-
        In this configuration, most of the
        options are turned on, and you can play with them. Have fun!
      NetSim Standalone Manual DNS_instruction: |-
        In this version of the simulator
        you can't see the other students' addresses.  Instead, one of you must act
        as a name service, to help share addresses with each other.
      NetSim Standalone Packets TCP_instruction: |
        Messages on the Internet can take
        many paths to get to their destination, and sometimes along the way the message
        gets dropped. In this version of the Internet Simulator, there is a 10% chance
        of a packet being dropped, multiple packets may take different paths to the
        destination, and the default max packet size is set to 6 additional characters.
      NetSim Standalone Routers Addresses_instruction: |-
        For this activity, connect
        to a router with the others in your group. Important note: The router will
        only properly route messages where the first 4 bits are the To: address and
        the second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      NetSim Standalone SendAB_instruction: |-
        You and your partner share a single
        wire that can only be in state A or state B. You can set the wire to either
        state at any time, and you can read the state of the wire at any time. Can
        you figure out a way to effectively communicate with just this system?
      NetSim Standalone Sending Numbers Ascii_instruction: |
        Now that you've transmitted
        information represented as decimal numbers, you can map those numbers to text
        characters to send text-based information back and forth. With a text-based
        protocol, you can easily represent and communicate all kinds of information.
      NetSim Standalone Sending Numbers_instruction: "You and your partner can now\nreliably
        send messages back and forth without extra coordination! While you're\nalways
        sending bits back and forth, you can also represent those bits as decimal\nnumbers.
        What kinds of information can you represent with this system? "
      NetSim_AddressingMessages_instruction: |-
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |-
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |-
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |-
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |-
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |-
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendNumbers_instruction: |-
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_SendingABTest_instruction: |-
        This is Sarah's test of making a netsim
        level
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |-
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |-
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |-
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: Magguhit ng isang bagay na kamangha-mangha!
        Ang iyong code ay naka-save sa iyong proyekto na maaari mong balik-balikan
        kahit anumang oras.
      New Basketball Project_instruction: Maglikha ng iyong sariling Basketbol na
        laro. Maaari mong baguhin ang lahat ng mga patakaran. Kapag tapos ka na, i-cick
        ang Finish para hayaan ang iyong mga kaibigan na subukan ang iyong laro sa
        kanilang mga telepono.
      New Bounce Project_instruction: Maglikha ng iyong sariling Bounce na laro. Maaari
        mong baguhin ang lahat ng mga biswal at mga patakaran. Kapag tapos ka na,
        i-click ang Finish para hayaan ang iyong mga kaibigan na subukan ang iyong
        laro sa kanilang mga telepono.
      New Course 4 Artist Functions Level 4_instruction: Gamitin ang "draw a square"
        na function para magguhit sa pattern na ito.
      New Gumball Project_instruction: Ilikha ang anumang gusto mo at ibahagi ang
        mga ito!
      New Ice Age Project_instruction: Ilikha ang anumang gusto mo at ibahagi ang
        mga ito!
      New Infinity Project_instruction: Ilikha ang anumang gusto mo at ibahagi ang
        mga ito!
      New Minecraft Hero Project_instruction: "**Libreng Laro:** Oras na para magtuklas
        nang ikaw lang!"
      New Sports Project_instruction: 'Maglikha ng iyong sariling laro! Ikaw ang tagapangasiwa
        dito: maaari mong baguhin ang lahat ng mga patakaran, maghalo at magtugma
        ng mga palakasan, maging malikhain! Kapag tapos ka na, i-click ang Finish
        para hayaan ang iyong mga kaibigan na subukan ang laro sa kanilang mga telephono.'
      Ninjacat Demo B (copy 1)_instruction: |
        \r
        Let’s begin by exploring a simple
        videogame, and then figuring out how it works. You can use the arrow keys
        to move the ninja left, right and jump - try to catch the unicorn and avoid
        the dragon!\r
        \r
        \r
        \r
          \r
        \r
      Ninjacat Demo B_instruction: |-
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |-
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      October15 JoL 1_instruction: |-
        Program the artist to design a face for your
        jack-o-lantern!
      October15 bat_instruction: |
        Freeplay: Here are some functions to play with.  Can
        you draw a bat?\r
      October15 ghost 1_instruction: |-
        Give the ghost eyes, using the "draw a circle"
        function.
      October15 pumpkin 1_instruction: |-
        Finish this jack-o-lantern by drawing the
        eyes and nose in any style you would like.
      October15 stars 1_instruction: |-
        Use loops and the "random integer" block
        to fill the night sky with stars of different shapes and sizes.
      Overworld Avoid Monsters_instruction: Ang pagbangga sa isang Creeper ay isang
        masamang ideya. Mag-ingat na maglakad hanggang malampasan ang mga Creeper
        at maka-abot sa iyong tahanan nag ligtas.
      Overworld Avoid Monsters_2018_instruction: Ang pagbangga sa isang Creeper ay
        isang masamang ideya. Mag-ingat na maglakad hanggang malampasan ang mga Creeper
        at maka-abot sa iyong tahanan nag ligtas.
      Overworld Chop Tree - allthethings_instruction: Ang kahoy ay isang napakahalagang
        kayamanan. Maraming mga bagay ang nagawa mula nito. Maglakad papunta sa puno
        at gamitin ang “destroy block” na utos para putulin ito.
      Overworld Chop Tree_instruction: Ang kahoy ay isang napakahalagang kayamanan.
        Maraming mga bagay ang nagawa mula nito. Maglakad papunta sa kahoy at gamitin
        ang "destroy block" na utos para putulin ito.
      Overworld Chop Tree_2018_instruction: Ang kahoy ay isang napakahalagang kayamanan.
        Maraming mga bagay ang nagawa mula nito. Maglakad papunta sa kahoy at gamitin
        ang "destroy block" na utos para putulin ito.
      Overworld Chop Trees_instruction: Kailangan nating gumawa ng isang bahay bago
        pa lulubog ang araw. Ang mga bahay ay nangangailangan ng maraming kahoy. Putolin
        ang lahat ng tatlong mga puno.
      Overworld Chop Trees_2018_instruction: Kailangan nating gumawa ng isang bahay
        bago pa lulubog ang araw. Ang mga bahay ay nangangailangan ng maraming kahoy.
        Putolin ang lahat ng tatlong mga puno.
      Overworld Free Play 20x20_instruction: Maligayang bati! Nakompleto mo ang lahat
        ng ating mga palaisipan. Ngayon ay magmina, magbuo, at maglikha ng isang bagay
        na kakaiba sa pamamagitan ng paggamit sa lahat ng natutunan mo.
      Overworld Free Play 20x20_2018_instruction: Maligayang bati! Nakompleto mo ang
        lahat ng ating mga palaisipan. Ngayon ay magmina, magbuo, at maglikha ng isang
        bagay na kakaiba sa pamamagitan ng paggamit sa lahat ng natutunan mo.
      Overworld House Frame Chosen_instruction: Buoin ang lahat ng iyong bahay mula
        sa kahit anong materyal na gusto mo. Ang "repeat" na utos ay magagamit mo.
      Overworld House Frame Chosen_2018_instruction: Buoin ang lahat ng iyong bahay
        mula sa kahit anong materyal na gusto mo. Ang "repeat" na utos ay magagamit
        mo.
      Overworld Move to Sheep_instruction: Magdagdag ng pangalawang `move forward`
        na bloke para maabot ang tupa.
      Overworld Move to Sheep_2018_instruction: Magdagdag ng pangalawang `move forward`
        na bloke para maabot ang tupa.
      Overworld Place Wall_instruction: Bawat bahay ay nagsisimula sa isang pader.
        Buoin ang unang bahagi ng iyong bahay sa pamamagitan ng paglagay ng "place"
        at "move forward" na mga utos sa loob ng isang repeat na loop.
      Overworld Place Wall_2018_instruction: Bawat bahay ay nagsisimula sa isang pader.
        Buoin ang unang bahagi ng iyong bahay sa pamamagitan ng paglagay ng "place"
        at "move forward" na mga utos sa loob ng isang repeat na loop.
      Overworld Plant Crops_instruction: Magandang ideya na magplano nang maaga. Magtanim
        ng mga pananim sa magkabilang panig ng tubig para hindi ka magugutom sa kalaunan.
      Overworld Plant Crops_2018_instruction: Magandang ideya na magplano nang maaga.
        Magtanim ng mga pananim sa magkabilang panig ng tubig para hindi ka magugutom
        sa kalaunan.
      Overworld Powered Minecart_instruction: Magaling! Natipon mo ang napakaraming
        mga kayamanan at nakabuo ka ng isang simpleng bahay. Ngayon ay maglagay ng
        mga riles mula sa dulo ng mapa papunta sa pintuan ng iyong bahay.
      Overworld Powered Minecart_2018_instruction: Magaling! Natipon mo ang napakaraming
        mga kayamanan at nakabuo ka ng isang simpleng bahay. Ngayon ay maglagay ng
        mga riles mula sa dulo ng mapa papunta sa pintuan ng iyong bahay.
      Overworld Shear Sheep_instruction: Oras na para gupitan ang mga tupa! Gamitin
        ang "shear" na utos para matipon ang mga balahibo mula sa parehong mga tupa.
      Overworld Shear Sheep_2018_instruction: Oras na para gupitan ang mga tupa! Gamitin
        ang "shear" na utos para matipon ang mga balahibo mula sa parehong mga tupa.
      PDAlg 13-16 Sam Extension Puzzle_instruction: |-
        Add a second parameter to "onscreen?"
        for Sam's y coordinate and update the function so it keeps him safe on all
        four sides.
      PDAlg 17-20 Luigi Extension Puzzle_instruction: |-
        Without modifying your existing
        "cost" function, create a new "coupon" function that takes a pizza topping
        and coupon code and returns the cost of a pizza with that topping. If the
        coupon code is correct (you get to decide what it is), apply a 30% discount
        to the pizza.
      PDAlg 8-12 Rocket Height Puzzle_instruction: |-
        Let's write a "rocket-height"
        function with simple acceleration. Write a function that ensures the rocket
        is at 15 meters at 1 second, 45 meters at 2 seconds, 95 at 3 seconds, and
        165 at 4 seconds.
      PDAlg 8-12 ex dr 1_instruction: |-
        The definition in this Design Recipe doesn't
        match both examples. Test each example to see which is failing, and then fix
        the definition to match.
      PDAlg 8-12 ex dr 2_instruction: |-
        This student has created two examples for
        the function "apples" but something's not quite right. How would you direct
        this student to correct their mistake?
      PDAlg Big Game History_instruction: |-
        Now that you've played through a Big
        Game level you should see a new entry in your history. Click the Version History
        button and you should see at least one version. Each time you go back to a
        Big Game level you'll get a new record in your version history that you can
        revert back to.
      PDAlg Big Game Remix_instruction: |-
        Here's your Big Game as you last left it.
        Try clicking the Remix button to spin off a new remix of your project.\r
        \r
        Any
        changes you make after you click Remix will be saved on your new remix and
        not on your main Big Game.
      PDAlg Design Recipe Delete_instruction: |-
        Click the delete button to get rid
        of this function, then try creating and deleting a few of your own.
      PDAlg Design Recipe Examples_instruction: |-
        The definition in this Design Recipe
        doesn't match both examples. Test each example to see which is failing, and
        then fix the definition to match.
      PDAlg Design Recipe Required_instruction: |-
        Complete the Design Recipe for the
        "eggs" function, making sure to create and test your examples.
      PDAlg Updates Cond_instruction: |-
        When you went to PD in the summer, the Conditional
        block that you were introduced to was black and allowed any data type to be
        used. This proved to be confusing, given that every other function we've
        seen always produces the same type of data. To help make conditionals clearer
        and more consistent we've replaced the single black block with a separate
        block for each data type.
      PDAlg Updates Errors_instruction: |-
        Run the provided program and use the error
        messages to try and track down the bugs.
      PDAlg Updates Space_instruction: |-
        Making use of limited programming space (especially
        on small screens) is challenging with a block based language. To help with
        this we've added a few features. Experiment with this provided code to see
        how the space can be manipulated to deal with larger programs.
      PDK5 Conditionals 1_instruction: |-
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops
        together. Use the \"if\" block to decide when to turn. Hint: you only\nneed
        one more block to complete this puzzle. "
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin
        order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto
        an action on demand. Make the octopus say \"Hello\" only when you click\non
        the Octopus. "
      PDK5 Functions 1_instruction: |-
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: Ang mga functions ay nagbibigay-daan sa iyo makagawa
        ng mga bagong bloke! Aming inilipat ang mga bloke para makaguhit ng parisukat
        sa isang function na tinatawag na "draw a square". Maaari mo bang gamitin
        ang "draw a square" na function para makalikha ng mga baso? Ang mga parisukat
        ay 75 pixels ang pagitan.
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe
        \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience,
        this is called a \"loop.\" "
      PDK5 Loops 3_instruction: |-
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      PS - test - pixelation_instruction: Kumpletohin ang X na hugis sa pamamagitan
        ng pag-type na mga 0 at mga 1
      PS FR test 7-25_instruction: 'Here are your instructions for this free response.  '
      PS Log test - Define and use turnAround_instruction: |-
        Define a function called
        turnAround. Call the function and then move the turtle forward. (Click to
        see full instructions)
      PS copy 2-3 Bee Conditionals 5_instruction: |-
        Be careful not to collect nectar
        from a purple flower if it doesn't have any. \r
        You must first check if
        the nectar is equal to 1 using the `if nectar` block.
      PS predictive Applab level test_instruction: 'Here are some instructions. '
      Pattern Bee 1_instruction: |-
        What a strange field of goodies! I wonder if there's
        a pattern here...
      Pixelation - AllTheThings 4_instruction: Ang antas ng pikselasyon ay nagpapakita
        sa gamit ng `hide_encoding_controls` na opsyon. Bigyang-pansin na ang antas
        ay nagpapakita sa mga datos ng larawan sa hexadecimal at hindi ka papayagang
        baguhin ang mga ito pabalik sa binary.
      Pixelation - AllTheThings 5_instruction: Ang antas ng pikselasyon ay nagpapakita
        sa gamit ng `Hide sliders" na opsyon. Bigyang-pansin na ang lapad at taas
        na mga sliders ay hindi magagamit, at ang lapad at taas na mga patlang ay
        hindi rin maaaring baguhin.
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |-
        Something happened
        to the bits in this image! Find the error and fix it! Hint: a few extra bits
        were added. You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix bit offset_instruction: |-
        A single extra bit was
        inserted into the stream of bits that make up the C of the Code.org logo.
        That extra bit bumps all of the other bits down the line which makes the logo
        look messed up. Hunt down the extra bit and remove it to fix the Code.org
        logo.
      Pixelation - Lesson 14 - Fix the error_instruction: |-
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |-
        Make a 3x5 letter
        'A'. The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101. Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |-
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want. Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |-
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation - Lesson 15 - Color Free Play_instruction: |-
        Requirements: The icon
        must be 16x16 pixels. You must use the Pixelation Widget to encode the bits
        of color information. The image must be encoded with at least 12 bits per
        pixel.
      Pixelation - Lesson 15 - Color Shades 4x4_instruction: |-
        We start you out with
        the 4x4 image Maddie created in the video. Your task is to fill a 4x4 grid
        with colors using 12-bits per pixel. Here are the requirements: Row 1 - fill
        with shades of red. Row 2 - shades of green. Row 3 - shades of blue. Row 4
        - shades of gray.
      Pixelation - Lesson 15 - Color Shades_instruction: |-
        We start you out with the
        row of shades of red that Maddie created in the video. Experiment with 6-bit
        color by filling in the bottom row of the image with shades of a different
        color. Here is an example with some shades of blue. Try your own color!
      Pixelation - Lesson 15 - Complete 3-bit color_instruction: |-
        We start you with
        the 4x2 image Maddie was creating, but we've left out the last two squares.
        Finish off the image by figuring out which two colors are missing and encode
        them.
      Pixelation 2_instruction: |-
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |-
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Pixelation Bee_instruction: |-
        This larger image of a bee encodes color with
        12 bits per pixel, but viewing in hex makes it easier to see the color of
        each pixel. If you switch to binary mode - hold on to your hat - it's a lot
        of bits. Here's another mind-blowing thing to try: slide the bits per pixel
        up to 24 bits per pixel. What happens? Can you explain this behavior?
      Pixelation Flappy_instruction: |-
        Here is a bigger image at 9 bits per pixel.
        With 9 bits per pixel you can express 512 different colors. Click through
        to see the next image which is even more sophisticated, but easier to understand.
      Pizza on a Plate_instruction: |-
        Project Idea: Create a picture of something
        familiar from the real world. This requires persistence and planning!
      Planning Farmer_instruction: |-
        What a strange field of goodies! I wonder if
        there's a pattern here...
      Planter Test_instruction: Help me plant my fields!
      Play Lab Rocket 1_instruction: |-
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2_instruction: |-
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |-
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3_instruction: |-
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |-
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |-
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |-
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |-
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Poorva copy U3L2 Using Simple Commands_instruction: |-
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      Poorva-test_instruction: |-
        Here are regular instructions for a level. There
        is nothing fancy going on here.
      Practice Create Performance Task_instruction: |-
        Design and implement your practice
        Create Performance Task. (Click to see full instructions)
      Project - Final Image Scroller_instruction: I-update ang scroller ng larawan
        para tumugon sa mga buttons at pagpindot sa mga key. (I-click para makita
        ang buong mga instruksyon)
      Project - Finish your canvas app_instruction: Palawakin ang functionality ng
        isa sa mga epekto, o maglikha ng isang bago na gawa mo. (I-click para makita
        ang buong mga instruksyon)
      Project - Make Your Own Clicker Game_instruction: Kumpletohin ang iyong taga-click
        na laro! (I-click para makita ang buong mga instruksyon)
      Project - Your Own Multi Screen App_instruction: |-
        Create your multi-screen
        app. (Click to see full instructions.)
      Prompt Test_instruction: |-
        Build whatever you want. This is an example of a
        number-guessing game!
      Quantum Bee - Ryan_instruction: |-
        These clouds are bugging me! Some of the clouds
        have flowers inside, and some don't. I should check each cloud, and only
        get nectar from the flowers.
      Quantum Bee_instruction: |-
        Purple flowers may have either 1 or 0 nectar, but
        you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      Robot Doodle_instruction: 'Ideya ng Proyekto: Maglikha ng larawan ng isang bagay
        na pamilay mula sa tunay na buhay. Ito ay nangangailangan ng pagtitiyaga at
        pagpaplano!'
      Robot Doodle_2018_instruction: |-
        Project Idea: Create a picture of something
        familiar from the real world. This requires persistence and planning!
      Robot Drawing_instruction: 'Ideya ng Proyekto: Maglikha ng larawan ng isang
        bagay na pamilay mula sa tunay na buhay. Ito ay nangangailangan ng pagtitiyaga
        at pagpaplano!'
      Robot_instruction: 'Ideya ng Proyekto: Maglikha ng larawan ng isang bagay na
        pamilay mula sa tunay na buhay. Ito ay nangangailangan ng pagtitiyaga at pagpaplano!'
      Rocket Height Course A_instruction: |-
        Follow the Design Recipe to create a function
        rocket-height.
      Ryan - 4-5 Bee Conditionals 2_instruction: |-
        The bee only wants nectar right
        now. Not all objects are flowers, so check underneath EVERY CLOUD to see if
        it is hiding a flower. If it is, then you can gather nectar.
      Ryan - Bee Conditionals_instruction: |-
        The bee only wants nectar right now.
        Not all objects are flowers, so check underneath EVERY CLOUD to see if it
        is hiding a flower. If it is, then you can gather nectar.
      Ryan Doily Step 1_instruction: |-
        Now we're going to draw a doily step by step.
        First, draw a square.
      Ryan Doily Step 2_instruction: |-
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Doily Step 3_instruction: |-
        Now you need to turn and repeat it 20 times!
        How many degrees do you turn to get 360 after 20 iterations?
      Ryan Test Locked Blocks_instruction: Narito ang isang function na tinatawag
        na "patrol." Baguthin ito para mapagalaw ang Pusa pataas ng 400 pixels at
        pagkatapos ay pababa ng 400 pixels.
      Ryan's clone of C4S15P10_instruction: "We've added one last function for you.\n\\r\n\\r\nUse
        an \"if\" statement to program your game to call the \"level_up\"\nfunction
        only when \"player_score\" becomes greater than a certain number.\\r\n\\r\nFor\nexample:
        \"player_score\" > 6\\r\n\\r\nPlay the game, and make it past level\n4 to
        move to the next puzzle. "
      RyanTest3_instruction: Ang antas na ito ay nag-on sa pagbabagong anyo! I-refresh
        para makita ang iba't ibang mga uri.
      SG Add Subgoals practice_instruction: Gumuhit ng isang 3x3 na grid sa harap
        at sa kanan ng turtle nang mas mabisa hangga't maaari. Ang turtle ay dapat
        matatapos sa orihinal na lokasyon nito, at nakaharap sa orihinal na lokasyon
        nito. (I-click para makita ang buong mga instruksyon)
      SG U3L03 - draw rect function_instruction: |-
        Write a function called drawRectangle().\r
        (Click
        to see full instructions)
      SG U3L03 - draw step_instruction: |-
        Write the drawStep function. (Click to see
        full instructions)
      SG U3L03 Define and use turnAround_instruction: |-
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      SG U3L03 Draw a T using turnAround_instruction: Gumuhit ng plus na sign gamit
        ang binigay na bersyon ng turnAround(). (I-click para makuha ang buong instruksyon)
      SG U3L03 Three Steps_instruction: Bigyang kahulugan ang function na tinatawag
        na drawSide() kung saan nagguguhit ng tatlong mga hakbang at nagpapagalaw
        sa pagong pareha maghanda para sa sunod na bahagi (I-click para makita ang
        buong mga instruksyon)
      SG U3L03 define turnRight and draw a rectangle_instruction: |-
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      SG U3L03 draw diamond_instruction: Maglikha ng function na tinatawag na drawDiamond()
        na gumagamit sa iyong nakaraang ginawa para makaguhit ng kumpletong dyamante.
        (I-click para makita ang buong mga instruksyon)
      SG U3L04 - 3 by 3 with functions_instruction: |-
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      SG U3L04 - snowflake_instruction: |-
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      SG U3L06 - moveForwardwithParams_instruction: Gumamit ng isang utos para mapagalaw
        ang pagong sa dulo ng screen. (I-click para makita ang buong mga instruksyon)
      SG U3L06 Challenge 1 triangle_instruction: Gumamit ng mga naka-parameter na
        mga bersyon ng turtle na mga utos para makalikha ng tatsulok na may haba ng
        gilid na 100 pixels. (I-click para makita ang buong mga instruksyon)
      SG U3L06 Challenge 2 purple square_instruction: Basahin ang dokumentasyon para
        sa penColor() at penWidth() bago gamitin ang mga ito para makaguhit ng asul
        na parisukat.
      SG U3L06 Challenge 3 fill pink_instruction: Punan ang background ng screen sa
        iyong paboritong kulay. (I-click para makita ang buong mga instruksyon)
      SG U3L06 Challenge 4 bullseye_instruction: |-
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      SG U3L06 Challenge 5 overlapping circles_instruction: 'Ang larawang ito ay nalikha
        gamit lang ang dot() at penColor() ngunit, paano natin magawang transparent
        ang mga bilog na iyon? Kung hindi ka pa nakakuha ng hint: tingnan muna ang
        dokumentasyon!'
      SG U3L06 Challenge 6 squiggles_instruction: 'Basahin ang dokumentasyon para
        sa "arcLeft" at "arcRight" na mga utos at pagkatapos ay iguhit ang mga squiggles
        gaya ng pinakita.

'
      SG U3L06 Challenge 7 smiley face_instruction: Gamitin ang turnTo() at moveTo()
        para makatulong sa pagguhit ng smiley na mukha. (I-click para makita ang buong
        mga instruksyon)
      SG U3L06 Challenge 8 make your own_instruction: |-
        Create a drawing of your own.
        (Click to see full instructions)
      SG U3L07 - Free Play Loops and Random_instruction: Libreng Laro! Gamitin ang
        natutunan mo mula sa mga loop at random para magawa ang iyong sariling maliit
        na eksena. Magsaya.
      SG U3L07 - allSeaGrass_instruction: Magdagdag ng 50 pirasong mga damong-dagat
        sa larawan sa pamamagitan ng pagsulat ng drawAllSeegrass gamit ang loop. (I-click
        para makita ang buong mga instruksyon)
      SG U3L07 - bubbles_instruction: |-
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      SG U3L07 - createTriangleParam_instruction: Bigyang-kahulugan ang function na
        tumatangagp ng parameter para tumugma sa mga pagtawag sa function at kumukumpleto
        sa larawan. (I-click para makita ang buong mga instruksyon)
      SG U3L07 - fish_instruction: |-
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      SG U3L07 - introSquare_instruction: Gumamit ng loop para maiguhit ang parisukat.
        Pagkatapos ay magdagdag pa ng ibang loop para makaguhit ng maraming mga parisukat
        sa bawat isang inikot na ilang halaga. (I-click para makita ang buong mga
        instruksyon)
      SG U3L07 - loopsWithRandom_instruction: Dagdagan ang bilang ng mga iterasyon
        para punan ang screen ng puti. (I-click para makita ang buong mga instruksyon)
      SG U3L07 - randomDots1_instruction: |-
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      SG U3L07 - randomSquare_instruction: Iguhit ang larawan gamit ang loop. (I-click
        para makita ang buong mga instruksyon)
      SG U3L07 - seaGrass_instruction: |-
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      SG U3L07 - seaStar_instruction: |-
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      SG U3L07 - sunBeams_instruction: Magdagdag ng 100 na mga sunbeam sa larawan
        sa pamamagitan ng pagsulat ng drawAllSunbeams gamit ang loop. (I-click para
        makita ang buong mga instruksyon)
      SG U3L07 - topDownDesign_instruction: Maging komportable sa istraktura ng programang
        ito, pagkatapos ay pumunta sa sunod na ehersisyo. (I-click para makita ang
        buong mga instruksyon)
      SG U3L07 More Subgoals_instruction: |-
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      SG U3L08 - createTwoParamTriangle_instruction: |-
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      SG U3L08 - digitalScene_instruction: |-
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      SG U3L08 - drawSquareWithParam_instruction: |-
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      SG U3L08 - fish_instruction: Magdagdag ng parameter sa drawFish na nagbabago
        sa laki ng isda na iguguhit. (I-click para makita ang buong mga instruksyon)
      SG U3L08 - freePlay_instruction: Patuloy na magdagdag sa iyong larawan sa pamamagitan
        ng paggawa ng mas maraming mga tawag sa iyong mga function na may mga parameter.
        (I-click para makita ang buong mga instruksyon)
      SG U3L08 - individualCode_instruction: |-
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      SG U3L08 - introUnderTheSea - recovery_instruction: Magdagdag ng ekstrang isda,
        bituing-dagat, at piraso ng mga damong-dagat sa larawan. Tingnan ang, ngunit
        huwag baguhin, ang mga function na naglikha sa mga ito. (I-click para makita
        ang buong mga instruksyon)
      SG U3L08 - introUnderTheSea_instruction: Magdagdag ng ekstrang isda, bituing-dagat,
        at piraso ng mga damong-dagat sa larawan. Tingnan ang, ngunit huwag baguhin,
        ang mga function na naglikha sa mga ito. (I-click para makita ang buong mga
        instruksyon)
      SG U3L08 - multiParamFish_instruction: |-
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      SG U3L08 - paramsToStarfish_instruction: |-
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      SG U3L08 - randomInput_instruction: Gumamit ng randomNumber() na mga bloke para
        masubukan ang mga function na iyong dinesyo na may random na input. (I-click
        para makita ang buong mga instruksyon)
      SG U3L08 - seaGrass_instruction: |-
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      SG U3L08 - squareTwoParams_instruction: Tawagin ang drawSquare() para makumpleto
        ang drowing ng dalawang mga parisukat. (I-click para makita ang buong mga
        instruksyon)
      SG U3L08 comments_instruction: Gumamit ng randomNumber() na mga bloke para masubukan
        ang mga function na iyong dinisenyo na may random na input. (I-click para
        makita ang buong mga instruksyon)
      SG U3L08 how to add comments_instruction: Gumamit ng randomNumber() na mga bloke
        para masubukan ang mga function na iyong dinisenyo na may random na input.
        (I-click para makita ang buong mga instruksyon)
      SG U3L2 Using Simple Commands part 1_instruction: |-
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      SG U3L2 Using Simple Commands_instruction: Gumuhit ng 1x1 na parisukat sa taas
        at sa kaliwa ng panimulang posisyon ng turtle. I-click para makita ang buong
        mga instruksyon.
      SG U3L2_Add-subgoals_instruction: |-
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      SG U3L2_Turtle3by3Grid_instruction: Gumuhit ng isang 3x3 na grid sa harap at
        sa kanan ng turtle nang mas mabisa hangga't maaari. Ang turtle ay dapat matatapos
        sa orihinal na lokasyon nito, at nakaharap sa orihinal na lokasyon nito. (I-click
        para makita ang buong mga instruksyon)
      SG U3L2_TurtleSquare_right_instruction: Gumuhit ng parisukat sa harap at sa
        kanan ng panimulang posisyon. (I-click para ipakita ang buong mga instruksyon)
      SGU3L07 - randomDots1_instruction: |-
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      Sam the Butterfly 1 (copy 1)_instruction: |-
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |-
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Click "Run" and then use the
        arrow keys to move Sam around his yard, making note of Sam's coordinates
        at different locations. Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |-
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |-
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |-
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        safe from leaving both directions? Try using the and block to program the
        function on-screen? to check if Sam is safe-left? and safe-right?
      Sam the Butterfly 5_instruction: |-
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |-
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |-
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |-
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      SpecialFrozenLevel_instruction: Opisyal ka nang naging isang dalubhasang artista!
        Maglika ng isang kamangha-manghang taglamig na lugar.
      Standalone_Artist_1_instruction: Maligayang pagdating sa Artist! Una, subukan
        nating gumawa ng isang simpleng parisukat gamit ang turn right na bloke at
        move forward na bloke. Bawat gilid ay dapat 100 pixels ang haba.
      Standalone_Artist_2_instruction: Iguhit ang dyamanteng ito na may 120 at 60
        degree na mga anggulo at mga gilid na 150 pixel ang haba.
      Standalone_Artist_3_instruction: Maaari mo bang iguhit ang hexagon na ito na
        may mga gilid na 100 pixel at mga pag-ikot na 60 degree?
      Standalone_Artist_4_instruction: Ngayon ay mayroon ka nang bagong bloke para
        paglaruan, ang loop. Ito ay mag-uulit sa isang hanay ng mga utos. Ano ang
        mangyayari kung i-loop mo ang mga utos na ito nang 6 na beses?
      Standalone_Artist_5.5_instruction: 'Pansinin kung paano nating ginawang simple
        ang dyamanteng code sa pamamagitan ng paggawa nito sa isang loop. Maaari mong
        i-loop ang buong pagkakasunod-sunod nang 12 beses para maiguhit ang bulaklak.
        Hint: Kailangan mong umikot ng 30 degrees pagkatapos ng iyong dyamanteng loop
        para hindi ka palaging magguguhit sa taas ng parehong dyamante.'
      Standalone_Artist_5_instruction: Ilang ulit ba kailangan mong i-loop ang dyamanteng
        ito para maiguhit ang bulaklak?
      Standalone_Artist_6_instruction: 'I-loop ang hexagon code na ito nang 6 na beses
        para malikha ang disenyo. Ilang degree ba ang kailangan mong iikot sa bawat
        beses? Hindi: hatiin ang bilang ng degrees sa isang circle sa ilang beses
        ka nag-loop.'
      Standalone_Artist_7_instruction: 'Ang function ay isa pang kagamitan sa pag-program
        na tumutulong sa iyo na iwasan ang pag-ulit-ulit sa iyong sarili. Ang function
        na ito ay gumuguhit ng isang bulaklak, para magamit mo ito nang ilang beses
        na gusto mong gumuhit ng bulaklak. Gamitin ito at ang bagong jump na bloke
        para maiguhit ang mga bulaklak na mga ito. Hint: Ang mga bulaklak ay 150 pixels
        ang pagitan'
      Standalone_Artist_8_instruction: Narito ang isang function na tinatawag na "Draw
        a shape" na ating ginawa para gumuhit ng mga hexagon. Patakbuhin ang code
        para makita kung ano ang ginagawa nito at pagkatapos ay mag-eksperimento sa
        function para makita kung ano ang mangyayari. Maaari mo bang magawa ito para
        gumuhit ng isang pattern ng mga parisukat, mga tatsulok, o mga oktagon?
      Standalone_Artist_9_instruction: Ngayon, pumunta na at gumawa ng anumang larawan
        na gusto mo! Mayroon ka na ding walang laman na function na maaaring magsagawa
        sa anumang gusto mo!
      Standalone_Artist_v2_instruction: Maligayang pagdating sa Artist! Una, subukan
        nating gumawa ng isang simpleng parisukat gamit ang turn right na bloke at
        move forward na bloke. Bawat gilid ay dapat 100 pixels ang haba.
      StepIntro_instruction: Here's how to use the "Step" button.
      Test Play Lab_instruction: This is a test play lab level.
      Test embedded Blockly in instructions_instruction: |-
        As a block element, we
        should be able to include XML representing a valid Blockly block or blocks.\r
        \r
        <xml>\r
          <block
        type="draw_move_by_constant">\r
            <title name="DIR">moveForward</title>\r
            <title
        name="VALUE">100</title>\r
          </block>\r
        </xml>\r
        \r
        We also support
        Blockly XML as an inline element like so: <xml><block type="draw_move_by_constant"><title
        name="DIR">moveForward</title><title name="VALUE">100</title></block></xml>.
        The difference in input format being that this one is embedded within a paragraph,
        whereas the previous one is in a text block of its own. The difference in
        output is comparable.
      Test embedded K1 Blockly in instructions_instruction: |-
        Use three `move west`
        blocks and one `pick corn` block to solve this puzzle.
      Test of comment block_instruction: I-drag palabas ang subgoal label na bloke
        na gusto mo.
      Testing Quantum Farmer_instruction: "Wow, look at that! \\r\n\\r\nI don't know\nhow
        many shovelfuls of dirt this hole needs.  \\r\nCan you write a program\nthat
        keeps using the `fill` block until the ground is even?  "
      Text Compression 1_instruction: |
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.\r
        \r
      The Vigenere Cipher Widget_instruction: Alituntunin
      The Vigenere Cipher_instruction: Alituntunin
      Total Artist Clone Me_instruction: |-
        Freeplay: Here are the functions you've
        written, and some more for you to play with. Draw something awesome! Play
        with the pen width to see how different your drawings look!
      U1L10 NetSim numbers with decimal_instruction: |-
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |-
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L13 Text Compression_instruction: |-
        Look for patterns (repeated words or phrases)
        in the text. Enter the patterns you see into the dictionary on the right.
        As you type entries into the dictionary, the symbol for the entry is inserted
        into the text in place of the pattern.
      U1L4 NetSim SendAB_instruction: "Develop, document, and test a protocol that\nallows
        you to use Internet Simulator to relay a message. See the worksheet\nfor more
        detailed instructions.  "
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |-
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2 Vigenere_instruction: Test
      U2 frequency caesar_instruction: Alituntunin
      U2 frequency random sub_instruction: Alituntunin
      U2 vigenere cipher_instruction: Alituntunin
      U2L04 - NetSim Routers with Addresses_instruction: |-
        Send messages with your
        classmates (Click to see full instructions)
      U2L05 - NetSim - Packets and Building TCP_instruction: |-
        Develop a Protocol
        for Reliably Sending a Message.\r
        \r
        Constraints:\r
        - Packets may contain
        only 6 characters\r
        - Packets may drop with small probability\r
        - Packets
        may not arrive in order
      U2L10 NetSim Automatic DNS_instruction: |-
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |-
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L14 frequency random_instruction: Test
      U2L2 NetSim Hub Mode_instruction: |
        Now use the Internet Simulator to send the
        battleship moves. For setup, join a Room with your group, and add ships to
        your paper board for each opponent. When playing, all communication must be
        done through the tool, so no talking, but have fun!\r
      U2L3 NetSim Hub Mode_instruction: |-
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: |-
        For this activity, connect to a
        router with the others in your group. Important note: The router will only
        properly route messages where the first 4 bits are the To: address and the
        second 4 bits are the From: address.\r
        \r
        [TODO: NetSim needs to support
        hierarchical addresses. For now, level is set up for 4 bit to and from addresses]
      U2L5 NetSim Classroom Internet_instruction: |
        For this activity, connect to
        a router with the others in your group. The Internet Simulator now provides
        a place for you to put the To and From addresses, so you don't have to type
        out the bits manually.\r
        \r
      U2L7 NetSim Need for Packets_instruction: |-
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U3 - Arrays - Demo App_instruction: |-
        Use the "My Favorite Things" app. How
        might this app be making use of an array? (Click to see full instructions)
      U3 - Arrays - appendItem_instruction: |-
        Create an array of odd numbers 1-11
        by using appendItem. (Click to see full instructions)
      U3 - Arrays - assignment_instruction: |-
        Use indexes to change the values in
        this array from 1 to 0. (Click to see full instructions)
      U3 - Arrays - assignment2_instruction: |-
        Calculate the sum of three values stored
        in an array. (Click to see full instructions)
      U3 - Arrays - assignment3_instruction: |-
        Increase the value of each value in
        the randomly generated array by 1. (Click to see full instructions)
      U3 - Arrays - createFirstArray_instruction: |-
        Create an array of the even numbers
        from 0 to 10 and display its contents with console.log. (Click to see full
        instructions)
      U3 - Arrays - expressionsAsIndexes_instruction: |-
        Write a program that displays
        a randomly chosen color from the array. (Click to see full instructions)
      U3 - Arrays - favThings Counting Variable_instruction: |-
        Create a global variable
        for the current index and use it to display the first item in the array. (Click
        to see full instructions)
      U3 - Arrays - favThings Next_instruction: |-
        Write code that allows the user
        to move forward through your list by clicking the "Next" button. (Click
        to see full instructions)
      U3 - Arrays - favThings Prev_instruction: |-
        Write code that allows the user
        to move backward through your list by clicking the "Last" button. (Click
        to see full instructions)
      U3 - Arrays - favThings addItem_instruction: |-
        Write code that allows a user
        to add their own favorite things to the list. (Click to see full instructions)
      U3 - Arrays - favThings bounds_instruction: |-
        Add if statements to your event
        handlers that prevent the global index from going out of bounds. (Click to
        see full instructions)
      U3 - Arrays - favThings createArray_instruction: |-
        Create an array of words
        describing your favorite things. (Click to see full instructions)
      U3 - Arrays - favThings firstOutput_instruction: |-
        Use setText to display the
        first item in the array. (Click to see full instructions)
      U3 - Arrays - favThings giveIDs_instruction: |-
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - favThings keepPlaying_instruction: |-
        Make any other improvements
        you want! (Click to see full instructions)
      U3 - Arrays - favThings template_instruction: |-
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - globalVariableIndex_instruction: |-
        Give your UI elements descriptive
        and meaningful IDs. (Click to see full instructions)
      U3 - Arrays - indexPractice_instruction: |-
        Write the contents of the array to
        the screen in numerical order. (Click to see full instructions)
      U3 - Arrays - insertingItems_instruction: |-
        Insert items into an array to form
        a complete sentence. (Click to see full instructions)
      U3 - Arrays - insertionErrors_instruction: |-
        Run each command that references
        indexes that are out of bounds and observe the results. (Click to see full
        instructions)
      U3 - Arrays - introIndex_instruction: |-
        Display the first and last element in
        the array. Display the number 5 from the array. (Click to see full instructions)
      U3 - Arrays - length_instruction: |-
        Use list.length to determine the length
        of each array. (Click to see full instructions)
      U3 - Arrays - lengthMinus1_instruction: |-
        Use list.length - 1 to log the last
        item in the array to the console. (Click to see full instructions)
      U3 - Arrays - remove_instruction: |-
        Remove items from an array to form a complete
        sentence. (Click to see full instructions)
      U3 - Arrays - stringsInArrays_instruction: |-
        Write a sentence word by word by
        adding strings to an array. (Click to see full instructions)
      U3 - Canvas - 200dots_instruction: |-
        Add a loop to your program that draws 200
        dots on your canvas. (Click to see full instructions)
      U3 - Canvas - One Dot sprayPaint_instruction: |-
        Write code that redraws your
        image using a dot whose x and y locations use offsetX and offsetY with a small
        random value added. (Click to see full instructions)
      U3 - Canvas - appendToArray_instruction: |-
        Create an array to store each event
        parameter. Append each event parameter to this array within your event handler.
        (Click to see full instructions)
      U3 - Canvas - changeToMouseMove_instruction: |-
        Change your program so that dots
        are drawn at the location of the mouse as the user moves the mouse on the
        canvas. (Click to see full instructions)
      U3 - Canvas - clickToAdd_instruction: |-
        Change your program so that dots are
        added to the canvas when the user clicks on it. (Click to see full instructions)
      U3 - Canvas - delete_instruction: |-
        Create a button that deletes the drawing
        by clearing the canvas and removing all stored values. (Click to see full
        instructions)
      U3 - Canvas - draw at click point_instruction: |-
        Change your program so that
        dots are drawn at the location of the mouse click. (Click to see full instructions)
      U3 - Canvas - freePlay_instruction: |-
        Extend the functionality of one of the
        effects, or create an entirely new one of your own. (Click to see full instructions)
      U3 - Canvas - introCanvas_instruction: |-
        Add a canvas to your app and set it
        to be the active canvas. Then add a large dot to your canvas. (Click to see
        full instructions)
      U3 - Canvas - movementFunction fix Orig_instruction: |-
        Modify the "Original"
        button event handler so that it takes the movement of the mouse into account.
        (Click to see full instructions)
      U3 - Canvas - movementFunction_instruction: |-
        Write a function that takes the
        movement of the mouse as input and generates a line width as output. (Click
        to see full instructions)
      U3 - Canvas - redrawOriginal_instruction: |-
        Write a function that processes
        your array, redrawing the dots as they originally appeared. (Click to see
        full instructions)
      U3 - Canvas - redrawRandom_instruction: |-
        Set up a button and event handler
        for the random function. (Click to see full instructions)
      U3 - Canvas - redrawRandom2_instruction: |-
        Write a function that processes your
        array, redrawing every dot with a random size. (Click to see full instructions)
      U3 - Canvas - shiftKey_instruction: |-
        Add an if statement to your event handler
        so dots are only drawn when the shift key is pressed. (Click to see full instructions)
      U3 - Canvas - sketch_instruction: |-
        Write code that redraws your image using
        a sketch effect. (Click to see full instructions)
      U3 - Canvas - sprayPaint_instruction: |-
        Update the spray paint code so that
        it redraws your image using multiple random dots instead of using a nested
        for loop. (Click to see full instructions)
      U3 - Canvas - transparentDots_instruction: |-
        Change the colors of your dots
        so they have a fully transparent stroke and partially transparent fill. (Click
        to see full instructions)
      U3 - Canvas - usingOffsetXY_instruction: |-
        Add a console.log command inside
        the function of your event handler. Use it to display the event parameter.
        Click on the screen to see the contents of the event parameter (Click to see
        full instructions)
      U3 - Conditional Basics - 6_instruction: |-
        Add a setText after the if statement
        to "Nope. Guess again." (Click to see full instructions)
      U3 - Conditionals - Combine AND OR Simple_instruction: |-
        Write an if statement
        that uses AND and OR to display "Sleep in!" if it's the weekend and the
        user is a teenager. (Click to see full instructions.
      U3 - Conditionals - Combine AND OR and NOT_instruction: |-
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instructions.)
      U3 - Conditionals - Combine AND and OR_instruction: |-
        Write an if statement
        that uses AND and OR to display "Time to go to school!" if it's not the
        weekend and the user is under 18. (Click to see full instrucitons.
      U3 - Conditionals - Simple AND_instruction: |-
        Write an if statement that uses
        AND to display "You are a teenager." if the user enters an age between 13
        and 19. (Click to see full instructions)
      U3 - Conditionals - Simple OR_instruction: |-
        Write an if statement that uses
        OR to display "It's the weekend!" if the user enters a weekend day at the
        prompt. (Click to see full instructions)
      U3 - Conditionals - intoOr_instruction: |-
        Add 2 if statements that use the OR
        operator. (Click to see full instructions)
      U3 - Conditionals - introAND_instruction: |-
        Add 2 if statements that use the
        OR operator. (Click to see full instructions)
      U3 - Design Mode - Console Log_instruction: |-
        Update the ID names and `console.log`
        messages to match the correct button. (Click to see full instructions.)
      U3 - Design Mode - Layers and Delete_instruction: |-
        Fix the layout of the bullseye
        game. (Click to see full instructions)
      U3 - Design Mode - Multi Screens 2_instruction: |-
        Make a 2 screen app which
        can switch back and forth between a black screen and a white screen using
        buttons. (Click to see detailed instructions.)
      U3 - Design Mode - Multi Screens_instruction: |-
        Make a 2 screen app with a black
        screen and a white screen. (Click to see detailed instructions)
      U3 - Design Mode - Other Events_instruction: |-
        Delete the button and make the
        image move to a random location when you click on it. (click to see detailed
        instructions)
      U3 - Design Mode - WTF Console Log_instruction: |-
        Add a 3 console.log messages
        and test them out. (Click to see full instructions.)
      U3 - Design Mode -Recreate Beyond Buttons_instruction: |-
        Recreate the game from
        the "Chaser Game" with a Welcome Screen and Game Over Screen. (Click to
        see full instructions.)
      U3 - Design Mode 1_instruction: |-
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U3 - Dice - Dropdown and Score_instruction: |-
        Add guess and score to the Dice
        Game (Click to see full instructions)
      U3 - Dice - Dropdown with Strings_instruction: |-
        Add a dropdown for difficulty
        level that prints the difficulty level in the console. (Click to see full
        instructions)
      U3 - Dice - If_instruction: |-
        Show different die images for the random number
        generated. (Click to see full instructions)
      U3 - Dice - Nested_instruction: |-
        Use nested if statements to make the scoring
        different for the different game levels. (Click to see full instructions)
      U3 - High Low - Debug_instruction: |-
        Debug the order of the conditionals so
        that it will actually tell the user when their guess is close. (Click to see
        full instructions)
      U3 - High Low - Dropdown_instruction: |-
        Add a dropdown for their guess instead
        of promptNum (Click to see full instructions)
      U3 - High Low - Else if_instruction: |-
        Add an else-if statement in order to
        tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U3 - High Low - Else_instruction: |
        Add an else statement so that the program
        will tell the user when they are right and when they are wrong. (Click to
        see full instructions)\r
      U3 - High Low - If_instruction: |-
        Add code to the if statement that indicates
        the user guessed the secret number. (Click to see full instructions)
      U3 - Keys - Add Image URLs_instruction: |-
        Add image URLs to your array. Replace
        the text area with an image and setText with setImageURL. Then test your app!
        (Click to see full instructions)
      U3 - Keys - Buttons and Keys_instruction: |-
        Have the program respond the same
        way for both clicking images on the screen and hitting the up and down keys
        on the keyboard. (Click to see full instructions)
      U3 - Keys - Demo App_instruction: |-
        Play with the image scroller. Press the
        left and right arrows to progress through the images.
      U3 - Keys - Final Image Scroller_instruction: |-
        Update the image scroller to
        respond to buttons and key presses. (Click to see full instructions)
      U3 - Keys - Functions_instruction: |-
        Write doUpArrow and doDownArrow functions
        and call the functions instead of duplicating the code. (Click to see full
        instructions)
      U3 - Keys - Key Up and Down_instruction: |-
        Try out the keyup and keydown events
        to see how they are different from keypress. (Click to see full instructions)
      U3 - Keys - Multiple Keys_instruction: |-
        Play a different sound when the down
        arrow is pressed. (Click to see full instructions)
      U3 - Keys - Practice Adding Images with URL_instruction: |-
        Add image URLs to
        your image array. Test out the add button. Style your image scroller. (Click
        to see full instructions)
      U3 - Keys - Words to Images_instruction: |-
        Add image URLs to your image array.
        Test out the add button. Style your image scroller. (Click to see full instructions)
      U3 - Loops -  9 Part 2_instruction: |-
        Change the boolean expression for the
        while loop so that it will roll until both dice are greater than 3. (Click
        to see full instructions)
      U3 - Loops -  Complex Condition_instruction: |-
        Change the boolean expression
        for the while loop so that it will stop when both dice are greater than or
        equal to 5. (Click to see full instructions)
      U3 - Loops - 1_instruction: |-
        Change the condition for the while loop to check
        if the variable num is less than 90. (Click to see full instructions)
      U3 - Loops - 10_instruction: |-
        Write a program that simulates the rolling of
        two dice. Roll the dice repeatedly until the sum of the dice is either 7 or
        11.
      U3 - Loops - 11_instruction: |-
        Fix the condition so that it keeps rolling the
        die as long as the value is not a 2 or a 3 instead of rolling infinitely.
        (Click to see full instructions)
      U3 - Loops - 12_instruction: |-
        Change the code so that it prints the string
        "Hi" 5 times. (Click to see full instructions)
      U3 - Loops - 13_instruction: |-
        Update the code to count up by 3 instead of 1.
        (Click to see full instructions)
      U3 - Loops - 14_instruction: |-
        Change the loop condition to prevent the infinite
        loop and stop counting once the count is past 30. (Click to see full instructions)
      U3 - Loops - 15_instruction: |-
        Count the number of times the sum of the dice
        is 12. (Click to see full instructions)
      U3 - Loops - 16_instruction: |-
        Find out how many times you have to roll to get
        the sum of 7 100 times (Click to see full instructions)
      U3 - Loops - 2_instruction: |-
        Try creating an infinite loop using !=, > and
        <. (Click to see full instructions)
      U3 - Loops - 3_instruction: |-
        Change the if statement to a while loop so the
        program will run until it rolls a 6. (Click to see full instructions)
      U3 - Loops - 4_instruction: |2-
         Use the Debug Commands to make a list of all
        the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - 5_instruction: |-
        Add code inside the while loop which will update
        the variable num so that the condition will eventually become false. (Click
        to see full instructions)
      U3 - Loops - 6_instruction: |-
        Fix the problem so the loop will run at least
        once. Change the initial value of num to a dummy value such as -1. (Click
        to see full instructions)
      U3 - Loops - 7_instruction: |-
        Without adding any lines of code, reorder the
        code so that it prints all the values of num. (Click to see full instructions)
      U3 - Loops - 8_instruction: |-
        Debug which number is not getting printed and
        add a write statement to display that value. (Click to see full instructions)
      U3 - Loops - 9_instruction: |2-
         Modify the condition so that it keeps rolling
        as long as both are less than 3. (Click to see full instructions)
      U3 - Loops - Continue_instruction: |2-
         Use the Debug Commands to to make a list
        of all the values rolled before a 6. (Click to see full instructions)
      U3 - Loops - Minus Minus_instruction: |-
        Change the code to count down from 10
        to 1. (Click to see full instructions)
      U3 - Loops - Plus Plus_instruction: |-
        Change the code to use count++ instead
        of count = count + 1.  (Click to see full instructions)
      U3 - Loops - Typing in Console_instruction: |-
        Use console to check the ending
        value of num. (Click to see full instructions)
      U3 - Loops - minus = operator_instruction: |-
        Update the code to use the -= operator
        to count from 30 down to 0 by 3's. (Click to see full instructions)
      U3 - Loops - plus and minus = operator_instruction: |-
        Update the code to use
        the += operator. (Click to see full instructions)
      U3 - Loops And Arrays - Add 5_instruction: |-
        Add 5 to all the values in an array
        (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 1_instruction: |-
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Challenge 2_instruction: |-
        Write a function that finds
        and returns the minimum value in an array.   (Click to see full instructions)
      U3 - Loops And Arrays - Counting Times_instruction: |-
        Count the number of times
        5 appears in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Divid by 2_instruction: |-
        Divide every value in the
        array by 2. (Click to see full instructions)
      U3 - Loops And Arrays - Find Max_instruction: |-
        Design a function that displays
        the smallest number in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Find Min_instruction: |-
        Complete the findMinVal function
        to find and display the smallest value in an array  (Click to see full instructions)
      U3 - Loops And Arrays - Functions that Return Value_instruction: |-
        Call findMin
        within the console.log statement to calculate the minimum of two values.  (Click
        to see full instructions)
      U3 - Loops And Arrays - General Search Param_instruction: |-
        Add a second parameter
        to the search function for the value to search for.  (Click to see full instructions)
      U3 - Loops And Arrays - Intro For Loop_instruction: |-
        Add a for loop with a
        console.log inside and test out the 3 pieces of the for loop. (Click to see
        full instructions)
      U3 - Loops And Arrays - Linear Search_instruction: |-
        Visit every element in
        the array and display "true" if the value is a 5, and "false" otherwise.
        (Click to see full instructions)
      U3 - Loops And Arrays - Loop Array If_instruction: |-
        Use an if statement to
        only display the values in the array that are greater than 5. (Click to see
        full instructions)
      U3 - Loops And Arrays - Make it a Function - add list parameter_instruction: |-
        Create
        a function that takes a list parameter and prints if the list contains a 5.
        (Click to see full instructions)
      U3 - Loops And Arrays - Make it a Function_instruction: |-
        Move the code that
        searches the list for a 5 into a function called "search". (Click to see
        full instructions)
      U3 - Loops And Arrays - Multiple Returns_instruction: |-
        Test out the return
        values of the findMax function.  (Click to see full instructions)
      U3 - Loops And Arrays - Print Array_instruction: |-
        Use a for loop to print out
        all the values in an array. (Click to see full instructions)
      U3 - Loops And Arrays - Printing Single True_instruction: |-
        Process the array
        and display a single "true" if the array contains a 5 or a single "false"
        if it does not.  (Click to see full instructions)
      U3 - Loops And Arrays - Return Index_instruction: |-
        Make the search function
        return the index of the search value in the array. (Click to see full instructions)
      U3 - Loops And Arrays - Return Value_instruction: |-
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Loops And Arrays - Search and Remove_instruction: |-
        Search for 5 in the
        array and remove it from the array. (Click to see full instructions)
      U3 - Loops And Arrays - Search with Boolean Var_instruction: |-
        Make a boolean
        variable to use as a flag to keep track of whether there is a 5 in the array.
        (Click to see full instructions)
      U3 - Loops And Arrays - useFindMin_instruction: |-
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Movie Bot - Multiple If Sequences_instruction: |-
        Add another set of if,
        else if, and else statements inside the question if statement to check for
        keywords for movie ratings (G, PG, PG-13, and R). (Click to see full instructions)
      U3 - Movie Bot - Nested Motivation_instruction: |-
        Add a separate set of if statements
        to check for a "?" in the input. (Click to see full instructions)
      U3 - Movie Bot - When Multiple If Statements_instruction: |-
        Add an if and else-if
        statement that checks for please and thank you. (Click to see full instructions)
      U3 - Movie Bot - toLowerCase_instruction: |-
        Use the toLowerCase command to change
        all user input into lowercase letters after they enter it. (Click to see full
        instructions)
      U3 - Practice Create Performance Task_instruction: |-
        Design and implement your
        practice Create Performance Task. (Click to see full instructions)
      U3 - Read Record - 1.2_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.5_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1.6_instruction: |
        Console.log the records returned by a
        call to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 1_instruction: |
        Console.log the records returned by a call
        to readRecords. (Click to see full instructions)\r
      U3 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table.(Click to see full instructions)\r
      U3 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U3 - Read Record - 4.1_instruction: |
        Print out each record return from the
        readRecords call individually. (Click to see full instructions)\r
      U3 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U3 - Read Record - 5 and half_instruction: |
        Print out the name of each movie
        in the records return from the readRecords call. (Click to see full instructions)\r
      U3 - Read Record - 5_instruction: |
        Print out the name of each movie in the
        records return from the readRecords call. (Click to see full instructions)\r
      U3 - Return Values - constrainTurtle_instruction: |-
        Use constrain in this simple
        app to keep the turtle from driving off the screen.  (Click to see full instructions)
      U3 - Return Values - debuggingConstrain_instruction: |-
        Correct the error in
        constrain so that it returns the appropriate value.  (Click to see full instructions)
      U3 - Return Values - debuggingMaxVal_instruction: |-
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - debuggingReturns_instruction: |-
        Correct the error in maxVal
        so that it correctly reports the maximum value.  (Click to see full instructions)
      U3 - Return Values - increase1_instruction: |-
        Call the increase function within
        moveForward, write, and console.log.  (Click to see full instructions)
      U3 - Return Values - increase2_instruction: |-
        Change the increase function to
        return 3 times the input value. (Click to see full instructions)
      U3 - Return Values - min1_instruction: |-
        Test out the return values of the findMax
        function.  (Click to see full instructions)
      U3 - Return Values - useFindMin_instruction: |-
        Call findMin within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - useMinVal_instruction: |-
        Call minVal within the console.log
        statement to calculate the minimum of two values.  (Click to see full instructions)
      U3 - Return Values - wrapTurtle_instruction: |-
        Write wrap in this simple app
        to let the turtle "wrap" to the other side of the screen when it goes off.  (Click
        to see full instructions)
      U3 - Return Values - writeMaxVal_instruction: |-
        Write the function maxVal and
        then use it within the console.log statement to calculate the maximum of two
        values.  (Click to see full instructions)
      U3 - Search Terms - 1_instruction: |
        Create an array of all the movies made
        in 2008 and print it out. (Click to see full instructions)\r
      U3 - Search Terms - 2_instruction: |
        Print out all the movies with year 2008
        using the readRecords search terms. (Click to see full instructions)\r
      U3 - Search Terms - 3_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 4_instruction: |
        Print whether or not there are movies matching
        the search criteria (Click to see full instructions)\r
      U3 - Search Terms - 5_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Search Terms - 6_instruction: |
        Print out the cities that are in California
        or have a population of 2,000,000. (Click to see full instructions)\r
      U3 - Simple Drawing - Comments_instruction: Do this
      U3 - Simple Drawing - Ellipse and No Fill_instruction: Do this
      U3 - Simple Drawing - Fill_instruction: Do This
      U3 - Simple Drawing - No Fill_instruction: Do this
      U3 - Simple Drawing - Order of Blocks_instruction: Do this
      U3 - Simple Drawing - Oval_instruction: Do This
      U3 - Simple Drawing - Personal Drawing_instruction: DO This
      U3 - Simple Drawing - Rectangle Width and Height_instruction: Do This
      U3 - Simple Drawing - Rectangle_instruction: Do This
      U3 - Simple Drawing - Road Ellipse_instruction: Do This
      U3 - Simple Drawing - Road Rects and Color_instruction: Do This
      U3 - Simple Drawing - Simple Shape Drawing_instruction: Do This
      U3 - Simple Drawing - Stroke and Stroke Weight_instruction: Do this
      U3 - Simple Drawing - X and Y values_instruction: Do This
      U3 - Simple Drawing - regular polygon_instruction: Do this
      U3 - Simple Drawing - text_instruction: Do This
      U3 - Simulation - 1_instruction: |-
        Use a while loop to "flip a coin 10 times"
        and write the values to the screen. (Click to see full instructions)
      U3 - Simulation - 2.1_instruction: |-
        Change your looping condition so the simulation
        runs until there are 5 heads flipped. (Click to see full instructions)
      U3 - Simulation - 2.5_instruction: |-
        Run your simulation to get the full 10,000
        heads! How long did it take? (Click to see full instructions)
      U3 - Simulation - 2_instruction: |-
        Keep track of how many heads (1's) your
        program generates and print the results to the screen. (Click to see full
        instructions)
      U3 - Simulation - 3_instruction: |
        Add functionality that counts how many heads
        in a row are flipped. (Click to see full instructions)\r
      U3 - Simulation - 4_instruction: |-
        Update your while loop's condition so the
        the coin flips until there are three heads in a row. (Click to see full instructions)
      U3 - Simulation - 5_instruction: |-
        Change your while loop to run until you get
        a streak of 12 heads. How many flips did it take? (Click to see full instructions)
      U3 - Simulation - 6_instruction: |-
        Keep adding to your simulation. What do you
        want to explore next? (Click to see full instructions)
      U3 - Simulation - App_instruction: |-
        Change your code to run the full simulation
        with 10,000 coins. What was your longest streak of heads? (Click to see full
        instructions)
      U3 - Simulation - Template_instruction: |-
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3 - Sprites - Intro Sprites_instruction: Do This
      U3 - Sprites and Mod - Create  and Draw Sprite_instruction: Do This
      U3 - Sprites and Mod - Mouse Width and Height_instruction: Do this
      U3 - Sprites and Mod - Mouse X and Y_instruction: Do this
      U3 - Sprites and Mod - Rand Around Mouse_instruction: Do this
      U3 - Sprites and Mod - Rand Shape Color_instruction: Do This
      U3 - Sprites and Mod - Shape Color_instruction: Do This
      U3 - Sprites and Mod - Wrap Many Squares_instruction: Do This
      U3 - Sprites and Mod - X and Y Prop_instruction: Do This
      U3 - Sprites and Mod - two sprites_instruction: Do This
      U3 - User Input - Save getText To Variable_instruction: |-
        Save the age and name
        of the user in variables (Click to see full instructions)
      U3 - User Input - Saving After Input_instruction: |-
        Save the age of the user
        in a variable using getText() (Click to see full instructions)
      U3 - User Input and String -  Concat_instruction: |-
        Output a message about age
        in a Text Area (Click to see full instructions)
      U3 - Variables - Clicker Game_instruction: |-
        Create your improved Chaser-Game
        here. (Click to see full instructions)
      U3 - Variables - Debug Scope_instruction: |-
        Why isn't the value of foo changing
        correctly? Make a guess. (Click to see full instructions)
      U3 - Variables - Debugging with Turtle_instruction: |-
        Use your new debugging
        techniques to get the code to run correctly (Click to see full instructions)
      U3 - Variables - Decrement_instruction: |-
        Decrement the value of the variable.
        (Click to see full instructions)
      U3 - Variables - Identify Variables_instruction: |-
        Identify the values printing
        in the terminal with console.log statements. (Click to see full instructions)
      U3 - Variables - Increment_instruction: |-
        Use the console.log debugging technique
        to see what is happening in this example. Add another variable and increment
        its value. (Click to see full instructions)
      U3 - Variables - Incrementing Variables_instruction: |-
        Create a repeat loop
        for the repeated code and use increment to recreate the original program with
        less lines of code! (Click to see full instructions)
      U3 - Variables - Read Using Turtle_instruction: |-
        Create a second set of variables
        for x and y position. Move turtle to that new location. (Click to see full
        instructions)
      U3 - Variables - Reassigning Variables with Console.log_instruction: |-
        Add another
        reassignment statement at the end of the code to change the value of the variable
        at second time. (Click to see full instructions)
      U3 - Variables - Set to Expression with Other Variables and Turtle_instruction: |-
        (click
        to see full instructions)
      U3 - Variables - Set to Expression with Other Variables_instruction: |-
        Write
        an expression that calculates the player's total score and stores it in the
        totalScore variable. The calculation is: the player's points times lives
        divided by the total time. (click to see full instructions)
      U3 - Variables - Set to Expression with Turtle_instruction: |-
        (click to see
        full)
      U3 - Variables - Set to Expression_instruction: |-
        Test out the new expressions.
        (Click to see full instructions)
      U3 - images - bee free play_instruction: Do this
      U3 Digital Assistant Design_instruction: |-
        Pick a topic for your Digital Assistant
        and create the basic layout with a text input and text area. (Click to show
        full instructions)
      U3 Digital Assistant Set Text_instruction: |-
        Have your digital assistant repeat
        back what the user types and include a canned response. (Click to see full
        instructions)
      U3 Digital Assistant Target - Mehal_instruction: |-
        Try out a demo of the Digital
        Assistant!
      U3 Digital Assistant Target_instruction: Try out a demo of the Digital Assistant!
      U3 Digital Assistant Template_instruction: This is a project template!
      U3 Digital_instruction: |-
        Choose a specialization topic for your digital assistant.
        Create a basic digital assistant that takes the user's input and displays
        back a default response.
      U3 Variables consolelog_instruction: |-
        Use the write block to display the value
        of size
      U3 Variables flower example_instruction: |-
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables gray square_instruction: |-
        Change the value of petalSize multiple
        times. How does it change your drawing?
      U3 Variables make a square_instruction: |-
        Change the value of size multiple
        times. How does it change your drawing?
      U3 Variables misconceptions try it_instruction: |-
        Test out your predictions
        from the previous level.
      U3 Variables randomize your square_instruction: |-
        Change the value of petalSize
        multiple times. How does it change your drawing?
      U3 Variables write_instruction: |-
        Use the write block to display the value of
        size
      U3 full clicker demo_instruction: Clicker game - Try it out!
      U3 mehal's clone_instruction: Try out a demo of the Digital Assistant!
      U3- Variables - Assign Random For Turtle Draw_instruction: |-
        Try writing the
        same code in text mode.
      U3- Variables - Changing the Value_instruction: |-
        Update the value of 'turnAmount'
        before each moveForward so the turtle turns a different amount each time.
        (Click to see full instructions)
      U3- Variables - Create And Assign_instruction: |-
        On one line add a variable
        called "lives" and assign it the value 3. Print it to the console. (Click
        to see full instructions)
      U3- Variables - Text Mode_instruction: |-
        1. Switch to text mode and type instructions;
        2. drag blocks out into text mode; 3. experiment with code completion
      U3-Design Mode-ID and Event Handler_instruction: |-
        Add an event handler for
        the button using the "Insert and show" link in the Design Mode Events tab.
        (Click to see full instructions).
      U3-Design Mode-ID_instruction: |-
        Using the Design Mode Events change the button
        ID and update the code to match. (Click to see detail instructions).
      U3-Design Mode-Image_instruction: |-
        Recreate the "Chaser Game" from the last
        lesson using Design Mode. (Click to see full instructions.)
      U313 Two Buttons with Ids_instruction: |-
        Predict what will happen. Once you've
        made a prediction, run the code to see what happens. (Click to see full instructions)
      U313 drag Two Buttons_instruction: |-
        Run a program with two buttons that have
        the same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U313 eventsDetails_instruction: |-
        Run a program with two buttons that have the
        same id to see the warning message in the console. Change the ids to make
        the program run without getting a warning message.
      U3L03 - draw rect function_instruction: |-
        Write a function called drawRectangle().\r
        (Click
        to see full instructions)
      U3L03 - draw step_instruction: |-
        Write the drawStep function. (Click to see
        full instructions)
      U3L03 Creating Procedures 1_instruction: |-
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |-
        Define a function called turnAround.
        Call the function and then move the turtle forward. (Click to see full instructions)
      U3L03 Draw a T using turnAround_instruction: |-
        Draw a plus sign using the provided
        version of turnAround().  (Click to see full instructions)
      U3L03 Three Steps_instruction: |-
        Define a function called drawSide() which draws
        three steps and moves the turtle to prepare for the next side (Click to see
        full instructions)
      U3L03 choose your own drawing_instruction: |-
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 define turnRight and draw a rectangle_instruction: |-
        Define a function
        called right() that turns the turtle to the right. Then use this function
        to draw a rectangle, as shown below. (Click to see full instructions)
      U3L03 draw diamond_instruction: |-
        Create a function called drawDiamond() that
        makes use of your previous work to draw the complete diamond. (Click to see
        full instructions)
      U3L04 - 3 by 3 with functions_instruction: |-
        Make the 3x3 square as efficiently
        as you can. (Click to see full instructions)
      U3L04 - snowflake_instruction: |-
        Create the design by breaking it down into
        layers of functions. (Click to see full instructions)
      U3L04 choose your own drawing_instruction: |-
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |-
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |-
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |-
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 - moveForwardwithParams_instruction: |-
        Use a single command to move the
        turtle to the edge of the screen. (Click to see full instructions)
      U3L06 Challenge 1 triangle_instruction: |-
        Use the parameterized versions of
        the turtle commands to create a triangle with sides 100 pixels long. (Click
        to see full instructions)
      U3L06 Challenge 2 purple square_instruction: |-
        Read the documentation for penColor()
        and penWidth() before using them to draw the blue square.
      U3L06 Challenge 3 fill pink_instruction: |-
        Fill in the background of the screen
        with your favorite color. (Click to see full instructions)
      U3L06 Challenge 4 bullseye_instruction: |-
        Create the bullseye using hexadecimal
        colors and dot(). (Click to see full instructions)
      U3L06 Challenge 5 overlapping circles_instruction: |-
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: "Read the documentation for the \"arcLeft\"\nand
        \"arcRight\" commands and then draw the squiggles as shown. "
      U3L06 Challenge 7 smiley face_instruction: |-
        Use turnTo() and moveTo() to help
        draw a smiley face. (Click to see full instructions)
      U3L06 Challenge 8 make your own_instruction: |-
        Create a drawing of your own.
        (Click to see full instructions)
      U3L07 - Free Play Loops and Random_instruction: |-
        Free Play! Use what you learned
        from loops and random to make your own little scene. Have fun.
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand
        random numbers to generate an image of starry night sky similar to one\nshown
        here.  We have given you some starter code to generate the ground and\nsky
        (just two giant dots), you will add code to this project to make the stars,\ngrass,
        and moon.  All of the effects are clever applications of turtle dots,\nlines,
        and colors.  To get started, follow the series of steps suggested in\nthe
        accompanying worksheet. "
      U3L07 - allSeaGrass_instruction: |-
        Add 50 pieces of seagrass to the image by
        writing drawAllSeagrass with a loop. (Click to see full instructions)
      U3L07 - bubbles_instruction: |-
        Add 200 bubbles to the image by writing drawAllBubbles
        with a loop. (Click to see full instructions)
      U3L07 - callingFunctionsInLoops_instruction: |-
        Call the function within the
        loop to complete the figure. (Click to see full instructions)
      U3L07 - createTriangleParam_instruction: |-
        Define a function that accepts a
        parameter to match the function calls and complete the image. (Click to see
        full instructions)
      U3L07 - fish_instruction: |-
        Add 15 fish to the image by writing drawAllFish
        with a loop. (Click to see full instructions)
      U3L07 - introSquare_instruction: |-
        Use a loop to draw a square. Then add another
        loop to draw many squares each one rotated some amount. (Click to see full
        instructions)
      U3L07 - loopsWithRandom_instruction: |-
        Increase the number of iterations to
        fill the screen with white. (Click to see full instructions)
      U3L07 - randomDots1_instruction: |-
        Increase the number of iterations to fully
        fill the screen with random dots. (Click to see full instructions)
      U3L07 - randomSquare_instruction: |-
        Draw the figure using a loop. (Click to
        see full instructions)
      U3L07 - seaGrass_instruction: |-
        Add a parameter to drawSeagrass that controls
        the number of waves in the grass. (Click to see full instructions)
      U3L07 - seaStar_instruction: |-
        Add 5 sea stars to the image by writing drawAllSeaStars
        with a loop. (Click to see full instructions)
      U3L07 - sunBeams_instruction: |-
        Add 100 sunbeams to the image by writing drawAllSunbeams
        with a loop. (Click to see full instructions)
      U3L07 - topDownDesign_instruction: |-
        Get comfortable with the structure of this
        program, then move on to the next exercise. (Click to see full instructions)
      U3L08 - Enchantment Under the Sea_instruction: |-
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, seagrass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L08 - createTwoParamTriangle_instruction: |-
        Define a function called drawTriangle()
        that accepts two parameters to set the size and width of the triangle. (Click
        to see full instructions)
      U3L08 - digitalScene_instruction: |-
        Create the functions you were assigned as
        part of your digital scene. (Click to see full instructions)
      U3L08 - drawSquareWithParam - for video_instruction: |-
        Use drawSquare() to recreate
        the image of both squares, this time using parameters. (Click to see full
        instructions)
      U3L08 - drawSquareWithParam_instruction: |-
        Use drawSquare() to recreate the
        image of both squares, this time using parameters. (Click to see full instructions)
      U3L08 - drawSquaresWithParams_instruction: |-
        Write drawSmallSquare() to draw
        a 25px square. (Click to see full instructions)
      U3L08 - fish_instruction: |-
        Add a parameter to drawFish that changes the size
        of the fish drawn. (Click to see full instructions)
      U3L08 - freePlay_instruction: |-
        Keep adding to your image by making more calls
        to your new functions with parameters. (Click to see full instructions)
      U3L08 - individualCode_instruction: |-
        Create the functions you were assigned
        as part of your digital scene. (Click to see full instructions)
      U3L08 - introUnderTheSea with comments_instruction: Magdagdag ng ekstrang isda,
        bituing-dagat, at piraso ng mga damong-dagat sa larawan. Tingnan ang, ngunit
        huwag baguhin, ang mga function na naglikha sa mga ito. (I-click para makita
        ang buong mga instruksyon)
      U3L08 - introUnderTheSea_instruction: |-
        Add an extra fish, starfish, and piece
        of seagrass to the image. Look at, but don't change, the functions that create
        them. (Click to see full instructions)
      U3L08 - multiParamFish_instruction: |-
        Add three parameters to your drawFish
        function to accept red, green and blue values to make your fish different
        colors. (Click to see full instructions)
      U3L08 - multipleLayersofParams_instruction: |-
        Call drawPlusSign() to complete
        the image. (Click to see full instructions)
      U3L08 - paramsToStarfish_instruction: |-
        Add a parameter to drawStarfish that
        changes the size of the starfish drawn. (Click to see full instructions)
      U3L08 - randomInput_instruction: |-
        Use the randomNumber() blocks to test the
        functions you designed with random input. (Click to see full instructions)
      U3L08 - seaGrass_instruction: |-
        Add a parameter to drawSeagrass that changes
        the size of the piece of seagrass drawn. (Click to see full instructions)
      U3L08 - squareTwoParams_instruction: |-
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 - starFish_instruction: |-
        Add an extra fish, starfish, and piece of seagrass
        to the image. Look at, but don't change, the functions that create them.
        (Click to see full instructions)
      U3L08 - triangleTwoParams_instruction: |-
        Call drawSquare() to complete the drawing
        of two squares. (Click to see full instructions)
      U3L08 how to add comments_instruction: Gumamit ng randomNumber() na mga bloke
        para masubukan ang mga function na iyong dinesyo na may random na input. (I-click
        para makita ang buong mga instruksyon)
      U3L1 - Simulation - Template_instruction: |-
        Use a while loop to "flip 10 coins"
        and write them to the screen. (Click to see full instructions)
      U3L12 Chaser Template_instruction: This is a project template!
      U3L13 - Button with ID_instruction: |-
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id Problem_instruction: |-
        Improve the button by choosing a descriptive
        and meaningful ID. (Click to see full instructions)
      U3L13 - Debug Id plus logic problem_instruction: |-
        The last problem was an example
        of syntax error.  App Lab did not understand which object it should be listening
        to for a "click" event so it showed an error message in the console to let
        you know.  Another kind of error is a logical error - the program is valid,
        but it's not doing what you want it to do.\r
        \r
        This program has 2 errors.
        A (tricky) syntax error and logical error.  Find them, fix them, and make
        the program work as expected.
      U3L13 - Debugging 1_instruction: |-
        Debug the program by verifying your IDs are
        being referenced properly. (Click to see full instructions)
      U3L13 - Debugging 2_instruction: |-
        Debug the program by properly ordering your
        button commands and event handlers. (Click to see full instructions)
      U3L13 - Debugging 3_instruction: |-
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      U3L13 - Project_instruction: |-
        Create your multi-screen app. (Click to see full
        instructions.)
      U3L13 - Turtle Driver Project_instruction: |-
        Create a "turtle driver" that
        includes buttons to move the turtle forward and turn it left and right. (Click
        to see full instructions)
      U3L13 - Turtle move with button_instruction: |-
        Add a button that moves the turtle
        when clicked.  (Click to see full instructions)
      U3L13 eventsDetails_instruction: |-
        Add an event handler to the button to move
        the turtle forward. (Click to see full instructions)
      U3L14 - Assigning Random Value_instruction: |-
        Write a program that simulates
        the rolling of two dice and reports their individual values as well as the
        sum. (click to see full instructions)
      U3L14 - Mini Calculator embed_instruction: |-
        You will be prompted for two numbers,
        one right after the other.  See what happens.  Enter different numbers until
        you get the idea.
      U3L14 - Unfortunate Events Free Play_instruction: |-
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L14 - User Input Division calculator_instruction: |-
        Write a program that acts
        as a simple calculator. (click to see full instructions)
      U3L14 - Variable ReAssignment pt2_instruction: |-
        Trace the code and predict
        what you think will be printed to the console. Then add a console.log statement
        at the end of the program to see the last value of someNum to see if your
        full prediction is correct. (click to see full Instructions)
      U3L14 - concatenate simple_instruction: |-
        Modify the write statement on line
        3 to combine text and variables together to make the app display a single
        line of text that shows the player's lives and score. (click to see full
        instructions)
      U3L14 - moving memory challenge1_instruction: |-
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge2_instruction: |-
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge3_instruction: |-
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge4_instruction: |-
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge5_instruction: |-
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L14 - moving memory challenge6_instruction: |-
        Using only the variables provided,
        assignment (=) and arithmetic (+ - * /) re-assign the values to make the console.log
        statement display the correct value(s).  (Click to see full instructions)
      U3L15 - Add reset button to UpDown app_instruction: |-
        Add code so that clicking
        the start over button will reset the game and send you back to the main screen.
        (Click to see full instructions)
      U3L15 - DEMO up down count practice app_instruction: |-
        Try out the demo app
        (Click to see full instructions)
      U3L15 - Debug forget to update var on reset in UpDown app_instruction: |-
        Run
        the app, and click the up or down button until you get to the gameOverScreen.
        Click 'Start Over' and try the app again. Find and fix the issue in the
        code. (Click to see full instructions)
      U3L15 - Debug if never triggers in UpDown app_instruction: |-
        Run the app and
        use the up and down arrows to try to hit the gameOverScreen. You can't! Find
        and fix the issue in the code. (Click to see full instructions)
      U3L15 - Debugging Simple If-statements =v==_instruction: |-
        Run the app, and
        click the up button. Then restart and run it again, and click the down button.
        Find and fix the issue in the code. (Click to see full instructions)
      U3L15 - Simple If-statements in UpDown App_instruction: |-
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L15 - add code to make count down work_instruction: |-
        Write code to make the
        down arrow work as expected. (Click to see full instructions)
      U3L15 - clicker update score_instruction: |-
        Add code to update the score when
        the apple is clicked. (Click to see full instructions)
      U3L15 - count upDown bug forget to set text_instruction: |-
        Find the bug in the
        program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug logic error wrong update_instruction: |-
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - count upDown bug var not created globally_instruction: |-
        Find the bug
        in the program and fix it. (Click to see full instructions)
      U3L15 - global var example count up_instruction: |-
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L15 - mini clicker update score_instruction: |-
        Add code to update the score
        when the apple is clicked. (Click to see full instructions)
      U3L15 - practice with setText_instruction: |-
        Use setText to complete the click
        event handler for the down arrow. (Click to see full instructions)
      U3L15 - variable scoping problem debugging_instruction: |-
        See if you can figure
        out why the code is no longer working. (Click to see full instructions)
      U3L15 click add lives_instruction: |-
        Add lives to the clicker game that decrement
        by 1 when the background image is clicked (Click to see full instructions)
      U3L15 full clicker app_instruction: |-
        Complete your clicker game! (Click to
        see full instructions)
      U3L16 - challenge say hi app_instruction: |-
        Write a greeting to the user when
        they hit 'enter' in the text input, using the 'change' event. (Click to
        see full instructions)
      U3L16 - chaserApp_instruction: |-
        Create your own "Chaser Game." (Click to
        see full instructions)
      U3L16 - chooseImages_instruction: |-
        Replace the image in your application with
        one of your own. (Click to see full instructions)
      U3L16 - doubleQuotes_instruction: |-
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - hideAndShow_instruction: |-
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |-
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |-
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons!
        - textLabels and images.  First try replacing your button with a\ntextLabel.
        \ Will the text respond to events just like the button?  Try connecting\nan
        event handler to it.  We've started you out with code similar to the result\nof
        the last level, you can copy your code from that level into here if you\nprefer. "
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith
        an image..  Will the image respond to events just like the button?  Try\nconnecting
        an event handler to it.  We've started you out with code similar\nto the result
        of the last level, you can copy your code from that level into\nhere if you
        prefer. "
      U3L16 - intro getText_instruction: |-
        Add an event handler to the Submit button
        so that when the button is clicked it will display the name entered in the
        text box to the console.  Use getText to get the value out of the text box.
        (Click to see full instructions)
      U3L16 - introSetPosition_instruction: |-
        Move the buttons to the bottom of the
        screen. (Click to see full instructions)
      U3L16 - introStrings_instruction: |-
        Save a string inside a variable and log
        it to the console. (Click to see full instructions)
      U3L16 - nameAgeTemplate_instruction: |-
        Add an Text Input box for the name and
        age. (Click to see full instructions)
      U3L16 - newEventTypes_instruction: |-
        Experiment with different event types and
        select the one that you think is best. (Click to see full instructions)
      U3L16 - outputWithTextArea_instruction: |-
        Output a message to the 'textArea'
        (Click to see full instructions)
      U3L16 - projectTemplate_instruction: |-
        Create your own "Chaser App". (Click
        to see full instructions)
      U3L16 - quick double click_instruction: |-
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |-
        Introducing the setPosition
        command! Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: |-
        Modify the code so that the turtle
        moves to a random screen location when the button is clicked. (Click to see
        full instructions)
      U3L16 - singleSetPosition_instruction: |-
        Move the button to the middle of the
        screen. (Click to see full instructions)
      U3L16 - stringsVsNumbers_instruction: |-
        Run the program to see how strings and
        numbers behave with different arithmetic operators. (Click to see full instructions)
      U3L16 - text labels_instruction: |-
        Use the textLabel command to replace the
        button in your program with a text label. (Click to see full instructions)
      U3L16 - textInput getText write_instruction: |-
        Add an Text Input box for the
        name and age. (Click to see full instructions)
      U3L16 - toUpper_instruction: |-
        Make the name of the user appear in uppercase
        (Click to see full instructions)
      U3L16 - use images_instruction: |-
        Use the image command to replace the text
        label in your program with an image. (Click to see full instructions)
      U3L16 Mad Lib Clear Input_instruction: "Clear the user's previous text when\nthe
        Play Again button is clicked (Click to see full instructions) "
      U3L16 Mad Lib Demo_instruction: Mad Libs Demo - Try it out!
      U3L16 Mad Lib Student Setup_instruction: |-
        Back to Mad Libs: To get started,
        set up the two screens for your Mad Libs app (Click to show full instructions)
      U3L16 Mad Lib getText_instruction: "Before setting the text area with your\nMad
        Libs outline, get the user's text and incorporate their responses. (Click\nto
        see full instructions) "
      U3L16 Mad Lib setText_instruction: "When the Next button is clicked, set the\ntext
        area to have the main outline of your How-to Mad Libs (without the user's\ninput).
        (Click to see full instructions) "
      U3L16 Mad Lib toUpper_instruction: "Apply the toUpperCase and toLowerCase string\nfunctions
        to the user's text. (Click to see full instructions) "
      U3L17 - getAndSetKeyValue_instruction: |-
        Create an image like app. (Click to
        see full instructions)
      U3L17 - getKeyValue_instruction: |-
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introCallbacks_instruction: |-
        Run the program several times to observe
        how the setKeyValue commands now always arrive in order. (Click to see full
        instructions)
      U3L17 - introKeyValue_instruction: |-
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - readKeyValue_instruction: |-
        Explore your key value pairs with the Data
        Viewer. (Click to see full instructions)
      U3L17 - setKeyValue_instruction: |-
        Create and update your key value pairs using
        setKeyValue. (Click to see full instructions)
      U3L17 - twoSetKeyValue_instruction: |-
        Run the program several times to observe
        how often setKeyValue commands arrive out of order. (Click to see full instructions)
      U3L18 comparison operators_instruction: |-
        Use console.log to print out the different
        boolean expressions below to see what information they return. (Click to see
        full instructions)
      U3L18 comparison operators_for_video_instruction: |-
        Use `console.log` to print
        out the different boolean expressions below to see what information they return.
        (Click to see full instructions)
      U3L19 - Clicker Game Freeplay Area_instruction: |-
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - DEMO up down count practice app_instruction: |-
        Try out the demo app
        (Click to see full instructions)
      U3L19 - Debugging with consoleLog_instruction: |-
        Add console.log() statements
        to find out the value of a and b after the first reassignment statement a
        = b; (Click to see full instructions)
      U3L19 - Simple If-statements in UpDown App_instruction: |-
        Add an if statement
        so that the app changes screens when the count reaches -5. (Click to see full
        instructions)
      U3L19 - Target Clicker App_instruction: |-
        Investigate the new elements of the
        'chaser-game'
      U3L19 - do concatenate string with var_instruction: |
        We've given you a piece
        of code from the previous screen.  Try changing the value assigned to foo
        to see the string change. \r
        Do this: \r
        1. Try changing the value assigned
        to foo to see the string change. \r
        2. By only modifying the lines of code
        that were given to you, try to get the output to say: “The value of foo is:
        9.  And isn’t that fine.” \r
      U3L19 - fix the var name syntax error v2_instruction: |-
        Fix the error and get
        it to print the value of both variables (Click to see full instructions)
      U3L19 - fix the var name syntax error_instruction: |-
        Fix the error and get it
        to print the value of both variables (Click to see full instructions)
      U3L19 - global var example count up_instruction: |-
        Look at the code for this
        app and see how the code works to update the count variable when the up arrow
        is clicked. (Click to see full instructions).
      U3L19 - practice with setText_instruction: |-
        Add another button that changes
        the text to the value of a new variable. (Click to see full instructions)
      U3L19 - test reassignment of two vars_instruction: |-
        Predict the value of a
        and b. Add console.log statements to find out the actual value of a and b.
        (Click for full instructions)
      U3L19 - three basic ops of variables_instruction: |-
        Add another variable called
        "lives" and set the value to 3. Print the value of the variable to the console.
        (Click to see full instructions)
      U3L19 - try out console log_instruction: |-
        Try out console.log.  Do this: replace
        the statement write("foo is: " + foo) with console.log("foo is: " + foo).  Run
        the program and you should see the output show up in the console area below
        the workspace.  Then try adding a few more console.log statements.  Display
        some text.  Make another variable and display that.  \r
        The app screen will
        be blank -- that's the point.  With console.log you can test output behind
        the scenes in a way the user cannot see.  \r
        \r
        \r
        GIF: U3L19-useconsolelog.gif
      U3L19 - up down count practice app_instruction: |-
        Set up the down button to
        decrease the value of count by 1 each time it is clicked. (Click to see full
        instructions)
      U3L19 - updating variables pt1_instruction: |-
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |-
        Make a prediction
        about the ending values of a, b, and c. Then use console.log to check your
        understanding (Click to see full instructions)
      U3L19 - variable reassignment part 1_instruction: |-
        Predict the value of a and
        b. Add console.log statements to find out the actual value of a and b. (Click
        for full instructions)
      U3L19 - variable scope problem 2_instruction: |-
        What is happening with foo?
        Play with the level to try to figure it out. (Click to see full instructions)
      U3L19 - variable scoping problem debugging_instruction: |-
        See if you can figure
        out why the code is no longer work. (Click to see full instructions)
      U3L19 - write var and string with same name v2_instruction: |-
        Fix the code so
        that the values of both variables print to the console. (Click to see full
        instructions)
      U3L19 - write var and string with same name_instruction: |-
        Fix the code so that
        the value of both variables prints to the console. (Click to see full instructions)
      U3L2 Using Simple Commands (no tooltips)_instruction: |-
        Draw a 1x1 square above
        and to the left of the turtle's starting position. Click to see full instructions.
      U3L2 Using Simple Commands_instruction: |-
        Draw a 1x1 square above and to the
        left of the turtle's starting position. Click to see full instructions.
      U3L23 Chatbot Conditionals 1_instruction: |-
        Add if, else if, and else statements
        to detect the movie genres Comedy, Romance, Action, and Horror. (Click to
        see full instructions)
      U3L23 Chatbot Intro 1a_instruction: |-
        Store the user's input inside a variable
        and log it to the console.
      U3L23 Chatbot Intro 2_instruction: |-
        Use string concatenation to store the user's
        input and assistant's answer into the conversation variable using the format
        "User: <input><bot name>: <default response>" . Log the conversation to
        the console.
      U3L23 Chatbot Intro 2a_instruction: |-
        Display the conversation onto the "text_area"
        element. Optional: clear the user's input after every "change" event.
      U3L23 Chatbot Intro 3_instruction: |-
        Add newline characters "\n" to separate
        the user's input and the computer's response.
      U3L23 Chatbot Intro 4_instruction: |-
        Use this level to make your chatbot look
        and work better!
      U3L23 Chatbot Intro_instruction: |-
        Choose a specialization topic for your digital
        assistant. Create a basic digital assistant that takes the user's input and
        displays back a default response.
      U3L23 Digital Assistant 1_instruction: |-
        Set the text_area element to display
        the user's input from the text_input element.
      U3L23 Digital Assistant 2_instruction: |-
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 3_instruction: |-
        Add the response "I don't know."
        after each of the user's inputs.
      U3L23 Digital Assistant 4_instruction: |-
        Display the user's input and the digital
        assistant's response on different lines.
      U3L23 Digital Assistant 5_instruction: |-
        Start the user's command with the
        phrase "User:" and the digital assistant's response with the phrase "Bot:"
      U3L23 Digital Assistant 6_instruction: |-
        When the user hits Run, display the
        text "I'm a generic digital assistant. Ask me anything!"
      U3L24 Basic String Parsing 1_instruction: |-
        Use the function "userInput.indexOf(<food>)"
        to check if the strings "pizza" or "soup" are anywhere in the user's
        response.
      U3L24 Chatbot Basic Conditionals_instruction: |-
        Check out the project description
        for instructions. (Click to see full instructions.)
      U3L24 Chatbot Conditionals 2_instruction: |-
        Adjust the "if" block to make
        the bot respond "I don't know that color." if the user types anything besides
        "blue"
      U3L24 Chatbot Conditionals 3_instruction: |-
        Adjust the "if/else" block to
        make the bot respond to the colors blue, red, and green, and to two additional
        colors.
      U3L24 Chatbot Keyword Record_instruction: |-
        Use the next level to record your
        digital assistant's keywords/phrases.
      U3L24 Chatbot Nested Conditionals_instruction: |-
        Add a chained conditional with
        at least 3 "else if" statements to your personal assistant.
      U3L24 Nested Conditionals 1_instruction: |-
        Change all of the boolean expressions
        to use includes instead of ==. (Click to see full instructions)
      U3L24 Nested Conditionals 2_instruction: "Nest your movie genre if statements\ninside
        the if statements to check for a ? in the input. "
      U3L24 Nested Conditionals Bugs 2_instruction: |-
        Fix the problem with the code
        so that all the conditions can be reached. (Click to see full instructions)
      U3L24 Nested Conditionals Bugs 3_instruction: |-
        Fix the bugs that still exist
        in this program. Prove that the program works correctly.
      U3L24 Nested Conditionals Bugs_instruction: |-
        Expose the bugs in this problem
        by typing inputs into the user-input box. Track which inputs cause unexpected
        outputs.
      U3L24 introIncludes_instruction: |-
        Practice using the includes command. (Click
        to see full instructions)
      U3L25 - drag out key event_instruction: |-
        Set up an event handler to respond
        to keypress events, and display event.key in the console. Hit keys on the
        keyboard to see what happens. (Click to see full instructions)
      U3L25 - play sound when up key_instruction: |-
        Change the code so the sound will
        only play when the up arrow is pressed. (Click to see full instructions)
      U3L25 Chatbot Strings_instruction: |-
        1. Adjust your digital assistant to evaluate
        inputs the same way whether the inputs are capitalized or lowercase. 2. If
        a user asks "What is <phrase>?", where <phrase> is an input your digital
        assistant does not recognize, make your digital assistant respond "I don't
        know what <phrase> is."
      U3L25 String Parsing 1_instruction: |-
        Given the string "Wisdom begins with
        wonder." what is the index of the following characters W, t, w, ., d, and
        k? Confirm your expectation using the string.indexOf() function.
      U3L25 String Parsing 2_instruction: |-
        Use str.length to find the length of the
        strings “Hello World”, “Computer science rocks!", and “I promise to do my
        homework every day.”
      U3L25 String Parsing 3_instruction: |-
        Write a password length checker that writes
        “yes” to the console if a string has a length greater than 10, or “no” if
        it is less than or equal to 10.  Test your function using two strings, one
        that will satisfy each conditional option.
      U3L25 String Parsing 4_instruction: |-
        You are given the string "Wisdom begins
        with wonder." Use the string.substring(begin, end) function to print "begin"
        and "nder" to the console.
      U3L25 String Parsing 5_instruction: |
        Fill in the function, findBeginNder()
        to get the strings "begin" and "nder" from a sentence no matter where
        in the sentence they exist.\r
        Print the strings and their index to the console.
      U3L25 String Parsing 6_instruction: |-
        Write a function that takes a name (first
        last) and reorders it (last, first).
      U3L25 String Parsing 7_instruction: |-
        You are given the string “The earth has
        music for those who listen.” Manipulate it using the functions str.toUpperCase()
        and str.toLowerCase().
      U3L26 AND operator_instruction: |-
        Update the genre and rating if statements
        to give only one movie suggestion at a time. (Click to see full instructions)
      U3L26 Chatbot Compound Conditionals_instruction: |-
        Update your digital assistant
        to include at least one each of AND, OR, and NOT
      U3L26 Chatbot Final_instruction: |-
        Update your digital assistant to include
        at least one each of AND, OR, and NOT
      U3L26 Compound Logic_instruction: |-
        Write a conditional statement that detects
        if a command contains all the phrases "2000" "animated" and "G-rated."
        If all these phrases are detected, make Movie Bot respond "The top grossing
        animated and G-rated film in the 2000 decade was Finding Nemo."
      U3L26 NOT operator_instruction: "Write a conditional statement that detects\nif
        a command does not contain the phrase \"bad.\" If \"bad\" is not detected,\nmake
        Movie Bot respond normally. Otherwise, make Movie Bot respond \"Sorry,\nI
        don't know about bad movies.\" "
      U3L26 OR operator_instruction: |-
        Update the if statement to use an OR to check
        for a "?" as well as who, what, where, when, why, how in the user input.
        (Click to see full instructions)
      U3L27 Chatbot Final_instruction: |-
        Make your digital assistant awesome and when
        you are finished, ask one of your classmates to test it for you using the
        activity guide. As you add features to your digital assistant, track them
        on the next level.
      U3L2_Turtle3by3Grid_instruction: |-
        Draw a 3x3 grid to the front and right of
        the turtle as efficiently as possible. The turtle should end at its original
        location, facing its original direction. (Click to see full instructions)
      U3L2_TurtleSquare_right_instruction: |-
        Draw a square to the front and to the
        right of the starting location. (Click to show full instructions)
      U4 - Add Row By Hand_instruction: |-
        Add a new record to your table in the Data
        Viewer. (Click to see full instructions)
      U4 - Charts - Export Data_instruction: |-
        Export the data from the “ages” table
        as a CSV file, then remix this app and import the CSV file. (Click to see
        full instructions)
      U4 - Charts - Import Data 1_instruction: |-
        Download the CSV file we’ve provided,
        and then use the data viewer to import the data from the file into the “mytable”
        table. (Click to see full instructions)
      U4 - Charts - Import Data 2_instruction: |-
        Call readRecords on “mytable” and
        print each record to the console. (Click to see full instructions)
      U4 - Charts - Line Chart 1_instruction: |-
        Create a line chart showing the change
        in popularity of “#tbt” over time. (Click to see full instructions)
      U4 - Charts - Line Chart 2_instruction: |-
        Add a second line to your chart to
        show the change in popularity of both “#tbt” and “#nofilter” at the same time.
        (Click to see full instructions)
      U4 - Charts - Line Chart Template_instruction: This is a template.
      U4 - Charts - Remixing Apps with Data_instruction: |-
        Run this app and see what
        it prints to the console. Then remix the app and run the remixed version to
        see what happened to the data. (Click to see full instructions)
      U4 - Charts - Scatter Chart_instruction: |-
        Create a scatter plot of the “rottenTomatoes”
        table, using the new table and column names. (Click to see full instructions)
      U4 - Charts - drawChartFromRecords 1_instruction: |-
        Use the drawChartFromRecords
        block to create a scatter plot from the table in the database. (Click to see
        full instructions)
      U4 - Charts - drawChartFromRecords Options 1_instruction: |-
        Add a title to your
        chart and change the colors of your lines using the options parameter of drawChartFromRecords.
        (Click to see full instructions)
      U4 - Charts - drawChartFromRecords Options 2_instruction: |-
        Look through the
        drawChartFromRecords API and choose some more options to customize. (Click
        to see full instructions)
      U4 - Charts - drawChartsFromRecords 1_instruction: |-
        Add screen element, pull
        out drawCharts block, run the program!
      U4 - CreateRecord - 1_instruction: |-
        Add a createRecord command and run the
        program. (Click to see full instructions)
      U4 - CreateRecord - 2.5_instruction: |-
        Change the table name in createRecord
        then check the Data Viewer to see the new table. (Click to see  full instructions)
      U4 - CreateRecord - 2_instruction: |-
        Change the name from "Alice" to something
        else in the createRecord command.  Run the program and use the Data Viewer
        to see the changes to your table. (Click to see full instructions)
      U4 - CreateRecord - 3_instruction: |-
        Use createRecord to add the song object
        as a record to a table. (Click to see full instructions)
      U4 - CreateRecord - 4_instruction: |-
        Run the program. Verify the song object
        was added to the database. Note the callback function now displays the copy
        of the record sent back back by the database. (Click to see full instructions)
      U4 - CreateRecord - 5_instruction: |-
        Add a property to the JavaScript object,
        then run the program.  View the data table and see how changing the object
        affects the data table. (Click to see full instructions)
      U4 - Edit Data Table by Hand_instruction: |-
        View the data table and click edit
        next to each row.  Add the artists names for each song by hand. (Click to
        see full instructions)
      U4 - Exploring Data Tools - Template_instruction: |-
        Use createRecord to add
        the song object as a record to a table. (Click to see full instructions)
      U4 - Objects - accessingPropertiesInArray_instruction: |-
        Access the properties
        of the objects stored in an array. (Click to see full instructions)
      U4 - Objects - arraysOfObjects_instruction: |-
        Create an array called "students"
        and add all 5 student objects to the array. (Click to see full instructions)
      U4 - Objects - createContactObject_instruction: |-
        Construct a new object from
        the user inputs, and append it to your array. (Click to see full instructions)
      U4 - Objects - createContactsData_instruction: |-
        Add values to the three contact
        objects provided in the starter code. (Click to see full instructions)
      U4 - Objects - createDotNotation_instruction: |-
        Create a student Object yourself.
        Add properties to your object one at a time using dot notation. (Click to
        see full instructions)
      U4 - Objects - createObject_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
      U4 - Objects - dotNotation_instruction: |-
        Use dot notation to display individual
        properties of the object. (Click to see full instructions)
      U4 - Objects - eventHandlersToSwitchScreen_instruction: |-
        Attach event handlers
        to the "Add Contact" and "Go Back" buttons that allow the user to switch
        screens. (Click to see full instructions)
      U4 - Objects - eventParameter_instruction: |-
        Trigger both the keyboard and mouse
        event and examine the event objects displayed in the console. Why might an
        object be the best way to store this information? (Click to see full instructions)
      U4 - Objects - exemplarContactsApp_instruction: |-
        Use the Contacts app and then
        add a contact of your own. (Click to see full instructions)
      U4 - Objects - loopingArray_instruction: |-
        Loop over your array of students
        and print the name of every students. (Click to see full instructions)
      U4 - Objects - loopingArray2_instruction: |-
        Loop over your array of students
        and print the name and grade of every student. (Click to see full instructions)
      U4 - Objects - loopingCompoundConditions_instruction: |-
        Loop over the array
        of students and display the information of students who are present and in
        the 11th grade. (Click to see full instructions)
      U4 - Objects - loopingConditions_instruction: |-
        Loop over your array of student
        objects and display the names of every student who is present in class. (Click
        to see full instructions)
      U4 - Objects - pullValues_instruction: |-
        Create an event handler for the "Save
        Contact" button that displays the contents of the 4 text input fields in
        the console. (Click to see full instructions)
      U4 - Objects - readStarterCode_instruction: |-
        Familiarize yourself with the
        starter code and UI elements provided. (Click to see full instructions)
      U4 - Objects - resetIndexAndShow_instruction: |-
        Add code to your event handler
        for the "Save Contact" button so that when a new contact is added, the inputs
        are cleared, the screen is switched, and the correct contact is shown. (Click
        to see full instructions)
      U4 - Objects - showContact1_instruction: |-
        Add code to the showCurrentContact
        function to show the name of the contact stored at the currentIndex of your
        array. (Click to see full instructions)
      U4 - Objects - showContact2_instruction: |-
        Add the phone number and birthday
        text to your text area. (Click to see full instructions)
      U4 - Objects - showContact3_instruction: |-
        Display the image information for
        each contact. (Click to see full instructions)
      U4 - Objects - showSampleImage_instruction: |-
        Attach an event handler to the
        image URL text input so that the user can confirm their image will work as
        expected. (Click to see full instructions)
      U4 - Objects - writeWrap_instruction: |-
        Use the wrap function to prevent currentIndex
        from leaving the bounds of your array. (Click to see full instructions)
      U4 - Read Record - 1.2_instruction: |
        Place a console.log command below the
        readRecords command. (Click to see full instructions)\r
      U4 - Read Record - 1.3_instruction: |
        Add a console.log command inside the callback
        function. (Click to see full instructions)\r
      U4 - Read Record - 1_instruction: |
        Use console.log to display the records returned
        by a call to readRecords. (Click to see full instructions)\r
      U4 - Read Record - 2_instruction: |
        Change the table name so that the records
        are read from the new table. (Click to see full instructions)\r
      U4 - Read Record - 3_instruction: |
        Change the name of the table in a readRecords
        command to read from a table that does not exist. (Click to see full instructions)\r
      U4 - Read Record - 4.1_instruction: |
        Use indexes and dot notation to reference
        values in the response from the database. (Click to see full instructions)\r
      U4 - Read Record - 4_instruction: |
        Print out each record return from the readRecords
        call individually. (Click to see full instructions)\r
      U4 - Read Record - 5_instruction: |
        Using a for loop, display the title of each
        movie in your database. (Click to see full instructions)\r
      U4 - Read Record - part 1 - template_instruction: |
        Use console.log to display
        the records returned by a call to readRecords. (Click to see full instructions)\r
      U4 - ReadRecords - Contacts App 1_instruction: |-
        Use readRecords to copy the
        data in your database into your "contacts" global variable and call showCurrentContact.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 2_instruction: |-
        Create a function called refreshLocalData.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 3_instruction: |-
        Add a call to "refreshLocalData"
        to the callback function of the createRecord you use to add a new contact
        to your database. (Click to see full instructions)
      U4 - ReadRecords - Contacts App 4_instruction: |-
        Create a "Delete" button.
        (Click to see full instructions)
      U4 - ReadRecords - Contacts App 5 make delete work_instruction: |-
        Create an
        event handler for the "Delete" button you created. (Click to see full instructions)
      U4 - add createRecord to contacts App_instruction: |-
        Add code to your contacts
        app so that newly-added contacts are saved in a table. (Click to see full
        instructions)
      U4 - debug column names are case sensitive_instruction: |-
        Change song.title
        to song.Title (capital T).  And run the program.  Check the data table  (Click
        to see full instructions)
      U4 - deleteRecords 0_instruction: |-
        Use the deleteRecord command with default
        values. Verify the record was deleted. (Click for full instructions).
      U4 - deleteRecords 1_instruction: |-
        Find the id of "Little Bunny Foo Foo"
        in the data table "mySongs".  Use the deleteRecord command to delete it.  See
        what happens when you try to delete an ID a second time. (Click for full Instructions).
      U4 - deleteRecords 2 delete object_instruction: |-
        Use the song object to delete
        multiple objects in the database by changing only the "id" property. (Click
        for full Instructions).
      U4 - deleteRecords 2_instruction: |-
        Using the data viewer, find the id of a
        a record you want to delete. Use the deleteRecord command to delete it. (Click
        for full instructions).
      U4 - fix contacts by hand in data table_instruction: |-
        Use the data viewer to
        add rows to the data table.  Add the original hard-coded contacts from your
        app to the database. (Click to see full instructions)
      U4 - last stage test adding contcts_instruction: |-
        Confirm that new contacts
        you add are saved to the database.  Verify that after restarting your app,
        the contacts you added no longer show in the app, but still exist in the database.
        (Click to see full instructions)
      U4 Model App_instruction: Magdagdag ng malaking red na button sa iyong screen
        gamit ang Design Mode. (I-click para sa buong mga instruksyon.)
      U4 Model Design 1_instruction: |-
        Add a large red button to your screen using
        Design Mode. (Click for full instructions.)
      U4 vigenere cipher 2_instruction: Alituntunin
      U4L02 - Objects - Template1_instruction: |
        Create an object with at least 3
        properties and display it in the Debug Console. (Click to see full instructions)
      U4L02 - Objects - createObject_instruction: "Create an object with at least\n5
        values including at least one string and one number. (Click to see full\ninstructions) "
      U4L02 - Objects - eventParameter_instruction: |-
        Trigger both the keyboard and
        mouse event and examine the event objects displayed in the console. Why might
        an object be the best way to store this information? (Click to see full instructions)
      U4L06 Data Storage 1_instruction: |
        Fill in your name instead of "Enter Your
        Name", run the app and click the button. Run it multiple times with different
        names! Watch the console and use the ‘View Data” button to see how the table
        is updated. As you play around make sure you can explain the purpose of each
        of the circled parts of the diagram.\r
        \r
      U4L06 Data Storage 2_instruction: "The app is a continuation of the previous\none
        we started. Add a text label to collect the users name and use that as\nthe
        data input for the record.\\r\n\\r\nRun the app and click the button multiple\ntimes
        and see what happens. Is there a problem you notice? "
      U4L06 Data Storage 3_instruction: |-
        We want to improve the user experience.
        Once they have submitted their data for storage, it would be nice to clear
        the textbox.  Update your app to clear the textbox after the data is stored.
      U4L06 Data Storage 4_instruction: |-
        Add a label and drop down box, to your app
        and save the data to your JSON object and add it to your table. Make sure
        to reset the dropdown after the data is stored.
      U4L06 Data Storage 5_instruction: "Add a couple radio buttons or checkboxes\nto
        our app. Then find a way to collect the data from those. "
      U4L06 Data Storage 6_instruction: " Use one of the getTime() and getUserId()\nblocks
        to collect additional data. "
      U4L06 Data Storage 7_instruction: |-
        Add a second screen to the sample app we
        have been building to capture an image from a user. Return to screen 1 after
        the JSON object has been stored in the table.
      U4L15 Read Data 1_instruction: |-
        Run the level and see what happens. Then edit
        the code to make it print a different column of information.
      U4L15 Read Data 2_instruction: |-
        Student should create a sentence which puts
        together all the pieces from a record.\r
        \r
        <<Name>> is <<Age>> years old
        and like <<Food>>
      U4L15 Read Data 3_instruction: |
        Print the sentence using the first JSON object
        in the array\r
        \r
      U4L15 Read Data 4_instruction: |-
        \r
        Use a random record from the list of records
        to display your sentence.
      U5 if-else-if movie example_instruction: |-
        Add an else-if statement in order
        to tell the user if their guess is high or low instead of just wrong. (Click
        to see full instructions)
      U6 - Final Project - Project Level_instruction: |-
        Build your final project here.
        (Click to see full instructions)
      U6 - updateRecord - Callback Success Parameter_instruction: |-
        Add an if-else
        block inside the callback function for updateRecord. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit UI_instruction: |-
        Set up the UI elements
        needed to edit contacts. (Click to see full instructions)
      U6 - updateRecord - Contacts - Edit event handler_instruction: |-
        Write event
        handlers for the Edit Contacts UI elements. (Click to see full instructions)
      U6 - updateRecord - Contacts - Save edited contact_instruction: |-
        Use updateRecord
        to store the user's edits in the database. (Click to see full instructions)
      U6 - updateRecord - Default Block_instruction: |-
        Use updateRecord to change
        the record for "Eye of the Tiger." (Click to see full instructions)
      U6 - updateRecord - Update Nonexistent Record_instruction: |-
        Force updateRecord
        to fail by changing the ID of songToUpdate. (Click to see full instructions)
      Underground Avoiding Lava_instruction: Ang laba ay nagtatago sa ilalim ng iilan
        sa ma blokeng ito, kung saan kakailanganin mong itago bago pumunta sa kasunod.
        Ang "if" na utos ay magagamit mo dito. Magdagdag ng "move forward na utos
        sa tamang lugar para i-mine ang mga blokeng ito.
      Underground Avoiding Lava_2018_instruction: Ang laba ay nagtatago sa ilalim
        ng iilang mga blokeng ito, kung saan kakailanganin mong takpan bago makagalaw
        pasulong. Ang isang "if" na utos ay magagamit mo dito. Magdagdag ng "move
        forward" na utos sa tamang lugar para mamina ang mga blokeng ito.
      Underground If Statements_instruction: Ngayon ang mga bagay ay naging mas mapandaya.
        Magmina ng 3 pulang bato, ngunit huwag magpahulog sa laba. Gumamit ng "if"
        na utos para ilagay ang cobblestone sa taas ng kahit anong laba ang matuklasan
        mo.
      Underground If Statements_2018_instruction: Ngayon ang mga bagay ay naging mas
        mapandaya. Magmina ng 3 pulang bato, ngunit huwag magpahulog sa laba. Gumamit
        ng "if" na utos para ilagay ang cobblestone sa taas ng kahit anong laba ang
        matuklasan mo.
      Underground Iron_instruction: Ang paglalakad sa tinunaw na laba ay isang masamang
        ideya. Maglagay ng mga bato para makalikha ng tulay, pagkatapos ay magmina
        ng hindi bababa sa dalawang mga bakal na mga bloke.
      Underground Iron_2018_instruction: Ang paglalakad sa tinunaw na laba ay isang
        masamang ideya. Maglagay ng mga bato para makalikha ng tulay, pagkatapos ay
        magmina ng hindi bababa sa dalawang mga bakal na mga bloke.
      Underground Mining Coal_instruction: Mahahanap mo ang dalawang napakahalagang
        mga kayamanan sa ilalim ng lupa, ngunit maaaring maging madilim ito. Maglagay
        ng hindi bababa sa 2 sulo at magmina ng hindi bababa sa 2 uling.
      Underground Mining Coal_2018_instruction: Mahahanap mo ang dalawang napakahalagang
        mga kayamanan sa ilalim ng lupa, ngunit maaaring maging madilim ito. Maglagay
        ng hindi bababa sa 2 sulo at magmina ng hindi bababa sa 2 uling.
      Unicorn Tag_instruction: |-
        Take a look at this project.  Do you see how it was
        made?
      Valentine_artist2_01_instruction: I-program ang artist para gumuhit ng iilang
        mga damo para sa Love Bug.
      Valentine_artist_01_instruction: 'Tulungan ang artist para tapusin ang kanyang
        puso ng liyama. '
      Valentine_playlab_01_instruction: 'I-program si Kiki (Aktor 1) para gumalaw
        pakaliwa at pakanan kapag ang kaliwa at kanang mga arrow ay napindot. Kapag
        si Kiki ay na-click. dapat siyang maghagis ng mga puso papunta sa kangyang
        mga kaibigan. '
      Vigenere_instruction: Test
      WhileAdventure_instruction: |-
        Our adventurer wants to collect coins. Can you
        help her grab as many as she can using only one remove 1 block?
      'Widget: Black and White Pixelation_instruction': |-
        Now make your own image!
        We've started you off with a 10x10 canvas but you can make it whatever size
        you want. Happy pixeling!
      'Widget: Color Pixelation_instruction': |-
        Requirements: The icon must be 16x16
        pixels. You must use the Pixelation Widget to encode the bits of color information.
        The image must be encoded with at least 12 bits per pixel.
      'Widget: Text Compression_instruction': |-
        Look for patterns (repeated words
        or phrases) in the text. Enter the patterns you see into the dictionary on
        the right. As you type entries into the dictionary, the symbol for the entry
        is inserted into the text in place of the pattern.
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
      aE1_instruction: "You chose to make a square napkin! \\r\n\\r\nTo finish, draw\na
        square with 20 pixel sides. "
      aE2_instruction: |-
        If you place your square loop inside another loop, we call
        that a nested loop. What do you need to add as an outer loop to make sure
        all 14 napkins line up next to each other?
      aE3_instruction: |-
        We've got to have a tablecloth!  \r
        \r
        Take your row of
        14 napkins and sew 14 of those together with another **outer loop** to make
        a cover for our table.
      aE3alternate_instruction: Alternate
      aE3alternateB_instruction: Alternate
      aE4_instruction: Alternate
      aE5_instruction: Example of puzzle using highest difficulty level shape.
      aE6_instruction: "How many times do you need to loop this to draw half  of\na
        circle? "
      aE7_instruction: |-
        If you create another loop like this one, but turn left instead
        of right, what happens? \r
        \r
        Can you repeat all of that to draw this wave?
      aE8_instruction: |-
        Now let's loop that whole thing four times to create this
        picture frame. Watch out for the corners - you can't just turn 90 degrees!
        \r
        \r
        If looping a 3 degree turn 60 times makes a half circle, which of
        these blocks of code will make an additional quarter circle for the corners?
      aEfreeplay_instruction: Free Play!
      allHallows2017_instruction: Bihagin ang mga empleyado ng Code.org sa isang kahon
        ng krayola sa pamamagitan ng pagguhit ng isang parisukat na may gilid na 320
        pixels!
      allthethings data blocks test_instruction: |-
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings design mode elements_instruction: |-
        Please sign in to test applab
        levels (By design, applab levels only work if signed in. Normally, we make
        people sign in, but this is only enforceable for a whole script and would
        be annoying to do for the allthethings script).
      allthethings level dataTables_instruction: |-
        Please sign in to test applab levels
        (By design, applab levels only work if signed in. Normally, we make people
        sign in, but this is only enforceable for a whole script and would be annoying
        to do for the allthethings script).
      allthethings_U3 - Simple Drawing - Rectangle Width and Height_instruction: |-
        Do
        This
      allthethings_moviebot_instruction: |-
        This level cloned from "U3 Digital Assistant
        Target"
      allthethings_template_backed1_instruction: "Backed by a template #1. Please\nsign
        in to test applab levels (By design, applab levels only work if signed\nin.
        Normally, we make people sign in, but this is only enforceable for a whole\nscript
        and would be annoying to do for the allthethings script). "
      allthethings_template_backed2_instruction: |-
        Backed by a template #2. Please
        sign in to test applab levels (By design, applab levels only work if signed
        in. Normally, we make people sign in, but this is only enforceable for a whole
        script and would be annoying to do for the allthethings script).
      allthethings_ttscsp_instruction: |-
        Debug the program by fixing the logical error
        within the program. (Click to see full instructions)
      artistDebugVideo1_instruction: Gamitin ang `repeat` na loop para magdagdag ng
        mga alon sa tubig.
      artistFunctionsVideo1_instruction: Sundin ang mga tagubilin para makagawa ng
        iyong sariling function.
      artistLoopsK1_instruction: Ito ay isang bagong tipo ng palaisipan na tinatawag
        na "Artist". Maglaro sa antas at gumuhit ng isang bagay na masaya.
      artistLoopsK2_instruction: |-
        Now, use a `repeat` loop to draw this line five
        times!
      artistLoopsK2gradek_artist_loops3_instruction: |-
        Now, use a `repeat` loop to
        draw this line five times!
      artistLoopsK3_instruction: |-
        Draw a line eight steps long. This will become
        the land for our kingdom!
      artistLoopsK4_instruction: |-
        Now we need a castle with a draw bridge.  Fix the
        code so that the bridge lays straight instead of falling down.
      artistLoopsK5_instruction: |-
        Now we need to fix the top of the castle. Can you
        loop the code three times?
      artistLoopsK6_instruction: "Someone is stuck in the tower!  Fix the stairs\nto
        set them free. "
      artistLoopsK7_instruction: "This tower is lovely, what is downstairs? Build\nanother
        staircase to find out! "
      artistLoopsK8_instruction: |-
        Wow! There's a garden over there!  Help fix these
        stairs so I can get to it.
      artistLoopsK9_instruction: |-
        **Challenge:**  Lovely! Let's take a walk around
        the garden.
      artistLoopsKA_instruction: |-
        These stones are in the wrong place.  Help me move
        them so I don't fall in!
      artistLoopsKB_instruction: "Look!  It's a theater.  Help me set up the chairs\nso
        we can all see the stage. "
      artistLoopsKFP_instruction: |-
        Picture time!  Use what you have learned to draw
        a picture of what you think the Artist saw on stage.
      asteroids_instruction: |-
        This Corgi has been a good boy! Drag this carrot to
        him as a special treat.
      beeDebugVideo1_instruction: Gamitin ang `repeat` na loop para kolektahin ang
        lahat ng mga nektar.
      behavior bash mary_instruction: Clone this level and make your own blocks!
      behaviors clone me 2_instruction: Clone this level and make your own blocks!
      behaviors clone me Ram_instruction: Clone this level and make your own blocks!
      behaviors clone me joshl_instruction: Clone this level and make your own blocks!
      behaviors clone me nk_instruction: Clone this level and make your own blocks!
      behaviors clone me tanya_instruction: Clone this level and make your own blocks!
      behaviors clone me_instruction: Clone this level and make your own blocks!
      behaviors pet test 123 copy_instruction: |-
        When Daisy gets a carrot, she gets
        excited. Use the **"when touches"** event and the "add behavior" block
        to make Daisy do something fun when she gets the carrot.
      behaviors pet test 123_instruction: |-
        When Daisy gets a carrot, she gets excited.
        Use the **"when touches"** event and the "add behavior" block to make
        Daisy do something fun when she gets the carrot.
      behaviors pet test 2_instruction: |-
        When Daisy gets a carrot, she gets excited.
        Use the **"when touches"** event and the "add behavior" block to make
        Daisy do something fun when she gets the carrot.
      behaviors pet test 3_instruction: "**It's time to make your own virtual pet!**\nYou
        can change whatever code you want to to make your own pet. Here are some\nideas:\\r\n*
        Can you make your pet start a new behavior when you click on it?\\r\n*\nCan
        you make your pet run away when you drag the vacuum to it?\\r\n* Can you\nadd
        other animal friends to your pet's area? "
      behaviors pet test_instruction: |-
        Last time, you practiced using "behaviors"
        to make a sprite do something forever. This time, we will use behaviors to
        make a virtual pet. \r
        \r
        This dog's name is Daisy. Daisy LOVES to snack
        on carrots. Add the "drag and drop" behavior to the carrot so you can move
        it to her.
      behaviors_caley_instruction: Clone this level and make your own blocks!
      ben's first level_instruction: Clone this level and make your own blocks!
      birdsDebugVideo1_instruction: Sundan ang landas at gabayan ako papunta sa pasaway
        na baboy. Iwasan ang TNT para hindi lilipad ang mga balahibo!
      bounce_1_instruction: Maglakip ng bloke sa "when left arrow" na bloke at pindutin
        ang "Run". Galawin ang sagwan gamit ang left arrow para makaabot sa huling
        layunin.
      bounce_10_instruction: Mayroon na tayong mithiin sa itaas. Maglakip ng "score
        point" at "score opponent point" na mga bloke sa "when ball in goal" at "when
        ball misses paddle" na mga bloke para makagawa ng laro. Tingnan kung ilang
        puntos ang makukuha mo bago makapuntos ng makalawa ang kalaban mo.
      bounce_10_2018_instruction: Mayroon na tayong mithiin sa itaas. Maglakip ng
        "score point" at "score opponent point" na mga bloke sa "when ball in goal"
        at "when ball misses paddle" na mga bloke para makagawa ng laro. Tingnan kung
        ilang puntos ang makukuha mo bago makapuntos ng makalawa ang kalaban mo.
      bounce_10_basketball_instruction: Ngayon ay may mithiin tayo sa itaas! Ilakip
        ang "score point" at "score opponent point" na mga bloke sa "when ball in
        goal" at "when ball misses hand" na mga bloke para makagawa ng laro. Tingnan
        kung ilang puntos ang makukuha mo bago makapuntos ang kalaban mo nang makalawa.
      bounce_10_sports_instruction: Ngayon ay may mithiin tayo sa itaas! Ilakip ang
        "score point" at "score opponent point" na mga bloke sa "when ball in goal"
        at "when ball misses hand" na mga bloke para makagawa ng laro. Tingnan kung
        ilang puntos ang makukuha mo bago makapuntos ng makalawa ang iyong kalaban!
      bounce_11_instruction: Maaari mo nang ilakip ang mga bloke sa "when run" na
        bloke. Dapat mong ilakip ang bagong "launch new ball" na bloke sa higit sa
        isang lugar. Gayundin, subukang palitan ang eksena o ang bilis ng pampalo
        at ng bola at tingnan kung ilang puntos ang makukuha mo bago makapuntos ng
        makalawa ang kalaban mo.
      bounce_11_2018_instruction: |-
        You can now attach blocks to the "when run"
        block. You have to attach the new "launch new ball" block in more than one
        place. Also, try changing the scene or the speed of the paddle and the ball
        and see how many points you can score before your opponent scores twice.
      bounce_11_basketball_instruction: Maaari mo nang ilakip ang mga bloke sa "when
        run" na bloke. Kailangan mong ilakip ang bagong "throw new ball" na bloke
        sa higit sa isang lugar. Gayundin, subakang baguhin ang eskena o ang bilis
        ng kamay at ng bola at tingnan kung ilang puntos ang makuha mo bago makapuntos
        ng makalawa ang kalaban mo!
      bounce_11_sports_instruction: Maaari mo nang ilakip ang mga bloke sa "when run"
        na bloke. Kailangan mong ilakip ang bagong "throw new ball" na bloke sa higit
        sa isang lugar. Gayundin, subakang baguhin ang eskena o ang bilis ng kamay
        at ng bola at tingnan kung ilang puntos ang makuha mo bago makapuntos ng makalawa
        ang kalaban mo!
      bounce_12_instruction: Lumikha ng sarili mong Bounce na laro. Maaring mong palitan
        ang lahat ng mga visuals at ang mga patakaran. Kapag tapos ka na, pindutin
        ang Finish para masubukan ng mga kaibigan mo ang laro sa kanilang mga telepono.
      bounce_12_2018_instruction: |-
        Create your own Bounce game. You can change all
        the visuals and the rules. When you're done, click Finish to let friends
        try your game on their phones.
      bounce_12_basketball_instruction: Lumikha ng iyong sariling Basketbol na laro.
        Maari mong palitan ang mga patakaran. Kapag tapos ka na, pindutin ang Finish
        para hayaang masubukan ng iyong mga kaibigan ang laro sa kanilang mga telepono.
      bounce_12_sports_instruction: 'Lumikha ng sarili mong laro! Ikaw ang tagapangasiwa
        dito: maari mong baguhin ang mga patakaran, mix at match na palakasan, maging
        malikhain! Kapag tapos ka na, pindutin ang Finish para masubukan ng iyong
        mga kaibigan ang laro sa kanilang mga telepono.'
      bounce_1_2018_instruction: |-
        Attach a block to the "when left arrow" block
        and press "Run". Move the paddle using the left arrow to reach the finish
        target.
      bounce_1_basketball_instruction: Maglakip ng isang bloke sa "kung kaliwang pana"
        na bloke at pindutin ang "Run". Galawin ang kamay gamit ang kaliwang pana
        para makaabot sa huling layunin.
      bounce_1_sports_instruction: Puntahan ang bandila! Maglakip ng mga bloke sa
        "when left arrow" na bloke at pindutin ang "Run" para ilipat ang manlalaro
        palapit sa bandila.
      bounce_2_instruction: Maglakip ng bloke sa "when right arrow" at "when left
        arrow" na mga bloke. Galawin ang sagwan para makaabot sa parehong huling mga
        layunin.
      bounce_2_2018_instruction: |-
        Attach a block to the "when right arrow" and
        "when left arrow" blocks. Move the paddle to reach both finish targets.
      bounce_2_basketball_instruction: Maglakip ng bloke sa "kung kanang arrow" at
        "kung kaliwang arrow" na mga bloke. Galawin ang kamay para makarating sa parehong
        huling mga layunin.
      bounce_2_sports_instruction: May dalawang bandila na ngayon! Maglakip ng bloke
        sa "when left arrow" at "when right arrow" na mga bloke para makagalaw ang
        iyong manlalaro sa dalawang direksyon.
      bounce_3_instruction: Ngayon subukan mo ang isang bagay na katulad ng "when
        up arrow" na bloke. Galawin ang sagwan para tapusin ang layunin sa itaas.
      bounce_3_2018_instruction: Ngayon subukan mo ang isang bagay na katulad ng "when
        up arrow" na bloke. Galawin ang sagwan para tapusin ang layunin sa itaas.
      bounce_4_instruction: Sa pagkakataong ito kakailanganin mong magdagdag ng apat
        na mga bloke. Galawin ang sagwan sa lahat ng apat na mga layunin para makompleto
        ang palaisipang ito.
      bounce_4_2018_instruction: |-
        This time you need to add four blocks. Move the
        paddle to all four finish targets to complete this puzzle.
      bounce_5_instruction: Magpapadala tayo ng bola patungo sa sagwan. Maglakip ng
        bloke sa "when ball hits paddle" na bloke para masiguro na ang bola ay makakarating
        sa huling layunin.
      bounce_5_2018_instruction: |-
        We're going to send a ball flying down towards
        the paddle. Attach a block to the "when ball hits paddle" block to ensure
        the ball reaches the finish target.
      bounce_5_basketball_instruction: Magpapadala tayo ng bola na lumilipad pababa
        patungo sa kamay. Maglakip ng bloke sa "kung ang bola ay tatama sa kamay"
        na bloke para masiguro na ang bola ay makakarating sa bandila.
      bounce_5_sports_instruction: Ang hockey puck ay lilipad pababa patungo sa manlalaro!
        Maglakip ng bloke sa "when ball hits player" na bloke para matamaan ang bandila.
      bounce_6_instruction: Ngayon ang huling layunin ay nasa taas. Kailangan mong
        maglakip ng mga bloke sa dalawang "when ball hits" na mga bloke para malutas
        ang mga palaisipan.
      bounce_6_2018_instruction: |-
        Now the finish target is on the top. You need to
        attach blocks to both of the "when ball hits" blocks to solve this puzzle.
      bounce_6_basketball_instruction: Ngayon ang bandila ay nasa taas. Kailangan
        mong maglakip ng mga bloke sa kapwa "kung ang bola ay tumama" na mga bloke
        para malutas ang palaisipan na ito.
      bounce_6_sports_instruction: Ngayon ang bandila ay nasa taas. Kailangan mong
        maglakip ng mga bloke sa kapwa "kung ang bola ay tumama" na mga bloke para
        malutas ang palaisipan na ito.
      bounce_7_instruction: Maglakip ng mga bloke sa bawat "when" na mga bloke. Patalbugin
        ang bola hanggang matamaan nito ang huling layunin.
      bounce_7_2018_instruction: Maglakip ng mga bloke sa bawat "when" na mga bloke.
        Patalbugin ang bola hanggang matamaan nito ang huling layunin.
      bounce_7_basketball_instruction: Maglakip ng mga bloke sa bawat "kailan" na
        mga bloke. Patalbugin ang bola hanggang matatamaan nito ang bandila.
      bounce_7_sports_instruction: Maglakip ng mga bloke sa bawat "kailan" na mga
        bloke. Patalbugin ang bola hanggang matatamaan nito ang bandila.
      brendan behaviors clone_instruction: Clone this level and make your own blocks!
      brendan hackathon level_instruction: |-
        these are the instructions for my level.  you
        should do this level and have a good time.
      clone me mary_instruction: Clone this level and make your own blocks!
      collector example_instruction: Ilagay ang mga blokeng ito para makolekta ang
        lahat ng ginto at malutas ang palaisipan.
      collectorDebugVideo2_instruction: Ilagay ang mga blokeng ito para makolekta
        ang lahat ng mga ginto at malutas ang palaisipan.
      collectorSkinVideo1_instruction: Kolektahin ang lahat ng mga bunton para mapasa
        ang antas na ito.
      collectorSkinVideo2_instruction: Magkolekta ng isang bunton ng ginto para mapasa
        ang antas na ito.
      comment_intro_maze_2018_instruction: |-
        Use the new `comment` block to leave
        yourself quick reminders.
      conditionals_forvideo_harvester_instruction: Kolektahin ang lahat ng bunga ng
        oak at letsugas, pagkatapos ay kunin ang kalabasa.
      conditionals_forvideo_playlab_instruction: Score as many points as you can!
      course1_artist_loops_challenge1_instruction: |-
        Maaari kang gumamit ng loop para makaguhit ng maraming mga linya sa isang hanay.\r
        \r
        Maaari ka bang gumuhit ng isang bahay? Gawin ang hitsura nito ayon sa kagustuhan mo! Subukang maghanap ng mga pattern na paulit-ulit!
      course1_artist_loops_challenge2_instruction: Maglaro tayo ng isang laro! Magguhit
        nang maraming mga X na kaya mo! Makakakuha ka ba nang 3 sa isang hanay?
      course1_artist_loops_challenge3_instruction: '"Makakatulong ka ba sa paggawa
        ng dalawang bahay ng ibon?"'
      course1_artist_loops_challenge4_instruction: '"Oras na para ihagis ang dice!
        Maaari mo ba akong tulungan na iguhit ang mga ito?"'
      course1_collector_loops_challenge1_instruction: '"Matulungan mo ba akong hanapin
        ang ilang mga bug? Alam ko kung saang daan ang gusto kung daanan, pero hindi
        ako sigurado kung ilang hakbang ang aking gagawin."'
      course1_collector_loops_challenge2_instruction: 'Sa oras na ito, maaari ka lang
        gumamit ng isa sa bawat arrow na bloke. Kunin ang lahat ng mga yaman! '
      course1_collector_loops_challenge3_instruction: 'Sa oras na ito, maaari ka lang
        gumamit ng isa sa bawat arrow na bloke. Kunin ang lahat ng mga yaman! '
      course1_collector_loops_challenge4_instruction: Ating kunin ang mga kayamanan!
        Tulungan akong makatawid sa bawat isang hanay, at pagkatapos ay babalik para
        simulan ang sunod na hanay. Maaari ka bang makahanap ng pattern?
      course1_maze_debugging_challenge1_instruction: I-debug ang antas na ito, Tanggalin
        ang mga ekstrang mga bloke at magdagdag ng nawawalang mga bloke. Dalhin ang
        ibon sa baboy!
      course1_maze_debugging_challenge2_instruction: I-debug ang antas na ito. Ang
        mga ito ay ang mga tamang bloke, ngunit sila ay nasa maling pagkakasunod-sunod!
      course1_maze_seq_challenge1_instruction: '"Sundan ang landas at gabayan mo ako
        papunta sa pasaway na baboy. Iwasan ang TNT para hindi lilipad ang mga balahibo!"'
      course1_maze_seq_challenge2_instruction: Maaari ka lang makagalaw hanggang sa
        apat na beses sa bawat direksyon. Makakahanap ka ba ng daan bago ka maubusan
        ng mga bloke?
      course1_playlab_events_challenge1_instruction: '"Saan nagtatago ang aking mga
        kaibigan? Maaari ka bang magsulat ng code para ipakita ang ilan sa aking mga
        kaibigan?"'
      course1_playlab_events_challenge2_instruction: '"Mag-party tayo! Bigyan ang
        aking mga kaibigan ng isang bagay na gagawin kapag sila ay na-click o na-tap."'
      course2_artist_nestedLoops_challenge1_instruction: Maaari mo bang malaman kung
        paano gumawa ng larawan gaya nito?
      course2_artist_nestedLoops_challenge2_instruction: Maaari mo bang malaman kung
        paano gumawa ng larawan gaya nito?
      course2_artist_prog_challenge1_instruction: Gumuhit ng mga silid para sa bawat
        hayop. Mayroong napakaraming iba't ibang pamamaraan para malutas ang palaisipan
        na ito, kaya magsaya. Ang pinakamaikling posibleng solusyon ay 6 na bloke,
        but gumamit ng marami kung gusto mo!
      course2_artist_prog_challenge2_instruction: "*Tulungan akong magpinta ng dilaw
        na mga linya sa kalsadang ito!*"
      course2_bee_conditionals_challenge1_instruction: Kolektahin ang lahat ng nektar
        o gawing pulot ang lahat.
      course2_bee_conditionals_challenge2_instruction: Kolektahin ang lahat ng nektar
        o gawing pulot ang lahat.
      course2_collector_loops_challenge2_instruction: Kunin ang lahat ng mga kayamanan!
      course2_collector_prog_challenge1_instruction: Tingnang mabuti! Maaari mo bang
        kolektahin ang lahat ng *10* mga piraso ng kayamanan?
      course2_collector_prog_challenge2_instruction: Mayroong mga 20 piraso ng kayamanan
        na matatagpuan. Magkolekta ng hindi baba sa kalahati para matapos ang hamon
        na ito!
      course2_harvester_loops_challenge1_instruction: Kolektahin ang lahat ng mga
        mais.
      course2_harvester_loops_challenge2_instruction: Kolektahin ang lahat ng mga
        letsugas. Iwasan ang mga kahoy ay mga kabukiran!
      course2_maze_loops_challenge1_instruction: 'Ngayon ay gusto ni Scrat na subukang
        gumamit ng mga loop para mahanap ang kanyang bunga ng oak! '
      course2_maze_programming_challenge1_instruction: '*"Ang baboy ay nagtatago!
        Maaari mo ba ang akong tulungan na makahanap ng ibang daan?"*'
      course2_maze_programming_challenge2_instruction: Minsan ay mayroong higit sa
        isang pamamaraan para malutas ang parehang problema. Minsan ay mas mabilis
        ang maglakad pabalik kaysa sa pumunta pasulong!
      course2_maze_seq_challenge1_instruction: Sundan ang landas at gabayan ako papunta
        sa pasaway na baboy. Iwasan ang TNT para hindi lilipad ang mga balahibo!
      course2_maze_seq_challenge2_instruction: Maaari ka lang makagalaw hanggang sa
        apat na beses sa bawat direksyon. Makakahanap ka ba ng daan bago ka maubusan
        ng mga bloke?
      course2_playlab_stage17_1_instruction: Maaari mo bang mapagawa si Jorge ang
        Aso (aktor 1) na magsabi ng "Hi"?
      course2_playlab_stage17_10_instruction: |-
        Magdagdag ng mga bloke sa `when run` na event para palitan ang background at bilis ng mga Waddles.\r
        \r
        Maglaro sa laro at galawin ang mga Waddle gamit ang mga arrow hanggang sa makapuntos ka.
      course2_playlab_stage17_11_instruction: Maglikha ng iyong sariling istorya.
        Kapag tapos ka na, i-click ang Finish para hayaan ang iyong mga kaibigan na
        subukan ang istorya sa kanilang mga telepono.
      course2_playlab_stage17_2_instruction: Maaari mo bang mapagawa si Jorge (aktor
        1) na magsabi ng kahit ano, pagkatapos pasasalitaain si Olive ang Pusa (aktor
        2) nang kahit na ano?
      course2_playlab_stage17_3_instruction: Maaari ka bang magsulat ng programa para
        mapagawa si Jorge (aktor 1) na lumapit papunta kay Olive ang Pusa?
      course2_playlab_stage17_4_instruction: Maaari ka bang magsulat ng programa na
        nagpapagawa kay Jorge (aktor 1) na lumakad papunta kay Olive ang Pusa, at
        pasabihin si Olive nang "Hello" kapag naabutan siya ni Jorge?
      course2_playlab_stage17_5_instruction: Maaari ka bang magsulat ng programa para
        mapagawa si Octavia na magsabi nang "Hi" kapag siya ay na-click?
      course2_playlab_stage17_6_instruction: Ngayon, magsulat ng programa para mapagawa
        si Waddles na gumalaw sa paligid gamit ang taas / baba / kaliwa / kanan na
        mga key para matamaan ang lahat ng mga target!
      course2_playlab_stage17_7_instruction: |-
        The `repeat forever` block allows you
        to run code over and over forever. Can you attach blocks to move Chomp the
        Dino (actor 2) up and down forever?
      course2_playlab_stage17_8_instruction: |-
        Maaari mo bang mapasabi si Waddles (aktor 1) nang "Aray!" at magpatugtog ng "hit" na tunog kapag nakatagpo siya ng isang Chomp?\r
        \r
        Kapag tapos ka na, laruin ang laro para mangyari ito.
      course2_playlab_stage17_9_instruction: |-
        Maaari ka bang magdagdag ng mga bloke para makaiskor ng puntos kapag si Waddles ay nagkatagpo kay Octavia (aktor 3)?\r
        Maglaro sa laro at pagalawin si Waddles gamit ang mga arrow hanggang sa makapuntos ka!
      course3_artist_concept_challenge1_instruction: Huwag mag-atubiling gumamit ng
        pagsubok at pagkakamali. Ikaw ay hindi inaasahang makuha agad ang perpektong
        larawan sa unang pagsubok. Gusto mong makakita pa ng karagdagang mga hint?
        Mag-click dito!
      course3_artist_functions_challenge1_instruction: Kapag nagbigay-kahulugan ka
        na sa isang function, maaari mo na itong tawagin nang paulit-ulit. kahit kailang
        at kahit saan na gusto mo! Subukan ang code na ito para makita kung paano
        ito gumagana, pagkatapos ay palitan ito para makagawa ng iyong sariling kamangha-maghang
        mga disenyo!
      course3_artist_functions_challenge2_instruction: Subukan ang code na ito para
        makita kung paano ito gumagana, pagkatapos ay gawin ang programa bilang sarili
        mo!
      course3_bee_debugging_challenge1_instruction: Panoorin kung paano ang bubuyog
        kukuha ng nektar. Maaari mo bang gamitin ang parehong uri na pattern para
        matulongan ang bubuyog na gawin ang lahat ng mga pulot?
      course3_bee_functions_challenge1_instruction: Ikaw ay mag-isa nalang para sa
        hamon na ito. Maaaring ito ay mas mahirap kaysa sa hitsura nito!
      course3_bee_functions_challenge2_instruction: Ikaw ay mag-isa nalang para sa
        hamong ito!
      course3_bee_functions_challenge3_instruction: Maglikha ng bagong function para
        makolekta ang lahat ng nektar at pulot habang mayroon pang landas sa unahan.
        Gamitin ito para makompleto ang palaisipan!
      course3_bee_functions_challenge4_instruction: Gamitin ang lahat ng iyong natutunan
        para ikompleto ang palaisipang ito!
      course3_collector_debugging_challenge2_instruction: Ikaw ba ay bihasa na sa
        naka-nest na mga loop? Gamitin ang natutunan mo para kolektahin ang lahat
        ng mga yaman!
      course3_farmer_condLoops_challenge1_instruction: Lumiko pakanan sa mga kalabasa.
        Kolektahin ang lahat para makompleto ang antas. Bawat nakatagong pananim ay
        mayroon lang isang mais o litsugas.
      course3_farmer_condLoops_challenge2_instruction: Kolektahin ang lahat para makumpleto
        ang antas.
      course3_farmer_until_challenge2_instruction: Gamitin ang If/Else na mga bloke
        para sundan ang balikong landas. Sa bawat sulok, gamitin ang `remove 1` na
        utos sa isang loop para malinaw ang mga tumpok.
      course3_maze_debugging_challenge1_instruction: '*"Nagpabalik-balik lang ba ako?"*'
      course3_maze_debugging_challenge2_instruction: '*"Kung ako ay parating iikot,
        maaari akong mahilo! Tulungan akong maabot ang ensina gamit ang apat lang
        na mga `turn` na utos."*'
      course3_maze_until_challenge1_instruction: Walang pahiwatig, hamon lang. Dalhin
        ang zombie sa mirasol.
      course3_playLab_challenge1_instruction: |-
        May isang bagay na dapat mangyari kapag mayroon ka nang sapat na puntos o kapag naubusa ka na ng mga puntos. Magdagdag ng ilang code sa `win game` at `lose game` na mga function para mapagana ang laro sa dapat nitong paggana. \r
        I-click ang mga pahiwatig para sa mga ideya!
      course3_playlab_challenge2_instruction: Maaari mo bang malaman kung paano ang
        "Fortune Teller" na app na ito gumagana? I-click ang `MORE` para makita ang
        iyong mga hamon.
      course3_playlab_stage16_1_instruction: Maari mo bang pasabihin ang asong ito
        nang "hello world"?
      course3_playlab_stage16_2_instruction: Maaari mo bang mapagawa ang aso na magsalita
        ng isang bagay at pagkatapos ay pasalitain naman ang pusa?
      course3_playlab_stage16_3_instruction: Maaari ka bang magsulat ng programa para
        mapagalaw ang aso papunta sa pusa?
      course3_playlab_stage16_4_instruction: Maaari ka bang magsulat ng programa na
        nagpagawa sa aso na lumakad papunta sa pusa, at pasabihin ang pusa ng "hello"
        kapag ang aso ay nakarating na sa kanya?
      course3_playlab_stage16_5_instruction: Maaari ka bang magdagdag ng bloke para
        mapasaya ang pugita?
      course3_playlab_stage16_6_instruction: Maglikha ng iyong sariling istorya. Kapag
        tapos ka na, i-click ang Finish para hayaan ang iyong mga kaibigan na subukan
        ang istorya sa kanilang mga telepono.
      course3_playlab_stage17_1_instruction: Maari ka bang magsulat ng programa para
        mapasabi ang pugita nang "hello" kapag na-click ito?
      course3_playlab_stage17_2_instruction: Maaari ka bang magsulat ng programa para
        mapagalaw sa pagilid si Waddles gamit ang taas / baba / kaliwa / kanan na
        mga key para matamaan ang lahat ng mga target?
      course3_playlab_stage17_3_instruction: Ang "repeat forever" na bloke ay nagbibigay-daan
        sa iyo na mapatakbo ang code nang paulit-ulit. Maaari ka bang maglakip ng
        mga bloke para mapagalaw ang dinosaur na ito pataas at pababa nang paulit-ulit?
      course3_playlab_stage17_4_instruction: Maaari mo bang pasabihin si Waddles nang
        "Aray!" at magpatugtog ng "hit" na tunog kapag nakabangga siya sa dinosaur,
        at pagkatapos ay pagalawin siya gamit ang mga arrow para mangyari ang mga
        ito?
      course3_playlab_stage17_5_instruction: Maaari ka bang magdagdag ng isang bloke
        para makaiskor ng puntos kapag si Waddles ay nakatagpo ng isang pugita, at
        pagkatapos pagalawin siya gamit ang mga arrow hanggang sa makakapuntos ka?
      course3_playlab_stage17_6_instruction: Maaari ka bang magdagdag ng mga bloke
        para palitan ang background at ang bilis ni Waddles, at pagkatapos pagalawin
        siya gamit ang mga arrow hanggang sa makapuntos ka?
      course3_playlab_stage17_7_instruction: Maglikha ng iyong sariling istorya. Kapag
        tapos ka na, i-click ang Finish para hayaan ang iyong mga kaibigan na subukan
        ang istorya sa kanilang mga telepono.
      course4_artist_binary_challenge1_instruction: Maaari ka lang gumamin ng bawat
        halaga ng binary (0 o 1) sa isang beses sa palaisipang ito. Subukang gumamit
        ng naka-nest na mga loop para makumpleto ang drowing na ito.
      course4_artist_binary_challenge2_instruction: Masisigasig ka ba para ibalik
        ang logong ito pabalik sa normal?
      course4_artist_concept_challenge2_instruction: Maglikha ng limang pinwheel na
        mga disenyo gamit ang code sa baba.
      course4_artist_functions_challenge2_instruction: Subukan ang code na ito para
        makita kung paano ito gumagana, pagkatapos ay gawin ang programa bilang sarili
        mo!
      course4_artist_fwp_challenge1_instruction: Subukang ipatakbo ang programang
        ito, at gumawa ng mga pagbabago para makita kung ano ang mangyayari. Maaari
        mo bang alamin kung paano ito gumagana? (O burahin ito at palitan ito ng isang
        talagang kakaiba)
      course4_artist_variables_challenge1_instruction: Ngayon ay natutunan mo na ang
        lahat ng kailangan mong malaman para makagawa ng isang pattern kagaya nito!
        Ang palaisipang ito ay ginawang mas mahirap. Maaari mo bang manatili dito
        hanggang sa malaman mo na ang solusyon?
      course4_artist_variables_challenge2_instruction: Ngayon ay natutunan mo na ang
        lahat ng kailangan mong malaman para makagawa ng isang pattern kagaya nito!
        Ang palaisipang ito ay ginawang mas mahirap. Maaari mo bang manatili dito
        hanggang sa malaman mo na ang solusyon?
      course4_bee_for_challenge1_instruction: Gamitin ang for loop na ito para kolektahin
        ang lahat ng nektar. Mayroong iilang mga aksyon na gugustohin mong makita
        sa pag-ulit na 'tagabilang' na beses.
      course4_bee_fwp_challenge1_instruction: Gumamit ng isang `for loop` sa isang
        function para kolektahin ang lahat ng mga mais. Ang parehong `for loop` ay
        maaaring magbilang sa iba't ibang pinakamataas na mga halaga sa pamamagitan
        ng paggamit ng `length` na parameter.
      course4_bee_fwp_challenge2_instruction: Gumamit ng isang `for loop` sa isang
        function para kolektahin ang lahat ng mga gulay sa isang hanay. Gawin ang
        `for loop` na magbilang ng iba't ibang pinakamalaking mga halaga sa pamamagitan
        ng paggamit ng `length` na parameter. Gawin ang iyong program na maikla lang
        hangga't makakaya sa pamamagitan ng paggamit ng pangalawang `for loop` sa
        labas ng function.
      course4_collector_nested_loops_challenge2_instruction: Tulungan ang kolektor
        na makaabot ng hindi bababa sa dalawang tumpok ng mga yaman gamit lang ang
        mga bloke na nasa iyong toolbox. Ito ay posible na makolekta ang lahat ng
        4.
      course4_harvester_nested_loops_challenge1_instruction: '"Kailangan ko ng iilang
        tulong sa bukirin! Tulungan akong anihin ang mga mais gamit lang ang mga bloke
        na nasa iyong toolbox."'
      course4_playlab_variables_challenge1_instruction: Gamitin ang mga blokeng ito
        para mapagawa ng mga aktor na magbahagi ng isang knock-knock joke. Baguhin
        ang setup at ang punchline para isabi ang iyong sariling joke!
      course4_playlab_variables_challenge3_instruction: Maaari mo bang malaman kung
        paano ang "Fortune Teller" na app na ito gumagana? I-click ang `MORE` para
        makita ang iyong mga hamon.
      courseA_artist_loops1_instruction: Ito ay isang bagong tipo ng palaisipan na
        tinatawag na "Artist". Maglaro sa antas at gumuhit ng isang bagay na masaya.
      courseA_artist_loops10_instruction: Tulungan akong ilagay ang mga bato para
        hindi ako mahulog!
      courseA_artist_loops10_2018_instruction: |-
        Help me put down stones so I don't
        fall in!
      courseA_artist_loops11_instruction: Tulungan akong gumawa ng mga hakbang para
        tingnang ang barko na maglayag palayo.
      courseA_artist_loops11_2018_instruction: |-
        Help me build steps to watch the
        ship sail away.
      courseA_artist_loops12_instruction: Ang artist ay gumuguhit ng isang bagay na
        nakakatawa mula sa malayo. Iguhit ang kung ano ang naiisip mo na nakita mo.
      courseA_artist_loops12_2018_instruction: |-
        The artist saw something funny in
        the distance.  Draw what you think he saw.
      courseA_artist_loops1_2018_instruction: |-
        This is a new type of puzzle called
        "Artist". Play with the level and draw something fun.
      courseA_artist_loops2_instruction: Tulungan ang artista na gumuhit sa mga linyang
        ito nang dalawang beses pasulong.
      courseA_artist_loops2_2018_instruction: |-
        Help the artist draw this line two
        times forward.
      courseA_artist_loops3_instruction: Gumuhit ng linya pasulong nang limang beses.
      courseA_artist_loops3_2018_instruction: Gumuhit ng linya pasulong nang limang
        beses.
      courseA_artist_loops4_instruction: Ngayon, gumamit ng `repeat` na loop para
        maiguhit ang linyang ito nang limang beses!
      courseA_artist_loops4_2018_instruction: |-
        Now, use a `repeat` loop to draw this
        line five times!
      courseA_artist_loops5_instruction: Gumuhit ng linya na mas mahaba ng pitong
        hakbang. Ito ay magiging isa sa aming papawirin.
      courseA_artist_loops5_2018_instruction: |-
        Draw a line seven steps long. This
        will become our horizon.
      courseA_artist_loops6_instruction: Ilagay natin ang isang magang burol sa likod.
      courseA_artist_loops6_2018_instruction: Let's put a nice hill in the back.
      courseA_artist_loops7_instruction: Gamitin ang `repeat` na loop para makadagdag
        ng mga alon sa tubig.
      courseA_artist_loops7_2018_instruction: Gamitin ang `repeat` na loop para magdagdag
        ng mga alon sa tubig.
      courseA_artist_loops7_forVideo_instruction: Gamitin ang `repeat` na loop para
        makadagdag ng mga alon sa tubig.
      courseA_artist_loops8_instruction: Kailangan natin ng hagdanan hanggang sa barko.
      courseA_artist_loops8_2018_instruction: We need a ladder up to the boat.
      courseA_artist_loops9_instruction: 'Hamon: Ayusin ang hagdanan.'
      courseA_artist_loops9_2018_instruction: 'Hamon: Ayusin ang hagdanan.'
      courseA_artist_loops_challenge1_instruction: Maaari ka bang makaguhit ng bahay?
        Gawin ito ayon sa kagustohan mo!
      courseA_artist_loops_challenge1_2018_instruction: |-
        Can you draw a house? Make
        it look just the way you like it!
      courseA_artist_loops_challenge2_instruction: '"Makakatulong ka ba sa paggawa
        ng dalawang bahay ng ibon?"'
      courseA_artist_loops_challenge2a_instruction: '*"Tulungan akong i-setup ang
        tatlong tent na mga ito!"*'
      courseA_artist_loops_challenge2a_2018_instruction: |-
        *"Help me get these three
        tents set up!"*
      courseA_artist_loops_challenge3_instruction: Maglaro tayo ng isang laro! Magguhit
        nang maraming mga X na kaya mo! Makakakuha ka ba nang 3 sa isang hanay?
      courseA_bee_seq1_instruction: |-
        Play with these blocks to help the bee get *one*
        nectar.
      courseA_bee_seq10_instruction: Try it by yourself! Get all the nectar.
      courseA_bee_seq11_instruction: Get all the nectar.
      courseA_bee_seq12_instruction: |-
        Play with these blocks to help the bee get
        *one* nectar.
      courseA_bee_seq13_instruction: |-
        Use three `Move West` blocks and one `Get Nectar`
        block.
      courseA_bee_seq14_instruction: |-
        Use three `Move North` blocks and one `Get
        Nectar` block.
      courseA_bee_seq2_instruction: Help the bee get the nectar!
      courseA_bee_seq3_instruction: Find the bug and fix it!
      courseA_bee_seq4_instruction: Try it yourself!
      courseA_bee_seq5_instruction: Try it yourself!
      courseA_bee_seq6_instruction: Now the bee needs to get nectar from two flowers!
      courseA_bee_seq7_instruction: Add two blocks to finish this puzzle!
      courseA_bee_seq8_instruction: Make sure to get nectar from every flower!
      courseA_bee_seq9_instruction: Make sure to get nectar from every flower!
      courseA_collector_loops1_instruction: Ilipag si Laurel sa paligid at kumuha
        ng maraming kayamanan hangga't kaya mo!
      courseA_collector_loops10_instruction: Tulungan si Laurel na kumuha sa lahat
        ng mga kayamanan na nasa landas na ito.
      courseA_collector_loops10_2018_instruction: Tulungan si Laurel na kumuha sa
        lahat ng mga kayamanan na nasa landas na ito.
      courseA_collector_loops11_instruction: Tulungan si Laurel na kunin ang lahat
        ng mga kayamanan mula sa kuwebang ito.
      courseA_collector_loops11_2018_instruction: Tulungan si Laurel na kunin ang
        lahat ng mga kayamanan mula sa kuwebang ito.
      courseA_collector_loops12_instruction: '*"Eureka! Kumuha ng maraming kayamanan
        hangga''t maaari!"*'
      courseA_collector_loops12_2018_instruction: |-
        *"Eureka!  Get as much treasure
        as you can!"*
      courseA_collector_loops1_2018_instruction: |-
        Move Laurel around and get as much
        treasure as you can!
      courseA_collector_loops2_instruction: Kunin ang lahat ng tatlong mga bunton
        para maipasa ang antas na ito.
      courseA_collector_loops2_2018_instruction: Kunin ang lahat ng tatlong mga bunton
        para malampasan ang antas na ito.
      courseA_collector_loops4_instruction: Ayusin ang daanan ni Laurel para makuha
        ang lahat ng mga kayamanang ito.
      courseA_collector_loops4_2018_instruction: |-
        Fix Laurel's path to get all of
        this treasure.
      courseA_collector_loops5_instruction: Gamitin ang iyong natutunan para makuha
        ang lahat ng mga kayamanan.
      courseA_collector_loops5_2018_instruction: |-
        Use what you learned to get all
        of the treasure.
      courseA_collector_loops6_instruction: Magdagdag ng mga bloke sa code na ito
        para makuha ang lahat ng mga kayamanan.
      courseA_collector_loops6_2018_instruction: |-
        Add blocks to this code to get
        all of the treasure.
      courseA_collector_loops7_instruction: Ano dapat ang idadagdag mo sa code na
        ito para makuha ang lahat ng mga kayamanan?
      courseA_collector_loops7_2018_instruction: |-
        What should you add to this code
        to get all of the treasure?
      courseA_collector_loops8_instruction: Magsulat ng code para makuha ang lahat
        ng mga kayamanang ito.
      courseA_collector_loops8_2018_instruction: Magsulat ng code para makuha ang
        lahat ng mga kayamanang ito.
      courseA_collector_loops9_instruction: "**Hamon:** Ang kayamanan ay umaabot hanggang
        sa mga hagdanan na mga ito! Magsulat ng code para matulungan si Laurel na
        makuha ang lahat ng ito."
      courseA_collector_loops9_2018_instruction: |-
        **Challenge:** The treasure goes
        all the way up these stairs!  Write the code to help Laurel get it all.
      courseA_collector_loops_challenge1_instruction: '*"Maaari mo ba akong tulungan
        na makita ang ilang mga bug?"*'
      courseA_collector_loops_challenge1_2018_instruction: |-
        *"Can you help me spot
        some bugs?"*
      courseA_collector_loops_challenge2_instruction: 'Kunin ang lahat ng mga kayamanan! '
      courseA_collector_loops_challenge2kp_instruction: Magkolekta nang hindi bababa
        sa **3** mga piraso ng kayamanan para maipasa ang antas na ito.
      courseA_collector_loops_challenge2kp_2018_instruction: |-
        Collect at least **3**
        pieces of treasure to pass this level.
      courseA_collector_preLoops1_instruction: |-
        Ito si Laurel ang Manggagalugad! \r
        \r
        Pindutin ang "Run" para makita siyang maglakad sa mga kayaman para kunin ito.
      courseA_collector_preLoops2_instruction: |-
        Magaling! Ngayon ay magdadag ka ng code nang ikaw lang! \r
        \r
        Mag-snap ng `get a treasure` na bloke sa ilalim ng programa at pindutin ang "Run".
      courseA_collector_preLoops3_instruction: Mag-snap ng dalawang `E-->` na mga
        bloke at kumuha ng `get treasure` na bloke sa ilalim ng programa, pagkatapos
        ay pindutin ang "Run".
      courseA_collector_preLoops4_instruction: Maaari mo bang malaman kung paano lutasin
        ang palaisipang ito?
      courseA_collector_preLoops5_instruction: Kumuha ng 1 sa 2 mga hiyas para malutas
        ang palaisipang ito.
      courseA_collector_preLoops6_instruction: Kunin ang parehong mga piraso ng kayamanan
        para malutas ang palaisipan.
      courseA_collector_preLoops7_instruction: Kunin ang lahat ng tatlong mga bunton
        para malampasan ang antas na ito.
      courseA_forVideoTest_artist_instruction: Gamitin ang `repeat` na loop para magdagdag
        ng mga alon sa tubig.
      courseA_harvester_forVideo_instruction: |-
        Can you pick all the corn using only
        **one** move block?
      courseA_harvester_loops1_instruction: Help the farmer pick all the corn!
      courseA_harvester_loops10_instruction: |-
        Help the harvester pick all five ears
        of corn!
      courseA_harvester_loops11_instruction: 'Try one more on your own! '
      courseA_harvester_loops2_instruction: Make sure to pick all the corn!
      courseA_harvester_loops3_instruction: |-
        Can you pick all the corn using only
        **one** move block?
      courseA_harvester_loops4_instruction: |-
        Can you help the harvester find the
        bug in her code?
      courseA_harvester_loops5_instruction: |-
        Try it yourself! Can you pick the corn
        at the end too?
      courseA_harvester_loops5a_instruction: |-
        Look at all this corn! Can you pick
        it all by yourself?
      courseA_harvester_loops5b_instruction: |-
        Can you change your code to make the
        harvester pick all the corn?
      courseA_harvester_loops6_instruction: |-
        You will need **one** `Move South` block
        and **one** `Move West` block.
      courseA_harvester_loops7_instruction: 'Try it on your own! '
      courseA_harvester_loops8_instruction: |-
        This is the same puzzle, but now you
        have to repeat **three** times!
      courseA_harvester_loops9_instruction: |-
        Can you figure out how to pick all the
        corn?
      courseA_harvester_seq1_instruction: |-
        Play with these blocks to help the harvester
        pick the piece of corn.
      courseA_harvester_seq10_instruction: Make sure to pick all the corn!
      courseA_harvester_seq11_instruction: Try it by yourself! Pick all the corn.
      courseA_harvester_seq12_instruction: |-
        Play with these blocks to help the bee
        get *one* nectar.
      courseA_harvester_seq13_instruction: |-
        Play with these blocks to help the harvester
        pick **one** corn.
      courseA_harvester_seq2_instruction: |-
        Use three `move west` blocks and one `pick
        corn` block to solve this puzzle.
      courseA_harvester_seq3_instruction: |-
        Use three `Move North` blocks and one
        `Pick Corn` block.
      courseA_harvester_seq4_instruction: |-
        Add one block to help the harvester pick
        the corn.
      courseA_harvester_seq5_instruction: Find the bug and fix it!
      courseA_harvester_seq6_instruction: Try it yourself!
      courseA_harvester_seq7_instruction: Try it yourself!
      courseA_harvester_seq8_instruction: |-
        Now the harvester needs to pick corn two
        times!
      courseA_harvester_seq9_instruction: Add two blocks to finish this puzzle!
      courseA_maze_ramp2_2018_instruction: |-
        Snap all blocks together to finish your
        code, then click "Run".
      courseA_maze_ramp2a_2018_instruction: |-
        Snap all blocks together to finish your
        code, then click "Run".
      courseA_maze_ramp3_2018_instruction: Mayroong isang ekstrang bloke na magiging
        sanhi na mag-crash ang ibon. Itapon ito sa pamamagitan ng pagkaladkad nito
        pabalik sa toolbox.
      courseA_maze_ramp3a_2018_instruction: |-
        Add a `North` block to the bottom of
        the other blocks to finish this code, then click "Run".
      courseA_maze_ramp4_2018_instruction: Iwasan ang TNT para hindi lilipad ang mga
        balahibo!
      courseA_maze_ramp4a_2018_instruction: |-
        Can you figure out which block you need
        to add to the bottom of the other blocks to finish this code?
      courseA_maze_ramp5_2018_instruction: Iwasan ang mga TNT.
      courseA_maze_ramp5a_2018_instruction: Dalhin ang ibon sa baboy!
      courseA_maze_seq1_instruction: Puntahan ang masamang baboy!
      courseA_maze_seq10_instruction: 'Hamon: Libutin ang TNT para mapapunta ang ibon
        sa baboy! '
      courseA_maze_seq10_2018_instruction: "Challenge: Avoid the TNT to get the bird\nto
        the pig! "
      courseA_maze_seq11_instruction: Galawin ang isang daan, pagkatapos ay ang isa
        pa para mapapunta ang ibon sa baboy.
      courseA_maze_seq11_2018_instruction: |-
        Move one way, then another to get the
        bird to the pig.
      courseA_maze_seq12_instruction: 'Kunin ang baboy na iyan! '
      courseA_maze_seq12_2018_instruction: 'Kunin ang baboy na iyan! '
      courseA_maze_seq13_instruction: Kunin ang baboy sa kahit anong paraan na kaya
        mo!
      courseA_maze_seq13_2018_instruction: Kunin ang baboy sa kahit anong paraan na
        kaya mo!
      courseA_maze_seq1_2018_instruction: Puntahan ang masamang baboy!
      courseA_maze_seq2_instruction: Ayusin ang code para mapapunta ang ibon sa baboy.
      courseA_maze_seq2_2018_instruction: Ayusin ang code para mapapunta ang ibon
        sa baboy.
      courseA_maze_seq3_instruction: Ayusin ang code para mapapunta ang ibon sa baboy!
      courseA_maze_seq3_2018_instruction: Ayusin ang code para mapapunta ang ibon
        sa baboy!
      courseA_maze_seq4_instruction: TANGGALIN ang bloke para mapapunta ang ibon sa
        baboy!
      courseA_maze_seq4_2018_instruction: |-
        REMOVE a block to get the bird to the
        pig!
      courseA_maze_seq4a_instruction: Dalhin ang ibon sa baboy gamit ang pinakakaunting
        mga bloke na posible.
      courseA_maze_seq5_instruction: Subakan mo ang isang ito mula sa simula.
      courseA_maze_seq5_2018_instruction: Try this one yourself from the beginning.
      courseA_maze_seq5a_2018_instruction: |-
        What can you add to the end of this code
        to get the bird to the pig?
      courseA_maze_seq6_instruction: Ilipat ang isang daan, pagkatapos ay isa pa para
        mapapunta ang ibon sa baboy!
      courseA_maze_seq6_2018_instruction: |-
        Move one way, then another to get the
        bird to the pig!
      courseA_maze_seq7_instruction: Alamin kung ano ang nawala at pagkatapos ay magdagdag
        ng mga bloke para mapapunta ang ibon sa baboy!
      courseA_maze_seq7_2018_instruction: |-
        Figure out what is missing and then add
        blocks to get the bird to the pig!
      courseA_maze_seq8_instruction: Lutasin ang antas na ito at dalhin ang ibon sa
        baboy!
      courseA_maze_seq8_2018_instruction: |-
        Solve this level and get the bird to the
        pig!
      courseA_maze_seq9_instruction: I-debug ang antas na ito sa pamamagitan ng pagdagdag
        ng mga bloke para mapapunta ang ibon sa baboy!
      courseA_maze_seq9_2018_instruction: |-
        Debug this level by adding blocks to get
        the bird to the pig!
      courseA_maze_seq_challenge1_instruction: May problema dito. Tulungang ayusin
        ang code para mapapunta ang ibon sa baboy!
      courseA_maze_seq_challenge1_2018_instruction: |-
        Something is wrong here. Help
        fix the code to get the bird to the pig!
      courseA_maze_seq_challenge2_instruction: Sundan ang landas para gabayan ang
        ibon papunta sa baboy. Iwasan ang TNT para hindi lilipad ang mga balahibo!
      courseA_maze_seq_challenge2_2018_instruction: |-
        Trace the path to lead the bird
        to the pig. Avoid TNT or feathers will fly!
      courseA_playLab_events1_instruction: Ito ay isang Play Lab na antas. Maglipat
        ng mga bloke sa workspace at tingnan kung ano ang mangyayari!
      courseA_playLab_events1_2018_instruction: |-
        This is a Play Lab level.  Move
        blocks to the workspace and see what happens!
      courseA_playLab_events2_instruction: Si Jorge ang Aso ay gustong magsabi ang
        "Hi sa iyo." Maaari mo ba siyang matulungan?
      courseA_playLab_events2_2018_instruction: |-
        Jorge the Dog wants to say "Hi
        there."  Can you help him?
      courseA_playLab_events3_instruction: Ikonekta ang `move left` na bloke sa `when
        left` na pangyayari na bloke na nasa workspace na.
      courseA_playLab_events3_2018_instruction: |-
        Connect the `move left` block to
        the `when left` event block that is already in the workspace.
      courseA_playLab_events4_instruction: Ngayon, pagalawin si Jorge pakanan kapag
        ang `right` na button ay napindot.
      courseA_playLab_events4_2018_instruction: |-
        Now, get Jorge to move right when
        the `right` button is clicked.
      courseA_playLab_events5_instruction: Magdagdag ng mga pangyayari para mapagalaw
        si Jorge pataas at pababa kapag ang `up` at `down` na mga button ay napindot.
      courseA_playLab_events5_2018_instruction: |-
        Add events to have Jorge move up
        and down when the `up` and `down` buttons are pressed.
      courseA_playLab_events6_instruction: Gawin itong mas kawili-wili sa pamamagitan
        nang pagpalit ng background at pagpapatunog na random na tunog kapag si Jorge
        ay na-click.
      courseA_playLab_events6_2018_instruction: |-
        Make this more interesting by changing
        the background and playing a random sound when Jorge is clicked.
      courseA_playLab_events7_instruction: Magdagdag ng kahit anong gusto mo sa larong
        ito. Maaari mo bang mapawala ang dinosaur kapag si Jorge ay nakatagpo nito?
      courseA_playLab_events7_2018_instruction: |-
        Add anything you want to this game.  Can
        you make the dinosaur disappear when Jorge runs into him?
      courseA_playlab_events_challenge1_instruction: Maaari ka bang magsulat ng code
        para makita ang natira kong mga kaibigan? Ang mga hint ay makakatulong sa
        iyo na gawin ang proyektong ito sa bawat hakbang.
      courseA_playlab_events_challenge1_2018_instruction: |-
        Can you write code to
        show the rest of my friends? The hints will help you do this project step-by-step.
      courseA_playlab_events_challenge2_instruction: Bigyan ang lahat ng isang gawain
        kapag na-click mo sila.
      courseA_playlab_events_challenge2_2018_instruction: |-
        Give everyone something
        to do when you click on them.
      courseA_playlab_events_challengeClone_instruction: Nasaan nagtago ang aking
        mga kaibigan? Maaari ka bang magsulat ng code para ipakita ang natira kong
        mga kaibigan?
      courseA_toMakeLoopsVideo_Collector_instruction: Ang loops ay nagbibigay-daan
        sa iyo na gawin ang anumang nasa loob nang paulit-ulit!
      courseA_video_events_instruction: Nangangailangan ng mas mahusay na playlab/pangyayari
        na combo
      courseA_video_events_2018_instruction: Need a better playlab/events combo
      courseB_Scrat_ramp1_2018_instruction: |-
        For this puzzle, snap the blocks together
        and click "Run"!
      courseB_Scrat_ramp2_2018_instruction: |-
        Snap all blocks together to finish your
        code, then click "Run".
      courseB_Scrat_ramp3a_2018_instruction: |-
        Add a `North` block to the bottom of
        the other blocks to finish this code, then click "Run".
      courseB_Scrat_ramp4a_2018_instruction: |-
        Can you figure out which block you
        need to add to the bottom of the other blocks to finish this code?
      courseB_Scrat_ramp5a_2018_instruction: Dalhin ang ibon sa baboy!
      courseB_artist_loops1_instruction: Ito ay isang bagong tipo ng palaisipan na
        tinatawag na "Artist". Maglaro sa antas at gumuhit ng isang bagay na masaya.
      courseB_artist_loops10_instruction: Gamitin ang natutunan mo para maiguhit ang
        larawan kung ano ang naisip mo na makikita ng artist pag-uwi niya sa bahay.
      courseB_artist_loops10_2018_instruction: |-
        Use what you have learned to draw
        a picture of what you think the artist saw when he got home.
      courseB_artist_loops1_2018_instruction: |-
        This is a new type of puzzle called
        "Artist". Play with the level and draw something fun.
      courseB_artist_loops2_instruction: Ang Artist ay sinusubukang gumuhit ng linya
        mga **6** na beses, ngunit hindi magawa ito ng tama. Maaari ka bang tumulong?
      courseB_artist_loops2_2018_instruction: |-
        The Artist is trying to draw a line
        **6** times, but can't get it right.  Can you help?
      courseB_artist_loops3_instruction: Tulungan ang artista na gumuhit ng linya
        ng mga 7 beses para makagawa ng pader sa halamanan.
      courseB_artist_loops3_2018_instruction: |-
        Help the artist draw a line 7 times
        to make a garden wall.
      courseB_artist_loops4_instruction: 'Ngayon ay kailangan nating ihanda ang lupa
        para sa pagtanim. Hanapin ang mga bug sa code at tulungan ang artista na maghanda
        sa lupa. '
      courseB_artist_loops4_2018_instruction: |
        Now we need to get the soil ready
        to plant. Find the bugs in the code and help the artist prepare the ground.
      courseB_artist_loops5_instruction: Oras na para ayusin ang hagdanan! Ulitin
        ang pattern na ito nang **5** beses para maabot ng artista ang itaas ng mga
        palumpong.
      courseB_artist_loops5_2018_instruction: |-
        Time to fix the stairs!  Repeat this
        pattern **5** times so the artist can reach the top of the bushes.
      courseB_artist_loops6_instruction: Akyatin ang baging at tingnan kung saan ito
        tutungo?
      courseB_artist_loops6_2018_instruction: Akyatin ang baging at tingnan kung saan
        ito tutungo?
      courseB_artist_loops7_instruction: "**Hamon:** Ito ay isang nakatagong halamanan!
        Tayo ay maglakad sa paligid."
      courseB_artist_loops7_2018_instruction: "**Hamon:** Ito ay isang nakatagong
        halamanan! Tayo ay maglakad sa paligid."
      courseB_artist_loops8_instruction: Oras na para umuwi. Maaari mo bang ayusin
        ang hagdanang ito gamit ang isang bloke lang para matulungan ang artista na
        bumaba?
      courseB_artist_loops8_2018_instruction: |-
        Time to head home. Can you fix this
        ladder using only one block to help the artist get down?
      courseB_artist_loops9_instruction: Ating daanan ang maikling daan pauwi, sa
        itaas ng lanaw. Maaari mo bang matulungan ang artista na manatili sa mga bato?
      courseB_artist_loops9_2018_instruction: |-
        Let's take the short way home, over
        the pond. Can you help the artist stay on the stones?
      courseB_artist_loops_challenge1_instruction: '"Oras na para ihagis ang dice!
        Maaari mo ba akong tulungan na iguhit ang mga ito?"'
      courseB_artist_loops_challenge1_2018_instruction: |-
        "It's time to toss the
        dice! Can you help me draw these?"
      courseB_artist_loops_challenge2_instruction: Magguhit ng maraming mga X hangga't
        kaya mo. Maaari ka bang makakuha ng 3 sa isang hanay?
      courseB_artist_loops_challenge2_2018_instruction: |-
        Draw as many X's as you
        can. Can you get 3 in a row?
      courseB_collector_loops1_instruction: Ito si Laurel ang Abenturero! Maaari mo
        ba siyang pagalawin sa paligid at magkuha ng kayamanan?
      courseB_collector_loops10_instruction: Tulungan si Laurel na kunin ang lahat
        ng mga kayamanan mula sa kuwebang ito.
      courseB_collector_loops10_2018_instruction: Tulungan si Laurel na kunin ang
        lahat ng mga kayamanan mula sa kuwebang ito.
      courseB_collector_loops11_instruction: Eureka! Magkuha ng maraming mga yaman
        hangga't kaya mo!
      courseB_collector_loops11_2018_instruction: |-
        Eureka!  Get as much treasure
        as you can!
      courseB_collector_loops1_2018_instruction: Ito si Laurel ang Abenturero! Maaari
        mo ba siyang pagalawin sa paligid at magkuha ng kayamanan?
      courseB_collector_loops2_instruction: Kunin ang lahat ng apat na mga bunton
        para maipasa ang antas na ito.
      courseB_collector_loops2_2018_instruction: |-
        Get all four piles to pass this
        level.
      courseB_collector_loops3_instruction: Paano makuha ni Laurel ang lahat ng mga
        bunton ng yaman gamit lang ang isang `E -->`na bloke?
      courseB_collector_loops3_2018_instruction: |-
        How can Laurel get all five piles
        of treasure using only one `E -->` block?
      courseB_collector_loops3_predict1_instruction: Paano makolekta ni Laurel ang
        lahat ng 5 mga bunton ng ginto gamit lang ang isang `E -->`na bloke?
      courseB_collector_loops4_instruction: Ayusin ang daanan ni Laurel para makuha
        ang lahat ng mga yaman!
      courseB_collector_loops4_2018_instruction: |-
        Fix Laurel's path to get all of
        this treasure!
      courseB_collector_loops5_instruction: 'Magdagdag sa code mula sa huling palaisipan
        para makuha ang lahat ng mga yaman. '
      courseB_collector_loops5_2018_instruction: 'Magdagdag sa code mula sa huling
        palaisipan para makuha ang lahat ng mga yaman. '
      courseB_collector_loops6_instruction: Alamin ang code para matulungan si Laurel
        na makuha ang lahat ng mga yaman!
      courseB_collector_loops6_2018_instruction: |-
        Figure out the code to help Laurel
        get all of the treasure!
      courseB_collector_loops7_instruction: Isulat ang code para makuha ang lahat
        ng mga yamang ito.
      courseB_collector_loops7_2018_instruction: |-
        Write the code to get all of this
        treasure.
      courseB_collector_loops8_instruction: "**Hamon:** Ang kayamanan ay umabot hanggang
        sa mga hagdanang ito! Magsulat ng code para matulungan si Laurel na makuha
        ang lahat ng ito."
      courseB_collector_loops8_2018_instruction: |-
        **Challenge: ** The treasure goes
        all the way down these stairs!  Write the code to help Laurel get it all.
      courseB_collector_loops9_instruction: '*"Tulungan akong makuha ang kayamanan
        mula sa malalim na lambak na ito."*'
      courseB_collector_loops9_2018_instruction: |-
        *"Help me get the treasure from
        this deep valley."*
      courseB_collector_loops_challenge1_instruction: 'Sa oras na ito, mayroon ka
        lang limitadong mga bloke. Kunin ang lahat ng mga yaman! '
      courseB_collector_loops_challenge1_2018_instruction: 'Sa oras na ito, mayroon
        ka lang limitadong mga bloke. Kunin ang lahat ng mga yaman! '
      courseB_collector_loops_challenge2_instruction: Ating kunin ang mga kayamanan!
        Tulungan akong makatawid sa bawat isang hanay, at pagkatapos ay babalik para
        simulan ang sunod na hanay. Maaari ka bang makahanap ng pattern?
      courseB_collector_loops_challenge2a_instruction: Tulungan si Laurel na makakuha
        ng hindi bababa sa **5** mga piraso ng kayamanan para matapos ang palaisipang
        ito.
      courseB_collector_loops_challenge2a_2018_instruction: Tulungan si Laurel na
        makakuha ng hindi bababa sa **5** mga piraso ng kayamanan para matapos ang
        palaisipang ito.
      courseB_collector_loops_challenge`_instruction: 'Sa oras na ito, maaari ka lang
        gumamit ng isa sa bawat arrow na bloke. Kunin ang lahat ng mga yaman! '
      courseB_collector_prog1_instruction: Ito si Laurel ang Abenturero! Maaari mo
        ba siyang ilibot at kumuha ng ginto?
      courseB_collector_prog2_instruction: Apat na bunton ng ginto! Kolektahin ang
        lahat ng apat.
      courseB_collector_prog3_instruction: Paano makolekta ni Laurel ang lahat ng
        limang mga bunton ng ginto gamit ang isang `E-->` na bloke lang?
      courseB_iceage_loops1_instruction: |-
        Help Scrat across the ice to get to the
        acorn!
      courseB_iceage_loops10_instruction: |-
        Help Scrat get all the way over to the
        acorn!
      courseB_iceage_loops11_instruction: Help Scrat get to the acorn!
      courseB_iceage_loops12_instruction: Get to the acorn any way you can!
      courseB_iceage_loops2_instruction: |-
        Use two different move blocks to get to
        the acorn!
      courseB_iceage_loops3_instruction: |-
        Can you get to the acorn with just one
        `W` block?
      courseB_iceage_loops4_instruction: |-
        Add one more block to get Scrat all the
        way to the acorn!
      courseB_iceage_loops5_instruction: |-
        Can you add one more loop to get to the
        acorn?
      courseB_iceage_loops6_instruction: Can you add a loop to get to the acorn?
      courseB_iceage_loops7_instruction: 'Scrat really wants that acorn! '
      courseB_iceage_loops8_instruction: 'Can you fix this code? '
      courseB_iceage_loops9_instruction: |-
        The acorn is so far away! Can you use loops
        to help Scrat get there?
      courseB_maze_seq1_instruction: |-
        Maglaro sa mga blokeng ito para makita kung ano ang pinagawa nila sa ibon! \r
        \r
        Papuntahin ang ibon sa baboy para makompleto ang antas.
      courseB_maze_seq10_instruction: Ayusin ang mga bugs para mapapunta ang ibon
        sa baboy.
      courseB_maze_seq10_2018_instruction: Fix the bugs to get the bird to the pig.
      courseB_maze_seq11_instruction: Ang lahat ng ito ay ikaw lang! Papuntahin ang
        ibon sa baboy.
      courseB_maze_seq11_2018_instruction: It's all you!  Get the bird to the pig.
      courseB_maze_seq12_instruction: Ngayon ay kunin ang baboy na iyan sa kahit anong
        paraan na kaya mo!
      courseB_maze_seq12_2018_instruction: Ngayon ay kunin ang baboy na iyan sa kahit
        anong paraan na kaya mo!
      courseB_maze_seq1_2018_instruction: |-
        Play with these blocks to see what they
        make Scrat do! \r
        \r
        Get Scrat to the acorn to complete the level.
      courseB_maze_seq2_instruction: '*"May bug! Ayusin ang code para mapapunta ako
        sa baboy."*'
      courseB_maze_seq2_2018_instruction: |-
        A bug! Fix the code to get Scrat to the
        acorn!
      courseB_maze_seq4_instruction: Magdagdag ng 2 mga bloke para mapapunta ang ibon
        sa baboy.
      courseB_maze_seq4_2018_instruction: |-
        Use **2** movement blocks to get the Scrat
        to the acorn.
      courseB_maze_seq5_instruction: Ngayon ay subukan ang palaisipang ito mula sa
        simula!
      courseB_maze_seq5_2018_instruction: Now try this puzzle from the start!
      courseB_maze_seq6_instruction: Ilipat ang isang daan, pagkatapos ay isa pa para
        mapapunta ang ibon sa baboy!
      courseB_maze_seq6_2018_instruction: |-
        Move one way, then another to get Scrat
        to the acorn!
      courseB_maze_seq7_instruction: Alamin kung ano ang nawala at pagkatapos ay magdagdag
        ng mga bloke para mapapunta ang ibon sa baboy!
      courseB_maze_seq7_2018_instruction: |-
        Figure out what is missing and then add
        blocks to get Scrat to the acorn!
      courseB_maze_seq8_instruction: Ikaw naman! Ano ang kailangan mong gawin para
        mapapunta ang ibon sa baboy?
      courseB_maze_seq8_2018_instruction: |-
        Your turn!  What do you need to do to
        get Scrat to the acorn?
      courseB_maze_seq9_instruction: 'Hamon: Umikot sa TNT para mapapunta ang ibon
        sa baboy.'
      courseB_maze_seq9_2018_instruction: |-
        Challenge: Move around the broken ice
        to get Scrat to the acorn.
      courseB_maze_seq9_challenge1_instruction: "*Nasaan na nagtago ang baboy ngayon?*"
      courseB_maze_seqCold_instruction: 'Hamon: I-debug ang antas na ito sa pamamagitan
        ng pagdagdag ng mga bloke para mapapunta ang ibon sa baboy!'
      courseB_maze_seqOld_instruction: 'Umikot sa TNT para mapapunta ang ibon sa baboy! '
      courseB_maze_seq_challenge1_instruction: Maaari mo bang mahanap ang landas bago
        ka maubusan ng mga bloke?
      courseB_maze_seq_challenge1_2018_instruction: |-
        Can you find a path before you
        run out of blocks?
      courseB_maze_seq_challenge2_instruction: I-debug ang antas na ito. Ito ang tamang
        mga bloke, ngunit sila ay nasa maling pagkasunod-sunod!
      courseB_maze_seq_challenge2_2018_instruction: I-debug ang antas na ito. Ang
        mga ito ay ang mga tamang bloke, ngunit sila ay nasa maling pagkakasunod-sunod!
      courseB_playLab_events1_instruction: Tingnan kung maaari mong matukoy kung ano
        ang ginagawa ng bawat bloke.
      courseB_playLab_events1_2018_instruction: |-
        See if you can figure out what each
        block does.
      courseB_playlab_events2_instruction: Pasalitain ang Daisy na Dragon kapag na-click
        mo ang "Run".
      courseB_playlab_events2_2018_instruction: |-
        Have Daisy the Dragon say something
        when you click "Run".
      courseB_playlab_events3_instruction: Gumamit ng event para magawa ng Daisy na
        Dragon na magpalit sa isang random na mood kapag na click mo ito.
      courseB_playlab_events3_2018_instruction: Gumamit ng event para magawa ng Daisy
        na Dragon na magpalit sa isang random na mood kapag na click mo ito.
      courseB_playlab_events4_instruction: Oras na ng kabalyero! Magdagdag ng pangyayari
        para ang kabalyero ay gagalaw patungo sa dragon kapag ang kaliwang arrow ay
        na-click.
      courseB_playlab_events4_2018_instruction: |-
        Knight time!  Add an event so that
        the knight moves toward the dragon when the left arrow is clicked.
      courseB_playlab_events5_instruction: Ngayon ay magdagdag ng pangyayari para
        ang kabalyero ay tatakbo palayo sa dragon kapag napindot mo ang kanang arrow.
      courseB_playlab_events5_2018_instruction: |-
        Now add an event so that the knight
        runs away from the dragon when you press the right arrow.
      courseB_playlab_events6_instruction: |-
        Tulungan ang iyong kabalyero para makuha ang lahat ng mga bandila!\r
        \r
        Para magawa ito, kailangan mong magdagdag ng mga pangyayari para matulungan ang kabalyero na gumawa ng pataas, pababa, pakaliwa, at pakanan.
      courseB_playlab_events6_2018_instruction: |-
        Help your knight get all of the
        flags!\r
        \r
        To do this, you'll need to add events to help the knight move
        up, down, left, and right.
      courseB_playlab_events7_instruction: Gawing masaya ang laro sa pamamagitan ng
        pagtakda sa kabalyero na maglaho kapag nakatagpo siya ng dragon sa daan niya
        para magkuha ng mga bandila! Magpatugtog ng tunog kapag sila ay nagkabangga
        para gawin itong mas maging totoo.
      courseB_playlab_events7_2018_instruction: |-
        Make this game fun by setting the
        knight to vanish when he runs into the dragon on his way to get the flags!  Play
        a sound when they collide to make it feel more real.
      courseB_playlab_events8_instruction: Gamitin ang iyong imahenasyon. Ano ang
        maaari mong gawin para gawing mas masaya ang larong ito?
      courseB_playlab_eventsFP_instruction: Gamitin ang iyong imahenasyon. Ano ang
        maaari mong gawin para gawing mas masaya ang larong ito?
      courseB_playlab_eventsFP_2018_instruction: |-
        Use your imagination. What can
        you do to make this game more fun?
      courseB_playlab_eventsToolbox_instruction: Tapusin sa pamamagitan ng pagpapatunog
        ng tunog at pagpagawa sa kabalyero na maglaho kapag nakatagpo niya ang dragon!
      courseB_playlab_events_challenge1_instruction: 'Gawin ang mga hayop na gumalaw
        pababa kapag napindot mo ang ▼. '
      courseB_playlab_events_challenge1_2018_instruction: "Make the animals move\ndown
        when you press ▼. "
      courseB_playlab_events_challenge2_instruction: Pawalain ang mga hayop kapag
        na-click mo sila.
      courseB_playlab_events_challenge2_2018_instruction: Pawalain ang mga hayop kapag
        na-click mo sila.
      courseB_playlab_events_challenge2_embed_instruction: Narito ang iyong natapos
        na laro!
      courseB_playlab_events_challenge2_template_instruction: Ating pawalain ang mga
        hayop kapag na-click mo ang mga ito! Maaari ka ring magdagdag ng mga tunog
        at mag-iskor ng mga puntos para makalikha ng isang masayang laro ng Animal
        Tag!
      courseB_playlab_events_challenge2_template_2018_instruction: |-
        Let's make the
        animals disappear when you click on them! You can also add sounds and score
        points to create a fun game of Animal Tag!
      courseB_scrat_forVideo_instruction: Get the acorn!
      courseB_starWars_prog1_instruction: '"Pumunta at kumuha ng mga metal na scrap,
        BB-8!"'
      courseB_starWars_prog10_instruction: Tulungan si BB-8 na magtipon ng mga nagbabagang
        mga scrap na metal
      courseB_starWars_prog10_2018_instruction: |-
        Help BB-8 gather the glowing scrap
        metal
      courseB_starWars_prog11_instruction: Tulungan si BB-8 na magtipon ng mga nagbabagang
        mga scrap na metal
      courseB_starWars_prog11_2018_instruction: |-
        Help BB-8 gather the glowing scrap
        metal
      courseB_starWars_prog1_2018_instruction: '"Pumunta at kumuha ng mga metal na
        scrap, BB-8!"'
      courseB_starWars_prog2_instruction: Kunin ang lahat ng mga metal.
      courseB_starWars_prog2_2018_instruction: Kunin ang lahat ng mga metal.
      courseB_starWars_prog3_instruction: Kunin ang lahat ng mga scrap na metal
      courseB_starWars_prog3_2018_instruction: Kunin ang lahat ng mga scrap na metal
      courseB_starWars_prog4_instruction: Kunin ang lahat ng mga scrap na metal
      courseB_starWars_prog4_2018_instruction: Kunin ang lahat ng mga scrap na metal
      courseB_starWars_prog5_instruction: Kunin ang scrap na metal
      courseB_starWars_prog5_2018_instruction: Kunin ang scrap na metal
      courseB_starWars_prog6_instruction: Kunin ang lahat ng mga scrap na metal
      courseB_starWars_prog6_2018_instruction: Kunin ang lahat ng mga scrap na metal
      courseB_starWars_prog7_instruction: Pumunta at kunin ito!
      courseB_starWars_prog7_2018_instruction: Pumunta at kunin ito!
      courseB_starWars_prog8_instruction: "**Hamon:** Tulungan si BB-8 na magtipon
        ng mga nagbabagang mga scrap na metal"
      courseB_starWars_prog8_2018_instruction: |-
        **Challenge:** Help BB-8 gather the
        glowing scrap metal
      courseB_starWars_prog9_instruction: Tulungan si BB-8 na magtipon ng mga nagbabagang
        mga scrap na metal
      courseB_starWars_prog9_2018_instruction: |-
        Help BB-8 gather the glowing scrap
        metal
      courseC_PlayLab_events1_instruction: Pasabihin si Jorge ang Aso (aktor 1) nang
        "Hi there."
      courseC_PlayLab_events1_2018_instruction: |-
        Make Jorge the Dog (actor 1) say
        "Hi there."
      courseC_PlayLab_events2_instruction: Maaari mo bang mapagawa si Jorge ang Aso
        (aktor 1) na magsabi ng isang bagay, pagkatapos pasalitain din si Olive ang
        Pusa (aktor 2) pagkatapos?
      courseC_PlayLab_events2_2018_instruction: |-
        Can you make Jorge the Dog (actor
        1) say something, then have Olive the Cat (actor 2) say something afterward?
      courseC_PlayLab_events3_instruction: Maaari ka bang magsulat ng programa para
        mapagawa si Jorge (aktor 1) na lumapit papunta kay Olive ang Pusa?
      courseC_PlayLab_events3_2018_instruction: |-
        Can you write a program to make
        Jorge (actor 1) move toward Olive the Cat?
      courseC_PlayLab_events4_instruction: Maaari ka bang magsulat ng programa na
        nagpapagawa kay Jorge (aktor 1) na lumakad papunta kay Olive ang Pusa, at
        pasabihin si Olive nang "Hi there." kapag si Jorge ay nakaabot sa kanya?
      courseC_PlayLab_events4_2018_instruction: |-
        Can you write a program that makes
        Jorge (actor 1) move to Olive the Cat, and have Olive say "Hi there." when
        Jorge reaches her?
      courseC_PlayLab_events5_instruction: Maaari ka bang magsulat ng programa para
        mapagawa si Octavia ang Pugita na magsabi nang "Ano ang bago?" kapag siya
        ay na-click?
      courseC_PlayLab_events5_2018_instruction: |-
        Can you write a program to make
        Octavia the Octopus say "What's new?" when she is clicked?
      courseC_PlayLab_events6_instruction: Ngayon, magsulat ng programa para mapagalaw
        si Waddles ang Pingguwino sa paligid gamit ang taas / baba / kaliwa / kanan
        na mga key para matamaan ang lahat ng mga target!
      courseC_PlayLab_events6_2018_instruction: Ngayon, magsulat ng programa para
        mapagalaw si Waddles ang Pingguwino sa paligid gamit ang taas / baba / kaliwa
        / kanan na mga key para matamaan ang lahat ng mga target!
      courseC_PlayLab_events7_instruction: Ang `repeat forever` na bloke ay nagbibigay-daan
        na mapapatakbo mo ang code nang paulit-ulit magpakailanman. Gamitin ang blokeng
        ito para galawin si Chomp ang Dino (aktor 2) pataas at pababa ng 400 pixels
        magpakailanman.
      courseC_PlayLab_events7_2018_instruction: |-
        The `repeat forever` block allows
        you to run code over and over forever.  Use this block to move Chomp the Dino
        (actor 2) up and down by 400 pixels forever.
      courseC_PlayLab_events8_instruction: |-
        Maaari mo bang mapapatugtog si Waddles (aktor 1) ng "hit" na tunog at pasabihin ng "Ouch!" kapag nakatagpo niya si Chomp? \r
        Kapag tapos ka na, laruin ang laro para mangyari ito.
      courseC_PlayLab_events8_2018_instruction: |-
        Can you have Waddles (actor 1) play
        a "hit" sound and say "Ouch!" if he runs into Chomp? \r
        When you're
        done, play the game to make that happen.
      courseC_PlayLab_events9_instruction: |-
        Maaari ka bang magdagdag ng bloke para makaiskor ng puntos kapag si Waddles ang Pingguwino (aktor 1) ay nakatagpo kay Octavia ang Pugita (aktor 3)?
        \r
        Laruin ang laro at galawin si Waddles gamit ang mga arrow hanggang sa makapuntos ka!
      courseC_PlayLab_events9_2018_instruction: |-
        Maaari ka bang magdagdag ng bloke para makaiskor ng puntos kapag si Waddles ang Pingguwino (aktor 1) ay nakatagpo kay Octavia ang Pugita (aktor 3)?
        \r
        Laruin ang laro at galawin si Waddles gamit ang mga arrow hanggang sa makapuntos ka!
      courseC_PlayLab_eventsA_instruction: |-
        Magdagdag ng mga bloke sa `when run` na pangyayari para palitan ang background na eksena at ang bilis ni Waddles ang Pingguwino.\r
        \r
        Laruin ang laro at galawin si Waddles gamit ang mga arrow hanggang makapuntos ka.
      courseC_PlayLab_eventsA_2018_instruction: |-
        Add blocks to the `when run` event
        to change the background scene and the speed of Waddles the Penguin.\r
        \r
        Play
        the game and move Waddles with the arrows until you score.
      courseC_PlayLab_eventsFP_instruction: Maglikha ng iyong sariling kuwento. Kapag
        tapos ka na, i-click ang "Finish" para ibahagi sa iyong mga kaibigan. Tingnan
        ang mga ideyang kuwento sa mga hint.
      courseC_PlayLab_eventsFP_2018_instruction: Maglikha ng iyong sariling kuwento.
        Kapag tapos ka na, i-click ang "Finish" para ibahagi sa iyong mga kaibigan.
        Tingnan ang mga ideyang kuwento sa mga hint.
      courseC_PlayLab_events_challenge1_instruction: |-
        Gumamit ng bagong bloke para awtomatikong mapabalik si Waddles sa simula kung saan natagpuan niya ang Dinosaur at kapag siya ay nakakapuntos.\r
        Laruin ang laro at pagalawin si Waddles gamit ang mga arrow hanggang sa makakuha siya ng sapat na puntos.
      courseC_PlayLab_events_challenge1_2018_instruction: |-
        Use a new block to make
        Waddles automatically move back to the start when he runs into the Dinosaur
        and when he scores a point. \r
        Play the game and move Waddles with the arrows
        until you score enough points.
      courseC_PlayLab_events_challenge1_xy_blocks_instruction: |-
        Narito ang bagong bloke na medyo komplikado. Gamitin ito para mapagalaw si Waddles pabalik sa simula kapag nakatagpo niya ang Dinosaur at kapag siya ay nakakapuntos. Ito ay nagpamanghamon at nagpasaya sa iyong laro!\r
        \r
        Laruin ang laro at galawin si Waddles gamit ang mga arrow hanggang sa makakapuntos ka ng sapat na puntos.
      courseC_artist_loop1_instruction: Tayo ay magdagdag ng pizza!
      courseC_artist_loop1_2018_instruction: Tayo ay magdagdag ng pizza!
      courseC_artist_loops1_instruction: "*\"Zombie. Gumuhit!\"*\\r\n\\r\nAng zombie
        ay gustong magguhit ng linya mula sa kung saan siya hanggang sa halamanan
        ng mga mirasol. Maaari mo ba siyang matulungan? \\r\n*(Ang garden ay 250 pixels
        ang layo)*  "
      courseC_artist_loops1a_instruction: 'Dalhin ang artista sa gitna ng panglarong
        bahagi, pagkatapos ay iguhit ang ibon gamit ang sticker. '
      courseC_artist_loops1a_2018_instruction: "Get the artist to the center of the\nplay
        area, then draw a bird using a sticker. "
      courseC_artist_loops2_instruction: Ngayon na alam na ng zombie ang daan, tulungan
        siyang maghukay ng mga butas sa landas para makatanim pa ng mas maraming mga
        bulaklak!
      courseC_artist_loops2a_instruction: Ngayon, gumamit ng loop para paikutin ang
        iyong ibon sa paligid nang 12 beses gamit ang 30 degree na pagliko.
      courseC_artist_loops2a_2018_instruction: |-
        Now, use a loop to spin your bird
        around 12 times with a 30 degree turn.
      courseC_artist_loops3_instruction: Mahusay! Ngayon na ang mga bulaklak ay umusbong
        na, tulungan ang zombie na maglagay ng kaibigan sa bawat 50 pixel para magbantay
        sa kanila hanggang sa silay ay lumaki.
      courseC_artist_loops3a_instruction: Ngayon ay magdagdag ng paniki!
      courseC_artist_loops3a_2018_instruction: Ngayon ay magdagdag ng paniki!
      courseC_artist_loops4_instruction: Ang zombie ay nakakita ng bakanteng bukid!
        Maaari mo ba siyang matulungang magdala ng buhat sa pamamagitan ng pag-stamp
        ng mga sticker ng hayop sa bawat 100 pixels sa paligid ng hangganan?
      courseC_artist_loops4a_instruction: Subukang tumalon pasulong ng 75 pixels.
      courseC_artist_loops4a_2018_instruction: Subukang tumalon pasulong ng 75 pixels.
      courseC_artist_loops5_instruction: |
        Magaling! Ngayon ay oras na para gumawa ng bagod sa loob para panatilihin ang mga hayop sa labas.  \r
        \r
      courseC_artist_loops5a_instruction: Subukan ang mga bagong sticker!
      courseC_artist_loops5a_2018_instruction: Subukan ang mga bagong sticker!
      courseC_artist_loops5b_instruction: Subukang magdagdag ng mga linya!
      courseC_artist_loops5b_2018_instruction: Subukang magdagdag ng mga linya!
      courseC_artist_loops6_instruction: |
        Ano dapat ang ilagay ng zombie sa loob ng halamanan?  \r
        \r
        \r
      courseC_artist_loops6a_instruction: Magdagdag ng isa pang sticker!
      courseC_artist_loops6a_2018_instruction: Magdagdag ng isa pang sticker!
      courseC_artist_loops7a_instruction: Maglaro sa mga loop at mga anggulo.
      courseC_artist_loops7a_2018_instruction: Maglaro sa mga loop at mga anggulo.
      courseC_artist_loops8a_instruction: Ngayon ay subukan ang isang bagay nang ikaw
        lang!
      courseC_artist_loops8a_2018_instruction: Ngayon ay subukan ang isang bagay nang
        ikaw lang!
      courseC_artist_loopsPre1a_instruction: Oras na para iikot ang linya sa paligid!
      courseC_artist_loopsPre1a_2018_instruction: Oras na para iikot ang linya sa
        paligid!
      courseC_artist_loopsPrePre1a_instruction: 'Dalhin ang artista sa gitna nang
        panglarong bahagi, pagkatapos ay gumuhit ng linya. '
      courseC_artist_loopsPrePre1a_2018_instruction: "Get the artist to the center\nof
        the play area, then draw a line. "
      courseC_artist_loopsTemplate_instruction: Mahusay! Ngayon na ang mga bulaklak
        ay umusbong na, tulungan ang zombie na maglagay ng kaibigan sa bawat 50 pixel
        para magbantay sa kanila hanggang sa silay ay lumaki.
      courseC_artist_loopsTemplateA_instruction: 'Dalhin ang artista sa gitna ng panglarong
        bahagi, pagkatapos ay gumuhit ng isang ibon gamit ang sticker. '
      courseC_artist_loopsTemplateA_2018_instruction: "Get the artist to the center\nof
        the play area, then draw a bird using a sticker. "
      courseC_artist_prog1_instruction: Paglaruan ang mga bloke sa toolbox para makita
        kung ano ang nagagawa nila!
      courseC_artist_prog1_2018_instruction: Paglaruan ang mga bloke sa loob ng toolbox
        para makita kung ano ang nagagawa nila!
      courseC_artist_prog2_instruction: Mag-drag ng mga bloke papunta sa screen para
        maguhitan ng artista ng mga abong linya sa larawan. (Bawat linya ay 100 pixels
        ang haba)
      courseC_artist_prog2_2018_instruction: Mag-drag ng mga bloke sa screen para
        maguhitan ng artista ng mga abong linya sa larawan. (Bawat linya ay 100 pixels
        ang haba)
      courseC_artist_prog3_instruction: Bawat gilid sa pangloob na parisukat ay 100
        pixels at lahat ng mga anggulo ay 90 degrees.
      courseC_artist_prog3_2018_instruction: Bawat gilid sa pangloob na parisukat
        ay 100 pixels at lahat ng mga anggulo ay 90 degrees.
      courseC_artist_prog4_instruction: Tapusin ang rocket ni Starla para mahabol
        na nya ang kanyang alaga.
      courseC_artist_prog4_2018_instruction: Tapusin ang rocket ni Starla para mahabol
        na nya ang kanyang alaga.
      courseC_artist_prog5_instruction: '"Ang bahay na ito ay nangangailangan ng isang
        bubong! Iguhit ang tatsulok. Hint: lahat ng tatlong panig ay parehong haba".'
      courseC_artist_prog5_2018_instruction: |-
        Tapusin ang tag na ito sa pamamagitan ng pagguhit ng parihaba sa paligid ng labas.\r
        (Ang mahabang gilid ay 200 pixels ang bawat isa at ang mga maiikling gilid ay 100 pixels)
      courseC_artist_prog6_instruction: Iguhit ang dyamanteng ito na may gilid na
        200 pixels.
      courseC_artist_prog6_2018_instruction: Iguhit ang dyamanteng ito na may gilid
        na 200 pixels.
      courseC_artist_prog7_instruction: "**Hamon:** Ang tag na ito ay isang espesyal!
        Maaari mo bang matukoy kung paano iguhit ang balangkas?"
      courseC_artist_prog7_2018_instruction: "**Hamon:** Ang tag na ito ay isang espesyal!
        Maaari mo bang matukoy kung paano iguhit ang balangkas?"
      courseC_artist_prog8_instruction: |-
        Isa pang tag. Ito ay isang tatsulok para sa Pi.\r
        (Bawat gilid ay 150 pixels)
      courseC_artist_prog8_2018_instruction: |-
        Isa pang tag. Ito ay isang tatsulok para sa Pi.\r
        (Bawat gilid ay 150 pixels)
      courseC_artist_prog_challenge1-doghouse_instruction: Tayo ay gagawa ng bahat
        ng aso para kay Jorge!
      courseC_artist_prog_challenge1_instruction: 'Gumuhit ng mga silid para sa bawat
        isa sa mga hayop.

'
      courseC_artist_prog_challenge1_2018_instruction: 'Magguhit ng mga silid para
        sa bawat isa sa mga hayop. '
      courseC_artist_prog_challenge2_instruction: "*Tulungan akong magpinta ng dilaw
        na mga linya sa kalsadang ito!*"
      courseC_artist_prog_challenge2a_instruction: '*"Tulungan akong magpinta ng mga
        dilaw na linya sa kalsadang ito!"*'
      courseC_artist_prog_challenge2a_2018_instruction: '*"Tulungan akong magpinta
        ng mga dilaw na linya sa kalsadang ito!"*'
      courseC_collector_loops_challenge2_instruction: Kumuha ng hindi bababa sa **5**
        mga piraso ng kayamanan!
      courseC_collector_loops_challenge2_2018_instruction: Kumuha ng hindi bababa
        sa **5** mga piraso ng kayamanan!
      courseC_collector_prog1_instruction: Maglaro sa paligid gamit ang mga bloke
        para makita kung ikaw ay makakatulong kay Laurel na magkolekta ng ilang mga
        kayamanan.
      courseC_collector_prog1_2018_instruction: |-
        Play around with the blocks to see
        if you can help Laurel collect some treasure.
      courseC_collector_prog2_instruction: Papuntahin si Laurel sa kayamanan, pagkatapos
        ay gamitin ang `collect` para pulutin ang mga ito.
      courseC_collector_prog2_2018_instruction: |-
        Move Laurel to the treasure, then
        use `collect` to pick it up.
      courseC_collector_prog3_instruction: Mag-order na mga blokeng ito para makolekta
        ang mga yaman at malutas ang palaisipan.
      courseC_collector_prog3_2018_instruction: |-
        Order these blocks to collect the
        treasure and solve the puzzle.
      courseC_collector_prog4_instruction: Ilagay ang mga blokeng ito para makolekta
        ang lahat ng mga yaman at malutas ang palaisipan.
      courseC_collector_prog4_2018_instruction: Ilagay ang mga blokeng ito para makolekta
        ang lahat ng mga yaman at malutas ang palaisipan.
      courseC_collector_prog5_instruction: Ang mga blokeng ito ay nasa maling pagkakasunod-sunod.
        Maaari mo bang maayos ang mga ito?
      courseC_collector_prog5_2018_instruction: Ang mga blokeng ito ay nasa maling
        pagkakasunod-sunod. Maaari mo bang maayos ang mga ito?
      courseC_collector_prog6_instruction: Baguhin ang pagkaayos sa mga blokeng para
        makolekta ang lahat ng mga kayamanan.
      courseC_collector_prog6_2018_instruction: |-
        Reorder the blocks to collect all
        of the treasure.
      courseC_collector_prog7_instruction: Gamitin ang mga bloke mula sa toolbox para
        kolektahin ang lahat ng mga kayamanan.
      courseC_collector_prog7_2018_instruction: Gamitin ang mga bloke mula sa toolbox
        para kolektahin ang lahat ng mga kayamanan.
      courseC_collector_prog8_instruction: '*"Panatilihin ang magandang trabaho! Tulungan
        akong kolektahin ang lahat ng mga kayamanan."*'
      courseC_collector_prog8_2018_instruction: |-
        *"Keep up the good work! Help me
        collect all of the treasure."*
      courseC_collector_prog9_instruction: '*"Ating kunin ang lahat ng mga kayamanan!"*'
      courseC_collector_prog9_2018_instruction: '*"Ating kunin ang lahat ng mga kayamanan!"*'
      courseC_collector_progA_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng mga kayamanan.
      courseC_collector_progB_instruction: Mangolekta ng maraming mga barya hangga't
        maaari para matapos ang yugto!
      courseC_collector_prog_challenge1_instruction: Tingnang mabuti! Maaari mo bang
        makolekta ang lahat ng **10** mga piraso ng kayamanan?
      courseC_collector_prog_challenge1_2018_instruction: |-
        Look carefully! Can you
        collect all **10** pieces of treasure?
      courseC_collector_prog_challenge2_instruction: Kolektahin ang hindi bababa ng
        **10** na mga piraso ng kayamanan para matapos ang hamon na ito!
      courseC_collector_prog_challenge2_2018_instruction: |-
        Collect at least **10**
        pieces of treasure to finish this challenge!
      courseC_flappy_embed_events_instruction: Narito ang isang halimbawang ng laro
        na ililikha mo nang ikaw lang! Maglaro ng isa o dalawang beses para makakuha
        ng ideya kung ano ang gagawin mo.
      courseC_flappy_events1_instruction: Ilakip ang `flap normal amount` na bloke
        sa `when click` event, pagkatapos ay pindutin ang "Run". I-click o i-tap ang
        panglaro na lugar para mapagalaw si Flappy papunta sa target.
      courseC_flappy_events10_instruction: 'Maglikha ng iyong sarilling Flappy na
        laro! '
      courseC_flappy_events10_2018_instruction: 'Maglikha ng iyong sarilling Flappy
        na laro! '
      courseC_flappy_events1_2018_instruction: Ilakip ang `flap normal amount` na
        bloke sa `when click` event, pagkatapos ay pindutin ang "Run". I-click o i-tap
        ang panglaro na lugar para mapagalaw si Flappy papunta sa target.
      courseC_flappy_events2_instruction: Subukang magdagdag ng bloke na nagtakda
        sa antas na bilis kapag ang "Run" na button ay napindot. Laruin ang laro at
        mag-flap papunta sa target para magpatuloy.
      courseC_flappy_events2_2018_instruction: |-
        Try adding a block that sets the
        level speed when the "Run" button is pressed.  Play the game and flap to
        the target to continue.
      courseC_flappy_events3_instruction: Ilakip ang `end game` na bloke sa `when
        hit the ground` na pangyayari. Laruin ang laro at i-crash ang ibon sa lupa
        para magpatuloy.
      courseC_flappy_events3_2018_instruction: |-
        Attach the `end game` block to the
        `when hit the ground` event.   Play the game and crash the bird into the ground
        to continue.
      courseC_flappy_events4_instruction: Maglakip ng bloke sa `when hit an obstacle`
        na pangyayari para magtapos ang laro kapag si Flappy ay bumangga sa unang
        hanay ng mga tubo.
      courseC_flappy_events4_2018_instruction: |-
        Attach a block to the `when hit an
        obstacle` event so that the game ends when Flappy crashes into the first set
        of pipes.
      courseC_flappy_events5_instruction: Magdagdag ng bloke sa `when pass an obstacle`
        na pangyayari, pagkatapos ay pindutin ang "Run" para makakuha ng puntos sa
        pamamagitan ng pagpalipad ni Flappy sa taas ng unang hanay ng mga tubo.
      courseC_flappy_events5_2018_instruction: |-
        Add a block to the `when pass an
        obstacle` event, then press "Run" to score a point by flying Flappy through
        the first set of pipes.
      courseC_flappy_events6_instruction: Tingnan kung makakapuntos ka pa rin pagkatapos
        gawin si Flappy na mag-flag nang maliit o malaking halaga sa bawat beses na
        mag-click ka.
      courseC_flappy_events6_2018_instruction: |-
        See if you can still score a point
        after making Flappy flap either a smaller or larger amount each time you click.
      courseC_flappy_events7_instruction: Kasunod nito, subukang baguhin ang eksena
        sa pamamagitan ng paglakip ng bloke sa `when run` na pangyayari.
      courseC_flappy_events7_2018_instruction: Kasunod nito, subukang baguhin ang
        eksena sa pamamagitan ng paglakip ng bloke sa `when run` na pangyayari.
      courseC_flappy_events8_instruction: Subukang magtakda ng **random** na eksena
        kapag nangyari ang ibang mga pangyayari... bilang halimbawa, kapag nalampasan
        ang isang balakid.
      courseC_flappy_events8_2018_instruction: |-
        Try setting a **random** scene when
        other events happen...for example, when passing an obstacle.
      courseC_flappy_events9_instruction: Para haluin ang mga bagay, sa halip na tapusin
        ang laro kapag si Flappy ay nakabangga ng isang balakid, subukang itakda ang
        score pabalik sa 0.
      courseC_flappy_events9_2018_instruction: |-
        To mix things up, instead of ending
        the game when Flappy hits an obstacle, try setting the score back to 0.
      courseC_harvester_loops1_instruction: Gamitin ang mga loop para pulutin ang
        lahat ng mga kalabasa.
      courseC_harvester_loops10_instruction: Kolektahin ang lahat ng mga mais at lahat
        ng mga kalabasa.
      courseC_harvester_loops10_2018_instruction: |-
        Collect all of the corn and all
        of the pumpkins.
      courseC_harvester_loops11_instruction: Kolektahin ang lahat ng mga mais at lahat
        ng mga kalabasa.
      courseC_harvester_loops11_2018_instruction: |-
        Collect all of the corn and all
        of the pumpkins.
      courseC_harvester_loops1_2018_instruction: Gamitin ang mga loop para pulutin
        ang lahat ng mga kalabasa.
      courseC_harvester_loops2_instruction: Maaari mo bang haluin ang dalawang iba't
        ibang mga loop para makapunta sa mga kalabasa, pagkatapos ay kolektahin ang
        lahat ng mga ito?
      courseC_harvester_loops2_2018_instruction: Maaari mo bang haluin ang dalawang
        iba't ibang mga loop para makapunta sa mga kalabasa, pagkatapos ay kolektahin
        ang lahat ng mga ito?
      courseC_harvester_loops3_instruction: Kolektahin ang lahat ng mga kalabasa.
      courseC_harvester_loops3_2018_instruction: Kolektahin ang lahat ng mga kalabasa.
      courseC_harvester_loops4_instruction: Kolektahin ang lahat ng mga mais at ang
        lahat ng mga kalabasa.
      courseC_harvester_loops4_2018_instruction: |-
        Collect all of the corn and all
        of the pumpkins.
      courseC_harvester_loops5_instruction: Kolektahin ang lahat ng mais at ang lahat
        ng mga kalabasa.
      courseC_harvester_loops5_2018_instruction: |-
        Collect all of the corn and all
        of the pumpkins.
      courseC_harvester_loops6_instruction: Kolektahin ang lahat ng mga mais at ang
        lahat ng mga kalabasa.
      courseC_harvester_loops6_2018_instruction: |-
        Collect all of the corn and all
        of the pumpkins.
      courseC_harvester_loops7_instruction: Kolektahin ang lahat ng mga mais at ang
        lahat ng mga kalabasa.
      courseC_harvester_loops7_2018_instruction: |-
        Collect all of the corn and all
        of the pumpkins.
      courseC_harvester_loops8_instruction: "**Hamon:** Kolektahin ang lahat ng mga
        mais at ang lahat ng mga kalabasa."
      courseC_harvester_loops8_2018_instruction: |-
        **Challenge:** Collect all of the
        corn and all of the pumpkins.
      courseC_harvester_loops9_instruction: Kolektahin ang lahat ng mga mais at lahat
        ng mga kalabasa.
      courseC_harvester_loops9_2018_instruction: |-
        Collect all of the corn and all
        of the pumpkins.
      courseC_harvester_loops_challenge1_instruction: Kolektahin ang lahat ng mga
        mais.
      courseC_harvester_loops_challenge1a_instruction: Kolektahin ang lahat ng mga
        mais.
      courseC_harvester_loops_challenge1a_2018_instruction: Kolektahin ang lahat ng
        mga mais.
      courseC_harvester_loops_challenge2_instruction: Kolektahin ang lahat ng mga
        letsugas. Iwasan ang mga kahoy ay mga kabukiran!
      courseC_harvester_loops_challenge2_2018_instruction: Kolektahin ang lahat ng
        mga letsugas. Iwasan ang mga kahoy ay mga kabukiran!
      courseC_harvester_loops_forVid_instruction: Kolektahin ang lahat ng mga mais,
        lahat ng mga letsugas, at lahat ng mga kalabasa.
      courseC_maze_debugging1_instruction: Ayusin ang code para matulungan si Scrat
        na makapunta sa bunga ng oak.
      courseC_maze_debugging10_instruction: I-debug ang antas na ito sa pamamagitan
        ng pag-iba sa ayos at pagbago sa mga bloke para makapunta ako sa baboy!
      courseC_maze_debugging1_2018_instruction: Ayusin ang code para matulunga si
        Scrat na kumuha sa bunga ng oak.
      courseC_maze_debugging2_instruction: Gamitin ang iyong pag-debug na kakayahan
        para mapapunta si Scrat sa bunga ng oak.
      courseC_maze_debugging2_2018_instruction: Gamitin ang iyong pang-debug na mga
        kakayahan para mapapunta si Scrat sa acorn.
      courseC_maze_debugging3_instruction: Tanggalin ang mga bloke para mapapunta
        si Scrat sa bunga ng oak!
      courseC_maze_debugging3_2018_instruction: Tanggalin ang mga bloke para mapapunta
        si Scrat sa bunga ng oak!
      courseC_maze_debugging4_instruction: May isang tao na pinaghalo ang kanilang
        mga direksyon! Maaari ka bang tumulong?
      courseC_maze_debugging4_2018_instruction: May isang tao na pinaghalo ang kanilang
        mga direksyon! Maaari ka bang tumulong?
      courseC_maze_debugging5_instruction: I-debug ang antas na ito sa pamamagitan
        ng pagbago ng ayos at pagpalit ng mga bloke.
      courseC_maze_debugging5_2018_instruction: I-debug ang antas na ito sa pamamagitan
        ng pagbago ng ayos at pagpalit ng mga bloke.
      courseC_maze_debugging6_instruction: Alamin kung ano ang problema at dalhin
        si Scrat sa bunga ng oak.
      courseC_maze_debugging6_2018_instruction: Alamin kung ano ang problema at dalhin
        si Scrat sa bunga ng oak.
      courseC_maze_debugging7_instruction: "**Hamon:** I-debug ang antas na ito sa
        pamamagitan ng pagbago sa ayos, pagdagdag, at pagbura ng mga bloke."
      courseC_maze_debugging7_2018_instruction: "**Hamon:** I-debug ang antas na ito
        sa pamamagitan ng pagbago sa ayos, pagdagdag, at pagbura ng mga bloke."
      courseC_maze_debugging8_instruction: I-debug ang antas na ito para mapapunta
        si Scrat sa bunga ng oak.
      courseC_maze_debugging9_instruction: I-debug ang antas na ito para mapapunta
        si Scrat sa bunga ng oak.
      courseC_maze_debugging9_2018_instruction: I-debug ang antas na ito para mapapunta
        si Scrat sa bunga ng oak.
      courseC_maze_debugging_challenge1_instruction: Tulungan si Scrat na magdesisyon
        kung aling daan ang tatahakin para makuha ang bunga ng oak.
      courseC_maze_debugging_challenge1_2018_instruction: |-
        Help Scrat decide which
        way to turn to get to the acorn.
      courseC_maze_debugging_challenge2_instruction: Tulungan si Scrat na maabot ang
        bunga ng oak gamit ang apat lang na mga `turn` na mga utos.
      courseC_maze_debugging_challenge2_2018_instruction: Tulungan si Scrat na maabot
        ang bunga ng oak gamit ang apat lang na mga `turn` na mga utos.
      courseC_maze_loops1_instruction: Maaari mo bang mapapunta ang ibon sa baboy?
      courseC_maze_loops10_instruction: Maganda ang ginagawa mo! Panatilihin ito!
      courseC_maze_loops11_instruction: Ikaw ay malapit na doon! Sa oras na ito, piliin
        ang anumang landas na gusto mo!
      courseC_maze_loops2_instruction: Maaari mo bang mapapunta ang ibon sa baboy
        sa pamamagitan ng paglikha ng loop na gumagamit nang isang `move forward`
        na bloke lang sa loob ng isang `repeat`?
      courseC_maze_loops3_instruction: Lutasin ang palaisipang ito sa pamamagitan
        ng paglikha ng loop!
      courseC_maze_loops4_instruction: Sa palaisipang ito, ang dalawang `repeat` na
        mga loop ay makakatulong sa iyo para mapapunta ang ibon sa baboy gamin ang
        pinakakaunting bilang ng mga bloke!
      courseC_maze_loops5_instruction: '*"Dalhin ako sa baboy nang mabilisan hangga''t
        maaari!"*'
      courseC_maze_loops6_instruction: Ang mga loop ay gumagana pa rin kahit may mahigit
        sa isang bloke ang nasa loob! Maaari mo bang i-loop ang pagkakasunod-sunod
        na ito?
      courseC_maze_loops7_instruction: Gamitin ang natutunan mo sa ibang mga palaisipan!
      courseC_maze_loops8_instruction: 'Hamon: Ipaghalo ang mga ideya mula sa huling
        iilang mga palaisipan para makumpleto ang antas na ito.'
      courseC_maze_loops9_instruction: Maganda ang ginagawa mo! Panatilihin ito!
      courseC_maze_loops_challenge1_instruction: 'Ngayon ay gusto ni Scrat na subukang
        gumamit ng mga loop para mahanap ang kanyang bunga ng oak! '
      courseC_maze_loops_challenge1a_instruction: 'Ngayon ay gusto ni Scrat na subukang
        gumamit ng mga loop para mahanap ang kanyang bunga ng oak! '
      courseC_maze_loops_challenge1a_2018_instruction: "Now Scrat wants to try using\nloops
        to find his acorn! "
      courseC_maze_loops_challenge2_instruction: Tayo ay maghanap ng mga kayamanan
        - gamit ang mga loop! Tulungan ang kolektor sa pamamagitan ng pag-debug ng
        code na ito. Kunin ang lahat ng mga kayamanan!
      courseC_maze_programming1_instruction: Para sa mga palaisipang ito, i-drag ang
        lahat ng mga blokeng para ipagsama at i-click ang "Run" para tingnan itong
        umalis!
      courseC_maze_programming1_2018_instruction: |-
        For this puzzle, drag all of the
        blocks together and click "Run" to watch it go!
      courseC_maze_programming2_instruction: I-drag ang ekstrang `move forward` na
        bloke palabas sa toolbox para tapusin ang iyong code.
      courseC_maze_programming2_2018_instruction: I-drag ang ekstrang `move forward`
        na bloke palabas sa toolbox para tapusin ang iyong code.
      courseC_maze_programming3_instruction: Mayroong isang ekstrang bloke na magiging
        sanhi na mag-crash ang ibon. Itapon ito sa pamamagitan ng pagkaladkad nito
        pabalik sa toolbox.
      courseC_maze_programming3_2018_instruction: |-
        There is one extra block that
        is going to cause the bird to crash. Throw it away by dragging it back to
        the toolbox.
      courseC_maze_programming4_instruction: Iwasan ang TNT para hindi lilipad ang
        mga balahibo!
      courseC_maze_programming4_2018_instruction: Iwasan ang TNT para hindi lilipad
        ang mga balahibo!
      courseC_maze_programming5_instruction: Iwasan ang mga TNT.
      courseC_maze_programming5_2018_instruction: Iwasan ang mga TNT.
      courseC_maze_programming6_instruction: '"Maging kalmado at tulungan akong hanapin
        ang masamang baboy. Kung hindi baka magalit ako!"'
      courseC_maze_programming6_2018_instruction: |-
        "Keep calm and help me find the
        bad pig. Otherwise I might get angry!"
      courseC_maze_programming7_instruction: "**Hamon:** Ang code na ito ay mayroong
        maraming mga bug. Kailangan mong magtanggal ng iilang mga bloke at magdagdag
        ng iba."
      courseC_maze_programming7_2018_instruction: |-
        **Challenge:** This code has a
        lot of bugs. You'll need to remove some blocks and add others.
      courseC_maze_programming8_instruction: '*"Manatiling kalmado at tulungan akong
        hanapin ang masamang baboy."*'
      courseC_maze_programming8_2018_instruction: |-
        *"Keep calm and help me find
        the bad pig."*
      courseC_maze_programming8_predict1_instruction: '*"Maging kalmado at tulungan
        akong hanapin ang masamang baboy."*'
      courseC_maze_programming8_predict1_2018_instruction: |-
        *"Keep calm and help
        me find the bad pig."*
      courseC_maze_programming9_instruction: '""Ngayon, tulungan akong mag-abang sa
        baboy sa kahit anong paraan na gusto mo!"*'
      courseC_maze_programming9_2018_instruction: |-
        *"Now, help me sneak up on the
        pig any way you want to!"*
      courseC_maze_programming_challenge1_instruction: 'Ang baboy ay nagtatago, at
        ang layunin ay para mahanap ito. '
      courseC_maze_programming_challenge1_2018_instruction: "The pig is hiding, and\nthe
        goal is to find it. "
      courseC_maze_programming_challenge2_instruction: Minsan ay mayroong higit sa
        isang pamamaraan para malutas ang parehang problema. Minsan ay mas mabilis
        ang maglakad pabalik kaysa sa pumunta pasulong!
      courseC_maze_programming_challenge2_2018_instruction: |-
        Sometimes there is more
        than one way to solve the same problem. Sometimes it's faster to go backwards
        than it is to go forwards!
      courseC_playLab_embedded_instruction: |-
        Narito ang isang laro na pede mong paglaruan! Para manalo, gamitin ang iyong mga arrow key para mapagawa ang pingguwino na makatagpo sa pugita.\r
        \r
        Kapag tapos ka na, matutunan mo kung paano gumawa ng larong ito!
      courseC_puppy_loops10_instruction: Maganda ang ginawa mo! Panatilihin ito!
      courseC_puppy_loops11_instruction: Ikaw ay malapit na doon! Sa oras na ito,
        piliin ang kahit anong landas na gusto mo!
      courseC_puppy_loops8_instruction: 'Hamon: Ipaghalo ang mga ideya mula sa huling
        iilang mga palaisipan para makompleto ang antas na ito.'
      courseC_puppy_loops8courseC_maze_loops8_instruction: 'Hamon: Ipaghalo ang mga
        ideya mula sa iilang mga palaisipan para makumpleto ang antas na ito.'
      courseC_puppy_loops9_instruction: Maganda ang ginawa mo! Panatilihin ito!
      courseC_starWars_loops1_instruction: Si BB-8 ay magpupulot ng kahit anong metal
        na mga scrap na nasa landaas na dadaanan niya. Gamitin ang 5 parehang mga
        bloke para mapapulot ni BB-8 ang lahat ng mga scrap na metal sa lugar na iyong
        paglaruan.
      courseC_starWars_loops10_instruction: Maganda ang ginawa mo! Panatilihin ito!
      courseC_starWars_loops10_2018_instruction: Maganda ang ginawa mo! Panatilihin
        ito!
      courseC_starWars_loops10_predict2_instruction: Maganda ang ginawa mo! Panatilihin
        ito!
      courseC_starWars_loops10_predict2_2018_instruction: |-
        You are doing great! Keep
        it up!
      courseC_starWars_loops11_instruction: Ikaw ay malapit na doon! Sa oras na ito,
        piliin ang kahit anong landas na gusto mo!
      courseC_starWars_loops11_2018_instruction: |-
        You are almost there! This time,
        choose any path you like!
      courseC_starWars_loops1_2018_instruction: |-
        BB-8 will pick up any metal scraps
        along the path where he moves. Use 5 of the same block to get BB-8 to pick
        up all of the scrap metal in the play area.
      courseC_starWars_loops1_predict1_instruction: Si BB-8 ay magpupulot ng kahit
        anong metal na mga scrap na nasa daan na madadaanan niya. Gamitin ang 5 bloke
        para mapulot ni BB-8 ang lahat ng mga tira-tirang mga metal sa lugar na iyong
        paglaruan.
      courseC_starWars_loops1_predict1_2018_instruction: Si BB-8 ay magpupulot ng
        kahit anong metal na mga scrap na nasa daan na madadaanan niya. Gamitin ang
        5 bloke para mapulot ni BB-8 ang lahat ng mga tira-tirang mga metal sa lugar
        na iyong paglaruan.
      courseC_starWars_loops2_instruction: Para makuha ang lahat ng tira-tirang mga
        metal, subukang maglikha ng loop na gumagamit lang ng isang bloke sa loob
        ng `repeat` na bloke.
      courseC_starWars_loops2_2018_instruction: |-
        To get all the scrap metal, try
        creating a loop that uses only one block inside of a `repeat` block.
      courseC_starWars_loops4_instruction: Sa palaisipang ito, ang dalawang `repeat`
        na mga loop ay makakatulong sa iyo na mapakuha ni BB-8 ang lahat ng mga tira-tirang
        metal gamit ang pinakakaunting bilang ng mga bloke!
      courseC_starWars_loops4_2018_instruction: |-
        In this puzzle, two `repeat` loops
        will help you get BB-8 to all of the scrap metal with the fewest number of
        blocks!
      courseC_starWars_loops5_instruction: Ipapulot kay BB-8 ang lahat ng mga tira-tirang
        bakal nang mabilis hangga't maaari!
      courseC_starWars_loops5_2018_instruction: |-
        Get BB-8 to pick up all the scrap
        metal as quickly as possible!
      courseC_starWars_loops6_instruction: Ang mga loop ay gumagana pa rin kahit may
        mahigit sa isang bloke ang nasa loob! Maaari mo bang i-loop ang pagkakasunod-sunod
        na ito?
      courseC_starWars_loops6_2018_instruction: |-
        Loops even work with more than one
        block inside!  Can you loop this sequence?
      courseC_starWars_loops7_instruction: Maari mo bang masubukang kunin ang lahat
        ng tira-tirang mga bakal gamit ang isang loop lang? Subukang mag-program sa
        lahat nito ay pagkatapos ay hanapin ang nag-uulit na code para ilagay sa isang
        loop.
      courseC_starWars_loops7_2018_instruction: |-
        Can you try to get all the scrap
        metal using just one loop? Try programming it all out then finding the repeating
        code to put in a loop.
      courseC_starWars_loops9_instruction: Gamitin ang lahat ng natutunan mo para
        mapulot ang lahat ng mga tira-tirang bakal!
      courseC_starWars_loops9_2018_instruction: |-
        Use what you have learned to pick
        up all of the scrap metal!
      courseD_Frozen_nested1_instruction: "Draw a small shape, between **20 and 50**\npixels
        wide.  It can be any shape that you like.  "
      courseD_Frozen_nested2_instruction: Ngayon ay dalhin ang iyong hugis at gumuhit
        ng dalawa o tatlo sa isang hanay!
      courseD_Frozen_nested3_instruction: Ating iikot ang linya ng mga hugis sa paligid!
      courseD_Frozen_nested4_instruction: Panahon na para ipagpatung-patung ang mga
        hugis na ito!
      courseD_Frozen_nested5_instruction: Paglaruan ang mga niyebe!
      courseD_Frozen_nested6_instruction: |-
        Draw a stair-step pattern that uses turns
        between 75 and 105 degrees.
      courseD_Frozen_nested7_instruction: Ngayon, bumaling ng 180 degrees at iguhit
        ulit ang hagdanan na pattern!
      courseD_Frozen_nested8_instruction: |-
        Spin that shape around 5 or 6 times in
        a circle.
      courseD_Frozen_nested9_instruction: |-
        Try playing around with what you've created.
        Draw whatever you like!\r
        - What happens if you use two different angles
        in your stair step pattern?\r
        - What happens if you make your diamond pattern
        longer or shorter?\r
        - What does it look like to draw two snowflakes on top
        of one another?
      courseD_artist_1_2018_instruction: |
        Draw a small square with **30** pixel long
        sides.  \r
      courseD_artist_2_2018_instruction: |
        Now, turn right by **60** degrees, then
        draw a straight line **150** pixels long and jump back to the center of the
        play area.\r
      courseD_artist_3_2018_instruction: "Nest all of the code inside of another\n`repeat`
        loop and run it a total of **6** times. "
      courseD_artist_4_2018_instruction: Add a tiny shape to the end of your line!
      courseD_artist_5_2018_instruction: Paglaruan ang mga niyebe!
      courseD_artist_6_2018_instruction: |
        Try changing your long 150 pixel line into
        6 short lines of **25** pixels, with little turns at the end.\r
      courseD_artist_7_2018_instruction: |-
        Now, turn around 180 degrees and draw the
        stair pattern again!
      courseD_artist_8_2018_instruction: |-
        Spin that shape around 5 or 6 times in
        a circle.
      courseD_artist_9_2018_instruction: |-
        Try playing around with what you've created.
        Draw whatever you like!\r
        - What happens if you use two different angles
        in your stair step pattern?\r
        - What happens if you make your diamond pattern
        longer or shorter?\r
        - What does it look like to draw two snowflakes on top
        of one another?
      courseD_artist_binary1_instruction: Gamitin ang mga bloke sa baba para mapaguhit
        ng artista ang "01010101" sa binary sa unang hanay.
      courseD_artist_binary1_2018_instruction: Gamitin ang mga bloke sa baba para
        mapaguhit ng artista ang "01010101" na binary sa unang hanay.
      courseD_artist_binary2_instruction: Patakbuhin ang code na ito para makita kung
        paano gumagamit ng binary ang artista para iguhit ang pattern na ito.
      courseD_artist_binary2_2018_instruction: |-
        Run this code to see how the artist
        uses binary to draw this pattern.
      courseD_artist_binary3_instruction: Alin sa mga binary na mga string sa baba
        ang maaari mong i-loop nang 8 beses para maiguhit ang larawang ito?
      courseD_artist_binary3_2018_instruction: |-
        Which of the binary strings below
        could you loop 8 times to draw this image?
      courseD_artist_binary4_instruction: Maaari mo bang iguhit ang pattern na ito
        sa pamamagitan ng pagloop ng tatlong binary na digits (mga 0 at mga 1) lang?
      courseD_artist_binary4_2018_instruction: Maguguhit mo ba ang pattern na ito
        sa pamamagitan ng pag-loop ng tatlong binary digits lang (mga 0 at mga 1)?
      courseD_artist_binary5_instruction: |-
        Bawat binary string sa baba ay kinakatawan ng isang hanay ng larawang ito. \r
        \r
        Maaari mo bang baguhin ang pagkakaayos sa mga ito para guguhit ito ng isang smiley na mukha sa halip na ang isang nakasimangot?
      courseD_artist_binary5_2018_instruction: |-
        Each binary string below represents
        one row of this picture. \r
        \r
        Can you rearrange them so it draws a smiley
        face instead of a frown?
      courseD_artist_binary6_instruction: Aling 6 digit na binary string, na kung
        uulitin nang 11 na beses ay makakaguhit sa larawang ito?
      courseD_artist_binary6_2018_instruction: Aling 6 digit na binary string, na
        kung uulitin nang 11 na beses ay makakaguhit sa larawang ito?
      courseD_artist_binary7_instruction: Ano ang pinakamaikling binary na string
        ang maaari mong ulit-ulitin para maiguhit ang larawang ito?
      courseD_artist_binary7_2018_instruction: |-
        What is the shortest binary string
        that you can repeat to draw this image?
      courseD_artist_binary8_instruction: Tapusin ang code para ilikha ang drowing
        na ito.
      courseD_artist_binary8_2018_instruction: Tapusin ang code para ilikha ang drowing
        na ito.
      courseD_artist_binary8_predict1_instruction: Tapusin ang code para malikha ang
        drowing na ito.
      courseD_artist_binary8_predict1_2018_instruction: |-
        Finish the code to create
        this drawing.
      courseD_artist_binaryFP_instruction: |-
        Narito ang mas mataas na resolusyon ng canvas para maguhitan mo - 16 pixels sa 16 pixels!\r
        \r
        Tingnan kung ano ang mangyayari kapag nagsimula ka nang maging malikhain gamit ang mga bits!
      courseD_artist_binaryFP8_instruction: "**Libreng Laro:** Gumuhit nang anumang
        gusto mo sa binary! "
      courseD_artist_binaryFP_2018_instruction: |-
        Here's a higher resolution canvas
        to draw on - 16 pixels by 16 pixels!\r
        \r
        See what happens when we start
        to get creative with the bits!
      courseD_artist_binary_challenge0_instruction: Subukang gamitin ang mga naka-nest
        na mga loop para makumpleto ang drowing na ito.
      courseD_artist_binary_challenge1_instruction: Maaari ka lang gumamin ng bawat
        halaga ng binary (0 o 1) sa isang beses sa palaisipang ito. Subukang gumamit
        ng naka-nest na mga loop para makumpleto ang drowing na ito.
      courseD_artist_binary_challenge1_2018_instruction: Maaari ka lang gumamin ng
        bawat halaga ng binary (0 o 1) sa isang beses sa palaisipang ito. Subukang
        gumamit ng naka-nest na mga loop para makumpleto ang drowing na ito.
      courseD_artist_binary_challenge2_instruction: Masisigasig ka ba para ibalik
        ang logong ito pabalik sa normal?
      courseD_artist_binary_challenge2_2018_instruction: |-
        Are you persistent enough
        to restore this logo back to normal?
      courseD_artist_binary_challenge3_instruction: Masisigasig ka ba para ibalik
        ang logong ito pabalik sa normal?
      courseD_artist_embed_frozen_instruction: Pindutin ang Run para makakita ng niyebeng
        disenyo!
      courseD_artist_embed_frozen2_instruction: Pindutin ang Run para makakita ng
        niyebeng disenyo.
      courseD_artist_functions10_instruction: Sa oras na ito, gamitin ang mga linya
        ng 8 mga hexagon na may mga gilid na 25 pixel.
      courseD_artist_functions2_instruction: 'Sa oras na ito, gamitin ang `draw a
        square` na function para maglikha ng mga baso. \r

'
      courseD_artist_functions3_instruction: Maaari mong gawin ang drowing na ito
        sa pamamagitan ng pagdagdag ng repeat na bloke.
      courseD_artist_functions4_instruction: Ngayon ay maaari ka nang gumuhit ng isang
        bituin, subukang gumuhit ng apat na mga bituin!
      courseD_artist_functions5_instruction: Gumuhit lang nang tatlo sa mga bituing
        iyon para matapos ang palaisipang ito.
      courseD_artist_functions6_instruction: Gawin ang bintanang ito sa pamamagitan
        nang pagguhit ng parisukat, pagkatapos ay pag-ikot ng mga 90 degrees bago
        guguhit ng isa pa, at kung ano pa.
      courseD_artist_functions7_instruction: Subukang lutasin ang palaisipang ito
        sa pamamagitan ng paglikha ng `draw a window` at tawagin ito nang limang beses.
        Mag-ingat sa pintuan!
      courseD_artist_functions8_instruction: 'Hamon: Maglikha ng maraming mga function
        na maisip mo na kailangan mo para maiguhit ang drowing na ito na 50 pixel
        na mga parisukat.'
      courseD_artist_functions9_instruction: Ilikha ang larawang ito gamit ang mga
        bloke lang na binigay.
      courseD_artist_nestedLoops1_instruction: |-
        Magguhit ng tatsulok para simulan ang yugtong ito. \r
        (Bawat gilid ay 100 pixels ang haba at kakailangan mong lumiko nang 120 degrees para sa bawat panglabas na anggulo.)
      courseD_artist_nestedLoops10_instruction: Kunin ang mga parisukat mula sa nakaraan,
        ngunit sa oras na ito gumawa ng 7 lang sa mga ito, at ilagay ang mga ito sa
        isang hanay.
      courseD_artist_nestedLoops10_2018_instruction: |-
        Take the squares from before,
        but this time only make 7 of them, and lay them out in a row.
      courseD_artist_nestedLoops1_2018_instruction: |-
        Draw a triangle to kickstart
        this stage.  \r
        (Each side is 100 pixels long and you'll need to turn 120
        degrees for each exterior angle.)
      courseD_artist_nestedLoops1a_instruction: 'Ngayon ay i-loop ang tatsulok nang
        6 na beses. '
      courseD_artist_nestedLoops1a_2018_instruction: 'Now loop the triangle 6 times.

'
      courseD_artist_nestedLoops2_instruction: Sa oras na ito, kumpletohin ang palaisipan
        gamit ang pinakakaunting bilang ng mga bloke na posible.
      courseD_artist_nestedLoops2_2018_instruction: |-
        This time, complete the puzzle
        with the fewest number of blocks possible.
      courseD_artist_nestedLoops3_instruction: |-
        Gamitin ang iyong mga bagong kakayahan para madaling iguhit ang huling hanay ng mga bintana sa gusaling ito.\r
        \r
        Ang mga bintana ay 20 pixel na mga parisukat, bawat isa ay 20 pixel ang pagitan.
      courseD_artist_nestedLoops3_2018_instruction: |-
        Use your new skills to quickly
        draw the last row of windows for this building.\r
        \r
        The windows are 20
        pixel squares, each 20 pixels apart.
      courseD_artist_nestedLoops4_instruction: Mahusay! Gawin ang parehing bagay sa
        mga bilog na ito.
      courseD_artist_nestedLoops4_2018_instruction: |-
        Great!  Do the same thing with
        these circles.
      courseD_artist_nestedLoops5_instruction: Ano ang mangyayari kung ikaw ay iikot
        din ng 90 degrees pagitan ng mga bilog?
      courseD_artist_nestedLoops5_2018_instruction: |-
        What happens if you also turn
        90 degrees between circles?
      courseD_artist_nestedLoops6_instruction: Baguhin ang mga bloke sa loob ng iyong
        umiiral na code para gawin ang larawang ito.
      courseD_artist_nestedLoops7_instruction: Gamitin ang natutunan mo para magawa
        ang drowing na ito.
      courseD_artist_nestedLoops7_2018_instruction: |-
        Use what you've learned to
        make this drawing.
      courseD_artist_nestedLoops8_instruction: Gamit ang natutunan mo sa huling iilang
        mga palaisipan, buoin ang larawang ito mula sa simula.
      courseD_artist_nestedLoops8_2018_instruction: |-
        Using what you have learned
        in the last couple of puzzles, build this image from the beginning.
      courseD_artist_nestedLoops9_instruction: "**Hamon:** Maaari mo bang malaman
        kung paano gawin ang larawan gaya nito?"
      courseD_artist_nestedLoops9_2018_instruction: "**Hamon:** Maaari mo bang malaman
        kung paano gawin ang larawan gaya nito?"
      courseD_artist_nestedLoops9_predict1_instruction: "**Hamon:** Maaari mo bang
        malaman kung paano gawin ang larawan gaya nito?"
      courseD_artist_nestedLoops9_predict1_2018_instruction: |-
        **Challenge:** Can
        you figure out how to make a picture like this?
      courseD_artist_nestedLoopsFP_instruction: Ngayon ay turno mo na. Dalhin ang
        iyong mga kakayahan na natutunan at gumawa ng isang bagay na mahal mo!
      courseD_artist_nestedLoopsFP_2018_instruction: |-
        Now it's your turn.  Take
        the skills you have learned and make something that you love!
      courseD_artist_nestedLoopsPre1_instruction: Maglikha ng tatsulok para simulang
        ang yugtong ito.
      courseD_artist_nestedLoops_challenge1_instruction: Maaari mo bang malaman kung
        paano gumawa ng larawan gaya nito?
      courseD_artist_nestedLoops_challenge1_2018_instruction: |-
        Can you figure out
        how to make a picture like this?
      courseD_artist_nestedLoops_challenge2_instruction: Ayusin ang code para magawa
        ang larawang ito!
      courseD_artist_nestedLoops_challenge2_2018_instruction: |-
        Fix the code to make
        this picture!
      courseD_artist_project1_instruction: 'Gumuhit ng maliit na mga hugis, sa pagitan
        ng **20 at 50** na pixel na haba. Maaari itong kahit anumang hugis na gusto
        mo.  '
      courseD_artist_project1_2018_instruction: 'Gumuhit ng maliit na mga hugis, sa
        pagitan ng **20 at 50** na pixel na haba. Maaari itong kahit anumang hugis
        na gusto mo.  '
      courseD_artist_project1a_instruction: Gumuhit ng baitang ng hagdanan na pattern
        na gumagamit ng mga pag-ikot sa pagitan ng 75 at 105 na degrees.
      courseD_artist_project1a_2018_instruction: Gumuhit ng baitang ng hagdanan na
        pattern na gumagamit ng mga pag-ikot sa pagitan ng 75 at 105 na degrees.
      courseD_artist_project2_instruction: Ngayon ay dalhin ang iyong hugis at gumuhit
        ng dalawa o tatlo sa isang hanay!
      courseD_artist_project2_2018_instruction: Ngayon ay dalhin ang iyong hugis at
        gumuhit ng dalawa o tatlo sa isang hanay!
      courseD_artist_project2a_instruction: Ngayon, bumaling ng 180 degrees at iguhit
        ulit ang hagdanan na pattern!
      courseD_artist_project2a_2018_instruction: Ngayon, bumaling ng 180 degrees at
        iguhit ulit ang hagdanan na pattern!
      courseD_artist_project3_instruction: Ating iikot ang linya ng mga hugis sa paligid!
      courseD_artist_project3_2018_instruction: Ating iikot ang linya ng mga hugis
        sa paligid!
      courseD_artist_project3a_instruction: Iikot ang hugis na iyan sa paligid nang
        5 o 6 na beses sa isang bilog.
      courseD_artist_project3a_2018_instruction: Iikot ang hugis na iyan sa paligid
        nang 5 o 6 na beses sa isang bilog.
      courseD_artist_project4_instruction: Panahon na para ipagpatung-patung ang mga
        hugis na ito!
      courseD_artist_project4_2018_instruction: Panahon na para ipagpatung-patung
        ang mga hugis na ito!
      courseD_artist_project4a_instruction: |-
        Subukang paglaruan ang kung anong nalikha mo. Iguhit ang anumang gusto mo!\r
        - Ano ang mangyayari kapag gagamit ka nang dalawang iba't ibang anggulo sa iyong baitang ng hagdanan na pattern?\r
        - Ano ang mangyayari kapag gagawin mo ang dyamante na pattern na mas mataas o mas maikli?\r
        - Ano ang hitsura nito para maiguhit ang dalawang niyebe sa taas nang bawat isa?
      courseD_artist_project4a_2018_instruction: |-
        Subukang paglaruan ang kung anong nalikha mo. Iguhit ang anumang gusto mo!\r
        - Ano ang mangyayari kapag gagamit ka nang dalawang iba't ibang anggulo sa iyong baitang ng hagdanan na pattern?\r
        - Ano ang mangyayari kapag gagawin mo ang dyamante na pattern na mas mataas o mas maikli?\r
        - Ano ang hitsura nito para maiguhit ang dalawang niyebe sa taas nang bawat isa?
      courseD_artist_project5_instruction: Paglaruan ang mga niyebe!
      courseD_artist_project5_2018_instruction: Paglaruan ang mga niyebe!
      courseD_artist_project_embedded_instruction: Narito ang gagawin mo mamaya!
      courseD_artist_ramp11_instruction: Ngayon ay gumawa ng isang parisukat gamit
        ang Artist!
      courseD_artist_ramp12_instruction: Gamitin ang natutunan mo para iguhit ang
        tatsulok na ito sa loob ng isang parisukat.
      courseD_bee_conditionals1_instruction: Suriin kung makita mo kung may bulaklak
        ba sa ilalim ng ulap. Kung mayroong bulaklak, kumuha ng nektar.
      courseD_bee_conditionals10_instruction: Kolektahin ang lahat ng nektar at gawin
        ang lahat ng mga pulot.
      courseD_bee_conditionals10_2018_instruction: Kolektahin ang lahat ng nektar
        at gawin ang lahat ng mga pulot.
      courseD_bee_conditionals1_predict1_instruction: Suriin kung makita mo kung mayroong
        bulaklak sa ilalim ng ulap. Kung mayroong bulaklak, kumuha ng nektar.
      courseD_bee_conditionals1_predict1_2018_instruction: Suriin para makita kung
        mayroon bang bulaklak sa ilalim ng mga ulap. Kung mayroong bulaklak, kumuha
        ng nektar.
      courseD_bee_conditionals2_instruction: 'Tingnan ang ilalim ng bawat ulap para
        makita kung ito ay nagtatago ng bulaklak bago ka kumuha ng nektar.  '
      courseD_bee_conditionals2_2018_instruction: 'Tingnan ang ilalim ng bawat ulap
        para makita kung ito ay nagtatago ng bulaklak bago ka kumuha ng nektar.  '
      courseD_bee_conditionals2_test_instruction: 'Tingnan ang ilalim ng bawat ulap
        para makita kung ito ay nagtatago ng bulaklak bago ka kumuha ng nektar.  '
      courseD_bee_conditionals3_instruction: |-
        Tulungan ang bubuyog na ikolekta ang lahat ng nektar.
        \r
        \r
        Maaari ka lang magkolekta ng nektar mula sa mga bulaklak, pero maaari kang magsuri sa kahit anong lugar para makita kung mayroon bang bulaklak.
      courseD_bee_conditionals3_2018_instruction: |-
        Help the bee collect all of the
        nectar. \r
        \r
        You can only collect nectar from flowers, but you can check
        any space to see if there is a flower.
      courseD_bee_conditionals4_instruction: Kunin ang lahat ng nektar gamit ang iilang
        mga bloke na posible.
      courseD_bee_conditionals4_2018_instruction: |-
        Get all of the nectar using as
        few blocks as possible.
      courseD_bee_conditionals5_instruction: Kolektahin ang lahat ng mga nektar gamit
        ang pinakakaunting mga bloke na possible
      courseD_bee_conditionals5_2018_instruction: |-
        Collect all of the nectar using
        as few blocks as possible
      courseD_bee_conditionals6_instruction: Ang iilan sa mga ulap na ito ay maaaring
        magkaroon ng mga pulot-pukyutan sa ilalim ng mga ito. Siguradohing suriin
        kung ang pulot-pukyutan ay nagtatago sa likod ng mga ulap!
      courseD_bee_conditionals6_2018_instruction: |-
        Some of these clouds might have
        honeycombs under them.  Be sure to check if a honeycomb is hiding behind each
        cloud!
      courseD_bee_conditionals7_instruction: Gamitin ang `if/else` na bloke para mangolekta
        ng nektar sa mga bulaklak at gumawa ng mga pulot sa pulot-pukyutan.
      courseD_bee_conditionals7_2018_instruction: |-
        Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      courseD_bee_conditionals7_predict2_instruction: Gamitin ang `if/else` na bloke
        para mangolekta ng nektar sa mga bulaklak at gumawa ng mga pulot sa pulot-pukyutan.
      courseD_bee_conditionals7_predict2_2018_instruction: Gamitin ang `if/else` na
        bloke para magkolekta ng nektar sa mga bulaklak at gumawa ng pulot sa pulot-pukyutan.
      courseD_bee_conditionals8_instruction: |-
        Magkolekta ng nektar kung mayroong bulaklak.\r
        Kung hindi, gumawa ng pulot (dahil mayroong pulot-pukyutan).
      courseD_bee_conditionals8_2018_instruction: |-
        Magkolekta ng nektar kung mayroong bulaklak.\r
        Kung hindi, gumawa ng pulot (dahil mayroong pulot-pukyutan).
      courseD_bee_conditionals9_instruction: Kolektahin ang lahat ng mga nektar o
        gawin ang lahat ng mga pulot.
      courseD_bee_conditionals9_2018_instruction: |-
        Collect all of the nectar or make
        all the honey.
      courseD_bee_conditionals_challenge1_instruction: Kolektahin ang lahat ng mga
        nektar at gawing pulot ang lahat.
      courseD_bee_conditionals_challenge1_2018_instruction: |-
        Collect all the nectar
        and make all the honey.
      courseD_bee_conditionals_challenge2_instruction: Kolektahin ang lahat ng nektar
        at gawing pulot ang lahat.
      courseD_bee_conditionals_challenge2_2018_instruction: Kolektahin ang lahat ng
        nektar at gawing pulot ang lahat.
      courseD_bee_conditionals_challenge3_instruction: Kolektahin ang lahat ng nektar
        o gawing pulot ang lahat.
      courseD_bee_debugging1_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng nektar.
      courseD_bee_debugging2_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng nektar.
      courseD_bee_debugging3_instruction: Ayusin ang (mga) problema para kolektahin
        ang lahat ng mga nektar at gawing pulot ang lahat.
      courseD_bee_debugging4_instruction: Ayusin ang (mga) problema para magawang
        pulot ang lahat.
      courseD_bee_debugging5_instruction: 'Hamon: Ang lahat ng mga utos na kakailanganin
        mo ay nandito na...ngayon gamitin ang iyong pang-debug na kakayahan para matukoy
        kung paano lutasin ang palaisipang ito.'
      courseD_bee_debugging6_instruction: 'Hamon: Ayusin ang mga problema para kolektahin
        ang lahat ng nektar at gawing pulot ang lahat.'
      courseD_bee_debugging9_instruction: Tulungan ang bubuyog na ayusin ang code
        para kunin ang lahat ng nektar.
      courseD_bee_debugging_challenge1_instruction: Tingnan kung paano ang mga bubuyog
        kumuha ng nektar. Maaari mo bang gamitin ang parehong uri ng patter para matulungan
        ang bubuyog na gawing pulot ang lahat?
      courseD_bee_debugging_challenge1_2018_instruction: |-
        Watch how the bees gets
        the nectar. Can you use the same kind of pattern to help the bee make all
        of the honey?
      courseD_bee_debugging_challenge1a_instruction: Tingnan kung paano ang bubuyog
        kumuha ng nektar. Gamitin ang parehong pattern para matulungan ang bubuyog
        na gawing pulot ang lahat.
      courseD_bee_debugging_challenge2_instruction: Tingnan kung paano ang mga bubuyog
        kumukuha ng nektar. Maaari mo bang gamitin ang parehong tipo ng pattern para
        matulungan ang bubuyog na gawing pulot ang lahat?
      courseD_bee_nestedLoops1_instruction: Tulungan ang bubuyog na kolektahin ang
        lahat ng nektar.
      courseD_bee_nestedLoops1_2018_instruction: |-
        Help the bee collect all of the
        nectar.
      courseD_bee_nestedLoops1a_instruction: Tulungan ang bubuyog na kolektahin ang
        lahat ng nektar.
      courseD_bee_nestedLoops1a_2018_instruction: |-
        Help the bee collect all of the
        nectar.
      courseD_bee_nestedLoops2_instruction: Sa oras na ito, tulongan ang bubuyog na
        kolektahin ang lahat ng nektar gamit ang kaunting mga bloke lang hangga't
        maaari.
      courseD_bee_nestedLoops2_2018_instruction: |-
        This time, help the bee collect
        all of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops2_predict1_instruction: Sa oras na ito, tulungan ang
        bubuyog na kolektahin ang lahat ng nektar gamit ang kaunting mga bloke lang
        na posible.
      courseD_bee_nestedLoops2_predict1_2018_instruction: |-
        This time, help the bee
        collect all of the nectar using as few blocks as possible.
      courseD_bee_nestedLoops3_instruction: Kolektahin ang lahat ng nektar mula sa
        bawat bulaklak.
      courseD_bee_nestedLoops5_instruction: 'Kolektahin ang lahat ng nektar mula sa
        bawat isa sa mga bulaklak at gumawa ng pulot sa pulot-pukyutan. '
      courseD_bee_nestedLoops6_instruction: Gawin ang lahat ng nektar.
      courseD_bee_nestedLoops6_2018_instruction: Papuntahin ang zombie sa mirasol
        gamit ang mga blokeng magagamit.
      courseD_bee_nestedLoops7_instruction: 'Hamon: Alamin kung paano makuha ang lahat
        ng mga nektar gamit lang ang mga bloke na mayroong tayo.'
      courseD_bee_nestedLoops7_2018_instruction: 'Hamon: Alamin kung paano makuha
        ang nektar gamit lang ang mga bloke na mayroon tayo.'
      courseD_bee_nestedLoops8_instruction: 'Kolektahin ang lahat ng nektar mula sa
        bawat isa sa mga bulaklak at gumawa ng pulot sa pulot-pukyutan. '
      courseD_bee_nestedLoops8_2018_instruction: "Collect all of the nectar from\neach
        flower and make honey at the honeycomb. "
      courseD_bee_nestedLoops9_instruction: Gawin ang lahat ng pulot.
      courseD_bee_nestedLoops9_2018_instruction: Gawin ang lahat ng pulot.
      courseD_bee_nestedLoops9_predict2_instruction: Gawin ang lahat ng pulot.
      courseD_bee_nestedLoops9_predict2_2018_instruction: Gawin ang lahat ng pulot.
      courseD_bee_nested_loops_challenge1_instruction: Tayo ay manghanap ng mga kayamanan
        - gamit ang mga loop! Tulungan ang kolektor na makaabot nang hindi bababa
        sa dalawan tumpok ng yaman gamit lang ang mga bloke na nasa loob ng iyong
        toolbox.
      courseD_bee_nested_loops_challenge2_instruction: Tayo ay maghanap ng mga yaman
        - gamit ang mga loop! Tulungan ang kolektor na maabot ang hindi bababa sa
        dalawang tumpok ng yaman gamit lang ang mga bloke na nasa loob ng iyong toolbox.
      courseD_bounce_embed_endgame_instruction: Gamitin ang kaliwa at kanang mga arrow
        para pagalawin ang pagsagwan. Tingnan kung ilang puntos ang makukuha mo bago
        makapuntos nang makalawa ang iyong kalaban!
      courseD_bounce_embedded_instruction: Magsulat ng mga Instruksyon Dito
      courseD_bounce_events1_instruction: Maglakip ng bloke sa "when left arrow" na
        bloke at pindutin ang "Run" para mapagalaw ang manlalaro papunta sa bandila.
      courseD_bounce_events10_instruction: Ngayon ay mayroon nang layunin sa taas.
        Maglakip ng "score point" at "score opponent point" na mga bloke sa "when
        ball in goal" at "when ball misses paddle" na mga bloke para magawa ang laro.
        Tingnan kung ilang puntos ang makukuha mo bago makapuntos ng makalawa ang
        iyong kalaban.
      courseD_bounce_events10s_instruction: 'Maglakip ng `score point` na bloke sa
        `when ball in goal` na pangyayari at ang `score opponent point` na bloke sa
        `when ball misses hand` na pangyayari para makagawa ng laro. '
      courseD_bounce_events10s_2018_instruction: "Attach the `score point` block\nto
        the `when ball in goal` event and the `score opponent point` block to the\n`when
        ball misses hand` event to make a game. "
      courseD_bounce_events11_instruction: Maaari ka na ngayong maglakip ng mga bloke
        sa "when run" na bloke. Dapat kang maglakip ng bagong "launch new ball" na
        bloke sa higit sa isang lugar. Gayundin, subukang palitan ang mga eksena o
        ang bilis ng mga pampalo at ng bola at tingnan kung ilang puntos ang makukuha
        mo bago makapuntos ng makalawa ang iyong kalaban.
      courseD_bounce_events11s_instruction: 'Maglakip ng `throw new ball` na bloke
        sa lahat ng mga lugar kung saan ang laro ay nangangailangan ng bagong bola. '
      courseD_bounce_events11s_2018_instruction: "Attach the `throw new ball` block\nin
        all of the places where the game needs a new ball. "
      courseD_bounce_events12_instruction: Maglikha ng iyong sariling Bounce na laro.
        Maaari mong palitan ang lahat ng mga biswal at mga patakaran. Kapag tapos
        ka na, i-click ang Finish para hayaan ang iyong mga kaibigan na subukan ang
        laro sa kanilang mga telepono.
      courseD_bounce_events12s_instruction: Gawin ang larong ito na iyong-iyo. Maaari
        mong baguhin ang lahat ng mga biswal at ang mga patakaran. Kapag tapos ka
        na, i-click ang "Finish" para hayaan ang iyong mga kaibigan ng subukan ang
        laro sa kanilang mga telepono.
      courseD_bounce_events12s_2018_instruction: |-
        Make this game your own. You can
        change all the visuals and the rules. When you're done, click "Finish"
        to let friends try your game on their phones.
      courseD_bounce_events1s_instruction: Maglakip ng bloke sa "when left arrow"
        na bloke at pindutin ang "Run" para mapagalaw ang manlalaro papunta sa net.
      courseD_bounce_events1s_2018_instruction: |-
        Attach a block to the "when left
        arrow" block and press "Run" to move the player to the net.
      courseD_bounce_events2_instruction: Maglakip ng bloke sa "when right arrow"
        at "when left arrow" na mga bloke. Pagalawin ang sagwan para maabutan ang
        parehong pangtapos na mga layunin.
      courseD_bounce_events2s_instruction: Ngayon, ilakip ang bloke sa `when right
        event` para ang kamay ay maaaring makakuha sa parehong buslo.
      courseD_bounce_events2s_2018_instruction: |-
        Now, attach a block to the `when
        right event` so that the hand can get to both baskets.
      courseD_bounce_events3_instruction: Ngayon ay subukan ang isang bagay na kapareha
        ng "when up arrow" na bloke. Galawin ang sagwan papunta sa pangtapos na layunin
        na nasa taas.
      courseD_bounce_events3s_instruction: Ngayon ay subukan ang isang bagay na kapareha
        ng "when up arrow" na bloke. Galawin ang sagwan papunta sa pangtapos na layunin
        na nasa taas.
      courseD_bounce_events4_instruction: Sa oras na ito ay kailangan mong magdagdag
        ng apat na mga bloke. Galawin ang sagwan sa lahat ng 4 na mga pangtapos na
        target para makumpleto ang palaisipang ito.
      courseD_bounce_events4s_instruction: Sa oras na ito ay kailangan mong magdagdag
        ng apat na mga bloke. Galawin ang sagwan sa lahat ng 4 na mga pangtapos na
        target para makumpleto ang palaisipang ito.
      courseD_bounce_events5_instruction: Ating ipapadala ang bola palibad sa baba
        patungo sa sagwan. Maglakip ng bloke sa "when ball hits paddle" na bloke para
        masiguro na ang bola ay makakarating sa huling layunin.
      courseD_bounce_events5s_instruction: Maglakip ng bloke sa `when ball hits hand`
        na pangyayari para masiguro na ang bola ay aabot sa buslo.
      courseD_bounce_events5s_2018_instruction: |-
        Attach a block to the `when ball
        hits hand` event to ensure the ball reaches the basket.
      courseD_bounce_events6_instruction: Ngayon na ang huling layunin ay nasa taas.
        Kailangan mong maglakip ng mga bloke sa parehong "when ball hits" na mga bloke
        para malutas ang palaisipang ito.
      courseD_bounce_events6s_instruction: Maglakip ng code para mapatalbog ang bola
        kapag natamaan nito ang pader para malutas mo ang palaisipang ito.
      courseD_bounce_events6s_2018_instruction: |-
        Attach code to make the ball bounce
        when it hits the wall so you can solve this puzzle.
      courseD_bounce_events7_instruction: Maglakip ng mga bloke sa bawat isa sa "when"
        na mga bloke. Patalbugin ang bola hanggang sa maabot nito ang huling layunin.
      courseD_bounce_events7s_instruction: Maglakip ng mga tunog na mga bloke para
        magawa ang pagpasok sa lambat kapag natamaan mo ang basket at paihipan ang
        pito kapag ang bola ay hindi umabot sa iyong kamay. Patalbugin ang bola hanggang
        sa maabot mo ang huling layunin.
      courseD_bounce_events7s_2018_instruction: |-
        Attach sound blocks to make the
        net swish when you hit the basket and have the whistle blow when the ball
        misses your hand. Bounce the ball until it hits the finish target.
      courseD_collector_debugging1_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging1_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging1a_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging1a_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging2_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging2_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging2a_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging2a_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging3_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging3_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging3a_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging3a_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging4_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging4_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging4a_instruction: Ayusin ang (mga) problema para makolekta
        ang lahat ng mga yaman.
      courseD_collector_debugging4a_2018_instruction: |-
        Fix the error(s) to collect
        all of the treasure.
      courseD_collector_debugging5_instruction: Lahat ng mga utos na kailangan mo
        ay nandito na... ngayon ay gamitin ang iyong pang-debug na kakayahan para
        matukoy kung paano lutasin ang palaisipang ito.
      courseD_collector_debugging5_2018_instruction: |-
        All of the commands that you
        need are already here...now use your debugging skills to figure out how to
        solve this puzzle.
      courseD_collector_debugging5a_instruction: Lahat ng mga utos na kailangan mo
        ay nandito na... ngayon ay gamitin ang iyong pang-debug na kakayahan para
        matukoy kung paano lutasin ang palaisipang ito.
      courseD_collector_debugging5a_2018_instruction: |-
        All of the commands that you
        need are already here...now use your debugging skills to figure out how to
        solve this puzzle.
      courseD_collector_debugging6_instruction: 'Hamon: Gamitin ang iyong pang-debug
        na mga kakayahan para ayusin ang mga problema at kolektahin ang lahat ng mga
        kayamanan.'
      courseD_collector_debugging6_2018_instruction: |-
        Challenge: Use your debugging
        skills to fix the errors and collect all of the treasure.
      courseD_collector_debugging6a_instruction: 'Hamon: Gamitin ang code sa loob
        ng pangtrabahong lugar para makakuha ng hindi bababa sa **6** na mga piraso
        ng kayamanan!'
      courseD_collector_debugging6a_2018_instruction: |-
        Challenge: Use the code in
        the work area to get at least **6** pieces of treasure!
      courseD_collector_debugging7_instruction: 'Hamon: Lahat ng mga utos na kakailanganin
        mo ay nandito na... ngayon ay gamitin ang iyong pangdebug na mga kakayahan
        matukoy kung paano lutasin ang palaisipang ito.'
      courseD_collector_debugging_challenge2_instruction: Ikaw ba ay bihasa na sa
        mga naka-nest na mga loop? Gamitin ang natutunan mo para magkolekta ng mga
        yaman!
      courseD_collector_debugging_challenge2_2018_instruction: |-
        Are you an expert
        at nested loops? Use what you have learned so far to collect all the treasure!
      courseD_collector_nested_loops_challenge2_instruction: Tulungan ang kolektor
        na makaabot ng hindi bababa sa dalawang tumpok ng mga yaman gamit lang ang
        mga bloke na nasa iyong toolbox. Ito ay posible na makolekta ang lahat ng
        4.
      courseD_collector_nested_loops_challenge2_2018_instruction: Tulungan ang kolektor
        na makaabot ng hindi bababa sa dalawang tumpok ng mga yaman gamit lang ang
        mga bloke na nasa iyong toolbox. Ito ay posible na makolekta ang lahat ng
        4.
      courseD_collector_nested_loops_challenge2a_instruction: Tulungan si Laurel na
        magkolekta ng hindi bababa sa dalawang tampok ng mga yaman.
      courseD_collector_ramp10_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng mga kayamanan.
      courseD_collector_ramp8_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng kayamanan.
      courseD_collector_ramp9_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng kayamanan.
      courseD_collector_until_challenge1_instruction: Ikaw ba ay bihasa na sa naka-nest
        na mga loop? Gamitin ang natutunan mo para kolektahin ang lahat ng mga yaman!
      courseD_debugging_1_instruction: Ayusin ang (mga) problema para kolektahin ang
        lahat ng nektar.
      courseD_debugging_2_instruction: Ayusin ang (mga) problema para kolektahin ang
        lahat ng nektar.
      courseD_debugging_3_instruction: Ayusin ang (mga) kamalian para makolekta ang
        lahat ng mga nektar at gawin ang lahat ng mga pulot.
      courseD_debugging_4_instruction: Ayusin ang (mga) problema para magawang pulot
        ang lahat.
      courseD_debugging_5_instruction: 'Hamon: Lahat ng mga utos na kakailanganin
        mo ay nandito na... ngayon ay gamitin ang iyong pang-debug na mga kakayahan
        para matukoy kung paano lutasin ang palaisipang ito.'
      courseD_debugging_6_instruction: 'Hamon: Ayusin ang mga problema para kolektahin
        ang lahat ng mga nektar at gawing pulot ang lahat.'
      courseD_farmer_condLoops1_instruction: Gumamit ng mga kondisyonal para masiguro
        na pipili ka lang na mais kapag ito ay nandoon.
      courseD_farmer_condLoops1_2018_instruction: |-
        Use conditionals to make sure
        that you pick corn only when it's there.
      courseD_farmer_condLoops2_instruction: Tulungan ang magsasaka ng magkolekta
        ng parehong mais at letsugas mula sa bukid.
      courseD_farmer_condLoops2_2018_instruction: |-
        Help the harvester collect both
        corn and lettuce from the field.
      courseD_farmer_condLoops3_instruction: '*"Mais, letsugas, AT mga kalabasa! Tulungan
        akong anihin ang lahat ng mga ito."*'
      courseD_farmer_condLoops3_2018_instruction: |-
        *"Corn, lettuce, AND pumpkins!
        Help me harvest them all."*
      courseD_farmer_condLoops4_instruction: Tulungan ang magsasaka na anihin ang
        lahat ng mga letsugas sa bawat kumpol bago lilipat sa susunod na grupo.
      courseD_farmer_condLoops4_2018_instruction: |-
        Help the harvester pick all of
        the lettuce in each cluster before moving on to the next bunch.
      courseD_farmer_condLoops4a_instruction: Tulungan ang magsasaka na mag-ani salahat
        ng mga letsugas sa bawat kumpol bago lilipat sa susunod na grupo.
      courseD_farmer_condLoops5_instruction: Kolektahin ang lahat ng mga mais at letsugas,
        pagkatapos ay kunin ang kalabasa na nasa dulo.
      courseD_farmer_condLoops5_2018_instruction: Kolektahin ang lahat ng mga mais
        at letsugas, pagkatapos ay kunin ang kalabasa na nasa dulo.
      courseD_farmer_condLoops6_instruction: Maaari mo bang malaman kung paano kukuha
        ng kalabasas? Siguraduhing makolekta ang lahat ng mga mais sa daan!
      courseD_farmer_condLoops6_2018_instruction: |-
        Can you figure out how to pick
        the pumpkin?  Make sure to collect all of the corn along the way!
      courseD_farmer_condLoops7_instruction: 'Hamon: Kolektahin ang lahat ng mais
        at letsugas, pagkatapos ay kunin ang kalabasa.'
      courseD_farmer_condLoops7_2018_instruction: |-
        Challenge: Collect all of the
        corn and lettuce, then pick the pumpkin.
      courseD_farmer_condLoops8_instruction: Kolektahin ang lahat ng bunga ng oak
        at letsugas, pagkatapos ay kunin ang kalabasa.
      courseD_farmer_condLoops8_2018_instruction: Kolektahin ang lahat ng bunga ng
        oak at letsugas, pagkatapos ay kunin ang kalabasa.
      courseD_farmer_condLoops9_instruction: Kolektahin ang lahat ng bunga ng oak
        at letsugas, pagkatapos ay kunin ang kalabasa.
      courseD_farmer_condLoops9_2018_instruction: Kolektahin ang lahat ng bunga ng
        oak at letsugas, pagkatapos ay kunin ang kalabasa.
      courseD_farmer_condLoops9_predict1_instruction: Kolektahin ang lahat ng mais
        at letsugas, pagkatapos ay kunin ang kalabasa.
      courseD_farmer_condLoops9_predict1_2018_instruction: |-
        Collect all of the corn
        and lettuce, then pick the pumpkin.
      courseD_farmer_condLoops_challenge1_instruction: Kolektahin ang lahat para makumpleto
        ang antas. Bawat nakatagong pananim ay mayroon lang isang mais o letsugas.
      courseD_farmer_condLoops_challenge1_2018_instruction: |-
        Collect everything to
        complete the level. Each hidden crop has only one corn or lettuce.
      courseD_farmer_condLoops_challenge2_instruction: Kolektahin ang lahat para makumpleto
        ang antas.
      courseD_farmer_condLoops_challenge2_2018_instruction: |-
        Collect everything to
        complete the level.
      courseD_farmer_condLoops_challenge2_clone_instruction: Kolektahin ang lahat
        para makumpleto ang antas.
      courseD_farmer_conditionals1_instruction: Ilipat ang tumbok ng mga lupa at gamitin
        ang `remove` na bloke para tanggalin ito.
      courseD_farmer_conditionals10_instruction: 'Ipatag ang lahat ng mga tumpok na
        ito gamitin ang kaunting mga bloke lang hangga''t maaari. '
      courseD_farmer_conditionals2_instruction: Ilipat ako sa butas at punan ito ng
        anim na mga pala ng lupa, gamit ang `fill` na bloke.
      courseD_farmer_conditionals3_instruction: Gumamit ng kaunting mga bloke na posible
        para malutas ang palaisipang ito.
      courseD_farmer_conditionals4_instruction: Tulungan ang magsasaka na mag-alis
        sa buong tumpok gamit ang `while` na loop.
      courseD_farmer_conditionals5_instruction: 'Tulungan akong tanggalin ang lahat
        ng mga lupang ito.

'
      courseD_farmer_conditionals6_instruction: Gamitin ang `while` na loop para madaling
        punan ang lahat ng mga butas.
      courseD_farmer_conditionals7_instruction: Punan ang mga butas sa dulo ng bawat
        isa sa mga landas na ito.
      courseD_farmer_conditionals8_instruction: 'Hamon: Punan ang lahat ng mga butas
        na ito gamit ang kaunting mga bloke na posible. '
      courseD_farmer_conditionals9_instruction: 'Ipatag ang lahat ng mga tumpok na
        ito gamitin ang kaunting mga bloke lang hangga''t maaari. '
      courseD_farmer_until_challenge2_instruction: Gamitin ang If/Else na mga bloke
        para sundan ang balikong landas. Sa bawat sulok, gamitin ang `remove 1` na
        utos sa isang loop para malinaw ang mga tumpok.
      courseD_farmer_until_challenge2_2018_instruction: Gamitin ang If/Else na mga
        bloke para sundan ang balikong landas. Sa bawat sulok, gamitin ang `remove
        1` na utos sa isang loop para malinaw ang mga tumpok.
      courseD_farmer_while1_instruction: Ilipat ang mga tumbok ng lipa at gamitin
        ang `remove` na bloke para tanggalin ito.
      courseD_farmer_while10_instruction: 'Ipatag ang lahat ng mga tumpok na ito gamit
        ang kaunting mga bloke lang na posible. '
      courseD_farmer_while10_2018_instruction: 'Ipatag ang lahat ng mga tumpok na
        ito gamitin ang kaunting mga bloke lang hangga''t maaari. '
      courseD_farmer_while10_predict2_instruction: 'Ipatag ang lahat ng mga tumpok
        na ito gamitin ang kaunting mga bloke lang hangga''t maaari. '
      courseD_farmer_while10_predict2_2018_instruction: "Flatten all of these piles\nusing
        as few blocks as possible. "
      courseD_farmer_while1_2018_instruction: |-
        Move to the pile of dirt and use the
        `remove` block to remove it.
      courseD_farmer_while2_instruction: Lumipat sa butas at punan ito nang 6 na pala
        ng lupa, gamit ang `fill` na bloke.
      courseD_farmer_while2_2018_instruction: Ilipat ako sa butas at punan ito ng
        anim na mga pala ng lupa, gamit ang `fill` na bloke.
      courseD_farmer_while3_instruction: Gamit nang kaunting mga bloke hangga't maaari
        para malutas ang palaisipang ito.
      courseD_farmer_while3_2018_instruction: Gamit nang kaunting mga bloke hangga't
        maaari para malutas ang palaisipang ito.
      courseD_farmer_while4_instruction: Tulungan ang magsasaka na tanggalin ang buong
        tumpok gamit ang `while` na loop.
      courseD_farmer_while4_2018_instruction: Tulungan ang magsasaka na mag-alis sa
        buong tumpok gamit ang `while` na loop.
      courseD_farmer_while4_predict1_instruction: Tulungan ang magsasaka na mag-alis
        sa buong tumpok gamit ang `while` na loop.
      courseD_farmer_while4_predict1_2018_instruction: |-
        Help the farmer remove this
        entire pile using a `while` loop.
      courseD_farmer_while5_instruction: 'Tulungan akong tanggalin ang lahat ng mga
        lupang ito. '
      courseD_farmer_while5_2018_instruction: 'Tulungan akong tanggalin ang lahat
        ng mga lupang ito. '
      courseD_farmer_while6_instruction: Gamitin ang `while` na loop para madaling
        punan ang lahat ng mga butas.
      courseD_farmer_while6_2018_instruction: Gamitin ang `while` na loop para madaling
        punan ang lahat ng mga butas.
      courseD_farmer_while7_instruction: Punan ang mga butas sa dulo ng bawat isa
        sa mga landas na ito.
      courseD_farmer_while7_2018_instruction: Punan ang mga butas sa dulo ng bawat
        isa sa mga landas na ito.
      courseD_farmer_while8_instruction: 'Hamon: Punan ang lahat ng mga butas na ito
        gamit ang kaunting mga bloke na posible. '
      courseD_farmer_while8_2018_instruction: 'Hamon: Punan ang lahat ng mga butas
        na ito gamit ang kaunting mga bloke na posible. '
      courseD_farmer_while9_instruction: 'Ipatag ang lahat ng mga tumpok na ito gamit
        ang kaunting mga bloke lang na posible. '
      courseD_farmer_while9_2018_instruction: "Flatten all of these piles using as\nfew
        blocks as possible. "
      courseD_farmer_while_challenge1_instruction: Punan ang lahat ng mga butas at
        tanggalin ang lahat ng mga tumpok.
      courseD_farmer_while_challenge1_2018_instruction: |-
        Fill all of the holes and
        remove all of the piles.
      courseD_farmer_while_challenge2_instruction: Punan ang lahat ng mga butas at
        tanggalin ang lahat ng mga tumpok.
      courseD_farmer_while_challenge2_2018_instruction: |-
        Fill all of the holes and
        remove all of the piles.
      courseD_harvester_nested_loops_challenge1-broken_instruction: '"Kailangan ko
        ng iilang tulong sa bukirin! Tulungan akong anihin ang mga mais gamit lang
        ang mga bloke na nasa iyong toolbox."'
      courseD_harvester_nested_loops_challenge1_instruction: '"Kailangan ko ng iilang
        tulong sa bukirin! Tulungan akong anihin ang mga mais gamit lang ang mga bloke
        na nasa iyong toolbox."'
      courseD_harvester_nested_loops_challenge1_2018_instruction: '"Kailangan ko ng
        iilang tulong sa bukirin! Tulungan akong anihin ang mga mais gamit lang ang
        mga bloke na nasa iyong toolbox."'
      courseD_iceage_loops1_instruction: |-
        Help Scrat across the ice to get to the
        acorn!
      courseD_iceage_loops10_instruction: |-
        Help Scrat get all the way over to the
        acorn!
      courseD_iceage_loops11_instruction: Help Scrat get to the acorn!
      courseD_iceage_loops12_instruction: Get to the acorn any way you can!
      courseD_iceage_loops2_instruction: Use a `turn left` block to get to the acorn!
      courseD_iceage_loops3_instruction: |-
        Can you get to the acorn with just one
        `move forward` block?
      courseD_iceage_loops4_instruction: |-
        Add one more block to get Scrat all the
        way to the acorn!
      courseD_iceage_loops6_instruction: Can you add a loop to get to the acorn?
      courseD_iceage_loops7_instruction: 'Scrat really wants that acorn! '
      courseD_iceage_loops8_instruction: 'Can you fix this code? '
      courseD_iceage_loops9_instruction: |-
        The acorn is so far away! Can you use loops
        to help Scrat get there?
      courseD_maze_loops_challenge1_instruction: Maghanap tayo ng mga kayamanan -
        gamit ang mga loop! Tulunga ang kolektor na maabot ang hindi bababa sa dalawang
        tumpok ng yaman gamit ang mga bloke lang na nasa iyong toolbox.
      courseD_maze_nestedLoops3_instruction: Dalhin ang zombie sa mirasol gamit ang
        pinakakaunting bilang ng mga posibleng bloke.
      courseD_maze_nestedLoops3_2018_instruction: Dalhin ang zombie sa mirasol gamit
        ang pinakakaunting bilang ng mga posibleng bloke.
      courseD_maze_nestedLoops4_instruction: 'Dalhin ang zombie sa mirasol gamit ang
        pinakakaunting bloke na posible!  '
      courseD_maze_nestedLoops4_2018_instruction: "Get the zombie to the sunflower\nusing
        the fewest blocks possible!  "
      courseD_maze_nestedLoops5_instruction: Dalhin ang zombie sa mirasol gamit ang
        pinakakaunting bilang ng mga posibleng bloke!
      courseD_maze_nestedLoops5_2018_instruction: Dalhin ang zombie sa mirasol gamit
        ang pinakakaunting bilang ng mga posibleng bloke!
      courseD_maze_nestedLoops6_instruction: Dalhin ang zombie sa mirasol gamit mang
        bloke na mayroon tayo.
      courseD_maze_nestedLoops6_2018_instruction: Papuntahin ang zombie sa mirasol
        gamit ang mga blokeng magagamit.
      courseD_maze_ramp1_instruction: Para sa palaisipang ito, i-snap ang lahat ng
        mga bloke nang sama-sama at i-click ang "Run" para tingnan itong umalis!
      courseD_maze_ramp1_2018_instruction: Para sa palaisipang ito, i-snap ang lahat
        ng mga bloke nang sama-sama at i-click ang "Run" para tingnan itong umalis!
      courseD_maze_ramp2_instruction: Mag-kaladkad ng ekstrang `move forward` na bloke
        palabas sa toolbox, pagkatapos ay ilakip ang lahat ng mga bloke sa `when run`
        para matapos ang iyong code.
      courseD_maze_ramp2_2018_instruction: Mag-kaladkad ng ekstrang `move forward`
        na bloke palabas sa toolbox, pagkatapos ay ilakip ang lahat ng mga bloke sa
        `when run` para matapos ang iyong code.
      courseD_maze_ramp3_instruction: Mayroong isang ekstrang bloke na magiging sanhi
        nang pag-crash ng ibon. Itapon ito sa pamamagitan ng pagkaladkad nito palayo
        sa toolbox.
      courseD_maze_ramp3_2018_instruction: Mayroong isang ekstrang bloke na magiging
        sanhi na mag-crash ang ibon. Itapon ito sa pamamagitan ng pagkaladkad nito
        pabalik sa toolbox.
      courseD_maze_ramp4_instruction: Iwasan ang TNT para hindi lilipad ang mga balahibo!
      courseD_maze_ramp4_2018_instruction: Iwasan ang TNT para hindi lilipad ang mga
        balahibo!
      courseD_maze_ramp5_instruction: Iwasan ang mga TNT.
      courseD_maze_ramp5_2018_instruction: Iwasan ang mga TNT.
      courseD_maze_ramp5a_instruction: Bigyang-pansin ang pagkasunod-sunod at tingnan
        kung matukoy mo kung paano makapunta sa baboy na iyan!
      courseD_maze_ramp5a_2018_instruction: Bigyang-pansin ang pagkasunod-sunod at
        tingnan kung matukoy mo kung paano makapunta sa baboy na iyan!
      courseD_maze_ramp5b_instruction: Mag-navigate sa maze na ito para matulungan
        ang ibon na mahanap ang baboy!
      courseD_maze_ramp5b_2018_instruction: Mag-navigate sa maze na ito para matulungan
        ang ibon na mahanap ang baboy!
      courseD_maze_ramp5c_instruction: Tulungan ang ibon na makapunta sa baboy.
      courseD_maze_ramp5c_2018_instruction: Help the bird get to the pig.
      courseD_maze_ramp5d_instruction: Dalhin ang ibon sa baboy.
      courseD_maze_ramp5d_2018_instruction: Dalhin ang ibon sa baboy.
      courseD_maze_ramp6_instruction: '"Maging kalmado at tulungan akong hanapin ang
        masamang baboy. Kung hindi, baka magalit ako!"'
      courseD_maze_ramp6a_instruction: '"Maging kalmado at tulungan akong hanapin
        ang masamang baboy. Kung hindi, baka magalit ako!"'
      courseD_maze_ramp7_instruction: Dalhin ang ibon sa baboy!
      courseD_maze_until1_instruction: Dalhin ang galit na ibon papunta sa baboy.
      courseD_maze_until10_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until10_2018_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until10_predict2_instruction: Tulungan ang zombie na makapunta
        sa mirasol.
      courseD_maze_until10_predict2_2018_instruction: |-
        Help the zombie get to the
        sunflower.
      courseD_maze_until1_2018_instruction: Dalhin ang galit na ibon papunta sa baboy.
      courseD_maze_until2_instruction: Ngayon, gamitin ang `repeat until` na loop
        para magawa ang parehong bagay nang hindi tinutukoy kong ilang beses gagalaw
        pasulong at bumaling.
      courseD_maze_until3_instruction: Dalhin ang ibon sa baboy.
      courseD_maze_until3_2018_instruction: Dalhin ang ibon sa baboy.
      courseD_maze_until4_instruction: Maaari mo bang mapapunta ang zombie sa mirasol
        gamit lang ang mga bloke na magagamit?
      courseD_maze_until4_2018_instruction: |-
        Can you get the zombie to the sunflower
        using only the blocks that are available?
      courseD_maze_until5_instruction: Gamitin ang `if` na bloke para matulungan ang
        zombie na makapagdesisyon kung kailan babaling, pagkatapos ay dalhin ang zombie
        sa mirasol.
      courseD_maze_until5_2018_instruction: |-
        Use the `if` block to help the zombie
        decide when to turn, then get the zombie to the sunflower.
      courseD_maze_until6_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until6_2018_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until7_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until7_2018_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until8_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until8_2018_instruction: Tulungan ang zombie na makapunta sa mirasol.
      courseD_maze_until9_instruction: "**Hamon:** Iwasan ang mga chomper at tulungan
        ang zombie na makapunta sa mirasol."
      courseD_maze_until9_2018_instruction: |-
        **Challenge:** Avoid the chompers and
        help the zombie get to the sunflower.
      courseD_maze_until_challenge_instruction: Walang pahiwatig, hamon lang. Dalhin
        ang zombie sa mirasol.
      courseD_maze_until_challenge1-delete-this-copy_instruction: Walang pahiwatig,
        hamon lang. Dalhin ang zombie sa mirasol.
      courseD_maze_until_challenge1_instruction: Walang pahiwatig, hamon lang. Dalhin
        ang zombie sa mirasol.
      courseD_maze_until_challenge1_2018_instruction: |-
        No hints, just challenge.
        Get the zombie to the sunflower.
      courseD_maze_until_challenge2_instruction: Walang pahiwatig, hamon lang. Dalhin
        ang zombie sa mirasol.
      courseD_pixelation_instruction: I-encode ang larawan na kahit anong gusto mo
        gamit ang binary. Ang binary na linggwahe ay maaaring irerepresenta gamit
        ang '0' at '1' lang.
      courseD_playLab_cond1_instruction: Dalhin si Pegleg sa mga bandila para malutas
        ang palaisipang ito.
      courseD_playLab_cond1_2018_instruction: |-
        Get Pegleg to the flags to solve this
        puzzle.
      courseD_playLab_cond2_instruction: 'Bigyan si Pegleg ng puntos sa bawat oras
        na makarating siya sa dragon. '
      courseD_playLab_cond2_2018_instruction: "Give Pegleg a point every time he\nmakes
        it to the dragon. "
      courseD_playLab_cond3_instruction: 'Gawin ang dragon na magbago-bago sa pagitan
        ng mga random na mga emosyon sa bawat segundo.  '
      courseD_playLab_cond3_2018_instruction: "Make the dragon change between random\nemotions
        every second.  "
      courseD_playLab_cond3a_instruction: Gawin ito para kapag si Pegleg ay nakaabot
        sa dragon, siya ay makakakuha ng 2 puntos kung ang dragon ay masaya, at kung
        hindi ay 1 puntos lang.
      courseD_playLab_cond3a_2018_instruction: |-
        Make it so when Pegleg gets to the
        dragon, he gets 2 points if the dragon is happy and 1 otherwise.
      courseD_playLab_cond3b_instruction: |-
        1) Pabaguhin ang dragon sa pagitan ng random na mga emosyon sa bawat segundo.  \r
        2) Gawin ito na kapag si Pegleg ay nakaabot sa dragon, makakakuha siya ng 2 puntos kapag masaya ang dragon at 1 kung hindi.
      courseD_playLab_cond4_instruction: Magdagdag ng ilang code para ang ninja (aktor
        3) ay magsisimulang maghabol kay Pegleg kapag nagsimula na ang laro. Wakasan
        ang laro bilang talo kapag nahuli siya ng ninja.
      courseD_playLab_cond4_2018_instruction: Magdagdag ng ilang code para ang ninja
        (aktor 3) ay magsisimulang maghabol kay Pegleg kapag nagsimula na ang laro.
        Wakasan ang laro bilang talo kapag nahuli siya ng ninja.
      courseD_playLab_cond5_instruction: Magdagdag ng `repeat forever` na loop na
        patuloy na nagsusuri kung ang iskor ay higit sa 5, pagkatapos ay magtapos
        sa laro bilang panalo kapag nangyari ito.
      courseD_playLab_cond5_2018_instruction: Magdagdag ng `repeat forever` na loop
        na patuloy na nagsusuri kung ang iskor ay higit sa 5, pagkatapos ay magtapos
        sa laro bilang panalo kapag nangyari ito.
      courseD_playLab_cond6_instruction: "1) Pabagalan ang ninja (aktor 3) bago mo
        siya itakda na hahabol sa pirata. \\r\n2) Kung ang pirata ay mas mataas sa
        225 na pixels pababa, itakda ang ninja na **lalayo** sa pirata. Kung hindi,
        itakda ang ninja na **maghahabol** sa pirata.  "
      courseD_playLab_cond6_2018_instruction: "1)  Slow the ninja (actor 3) down\nbefore
        you set him to chase the pirate.  \\r\n2)  If the pirate is greater\nthan
        225 pixels down, set the ninja to **flee** the pirate.  Otherwise, set\nthe
        ninja to **chase** the pirate.  "
      courseD_playLab_cond6a_instruction: Kung ang pirata (aktor) ay nasa isang ligtas
        na lugar, maghintay ng isang segundo, pagkatapos ay magbawas ng puntos kapag
        siya ay nananatili sa ilalim ng linya ng pugita.
      courseD_playLab_cond6a_2018_instruction: |-
        If the pirate (actor 1) is in the
        safe zone, wait one second, then deduct a point as long as he stays beneath
        the octopus line.
      courseD_playLab_cond6cloneForTest_instruction: Pagsubok
      courseD_playLab_condFP_instruction: Ngayon, bumuo ng iyong sariling laro para
        ipakita sa iyong mga kaibigan!
      courseD_playLab_condFP_2018_instruction: |-
        Now, build your own game to show
        off to your friends!
      courseD_playLab_embedded_instruction: |-
        Pagalawin si Pegleg ang Pirata gamit ang mga arrow key. Puntahan ang dragon para makakuha ng puntos, ngunit iwasan ang ninja! Ang pagtayo sa ibaba ng linya ng mga pugita ang magpapatigil sa ninja sa paghabol sa iyo, ngunit mag-ingat! Kung matagala kang manitili doon, mas marami ring puntos ang mawawala sa iyo.\r
        \r
        Magkuha ng 5 puntos para manalo!
      courseD_scrat_ramp1_instruction: Para sa palaisipang ito, i-snap ang lahat ng
        mga bloke ng sama-sama at i-click ang "Run" para tingnan itong umalis!
      courseD_scrat_ramp1_2018_instruction: Para sa palaisipang ito, i-snap ang lahat
        ng mga bloke nang sama-sama at i-click ang "Run" para tingnan itong umalis!
      courseD_scrat_ramp2_instruction: I-drag ang ekstrang `move forward` na bloke
        palabas sa iyong toolbox, pagkatapos ay ilakip ang lahat ng mga bloke sa `when
        run` para matapos ang iyong code.
      courseD_scrat_ramp2_2018_instruction: Mag-kaladkad ng ekstrang `move forward`
        na bloke palabas sa toolbox, pagkatapos ay ilakip ang lahat ng mga bloke sa
        `when run` para matapos ang iyong code.
      courseD_scrat_ramp3_instruction: Mayroong isang ekstrang bloke na naging sanhi
        sa pag-crash ni Scrat. Itapon ito sa pamamagitan ng pagkaladkad nito pabalik
        sa toolbox.
      courseD_scrat_ramp3_2018_instruction: Mayroong isang ekstrang bloke na naging
        sanhi sa pag-crash ni Scrat. Itapon ito sa pamamagitan ng pagkaladkad nito
        pabalik sa toolbox.
      courseD_scrat_ramp4_instruction: Iwasan ang basag na yelop para panatilihing
        ligtas si Scrat!
      courseD_scrat_ramp4_2018_instruction: |-
        Avoid the cracked ice to keep Scrat
        safe!
      courseD_scrat_ramp5_instruction: Iwasan ang basag na yelo.
      courseD_scrat_ramp5_2018_instruction: Iwasan ang basag na yelo.
      courseD_scrat_ramp6_instruction: Tulungan si Scrat na makakuha ng bunga ng oak
        gamit ang loop!
      courseD_scrat_ramp6_2018_instruction: Tulungan si Scrat na makakuha ng bunga
        ng oak gamit ang loop!
      courseD_scrat_ramp7_instruction: Tulungan si Scrat na makakuha ng bunga ng oak!
      courseD_scrat_ramp7_2018_instruction: Help Scrat get to the acorn!
      courseD_scrat_ramp8_instruction: Gamitin ang natutunan mo para makakuha si Scrat
        ng bunga ng oak!
      courseD_scrat_ramp8_2018_instruction: Gamitin ang natutunan mo para makakuha
        si Scrat ng bunga ng oak!
      courseE_artist_concept1_instruction: 'Muling ilikha ang larawang ito. '
      courseE_artist_concept1_2018_instruction: 'Muling ilikha ang larawang ito. '
      courseE_artist_concept4_instruction: Muling ilikha ang drowing na ito.
      courseE_artist_concept4_2018_instruction: Muling ilikha ang drowing na ito.
      courseE_artist_concept_challenge1_instruction: 'Tulungan ang artista na gumuhit
        ng pambihirang hugis. '
      courseE_artist_concept_challenge1_2018_instruction: 'Tulungan ang artista na
        gumuhit ng pambihirang hugis. '
      courseE_artist_concept_challenge2_instruction: Maglikha ng limang pinwheel na
        mga disenyo gamit ang code sa baba.
      courseE_artist_concept_challenge2_2018_instruction: Maglikha ng limang pinwheel
        na mga disenyo gamit ang code sa baba.
      courseE_artist_embed_functions8_instruction: Tingnan ang antas na ito nang maingat.
        Anong klase ng function ang makikita mo na kinakailangan ng isang programa
        para makalikha ng disenyo gaya nito. Ikaw ay gagawa nito nang ikaw lang mamaya,
        kaya bumalik dito kung kailangan mo nang tulong.
      courseE_artist_functions1_instruction: |-
        Tulungan ang zombie na gumuhit ng mga baso gamit ang mga parisukat na may mga gilid na 100 pixels. \r
        Ang tulay sa pagitan ng mga baso ay 75 pixels ang haba.
      courseE_artist_functions10_instruction: Sa oras na ito, gumamit ng linya ng
        8 mga hexagon na may mga gilid na 25 pixel.
      courseE_artist_functions10_2018_instruction: |-
        This time, use lines of 8 hexagons
        with 25 pixel sides.
      courseE_artist_functions1_2018_instruction: |-
        Tulungan ang zombie na gumuhit ng mga baso gamit ang mga parisukat na may mga gilid na 100 pixels. \r
        Ang tulay sa pagitan ng mga baso ay 75 pixels ang haba.
      courseE_artist_functions2_instruction: 'Sa oras na ito, gamitin ang `draw a
        square`na function para maglikha ng mga baso. '
      courseE_artist_functions2_2018_instruction: 'Sa oras na ito, gamitin ang `draw
        a square`na function para maglikha ng mga baso. '
      courseE_artist_functions3_instruction: Maaari mong gawin ang drowing na ito
        sa pamamagitan ng pagdagdag ng repeat na bloke.
      courseE_artist_functions3_2018_instruction: |-
        You can make this drawing by adding
        a repeat block.
      courseE_artist_functions4_instruction: Ngayon ay maaari ka nang gumuhit ng butuin,
        subukang magguhit nang apat na mga bituin!
      courseE_artist_functions4_2018_instruction: |-
        Now that you can draw a star,
        try drawing four stars!
      courseE_artist_functions5_instruction: Iguhit ang tatlong mga bituin na mga
        iyon lang para matapos ang palaisipang ito.
      courseE_artist_functions5_2018_instruction: |-
        Draw only those three stars to
        finish this puzzle.
      courseE_artist_functions6_instruction: Gawin ang bintanang ito sa pamamagitan
        ng pagguhit ng parisukat, pagkatapos ay pag-ikot ng 90 degrees bago gumuhit
        ng isa pa, at kung anu-ano pa.
      courseE_artist_functions6_2018_instruction: Gawin ang bintanang ito sa pamamagitan
        ng pagguhit ng parisukat, pagkatapos ay pag-ikot ng 90 degrees bago gumuhit
        ng isa pa, at kung anu-ano pa.
      courseE_artist_functions7_instruction: Subukang lutasin ang palaisipang ito
        sa pamamagitan ng paglikha ng `draw a window` at pagtawag nito nang limang
        beses. Mag-ingat sa pintuan!
      courseE_artist_functions7_2018_instruction: Subukang lutasin ang palaisipang
        ito sa pamamagitan ng paglikha ng `draw a window` at tawagin ito nang limang
        beses. Mag-ingat sa pintuan!
      courseE_artist_functions8_instruction: 'Hamon: Maglikha ng naparaming mga function
        na naisip mong kakailanganin mong para magawa ang drowing na ito na mga parisukat
        na 50 pixels.'
      courseE_artist_functions8_2018_instruction: 'Hamon: Maglikha ng maraming mga
        function na maisip mo na kailangan mo para maiguhit ang drowing na ito na
        50 pixel na mga parisukat.'
      courseE_artist_functions9_instruction: Ilikha ang larawng ito sa pamamagitan
        ng paggamit lang sa mga blokeng inilagay.
      courseE_artist_functions9_2018_instruction: Ilikha ang larawang ito sa pamamagitan
        ng paggamit lang ng mga blokeng ibinigay.
      courseE_artist_functions_challenge_instruction: Kapag nagbigay-kahulugan ka
        na sa isang function, maaari mo na itong tawagin nang paulit-ulit. kahit kailang
        at kahit saan na gusto mo! Subukan ang code na ito para makita kung paano
        ito gumagana, pagkatapos ay palitan ito para makagawa ng iyong sariling kamangha-maghang
        mga disenyo!
      courseE_artist_functions_challenge1_instruction: Kapag nagbigay-kahulugan ka
        na sa isang function, maaari mo na itong tawagin nang paulit-ulit. kahit kailang
        at kahit saan na gusto mo! Subukan ang code na ito para makita kung paano
        ito gumagana, pagkatapos ay palitan ito para makagawa ng iyong sariling kamangha-maghang
        mga disenyo!
      courseE_artist_functions_challenge1_2018_instruction: Kapag nagbigay-kahulugan
        ka na sa isang function, maaari mo na itong tawagin nang paulit-ulit. kahit
        kailang at kahit saan na gusto mo! Subukan ang code na ito para makita kung
        paano ito gumagana, pagkatapos ay palitan ito para makagawa ng iyong sariling
        kamangha-maghang mga disenyo!
      courseE_artist_functions_challenge2_instruction: Subukan ang code na ito para
        makita kung paano ito gumagana, pagkatapos ay gawin ang programa bilang sarili
        mo!
      courseE_artist_functions_challenge2_2018_instruction: Subukan ang code na ito
        para makita kung paano ito gumagana, pagkatapos ay gawin ang programa bilang
        sarili mo!
      courseE_artist_ramp10_instruction: Ngayon, i-drag ang code para sa huling tatsulong
        sa isang bagong loop para paikotin ito at gumawa ng isang niyebe!
      courseE_artist_ramp11_instruction: Ngayon ay gumawa ng isang parisukat gamit
        ang Artist!
      courseE_artist_ramp12_instruction: Gamitin ang natutunan mo para iguhit ang
        tatsulok na ito sa loob ng isang parisukat.
      courseE_artist_ramp8_instruction: Ngayon ay gumawa ng isang parisukat gamit
        ang Artist!
      courseE_artist_ramp8_2_instruction: Ngayon ay gumawa ng isang parisukat gamit
        ang Artist!
      courseE_artist_ramp8_2018_instruction: Ngayon ay gumawa ng isang parisukat gamit
        ang Artist!
      courseE_artist_ramp8_2_2018_instruction: Ngayon ay gumawa ng isang parisukat
        gamit ang Artist!
      courseE_artist_ramp9_instruction: Gamitin ang iyong natutunan para iguhit ang
        tatsulok na ito.
      courseE_artist_ramp9_2_instruction: Gamitin ang natutunan mo para iguhit ang
        tatsulok na ito.
      courseE_artist_ramp9_2018_instruction: Gamitin ang natutunan mo para iguhit
        ang tatsulok na ito.
      courseE_artist_ramp9_2_2018_instruction: |-
        Use what you've learned to draw
        this triangle.
      courseE_bee_concept1_instruction: Kolektahin ang lahat ng nektar mula sa bawat
        bulaklak.
      courseE_bee_concept1_2018_instruction: Kolektahin ang lahat ng nektar mula sa
        bawat bulaklak.
      courseE_bee_concept2_instruction: 'Tulungan ang bubuyog na gawin ang lahat ng
        mga pulot. '
      courseE_bee_concept2_2018_instruction: 'Tulungan ang bubuyog na gawin ang lahat
        ng mga pulot.

'
      courseE_bee_concept3_instruction: Kolektahin ang lahat ng nektar gamit ang iilang
        mga bloke lang na posible.
      courseE_bee_concept3_2018_instruction: |-
        Collect all of the nectar using  as
        few blocks as possible.
      courseE_bee_concept4_instruction: Uh oh! Ang bubuyog ay hindi sigurado kung
        dapat ba siyang magkolekta ng nektar o gumawa ng pulot. Maaari mo ba siyang
        tulungan?
      courseE_bee_concept4_2018_instruction: Uh oh! Ang bubuyog ay hindi sigurado
        kung dapat ba siyang magkolekta ng nektar o gumawa ng pulot. Maaari mo ba
        siyang tulungan?
      courseE_bee_concept5_instruction: Tutulungan mo ba ang bubuyog na magkolekta
        ng nektar mula sa mga bulaklak?
      courseE_bee_concept5_2018_instruction: Tutulungan mo ba ang bubuyog na magkolekta
        ng nektar mula sa mga bulaklak?
      courseE_bee_functions1_instruction: Kolektahin ang lahat ng mga nektar mula
        sa bawat bulaklak.
      courseE_bee_functions10_instruction: Lutasin ang palaisipan sa pamamagitan ng
        paglikha ng isang function na tumutulong sa bubuyog na kunin ang lahat ng
        mga pulot bago isauli pabalik sa pangunahing landas.
      courseE_bee_functions10_2018_instruction: Lutasin ang palaisipan sa pamamagitan
        ng paglikha ng isang function na tumutulong sa bubuyog na kunin ang lahat
        ng mga pulot bago isauli pabalik sa pangunahing landas.
      courseE_bee_functions1_2018_instruction: Kolektahin ang lahat ng nektar mula
        sa bawat bulaklak.
      courseE_bee_functions2_instruction: Gamitin ang `get 2 nectar`na function para
        magkolekta ng nektar mula sa bawat bulaklak.
      courseE_bee_functions2_2018_instruction: Gamitin ang `get 2 nectar`na function
        para magkolekta ng nektar mula sa bawat bulaklak.
      courseE_bee_functions3_instruction: Gumawa ng `get 5` na function para magamit
        sa palaisipang ito.
      courseE_bee_functions3_2018_instruction: Gumawa ng `get 5` na function para
        magamit sa palaisipang ito.
      courseE_bee_functions4_instruction: Gamitin ang `move and get nektar` na function
        para makolekta ang lahat ng nektar.
      courseE_bee_functions4_2018_instruction: |-
        Use the `move and get nectar` function
        to collect all of the nectar.
      courseE_bee_functions5_instruction: Ngayon ay isulat ang function para magkolekta
        ng nektar mula sa mga bulaklak.
      courseE_bee_functions5_2018_instruction: Ngayon ay isulat ang function na magkolekta
        sa nektar mula sa mga bulaklak.
      courseE_bee_functions6_instruction: Maglikha ng function at tawagin ito para
        magkolekta ng nektar sa bawat bulaklak at gumawa ng mga pulot sa bawat pulot-pukyutan.
      courseE_bee_functions6_2018_instruction: Maglikha ng function at tawagin ito
        para magkolekta ng nektar sa bawat bulaklak at gumawa ng mga pulot sa bawat
        pulot-pukyutan.
      courseE_bee_functions6test_instruction: Maglikha ng function at tawagin ito
        para magkolekta ng nektar sa bawat bulaklak at gumawa ng mga pulot sa bawat
        pulot-pukyutan.
      courseE_bee_functions7_instruction: Maglikha ng iyong sariling function na tatahak
        sa landas, kukuha ng nektar, gagawa ng pulot, at pagkatapos ay magbabalik
        sa bubuyog sa itaas ng landas. Kolektahin ang lahat ng nektar at gawin ang
        lahat ng pulot!
      courseE_bee_functions7_2018_instruction: Maglikha ng iyong sariling function
        na tatahak sa landas, kukuha ng nektar, gagawa ng pulot, at pagkatapos ay
        magbabalik sa bubuyog sa itaas ng landas. Kolektahin ang lahat ng nektar at
        gawin ang lahat ng pulot!
      courseE_bee_functions8_instruction: Maglikha ng function na magkokolekta sa
        lahat ng mga nektar mula sa bawat bulaklak.
      courseE_bee_functions8_2018_instruction: Maglikha ng function na magkokolekta
        sa lahat ng mga nektar mula sa bawat bulaklak.
      courseE_bee_functions9_instruction: Maglikha ng function na ikolekta ang lahat
        ng nektar mula sa bawat bulaklak.
      courseE_bee_functions9_2018_instruction: Maglikha ng function na ikolekta ang
        lahat ng nektar mula sa bawat bulaklak.
      courseE_bee_functions9b_instruction: Ngayon ay subukan ito sa Bee!
      courseE_bee_functions_challenge1_instruction: Ikaw ay mag-isa nalang para sa
        hamon na ito. Maaaring ito ay mas mahirap kaysa sa hitsura nito!
      courseE_bee_functions_challenge1_2018_instruction: Ikaw ay mag-isa nalang para
        sa hamon na ito. Maaaring ito ay mas mahirap kaysa sa hitsura nito!
      courseE_bee_functions_challenge2_instruction: Ikaw ay mag-isa nalang para sa
        hamon na ito! Magaling!
      courseE_bee_functions_challenge2_2018_instruction: Ikaw ay mag-isa nalang para
        sa hamon na ito! Magaling!
      courseE_bee_ramp14_instruction: Tulungan ang bubuyog na sundan ang lahat para
        matipon ang lahat ng mga pulot at lahat ng mga nektar.
      courseE_bee_ramp14_2018_instruction: |-
        Help the bee follow the path to gather
        all of the honey and all of the nectar.
      courseE_bee_ramp17_instruction: Gamitin ang iyong natutunan para lutasin ang
        palaisipang ito.
      courseE_collector_ramp10_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng mga kayamanan.
      courseE_collector_ramp8_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng mga kayamanan.
      courseE_collector_ramp9_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng mga kayamanan.
      courseE_farmer_concept1_instruction: Maaari ka bang magsulat ng programa na
        nagpunan sa mga butas na ito hanggang sa mapatag ang lupain?
      courseE_farmer_concept1_2018_instruction: Maaari ka bang magsulat ng programa
        na nagpunan sa mga butas na ito hanggang sa mapatag ang lupain?
      courseE_farmer_concept2_instruction: Kolektahin ang lahat ng mga kalabasa.
      courseE_farmer_concept2_2018_instruction: Kolektahin ang lahat ng mga kalabasa.
      courseE_farmer_concept3_instruction: Punan ang butas sa dulo ng bawat isa sa
        mga landas na ito.
      courseE_farmer_concept3_2018_instruction: Punan ang mga butas sa dulo ng bawat
        isa sa mga landas na ito.
      courseE_farmer_concept4_instruction: Ngayon ay pupunta tayo nang mas malalim!
        Ating nai-nest ang buong bloke ng code sa isang loop, ngunit kailangan mong
        pabalikin ang artista sa lugar para maiguhit ang sunod na linya. Alin sa mga
        code na blokeng ito ang maaaring maglagay sa dulo ng pinakalabas na loop para
        maiguhit ang buong grid?
      courseE_farmer_functions1_instruction: Tulungan ang magsasaka na makapunta sa
        kalabasa para pulotin ito.
      courseE_farmer_functions10_instruction: 'Walang nakakaalam kung ano ang magiging
        sa mga usbong na ito. Gamitin ang mga `if` na pahayag para magsulat ng code
        na magsusuri at mag-ani sa bawat isa.   '
      courseE_farmer_functions10b_instruction: Gamitin ang iyong bagong function nang
        dalawang beses para malutas ang palaisipang ito.
      courseE_farmer_functions10b_2018_instruction: |-
        Use your new function twice
        to solve this puzzle.
      courseE_farmer_functions1_2018_instruction: Tulungan ang magsasaka na makapunta
        sa kalabasa para pulotin ito.
      courseE_farmer_functions1a_instruction: Ngayon ay tulungan ang magsasaka para
        pupulot ng mais, letsugas, **at** kalabasa.
      courseE_farmer_functions1a_2018_instruction: Ngayon ay tulungan ang magsasaka
        para pupulot ng mais, letsugas, **at** kalabasa.
      courseE_farmer_functions2_instruction: |-
        Ngayon, magkakaroon tayo ng iba't ibang numero ng mga kalabasa sa bawat beses na ipatakbo mo ang programa.  \r
        \r
        Gamitin ang `while` na bloke para pulutin lang ang mga kalabasa na kinakailangan mo lang.
      courseE_farmer_functions2a_instruction: Tayo ay magsusuri ng napakaraming mga
        parisukat para sa mga pananim sa mga sunod na iilang mga palaisipan. Ating
        ilipat ang lahat sa isang function para mapadali ito.
      courseE_farmer_functions2aALT_instruction: Tayo ay magsusuri ng napakaraming
        mga parisukat para sa mga pananim sa mga sunod na iilang mga palaisipan. Ating
        ilipat ang lahat sa isang function para mapadali ito.
      courseE_farmer_functions2b_instruction: Tulungan ang mga magsasaka na mamulot
        ng mais at mga kalabasa.
      courseE_farmer_functions2b_2018_instruction: Tulungan ang mga magsasaka na mamulot
        ng mais at mga kalabasa.
      courseE_farmer_functions2ba_instruction: Tulungan ang mga magsasaka na mamulot
        ng mais at mga kalabasa gamit ang `corn and pumpkun` na function.
      courseE_farmer_functions2ba_2018_instruction: Tulungan ang mga magsasaka na
        mamulot ng mais at mga kalabasa gamit ang `corn and pumpkin` na function.
      courseE_farmer_functions3_instruction: |-
        Ano ang mangyayari kapag ang landas patungo sa mga kalabasa ay puro iba-iba ang haba?  \r
        \r
        Kunin ang lahat ng mga ito gamit ang kaunting mga bloke hangga't maaari.
      courseE_farmer_functions3b_instruction: Ngayon ay tulungan ang magsasaka para
        pupulot ng mais, letsugas, **at** kalabasa.
      courseE_farmer_functions3c_instruction: Ngayon, punan mo ang function nang ikaw
        lang sa pamamagitan ng paghila ng mga bloke mula sa code at paglaglag sa mga
        ito sa **pagbigay-kahulugan sa mga function**.
      courseE_farmer_functions3c_2018_instruction: Ngayon, punan mo ang function nang
        ikaw lang sa pamamagitan ng paghila ng mga bloke mula sa code at paglaglag
        sa mga ito sa **pagbigay-kahulugan sa mga function**.
      courseE_farmer_functions4_instruction: |-
        Mahusay! Ngayon ay mayroon ka nang code na kukuha ng mga kalabasa mula sa kahit anong laki ng daanan.\r
        \r
        Ating ikaladkad ang code na ito sa isang function para magagamit natin ito sa napakaraming mga pamamaraan...ngunit una natin itong gamitin para lutasan ang palaisipang ito ulit.
      courseE_farmer_functions4b_instruction: Gamitin ang iyong bagong function para
        malutas ang palaisipang ito.
      courseE_farmer_functions4b_2018_instruction: Gamitin ang iyong bagong function
        para malutas ang palaisipang ito.
      courseE_farmer_functions5_instruction: Paano mo ba mababago ang iyong programa
        para mapagana ang function na ito sa bawat isa sa mga daanan na ito?
      courseE_farmer_functions5a_instruction: Paano mo ba mababago ang iyong programa
        para mapagana ang function na ito sa bawat isa sa mga landas na ito?
      courseE_farmer_functions5b_instruction: Ang mga pananaim ay lumalago na ngayon
        sa mga kumpol-kumpol. Magdagdag ng iilang bagong `while` na mga loop sa iyong
        function para masiguro na makuha mo ang lahat ng mga ani.
      courseE_farmer_functions5c_instruction: Ang iyong function ay talagang magagamit
        dito.
      courseE_farmer_functions5c_2018_instruction: Ang iyong function ay talagang
        magagamit dito.
      courseE_farmer_functions6_instruction: |-
        *"Ating subukan ang isang bagong bagay!"*\r
        \r
        Narito ang iilang code para makolekta ang lahat ng mga letsugas. Ilipat ito sa isang function para magamit natin ito mamaya.
      courseE_farmer_functions6b_instruction: Pulutin ang lahat ng mga ani.
      courseE_farmer_functions6c_instruction: Ano ang kailangan mong idagdag sa programang
        ito para masuri kung ang bunga ay mais ba o letsugas ba?
      courseE_farmer_functions6c_2018_instruction: Ano ang kailangan mong idagdag
        sa programang ito para masuri kung ang bunga ay mais ba o letsugas ba?
      courseE_farmer_functions7_instruction: Gamitin ang iyong mga function para malutas
        ang palaisipang ito.
      courseE_farmer_functions7b_instruction: Tulungan ang magsasaka na maghanap sa
        kanyang dadaanan sa nakakalitong landas na ito at papunta sa kalabasa sa pamamagitan
        ng pagbaling pakaliwa sa mga mais at pakanan sa mga letsugas.
      courseE_farmer_functions7b_2018_instruction: Tulungan ang magsasaka na maghanap
        sa kanyang dadaanan sa nakakalitong landas na ito at papunta sa kalabasa sa
        pamamagitan ng pagbaling pakaliwa sa mga mais at pakanan sa mga letsugas.
      courseE_farmer_functions8_instruction: "**Hamon:** Lutasin ang palaisipang ito
        gamit ang kaunting mga bloke lang na posible."
      courseE_farmer_functions8b_instruction: "**Hamon:** Kolektahin ang lahat ng
        mga kalabasa gamit ang pamamaraan mula sa huling palaisipan. "
      courseE_farmer_functions8b_2018_instruction: "**Hamon:** Kolektahin ang lahat
        ng mga kalabasa gamit ang pamamaraan mula sa huling palaisipan. "
      courseE_farmer_functions9_instruction: Gamitin ang mga kondisyonal para magawang
        simple ang iyong programa.
      courseE_farmer_functions9b_instruction: Maaari mo bang matukoy ang pattern na
        kailangan mo para malutas ang palaisipang ito?
      courseE_farmer_functions9b_2018_instruction: Maaari mo bang matukoy ang pattern
        na kakailanganin mo para malutas ang palaisipang ito?
      courseE_farmer_functions9b_clone_instruction: Maaari mo bang matukoy ang pattern
        na kakailanganin mo para malutas ang palaisipang ito?
      courseE_farmer_predict1_instruction: Pulutin ang lahat ng mga letsugas (kapay
        maayrong ilang lang na mapupulot.)
      courseE_farmer_predict1_2018_instruction: |-
        Pick all of the lettuce (only while
        there is some to pick.)
      courseE_farmer_ramp11_instruction: Ang palaisipang ito ay gumagamit ng mga naka-nest
        na mga loop. Maaari mo bang matukong kung paano?
      courseE_farmer_ramp11a_instruction: Habang may tumpok pa, alisin ang mga dumi.
      courseE_farmer_ramp11a_2018_instruction: Habang may tumpok pa, alisin ang mga
        dumi.
      courseE_farmer_ramp11b_instruction: Habang may tumpok pa, tanggalin ang dumi.
      courseE_farmer_ramp11b_2018_instruction: Habang may tumpok pa, alisin ang mga
        dumi.
      courseE_farmer_ramp12_instruction: Ngayon ay gamitin ang mga naka-nest na mga
        loop para malutas ang palaisipang ito.
      courseE_farmer_ramp12_2018_instruction: Ngayon ay gamitin ang mga naka-nest
        na mga loop para malutas ang palaisipang ito.
      courseE_farmer_ramp12_forswap_instruction: Ngayon ay gamitin ang mga naka-nest
        na mga loop para malutas ang palaisipang ito.
      courseE_farmer_ramp12_forswap_2018_instruction: Ngayon ay gamitin ang naka-nest
        na mga loop para malutas ang palaisipang ito.
      courseE_farmer_ramp12a_instruction: Tulungan ang magsasaka na tamang maglakbay
        sa daanan para matipun ang lahat ng mga letsugas.
      courseE_farmer_ramp12a_2018_instruction: |-
        Help the farmer correctly travel
        the path to gather all of the lettuce.
      courseE_farmer_ramp12b_instruction: Habang may letsugas pa, kumuha ng letsugas!
      courseE_farmer_ramp12b_2018_instruction: Habang may letsugas pa, kumuha ng letsugas!
      courseE_farmer_ramp12c_instruction: Lumakad pasulong hanggang sa maabotan mo
        ang letsugas, pagkatapos ay pulutin ang lahat gamit ang `while` na loop.
      courseE_farmer_ramp12c_2018_instruction: Lumakad pasulong hanggang sa maabutan
        mo ang letsugas, pagkatapos ay pulutin ang lahat gamit ang `while` na loop.
      courseE_farmer_ramp12d_instruction: Lumakad pasulong hanggang sa maabotan mo
        ang letsugas, pagkatapos ay pulutin ang lahat gamit ang `while` na loop.
      courseE_farmer_ramp12d_2018_instruction: Lumakad pasulong hanggang sa maabutan
        mo ang letsugas, pagkatapos ay pulutin ang lahat gamit ang `while` na loop.
      courseE_farmer_ramp12e_instruction: Lumakad pasulong hanggang sa maabotan mo
        ang letsugas, pagkatapos ay pulutin ang lahat gamit ang `while` na loop.
      courseE_farmer_ramp12e_2018_instruction: Lumakad pasulong hanggang sa maabutan
        mo ang letsugas, pagkatapos ay pulutin ang lahat gamit ang `while` na loop.
      courseE_farmer_ramp12f_instruction: Lumakad pasulong hanggang sa maaabot mo
        ang mga letsugas, pagkatapos ay lumiko **kung** mayroong landas pakaliwa.
        Kung hindi, lumiko pakanan.
      courseE_farmer_ramp12f_2018_instruction: Lumakad pasulong hanggang sa maabot
        mo ang mga letsugas, pagkatapos lumiko pakaliwa **kung** mayroong landas pakaliwa.
        Kung hindi, lumiko pakanan.
      courseE_farmer_ramp12g_instruction: Lumakad pasulong hanggang sa maaabot mo
        ang mga letsugas, pagkatapos ay lumiko **kung** mayroong landas pakaliwa.
        Kung hindi, lumiko pakanan.
      courseE_farmer_ramp12g_2018_instruction: Lumakad pasulong hanggang sa maabot
        mo ang mga letsugas, pagkatapos lumiko pakaliwa **kung** mayroong landas pakaliwa.
        Kung hindi, lumiko pakanan.
      courseE_farmer_ramp13_instruction: Mamitas ng mais kung may mais, at mamitas
        ng letsugas habang mayroon pang letsugas.
      courseE_farmer_ramp13_2018_instruction: |-
        Pick corn if there is corn, and pick
        lettuce while there is lettuce.
      courseE_farmer_ramp15_instruction: Lutasin ang palaisipang ito gamit ang mga
        magagamit na mga bloke lang.
      courseE_farmer_ramp15_2018_instruction: Lutasin ang palaisipang ito gamit ang
        mga magagamit na mga bloke lang.
      courseE_farmer_ramp16_instruction: "**Hamon:** Lutasin ang palaisipang ito gamit
        ang pinakakaunting bilang ng mga bloke."
      courseE_maze_predict1_instruction: Ang code na ito ay naglalakip ng bagong bloke.
        Ano sa palagay mo ang mangyayari kapag pinindot mo ang "Run" na bloke?
      courseE_maze_predict1_2018_instruction: Ang code na ito ay naglalakip ng bagong
        bloke. Ano sa palagay mo ang mangyayari kapag pinindot mo ang "Run" na bloke?
      courseE_maze_ramp1_instruction: Para sa palaisipang ito, kaladkarin ang lahat
        ng mga bloke na sama-sama at pindutin ang "Run" para tingnan itong mawala!
      courseE_maze_ramp13_instruction: Oras na para sa isang huling palaisipan para
        pagsamahin sa paghila ang mga ito!
      courseE_maze_ramp1_2018_instruction: |-
        For this puzzle, drag all of the blocks
        together and click "Run" to watch it go!
      courseE_maze_ramp2_instruction: Mag-kaladkad ng ekstrang `move forward` na bloke
        palabas sa toolbox, pagkatapos ay ilakip ang lahat ng mga bloke sa `when run`
        para matapos ang iyong code.
      courseE_maze_ramp2_2018_instruction: Mag-kaladkad ng ekstrang `move forward`
        na bloke palabas sa toolbox, pagkatapos ay ilakip ang lahat ng mga bloke sa
        `when run` para matapos ang iyong code.
      courseE_maze_ramp3_instruction: Mayroong isang ekstrang bloke na magiging sanhi
        nang pag-crash ng ibon. Itapon ito sa pamamagitan ng pagkaladkad nito palayo
        sa toolbox.
      courseE_maze_ramp3_2018_instruction: Mayroong isang ekstrang bloke na magiging
        sanhi na mag-crash ang ibon. Itapon ito sa pamamagitan ng pagkaladkad nito
        pabalik sa toolbox.
      courseE_maze_ramp4_instruction: Iwasan ang TNT para hindi lilipad ang mga balahibo!
      courseE_maze_ramp4_2018_instruction: Iwasan ang TNT para hindi lilipad ang mga
        balahibo!
      courseE_maze_ramp5_instruction: Iwasan ang mga TNT.
      courseE_maze_ramp5_2018_instruction: Iwasan ang mga TNT.
      courseE_maze_ramp6_instruction: '"Maging kalmado at tulungan akong hanapin ang
        masamang baboy. Kung hindi, baka magalit ako!"'
      courseE_maze_ramp6_2018_instruction: |-
        "Keep calm and help me find the bad
        pig. Otherwise I might get angry!"
      courseE_maze_ramp7_instruction: Gamitin ang natutunan mo para mapapunta ang
        ibon sa baboy!
      courseE_maze_ramp7_2018_instruction: Gamitin ang iyong natutunan para mapapunta
        ang ibon sa baboy!
      courseE_maze_ramp_predict1_instruction: Ang code na ito ay naglalakip ng bagong
        bloke. Ano sa palagay mo ang mangyayari kapag pinindot mo ang "Run" na bloke?
      courseE_multi_maze_ramp5_instruction: Iwasan ang mga TNT.
      courseE_playLab_challenge1_instruction: |-
        May isang bagay na dapat mangyari kapag mayroon ka nang sapat na puntos o kapag naubusa ka na ng mga puntos. Magdagdag ng ilang code sa `win game` at `lose game` na mga function para mapagana ang laro sa dapat nitong paggana. \r
        I-click ang mga pahiwatig para sa mga ideya!
      courseE_playLab_challenge1_2018_instruction: |-
        May isang bagay na dapat mangyari kapag mayroon ka nang sapat na puntos o kapag naubusa ka na ng mga puntos. Magdagdag ng ilang code sa `win game` at `lose game` na mga function para mapagana ang laro sa dapat nitong paggana. \r
        I-click ang mga pahiwatig para sa mga ideya!
      courseE_playLab_embedded_instruction: Ito ay isang halimbawa ng laro na maaari
        mong paglaruan. Pagalawin ang aso gamit ang iyong mga arrow na key. Kapag
        ang aso ay nakahawak sa isa sa mga pusa, makakapuntos siya! Mag-iskor nang
        5 puntos para manalo!
      courseE_playLab_exampleProject2_instruction: Narito ang lahat ng iyong code
        para sa pagpili ng baraha - subukang magdagdag ng ilang mga masayang tampok!
      courseE_playLab_scaffold1_instruction: Pumili ng background at mapa, at pumili
        ng isang aktor para maging bayani sa iyong laro.
      courseE_playLab_scaffold1_2018_instruction: Pumili ng background at mapa, at
        pumili ng isang aktor para maging bayani sa iyong laro.
      courseE_playLab_scaffold2_instruction: Gamitin ang mga handler ng pangyayari
        at mga aksyon para mapagalaw ang bayani.
      courseE_playLab_scaffold2_2018_instruction: Gamitin ang mga handler ng pangyayari
        at mga aksyon para mapagalaw ang bayani.
      courseE_playLab_scaffold3_instruction: Magdagdag ng dalawa o higit pang mga
        aktor sa iyong laro at pagalawin ang mga ito.
      courseE_playLab_scaffold3_2018_instruction: Magdagdag ng dalawa o higit pang
        mga aktor sa iyong laro at pagalawin ang mga ito.
      courseE_playLab_scaffold4_instruction: Maghanap ng iilang nakatutuwang pamamaraan
        para baguhin ang iskor sa iyong laro. Kunin ang iskor para makapakita ng isang
        bagay sa halip ng 0 para makapagpatuloy.
      courseE_playLab_scaffold4_2018_instruction: Maghanap ng iilang nakatutuwang
        pamamaraan para baguhin ang iskor sa iyong laro. Kunin ang iskor para makapakita
        ng isang bagay sa halip ng 0 para makapagpatuloy.
      courseE_playLab_scaffold5_instruction: Ngayon ay maglaan ng ilang oras para
        masiguro na ang laro ay gumagana ayon sa kagustuhan mo. Maglakip ng pamamaraan
        para manalo o matalo sa iyong laro, pagkatapos ay maglaro hanggang sa maabot
        mo ang isa sa mga kondisyon na iyon.
      courseE_playLab_scaffold5_2018_instruction: Ngayon ay maglaan ng ilang oras
        para masiguro na ang laro ay gumagana ayon sa kagustuhan mo. Maglakip ng pamamaraan
        para manalo o matalo sa iyong laro, pagkatapos ay maglaro hanggang sa maabot
        mo ang isa sa mga kondisyon na iyon.
      courseE_playLab_scaffold6_instruction: Natapos mo na! Ngayon ay maaari ka nang
        maglaro sa iyong laro o magbahagi nito sa iyong mga kaibigan at mga kamag-aral!
      courseE_playLab_scaffold6_2018_instruction: Natapos mo na! Ngayon ay maaari
        ka nang maglaro sa iyong laro o magbahagi nito sa iyong mga kaibigan at mga
        kamag-aral!
      courseE_playlab_challenge2_instruction: Maaari mo bang malaman kung paano ang
        "Fortune Teller" na app na ito gumagana? I-click ang `MORE` para makita ang
        iyong mga hamon.
      courseE_playlab_variables_challenge2_instruction: Maaari mo bang malaman kung
        paano ang "Fortune Teller" na app na ito gumagana? I-click ang `MORE` para
        makita ang iyong mga hamon.
      courseE_video_createFunctions_instruction: Wala pa tayong video para sa paglikha
        ng mga functions. Ito ay isang placeholder.
      courseE_video_createFunctions2_instruction: Wala pa tayong video para sa paglikha
        ng mga functions. Ito ay isang placeholder.
      courseE_video_createFunctions2_2018_instruction: Wala pa tayong video para sa
        paglikha ng mga functions. Ito ay isang placeholder.
      courseE_video_createFunctions_2018_instruction: Wala pa tayong video para sa
        paglikha ng mga functions. Ito ay isang placeholder.
      courseF_IceAge_1_instruction: Tulungan si Sid na makapagsabi ng "Hello!" sa
        pamamagitan ng pagkaladkad sa `actor 1 say` na bloke palabas at pagkonekta
        nito sa ilalim ng `when run` na pangyayari.
      courseF_IceAge_10_instruction: Gamitin ang `actor__throw` na utos para mapagawa
        si Sid (aktor 1) na maghagis ng mga puso kay Granny (aktor 2) at itakda si
        mood ni Granny sa masaya kapag natamaan siya ng mga ito.
      courseF_IceAge_11_instruction: 'Oras na para maglikha ng iyong sariling laro
        o kuwento! '
      courseF_IceAge_2_instruction: Tulungan si Manny at Sid na batiin ang bawat isa
        sa pamamagitan ng paggamit sa `actor__say` na bloke nang dalawang beses.
      courseF_IceAge_3_instruction: Si Scrat ay naghahanap sa kayang bunga ng oak!
        Maari mo ba siyang tulungan ng gumalaw sa huling 200 na mga pixels?
      courseF_IceAge_4_instruction: Ikonekta ang bloke sa `when actor touches` na
        pangyayari para magpatugtog ng tunog kapag nahanap ni Diego si Manny.
      courseF_IceAge_5_instruction: Tulungan si Granny na makapag-ehersisyo sa pamamagitan
        ng paulit-ulit na paggalawa pakaliwa at pakanan.
      courseF_IceAge_6_instruction: 'Maaari mo bang matulungan si Sid na tawagin ang
        kanyang mga kaibigan kapag nag-click ka sa kanya? '
      courseF_IceAge_7_instruction: Magsulat ng code para matulungan si Scrat na makuha
        ang lahat ng mga bunga ng ensina!
      courseF_IceAge_8_instruction: 'Maaari mo bang tapusin ang programang ito para
        mapagawa ito na pareho kang **makapatugtog ng tunog** at **maka-iskor ng puntos**
        kapag si Sid at si Granny ay nagkabangga?

'
      courseF_IceAge_9_instruction: Baguhin ang eksesa sa isang mayelong background
        at itakda ang bilis ni Sid (aktor 1) sa mabilis.
      courseF_IceAge_template_instruction: Magsulat ng code para matulungan si Scrat
        na makuha ang lahat ng mga bunga ng ensina!
      courseF_artist_embed_for7_instruction: Pindutin ang Run para makita ang programa
        na tumatakbo! Ang isang ito ay gumagamit ng mga loop.
      courseF_artist_embed_variables9_instruction: Pindutin ang Run para makita ang
        programang ito na gumagana!
      courseF_artist_for1_instruction: Mag-eksperimento sa `for` na loop at paglaruan
        ang `counter` na variable.
      courseF_artist_for10_instruction: 'Libreng laro: Subukang gumamit ng `counter`
        na variable kasama ang ibang mga elemento ng pagguhit para makagawa ng mahiwagang
        mga imahe gaya ng isang ito.'
      courseF_artist_for10_2018_instruction: |-
        Free Play: Try using the `counter`
        variable with other drawing elements to make magical images like this one.
      courseF_artist_for1_2018_instruction: Mag-eksperimento sa iyong `for` na loop
        at paglaruan ang `counter` na variable.
      courseF_artist_for2_instruction: Ilikha ang bunton ng mga tatsulok na ito na
        nagiging 100 pixel ang mga gilid mula sa 50 pixel.
      courseF_artist_for2_2018_instruction: Ilikha ang bunton ng mga tatsulok na ito
        na nagiging 100 pixel ang mga gilid mula sa 50 pixel.
      courseF_artist_for3_instruction: 'Anga mga tatsulok na ito ay nagiging 200 pixel
        ang mga gilid mula sa 20 pixel na mga gilid, at bawat tatsulok ay mas malaki
        nang 20 pixel kaysa sa huli. '
      courseF_artist_for3_2018_instruction: "These triangles go from 20 pixel sides\nto
        200 pixel sides, and each triangle is 20 pixels larger than the last. "
      courseF_artist_for4_instruction: 'Ang mga parisukat na mga ito ay nagsisimula
        sa haba na 15 pixels. Ang pinakamalaki ay 300 pixels ang haba, at bawat parisukat
        ay mas malaki ng 15 pixels kaysa sa huli.

'
      courseF_artist_for4_2018_instruction: 'Ang mga parisukat na mga ito ay nagsisimula
        sa haba na 15 pixels. Ang pinakamalaki ay 300 pixels ang haba, at bawat parisukat
        ay mas malaki ng 15 pixels kaysa sa huli. '
      courseF_artist_for5_instruction: Isa lang maliit na pagbabago sa code mula sa
        huling larawan ang makalikha sa drowing na ito. Maaari mo bang matukoy kung
        ano ang mga pagbabagong ito?
      courseF_artist_for5_2018_instruction: Isa na lang maliit na pagbabago sa code
        mula sa huling larawan ang makalikha sa drowing na ito. Maaari mo bang matukoy
        kung ano ang mga pagbabagong ito?
      courseF_artist_for6_instruction: Muling ilikha ang iyong code mula sa huling
        antas, ngunit bumaling ng 89 degrees para ilikha ang baluktot na parisukat
        na spiral.
      courseF_artist_for6_2018_instruction: Muling ilikha ang iyong code mula sa huling
        antas, ngunit bumaling ng 89 degrees para ilikha ang baluktot na parisukat
        na spiral.
      courseF_artist_for7_instruction: Gumawa ng tatlong maliliit na pagbabago sa
        code mula sa huling antas para makuha ito!
      courseF_artist_for7_2018_instruction: |-
        Make three small changes to the code
        from the last level to get this!
      courseF_artist_for8_instruction: Pababain ang anggulo sa 72 degrees para makuha
        ang isang naka-spiral na pentagon.
      courseF_artist_for8_2018_instruction: |-
        Take the angle down to 72 degrees to
        get a spiraled pentagon.
      courseF_artist_for9_instruction: "**Inspirasyon:** Gamitin ang tagabilang sa
        loob ng `set alpha` na bloke para makuha ang kupas na gitnang ito."
      courseF_artist_for9_2018_instruction: "**Inspirasyon:** Gamitin ang tagabilang
        sa loob ng `set alpha` na bloke para makuha ang kupas na gitnang ito."
      courseF_artist_for_Template_instruction: Subukang gumamit ng ilang code mula
        sa huling antas, ngunit bumaling ng 89 degrees para ilikha ang baluktot na
        parisukat na spiral.
      courseF_artist_for_Template_2018_instruction: |-
        Try using some of the code from
        the last level, but turning 89 degrees to create this twisted square spiral.
      courseF_artist_for_challenge1_instruction: Maaari mo bang matukoy kung paano
        malikha ulit ang drowing na ito?
      courseF_artist_for_challenge1_2018_instruction: Maaari mo bang matukoy kung
        paano malikha ulit ang drowing na ito?
      courseF_artist_for_challenge2_instruction: Maaari mo bang matukoy kung paano
        ilikha ulit ang mga drowing na ito gamit ang isang loop?
      courseF_artist_for_challenge2_2018_instruction: Maaari mo bang matukoy kung
        paano ilikha ulit ang mga drowing na ito gamit ang isang loop?
      courseF_artist_fwp1_instruction: Baguhin ang function na 'draw a square' para
        mahanap ang mga bug.
      courseF_artist_fwp1_2018_instruction: Baguhin ang funtion na 'draw a squar'
        para mahanap ang mga bug.
      courseF_artist_fwp2_instruction: Baguhin ang function para tanggapin ang parameter
        na tinatawag na `length`.
      courseF_artist_fwp2_2018_instruction: Baguhin ang function para tatanggap ng
        parameter na tinatawag na `length`.
      courseF_artist_fwp2_predict1_instruction: Baguhin ang function para tatanggap
        ng parameter na tinatawag na `length`.
      courseF_artist_fwp2_predict1_2018_instruction: |-
        Edit the function to accept
        a parameter called `length`.
      courseF_artist_fwp3_instruction: Maglikha ng function na tinatawag na 'draw
        a square' at gamitin ito para gumawa ng balangkas sa mga apat ng mga kahong
        ito gamit ang mga parameter.
      courseF_artist_fwp3_2018_instruction: Maglikha ng function na tinatawag na 'draw
        a square' at gamitin ito para gumawa ng balangkas sa mga apat ng mga kahong
        ito gamit ang mga parameter.
      courseF_artist_fwp4_instruction: Baguhin ang function na ito para magdagdag
        ng parameter para sa bilang ng gilid ng iyong polygon.
      courseF_artist_fwp4_2018_instruction: Baguhin ang function na ito para magdagdag
        ng parameter para sa bilang ng gilid ng iyong polygon.
      courseF_artist_fwp5_instruction: 'Gamitin ang function mula sa huling palaisipan
        para iguhit ang serye ng mga hugis na ito.  '
      courseF_artist_fwp5_2018_instruction: 'Gamitin ang function mula sa huling palaisipan
        para iguhit ang serye ng mga hugis na ito.  '
      courseF_artist_fwp6_instruction: 'Hamon: Baguhin ang `draw a spiral edge` para
        gamitin ang `length` at `sides` na mga parameter, pagkatapos ay ilikha ulit
        ang mga hugis na ito.'
      courseF_artist_fwp6_2018_instruction: 'Hamon: Baguhin ang `draw a spiral edge`
        para gumamit ng `length` at `sides` na mga paramter, pagkatapos ay ilikha
        ulit ang mga hugis na ito.'
      courseF_artist_fwp7_instruction: Tapusin ang `draw a spiral edge` na function
        para mag-alok din ng pinakamaliit na haba para sa gitna ng spiral.
      courseF_artist_fwp7_2018_instruction: Tapusin ang `draw a spiral edge` na function
        para mag-alok din ng pinakamaliit na haba para sa gitna ng spiral.
      courseF_artist_fwp8_instruction: Maaari mo bang matukoy kung paano magawa ang
        drowing na ito gamit ang function na kakalikha mo lang?
      courseF_artist_fwp8_2018_instruction: Maaari mo bang matukoy kung paano magawa
        ang drowing na ito gamit ang function na kakalikha mo lang?
      courseF_artist_fwp9_instruction: 'Libreng Laro: Gumuhit ng isang bagay na kamangha-mangha!
        Paglaruan ang lapad ng pen para makita kung paano nagkaiba ang hitsura ng
        iyong mga drowing!'
      courseF_artist_fwp9_2018_instruction: 'Libreng laro: Gumuhit tayo ng isang bagay
        na kamangha-mangha! Paglaruan ang lapad ng pen para makita kung paano nagkaiba
        ang hitsura ng iyong mga drowing!'
      courseF_artist_fwp_challenge1_instruction: Maaari mo bang matukoy kung paano
        gumagana ang programang ito?
      courseF_artist_fwp_challenge1_2018_instruction: Maaari mo bang matukoy kung
        paano gumagana ang programang ito?
      courseF_artist_fwp_challenge2_instruction: Gamitin ang natutunan mo sa nakaraang
        antas para maiguhit ang image na katulad nito.
      courseF_artist_fwp_challenge2_2018_instruction: Gamitin ang natutunan mo sa
        nakaraang antas para maiguhit ang image na katulad nito.
      courseF_artist_ramp10_instruction: Ngayon, i-drag ang code para sa huling tatsulong
        sa isang bagong loop para paikotin ito at gumawa ng isang niyebe!
      courseF_artist_ramp10_2018_instruction: Ngayon, i-drag ang code para sa huling
        tatsulong sa isang bagong loop para paikotin ito at gumawa ng isang niyebe!
      courseF_artist_ramp8_instruction: Ngayon ay gumawa ng isang parisukat gamit
        ang Artist!
      courseF_artist_ramp8_2018_instruction: Ngayon ay gumawa ng isang parisukat gamit
        ang Artist!
      courseF_artist_ramp9_instruction: Gamitin ang natutunan mo para maiguhit ang
        tatsulok na ito.
      courseF_artist_ramp9_2018_instruction: Gamitin ang natutunan mo para iguhit
        ang tatsulok na ito.
      courseF_artist_variables1_instruction: Tayo ay guguhit ng paragilid na tatsulok
        na eskaktong 50 pixels ang haba sa bawat gilid.
      courseF_artist_variables10_instruction: 'Narito ang iyong code mula sa huling
        palaisipan. Subukang baguhin ang variable sa ibang pamamaraan.  '
      courseF_artist_variables10_2018_instruction: 'Narito ang iyong code mula sa
        huling palaisipan. Subukang baguhin ang variable sa mga ibang pamamaraan.  '
      courseF_artist_variables2_instruction: 'Ngayon ay iguhit ang tatlo sa mga tatsulok
        na iyon katabi ng bawat isa.   '
      courseF_artist_variables2_2018_instruction: 'Ngayon ay iguhit ang tatlo sa mga
        tatsulok na iyon katabi sa bawat isa.   '
      courseF_artist_variables3_instruction: Ilipat ang haba na 50 sa isang variable
        para maaari natin itong gamitin sa susunod na kaunting mga palaisipan.
      courseF_artist_variables3_2018_instruction: Ilipat ang haba na 50 sa isang variable
        para maaari natin itong gamitin sa susunod na kaunting mga palaisipan.
      courseF_artist_variables4_instruction: Ngayon, gamitin ang `length` na variable
        para mapatalon ang artista paharap at pababa mga `length` pixels sa gitna
        ng mga tatsulok.
      courseF_artist_variables4_2018_instruction: |-
        Now, use the `length` variable
        to have the artist jump forward and down by `length` pixels between triangles.
      courseF_artist_variables5_instruction: Magdagdag ng isa pang hanay ng mga loop
        sa dulo ng iyong code par makadagdag ng tatlo pang mga tatsulok. Sa ngayon,
        gumalaw pasulong at pataas!
      courseF_artist_variables5_2018_instruction: Magdagdag ng isa pang hanay ng mga
        loop sa dulo ng iyong code par makadagdag ng tatlo pang mga tatsulok. Sa ngayon,
        gumalaw pasulong at pataas!
      courseF_artist_variables6_instruction: 'Ngayon gawin ang mga tatsulok para maging
        60 pixels ang haba, may mga 60 pixels na mga talon.  '
      courseF_artist_variables6_2018_instruction: 'Ngayon gawin ang mga tatsulok para
        maging 60 pixels ang haba, may mga 60 pixels na mga talon.  '
      courseF_artist_variables6a_instruction: Buoin ang disenyong ito kung saan ang
        mga parisukat ay may gilid na 80 pixels at ang artista ay tumatalon ng 80
        pixels sa taas at baba ng pagitan ng bawat isa.
      courseF_artist_variables6a_2018_instruction: Buoin ang disenyong ito kung saan
        ang mga parisukat ay may gilid na 80 pixels at ang artista ay tumatalon ng
        80 pixels sa taas at baba ng pagitan ng bawat isa.
      courseF_artist_variables7_instruction: 'Magguhit ng isang tatsulok na may gilid
        na 150 pixels.

'
      courseF_artist_variables7_2018_instruction: 'Magguhit ng tatsulok na may gilid
        na 150 pixels. '
      courseF_artist_variables8_instruction: Muling itayo ang tatsulok na code mula
        sa huling palaisipan, ngunit sa oras na ito gumamit ng `set length to` na
        bloke na i-reset ang `length` na variable sa `length` +10 sa dulo ng bawat
        iterasyon.
      courseF_artist_variables8_2018_instruction: Muling itayo ang tatsulok na code
        mula sa huling palaisipan, ngunit sa oras na ito gumamit ng `set length to`
        na bloke na i-reset ang `length` na variable sa `length` +10 sa dulo ng bawat
        iterasyon.
      courseF_artist_variables9_instruction: Tingnan kung ano ang mangyayari kapag
        inulit mo ang code mula sa huling palaisipan nang 30 beses sa halip na 3 lang!
        Huwag mag-atubiling gawin ang iyong linya sa kahit anumang kulay o pattern
        para sa karagdagang sigla.
      courseF_artist_variables9_2018_instruction: Tingnan kung ano ang mangyayari
        kapag iyong inuli ang code mula sa huling palaisipan nang 30 beses sa halip
        na 3 lang! Huwag mag-atubiling gawin ang iyong mga linya sa anumang kulay
        o patter para sa karagdagang sigla.
      courseF_artist_variablesFP_instruction: "**Libreng Laro:** Kunin ang iyong natutunan
        at gawin ang iyong sariling drowing. "
      courseF_artist_variablesFP_2018_instruction: "**Libreng Laro:** Kunin ang iyong
        natutunan at gawin ang iyong sariling drowing. "
      courseF_artist_variables_10_instruction: 'Narito ang iyong code mula sa huling
        palaisipan. Subukang baguhin ang variable sa ibang mga pamamaraan.  '
      courseF_artist_variables_2_instruction: |
        Ngayon ay gumamit ng ibang loop para iguhit ang tatlo sa mga tatsulok na iyo na magkasunod sa bawat isa.  \r
        Maaari mong i-nest ang code mula sa iyong huling palaisipan sa loob.\r
      courseF_artist_variables_5_instruction: Magdagdag ng isang grupo ng mga loop
        sa dulo ng iyong code para makadagdag ng tatlo pang mga tatsulok. Sa oras
        na ito, gumalaw pasulong at pataas!
      courseF_artist_variables_6_instruction: |-
        OOPS! Talagang kailangan natin ang mga tatsulok na 60 pixels ang lapad, na may mga 60 pixel na mga pagtalon.  \r
        Hindi ka ba masaya na ikaw ay gumagamit ng isang variable?
      courseF_artist_variables_6a_instruction: Buoin ang disenyong ito kung saan ang
        mga parisukat ay may gilid na 80 pixels at ang artista ay tumatalon ng 80
        pixels sa taas at baba ng pagitan ng bawat isa.
      courseF_artist_variables_9_instruction: |-
        Tingnan kung ano ang mangyayari kapay inulit mo ang code mula sa huling palaisipan nang 30 beses sa halip na 3 lang!\r
        \r
        Huwag mag-atubiling gawin ang iyong mga linya sa kahit anumang kulay o pattern para sa karagdagang sigla.
      courseF_artist_variables_FP_instruction: |-
        **Libreng laro:** Kunin ang natutunan mo at gumawa ng iyong sariling drowing. \r
        \r
        Paano mo magagamit ang mga variables sa mga parisukat, mga pentagon, o mga hexagon?
      courseF_artist_variables_challenge1_instruction: Maaari ka bang maglikha ng
        isang `length` na variable at gamitin ito para ilikha ang pattern na ito?
      courseF_artist_variables_challenge1_2018_instruction: Maaari ka bang maglikha
        ng isang `length` na variable at gamitin ito para ilikha ang pattern na ito?
      courseF_artist_variables_challenge1a_instruction: Ngayon ay natutunan mo na
        ang lahat ng kailangan mong malaman para makagawa ng isang pattern kagaya
        nito! Ang palaisipang ito ay ginawang mas mahirap. Maaari mo bang manatili
        dito hanggang sa malaman mo na ang solusyon?
      courseF_artist_variables_challenge2_instruction: Ngayon ay natutunan mo na ang
        lahat ng kailangan mong malaman para makagawa ng pattern kagaya nito!
      courseF_artist_variables_challenge2_2018_instruction: Ngayon ay natutunan mo
        na ang lahat ng kailangan mong malaman para makagawa ng pattern kagaya nito!
      courseF_artistembed_variables9_instruction: Tingnan kung ano ang mangyayari
        kapag iyong inuli ang code mula sa huling palaisipan nang 30 beses sa halip
        na 3 lang! Huwag mag-atubiling gawin ang iyong mga linya sa anumang kulay
        o patter para sa karagdagang sigla.
      courseF_bee_conditionals10_instruction: Kolektahin ang lahat ng nektar at gawin
        ang lahat ng mga pulot.
      courseF_bee_conditionals10_2018_instruction: Kolektahin ang lahat ng nektar
        at gawin ang lahat ng mga pulot.
      courseF_bee_conditionals1_predict1_instruction: Suriin kung makita mo kung mayroong
        bulaklak sa ilalim ng ulap. Kung mayroong bulaklak, kumuha ng nektar.
      courseF_bee_conditionals1_predict1_2018_instruction: Suriin para makita kung
        mayroon bang bulaklak sa ilalim ng mga ulap. Kung mayroong bulaklak, kumuha
        ng nektar.
      courseF_bee_conditionals2_instruction: 'Tingnan ang ilalim ng bawat ulap para
        makita kung ito ba ay nagtatago ng bulaklak bago ka makakuha ng nektar.  '
      courseF_bee_conditionals2_2018_instruction: 'Tingnan ang ilalim ng bawat ulap
        para makita kung ito ba ay nagtatago ng bulaklak bago ka makakuha ng nektar.  '
      courseF_bee_conditionals3_instruction: 'Tulungan ang bubuyog na magkolekta sa
        lahat ng nektar.

'
      courseF_bee_conditionals3_2018_instruction: 'Tulungan ang bubuyog na magkolekta
        sa lahat ng nektar. '
      courseF_bee_conditionals4_instruction: Kunin ang lahat ng nektar gamit ang iilang
        mga bloke na posible.
      courseF_bee_conditionals4_2018_instruction: |-
        Get all of the nectar using as
        few blocks as possible.
      courseF_bee_conditionals5_instruction: Kolektahin ang lahat ng mga nektar gamit
        ang pinakakaunting mga bloke na possible
      courseF_bee_conditionals5_2018_instruction: |-
        Collect all of the nectar using
        as few blocks as possible
      courseF_bee_conditionals7_predict2_instruction: Gamitin ang `if/else` na bloke
        para mangolekta ng nektar sa mga bulaklak at gumawa ng mga pulot sa pulot-pukyutan.
      courseF_bee_conditionals7_predict2_2018_instruction: Gamitin ang `if/else` na
        bloke para magkolekta ng nektar sa mga bulaklak at gumawa ng pulot sa pulot-pukyutan.
      courseF_bee_conditionals8_instruction: |-
        Magkolekta ng nektar kung mayroong bulaklak.\r
        Kung hindi, gumawa ng pulot (dahil mayroong pulot-pukyutan).
      courseF_bee_conditionals8_2018_instruction: |-
        Magkolekta ng nektar kung mayroong bulaklak.\r
        Kung hindi, gumawa ng pulot (dahil mayroong pulot-pukyutan).
      courseF_bee_for1_instruction: Kolektahin ang nektar mula sa bawat bulaklak gamit
        ang pinakakaunting mga bloke hangga't maaari.
      courseF_bee_for10_instruction: "**Hamon:** Kunin ang natutunan mo tungkol sa
        mga `for` na loop at subukang lutasin ang problemang ito. "
      courseF_bee_for10_2018_instruction: "**Challenge:** Take what you've learned\nabout
        `for` loops and try to solve this problem. "
      courseF_bee_for11_instruction: Ano ba dapat ang iyong increment para makakolekta
        ng 15, pagkatapos ay 12, tapos ay 9, 6, 3 na nektar?
      courseF_bee_for11_2018_instruction: |-
        What should your increment be to collect
        15, then 12, then 9, 6, 3 nectar?
      courseF_bee_for1_2018_instruction: Kolektahin ang nektar mula sa bawat isa sa
        mga bulaklak gamit ang pinakakaunting mga bloke hangga't maaari.
      courseF_bee_for2_instruction: Isulat ang code para tulungan ang bubuyog na kolektahin
        ang lahat ng nektar.
      courseF_bee_for2_2018_instruction: Isulat ang code para tulungan ang bubuyog
        na kolektahin ang lahat ng nektar.
      courseF_bee_for3_instruction: Subukan ang palaisipang ito gamit ang `for` na
        loop at ang `counter` na variable para makita kung gaano naging maikli ang
        iyong code.
      courseF_bee_for4_instruction: Tulungan ang bubuyog na kolektahin ang lahat ng
        nektar.
      courseF_bee_for4_2018_instruction: Help the bee collect all of the nectar.
      courseF_bee_for5_instruction: Gamitin ang `counter` na variable nang dalawang
        beses para malutas ang palaisipang ito.
      courseF_bee_for5_2018_instruction: Gamitin ang `counter` na variable nang dalawang
        beses para malutas ang palaisipang ito.
      courseF_bee_for6_instruction: Subukang ipunin ang nektar na ito sa pamamagitan
        ng pagbilang pababa ng 1 mula 5 hanggang sa 1.
      courseF_bee_for6_2018_instruction: Subukang ipunin ang nektar na ito sa pamamagitan
        ng pagbilang pababa ng 1 mula 5 hanggang sa 1.
      courseF_bee_for7_instruction: Subukang kolektahin ang mga bulaklak na ito gamit
        ang pagtaas na 2.
      courseF_bee_for7_2018_instruction: |-
        Try collecting these flowers using an increment
        of 2.
      courseF_bee_for8_instruction: Kaya mo ito! Ano dapat ang iyong pagtaas para
        makakolekta ng 3, 6, 9, 12, 15 na nektar?
      courseF_bee_for8_2018_instruction: |-
        You've got this! What should your increment
        be to collect 3, 6, 9, 12, 15 nectar?
      courseF_bee_for9_instruction: Gamitin ang `counter` na variable para mag-navigate
        sa halamanang ito gamit ang pinakakaunting bilang ng mga bloke na posible.
      courseF_bee_for9_2018_instruction: |-
        Use the `counter` variable to navigate
        this garden with the fewest number of blocks possible.
      courseF_bee_for_challenge1_instruction: 'Gamitin ang `for loop` na ito para
        ikolekta ang lahat ng nektar. '
      courseF_bee_for_challenge1_2018_instruction: 'Gamitin ang `for loop` na ito
        para ikolekta ang lahat ng nektar. '
      courseF_bee_for_challenge2_instruction: Lutasin ang palaisipang ito gamit ang
        pinakakaunting bilang ng mga bloke na posible.
      courseF_bee_for_challenge2_2018_instruction: Lutasin ang palaisipang ito gamit
        ang pinakakaunting bilang ng mga bloke na posible.
      courseF_bee_for_challenge3_instruction: Lutasin ang palaisipang ito gamit ang
        pinakakaunting bilang ng mga bloke na posible.
      courseF_bee_functions2_instruction: Gamitin ang `get only nectar` na function
        para magkolekta ng nektar mula sa bawat bulaklak.
      courseF_bee_functions2_2018_instruction: Gamitin ang `get only nectar` na function
        para magkolekta ng nektar mula sa bawat bulaklak.
      courseF_bee_functions3_instruction: I-click ang "edit" para maglagay ng code
        sa loob ng `only make honey` na function, pagkatapos ay gamitin ito para malutas
        ang palaisipang ito.
      courseF_bee_functions3_2018_instruction: I-click ang "edit" para maglagay ng
        code sa loob ng `only make honey` na function, pagkatapos ay gamitin ito para
        malutas ang palaisipang ito.
      courseF_bee_functions3a_instruction: Magsulat ng function na kumukuha ng nektar
        kung ang bee ay nasa bulaklak, kung hindi man ay kukuha ito ng pulot. Gamitin
        ang iyong function para lutasin ang palaisipan!
      courseF_bee_functions3a_2018_instruction: Magsulat ng function na kumukuha ng
        nektar kung ang bee ay nasa bulaklak, kung hindi man ay kukuha ito ng pulot.
        Gamitin ang iyong function para lutasin ang palaisipan!
      courseF_bee_functions4_instruction: Maglikha ng bagong `move and check` na function
        para ikolekta ang lahat ng nektar.
      courseF_bee_functions4_2018_instruction: Maglikha ng bagong `move and check`
        na function para ikolekta ang lahat ng nektar.
      courseF_bee_functions5_instruction: Ngayon ay isulat ang cuntion para ikolekta
        ang nektar mula sa mga bulaklak.
      courseF_bee_functions5a_instruction: Gamitin ang `move and check` na function
        para ikolekta ang lahat ng nektar.
      courseF_bee_functions5a_2018_instruction: Gamitin ang `move and check` na function
        para kolektahin ang lahat ng mga nektar.
      courseF_bee_functions6_instruction: Tulungan ang bubuyog na lampasan ang maze
        sa pamamagitan ng pag-ikot pakanan sa mga bulaklak at pakanan sa mga pulot-pukyutan.
      courseF_bee_functions6_2018_instruction: Tulungan ang bubuyog na lampasan ang
        maze sa pamamagitan ng pag-ikot pakanan sa mga bulaklak at pakanan sa mga
        pulot-pukyutan.
      courseF_bee_functions7_instruction: Ayusin ang iyong function mula sa huling
        palaisipan para malutas ang maze na ito.
      courseF_bee_functions7_2018_instruction: Ayusin ang iyong function mula sa huling
        palaisipan para malutas ang maze na ito.
      courseF_bee_functions8a_instruction: Kolektahin ang lahat ng nektar o gawin
        ang lahat ng mga pulot!
      courseF_bee_functions8a_2018_instruction: Kolektahin ang lahat ng nektar o gawin
        ang lahat ng mga pulot!
      courseF_bee_functionsPre7_instruction: Ngayon, subukang magtayo ng function
        para malutas ang maze na ito. Paano ito naiiba mula sa huling pagkakataon?
      courseF_bee_functionsPre7_2018_instruction: Ngayon, subukang magtayo ng function
        para malutas ang maze na ito. Paano ito naiiba mula sa huling pagkakataon?
      courseF_bee_functions_challenge1_instruction: Maglikha ng bagong function para
        ikolekta ang lahat ng nektar at pulot habang mayroon pang landas sa unahan.
      courseF_bee_functions_challenge1_2018_instruction: Maglikha ng bagong function
        para ikolekta ang lahat ng nektar at pulot habang mayroon pang landas sa unahan.
      courseF_bee_functions_challenge2_instruction: Gamitin ang lahat ng iyong natutunan
        para ikompleto ang palaisipang ito!
      courseF_bee_functions_challenge2_2018_instruction: Gamitin ang lahat ng iyong
        natutunan para ikompleto ang palaisipang ito!
      courseF_bee_functions_challenge2_recursion_instruction: Kolektahin ang lahat
        ng nektar o gawin lahat ng mga pulot!
      courseF_bee_fwp2_instruction: Hilahin ang code na ito sa isang function, pagkatapos
        ay tawagin ang function para suriin ang hanay na ito para sa nektar.
      courseF_bee_fwp2_2018_instruction: Hilahin ang code na ito sa isang function,
        pagkatapos ay tawagin ang function para suriin ang hanay na ito para sa nektar.
      courseF_bee_fwp3_instruction: Tingnan natin kung ang function ay nagpapadali
        sa pagkolekta sa tatlong hanay ng nektar na mga ito.
      courseF_bee_fwp3_2018_instruction: Tingnan natin kung ang function ay nagpapadali
        sa pagkolekta sa tatlong hanay ng nektar na mga ito.
      courseF_bee_fwp4_instruction: Magdagdag ng `length` na parameter sa function
        para gagana pa rin ito kapag ang hanay ay iba ang haba.
      courseF_bee_fwp4_2018_instruction: Magdagdag ng `length` na parameter sa function
        para gagana pa rin ito kapag ang hanay ay iba ang haba.
      courseF_bee_fwp5_instruction: Gamitin ang function na ito para ikolekta ang
        nektar.
      courseF_bee_fwp5_2018_instruction: Gamitin ang function na ito para ikolekta
        ang nektar.
      courseF_bee_fwp6_instruction: Gumawa ng isang maikli at matamis na solusyon
        sa palaisipang ito.
      courseF_bee_fwp6_2018_instruction: Gumawa ng isang maikli at matamis na solusyon
        sa palaisipang ito.
      courseF_bee_fwp7_instruction: "**Hamon:** Baguhin ang iyong function para gawin
        din ang mga pulot."
      courseF_bee_fwp7_2018_instruction: "**Hamon:** Baguhin ang iyong function para
        gawin din ang mga pulot."
      courseF_bee_fwp8_instruction: Gamitin ang iyong bagong function para lutasin
        ang spiral na ito.
      courseF_bee_fwp8_2018_instruction: Gamitin ang iyong bagong function para lutasin
        ang spiral na ito.
      courseF_bee_fwp9_instruction: Gamitin ang iyong bagong function para lutasin
        ang spiral na ito.
      courseF_bee_fwp9_predict1_instruction: Gamitin ang iyong bagong function para
        malutas ang palaisipang ito.
      courseF_bee_fwp9_predict1_2018_instruction: Gamitin ang iyong bagong function
        para malutas ang palaisipang ito.
      courseF_bee_fwp_challenge1_instruction: Gumamit ng isang `for loop` na function
        na may `length` na parameter para kolektahin ang lahat ng mga mais.
      courseF_bee_fwp_challenge1_2018_instruction: Gumamit ng isang `for loop` na
        function na may `length` na parameter para kolektahin ang lahat ng mga mais.
      courseF_bee_fwp_challenge2_instruction: 'Gumamit ng isang `for loop` sa isang
        function na may `length` na parameter para kolektahin ang lahat ng mga gulay
        sa isang hanay. '
      courseF_bee_fwp_challenge2_2018_instruction: 'Gumamit ng isang `for loop` sa
        isang function na may `length` na parameter para kolektahin ang lahat ng mga
        gulay sa isang hanay. '
      courseF_farmer_ramp11_instruction: Ang palaisipang ito ay gumagamit ng mga naka-nest
        na mga loop. Maaari mo bang matukong kung paano?
      courseF_farmer_ramp11_2018_instruction: Ang palaisipang ito ay gumagamit ng
        mga naka-nest na mga loop. Maaari mo bang matukong kung paano?
      courseF_maze_predict1_instruction: Ang code na ito ay naglalakip ng bagong bloke.
        Ano sa palagay mo ang mangyayari kapag pinindot mo ang "Run" na bloke?
      courseF_maze_ramp13_instruction: Oras na para sa isa namang Angry Birds na palaisipan
        para ipagsama ang lahat ng mga ito!
      courseF_maze_ramp15_instruction: Gamitin ang iyong natutunan para mapapunta
        ang ibon sa baboy!
      courseF_maze_ramp4_instruction: Iwasan ang TNT para hindi lilipad ang mga balahibo!
      courseF_maze_ramp4_2018_instruction: Iwasan ang TNT para hindi lilipad ang mga
        balahibo!
      courseF_maze_ramp5_instruction: Iwasan ang mga TNT.
      courseF_maze_ramp5_2018_instruction: Iwasan ang mga TNT.
      courseF_maze_ramp6_instruction: '"Maging kalmado at tulungan akong hanapin ang
        masamang baboy. Kung hindi, baka magalit ako!"'
      courseF_maze_ramp6_2018_instruction: |-
        "Keep calm and help me find the bad
        pig. Otherwise I might get angry!"
      courseF_maze_ramp7_instruction: Gamitin ang natutunan mo para mapapunta ang
        ibon sa baboy!
      courseF_playlab_embed_vars_instruction: |-
        Sagutin ang mga katanungan ni Pegleg ang Pirata.
        Ano ang mangyayari kapag iniligay mo ang codename na "password"? Paano kapag ang ibang mga code name?
      courseF_playlab_variables0_instruction: Ito si Piratang Pegleg. Siya ay talagang
        mahirap intindihin sa mga araw na ito!
      courseF_playlab_variables1_instruction: Ito si Piratang Pegleg. Siya ay talagang
        mahirap intindihin sa mga araw na ito!
      courseF_playlab_variables1a_instruction: Ang mga variable ay maaaring gamitin
        para magtago ng mga teksto na gusto mong gamitin mamaya. Gawin si Kiki, ang
        soccer na manlalaro, na sumigaw ng "Goal!" sa pamamagitan ng pag-atas sa tekstong
        iyan sa `shout` na variable.
      courseF_playlab_variables1a_2018_instruction: Ang mga variable ay maaaring gamitin
        para magtago ng mga teksto na gusto mong gamitin mamaya. Gawin si Kiki, ang
        soccer na manlalaro, na sumigaw ng "Goal!" sa pamamagitan ng pag-atas sa tekstong
        iyan sa `shout` na variable.
      courseF_playlab_variables2_instruction: 'Ngayon, i-deoce ang pananalita ni Piratang
        Pegleg sa pamamagitan ng pagbago sa halaga ng mga variable sa dalawang mga
        lugar lang! \r

'
      courseF_playlab_variables2a_instruction: 'Ngayon, i-deoce ang pananalita ni
        Piratang Pegleg sa pamamagitan ng pagbago sa halaga ng mga variable sa dalawang
        mga lugar lang! \r

'
      courseF_playlab_variables2b RYAN CLONE_instruction: Maglakip ng variable na
        `color` sa gitna ng pangungusap sa pamamagitan ng paglagay nito sa bakanteng
        slot sa loob ng `join` na bloke.
      courseF_playlab_variables2b_instruction: Maglakip ng variable na `color` sa
        gitna ng pangungusap sa pamamagitan ng paglagay nito sa bakanteng slot sa
        loob ng `join` na bloke.
      courseF_playlab_variables2b_2018_instruction: Maglakip ng variable na `color`
        sa gitna ng pangungusap sa pamamagitan ng paglagay nito sa bakanteng slot
        sa loob ng `join` na bloke.
      courseF_playlab_variables3_instruction: Ang `ask` na bloke ay awtomatikong maglakip
        ng kahit anumang sagot ng gumagamit papunta sa variable na napili mo.
      courseF_playlab_variables3b_instruction: 'Tulungan si Kiki na makipag-usap kay
        Brian sa pamamagitan ng paggamit sa variable na `age` sa lahat ng mga lugar
        kung saan ang edad na `12` ay dapat gagamitin. '
      courseF_playlab_variables3bEdit_instruction: 'Tulungan si Kiki na makipag-usap
        kay Brian sa pamamagitan ng paggamit sa variable na `age` sa lahat ng mga
        lugar kung saan ang edad na `12` ay dapat gagamitin. '
      courseF_playlab_variables3b_josh_instruction: 'Tulungan si Kiki na makipag-usap
        kay Brian sa pamamagitan ng paggamit sa variable na `age` sa lahat ng mga
        lugar kung saan ang edad na `12` ay dapat gagamitin. '
      courseF_playlab_variables3b_josh_2018_instruction: "Help Kiki have a conversation\nwith
        Brian by using the variable `age` in all of the places where age `12`\nshould
        be used. "
      courseF_playlab_variables4_instruction: Maaari mo bang mahanap ang tamang variable
        sa loob ng toolbox para punan ang puwang?
      courseF_playlab_variables4b_instruction: Ilagay ang mga variable sa mga tamang
        lugar para malikha ang pag-uusap na ito.
      courseF_playlab_variables4b_2018_instruction: Ilagay ang mga variable sa mga
        tamang lugar para malikha ang pag-uusap na ito.
      courseF_playlab_variables5_instruction: Maaari mo bang mahanap ang tamang variable
        sa loob ng toolbox para punan ang puwang?
      courseF_playlab_variables5b_instruction: Ilagay ang lahat ng mga variable sa
        tamang lugar para ang kuwento ni Pegleg ay maging makabuluhan.
      courseF_playlab_variables5c RYAN Copy_instruction: Ating ihalo ang `ask` na
        bloke sa isang `if/else` na pahayag para makagawa ng laro!
      courseF_playlab_variables5c_instruction: Ating ihalo ang `ask` na bloke sa isang
        `if/else` na pahayag para masaya!
      courseF_playlab_variables5c_2018_instruction: Ating ihalo ang `ask` na bloke
        sa isang `if/else` na pahayag para masaya!
      courseF_playlab_variables6b_instruction: Isama-sama ang mga variable para makagawa
        ng isang masayang kuwento na aabot sa higit sa isang speech bubble para makapagsabi.
      courseF_playlab_variables6c_instruction: Sa huling bahagi ng yugtong ito, tayo
        ay bubuo ng isang laro na kinokontrol mo!
      courseF_playlab_variables6c_2018_instruction: Sa huling bahagi ng yugtong ito,
        tayo ay bubuo ng isang laro na kinokontrol mo!
      courseF_playlab_variables7b_instruction: Maglikha ng ilang mga katanungan at
        magbuo ng mga sagot sa iyong sariling kuwento.
      courseF_playlab_variables7b_2018_instruction: Maglikha ng ilang mga katanungan
        at magbuo ng mga sagot sa iyong sariling kuwento.
      courseF_playlab_variables7c_instruction: Gawin ang laro na gumawa ng isang bagay
        sa pamamagitan ng pagtanong sa gumagamit na hulaan ang kulay.
      courseF_playlab_variables7c_2018_instruction: Gawin ang laro na gumawa ng isang
        bagay sa pamamagitan ng pagtanong sa gumagamit na hulaan ang kulay.
      courseF_playlab_variables8b_instruction: Gamitin ang natutunan mo para makalikha
        ng isang pinahusay na eksena sa pagitan ng mga aktor.
      courseF_playlab_variables8c_instruction: Gamitin ang mga variables para gawin
        ang laro na mas personal.
      courseF_playlab_variables8c_2018_instruction: Gamitin ang mga variables para
        gawing mas personal ang laro.
      courseF_playlab_variables_challenge1_instruction: 'Gamitin ang mga blokeng ito
        para mapagawa ang mga aktor na magbahagi ng isang knock-knock na biro. '
      courseF_playlab_variables_challenge1_2018_instruction: 'Gamitin ang mga blokeng
        ito para mapagawa ang mga aktor na magbahagi ng isang knock-knock na biro. '
      courseF_playlab_variables_challenge2_instruction: Ang larong ito ay gumagamit
        ng mga variable para subaybayan ang mga puntos. I-tag ang Pusa para makakuha
        ng 2 puntos. I-tag ang Pingguwino para makakuha ng 3 puntos. Kapag ang Cat
        at ang Pingguwino ay nagkahawakan, bawasan ang puntos. Kumuha ng eksaktong
        10 puntos para manalo!
      courseF_playlab_variables_challenge2_2018_instruction: Ang larong ito ay gumagamit
        ng mga variable para subaybayan ang mga puntos. I-tag ang Pusa para makakuha
        ng 2 puntos. I-tag ang Pingguwino para makakuha ng 3 puntos. Kapag ang Pusa
        at ang Pingguwino ay nagkahawakan, bawasan ang puntos. Kumuha ng eksaktong
        10 puntos para manalo!
      courseF_playlab_variables_challenge3_instruction: Maaari mo bang malaman kung
        paano ang "Fortune Teller" na app na ito gumagana? I-click ang `MORE` para
        makita ang iyong mga hamon.
      courseF_video_createFunctions_instruction: Wala pa tayong video para sa paglikha
        ng mga functions. Ito ay isang placeholder.
      courseF_video_createFunctions_2018_instruction: Wala pa tayong video para sa
        paglikha ng mga functions. Ito ay isang placeholder.
      course_playlab_variables1_instruction: |-
        This is Pirate Pegleg.  He's awfully
        hard to understand these days!
      course_playlab_variables2_instruction: |
        Now, decode Pirate Pegleg's speech
        by changing the value of the variables in just two places! \r
      course_playlab_variables3_instruction: |
        Now, decode Pirate Pegleg's speech
        by changing the value of the variables in just two places! \r
      coursea_maze_ramp1_2018_instruction: |-
        For this puzzle, snap the blocks together
        and click "Run"!
      coursef_explore_CYOA_Witch_instruction: Maaari mong gawin ang anumang gusto
        mo sa play lab. Narito ang isang halimbawa ng pagpili ng iyong sariling paglalakbay
        na kuwento sa play lab.
      coursef_explore_playlab2_instruction: Maaari mong gawin ang anumang gusto mo
        sa play lab. Narito ang isang halimbawa ng kuwento sa play lab.
      coursef_explore_playlab_cat_game_instruction: Maaari mong gawin ang anumang
        gusto mo sa play lab. Narito ang isang halimbawa ng laro na maaari mong gawin.
      coursef_maze_ramp3_instruction: Mayroong isang ekstrang bloke na magiging sanhi
        nang pag-crash ng ibon. Itapon ito sa pamamagitan ng pagkaladkad nito palayo
        sa toolbox.
      coursef_maze_ramp3_2018_instruction: Mayroong isang ekstrang bloke na magiging
        sanhi na mag-crash ang ibon. Itapon ito sa pamamagitan ng pagkaladkad nito
        pabalik sa toolbox.
      drawings!_instruction: |-
        Draw the equilateral triangle - all the sides are the
        same!
      eventsIntro_instruction: Need a better playlab/events combo
      flappy_1_instruction: Maglakip ng bloke sa "when click" na bloke, at pindutin
        ang "Run". I-click o i-tap ang screen para mapagalaw si Flappy papunta sa
        target.
      flappy_11_instruction: Lumikha ng sarili mong Flappy na laro. Maari mong palitan
        ang lahat ng mga visuals at ang mga patakaran, kahit na ang grabidad. Kapag
        tapos ka na, pindutin ang Finish para masubukan ng mga kaibigan mo ang laro
        sa kanilang mga telepono.
      flappy_11_2018_instruction: |-
        Create your own Flappy game. You can change all
        the visuals and all the rules, even the gravity. When you're done, click
        Finish to let friends try your game on their phones.
      flappy_1_2018_instruction: |-
        Attach a block to the "when click" block, then
        press "Run". Click or tap the screen to move Flappy to the target.
      flappy_2_instruction: Ngayon na nadagdag na natin ang lupa. Maglakip ng bloke
        sa "when hit the ground" na bloke. Kailangan ng code mo na "TAPUSIN ANG LARO"
        kung bumagsak na si Flappy.
      flappy_2_2018_instruction: |-
        Now we've added some ground.  Attach a block to
        the "when hit the ground" block.  Your code needs to 'END GAME' when Flappy
        crashes.
      flappy_3_instruction: Ang "when run" na bloke ay magbibigay sa iyo ng paraan
        na mapatakbo ang code habang nagsisimula na ang laro. Subukang mag-set ng
        bilis ng antas at ang pagpagaspas papunta sa target.
      flappy_3_2018_instruction: |-
        The "when run" block allows you to run code when
        your game starts.  Try setting the level speed and flapping to the target.
      flappy_4_instruction: Si Flappy ay lilipad sa gitna ng mga balakid maliban nalang
        kung magsulat tayo ng code para babagsak siya. Maglakip ng bloke sa "when
        hit an obstacle" na bloke. Ang code mo ay kailangang matapos kung babagsak
        si Flappy sa unang set ng mga tubo.
      flappy_4_2018_instruction: |-
        Flappy will fly through obstacles unless you write
        code to make him crash. Attach a block to the "when hit an obstacle" block.
        Your code needs to 'END GAME' when Flappy crashes into the first set of
        pipes.
      flappy_5_instruction: Magdagdag tayo ng palapuntusan, at bilangin natin ang
        puntos habang nakalampas si Flappy sa mga balakid. Magdagdag ng "when pass
        an obstacle" na block, at pagkatapos ay magkakapuntos sa pamamagitan ng pagpapalipad
        kay Flappy sa unang set ng mga tubo.
      flappy_5_2018_instruction: |-
        Let's add a scoreboard, and count points when
        Flappy makes it past obstacles. Add to the "when pass an obstacle" block,
        and then score a point by flying Flappy through the first set of pipes.
      flappy_6_instruction: Tingnan kung makakapuntos ka pa rin kung gawin mong maliit
        o malaki ang pag-flap ni Flappy.
      flappy_6_2018_instruction: |-
        See if you can still score a point after making
        Flappy flap either a smaller or larger amount.
      flappy_7_instruction: Kasunod nito, subukan mong baguhin ang eskena sa pamamagitan
        ng paglakip ng isa pang bloke sa "when run" na bloke.
      flappy_7_2018_instruction: |-
        Next, try changing the scene by attaching another
        block to the "when run" block.
      flappy_8_instruction: Maari mong i-set ang mga visual kahit anumang oras, hindi
        lang kapag nagsisimula na ang laro. Subukang itakda ang iba-ibang eskena habang
        nangyayari ang ibang mga pangyayari, halimbawa, kapag madadaan ang isang balakid.
      flappy_8_2018_instruction: |-
        You can set visuals anytime, not just when the
        game starts. Try setting a RANDOM scene when other events happen, for example,
        when passing an obstacle.
      flappy_9_instruction: Para mahalo ang mga bagay-bagay, kapag natamaan ang isang
        balakid, sa halip na tapusin ang laro, subukang ibalik ang puntos sa 0.
      flappy_9_2018_instruction: Para mahalo ang mga bagay-bagay, kapag natamaan ang
        isang balakid, sa halip na tapusin ang laro, subukang ibalik ang puntos sa
        0.
      frozen circle function in circle_instruction: Ngayon ay lilikha tayo nang 20
        na nagpatung-patong na mga bilog, sa pamamagitan ng pag-ikot ng 18 degrees
        sa bawat bilog.
      frozen circle function with parameter_instruction: Narito ang isang "Create
        circle" na bloke na maaaring gumawa ng mga bilog na iba-iba ang laki. Maaari
        ka bang gumamit nito para makalikha ng malilit na bilog na 5 ang laki at isang
        malaking bilig na 10 ang laki?
      frozen circle function_instruction: Gamitin ang bagong "Create a circle" na
        bloke para lilikha ng tatlong nagpatung-patong na mga bilog. Huwag kalimutan
        ang pagtalon pasulong sa pagitan ng mga bilog.
      frozen circle_instruction: Ang bilog ay isang espesyal na hugis. Maaari mo bang
        matukoy kung ano ang numero na ipapalit sa patanong na marka para maguhit
        ang bilog?
      frozen cross rotate dense_instruction: 'Ating uulitin ito nang 90 beses! Ilang
        ulit ba nang 90 ang nasa loob ng 360? Hinti: Ito ay isang lubhang maliit na
        numero.'
      frozen cross rotate_instruction: Ngayon ay subukang ulitin ito nang 10 na ulit.
        Ilang degrees ba ang kakailanganin mong ikutin sa pagitan ng bawat linya?
      frozen cross_instruction: Magbalot ng "Repeat" na bloke sa paligid ng mga utos
        na ito mara makalikha ng plus na simbolo. Napansin mo ba na si Elsa ay maaaring
        makagalaw pasulong at paatras?
      frozen diamond mini snowflake_instruction: Alam mo ba na bawat niyebe ay iba-iba
        ang hugis? Tayo ay gagawa ng bagong niyebe sa pamamagitan ng paggamit ng isa
        pang "Repeat" na bloke para ulitin ang isang parigapay nang 4 na beses, lumiko
        pakanan ng mga 90 degrees sa pagitan ng bawat parigapay.
      frozen diamond snowflake_instruction: Ngayon, tayo ay lilikha ng bagong niyebe
        sa pamamagitan ng repeat na bloke para ulitin ang parigapay nang 10 beses,
        pagbaling pakanan ng mga 36 degrees sa pagitan ng bawat isa.
      frozen diamond_instruction: Gumamit ng isang repeat sa paligid ng mga blokeng
        ito para makalikha ng isang parigapay. Ito ay pareha lang ng isang parihaba
        ngunit may iba't ibang mga anggulo. Ang isang ito ay mayroong 60 degree at
        120 degree na mga anggulo sa halip na lahat na 90 degree na mga anggulo.
      frozen freeplay_instruction: Ikaw ay pormal na naging dalubhasang artista! Maglikha
        ng isang kamangha-manghang taglamig na lugar.
      frozen line_instruction: Hi! Ako si Elsa ng Arendelle. Tulungan akong maglikha
        ng isang linya.
      frozen perpendicular_instruction: Ngayon ay ating tingnan kung maaari tayong
        maglikha ng dalawang mga linya na mga 90 degree ang anggulo sa bawat isa.
        Kakailanganin mong gumamit ng "Turn" na bloke pati na rin ang "Move" na bloke.
      frozen snowflake branch_instruction: Subukang gamitin ang "Create a snowflake
        branch" na bloke para maglikha ng tatlong mga sanga, kung saan ay nagsimulang
        magmukhang isang niyebe.
      frozen snowflake full_instruction: Ngayon ay ating ulitin ito nang 8 beses para
        makagawa ng magandang niyebe!
      frozen snowflower_instruction: Ang kakaibang mga pattern ng yelo ay maaaring
        ilikha gamit ang simpleng mga hugis. Maaari ka bang maglikha ng patter sa
        pamamagitan ng pag-ulit-uit sa 5 mga bilog na may laki na 5 at 5 mga bilog
        na 10 ang laki?
      frozen square iterative_instruction: Mukhang tayo ay nasa kalagitnaan pa ng
        paggawa ng ating parisukat. Ating ipagsama ang 4 na linya para maglikha ng
        parisukat.
      frozen square loop 3x_instruction: Tayo ay maglikha ng tatlong mga parisukat,
        umikot pagkatapos sa bawat parisukat. Siguraduhing umikot nang 120 degrees
        bago maglikha ng bawat bagong parisukat.
      frozen square loop_instruction: Hi, ako si Anna ng Arendelle! Tayo ay gagawa
        ng parisukat gamit ang "Repeat" na bloke, kung saan ay gumagamit ng kaunting
        mga bloke. Ilang beses (???) ba dapat ang "Repeat" na bloke mag-loop sa mga
        bloke sa loob nito para makagawa ng parisukat?
      frozen square snowflake_instruction: Maaari ka bang maglikha ng niyebe gamit
        ang "Repeat" na bloke para makagawa ng parisukat nang 10 beses, at ang "Turn"
        na bloke ay liliko nang 36 degrees sa pagitan ng bawat parisukat?
      grade1_adventurer_loops1_instruction: Four piles of gold!  Collect all four.
      grade1_adventurer_loops10_instruction: |-
        Help me get all of the gold from this
        cave.
      grade1_adventurer_loops2_instruction: |-
        How can Laurel collect all five piles
        of gold using only one `E -->` block?
      grade1_adventurer_loops3_instruction: |-
        Can you fix Laurel's path to get all
        of this gold?
      grade1_adventurer_loops4_instruction: "Add to the code from the last puzzle\nto
        get all of the gold. "
      grade1_adventurer_loops5_instruction: |-
        What should you add to this code to
        get all of the gold?
      grade1_adventurer_loops6_instruction: Write the code to get all of this gold.
      grade1_adventurer_loops7_challenge_instruction: |-
        **Challenge: ** The gold goes
        all the way down these stairs!  Write the code to help me get it all.
      grade1_adventurer_loops8_challenge_instruction: |-
        Challenge: Try this staircase
        now! It has an extra spike at the end you'll have to climb.
      grade1_adventurer_loops9_instruction: |-
        Help me get the gold from this deep
        valley.
      grade1_adventurer_loopsFP_instruction: |-
        Eureka!  Collect as much gold as you
        can!
      grade1_adventurer_loopsPre_instruction: |-
        This is Laurel the Adventurer!  Can
        you move her around and get gold?
      grade1_artist_loops1_instruction: |-
        The Artist is trying to draw a line six
        times, but can't get it right.  Can you help?
      grade1_artist_loops2_instruction: |-
        Help the artist draw a line 7 times to make
        a garden wall.
      grade1_artist_loops3_instruction: "Now we need to get the soil ready to plant.\nFind
        the bugs in the code and help the artist prepare the ground. "
      grade1_artist_loops4_instruction: |-
        Time to fix the stairs!  Repeat this pattern
        five times so the artist can reach the top of the bushes.
      grade1_artist_loops5_instruction: |-
        Behind the bushes there is a beautiful vine
        full of flowers.  Can you climb the vine and see where it goes?
      grade1_artist_loops6_instruction: |-
        **Challenge:**  It's a hidden garden! Let's
        walk around.
      grade1_artist_loops7_instruction: |-
        The flowers down here are so pretty.  Let's
        take a closer look.
      grade1_artist_loops7a_instruction: |-
        **Challenge:**  Lovely! Let's take a walk
        around the garden.
      grade1_artist_loops7b_instruction: |-
        Time to head home. Can you fix this ladder
        to help the artist get down?
      grade1_artist_loops8_instruction: |-
        Let's take the short way home, over the
        pond. Can you help the artist stay on the stones?
      grade1_artist_loops9_instruction: I still need a story for this puzzle
      grade1_artist_loopsFP_instruction: |-
        Use what you have learned to draw a picture
        of what you think the artist saw when he got home.
      grade1_maze_sequence1_instruction: Isang bug! Ayusin ang code para makapunta
        ako sa baboy.
      grade1_maze_sequence10_instruction: Move me around the TNT to get to the pig.
      grade1_maze_sequence2_instruction: Ayusin ang code para makapunta ako sa baboy!
      grade1_maze_sequence3_instruction: |
        Can you add 2 blocks to get the bird to
        the pig.
      grade1_maze_sequence4_instruction: Now try this puzzle from the start!
      grade1_maze_sequence5_instruction: |-
        Move one way, then another to get me to
        the pig!
      grade1_maze_sequence6_instruction: |-
        Figure out what is missing and then add
        blocks to get me to the pig!
      grade1_maze_sequence7_instruction: |-
        Your turn!  What do you need to do to get
        the bird to the pig?
      grade1_maze_sequence8_instruction: |-
        Debug this level by adding blocks to get
        me to the pig!
      grade1_maze_sequence9_instruction: 'Go around the TNT to get me to the pig!

'
      grade1_maze_sequenceA_instruction: |-
        Challenge: Move me around the TNT to get
        to the pig.
      grade1_maze_sequenceB_instruction: Fix the bugs to get the bird to the pig.
      grade1_maze_sequenceC_instruction: It's all you!  Get the bird to the pig.
      grade1_maze_sequenceD_instruction: 'It''s a pig party!  Get those pigs! '
      grade1_playlab_events1_instruction: |-
        This game is called "Play Lab".  See
        if you can figure out what each block does.
      grade1_playlab_events1a_instruction: |-
        Make your robot say "Hello!" when the
        button is clicked.
      grade1_playlab_events2_instruction: |-
        This program makes Robin fly.  Can you
        get her to vanish when you click her?
      grade1_playlab_events2a_instruction: |-
        Edit the code so that when the second
        bird is clicked, your program plays a sound!
      grade1_playlab_events3_instruction: |
        This program makes Robin fly.  Can you
        make the robot jump when you press the up button?\r
      grade1_playlab_events3a_instruction: |-
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      grade1_playlab_events4_instruction: |-
        Add a block to make Robin vanish when
        she collides with the robot.
      grade1_playlab_events4a_instruction: |-
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      grade1_playlab_events5_instruction: |-
        Add a block to the 'when run' event
        that starts the dragon flying.
      grade1_playlab_events5a_instruction: |-
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      grade1_playlab_events6_instruction: |-
        Add a block to the 'when actor 1 clicked'
        event that makes the dragon return to the middle of the screen.
      grade1_playlab_events7_instruction: |-
        Add a block so that when you push the
        left arrow button, the knight surges toward the dragon.
      grade1_playlab_events8_instruction: |-
        Add a block so that when the knight collides
        with the dragon, it plays a sound.
      grade1_playlab_events9 RYAN COPY_instruction: |-
        Now, have Robin wait a second,
        then come back after she vanishes.
      grade1_playlab_events9_instruction: |-
        Now, add a block to keep score each time
        the knight hits the dragon.
      grade1_playlab_eventsFP_instruction: |-
        Use your imagination. What can you do
        to make this game more fun?
      grade1_sequence_pre_instruction: |-
        Play with these blocks to see what they make
        the bird do!
      grade1_video_frustrationRainbow_instruction: |-
        This video describes the rainbow
        of frustration and introduces persistence.
      grade2_CaringForNewPet_0_instruction: |-
        For this puzzle, drag all of the blocks
        together and click "Run" to watch it go!
      grade2_CaringForNewPet_1_instruction: |-
        Drag an extra `move forward` block out
        of the toolbox to finish your code.
      grade2_CaringForNewPet_10_instruction: Dalhin ako sa baboy!
      grade2_CaringForNewPet_11_instruction: |-
        "Keep calm and help me find the bad
        pig."
      grade2_CaringForNewPet_2_instruction: |-
        "This pig is ruffling my feathers."\r
        \r
        There
        is one extra block that is going to cause the bird to crash. Throw it away
        by dragging it back to the toolbox.
      grade2_CaringForNewPet_2courseC_maze_programming3_instruction: Mayroong isang
        ekstrang bloke na magiging sanhi na babagsak ang ibon. Itapon ito palayo sa
        pamamagitan ng pagkaladkad nito pabalik sa toolbox.
      grade2_CaringForNewPet_3_instruction: |-
        "Trace the path and lead me to the
        silly pig. Avoid TNT or feathers will fly!"
      grade2_CaringForNewPet_3D_instruction: |-
        "Follow this path to get me to the
        pig!"
      grade2_CaringForNewPet_4_instruction: |-
        "Keep calm and help me find the bad
        pig. Otherwise I might get angry!"
      grade2_CaringForNewPet_5_instruction: Dalhin ako sa baboy!
      grade2_CaringForNewPet_6_instruction: |-
        Challenge: Guide me to the green evilness!
        (Watch out for TNT)
      grade2_CaringForNewPet_7D_instruction: |-
        Challenge: This code has a lot of bugs.
        You'll need to remove blocks and add blocks.
      grade2_MakeDogTag_1_instruction: |-
        Drag blocks onto the screen to have the artist
        draw over the grey lines in the picture. (Each line is 100 pixels long)
      grade2_MakeDogTag_10_instruction: Ngayon, gumuhit ng kahit anung gusto mo!
      grade2_MakeDogTag_2_instruction: |-
        This spaceship needs a window!\r
        \r
        Each
        side of the inner square is 100 pixels and all of the angles are 90 degrees.
      grade2_MakeDogTag_3_instruction: Tulungan mo akong tapusin ang bahay para sa
        pusang ito.
      grade2_MakeDogTag_4_instruction: '"Ang bahay na ito ay nangangailangan ng isang
        bubong! Iguhit ang tatsulok. Hint: lahat ng tatlong panig ay parehong haba".'
      grade2_MakeDogTag_5_instruction: |-
        "Now a tag for Belle!"\r
        \r
        Draw this
        diamond with 200 pixel sides.
      grade2_MakeDogTag_6_instruction: Libreng laro! Gumuhit ng anumang gusto mo.
      grade2_MakeDogTag_7_instruction: |-
        One more tag.  This is a triangle for Pi.\r
        (Each
        side is 150 pixels)
      grade2_MakeDogTag_8_instruction: Ngayon ay ating ikonekta ang isang bungkos
        ng mga V nang sama-sama sa isang loop.
      grade2_MakeDogTag_9_instruction: |-
        Rebuild the code from the last puzzle, but
        this time, add a left turn of 30 degrees inside the loop. Now, repeat it 24
        times instead of 8.
      grade2_MakeDogTag_BFP_instruction: |-
        "Hi, I'm an artist. You can write code
        to make me draw almost anything."\r
        \r
        Play with the blocks in the toolbox
        to see what they do!
      grade2_MakeDogTag_FP_instruction: |-
        Freeplay: What shape will you make the tag
        for your pet?
      grade2_PuppyLoops_1_instruction: |-
        Can you get me to the pig using 5 of the
        same kind of blocks?
      grade2_PuppyLoops_10_instruction: |-
        Ang aking guro ay nagsasabi na dapat kung tapusin kung ano ang aking nasimulan!\r
        \r
        Tulungan akong tapusing ang aking pinwheel. Maaari mo bang matukoy kung ano ang problema?
      grade2_PuppyLoops_2_instruction: |-
        Can you get to the pig by creating a loop
        that uses only one `move forward` block inside of a `repeat`?
      grade2_PuppyLoops_3_instruction: |-
        Get me to the pig! Solve this puzzle by creating
        a loop!
      grade2_PuppyLoops_4_instruction: |-
        In this puzzle, two `repeat` loops will help
        you get to the pig with the fewest number of blocks!
      grade2_PuppyLoops_5_instruction: Maaari mo bang malaman ang pinakamabilis na
        paraan para madala mo ako sa baboy?
      grade2_PuppyLoops_6_instruction: |-
        Loops even work with more than one block
        inside!  Can you loop this sequence to get me to the pig?
      grade2_PuppyLoops_7_instruction: Gamitin ang natutunan mo para madala ako sa
        mirasol!
      grade2_PuppyLoops_8_instruction: |-
        Ang code na ito para sa bigote ng pusa ay mali.
        \r
        \r
        Ayusin ang code para maiguhit ang mga bigote na pareho ang haba ng lahat.
      grade2_PuppyLoops_9_instruction: |-
        Mung ang C sa code ay naguhit nang paurong!\r
        \r
        Maaari mo ba itong gawing parang C ulit?
      grade2_collector_10_instruction: Malapit ka nang matapos! Magkolekta ng maraming
        mga piraso ng kayamanan hangga't kaya mo para tapusin ang yugto!
      grade2_collector_10_2018_instruction: |-
        You're almost done! Collect as many
        pieces of treasure as you can to finish the stage!
      grade2_collector_2_instruction: Papuntahin si Laurel sa ginto, pagkatapos ay
        gumamit nang `collect` para pulotin ito.
      grade2_collector_3_instruction: Ilagay ang mga blokeng ito para makolekta ang
        lahat ng ginto at malutas ang palaisipan.
      grade2_collector_4_instruction: Ang pagkasunod-sunod ay mahalaga! Ang mga bloke
        na kakailanganin mo ay nasa iyong workspace na, ngunit hindi konektado. Isunod-sunod
        ang mga blokeng ito para malutas ang palaisipan.
      grade2_collector_5_instruction: Ang mga blokeng ito ay nasa maling pagkakasunod-sunod.
        Maaari mo bang ayusin ang mga ito?
      grade2_collector_6_instruction: Baguhin ang pagkakaayos ng mga bloke para kolektahin
        ang lahat ng mga kayamanan.
      grade2_collector_7_instruction: Hamon na palaisipan! Gamitin ang mga bloke mula
        sa toolbox para kolektahin ang lahat ng mga kayamanan.
      grade2_collector_8_instruction: '"Panatilihin ang magandang trabaho! Tulungan
        akong kolektahin ang lahat ng mga barya."'
      grade2_collector_9_instruction: '*"Ating kunin ang lahat ng mga barya!"*'
      grade2_collector_9a_instruction: "**Hamon:** Kunin ang lahat ng mga barya."
      grade2_collector_A_instruction: Tulungan si Laurel na kolektahin ang lahat ng
        mga kayamanan.
      grade2_collector_A_2018_instruction: Tulungan si Laurel na kolektahin ang lahat
        ng mga kayamanan.
      grade2_collector_pre1_instruction: |-
        "Hi, ako si Laurel. Ngayon ako ay naghahanap ng mga kayamanan sa pasyalan ng aso!" \r
        \r
        Paglaruan ang mga bloke para makita kung maaari mo bang matulungan si Laurel na magkolekta ng iilang ginto.
      grade2_maze_debuggingFP_instruction: |-
        "Now, help me sneak up on the pig any
        way you want to!"
      grade2_maze_debuggingPre_instruction: |-
        Play with these blocks to see what they
        make the bird do!
      grade2_maze_intro10_instruction: Solve this puzzle.
      grade2_maze_intro2_instruction: |-
        Welcome to Code Studio! Here you will learn
        to use blocks to build programs. Press `Run` to run a program now!
      grade2_maze_intro3_instruction: |-
        The `workspace` is where you will create all
        of your programs. Can you guess what this program does? Press the “Run” button
        to find out.
      grade2_maze_intro4_instruction: |-
        Drag a block from the toolbox into the workspace.
        Connect it to the other blocks.
      grade2_maze_intro6_instruction: "That’s it!  Now we’re ready to try to solve\na
        few puzzles. "
      grade2_maze_intro7_instruction: This time, try something a bit more challenging.
      grade2_maze_intro8_instruction: |-
        This is a challenge puzzle.  It is meant to
        be hard and will probably take you a couple of tries to solve.  If you don’t
        solve it after several tries, don’t worry!  It will be in the Play Zone at
        the end of the stage and you can try it again when you’ve had more practice.
      grade2_maze_intro9_instruction: Solve this puzzle.
      grade2_playlab_project_1_instruction: Ngayon, magsulat ng programa para mapagawa
        si Waddles na gumalaw sa paligid gamit ang taas / baba / kaliwa / kanan na
        mga key para matamaan ang lahat ng mga target!
      grade2_playlab_project_2_instruction: |-
        The `repeat forever` block allows you
        to run code over and over forever. Can you attach blocks to move Chomp the
        Dino (actor 2) up and down forever?
      grade2_playlab_project_3_instruction: |-
        Can you have Waddles (actor 1) say "Ouch!"
        and play a "hit" sound if he runs into Chomp? \r
        \r
        When you're done,
        play the game to make that happen.
      grade2_playlab_project_4_instruction: |-
        Maaari ka bang magdagdag ng mga bloke para makaiskor ng puntos kapag si Waddles ay nagkatagpo kay Octavia (aktor 3)?\r
        Maglaro sa laro at pagalawin si Waddles gamit ang mga arrow hanggang sa makapuntos ka!
      grade2_playlab_project_5_instruction: |-
        Add blocks to the `when run` event to
        change the background and the speed of Waddles.\r
        \r
        Play the game and move
        Waddles with the arrows until you score.
      grade2_playlab_project_6_instruction: |-
        Create your own story. When you're
        done, click "Finish" to share with friends.
      grade2_puppy_loops2_instruction: |-
        Can you get to the pig by creating a loop
        that uses only one `move forward` block inside of a `repeat`?
      grade2_puppy_loops3_instruction: |-
        "Get me to the pig!"\r
        \r
         Solve this
        puzzle by creating a loop!
      grade2_puppy_loops4_instruction: |-
        In this puzzle, two `repeat` loops will help
        you get to the pig with the fewest number of blocks!
      grade2_puppy_loops5_instruction: |
        Can you figure out the fastest way to get
        me to the pig?
      grade2_puppy_loops6_instruction: |-
        "This pig is ruffling my feathers!"\r
        \r
        Loops
        even work with more than one block inside!  Can you loop this sequence?
      grade2_puppy_loops7_instruction: |-
        "Get me to the pig!"\r
        \r
        Use what you
        learned in other puzzles!
      grade3_AboutMyRobot_1_instruction: |-
        Make your robot say "Hello!" when the
        button is clicked.
      grade3_AboutMyRobot_2_instruction: |-
        Edit the code so that when the second bird
        is clicked, your program plays a sound!
      grade3_AboutMyRobot_3_instruction: |-
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      grade3_AboutMyRobot_4_instruction: |-
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      grade3_AboutMyRobot_5_instruction: |-
        About My Robot Project! Write code so that
        clicking on each bird shows a new fact about your robot.
      grade3_AboutMyRobot_TeacherIDo_instruction: |-
        Run this puzzle and click on the
        robot to see what happens!
      grade3_ConditionalsElse_1_instruction: Ang ulap na ito ay nakaharang sa aking
        paningin. Suriin kung makita kung mayroong isang bulaklak sa ilalim ng ulap,
        at kumuha lang ng nektar kung mayroong bulaklak. Maging maingat, maaari itong
        magbago!
      grade3_ConditionalsElse_2_instruction: |-
        Mas marami pang mga ulap! \r
        \r
        Tingnan sa baba ng bawat ulap para makita kung ito ba ay nagtatago ng bulaklak bago ikaw makakakuha ng nektar.  \r
        \r
        Tandaan:
        Hindi lahat ng mga ulap ay magkapareha!
      grade3_ConditionalsElse_3_instruction: |-
        Now I just want to make honey. Some
        of these clouds might have honeycombs under them. Be sure to check each cloud!
      grade3_ConditionalsElse_4_instruction: Minsan ang ulap na ito ay nagtatakip
        sa bulaklak, at minsan tinatakpan nito ang pulot-pukyutan! Gamitin ang if/else
        na bloke para magkolekta ng nektar kung ito ay isang bulaklak, kung hindi
        gumawa ng pulot (dahil ito ay isang pulot-pukyutan).
      grade3_ConditionalsElse_5_instruction: |-
        There will be either a flower or a
        honeycomb under each of those clouds!\r
        \r
        Use the `if/else` block to collect
        nectar if there is a flower.\r
        Otherwise, make honey (because there is a
        honeycomb).
      grade3_ConditionalsElse_6_instruction: |-
        I am not sure how much nectar this
        flower has, but I know it has either 1, 2, or 3 nectar. \r
        \r
        Combine the
        conditional blocks (`if` and/or `if/else`) to only get as much nectar as the
        flower has. \r
        \r
        Remember, the amount of nectar can change each time you
        run the puzzle!
      grade3_ConditionalsElse_7_instruction: |-
        Ang mga bulaklak na mga ito ay maaaring magkaroon ng 3, 2, o 1 na nektar.
        \r
        \r
        Kumpletohin ang `check purple flower` na function at gamitin ito para kolektahin ang lahat ng mga nektar na nasa mga bulaklak.
      grade3_ConditionalsElse_8_instruction: |-
        Write the function for `check flower
        make honey`. \r
        \r
        Your function should check if the purple flower has 3,
        2, or 1 nectar and get all of the nectar. \r
        Then, move forward and make
        honey.
      grade3_ConditionalsElse_9_instruction: |
        **Assessment:** This cloud is either
        hiding a flower with one nectar or a honeycomb that needs one honey.  \r
        \r
        Complete
        the `get nectar or make honey` function, then call it to collect the nectar
        or honey. \r
      grade3_ConditionalsElse_TeacherIDo_instruction: |-
        There will be either a flower
        or a honeycomb under each of those clouds!\r
        \r
        Use the `if/else` block
        to collect nectar if there is a flower.\r
        Otherwise, make honey (because
        there is a honeycomb).
      grade3_Conditionals_1 BAD_instruction: Maggamit ng loop para ikolekta ang lahat
        ng nektar.
      grade3_Conditionals_1_instruction: |-
        Ako ay isang gutom na bubuyog! \r
        Tulungan akong kolektahin ang lahat ng mga nektar mula sa mga bulaklak gamit ang pinakamaliit na bilang ng mga bloke.
      grade3_Conditionals_10 BAD_instruction: |-
        Tipunin ang nektar mula sa mga hanay ng mga bulaklak!
        Gumamit ng naka-nest na loop.
      grade3_Conditionals_10_instruction: |-
        Mayroong maraming nangyari dito!\r
        \r
        Gamitin kung ano ang natutunan mo para makolekta ang lahat ng nektar at pagkatapos ay makagawa ng pulot.
      grade3_Conditionals_11 BAD_instruction: 'Pagtatasa: Gamitin ang `while` loop
        para kolektahin ang lahat ng nektar mula sa mga bulaklak na ito.'
      grade3_Conditionals_11_instruction: |-
        Ating ipagsama ang lahat!\r
        \r
        Gamitin ang iyong natutunan para matulungan akong magkolekta sa mga bulaklak lang na mayroong mga nektar, gamit ang iilang mga bloke lang hangga't maaari. Huwag kalimutang gumawa ng mga pulot sa dulo.
      grade3_Conditionals_12_instruction: |-
        Ang pattern ng baitang na hagdan ay dapat magmukhang pamilyar. \r
        \r
        Maaari mo bang magkolekta sa mga bulaklak lang na mayroong mga nektar, gamit ang iilang mga bloke lang hangga't maaari?
      grade3_Conditionals_13_instruction: |-
        Assessment: Collect all of the nectar.
        Be careful not to try to collect nectar from a purple flower if it doesn't
        have any.
      grade3_Conditionals_2_instruction: "Tingnan ang lahat ng mga nektar na iyan!\\r\n\\r\nTulungan
        akong kolektahin ang nektar at gumawa ng pulot gamit ang iilang mga bloke
        lang hangga't maaari.  "
      grade3_Conditionals_3_instruction: |-
        Be careful not to collect nectar from a
        purple flower if it doesn't have any. \r
        You must first check if the nectar
        is equal to 1 using the `if nectar` block.
      grade3_Conditionals_4_instruction: Suriin kung bulaklak na ito gamit ang "if"
        na bloke para masuri kung mayroon pang kahit anong nektar na makukuha.
      grade3_Conditionals_5_instruction: Magkolekta ng nektar mula sa bawat bulaklak
        kung mayroon lang itong laman.
      grade3_Conditionals_6_instruction: |-
        Ang bukiring ito ay mayroon mga pula at lilang mga bulaklak.
        Ang mga pulang bulaklak ay mayroong kilalahang halaga ng nektar, ngunit ang lilang bulaklak ay hindi nalalaman.
        Kolektahin ang lahat ng mga nektar.
      grade3_Conditionals_7_instruction: Kolektahin ang lahat ng mga nektar mula sa
        bawat bulaklak.
      grade3_Conditionals_8_instruction: "Ako ay nagtaka kung ano ang nandoon!\\r\n\\r\nTulungan
        akong lumipad palibot sa bakuran at magkolekta lang sa mga bulaklak na may
        mga nektar. "
      grade3_Conditionals_9_instruction: |-
        Help me find all of the nectar using as
        few blocks as possible!
      grade3_Conditionals_TeacherIDo_instruction: |-
        Check this flower with an "if"
        block to see if there is any nectar available.
      grade3_Debugging_1_instruction: Ang mga blokeng ito ay nakaka-inis sa akin.
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar.
      grade3_Debugging_5_instruction: |-
        That flower looks tasty! \r
        \r
        Fix the error(s)
        to collect all of the nectar.  You can now use both run and step.
      grade3_Debugging_6_instruction: |-
        Napakatamis na hamon!\r
        \r
        Ayusin ang (mga) kamalian para makolekta ang lahat ng mga nektar.
      grade3_Debugging_7_instruction: Ayusin ang (mga) kamalian para makolekta ang
        lahat ng mga nektar at gawin ang lahat ng mga pulot.
      grade3_Debugging_9_instruction: |-
        "Maging" matiyaga sa isang ito!\r
        \r
        Kailangan mong ayusin ang iilang mga bagay sa programang ito para makolekta ang lahat ng nektar at magawa ang lahat ng mga pulot.
      grade3_Debugging_TeacherIDo_instruction: |-
        These blocks are really bugging me.
        Fix the error(s) to collect all of the nectar and make all of the honey.
      grade3_Loops_1_instruction: "Can you help me collect the nectar from these\nflowers? "
      grade3_Loops_10_instruction: |-
        Sadyang abala na bubuyog!\r
        \r
        Tulungan ang bubuyog na magkolekta sa lahat ng nektar at gawin ang lahat ng mga pulot gamit ang pinakakaunting mga bloke hangga't maaari.
      grade3_Loops_11_instruction: |-
        Ang hugis ng landas na ito ay kakaiba sa iba.\r
        \r
        Maaari mo bang kolektahin ang lahat ng mga nektar gamit ang pinakakaunting mga bloke hangga't maaari?
      grade3_Loops_12_instruction: Mahahanap mo ba ang pinakamadaling daan para makolekta
        ang lahat ng nektar at magawa ang lahat ng mga pulot ng bubuyog?
      grade3_Loops_2_instruction: Sa oras na ito, gumamit ng loop para tipunin ang
        lahat ng mga nektar.
      grade3_Loops_3_instruction: Gamitin ang `repeat` na loop para kolektahin ang
        lahat ng mga nektar.
      grade3_Loops_4_instruction: |-
        Now use the `repeat` block to collect all of the
        nectar and make all of the honey.
      grade3_Loops_5_instruction: Isang napakagandang bukirin ng mga bulaklak!  Tulungan
        ang bubuyog na bisitahin ang bawat isa.  Mahahanap mo ba ang daan para magawa
        ito gamit ang mas kaunti kaysa sa 7 na mga bloke?
      grade3_Loops_6_instruction: |-
        Ilang beses ba maaaring makakatulong ang mga loop sa iyo sa palaisipang ito? \r
        \r
        Ang mga loop ay iyong kaibigan! Gumamit ng iilan sa kanila para makumpleto ang palaisipang ito gamit ang pinakakaunting mga bloke hangga't maaari.
      grade3_Loops_7_instruction: |-
        Ang mga bulaklak na iyon ay parang masarap!\r
        \r
        Magkolekta ng nektar mula sa bawat bulaklak gamit ang pinakakaunting mga bloke hangga't maaari.
      grade3_Loops_8_instruction: Kolektahin ang lahat ng nektar at gawin ang lahat
        ng mga pulot gamit ang pinakakaunting posibleng mga bloke.
      grade3_Loops_9_instruction: Magkolekta ng nektar mula sa bawat bulaklak at gumawa
        ng pulot sa bawat pulot-pukyutan gamit ang pinakakaunting mga bloke hangga't
        maaari.
      grade3_Loops_TeacherIDo_instruction: |-
        Those flowers look tasty!\r
        \r
        Collect
        nectar from each of the flowers using the fewest blocks possible.
      grade3_RunningFarm_1_instruction: |-
        Use conditionals to make sure that you pick
        all of the corn, but don't disturb the stalks where nothing is growing yet.
      grade3_RunningFarm_10_instruction: |-
        Collect all of the corn and lettuce, then
        pick the pumpkin.
      grade3_RunningFarm_11a_instruction: |-
        Collect all of the corn and lettuce, then
        pick the pumpkin.
      grade3_RunningFarm_2_instruction: |-
        Help the farmer collect both corn and lettuce
        from the field.
      grade3_RunningFarm_3_instruction: |-
        *"Corn, lettuce, AND pumpkins! Help me
        harvest them all."*
      grade3_RunningFarm_4_instruction: |-
        Help the farmer pick all of the lettuce
        in each cluster before moving on to the next bunch.
      grade3_RunningFarm_5_instruction: |-
        This field has clusters of corn, lettuce,
        and pumpkins all growing together.  Can you collect them all?
      grade3_RunningFarm_6_instruction: |-
        Can you figure out how to pick the pumpkin?  Make
        sure to collect all of the corn along the way!
      grade3_RunningFarm_7_instruction: |-
        **Challenge:** Collect all of the corn and
        lettuce, then pick the pumpkin.
      grade3_RunningFarm_8_instruction: |-
        Have wheat and potatoes planted randomly
        at various growth stages. Now we introduce multiple while loops (stacked)
        nested inside a loop. The two while loops in the solution represent different
        while loops (while there is potato and while there is wheat)
      grade3_RunningFarm_9_instruction: |-
        Add Weeds element. Weeds start out in random
        spots in the field and spread more and more rapidly as time goes on.. This
        puzzle is the culminating game-like puzzle. Students should have the event
        blocks (up, down, left, right, spacebar) available in the toolbox to use if
        they want. The entire field should be planted randomly with mostly wheat,
        potatoes, and a few weeds.
      grade3_RunningFarm_TeacherIDo_instruction: |-
        Teacher I Do: Show students how
        they can use loops and conditionals to plant and harvest 2 rows of crops.
      grade3_RunningFarm_TeacherIDo2_instruction: |-
        Teacher I Do: Show students how
        to use loops to harvest many crops.
      grade3_bee_Conditionals_new4_instruction: |-
        Now try checking all of these flowers
        with "if" blocks to see if there is any nectar available.
      grade3_bee_conditionals_new1a_instruction: |-
        Help the bee collect all of the
        nectar. \r
        \r
        You can only collect nectar from flowers, but you can check
        any space to see if there is a flower.
      grade3_bee_conditionals_new1b_instruction: |-
        Help the bee collect all of the
        nectar. You can only collect nectar from flowers, but you can check any space
        to see if there is a flower.
      grade3_bee_conditionals_new2_instruction: |-
        Collect all of the nectar using
        as few blocks as possible
      grade3_bee_conditionals_new2a_instruction: |-
        Get all of the nectar using as
        few blocks as possible.
      grade3_bee_conditionals_new2b_instruction: |-
        Collect all of the nectar. You
        can only collect nectar from flowers, but you can check any space to see if
        there is a flower.
      grade3_bee_conditionals_new3a_instruction: |-
        Collect all of the nectar or make
        all the honey. You can only collect nectar from flowers and make honey from
        honeycombs. Check any space to see if there is a flower or honeycomb.
      grade3_bee_conditionals_new3b_instruction: |-
        Collect all of the nectar and make
        all of the honey.
      grade3_bee_conditionals_new3c_instruction: |-
        Help the bee collect all of the
        nectar and make all of the honey! Hint: Try using one loop inside of another
        loop.
      grade3_bee_conditionals_quantum1_instruction: |-
        Check to see if there's a flower
        under the cloud. If there's a flower, get nectar.
      grade3_bee_conditionals_quantum2_instruction: |
        Check underneath every cloud
        to see if it is hiding a flower before you get nectar.  \r
      grade3_bee_conditionals_quantum3_instruction: |-
        Some of these clouds might have
        honeycombs under them.  Be sure to check if a honeycomb is hiding behind each
        cloud!
      grade3_bee_conditionals_quantum4_instruction: |-
        Use the `if/else` block to collect
        nectar at flowers and make honey at honeycomb.
      grade3_bee_conditionals_quantum5_instruction: |-
        Use the `if/else` block to collect
        nectar if there is a flower.\r
        Otherwise, make honey (because there is a
        honeycomb).
      grade3_maze_Loop1_instruction: "Assessment:  Get me to the sunflower using\nonly
        5 blocks! "
      grade3_maze_loops1_instruction: Get the zombie to the sunflower.
      grade3_maze_loops2_instruction: "Get the zombie to the sunflower using the\nfewest
        blocks possible!  "
      grade3_maze_loops2a_instruction: |-
        Get the zombie to the sunflower using the
        fewest number of blocks possible.
      grade3_maze_loops3_instruction: |-
        Get the zombie to the sunflower using only
        the blocks available.
      grade3_maze_loops4_instruction: |-
        Get the zombe to the sunflower using the fewest
        number of blocks possible!
      grade3_maze_loops5_instruction: Dalhin ako sa mirasol gamit ang iilang mga bloke
        hangga't maaari!
      grade3_maze_nestedLoops1_instruction: |-
        Can you get me to the pig using 5 of
        the same kind of blocks?
      grade3_maze_nestedLoops2_instruction: |-
        Can you get to the pig by creating a
        loop that uses only one `move forward` block inside of a `repeat`?
      grade3_maze_nestedLoops3_instruction: |-
        Get me to the pig! You can only use
        one move forward block this time
      grade3_maze_nestedLoops4_instruction: |-
        In this puzzle, two `repeat` loops will
        help you get to the pig with the fewest number of blocks!
      grade3_playLab_buildGame_1_instruction: |-
        There is a new block in this lesson,
        the `random integer` block. It is used to choose a random number. Write a
        program where the robot says a random number between 1 and 100!
      grade3_playLab_buildGame_2_instruction: |-
        We have already created a random integer,
        "j", which is either 1 or 0. Now, we need to use it to decide whether our
        card is red or black. Add a second if statement to the code under `when run`
        to complete this code.
      grade3_playLab_buildGame_3_instruction: |-
        There are 13 different card values
        in a deck of cards, so we'll need to have 13 options. Under the empty `when
        run` block, add a line that sets the placeholder "i" to a random integer
        between 1 and 13.
      grade3_playLab_buildGame_4_instruction: |-
        In a deck of cards, a card with value
        1 isn't actually called a "1", there's a special name. Write an if statement
        that checks if the random number is a 1, then tell the computer that the value
        of that card is "Ace".
      grade3_playLab_buildGame_5_instruction: |-
        We can just call the cards from 2
        to 10 by their numbers, so add an if statement that checks whether the number
        generated is within those numbers, then sets the card value to the number
        generated.
      grade3_playLab_buildGame_6_instruction: |-
        There are three more cards with special
        names in the deck. Add to your code so that a card number 11 is called a "Jack",
        a 12 is a "Queen" and a 13 is a "King"
      grade3_playLab_buildGame_7_instruction: |-
        You already know what color your card
        is, but what suit is it? Add code to the conditional statement "if card is
        Red" to choose hearts or diamonds.
      grade3_playLab_buildGame_8_instruction: |-
        Add the second part of the code to
        choose a suit, copying what you made for a Red card.
      grade3_playLab_buildGame_final_instruction: |-
        Final stage for playlab conditionals
        level (could hide entire function so that students just work with point scoring)
      grade3_playLab_buildGame_final2_instruction: |-
        Here's all of your code to choose
        a card - try adding some other fun features!
      grade3_robotFarmer_ConditionalsIntro4_instruction: |-
        Help the farmer remove
        this entire pile using a `while` loop.
      grade3_robotFarmer_ConditionalsIntro_1_instruction: |-
        *"Hi, I'm a farmer.
        I need your help to flatten the field on my farm so it's ready for planting!"*  \r
        \r
        Move
        to the pile of dirt and use the `remove` block to remove it.
      grade3_robotFarmer_ConditionalsIntro_10_instruction: |-
        I'm working late, so
        it's dark out, and I can't tell how large the piles are. Now I don't have
        all the options I used to have on the while block. Move me along the field,
        and if there is a pile, remove it
      grade3_robotFarmer_ConditionalsIntro_10a_instruction: "Flatten all of these\npiles
        using as few blocks as possible. "
      grade3_robotFarmer_ConditionalsIntro_11_instruction: |-
        It's still dark outside.
        Move me along the field. If there is a pile, remove it, and if there is a
        hole, fill it in. Hint: use the dropdown menu of options on the "if" block.
      grade3_robotFarmer_ConditionalsIntro_11a_instruction: "Flatten all of these\npiles
        using as few blocks as possible. "
      grade3_robotFarmer_ConditionalsIntro_2_instruction: |-
        Next, move to the hole
        and fill it with six shovelfuls of dirt, using the `fill` block.
      grade3_robotFarmer_ConditionalsIntro_3_instruction: |-
        *"Move to the pile of
        dirt and tell me how many shovelfuls to remove using as few blocks as possible."*
      grade3_robotFarmer_ConditionalsIntro_4_instruction: |-
        *"I don't know how much
        dirt is in this pile!"*\r
        \r
        Help the farmer remove this entire pile using
        a `while` loop.
      grade3_robotFarmer_ConditionalsIntro_5_instruction: "Help me remove all of\nthis
        dirt. "
      grade3_robotFarmer_ConditionalsIntro_6_instruction: |-
        Remove all the piles of
        dirt, using as few blocks as possible. The new options in the dropdown menu
        on the "while" block tell me if I'm standing on a pile or a hole.
      grade3_robotFarmer_ConditionalsIntro_7_instruction: |-
        Look at all of those holes!  Each
        one needs a different amount of dirt.   \r
        \r
        You can use the `while` loop
        to easily fill them all!
      grade3_robotFarmer_ConditionalsIntro_8_instruction: |-
        Fill in the hole at the
        end of each of these paths.
      grade3_robotFarmer_ConditionalsIntro_9_instruction: "**Challenge:** Fill all\nof
        these holes using as few blocks as possible. "
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo1_instruction: |-
        Help me fill
        in all these holes with 5 shovelfuls of dirt. Hint: you can put a "repeat"
        block inside the "while" block.
      grade3_robotFarmer_ConditionalsIntro_TeacherIDo2_instruction: |-
        I'm working
        late, so it's dark out, and I can't tell how large the piles are. Now I
        don't have all the options I used to have on the while block. Move me along
        the field, and if there is a pile, remove it
      grade4_arist_functions_star0_instruction: |-
        Have you drawn something like this
        star before? Practice making it one more time by adding a turn and a repeat
        block.
      grade4_arist_nested_loop_circles1_instruction: |-
        Assessment: Use a nested loop
        to complete the design.
      grade4_arist_nested_loop_flags1_instruction: |-
        Loop the given code to create
        a windmill.
      grade4_arist_nested_loop_polygons1_instruction: |-
        Loop this design 10 times.
        \r
        \r
        How much do you have to turn each time you loop?
      grade4_arist_nested_loop_polygons2_instruction: "Loop this shape 6 times. \\r\n\\r\nHow\nmuch
        do you have to turn each time you loop? "
      grade4_arist_nested_loop_squares1_instruction: |-
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_arist_nested_loop_triangles2_instruction: "Now nest this loop inside\nanother
        loop to draw 10 triangles.  This is called a \"nested\" loop.  "
      grade4_arist_nested_loop_triangles3_instruction: |-
        Can you draw a hexagon by
        looping the triangle code?
      grade4_arist_nested_loop_triangles4_instruction: |-
        Draw the teeth in the alligator's
        mouth!
      grade4_arist_nested_loop_triangles5_instruction: |-
        Create a sun by nesting the
        starter code in another loop.\r
        \r
        To get this cool design with a hollow
        center, you'll need to jump forward by the length of the triangle before
        turning.
      grade4_arist_nested_loop_triangles6_instruction: |-
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_freeplay_instruction: |-
        You are on your own now! Try out any of
        the functions you used in this stage or try this new function that will automatically
        give your image a beautiful background color! This creation will be saved
        to your Projects dashboard so that you can easily edit it any time!
      grade4_artist_functions1_instruction: |-
        Help the zombie draw glasses using squares
        with sides of 100 pixels.  \r
        The bridge between the glasses is 75 pixels
        long.
      grade4_artist_functions2_instruction: |-
        Functions let you define new blocks!
        \r
        \r
        We've moved the blocks needed for drawing a square into a function
        called `draw a square`. This time, use the `draw a square` function to create
        the glasses. \r
        \r
        The squares are 75 pixels apart.
      grade4_artist_functions2a_instruction: |-
        Create this image using only the blocks
        provided.
      grade4_artist_functions3a_instruction: |-
        Create this image using only the blocks
        provided.
      grade4_artist_functions3b_instruction: |-
        This time, use lines of 8 hexagons
        with 25 pixel sides.
      grade4_artist_functionsChallenge0_instruction: |-
        **Challenge:** Create as many
        functions as you think you need to make this drawing of 50 pixel squares.
      grade4_artist_functions_challenge_instruction: |-
        Use the suggested functions
        to draw four rows of hexagons. Notice how our even numbered rows are shifted
        to the right?
      grade4_artist_functions_challenge2_instruction: |-
        Use the suggested functions
        to draw four rows of hexagons. Notice how our even numbered rows are shifted
        to the right?
      grade4_artist_functions_freeplay_instruction: |-
        You are on your own now! Try
        out any of the functions you used in this stage or try this new function that
        will automatically give your image a beautiful background color! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade4_artist_functions_stars0_instruction: |-
        You can make this drawing by adding
        a repeat block.
      grade4_artist_functions_stars1_instruction: |-
        Now that you can draw a star,
        try drawing four stars!
      grade4_artist_functions_stars2_instruction: |-
        Draw only those three stars to
        finish this puzzle.
      grade4_artist_functions_stars3_instruction: |-
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade4_artist_functions_windows0_instruction: |-
        Make this window by drawing
        a square, then turning 90 degrees before drawing another, and so on.
      grade4_artist_functions_windows1_instruction: |-
        If you can draw one window,
        you can draw three! Try using your choice of a nested loop or a function here.
        Don't forget the jump block!
      grade4_artist_functions_windows2_instruction: |-
        Try solving this puzzle by creating
        `draw a window` and calling it five times. Watch out for the door!\r
        \r
        -
        The top windows are 50 pixels away from each other.  \r
        - The bottom windows
        are 100 pixels below the top set.
      grade4_artist_nestedLoops_challenge_instruction: |-
        Click here to see the full
        instructions again!\r
        \r
        Here is the code for an interesting shape.  What
        happens when you repeat it multiple times, turning between each iteration?   Notice
        that the turns in this shape add up to 420 degrees, which means that when
        your artist is done drawing, it will be facing a different direction than
        when you started.  That new direction is exactly 60 degrees to the right of
        where you began.
      grade4_artist_nestedLoops_challenge2_instruction: |-
        Now for a challenge!  Feel
        free to use trial and error. You are not expected to get the image perfect
        the first time.   Want to see more hints?  Click here!
      grade4_artist_nested_loop_circles1_instruction: |-
        Assessment: Use a nested loop
        to complete the design.
      grade4_artist_nested_loop_flags1_instruction: |-
        Loop the given code to create
        a windmill.
      grade4_artist_nested_loop_polygons1_instruction: |-
        Loop this design 10 times.
        \r
        \r
        How much do you have to turn each time you loop?
      grade4_artist_nested_loop_polygons2_instruction: "Hi, I'm the Artist! Let's\ncreate
        some drawings together! For starters, try repeating this shape 6 times.\n\\r\n\\r\nHow
        much do you have to turn each time you loop? "
      grade4_artist_nested_loop_squares1_instruction: |-
        Can you draw these 10 squares
        of this sidewalk using a nested loop? Each square is 30 pixels.
      grade4_artist_nested_loop_triangles1_instruction: |-
        Complete the code to draw
        these triangles.  The first one is done for you.  Hint:  3 triangles in a
        360 degree rotation.
      grade4_artist_nested_loop_triangles2_instruction: |-
        Let's make a quick adjustment
        to get completely different image!  \r
        Hint: ? × 10 = 360
      grade4_artist_nested_loop_triangles3_instruction: |-
        Can you draw a hexagon by
        looping the triangle code?\r
        Hint: 6 × ? = 360
      grade4_artist_nested_loop_triangles4_instruction: |-
        Hi! I'm the Artist. Let's
        try some different types of drawings together. Can you help me draw the bottom
        teeth in the alligator's mouth?
      grade4_artist_nested_loop_triangles5_instruction: |-
        Create a sun by nesting
        the starter code in another loop.\r
        \r
        To get this cool design with a hollow
        center, you'll need to jump forward by the length of the triangle before
        turning.
      grade4_artist_nested_loop_triangles6_instruction: |-
        Can you draw these 36 triangles
        using a nested loop?
      grade4_artist_parameters_squares1_instruction: |-
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade4_artist_parameters_triangles1_instruction: |-
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade4_artist_parameters_triangles2_instruction: Napansin mo ba ang anumang
        bagay na kakaiba sa function na mga blokeng ito? I-click ang "Run" para makita
        kung ano ang nangyari.
      grade4_artist_parameters_triangles2b_instruction: |-
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles3_instruction: |-
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_artist_parameters_triangles4_instruction: |-
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade4_artist_parameters_trianglesx_instruction: |-
        Can you complete this drawing?
        The sides of each triangle are 25 pixels larger than the last.  The first
        triangle has 25 pixel sides.
      grade4_bee_conditionals_nested_loops_instruction: |-
        Collect all of the nectar.
        You can only collect nectar from flowers, but you can check any space to see
        if there is a flower.
      grade4_bee_conditionals_new1_instruction: |-
        Collect all of the nectar. You can
        only collect nectar from flowers, but you can check any space to see if there
        is a flower.
      grade4_bee_conditionals_new1a_instruction: |-
        Help the bee make all of the honey.
        You can only make honey at a honeycomb, but you can check any space to see
        if there is a honeycomb.
      grade4_bee_conditionals_new2_instruction: |-
        Can you help the bee collect the
        nectar from the flowers? You can only collect nectar from flowers, but you
        can check any space to see if there is a flower.
      grade4_bee_conditionals_new2a_instruction: |-
        Make all of the honey. It's actually
        more efficient to check each space for a honey comb, even when you know some
        are empty.
      grade4_bee_conditionals_new3a_instruction: |-
        Collect all of the nectar or make
        all the honey. You can only collect nectar from flowers and make honey from
        honeycombs. Check any space to see if there is a flower or honeycomb.
      grade4_bee_conditionals_new3b_instruction: |-
        Uh oh! The bee is not sure if he
        should collect nectar or make honey. Can you help him out?
      grade4_bee_conditionals_new3c_instruction: |-
        Help the bee collect all of the
        nectar and make all of the honey! Hint: Try using one loop inside of another
        loop.
      grade4_bee_conditionals_quantum1_instruction: |-
        This cloud is blocking my view!
        Check to see if there's a flower under the cloud, and only get nectar if
        there's a flower. Be careful, it can change!
      grade4_bee_conditionals_quantum2_instruction: |-
        Mas marami pang mga ulap! \r
        \r
        Tingnan sa baba ng bawat ulap para makita kung ito ba ay nagtatago ng bulaklak bago ikaw makakakuha ng nektar.  \r
        \r
        Tandaan:
        Hindi lahat ng mga ulap ay magkapareha!
      grade4_bee_conditionals_quantum3_instruction: |-
        Now I just want to make honey.
        Some of these clouds might have honeycombs under them. The way we've been
        going about things won't work here. Be sure to check if a honeycomb is hiding
        behind each cloud!
      grade4_bee_conditionals_quantum4_instruction: |-
        Sometimes this cloud covers
        a flower, and sometimes it covers a honeycomb! Use the if/else block to collect
        nectar if it is a flower, else to make honey (because it is a honeycomb).
      grade4_bee_conditionals_quantum5_instruction: |-
        There will be either a flower
        or a honeycomb under each of those clouds!\r
        \r
        Use the `if/else` block
        to collect nectar if there is a flower.\r
        Otherwise, make honey (because
        there is a honeycomb).
      grade4_bee_functions_instruction: |-
        Have we met before? I'm the farmer! Please
        help me remove this pile of dirt and fill this hole.
      grade4_bee_functions1_instruction: Kolektahin ang lahat ng mga nektar mula sa
        bawat bulaklak.
      grade4_bee_functions10_instruction: |-
        Create a function to collect all of the
        nectar from each flower.
      grade4_bee_functions11_instruction: |-
        Solve this function by creating a function
        to turn, move forward and make all of the honey, then return the bee to where
        it started and turn back.
      grade4_bee_functions2_instruction: Ang mga function ay mga bloke na code na
        nagsasagawa ng isang gawain. Gamitin ang "get 2 nectar" na function para makolekta
        ang nektar mula sa bawat bulaklak.
      grade4_bee_functions3_instruction: |-
        Build the `get 5` function to use in this
        puzzle.
      grade4_bee_functions4_instruction: |-
        Use the `move and get nectar` function
        to collect all of the nectar.
      grade4_bee_functions5_instruction: This puzzle will be deleted!
      grade4_bee_functions6_instruction: |-
        Now write the function to collect nectar
        from the flowers.
      grade4_bee_functions7_instruction: |-
        Create a function and call it to collect
        nectar at each flower and make honey at each honeycomb.
      grade4_bee_functions8_instruction: |-
        Create your own function that goes down
        a path, gets nectar, makes honey, and then returns the bee to the top of the
        path. Then collect all the nectar and make all the honey!
      grade4_bee_functions9_instruction: |-
        Create a function that collects all of
        the nectar from each flower.
      grade4_bee_nestedLoops0_instruction: Maggamit ng loop para ikolekta ang lahat
        ng nektar.
      grade4_bee_nestedLoops1_instruction: "Collect all of the nectar from each flower.\nUse
        a nested loop. "
      grade4_bee_nestedLoops2_instruction: |-
        **Challenge:** Figure out how to get
        all of the nectar using only the blocks available.
      grade4_bee_nestedLoops2a_instruction: |-
        Collect all of the nectar using  as
        few blocks as possible.
      grade4_bee_nestedLoops3_instruction: Kolektahin ang lahat ng nektar sa pamamagitan
        ng paglikha ng naka-nest na loop.
      grade4_bee_nestedLoops4_instruction: "Collect all of the nectar from each flower\nand
        make honey at the honeycomb. "
      grade4_bee_nestedLoops_assess_instruction: |-
        **Assessment:** Collect all of
        the nectar and make all of the honey using loops.\r
        \r
        Hint: There are several
        possible solutions!
      grade4_designProcess_vid_instruction: |-
        Prepare to build a project within some
        given parameters.
      grade4_farmer_functions1_instruction: |-
        *"Have we met before? I'm the farmer!"*\r
        \r
        Help
        the farmer get to the pumpkins and pick them.
      grade4_farmer_functions2_instruction: |-
        Take the code you just wrote it and
        use it to define a new function. Call the function twice to complete the puzzle.
      grade4_farmer_functions3_instruction: |-
        Try using a couple of repeat blocks
        within your function definition.
      grade4_farmer_functions4_instruction: |-
        Swap out your repeat loops for more
        versatile while loops.
      grade4_farmer_functions5_instruction: |-
        Things are going to start getting trickier,
        but don't give up! You can use the same while loops to check both spaces
        in each pass.
      grade4_farmer_functions6_instruction: |-
        The paths are a different length. You
        can use a different type of while loop to keep the pattern going as long as
        you need to.
      grade4_frozen_freeplay_instruction: Opisyal ka nang naging isang dalubhasang
        artista! Maglika ng isang kamangha-manghang taglamig na lugar.
      grade4_frozen_functions0_instruction: |-
        Can you figure out what number to replace
        the question marks with to draw a circle?
      grade4_frozen_functions1_instruction: |-
        Use the new “draw a circle” function
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions1a_instruction: |-
        Use the new “Create a circle” block
        to create 10 overlapping circles. Don't forget to jump forward between circles.
      grade4_frozen_functions2_instruction: |-
        Now let's create 20 overlapping circles,
        turning 18 degrees between each circle.
      grade4_frozen_functions3_instruction: |-
        Here's a ”Create circle” block that
        can make circles of different sizes. Can you use this to create a small circle
        of size 5 and a larger circle of size 10?
      grade4_frozen_functions4_instruction: |-
        Intricate snow patterns can be created
        with very simple shapes. Can you make a pattern by repeating 5 circles of
        size 5 and 5 circles of size 10?
      grade4_frozen_nested_loop_diamonds1_instruction: |-
        Let’s use a repeat block
        to create a rhombus. Like a square, all sides are equal length, but the angles
        are different. This one has 60 degree and 120 degree angles instead of all
        90 degree angles.
      grade4_frozen_nested_loop_diamonds2_instruction: |-
        Did you know every snowflake
        is a different shape? Let's create a new snowflake by using another “Repeat"
        block to repeat a parallelogram 4 times, turning right by 90 degrees between
        each parallelogram.
      grade4_frozen_nested_loop_diamonds3_instruction: |-
        Now, let's create a new
        snowflake by using the repeat block to repeat a parallelogram 10 times, turning
        right by 36 degrees between each one.
      grade4_frozen_nested_loop_rectangle1_instruction: |-
        Hi, I’m Anna of Arendelle!
        Let’s use a repeat block to create a rectangle. This one is  200 pixels long
        and 100 pixels tall. All of the corners are 90 degree angles.
      grade4_frozen_square_instruction: |-
        Hi, I’m Anna of Arendelle! Let’s make a
        square with the “Repeat” block, which uses fewer blocks. How many times (???)
        should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop1_instruction: |-
        Hi, I’m Anna of Arendelle! Let’s make
        a square with the “Repeat” block, which uses fewer blocks. How many times
        (???) should the “Repeat” block loop the blocks inside it to make a square?
      grade4_frozen_square_loop2_instruction: |-
        Let's create three squares, turning
        after each square. Be sure to turn by 120 degrees before each new square.
      grade4_frozen_square_loop3_instruction: Maaari ka bang maglikha ng niyebe gamit
        ang "Repeat" na bloke para makagawa ng parisukat nang 10 beses, at ang "Turn"
        na bloke ay liliko nang 36 degrees sa pagitan ng bawat parisukat?
      grade4_playLab_proj_example1_instruction: instructions
      grade4_playLab_proj_example1a_instruction: |-
        Take a look at this project.  Do
        you see how it was made?
      grade4_playLab_proj_example2a_instruction: |-
        Take a look at this project.  Do
        you see how it was made?
      grade4_playlab_freeplay_instruction: "It's free play time! Have fun with all\nthe
        blocks in your tool box. "
      grade4_playlab_test_instruction: |-
        Gamitin ang kanang arrow para itapon ang pie.\r
        \r
        Sa ating laro, paano dapat tayo makaiskor ng puntos? Magdagdag ng 1 sa iyong "points" na variable sa bawat beses na matamaan ng Aso ang Pusa sa piraso ng pie. Gamitin ang "when actor 2 touches anything" na pangyayari para mag-trigger ng update sa iyong puntos. Maaari kang magdagdag sa iyong variable sa pamamagitan ng pagtakda ng "points = points + 1." Paabutin ang iyong iskor sa 10 para (tataas ng isa sa bawat beses!) mapasa ang antas.
      grade4_playlab_test2_instruction: |-
        Here's a function called `jump` that causes
        your main character to jump up 100 pixels. Run the program and use the jump
        function to collect all of the flags by moving the dog with the arrow keys.
      grade4_prompt_test_instruction: This is a test play lab level.
      grade4_review_artist1_instruction: |-
        Hi, I'm an artist. You can write code
        to make me draw almost anything. Use a few blocks to make me draw over the
        grey lines in the picture. (Each line is 100 pixels long)
      grade4_review_artist2_instruction: '"Ang bahay na ito ay nangangailangan ng
        isang bubong! Iguhit ang tatsulok. Hint: lahat ng tatlong panig ay parehong
        haba".'
      grade4_review_artist3_instruction: |-
        The jump block moves the artist without
        drawing. Draw the dashed line using both the `jump forward` and `move forward`
        blocks. Each line is 50 pixels long.
      grade4_review_bee1_instruction: |-
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      grade4_review_bee2_instruction: Magkolekta ng nektar mula sa bawat bulaklak
        at gumawa ng pulot sa bawat pulot-pukyutan gamit ang pinakakaunting mga bloke
        hangga't maaari.
      grade4_review_bee3_instruction: |-
        Sadyang abala na bubuyog!\r
        \r
        Tulungan ang bubuyog na magkolekta sa lahat ng nektar at gawin ang lahat ng mga pulot gamit ang pinakakaunting mga bloke hangga't maaari.
      grade4_scaffolded_project1_instruction: |-
        It is amazing how much you have learned!
        Let's put them together to make a game, step by step.
      grade4_scaffolded_project2_instruction: |
        Now let's get things moving! Use
        event handlers and actions to make your hero move.\r
        \r
        We've added these
        blocks to your tool box to help you.\r
      grade4_scaffolded_project3_instruction: |-
        Now that your game has a hero, it's
        time to start adding other actors and assigning them behaviors. \r
        \r
        Add
        two or more additional actors to your game and make them move. Do you want
        to have an actor patrol back and forth? Try using a these new blocks to bring
        these other components of your game to life!
      grade4_scaffolded_project4_instruction: |-
        Just getting the actors moving is
        a great step, but we need to program some interactions to make this really
        feel like a game. A simple way to do this is to add or remove points when
        actors collide with projectiles or each other. Find some interesting ways
        to change the score in your game.
      grade4_scaffolded_project4a_instruction: |-
        Just getting the actors moving is
        a great step, but we need to program some interactions to make this really
        feel like a game. A simple way to do this is to add or remove points when
        actors collide with projectiles or each other. Find some interesting ways
        to change the score in your game.
      grade4_scaffolded_project5_instruction: |-
        Now spend some time making sure the
        game works the way you want. Try including a way to win or lose your game.
      grade4_scaffolded_project6_instruction: |-
        You've finished! Now you can play
        your game or share it with your friends and classmates!
      grade5_artist_binary1_instruction: |-
        Ang binary ay isang pamamaraan ng pagrepresenta ng impormasyon gamit ang dalawang opsyon lang.  Dito, tayo ay gagamit ng mga opyson na "off" (kinakatawan ng numerong 0) at "on" (kinakatawan ng numerong 1).  \r
        \r
        Binigyan ka na namin ng isang grid ng mga "pixel" na maaari mong daanan at gawan ng mga disenyo sa pamamagitan ng paglagay ng on sa partikular na mga parisukat. Maaari mo bang ipaguhit sa artista ang "01010101" na binary sa unang hanay?
      grade5_artist_binary10_instruction: Mag-click dito para makita ang mga pahiwatig.
      grade5_artist_binary11_instruction: |-
        Free Play: Here's a blank canvas for
        you to draw on.  Have fun!
      grade5_artist_binary2_instruction: |-
        Ito ang isang function na kukuha ng binary string ng mga 1 at mga 0 at nagturo sa artista na sundin ang mga ito mula sa kaliwa hanggang sa kanan, sa taas hanggang sa baba. Pupunan ng artista ang mga parisukat kapag nakakita ito ng 1 at isawalang-bahala kapag nakakita ito ng 0. \r
        \r
        Patakbuhin ang code na ito para makita kung paano ang artista gumagamit ng binary para maiguhit ang pattern na ito.
      grade5_artist_binary3_instruction: |-
        Which of these binary strings could you
        loop 8 times to draw this image?
      grade5_artist_binary4_instruction: |-
        Can you draw this pattern by looping just
        three binary digits (0s and 1s)?
      grade5_artist_binary5_instruction: |-
        Each binary string represents one row of
        this picture. Can you rearrange them so it draws a smiley face instead of
        a frowny face?
      grade5_artist_binary6_instruction: |-
        Which 6 digit binary string, repeated 11
        times, will draw this image?
      grade5_artist_binary7_instruction: Ano ang pinakamaikling binary na string ang
        maaari mong ulit-ulitin para maiguhit ang larawang ito?
      grade5_artist_binary8_instruction: Tapusin ang drowing na ito.
      grade5_artist_binary9_instruction: |-
        Here's a higher resolution canvas to draw
        on - 16 pixels by 16 pixels!\r
        \r
        See what happens when we start to get
        creative with the bits?
      grade5_artist_for_loops1_instruction: |-
        Use a `for` loop to draw this triangle
        that is 50 pixels wide. If you count from 1 to 3 by 1s, you can use this just
        like a `repeat` loop.
      grade5_artist_for_loops10_instruction: |-
        Can you figure out how to use all of
        the things you've learned to create this image?\r
        \r
        Need a hint? Click
        here.
      grade5_artist_for_loops1a_instruction: |-
        Try using a `for loop`to create this
        triangular design. Don't worry that the numbers are different than the last
        puzzle. As long as you turn by the right number of degrees, the artist will
        make the correct shape!
      grade5_artist_for_loops1b_instruction: |-
        Experiment with the `for` loop and
        play with the `counter` variable.
      grade5_artist_for_loops2_instruction: |-
        Use a `repeat` inside of a `for` loop
        to create this stack of triangles that goes from 50 pixels to 100 pixels.
      grade5_artist_for_loops3_instruction: "These triangles go from 20 pixel sides\nto
        200 pixel sides, and each triangle is 20 pixels larger than the last. "
      grade5_artist_for_loops4_instruction: "These squares start at 15 pixels long,\nthe
        largest is 300 pixels long, and each square is 15 pixels larger than the\nlast. "
      grade5_artist_for_loops5_instruction: |-
        Just one little change to the code from
        the last image can create this drawing. Can you figure out what that change
        is?\r
        \r
        Hint:  You need to remove something!
      grade5_artist_for_loops6_instruction: |-
        If you turn a little bit more or less
        than you normally would for a shape, it creates a neat effect. Try using some
        of the code from the last level, but turning 89 degrees to create this twisted
        square spiral.
      grade5_artist_for_loops7_instruction: |-
        Make three small changes to the code
        from the last level to get this!
      grade5_artist_for_loops7a_instruction: |-
        Take the angle down to 72 degrees to
        get a spiraled pentagon.
      grade5_artist_for_loops7b_instruction: |-
        Use the counter inside the `set alpha`
        block to get this faded center.\r
        (This hexagon pattern was made using a
        60 degree turn.)
      grade5_artist_for_loops8_instruction: "Remember back in a previous stage when\nwe
        used a variable to control the number of sides in a shape? We are going\nto
        do the same thing with the `counter` variable now. This pattern starts\nwith
        a triangle and adds one side at a time until it draws a decagon (10 sides).\nEach
        side should be 100 pixels long. "
      grade5_artist_for_loops9_instruction: |-
        Let's put it all together!  Using your
        knowledge of `for` loops and the `counter` variable, create this drawing where
        each shape has two more sides than the last.  Make sure that each side is
        10 times as long as the number of sides in the polygon.\r
        \r
        Very little
        of the code has been provided for you.
      grade5_artist_for_loopsfreeplay11_instruction: |-
        Libreng-Laro na Inspirasyon: Natutunan mo na ngayon ang lahat ng kailangan mong malaman para makagawa ng pattern gaya nito! Kung ang larawan na ito ay nagbibigay-inspirasyon sa iyo, subukang gumawa ng katulad nito. Kung hindi, gumawa ng isang bagay na gawa-gawa mo lang.\r
        \r
        Nangangailangan ng higing? Mag-click dito.
      grade5_artist_for_loopsfreeplay12_instruction: |-
        Free Play: Try using the `counter`
        variable with other drawing elements to make magical images like this one.
      grade5_artist_freeplay_instruction: |-
        Create your own project! This creation
        will be saved to your Projects dashboard so that you can easily edit it any
        time!
      grade5_artist_functionparameters10_instruction: "Libreng Laro na Inspirasyon:
        Natutunan mo na ang lahat ng kailangan mong malaman para makagawa ng pattern
        na gaya nito! Kung ang mga larawang ito ay nagbigay-inspirasyon sa iyo, subukang
        gumawa ng isang bagay na kapareha. Kung hindi, lumikha ng isang bagay na lahat
        ay ikaw lang.\\r\n\\r\nGustong malaman kung paano nagawa ang aming inspirasyon
        na pattern? "
      grade5_artist_functionparameters11_instruction: |-
        Freeplay: Below there are
        functions you've written, and more for you to play with. Draw something awesome!
        Play with the pen width to see how different your drawings look!
      grade5_artist_functionparameters7_instruction: |-
        This image is similar to the
        last. Can you use a `for` loop with your function to make this design?
      grade5_artist_functionparameters8_instruction: |-
        The triangle has 21 pixel sides,
        and the sides in each following shape are 7 pixels longer than the last.  Use
        the `multiplication` block to make this all happen with just one function
        call. Be sure to jump 100 pixels between polygons.
      grade5_artist_functionparameters9_instruction: |-
        Challenge: Edit `draw a spiral
        edge` to use `length` and `sides` parameters, then recreate these shapes.
      grade5_artist_functionparameters9a_instruction: |-
        Finish off the `draw a spiral
        edge` function to also ask for a minimum length for the center of the spiral.
      grade5_artist_functionparameters9b_instruction: |-
        Can you figure out how to
        make this drawing using the function that you just created?
      grade5_artist_functionparameters_6_instruction: |-
        Edit this function to add
        a parameter for the number of sides in your polygon.\r
        \r
        The sides of all
        the shapes are 100 pixels long.
      grade5_artist_parameters_squares1_instruction: |-
        Click "edit" to fill in the
        function definition of "draw a square" and add a parameter. It should take
        a length parameter, just like the triangle. This time, draw 3 squares: 25,
        50 and 75 pixels in length, each 100 pixels apart.
      grade5_artist_parameters_squares1a_instruction: |-
        This program looks okay from
        here, but something isn't working right. See if you can figure out how to
        edit the function 'draw a square' to find the bug.
      grade5_artist_parameters_squares2_instruction: |-
        Create a function called 'draw
        a square' and use it to outline these four boxes. Make sure to add a parameter
        for 'length'! Starting from the upper right, the box widths are 50, 100,
        150, and 200.
      grade5_artist_parameters_squares2a_instruction: |-
        Edit the function to accept
        a parameter called `length`.
      grade5_artist_parameters_stars1_instruction: |-
        That last one is tough if you
        only use loops. Let's try drawing the same picture using this new 'function'
        that will help to **draw a star**.
      grade5_artist_parameters_triangles1_instruction: |-
        This program looks okay from
        here, but something isn't working right. See if you can figure out how to
        edit the function 'draw a square' to find the bug.
      grade5_artist_parameters_triangles1a_instruction: |-
        Today, we're going to try
        out a different, more powerful function editor. See if you can figure out
        how to edit the function 'draw a triangle' to find the bugs.
      grade5_artist_parameters_triangles1aa_instruction: |-
        Click "edit" to fill
        in the function definition of "draw a triangle" and add a parameter. It
        should take a length parameter, just like the triangle. This time, draw 3
        triangles: 25, 50 and 75 pixels in length, each 100 pixels apart.
      grade5_artist_parameters_triangles2_instruction: |-
        This drawing can be easily
        created using a new type of function that includes a parameter. The sides
        of each triangle are 25 pixels larger than the last.  The first triangle has
        25 pixel sides. Replace the '???' with the correct values to draw the picture.
      grade5_artist_parameters_triangles2a_instruction: Napansin mo ba ang anumang
        bagay na kakaiba sa function na mga blokeng ito? I-click ang "Run" para makita
        kung ano ang nangyari.
      grade5_artist_parameters_triangles3_instruction: |-
        The code for this triangle
        function is broken.\r
        \r
        Can you edit the function to fix it, and then make
        triangles of length 150, 75, 25?
      grade5_artist_parameters_triangles4_instruction: |-
        The code for this triangle
        function is broken. Can you edit the function to fix it, and then make triangles
        of length 25, 50, and 75?
      grade5_artist_parameters_trianglesy_instruction: |-
        The code for this triangle
        function is broken.\r
        \r
        Can you edit the function to fix it, and then make
        triangles of length 150, 75, 25?
      grade5_artist_variables_freeplay10_instruction: |-
        Free Play: Experiment with
        the number of sides this shape has. Can you change the algorithm so that the
        overall size of the shape stays the same, no matter how many sides it has?
        Hint: If you divide your starting length by the number of sides, the length
        of each side will get shorter as the number of sides gets higher.
      grade5_artist_variables_freeplay14_instruction: |-
        Free Play: Check it out! Now
        your algorithm is nested within one more loop. Experiment with changing the
        values of your two variables to draw cool patterns.\r
        \r
        For even more effect,
        try playing with color!  Use random colors inside loops to see how it changes
        your design.
      grade5_artist_variables_freeplay15_instruction: |-
        Want a second peek at the
        inspiration design or the hints?  Click here!\r
        \r
        Otherwise, make a design
        all your own!
      grade5_artist_variables_freeplay16_instruction: |-
        Still playing?  Here is a
        blank canvas where you can create whatever you want!
      grade5_artist_variables_hexagons1_instruction: |-
        Let's try it again! \r
        \r
        Can
        you set the `length` variable to 60 to make this cool design with hexagons?
      grade5_artist_variables_letterT11_instruction: |-
        Here’s more complicated code
        using the same concepts from the last puzzle - what should you set the "sides"
        variable to in order to draw this picture made of squares?
      grade5_artist_variables_new1_instruction: |-
        Here is a program that will create
        an image. There are a few things that are wrong with it.
      grade5_artist_variables_octagons13_instruction: |-
        When a shape has lots of sides,
        each side needs to be shorter if you want the whole pattern to fit on the
        screen. \r
        Let's recreate the algorithm for this amazing pattern, but instead
        of manually setting the `length` variable, let's use a math block with the
        `sides` variable inside to make sure that each shape fits correctly. The perimeter
        of each polygon is 300 pixels.\r
        Need some hints?  Click here.
      grade5_artist_variables_pentagon8_instruction: |-
        Use what you learned in the
        last puzzle to create this hexagon using the "sides" variable.\r
        \r
        See
        how you could change just one value to draw a triangle,  square, pentagon,
        or octagon?
      grade5_artist_variables_pentagon9_instruction: |-
        Now, recreate the algorithm
        from the last level and create a pentagon with sides of length 150.
      grade5_artist_variables_pentagons1_instruction: |-
        Draw this pattern of pentagons
        with 100 pixel sides by setting the right value for `length` and dropping
        the `length` variable into all of the the correct places. \r
        \r
        See how
        you only have to set the value for `length` once, and the code uses the right
        value everywhere?
      grade5_artist_variables_pentagons12_instruction: |-
        Let's set the "sides"
        variable to 5. The more sides we add to this algorithm, the bigger this whole
        pattern gets! Notice that there is another variable called "length". We
        can now use that wherever we have a "move forward." Set the "length" variable
        to 75 for this shape.
      grade5_artist_variables_rectangle6_instruction: |-
        Now I want to make a rectangle
        that is twice as tall as it is wide. We've got a variable called "width"
        that needs to be set to 100. Can you use the math blocks to complete the code?
      grade5_artist_variables_square7_instruction: |-
        Here’s some code that can draw
        any regular polygon. There’s a new variable called sides that is set to 4.
        Can you use the sides variable (along with the math block) to turn the right
        amount regardless of how many sides there are in the polygon?\r
        \r
        Click
        here to go back to the hint!
      grade5_artist_variables_triangles2_instruction: |-
        Instead of using "move forward
        by 150," the "move" block is now referencing a variable called "length."
        Can you set "length" to 150 to draw this new triangle?
      grade5_artist_variables_triangles3_instruction: "Drag a number block to both\nthe
        `set length` block and the `repeat _ times` block to draw a set of 50\npixel
        triangles. "
      grade5_bee_for_loops1_instruction: |-
        Use a loop to collect the nectar from each
        flower.
      grade5_bee_for_loops10_instruction: |-
        What should your increment be to collect
        15, then 12, then 9, 6, 3 nectar?
      grade5_bee_for_loops11_instruction: "**Challenge:** Take what you've learned\nabout
        `for` loops and try to solve this problem. "
      grade5_bee_for_loops2_instruction: |-
        Add the code necessary to make sure the
        bee collects all the nectar. Look at how much code you need for this puzzle!
        (We'll learn a simpler way in the next puzzle.)
      grade5_bee_for_loops3_instruction: |-
        Try this puzzle using the `for` loop with
        `counter` variable and see how much shorter your code becomes.
      grade5_bee_for_loops4_instruction: "Replace the ??? in the \"for loop\" with\nthe
        largest amount of nectar the bee has to collect. "
      grade5_bee_for_loops6_instruction: |-
        You can also use a "for loop" to count
        down. Try gathering this nectar by counting down from 5 to 1 by 1.
      grade5_bee_for_loops7_instruction: |-
        Try collecting these flowers using an increment
        of 2.
      grade5_bee_for_loops8_instruction: |-
        You've got this! What should your increment
        be to collect 3, 6, 9, 12, 15 nectar?
      grade5_bee_for_loops9_instruction: |-
        Use the `counter` variable to navigate
        this garden with the fewest number of blocks possible.
      grade5_bee_parameters_new8_instruction: |-
        That's a great function you've created!
        You are officially on your own now. Collect all the nectar. Make all the honey.
      grade5_bee_parameters_new9_instruction: |-
        Bonus Challenge! If you are feeling
        ambitious, try this puzzle. It is possible to collect all of the nectar and
        make all of the honey using only a For loop, a Repeat loop, a function call,
        and a turn. Try it all on your own, or view the hints to build it step-by-step.
        Great job with this stage!
      grade5_pixelation_instruction: |-
        Encode an image of anything you like using
        binary. The binary language will be represented with '0' and '1' only.
      grade5_playlab_freeplay_instruction: "It's free play time! Have fun with all\nthe
        blocks in your tool box. "
      grade5_playlab_parameters_points1_instruction: "Here's the same game but most\nof
        the code is hidden. We've added a new function called `score_points.`\\r\n\\r\nAdd\na
        new parameter called `points` to the `player_score` function. \\r\n\\r\nThe\n`score_points`
        function should be able to both add and remove points from\n`player_score`
        depending on which actor is hit.\\r\nChanging the score by 1\nwill add a point,
        while changing the score by -1 will subtract a point.\\r\n\\r\nWhen\nyou're
        done, click \"Run\" to play.  When Dog scores 6 points, you will move\non
        to the next puzzle. "
      grade5_playlab_variables1_instruction: |-
        This time you don't have to write
        any code, just hit "Run" to play the game! In this game, you're the dog
        who is trying to collect more flags than the cat. Use the down arrow to control
        the dog. Press "Finish" when you're done playing.
      grade5_playlab_variables10_instruction: Baguhin ang "patrol" na function para
        madagdag ang "aktor" na parameter, para maaari na nating matawag ito para
        sa bawat aktor na nasa screen. Tandaan, ang mga aktor ay tumutugon sa mga
        numerong 1, 2, at 3.
      grade5_playlab_variables11_instruction: Magdagdag ng isa pang parameter na tinatawag
        na "speed" sa "patrol" na function. Subukang gumamit ng "set speed" na bloke
        kasama ang bagong "speed" na parameter para tulungan ang Pingguwino na makuha
        ang parehong mga bandila bago makakuha ng isa ang ibang mga sprite.
      grade5_playlab_variables12_instruction: |-
        Tayo ay magsaya! Tingnan ang code na ibinigay para makita kung malalaman mo ba kung ano ang ginagawa ng bawat bloke. \r
        Kapag tapos ka na, gamitin ang mga arrow key para kontrolin ang Aso at makolekta ang lahat ng mga bandila.\r
        TANDAAN:
        Hindi mo kailangang gumawa ng anumang pagbabago sa programa
      grade5_playlab_variables13_instruction: Gamitin ang `when actor touches` na
        bloke para mapadala ang Aso pabalik sa kaliwang-itaas LANG kapag ang Aso ay
        nakakahawak sa kahit na sino sa ibang mga aktor.
      grade5_playlab_variables14_instruction: "It's free play time! Have fun with\nall
        the blocks in your tool box. "
      grade5_playlab_variables1ask_instruction: |-
        This time, when you press 'run',
        you will see a 'prompt' asking you for a number. This number will be stored
        in a variable used to set the dog's speed.\r
        \r
        \r
        Pay attention to how
        this program is written!
      grade5_playlab_variables2_instruction: Ang habulan sa huling palaisipan ay hindi
        talaga patas! Palitan ang `dog_speed` na variable para masiguro na makakolekta
        ka ng mas maraming mga bandila kaysa sa Pusa. Ang unang makakakolekta ng 10
        mga bandila ang mananalo!
      grade5_playlab_variables3_instruction: Gamitin ang kaliwa at kanang mga arrow
        para makagalaw, at ang pataas na arrow para makatalon. Tingnan kung makokolekta
        mo ang lahat ng mga bandila.
      grade5_playlab_variables4_instruction: |-
        Now we're using a variable called
        "height" to control how high the dog can jump. Update the "height" variable
        so that the dog can jump high enough to reach all the flags.
      grade5_playlab_variables5_instruction: |-
        You've seen now how a variable can
        be used to set the height of an actor's jump. How else could  you use a variable?\r
        \r
        Let's
        build a game! First we'll need a score. Try setting the 'points' variable
        to give yourself 10 free points!
      grade5_playlab_variables6_instruction: |-
        Gamitin ang kanang arrow para itapon ang pie.\r
        \r
        Sa ating laro, paano dapat tayo makaiskor ng puntos? Magdagdag ng 1 sa iyong "points" na variable sa bawat beses na matamaan ng Aso ang Pusa sa piraso ng pie. Gamitin ang "when actor 2 touches anything" na pangyayari para mag-trigger ng update sa iyong puntos. Maaari kang magdagdag sa iyong variable sa pamamagitan ng pagtakda ng "points = points + 1." Paabutin ang iyong iskor sa 10 para (tataas ng isa sa bawat beses!) mapasa ang antas.
      grade5_playlab_variables6ask_instruction: |-
        This time, you need 100 points to
        win!  Don't worry though, you can choose how many points you earn each time
        you score a hit!\r
        Try adding the `ask` block and changing the number 1 out
        for the variable `value`.
      grade5_playlab_variables7_instruction: Mahusay, ngayon ay ating sisiguradohin
        na ang larong ito ay hindi masyadong madaling laruin. Anumang oras na ang
        Aso (aktor 1) ay matatamaan ng sandwich mula sa Pusa (aktor 2), dapat ay mawawalan
        ka ng puntos. Magsimula sa 10 na puntos para ito ay hindi masyadong mahirap.
        Hayaan ang iyong iskor na bababa mula 10 hanggang 0 para maipasa ang antas.
      grade5_playlab_variables71_instruction: "Narito ang ating laro mula sa mas naunang
        yugto, ngunit karamihan sa mga code ay nakatago. Mayroong bagong function
        na `score_points.`\\r\n\\r\nBaguhin ang function para maaaring madagdag ang
        bagong parameter na tinatawag na `points` sa `player_score`.\n\\r\n\\r\nAng
        variable na `player_score` ay dapat tataas sa bawat beses na ang Aso ay nag-tag
        sa Pusa na may pie, at bababa sa bawat beses na ang Pusa ay naka-tag sa Aso
        na may sandwich.\\r\n\\r\nTandaan:\nKapag tapos ka na, i-click ang \"Run\"
        para maglaro. Kapag ang Aso ay nakakuha na ng 6 na puntos, iikaw ay lilipat
        sa sunod na palaisipan. "
      grade5_playlab_variables81_instruction: "Aming idinagdag ang isang huling function
        para sa iyo.\\r\n\\r\nGumamit ng \"if\" na pahayag para ma-program ang iyong
        laro na tatawag lang sa \"level_up\" na function kapag ang \"player_score\"
        ay naging mas malaki sa isang tiyak na numero.\\r\n\\r\nBilang halimbawa:
        \"player_score\" > 6\\r\n\\r\nLaruin ang laro, at abutin ang antas na 3 para
        makapunta sa sunod na palaisipan. "
      grade5_playlab_variables9_instruction: |-
        Narito ang isang function na tinatawag na `patrol`.
        \r
        \r
        Baguhin ang `patrol` para pagalawain ang Pusa pataas ng 400 pixels at pagkatapos ay pababa ng 400 pixels.
      grade5_playlab_variables_freeplay_instruction: |-
        Free Play time! Here are all
        of the variables we've played with so far in this stage, as well as a few
        more in case you want them. \r
        \r
        Notice that there are now so many blocks
        in our toolbox that they need to be organized!  Here, we've put each piece
        into an appropriate category.  Take some time to explore everything that is
        available. When you're done browsing, make a game or story using repeats,
        variables, and events.  \r
        \r
        Hint: scroll down to see all the commands
        in the workspace.
      grade5_playlab_variables_jump1_instruction: |-
        This puzzle uses a hidden function
        that makes the dog jump when the 'up' arrow is pressed. The height of the
        jumps can be set at the start of the game using the 'jumpPower' variable.
        Try to touch all of the flags!
      grade5_prompt_test_instruction: |-
        Variables aren't always numbers. What if
        you wanted to store a word or text? Experiment with the new `ask` block.
      gradeK_sequence_4_instruction: Try this one yourself from the beginning.
      gradek_adventurer_loops1_instruction: |
        This is Laurel the Adventurer!  Can
        you move her around and get gold?
      gradek_adventurer_loops10_instruction: |-
        Help me get all of the gold from this
        cave.
      gradek_adventurer_loops2_instruction: |-
        How can Laurel collect all five piles
        of gold using only one `[E-->]` block?
      gradek_adventurer_loops3_instruction: |-
        Can you fix Laurel's path to get all
        of this gold?
      gradek_adventurer_loops4_instruction: |-
        Use what you learned to get all of the
        coins.
      gradek_adventurer_loops4a_instruction: |-
        Add to this code to collect all of
        the coins.
      gradek_adventurer_loops5_instruction: |-
        What should you add to this code to
        get all of the gold?
      gradek_adventurer_loops6_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_instruction: Write the code to get all of this gold.
      gradek_adventurer_loops7_challenge_instruction: |-
        **Challenge:** The gold goes
        all the way up these stairs!  Write the code to help me get it all.
      gradek_adventurer_loops8_instruction: |-
        Help me get all of the gold from this
        deep valley.
      gradek_adventurer_loops9_instruction: |-
        Help me get all of the gold from this
        cave.
      gradek_adventurer_loopsFP_instruction: |-
        Eureka!  Collect as much gold as you
        can!
      gradek_adventurer_loopsPre_instruction: |-
        This is Laurel the Adventurer.  Mover
        her around and get as much gold as you can!
      gradek_artist_loops1_instruction: Tulungan ang artista na iguhit ang linyang
        ito nang dalawang beses pasulong.
      gradek_artist_loops2_instruction: |-
        Our artist is trying to draw a line five
        times, but can't get it right.  Can you help?
      gradek_artist_loops3_instruction: |-
        Now, use a `repeat` loop to draw this line
        five times!
      gradek_artist_loops4_instruction: |-
        Draw a line seven steps long. This will
        become our horizon.
      gradek_artist_loops5_instruction: Let's put a nice hill in the back.
      gradek_artist_loops6_instruction: |-
        Use the `repeat` loop to add waves to the
        water.
      gradek_artist_loops7_instruction: We need a ladder up to the boat.
      gradek_artist_loops8_instruction: |-
        Challenge: The stairs down to the dock are
        broken.  Help me fix them.
      gradek_artist_loops9_instruction: |-
        Time to head back to land. Help me put down
        stones so I don't fall in!
      gradek_artist_loopsA_instruction: |-
        Help me build steps to watch the ship sail
        away.
      gradek_artist_loopsFP_instruction: |-
        The artist saw something funny in the distance.  Draw
        what you think he saw.
      gradek_artist_loopsPre_instruction: Ito ay isang bagong tipo ng palaisipan na
        tinatawag na "Artist". Maglaro sa antas at gumuhit ng isang bagay na masaya.
      gradek_playlab_events1_instruction: |-
        Make your robot say "Hello!" when the
        button is clicked.
      gradek_playlab_events1a_instruction: |-
        Add a block so that when you click the
        "up" button, Olive the Cat walks up.
      gradek_playlab_events1c_instruction: |-
        Jorge the Dog wants to say "Hi there."  Can
        you help him?
      gradek_playlab_events2_instruction: |-
        Edit the code so that when the second
        bird is clicked, your program plays a sound!
      gradek_playlab_events2a_instruction: |-
        Add a block so that when you click "down"
        Olive the Cat walks down.
      gradek_playlab_events2c_instruction: |-
        Help Jorge the Dog get moving by connecting
        the `move left` block to the `when left` event block that is already in the
        workspace.
      gradek_playlab_events3_instruction: |-
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      gradek_playlab_events3a_instruction: |-
        When the third bird is clicked, the background
        should change to a city. Can you add code to make this happen?
      gradek_playlab_events3b_instruction: |-
        Add a button so that Olive the Cat moves
        right when you click the "right" button.
      gradek_playlab_events3c_instruction: |-
        Now, get Jorge to move right when the
        `right` button is clicked.
      gradek_playlab_events4_instruction: |-
        Add code to make something happen when
        the fourth bird is clicked. Be creative!
      gradek_playlab_events4a_instruction: |-
        Add a block so that Olive the Cat moves
        left when you click the "left" button.
      gradek_playlab_events4c_instruction: |-
        Add events to have Jorge move up and
        down when the `up` and `down` buttons are pressed.
      gradek_playlab_events5_instruction: |-
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      gradek_playlab_events5a_instruction: |-
        About My Robot Project! Write code so
        that clicking on each bird shows a new fact about your robot.
      gradek_playlab_events5c_instruction: |-
        Make this more interesting by changing
        the background and playing a random sound when Jorge is clicked.
      gradek_playlab_eventsA_instruction: |-
        Now, have the cat change to a random size
        AND have it play a random sound when you click the center button.
      gradek_playlab_eventsFP_instruction: |-
        Add anything you want to this game.  Can
        you make the dinosaur disappear when Jorge runs into him?
      gradek_playlab_eventsPre_instruction: |-
        This is a Play Lab level.  Move blocks
        to the workspace and see what happens!
      group test_instruction: Make a game
      harvester_Kahoot_instruction: |-
        Now help the farmer pick the corn, lettuce,
        **and** pumpkin.
      harvey_pixelation_instruction: |-
        Encode an image of anything you like using
        binary. The binary language will be represented with '0' and '1' only.
      harvey_snowflake_artist1_instruction: Ihanda ang iyong niyebe para sa 3d na
        paglimbag!
      harvey_snowflake_artist2_instruction: Ihanda ang iyong niyebe para sa 3d na
        paglimbag!
      harvey_tictactoe_instruction: Tayo ay maglaro ng isang laro! Magguhit nang maraming
        mga X hangga't kaya mo! Maaari ka bang makakuha ng 3 sa isang hanay?
      iceAgeLoopsforVideo_instruction: |-
        Can you get to the acorn with just one `move
        forward` block?
      iceage_click_hello_instruction: 'Maaari mo bang matulungan si Sid na tumawag
        sa kanyang mga kaibigan kapag nag-click ka sa kanya? '
      iceage_click_hello_2018_instruction: 'Maaari mo bang matulungan si Sid na tumawag
        sa kanyang mga kaibigan kapag nag-click ka sa kanya? '
      iceage_free_play_instruction: 'Oras na para maglikha ng iyong sariling laro
        o kuwento! '
      iceage_free_play_2018_instruction: 'Oras na para maglikha ng iyong sariling
        laro o kuwento!

'
      iceage_free_playcourseF_IceAge_11_instruction: 'Oras na para maglikha ng iyong
        sariling laro o kuwento! '
      iceage_hello1_instruction: Tulungan si Sid na magsabi ng "Hello!" sa pamamagitan
        ng pagkaladkad ng `say` na bloke palabas at pagkonekta nito sa ilalim ng `when
        run` na pangyayari.
      iceage_hello1_2018_instruction: Tulungan si Sid na magsabi ng "Hello!" sa pamamagitan
        ng pagkaladkad ng `say` na bloke palabas at pagkonekta nito sa ilalim ng `when
        run` na pangyayari.
      iceage_hello2_instruction: Tulungan sina Manny at Sid na batiin ang bawat isa
        sa pamamagitan nang paggamit ng `actor ____ say` na bloke nang dalawang beses.
      iceage_hello2_2018_instruction: Tulungan si Manny at Sid na batiin ang bawat
        isa sa pamamagitan ng paggamit sa `actor__say` na bloke nang dalawang beses.
      iceage_move_events_instruction: Magsulat ng code para matulungan si Scrat na
        makuha ang lahat ng mga bunga ng ensina!
      iceage_move_events_2018_instruction: Magsulat ng code para matulungan si Scrat
        na makuha ang lahat ng mga bunga ng ensina!
      iceage_move_to_actor_instruction: Ikonekta ang bloke sa `when actor touches`
        na pangyayari para magpatugtog ng tunog kapag nahanap ni Diego si Manny.
      iceage_move_to_actor_2018_instruction: Magkonekta ng bloke sa `when actor touchers`
        na pangyayari para magpatugtog ng tunog kapag nahanap ni Diego si Manny.
      iceage_move_to_flag_instruction: Si Scrat ay naghahanap sa kayang bunga ng oak!
        Maari mo ba siyang tulungan ng gumalaw sa huling 200 na mga pixels?
      iceage_move_to_flag_2018_instruction: |-
        Scrat is looking for his acorn! Can
        you help him move the last 200 pixels?
      iceage_repeat_instruction: Tulungan si Granny makagawa ng ehersisyo sa pamamagitan
        ng paggalaw pakaliwa at pakanan nang paulit-ulit.
      iceage_repeat_2018_instruction: Tulungan si Granny na makapag-ehersisyo sa pamamagitan
        ng paulit-ulit na paggalawa pakaliwa at pakanan.
      iceage_sound_and_points_instruction: 'Maaari mo bang matapos ang programang
        ito para mapagawa ito na parehong **magpatugtog ng tunog** at **makakuha ng
        puntos** kapag si Sid at Granny ay nagkabangga? '
      iceage_sound_and_points_2018_instruction: 'Maaari mo bang matapos ang programang
        ito para mapagawa ito na parehong **magpatugtog ng tunog** at **makakuha ng
        puntos** kapag si Sid at Granny ay nagkabangga? '
      iceage_throw_hearts_instruction: Gamitin ang `actor __ throw` na utos para magawa
        ni Sid (aktor 1) na maghagis ng mga puso kay Granny (aktor 2) at itakda ang
        mood ni Granny sa masaya kapag siya ay natamaan sa mga ito.
      iceage_throw_hearts_2018_instruction: Gamitin ang `actor __ throw` na utos para
        magawa ni Sid (aktor 1) na maghagis ng mga puso kay Granny (aktor 2) at itakda
        ang mood ni Granny sa masaya kapag siya ay natamaan sa mga ito.
      iceage_warn_ice_age_instruction: Baguhin ang eksena sa isang mayelong bacgkround
        at itakda ang bilis ni Sid (aktor 1) sa mabilis.
      iceage_warn_ice_age_2018_instruction: Baguhin ang eksena sa isang mayelong bacgkround
        at itakda ang bilis ni Sid (aktor 1) sa mabilis.
      jessie-test_instruction: Lots of instructions
      k-1 maze 1_instruction: Maaari mo bang mapagawa akong gumalaw pakanluran para
        makapunta sa baboy?
      k1stickerfreeplay_instruction: |-
        The artist saw something funny in the distance.  Draw
        what you think he saw.
      kikiTesta_instruction: |-
        Our adventurer wants to collect coins.  But she can
        only use 4 blocks to get them.\r
        \r
        Can you help her grab as many as she
        can using just 4 blocks?
      kikiTesting_instruction: |
        .\r
         .\r
        .\r
        .\r
        .\r
        .\r
        \r
        .\r
        \r
      level 'grade3_Loops_10_instruction: |-
        Such a busy bee!\r
        \r
        Help bee collect
        all of the nectar and make all of the honey with the fewest blocks possible.
      level 'grade3_Loops_11_instruction: |-
        The shape of this path is different than
        the others. \r
        \r
        Can you collect all of the nectar using as few blocks
        as possible?
      level 'grade3_Loops_12_instruction: |-
        Can you find the quickest way for the
        bee to collect all of the nectar and make all of the honey?
      level 'grade3_Loops_2_instruction: |-
        This time, use a loop to gather all of
        the nectar.
      level 'grade3_Loops_3_instruction: |-
        Use a `repeat` loop to collect all of the
        nectar.
      level 'grade3_Loops_4_instruction: |-
        Now use the `repeat` block to collect all
        of the nectar and make all of the honey.
      level 'grade3_Loops_5_instruction: |-
        What a beautiful field of flowers!   Help
        the bee visit each one.  Can you find a way to do it with fewer than 7 blocks?
      level 'grade3_Loops_6_instruction: |-
        How many times can loops help you in this
        puzzle?  \r
        \r
        Loops are your friend! Use a few of them to complete this
        puzzle with the fewest blocks possible.
      level 'grade3_Loops_7_instruction: |-
        Those flowers look tasty!\r
        \r
        Collect
        nectar from each of the flowers using the fewest blocks possible.
      level 'grade3_Loops_8_instruction: |-
        Collect all the nectar and make all of
        the honey using the fewest blocks possible.
      level 'grade3_Loops_9_instruction: |-
        Collect nectar from each flower and make
        honey at each honeycomb using the fewest blocks possible.
      level grade3_Loops_2_instruction: |-
        This time, use a loop to gather all of the
        nectar.
      loop pet test_instruction: |-
        Last time, you practiced using the "repeat forever"
        loop to make a sprite do something forever. This time, we will use it to make
        a virtual pet. \r
        \r
        This dog's name is Daisy. Daisy LOVES to snack on
        carrots. Use the "drag and drop" block to move the carrot to Daisy.
      loops_forvideo_angrybirds_ab_instruction: |-
        Use loops to get the bird to the
        pig!
      loops_forvideo_angrybirds_cf_instruction: |-
        Use loops to get the bird to the
        pig!
      loops_forvideo_bee_cf_instruction: |-
        Use loops to help the bee get nectar from
        all the flowers!
      loops_forvideo_collector_ab_instruction: |-
        Use loops to help the collector get
        all the gems!
      loops_forvideo_collector_cf_instruction: |-
        Use loops to help Laurel collect
        gems!
      loops_forvideo_harvester_ab_instruction: |-
        Use loops to help the harvester pick
        the corn!
      loops_forvideo_harvester_cf_instruction: |-
        Use loops to help the harvester pick
        her crops!
      loops_forvideo_iceage_ab_instruction: Use loops to get Scrat to the acorn!
      loops_forvideo_iceage_cf_instruction: Use loops to get Scrat to the acorn!
      love_spring_1_instruction: |-
        Let's celebrate Spring!  We have put some seeds
        in the ground to prepare for the season's flowers.  Can you cover them up
        so that the birds don't eat them?
      love_spring_2_instruction: |-
        Our flowers are in full bloom!  Now we need the
        bee to grab nectar from each one so he can make plenty of honey back at his
        hive!
      love_spring_3_instruction: |-
        Figure out how to change this code so that Robin
        chooses a number between 1 and 20.  \r
        \r
        When you're ready, press "Run"
        and play until you guess Robin's number!
      marina_gameLab_play_instruction: Clone this level and make your own blocks!
      mike3bit_instruction: |-
        We start you with the 4x2 image Maddie was creating,
        but we've left out the last few pixels. Finish off the image by figuring
        out which colors are missing and encoding them.
      mike3bitbird_instruction: |-
        Here's an example of an image made with 3-bit color.
        Try changing it to understand how it works. If you want to reset the image,
        press "Start Over".
      mike3bitfreeplay_instruction: |-
        Make something awesome and share it with your
        classmates! You can copy and paste the value of a pixel to use it repeatedly.
      mike3bitmario_instruction: |-
        A careless binary coder typed in ONE extra 0 or
        1 somewhere within this image's data. The extra bit that is causing Mario
        to glitch out! \r
        \r
        Delete the extra bit to restore Mario back to normal!
      pet game 1_instruction: |-
        Use the "make a new sprite" block to make yourself
        a pet!
      pet game 2_instruction: |-
        Your pet needs some exercise! Use the "add behavior"
        block to get them moving.
      pet game 3_instruction: |-
        Pets love toys! Use a second "make sprite" block
        to give your pet a toy, then use the "move towards" behavior to make your
        pet run to their new toy.
      pet game 4_instruction: |-
        When your pet gets to their toy, they get excited!
        Use the "when touches" block to detect when your pet gets to their toy.\r
        \r
        When
        that happens, use the "remove behavior" block to make them stop walking,
        and the "add behavior" block to make them have a dance party!
      pet game 5_instruction: |-
        You can add lots more things for your pet to interact
        with! Play around with the "set sprite" block and make more stuff anywhere
        you want it!
      pet game 6_instruction: |-
        It's important for pets to learn to follow commands.
        Use the "when clicked" block to teach your pet to only start wandering after
        you click on them.
      pet game 7_instruction: |-
        Pets need to learn to stop, too! Use the "when clicked"
        block to teach your pet to stop wandering after you click on them.
      pet game 8_instruction: |-
        Your pet now has two toys! Use the "when clicked"
        block to get them to move to the toy you click on
      pet game 9_instruction: |-
        Your pet has been so good, they deserve a treat. Use
        the "add behavior" block to make the bone draggable, then drag it to your
        pet.
      playEventsK1_instruction: |-
        This game is called "Play Lab".  See if you can
        figure out what each block does.
      playEventsK2_instruction: |-
        Jorge wants to say "Hi there."\r
        \r
        Can you
        help?
      playEventsK3_instruction: |-
        Jorge wants to be scratched behind the ears!  Can
        you make it so that when you click Jorge he is happy?
      playEventsK4_instruction: |-
        Can you make it so that Jorge the dog chases Robin
        the bird when you click the up arrow?
      playEventsK5_instruction: |-
        Now add code so that Robin flies away when you click
        the forward arrow.
      playEventsK6_instruction: |-
        Have Robin talk back to Jorge when you click on
        her.
      playEventsK7_instruction: What else can you do in this fun scene?
      playLabDebugVideo1_instruction: |-
        Jorge the Dog wants to say "Hi there."  Can
        you help him?
      ramp_artist_loops1_instruction: Gumalaw pasulong nang mga 60 pixels para makumpleto
        ang palaisipang ito.
      ramp_artist_loops1_2018_instruction: Gumalaw pasulong nang mga 60 pixels para
        makumpleto ang palaisipang ito.
      ramp_artist_loops2_instruction: Gumalaw pasulong nang limang beses at gawin
        ang may kulay na linyang ito.
      ramp_artist_loops2_2018_instruction: Sumulong ng limang beses at gawin itong
        may kulay na linya.
      ramp_artist_loops3_instruction: Gumamit ng `repeat` na loop para iguhit ang
        limang may kulay na mga gitling.
      ramp_artist_loops3_2018_instruction: Gumamit ng `repeat` na loop para iguhit
        ang limang may kulay na mga gitling.
      ramp_artist_loops4_instruction: Ano ang mangyayari kapag nagdagdag ka ng 72
        degree na pagliko sa kanan pagkatapos ng lahat sa loob ng iyong loop?
      ramp_artist_loops4_2018_instruction: |-
        What happens when you add a 72 degree
        right turn after everything else inside your loop?
      ramp_artist_loops5_instruction: Gamitin ang mga loop para iguhit ang hagdanang
        ito.
      ramp_artist_loops5_2018_instruction: Gamitin ang mga loop para iguhit ang hagdanang
        ito.
      ramp_artist_loops6_instruction: Baguhin ang iyong loop para iguhit ang hagdanang
        ito.
      ramp_artist_loops6_2018_instruction: Baguhin ang iyong loop para iguhit ang
        hagdanang ito.
      ramp_artist_loops7_instruction: Maghanap ng paterno at paikilin ang code na
        ito gamit ang mga loop!
      ramp_artist_loops7_2018_instruction: Maghanap ng paterno at paikilin ang code
        na ito gamit ang mga loop!
      ramp_artist_loops8_instruction: Maghanap ng paterno at paikilin ang code na
        ito gamit ang mga loop.
      ramp_artist_loops8_2018_instruction: Maghanap ng paterno at paikilin ang code
        na ito gamit ang mga loop.
      ramp_artist_loops8_clone_instruction: Maghanap ng paterno at paikilin ang code
        na ito gamit ang mga loop.
      ramp_artist_loops9_instruction: Lutasin ang palaisipang ito sa pamamagitan ng
        pagguhit ng isang parisukat.
      ramp_artist_loops9_2018_instruction: Lutasin ang palaisipang ito sa pamamagitan
        ng pagguhit ng isang parisukat.
      sample1_instruction: |-
        Our adventurer wants to collect coins.  But she can only
        use 4 blocks to get them.\r
        \r
        Can you help her grab as many as she can
        using just 4 blocks?
      sample10_instruction: Now you can use loops to draw whatever you like!
      sample10a_instruction: |-
        You have helped the adventurer and her bee!  As a reward,
        please stay and play around in my magical village. \r
        \r
        You should have
        everything you need to create a game of your own.
      sample2_instruction: |-
        Use what you've learned to help bee gather all of this
        honey using only the blocks that you have here.
      sample2a_instruction: |-
        Use what you've learned to help bee gather all of this
        honey using only 4 blocks.
      sample3_instruction: |-
        Now you can help bee make all of the honey using just
        the blocks in the toolbox.
      sample3assessment_instruction: |-
        Can you figure out how to gather all of this
        nectar in just one try?
      sample4_instruction: |-
        Our adventurer has found a stash of coins in this cave.\r
        \r
        Can
        you help her grab as many as she can using just 7 blocks?
      sample5_instruction: Help bee make all of the honey.
      sample6_instruction: 'Challenge: Help bee make all of the honey.'
      sample7assessment_instruction: |-
        Can you help bee make all of the honey in just
        one try?
      sample8_instruction: |-
        Look at this trove of coins! How many can you get the
        adventurer to grab?
      sample9_instruction: 'Use loops to help the artist connect all of the dots.

'
      sample9a_instruction: |-
        The wizard has found his potions!  Use everything you
        have learned to help him collect them.
      scrat 16 (copy 1)_instruction: |-
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: Ensina! Ensina! Ensina! Gumamit ng "if" na bloke para
        madala ako doon gamit ang pinakakaunting bilang ng mga bloke.
      scrat 17 (copy 1)_instruction: |-
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: Ok, gawin natin ito ulit bilang pagsasanay - ito ay hindi
        lubhang magkaibia, ngunit mag-ingat sa pader!
      scrat 18 (copy 1)_instruction: |-
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: Ang "if-else" na mga bloke ay nagsusuri sa kondisyon,
        at pagkatapos ay gumawa ng isang bagay O iba pa. Para madala ako sa ensina,
        subukang gamitin ang bagong blokeng ito.
      scrat 19 (copy 1)_instruction: |-
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: Isa pang pagsasanay sa mga "if-else" na bloke, magagawa
        mo ba ito nang tama sa unang pagsubok lang?
      scrat 20_instruction: Maaari ka bang magdagdag ng 3 mga bloke lang para matulungan
        akong lutasin ang mas kumplikado pa na maze? Kung magawa mo ito nang tama,
        maaari akong maglakad sa kahit anong balukot na daan kahit anuman ang haba.
        Bilisan! Ang yelo ay natutunaw na!
      skratDebugVideo1_instruction: Dalhin si Scrat sa Ensina.
      subgoal U3 L4 introducing subgoal labels_instruction: Ipakilala ang orient na
        pagong at move na pagong
      subgoal U3L2 Using Simple Commands_instruction: Gumuhit ng 1x1 na parisukat
        sa taas at sa kaliwa ng panimulang posisyon ng pagong. I-click para makita
        ang buong mga instruksyon.
      subgoalU3L2_TurtleSquare_right_instruction: Gumuhit ng parisukat sa harap at
        pakanan ng panimulang lokasyon. (I-click para makita ang buong mga instruksyon)
      template test_instruction: what up
      testArtistForTestK_instruction: |-
        The Artist is trying to draw a line five times,
        but can't get it right.  Can you help?
      test_sarah_instruction: hi
      u3-old-drawing-view_instruction: DO This
      valentine_artist_03_instruction: Ngayon ay subukan ang isang bagay nang ikaw
        lang!
      weird_playLab_instruction: |-
        About My Robot Project! Write code so that clicking
        on each bird shows a new fact about your robot.
