"uk":
  data:
    script:
      name:
        20-hour:
          desc: Вступ до інформатики. 8 клас
          Unplug1: Етап 1
          Maze: Етап 2
          Unplug2: Етап 3
          Unplug3: Етап 4
          Artist: Етап 5
          Unplug4: Етап 6
          Artist2: Етап 7
          Unplug5: Етапі 8
          Farmer: Етап 9
          Unplug6: Етап 10
          Artist3: Етап 11
          Unplug7: Етап 12
          Farmer2: Етап 13
          Unplug8: Етап 14
          Artist4: Етап 15
          Unplug9: Етап 16
          Farmer3: Етап 17
          Unplug10: Етап 18
          Artist5: Етап 19
          Unplug11: Етап 20
        Hour of Code:
          desc: Година Коду
          Maze: Етап 1
        Edit Code:
          desc: Редагування коду (бета-версія)
          MazeEC: Етап 1
        2014 Levels:
          desc: Арканоід (бета-версія)
          Bounce: Етап 1
        Builder Levels:
          desc: Завдання, створені користувачами (бета-версія)
          Custom: Етап 1
        Flappy Levels:
          desc: Пташок Пурх
          Flappy: Етап 1
        Jigsaw Levels:
          desc: Головоломки (бета-версія)
          Jigsaw: Етап 1
        Step Levels:
          desc: Лабіринт (бета-версія)
          MazeStep: Крок етапу
        edit-code:
          desc: Редагування коду (бета-версія)
          MazeEC: Етап 1
          Webapp: Етап 2
          ArtistEC: Етап 3
          StudioEC: Етап 4
        events:
          desc: Арканоід (бета-версія)
          Bounce: Етап 1
          Studio: Етап 2
        builder:
          desc: Завдання, створені користувачами (бета-версія)
          Custom: Етап 1
        flappy:
          desc: Пташок Пурх
          Flappy: Етап 1
        jigsaw:
          desc: Головоломки (бета-версія)
          Jigsaw: Етап 1
        step:
          desc: Лабіринт (бета-версія)
          MazeStep: Крок етапу
        wordsearch:
          desc: Грамотна Бджілка (бета-версія)
          WordSearch: Етап 1
    game:
      name:
        Unplug1: Вступ до інформатики
        Maze: Лабіринт
        Multi: Множинний вибір
        Unplug2: Обчислювальне мислення
        Unplug3: Програмування по клітинках
        Artist: Художник
        Unplug4: Алгоритми
        Artist2: Художник 2
        Unplug5: Функції
        Farmer: Фермерка
        Unplug6: Умови
        Artist3: Художник 3
        Unplug7: Написання пісень
        Farmer2: Фермерка 2
        Unplug8: Абстракції
        Artist4: Художник 4
        Unplug9: Релейне програмування
        Farmer3: Фермерка 3
        Unplug10: Інтернет
        Artist5: Художник 5
        Unplug11: Підведення підсумків
        MazeEC: Лабіринт
        Bounce: Арканоід
        Flappy: Пташок Пурх
        Jigsaw: Пазли
        MazeStep: Покроковий режим лабіринту
        Wordsearch: Пошук слів
        Webapp: Webapp
        ArtistEC: Художник
        TextMatch: Співставлення тексту
        StudioEC: Ігрова студія
    trophy:
      name:
        Bronze: Бронза
        Silver: Срібло
        Gold: Золото
    concept:
      description:
        sequence: Огляд
        if: Блок Якщо
        if_else: Блок "якщо-то-інакше"
        loop_times: Блок "повторити ... разів"
        loop_until: Блок „Повторити до“
        loop_while: Блок "повторити поки"
        loop_for: Блок лічильника
        function: Функції
        parameters: Функції з параметрами
    level:
      instructions:
        maze_2_2: 'Можете допомогти мені спіймати лиху свиню? Складіть кілька блоків
          "рухатись вперед" і клацніть "Запустити програму", щоб я до неї дістався. '
        maze_2_1: Ця свиня куйовдить мені пір'я. Допоможіть її знайти!
        maze_2_2_5: Простежте шлях і проведіть до дурної свині. Уникайте динаміту,
          або полетить пір'я!
        maze_2_3: Проведіть мене до зеленої лиходійки! (Важайте на динаміт)
        maze_2_4: Зберігайте спокій та поможіть знайти лиху свиню. Інакше я розізлюсь!
        maze_2_5: Існує спосіб дістатись до лихої свині, використавши лише 2 блоки.
          Здогадаєтесь як?
        maze_2_6: Спробуйте перевести мене до зеленої порушниці, використавши лише
          три блоки.
        maze_2_7: Допоможіть прогнати лихе порося, використовуючи найменшу кількість
          блоків. Спробуйте використати кілька блоків "повторити... разів".
        maze_2_8: 'Коли блок сірий, це означає, що ви не можете видалити його. Розв''яжіть
          це завдання, використовуючи блок "повтори", для повторення тричі. Спробуйте
          покласти ці 3 блоки всередину сірого блоку "повтори": перемістити, перемістити,
          повернути.'
        maze_2_9: Гаразд, спробуйте новий блок "повторювати до" - дії повторюватимуться,
          доки я не дістанусь до набридливої свині.
        maze_2_10: Гаразд, ще раз для практики - ви зможете розв'язати це завдання,
          використавши лише 4 блоки?
        maze_2_11: Шановна людино. Мені зомбі. Мені голодний. Треба ... їсти ... соняшник.
          Можна доставити мене туди за 5 блоків?
        maze_2_12: Гаразд, це схоже, але трохи відрізняється. Можете справитись, використавши
          5 блоків?
        maze_2_13: 'Використовуйте новий блок "якщо", щоб дозволити мені вирішувати,
          коли потрібно повернути. Підказка: вам лише потрібно додати один блок, але
          уважно подивіться, які команди використано, аби ви змогли це зробити самі
          згодом.'
        maze_2_14: Гаразд, це схоже на попереднє завдання, але вам треба згадати,
          як ми використовували блоки "якщо" і "повторити" разом.
        maze_2_15: Мені хочеться соняшника! Використовуйте блок "якщо", щоб направити
          мене туди найменшою кількістю блоків.
        maze_2_16: Гаразд, зробимо це ще раз для практики - це не дуже відрізняється,
          але остерігайтеся пожирачів!
        maze_2_17: Блоки"якщо-інакше" перевіряють умову, потім роблять одну АБО іншу
          дію. Щоб направити мене до соняшника, використовуйте цей новий блок.
        maze_2_18: Ще трохи практики використання блоку "якщо-або". Ви зможете зробити
          усе правильно з першої спроби?
        maze_2_19: Ви зможете додати ще 3 блоки, щоб допомогти мені пройти складніший
          лабіринт? Якщо ви це зробите правильно, я зможу проходити по довільному
          кривому шляху будь-якої довжини.
        turtle_1_1: Привіт, Я художник. Ви можете написати код, щоб дозволити мені
          малювати майже що завгодно. Використовуйте кілька блоків, щоб допомогти
          мені малювати над сірими лініями на рисунку.
        turtle_1_2: 'Тепер намалюйте квадрат. ПРИМІТКА: вибирайте і використовуйте
          ваш улюблений колір в новому блоці "встановити колір".'
        turtle_1_3: Зробіть квадрат за допомогою лише 3 блоків.
        turtle_1_4: 'Намалюйте трикутник, кожна сторона якого іншого кольору, за допомогою
          параметра "випадковий колір", який щоразу вибиратиме інший колір. Підказка:
          ви повинні з''ясувати, як далеко слід повернути, натиснувши на число у блоці
          повороту.'
        turtle_1_5: Тепер для практики намалюйте трикутник, а потім квадрат, щоб отримати
          конверт.
        turtle_1_6: 'Ви з''ясували, як можна намалювати цей трикутник та квадрат?
          Підказка: намалюйте спершу трикутник, а потім з''ясуйте, як потрібно повернути,
          аби намалювати квадрат.'
        turtle_1_7: Добре, зробимо це трохи складнішим. Погляньте, чи ви можете намалювати
          ці зелені окуляри. Квадрати мають сторони по 100 пікселів кожен і вони на
          відстані 50 пікселів один від одного. Не забудьте зафарбувати зеленим!
        turtle_1_8: Гаразд, спробуйте з'ясувати, що відбувається, якщо ви запустите
          цей код (або натисніть "Виконати", щоб спробувати його). Повторіть досить
          разів, аби завершити малюнок. Кольори кожного разу будуть різними.
        turtle_1_9: Ви можете здогадатись, яким числом слід замінити знаки питання,
          щоб намалювати коло?
        turtle_1_10: 'Ви зробили це! Тепер намалюйте все, що хочете. Деякі кумедні
          ідеї: паличка, сніжинка або спіраль. Також спробуйте новий блок "встановити
          ширину". Розважайтеся!'
        turtle_4_1: 'Можете намалювати трикутник (з сторонами 100 пікселів) лише 3
          блоками? Підказка: використовуйте блок "повторити".'
        turtle_4_2: Додайте блок "повернути праворуч на 90 градусів" десь в середині
          програми, що вже є на робочій області, щоб намалювати ці трикутники.
        turtle_4_3: Добре. Ось код, який ви написали, щоб намалювати один трикутник.
          Ви можете додати блок "повторити" та "повернути", щоб зробити чарівну квітку?
        turtle_4_4: 'Ось подібний код від попередньої головоломки, але повертайте
          лише на 36 градусів після нанесення кожного трикутника. Скільки разів це
          слід виконати? (Підказка: після того, як 360 градусів повороту рисунок пройде
          повне коло)'
        turtle_4_5: 'Ось подібний код від попередньої головоломки, але повторіть повороти
          36 разів. На скільки градусів повинні бути повороти? (Підказка: після 360
          градусів повороту рисунок пройде повне коло)'
        turtle_4_6: Використовуючи лише 3 блоки, ви зможете намалювати квадрат зі
          сторонами у  20 пікселів?
        turtle_4_7: 'Ось код для малювання квадрата від останньої головоломки. Ви
          можете повторити його, щоб намалювати 10 суміжних клітинок у вигляді драбини?
          Підказка: вам потрібно додати тільки 2 блоки.'
        turtle_4_8: Ось рішення попередньої головоломки. Ви можете додати ще 2 блоки,
          аби завершити рисунок?
        turtle_4_9: Ось рішення із попередньої головоломки. На скільки градусів вам
          треба повернути, аби завершити малюнок? (Ви, напевно, потрібно буде вгадати
          кілька разів)
        turtle_4_10: Ось рішення попередньої головоломки. Скільки разів потрібно повторити,
          щоб завершити рисунок?
        turtle_4_11: Спробуйте змінити цифри у блоках "поворот" і "повторити" блоки,
          щоб зробити різні візерунки. Або поекспериментуйте, змінюючи решту коду,
          щоб намалювати все, що забажаєте.
        maze_karel_1_1: Привіт, я фермерка. Мені потрібна ваша допомога, щоб вирівняти
          поля на моїй фермі і тим самим підготувати її для посадки. Пересуньте мене
          на купу землі і вилучіть її за допомогою блока "видалити".
        maze_karel_1_2: Далі перемістіть мене до ями і заповніть її  ДВОМА відрами
          землі, використовуючи блок "заповнити".
        maze_karel_1_3: Перемістіть мене на купу землі і скажіть, скількома відрами
          її можна видалити за допомогою якомога меншої кількості блоків.
        maze_karel_1_4: 'Ви можете допомогти мені видалити всі чотири купи землі?
          Підказка: використовуйте блок повторити, якщо можете.'
        maze_karel_1_5: 'Допоможи мені заповнити всі ті ями 5 відрами землі. Підказка:
          ви можете покласти блок "повторити" всередину блоку "поки".'
        maze_karel_1_6: Видаліть всі купи землі, використовуючи стільки блоків, скільки
          потрібно. Нові параметри у розкривному меню блоку "поки" скажуть мені, чи
          я стою на купі або у ямі.
        maze_karel_1_7: Ого, я знайшла дуже глибокі ями! Я не знаю,  скільки відер
          землі для них потрібно. Ви можете написати програму, яка наповнює їх, поки
          земля не стане рівною?
        maze_karel_1_8: Допоможіть мені заповнити яму в кінці поля, використовуючи
          стільки блоків, скільки потрібно.
        maze_karel_1_9: 'Поможіть мені видалити всі ці купи землі. Спробуйте використати
          якомога менше блоків. Підказка: спробуйте використати блок "поки".'
        maze_karel_1_10: Я працюю допізна, тому вже стемнілося. Через це не можу сказати,
          наскільки великими є купи. Тепер я не маю усіх параметрів, які раніше використовувала
          для блоку поки. Переміщуйте мене по полю і якщо там є купа, то вилучіть
          її.
        maze_karel_1_11: 'Це вже зовсім стемнілося. Переміщуйте мене по полю. Якщо
          є купа, вилучіть її, а якщо є яма, то заповніть її. Підказка: використайте
          розкривне меню параметрів у блоці "Якщо".'
        turtle_2_1: 'Вітаю. Я - зомбі художник. Мені подобається малювати! Допоможіть
          мені намалювати квадрат особливим кольором. Важливе зауваження: ви маєте
          усі ті самі блоки, але вони тепер упорядковані за категоріями.'
        turtle_2_2: Запрошую до використання функцій, які дають змогу визначити нові
          блоки! Спробуйте новий блок "намалювати квадрат", який знаходиться у категорії
          „Функції“, щоб намалювати невеличкий зелений квадрат розміром 50х50.
        turtle_2_3: Використовуйте блок "повторити" (у категорії „Цикли“) для малювання
          3 квадратів розміром 100, кожен на 120 градусів один від одного. І зробіть
          це трьома різними випадковими кольорами.
        turtle_2_4: 'Тепер ми збираємося  пофантазувати. Поміняйте код так, щоб намалювати
          36 квадратів, шириною 100 пікселів та повернутими на 10 градусів один від
          одного. Підказка: ви можете захотіти використовувати повзунок, щоб зробити
          швидшим моє переміщення.'
        turtle_2_5: Намалюйте квадрати зі сторонами 50, 60, 70, 80 і 90 пікселів.  Вам
          потрібно використати функцію "намалювати квадрат" п'ять разів.
        turtle_2_6: 'Отож, ця програма буде використовувати лічильник, щоб малювати
          однакові квадрати, як минулого разу. Ви ж хочете, аби квадрат був такого
          розміру, як значення лічильника, тому використовуйте блок "лічильник". Підказка:
          він у категорії змінні.'
        turtle_2_7: Ось програма для малювання спіралі, але блоки вимкнені, тому вони
          не будуть працювати. Зробіть нову програму за допомогою блоку "рахувати
          з" (в категорії цикли) і блоку "лічильник" блок (в категорії змінних), щоб
          намалювати спіраль.
        turtle_2_7_5: Існує нова функція „намалювати сніговика“ (у категорії функції).
          Намалюйте двох сніговиків висотою 250 і 100.
        turtle_2_8: Це трохи складно. Використайте функцію "намалювати сніговика"
          і новий блок "перескочити вперед" (в категорії дії). Намалюйте 3 сніговиків
          різними кольорами на відстані 100 пікселів один від одного.
        turtle_2_9: Використовуйте цикл "рахувати з", щоб намалювати родину сніговиків
          висотами 110, 100, 90, 80 і 70. Сніговики повинні бути на відстані 60 пікселів
          один від одного.
        turtle_2_10: Ось код, щоб спробувати поекспериментувати з різними спіралями.  Що
          станеться, якщо ви зміните число поворотів? Або встановите випадковий колір
          у циклі?  Намалюйте все, що завгодно.
        maze_karel_2_1: 'Спробуйте, використовуючи блоки, допомогти мені видалити
          всі купи і заповнити всі ями на землі. Намагайтеся використати цикли замість
          багатьох блоків. Підказка: ви можете покласти цикл всередині іншого циклу.'
        maze_karel_2_2: Ми визначили наш власний блок під назвою "заповнити 5", який
          зараз знаходиться в категорії функцій. Використайте його, щоб допомогти
          мені заповнити цю яму.
        maze_karel_2_3: Використайте новий блок функцій "заповнити 5", щоб допомогти
          мені заповнити всі ями. Вам доведеться перетягнути блок "заповнити 5" із
          категорії функцій.
        maze_karel_2_4: Визначте нову функцію, яка видаляє 7 відер землі. Потім використайте
          її, щоб написати програму, яка зможе допомогти видалити всі купи.
        maze_karel_2_5: Створіть нову функцію, яка видаляє 6 відер з купи і скористайтеся
          нею, щоб допомогти мені вирівняти усі купи.
        maze_karel_2_6: Використайте дві нові функції "заповнити 8" та "вилучити 8",
          щоб допомогти мені згладжувати купи і заповнювати ями.
        maze_karel_2_7: На моєму полі - корова! Напишіть нову функцію, яка допоможе
          мені уникнути корови і видалити купу. Покладіть всі ваші блоки всередину
          нової функції.
        maze_karel_2_8: Використайте цю нову функцію "уникнути корови і видалити 1",
          щоб допомогти мені видалити всі купи.
        maze_karel_2_9: Чудово, ось функція, яка видаляє 4 різні купи землі, розміщені
          у вертикальній стовпчик. Спробуйте покласти цю функцію всередину циклу,
          так щоб видалити всі купи землі, використовуючи лише кілька нових блоків.
        maze_karel_2_10: Перемістіть мене по полю і використайте ці дві функцій, щоб
          допомогти мені видалити всі купи і заповнити всі ями.
        turtle_3_1: Це завдання покаже визначення функцій "намалювати квадрат" і "намалювати
          коло".  Саме визначення функції не запускає виконання своїх команд.  Потрібно
          використати блок "намалювати квадрат", щоб насправді намалювати його.
        turtle_3_2: На основі функції "намалювати квадрат", наприклад, можна створити
          функцію "намалювати трикутник" і використовувати її.
        turtle_3_3: 'Намалюйте трикутну огорожу навколо кішок і квадратну огорожу
          навколо корови.  Порада: тестуйте програму в міру того, як ви просуваєтесь
          у її рішенні.'
        turtle_3_4: Погляньте, чи ви можете з'ясувати як використати "намалювати квадрат"
          і "намалювати трикутник" (і деякі інші блоки) для побудови будинку навколо
          лева.
        turtle_3_5: 'Тепер створіть нову функцію "намалювати будинок" і використайте
          її для розміщення двох кішок у будинку. Підказка: створіть нову функцію
          за допомогою блоку "щось зробити" і введіть власний текст, щоб назвати блок.'
        turtle_3_6: 'Використовуючи "намалювати квадрат" як приклад, додайте введення
          довжини для „намалювати трикутник". Потім намалюйте трикутники різних розмірів.
          (Підказка: натисніть зірочку, щоб додати параметр введення до функції)'
        turtle_3_7: Додайте параметр, з назвою "довжина" в "намалювати будинок" і
          створіть великий будинок для слона (зі сторонами в 150 пікселів)
        turtle_3_8: Ось тут є усі блоки з попередньої головоломки.  Змініть "намалювати
          будинок", аби я опинився у нижньому правому куті після малювання нового
          будинку. Використовуйте цю змінену функцію, щоб намалювати три будинки.
        turtle_3_9: Ви можете повторно створити функцію "намалювати будинок" без допомоги?
          Спробуйте це, а потім намалювати ряд будинків.
        turtle_3_10: Ви багато чому навчилися! Тепер використайте це, щоб зробити
          все, що ви хочете. Спробуйте намалювати зірку або спіраль або сніжинку.
        maze_karel_debug_seq_1: Ласкаво просимо у відлагодження! Мій код працює неправильно.
          Ви можете визначити проблему і виправити її, щоби я змогла вирівняти поле
          для посадки?
        maze_karel_debug_seq_2: Що не так з цією програмою? Як слід виправити цю проблему,
          аби я змогла видалити цю купу?
        maze_karel_debug_repeat: Відлагодьте цю програму для мене, аби моє поле було
          красивим і рівним.
        maze_karel_debug_while: Як ви повинні змінити цю програму, щоб допомогти мені
          засипати яму?
        maze_karel_debug_if: Допоможіть! Виправте програму, щоби моє поле стало повністю
          рівним.
        maze_karel_debug_if_else: Відлагодьте цю програму, аби я змогла заповнити
          ями і видалити всі купи.
        maze_karel_debug_function_1: Що вам потрібно змінити у цій програмі, щоб допомогти
          мені видалити всі купи?
        maze_karel_debug_function_2: Можете ви виправити цю програму для мене так,
          щоби я змогла вирівняти своє поле?
        maze_karel_debug_function_3: 'Відредагуйте цю програму, щоб я видалила усі
          купи зі свого поля. '
        turtle_5_1: Спробуйте запустити програму, і внести зміни - подивіться, що
          трапиться. Можете здогадатись, що відбувається?  (Або видаліть код і замініть
          його на зовсім інший)
        turtle_5_2: Спробуйте запустити програму, і внести зміни - подивіться, що
          трапиться. Можете здогадатись, що відбувається?  (Або видаліть код і замініть
          його на зовсім інший)
        turtle_5_3: Спробуйте запустити програму, і внести зміни - подивіться, що
          трапиться. Можете здогадатись, що відбувається?  (Або видаліть код і замініть
          його на зовсім інший)
        turtle_5_4: Спробуйте запустити програму, і внести зміни - подивіться, що
          трапиться. Можете здогадатись, що відбувається?  (Або видаліть код і замініть
          його на зовсім інший)
        turtle_5_5: Спробуйте запустити програму, і внести зміни - подивіться, що
          трапиться. Можете здогадатись, що відбувається?  (Або видаліть код і замініть
          його на зовсім інший)
        turtle_5_6: Спробуйте запустити програму, і внести зміни - подивіться, що
          трапиться. Можете здогадатись, що відбувається? (Або видаліть код і замініть
          його на зовсім інший)
        maze_3_1: Мені потрібно дістатися до цієї свиня! Введіть кілька викликів move();
          для переміщення аби я міг дістатися цілим назад.
        maze_3_2: Напишіть мені програму, щоби я міг зробити шлях аж до свині.
        maze_3_3: Як я повинен дістатися до свині? Зробіть так, аби я не зачепив у
          полі вибухівку!
        maze_3_4: Ох! Напишіть мені програма, яка приведе мене до свині і дозволить
          не зачепити вибухівку.
        bounce_1: Додайте блок до блоку "коли стрілка вліво" і натисніть "Запустити".
          Переміщуйте платформу, використовуючи стрілку ліворуч для досягнення цілі.
        bounce_2: Додайте блоки до блоків "коли стрілка вправо" і "коли стрілка вліво".
          Переміщуйте платформу для досягнення обох цільових показників.
        bounce_3: Тепер спробуйте щось подібне з блоком "коли стрілка вгору". Перемістіть
          платформу до кінцевої цілі вгорі.
        bounce_4: На цей раз потрібно додати чотири блоки. Перемістіть платформу до
          всіх чотирьох цілей для вирішення цього завдання.
        bounce_5: Ми запускатимемо м'яч у напрямку платформи. Прикріпіть блок до блоку
          "коли м'яч влучає у платформу", щоб забезпечити досягнення цілі.
        bounce_6: Тепер ціль знаходиться вгорі. Для розв'язання цієї задачі потрібно
          додати блоки до обох блоків "коли м'яч влучає".
        bounce_7: Додайте блоки до кожного з блоків "коли". Відбивайте м'яч, поки
          він не досягне цільового показника.
        bounce_10: Тепер ціль знаходиться нагорі. Для створення гри додайте блоки
          "додати бал" і "додати бал супротивнику" до блоків "коли м'яч влучає в ціль"
          і "коли м'яч промахується повз платформу". Подивіться, скільки очок ви можете
          заробити, перш ніж супротивник отримає два очка.
        bounce_11: Тепер блоки можна прикріпити до блоку "коли гра починається". Вам
          потрібно прикріпити блок "запустити новий м'яч" у кількох місцях. Також,
          спробуйте змінити сцену чи швидкість платформи та м'яча і подивитись, скільки
          очок зможете заробити, поки супротивник не отримає два.
        bounce_12: Створіть свою власну гру Арканоід. Ви можете змінити всі візуальні
          ефекти та правила гри. Коли ви завершите роботу, натисніть кнопку "Поділитися",
          щоб запросити друзів спробувати вашу гру на своїх телефонах.
        Custom_builder: Перетягуйте блоки з панелі інструментів на робочу область
          для того, щоб створити бажаний рівень. Клацніть "Запустити програму", коли
          все готово.
        flappy_1: Додайте блок до блоку "коли клацнули", а тоді запустіть програму.
          Клацайте чи торкайтесь екрану для того, щоб Пурх дістався до цілі.
        flappy_2: Тож ми додали землю. Додайте блок до блоку "коли впав на землю".
          Ваш код має завершувати гру, коли Пурх розбивається.
        flappy_3: Блок "коли гра починається" дозволяє запускати певний код на початку
          гри. Спробуйте задати швидкість та добратись до мети.
        flappy_4: Пурх летітиме крізь перешкоди, якщо ви не напишете код, що змусить
          його врізатись у них. Додайте блоки до блоку "коли влучили у перешкоду".
          Ваш код має завершувати гру, коли Пурх вріжеться у перший набір труб.
        flappy_5: Додамо табло підрахунку балів коли Пурх долає перешкоди. Додайте
          блок "коли перешкоду подолано" та заробіть бал, провівши Пурха крізь перший
          набір труб.
        flappy_6: Подивіться, чи ви все ще можете заробити бал, змушуючи Пурха махати
          крилами більше або менше.
        flappy_7: Тепер спробуйте змінити сцену, прикріпляючи блок до блоку "коли
          гра починається".
        flappy_8: Візуальні ефекти можна встановити будь-який час, не тільки коли
          гра починається. Спробуйте встановити ВИПАДКОВУ сцену, коли відбуваються
          інші події, наприклад, при проходженні перешкоди.
        flappy_9: 'А тепер ускладнимо: коли зачепимо перешкоду або землю, не завершуйте
          гру, а спробуйте встановити бали назад на 0.'
        flappy_11: Створіть свою власну гру в Пурха (Flappy). Ви можете змінити всі
          візуальні ефекти і правила гри, навіть силу тяжіння! Коли ви завершите,
          натисніть кнопку Готово, щоб дозволити друзям спробувати вашу гру на своїх
          телефонах.
        flappy_k1_1: Грати в Пурха
        flappy_k1_2: Додайте блок до блоку "коли клацнули", а тоді запустіть програму.
          Клацайте чи торкайтесь екрану для того, щоб Пурх дістався до цілі.
        flappy_k1_3: Тож ми додали землю. Додайте блок до блоку "коли впав на землю".
          Ваш код має завершувати гру, коли Пурх розбивається.
        flappy_k1_4: Блок "коли гра починається" дозволяє запускати певний код на
          початку гри. Спробуйте задати швидкість та добратись до мети.
        flappy_k1_5: Пурх летітиме крізь перешкоди, якщо ви не напишете код, що змусить
          його врізатись у них. Додайте блоки до блоку "коли влучили у перешкоду".
          Ваш код має завершувати гру, коли Пурх вріжеться у перший набір труб.
        flappy_k1_6: Додамо табло підрахунку балів коли Пурх долає перешкоди. Додайте
          блок "коли перешкоду подолано" та заробіть бал, провівши Пурха крізь перший
          набір труб.
        flappy_k1_7: Поглянемо, чи зможете ви отримати кілька балів за пройдену перешкоду
        flappy_k1_8: Тепер спробуйте змінити сцену, прикріпляючи блок до блоку "коли
          гра починається".
        flappy_k1_9: Спробуйте змінити гравця шляхом приєднання блоку "встановити
          гравця" до блоку "коли гра починається".
        jigsaw_1: Вибрати блок
        jigsaw_2: Перетягніть блок до цілі
        jigsaw_3: Складіть блоки для формування зображення
        jigsaw_4: Складіть блоки для формування зображення
        jigsaw_5: Складіть блоки для формування зображення
        jigsaw_6: Складіть блоки для формування зображення
        jigsaw_7: Складіть блоки для формування зображення
        jigsaw_8: Складіть блоки для формування зображення
        jigsaw_9: Складіть блоки для формування зображення
        jigsaw_10: Складіть блоки для формування зображення
        jigsaw_11: Складіть блоки для формування зображення
        jigsaw_12: Складіть блоки для формування зображення
        jigsaw_13: Виправте пазл!
        mazestep_1: Опис кроку лабіринту
        mazestep_2: Опис кроку лабіринту
        mazestep_3: Опис кроку лабіринту
        mazestep_4: Опис кроку лабіринту
        mazestep_5: Опис кроку лабіринту
        studio_c2_1: Можете запрограмувати собаку, щоб він сказав "Привіт, світе"?
        studio_c2_2: Можете запрограмувати собаку, щоб він щось говорив, а потім,
          щоб щось говорив кіт?
        studio_c2_3: Можете написати програму, щоб змусити собаку переміститись до
          кота?
        studio_c2_4: Можете написати програму, щоб змусити собаку рухатись до кота,
          який скаже "привіт" при наближенні собаки?
        studio_c2_5: Можете запрограмувати восьминога, щоб він говорив "Привіт", коли
          його клацають?
        studio_c2_6: Можете написати програму, у якій пінгвін рухатиметься за допомогою
          клавіш вгору / вниз / вправо / вліво до усіх цілей?
        studio_c2_7: Блок "повторювати завжди" дозволяє виконувати код безперервно.
          Можете прикріпити такі блоки, щоб динозавр постійно рухався вгору та вниз?
        studio_c2_8: Можете запрограмувати пінгвіна, щоб він сказав "Ой!" і програв
          звук "удар", якщо він натрапить на динозавра, а тоді перемістити його за
          допомогою стрілок, щоб переконатись, що так і станеться?
        studio_c2_9: Ви можете додати блок "додати бал" коли пінгвін натрапляє на
          восьминога і потім перемістити його стрілками поки не отримаєте бал?
        studio_c2_10: Ви можете додати блоки, щоб змінити фон і швидкість руху пінгвіна
          і потім перемістити його стрілками до отримання балу?
        studio_c2_11: Створіть власну історію. Коли завершите, клацніть Готово, щоб
          запросити друзів випробувати гру на своїх телефонах.
        studio_c3_story_1: Можете запрограмувати собаку, щоб він сказав "Привіт, світе"?
        studio_c3_story_2: Можете запрограмувати собаку, щоб він щось говорив, а потім,
          щоб щось говорив кіт?
        studio_c3_story_3: Можете написати програму, щоб змусити собаку переміститись
          до кота?
        studio_c3_story_4: Можете написати програму, щоб змусити собаку рухатись до
          кота, який скаже "привіт" при наближенні собаки?
        studio_c3_story_5: Ви можете додати блок, щоб зробити восьминога щасливим?
        studio_c3_story_6: Створіть власну історію. Коли завершите, клацніть Готово,
          щоб запросити друзів випробувати гру на своїх телефонах.
        studio_c3_game_1: Можете запрограмувати восьминога, щоб він говорив "Привіт",
          коли його клацають?
        studio_c3_game_2: Можете написати програму, у якій пінгвін рухатиметься за
          допомогою клавіш вгору / вниз / вправо / вліво до усіх цілей?
        studio_c3_game_3: Блок "повторювати завжди" дозволяє виконувати код безперервно.
          Можете прикріпити такі блоки, щоб динозавр постійно рухався вгору та вниз?
        studio_c3_game_4: Можете запрограмувати пінгвіна, щоб він сказав "Ой!" і програв
          звук "удар", якщо він натрапить на динозавра, а тоді перемістити його за
          допомогою стрілок, щоб переконатись, що так і станеться?
        studio_c3_game_5: Ви можете додати блок "додати бал" коли пінгвін натрапляє
          на восьминога і потім перемістити його стрілками поки не отримаєте бал?
        studio_c3_game_6: Ви можете додати блоки, щоб змінити фон і швидкість руху
          пінгвіна і потім перемістити його стрілками до отримання балу?
        studio_c3_game_7: Створіть власну гру. Коли завершите, натисніть кнопку Готово,
          щоб поділитись грою з друзями.
        studio_playlab_1: Пінгвін хоче сказати "Привіт" - ви можете йому допомогти?
        studio_playlab_2: Печерний хлопчик (персонаж 1) та Печерна дівчинка (персонаж
          2) хочуть привітатись один з одним. Можете їм допомогти, двічі використавши
          блок "говорити"?
        studio_playlab_3: Можете допомогти Тенісистці дістатись до прапорця?
        studio_playlab_4: Можете допомогти Тенісисту (персонаж 1) дістатись до Тенісистки
          (персонаж 2), і грати звук, коли він потрапить на місце?
        studio_playlab_5: Можете допомогти Космонавту промовити "привіт землянам",
          коли на нього клацнуть? Не забувайте клацати персонажа після запуску програми
        studio_playlab_6: Можете допомогти Відьмочці переміщуватися стрілками вгору/вниз/вліво/вправо,
          щоб дістатися до кожної з чарівних вогняних куль?
        studio_playlab_7: Блок "повторювати завжди" дозволяє безперервно виконувати
          команди. Можете приєднати такі блоки, щоб допомогти чарівникові постійно
          рухатися праворуч та ліворуч?
        studio_playlab_8: Можете розмістити блоки так, щоб додавався бал та програвався
          звук щоразу, як єдиноріг доторкається до чарівника, та перемістити його
          стрілками, щоб перевірити свою програму?
        studio_playlab_9: Встановіть космічне тло для сцени та допоможіть Космонавту
          дістатися до Інопланетянина швидше, змінюючи його швидкість. Тоді перемістіть
          його стрілками до Прибульця та попередьте усіх про вторгнення
        studio_playlab_10: Створіть власну гру. Коли завершите, натисніть кнопку Готово,
          щоб поділитись грою з друзями.
        studio_full_sandbox: Створіть власну гру. Коли завершите, натисніть кнопку
          Готово, щоб поділитись грою з друзями.
        studio_k1_1: Можете запрограмувати собаку, щоб він сказав "Привіт, світе"?
        studio_k1_2: Можете запрограмувати собаку, щоб він щось говорив, а потім,
          щоб щось говорив кіт?
        studio_k1_3: Можете написати програму, щоб змусити собаку переміститись до
          кота?
        studio_k1_4: Запрограмуйте собаку так, щоб він рухався до кота і говорив "привіт".
        studio_k1_5: Ви можете додати блок, щоб зробити восьминога щасливим?
        studio_k1_6: Створіть свою власну історію! Переміщуйте кота і собаку та змусьте
          їх говорити.
        maze_wordsearch_k_1: Переміщуйте мене, щоб написати слово EAST (СХІД)
        maze_wordsearch_k_2: Переміщуйте мене, щоб написати слово SOUTH (ПІВДЕНЬ)
        maze_wordsearch_k_3: Переміщуйте мене, щоб написати слово WEST (ЗАХІД)
        maze_wordsearch_k_4: Переміщуйте мене, щоб написати слово NORTH (ПІВНІЧ)
        maze_wordsearch_k_6: Переміщуйте мене на Схід та Південь, щоб написати слово
          JUMP (СТРИБАТИ)
        maze_wordsearch_k_9: Переміщуйте мене у різні сторони, щоб утворити слово
          CODE (КОД)
        maze_wordsearch_k_13: Переміщуйте мене у різні сторони, щоб утворити слово
          DEBUG (ВІДЛАГОДЖЕННЯ)
        maze_wordsearch_k_15: Переміщуйте мене у різні сторони, щоб утворити слово
          ABOVE (ВИЩЕ)
        maze_wordsearch_k_16: Переміщуйте мене у різні сторони, щоб утворити слово
          BELOW (НИЖЧЕ)
        maze_wordsearch_k_20: Це перевірка! Переміщуйте мене в різні сторони, щоб
          написати слово STORY (ІСТОРІЯ)
        webapp_ec_simple: Створити свій веб-додаток за допомогою createHtmlBlock.
        turtle_ec_1_2: 'Тепер, намалюйте квадрат. Примітка: використайте свій улюблений
          колір, за допомогою нового блоку "колір олівця".'
        turtle_ec_1_10: 'Ви це зробили! Тепер можете малювати, що завгодно. Деякі
          ідеї для зацікавлення: фігурка, сніжинка або спіраль. Також спробуйте новий
          блок "ширина пера". Розважайтеся!'
        studio_ec_sandbox: Створіть власну гру. Коли завершите, натисніть кнопку Готово,
          щоб поділитись грою з друзями.
    levelbuilder:
      frozen line:
        instructions: Привіт! Я Ельза з Еренделу. Допоможіть мені намалювати лінію.
      frozen perpendicular:
        instructions: Тепер подивимось, чи зможемо ми створити дві лінії, розміщені
          на 90 градусів одна відносно іншої. Вам знадобляться блоки "Повернути" та
          "Переміститись".
      frozen square iterative:
        instructions: Схоже, що ми знаходимося на півдорозі до малювання квадрату.
          Складемо 4 лінії, щоб утворився квадрат.
      frozen square loop:
        instructions: Привіт, я Анна з Еренделу! Намалюємо квадрат за допомогою блоку
          "Повторити", що зменшить кількість блоків програми. Скільки разів (???)
          потрібно повторювати дії всередині цього блоку, щоб отримати квадрат?
      frozen square loop 3x:
        instructions: Спробуємо створити три квадрати, повертаючи трохи після кожного
          із них. Обов'язково повертайте на 120 градусів перед кожним із квадратів.
      frozen square snowflake:
        instructions: Зможете створити сніжинку, використовуючи блок "Повторити",
          щоб намалювати 10 квадратів, та блок "Повернути", щоб повертати на 36 градусів
          після кожного із них?
      frozen cross:
        instructions: Скористайтесь блоком "Повторити", щоб намалювати плюсик. Ви
          зауважили, як Ельза рухається вперед та назад?
      frozen cross rotate:
        instructions: А тепер спробуйте повторити це 10 разів. На скільки градусів
          слід повертати після кожної з ліній?
      frozen cross rotate dense:
        instructions: 'А повторимо це 90 разів! Скільки разів 90 входить у 360? Підказка:
          це дуже мале число.'
      frozen diamond:
        instructions: 'Створимо паралелограм. Він схожий на квадрат, але має різні
          кути: 60 та 120 градусів, замість усіх по 90 градусів.'
      frozen diamond mini snowflake:
        instructions: А ви знали, що кожна сніжинка має іншу форму? Створимо нову
          сніжинку, за допомогою блоку "Повторити", щоб намалювати паралелограм 4
          рази, щоразу повертаючи після малювання фігури на 90 градусів.
      frozen diamond snowflake:
        instructions: А тепер створимо сніжинку, повторюючи малювання паралелограма
          10 разів, і повертаючи щоразу на 36 градусів.
      frozen circle:
        instructions: Коло є особливою фігурою. Здогадаєтесь, яке число потрібно поставити
          замість знаків питання, щоб намалювати коло?
      frozen circle function:
        instructions: Використайте блок "Створити коло", щоб намалювати 10 кіл, котрі
          накладаються. Не забувайте перескакувати між колами.
      frozen circle function in circle:
        instructions: А тепер створимо 20 кіл, котрі накладаються, повертаючи на 18
          градусів між колами.
      frozen circle function with parameter:
        instructions: Тепер блок "Створити коло" може малювати кола різного розміру.
          Можете скористатись ним, щоб намалювати мале коло розміром 5, і велике коло
          розміром 10?
      frozen snowflower:
        instructions: Складні морозні узори можна створювати за допомогою простих
          фігур. Зможете створити цей узор з 5 кіл розміром 5, та 5 кіл розміру 10?
      frozen snowflake branch:
        instructions: Спробуйте використати блок "Створити гілочку сніжинки", щоб
          створити 3 гілочки, котрі вже нагадують сніжинку.
      frozen snowflake full:
        instructions: А тепер повторіть 8 разів, щоб утворилась красива сніжинка!
      frozen freeplay:
        instructions: Ви офіційно стали головним художником! Створіть зимову казку
          та поділіться нею з друзями.
      scrat 16:
        instructions: Жолудь! Жолудь! Жолудь! Використайте блок "якщо" з якомога меншою
          кількістю інших блоків, щоб допомогти дістатися до нього.
      scrat 17:
        instructions: Що ж, спробуємо ще раз - це мало відрізняється, але зважайте
          на стіну!
      scrat 18:
        instructions: Блоки "якщо-інакше" перевіряють умову, і виконують одну дію
          АБО іншу. Скористайтесь цим блоком, щоб провести мене до жолудя.
      scrat 19:
        instructions: Ще трохи практики використання блоку "якщо-або". Ви зможете
          зробити усе правильно з першої спроби?
      scrat 20:
        instructions: Зможете пройти складніший лабіринт, додавши всього 3 блоки?
          Якщо зробите все правильно, я зможу пройти будь-який звивистий шлях довільної
          довжини. Поспішіть! Лід тане!
      Standalone_Artist_1:
        instructions: Ласкаво просимо до Художника! Передусім, спробуємо намалювати
          простий квадрат, використовуючи блоки "повернути праворуч" і "перемістити
          вперед". Кожна сторона повинна бути завдовжки 100 пікселів.
      Standalone_Artist_2:
        instructions: Намалюйте ромб з кутами 120 та 60 кутів та сторонами по 150
          пікселів.
      Standalone_Artist_3:
        instructions: Можете намалювати шестикутник зі сторонами по 100 пікселів та
          кутами по 60 градусів?
      Standalone_Artist_4:
        instructions: Тепер у нас є новий блок - повтори. Це дозволить повторно виконувати
          набір команд. Що буде, якщо ви повторите ці команди 6 разів?
      Standalone_Artist_5:
        instructions: Скільки разів потрібно повторити цикл, щоб утворити з ромбів
          квітку?
      Standalone_Artist_5.5:
        instructions: 'Зауважте, як завдяки циклу ми спростили код малювання ромба.
          Тепер можна виконати цикл 12 разів і утвориться квітка. Підказка: потрібно
          повертати на 30 градусів щоразу після малювання ромба, щоб не малювати повторно
          на тому ж місці.'
      Standalone_Artist_6:
        instructions: 'Повторіть код ромба 6 разів, щоб намалювати узор. На скільки
          градусів потрібно щоразу повертати? Підказка: розділіть кількість градусів
          у колі на кількість повторів циклу.'
      Standalone_Artist_7:
        instructions: 'Функція - це інструмент програмування, котрий дозволяє уникнути
          повторів. Ця функція малює квітку, тож її можна використовувати щоразу,
          коли потрібно намалювати квітку. Використайте її, а також новий блок "перескочити
          вперед", щоб намалювати ці квіти. Підказка: відстань між квітами - 150 пікселів'
      Standalone_Artist_8:
        instructions: Ось функція з назвою "намалювати фігуру", яку ми запрограмували
          на малювання шестикутників. Запустіть код і подивіться, що відбувається,
          а тоді поекспериментуйте з функцією. Можете змінити її так, щоб малювати
          узори з квадратів, трикутників чи восьмикутників?
      Standalone_Artist_9:
        instructions: А тепер намалюйте будь-який малюнок, як бажаєте! У вас є заготовка
          функції, яку можна використати для малювання будь-якої фігури!
    video:
      name:
        maze_intro: Вступ до лабіринту
        artist_intro: Вступ до художника
        farmer_intro: Вступ до фермера
        flappy_intro: Вступ до Пташка
        loop_times: Блок "повторити ... разів"
        loop_until: Блок „Повторити до“
        if: Блок Якщо
        if_else: Блок Якщо/інакше
        if_else_scrat: Блок Якщо/інакше
        function: Функції
        loop_while: Блок "повторити поки"
        loop_for: Блок лічильника
        parameters: Функції з параметрами
        hoc_wrapup: Підсумок години коду
        Unplug1: Що таке інформатика?
        Unplug2: Обчислювальне мислення
        Unplug3: Програмування по клітинках
        Unplug4: Алгоритми
        Unplug5: Функції
        Unplug6: Умови
        Unplug7: Написання пісень
        Unplug8: Абстракції
        Unplug9: Релейне програмування
        Unplug10: Інтернет
        Unplug11: Підведення підсумків
        C1_happy_maps_unplugged: Щасливі карти
        C1_moveitmoveit_unplugged: Рухайся, рухайся
        C1_bigevent_unplugged: Велика подія
        C1_getting_loopy: Економія на повторах
        C1_pair_programming: Парне програмування
        C1_maze_intro_sequencing: 'Лабіринт: вступ у послідовність'
        C1_maze_debugging: 'Лабіринт: відлагодження'
        C1_bee_level_intro: Рівень Бджоли - вступ
        C1_artist_intro: Вступ до художника
        C1_spelling_bee_intro: Вступ до грамотної Бджілки
        C1_zuck_repeat_loop: Лабіринт - цикли
        C1_bee_loops: Бджола - цикли
        C1_maze_loops: Лабіринт - цикли
        C1_playlab_storytelling: 'Ігрова студія: Створення історії'
        C1_planting_seed: Висаджування насіння
        C1_building_foundation: Закладання основ
        C1_going_places_safely: Безпечне добирання
        C2_maze_intro: Вступ до лабіринту
        C2_artist_intro: Вступ до художника
        C2_zuck_repeat_loop: Лабіринт - цикли
        C2_artist_loops: Художник - цикли
        C2_artist_debugging: Художник - відлагодження
        C2_bee_loops: 'Бджола: цикли'
        C2_bee_debugging: Бджола - відлагодження
        C2_bee_conditionals: Бджола - умови
        C2_playlab_createstory: 'Ігрова студія: Створення історії'
        C2_graph_paper: Програмування по клітинках
        C2_conditionals_with_cards: Умови
        C2_binary_bracelets: Двійкові браслети
        C2_relay_programming: Релейне програмування
        C2_paper_airplanes: Паперові літачки
        C2_digital_footprint: Твій цифровий слід
        C3_maze_level_4: 'Лабіринт: цикли'
        C3_artist_intro: Вступ до художника
        C3_artist_functions: Художник - функції
        C3_bee_functions: Бджола - функції
        C3_bee_conditionals: Бджола - умови
        C3_maze_conditionals: Лабіринт - умови
        C3_artist_nested_loops: Вкладені цикли
        C3_farmer_while: Цикли "поки"
        C3_bee_nested_loops: Вкладені цикли
        C3_bee_debugging: Бджола - відлагодження
        C3_bounce: Арканоід
        C3_playlab_create_game: 'Ігрова лабораторія: Створення історії'
        C3_computational_thinking: Обчислювальне мислення
        C3_dice_race: Гонка в кубики
        C3_internet: Інтернет
        C3_crowdsourcing: Краудсорсинг
        C3_functional_suncatchers: Функції для блискіток
        C3_songwriting_with_parameters: Пісні з параметрами
        C4_intro: Вступ
        C4_bee_conditional: Бджола - умови
        C4_variables_artist: Змінні - Художник
        C4_variables_playlab: Змінні - Ігрова лабораторія
        C4_for_loops: Цикли For
        C4_math_artist: Програмування Художника з математикою
        C4_function_edit: Редагування функцій
        C4_function_create: Створення функцій
        C4_function_parameters: Функції з параметрами
        C4_conditionals: Умови
        C4_unplugged_algorithms: Алгоритми з танграмами
        C4_unplugged_madlibs: Пропуски
        C4_unplugged_variables: Змінні у конвертах
        C4_unplugged_forloops: Цикли For
        C4_unplugged_parameters: Пісні з параметрами
        C4_unplugged_binary: Двійкова система
        frozen_intro: Вступ до Години коду
        frozen_loops: Вступ до циклів
        frozen_functions: Вступ до функцій
        playlab_intro: Вступ до Ігрової лабораторії
        playlab_events: Ігрова лабораторія - події
        playlab_repeat_forever: Ігрова лабораторія - постійне повторення
    callout:
      text:
        drag_blocks: Перетягніть блок "рухатись" і прикріпіть його під іншим блоком
        run: Натисніть "Запустити", щоб випробувати програму
        watch_again: Натисніть тут, щоб дивитися відео знову
        gray_block_explanation: Сірі блоки видаляти не можна. Ви все-ж зможете розв'язати
          завдання?
        show_code_explanation: Натисніть тут, щоб побачити код для програми, яку ви
          робите
        instructions_repeat_explanation: Інструкції для кожного завдання повторюються
          тут
        category_explanation: У вас є все-ті ж блоки, але тепер вони впорядковані
          у категорії
        set_sprite_image: Прикріпіть блок "встановити зображення персонажа" до блоку
          "коли історія починається", щоб обрати персонажа своєї історії
        studio_say_text: Впишіть фразу персонажа всередину лапок
        jigsaw_click: Клацніть цей блок!
        move_elsa_forward: Перемістіть блок "Рухатися вперед" та прикріпіть його під
          блоком "Коли гра починається", щоб змусити Ельзу рухатися вперед
        turn_elsa: Використайте блок "Повернути", щоб змусити Ельзу розвернутись.
          Число у розкривному списку визначає, наскільки повернеться Ельза
        replace_questions: Скористайтесь розкривним списком, щоб змінити "???" на
          число
        replace_questions_degree: Скористайтесь розкривним списком, щоб змінити "???"
          на кількість градусів повороту
        repeat_blocks: Використайте блок "Повторити" та розмістіть всередині нього
          інші блоки на робочій області
        repeat_blocks_1: (1) Використайте цей блок, і розмістіть його біля сірих блоків
          у робочій області
        repeat_blocks_2: (2) Перемістіть сюди блок "повторити", і розмістіть у ньому
          сірі блоки
        snowflake_dropdown: Скористайтесь розкривним списком, щоб створювати різні
          сніжинки!
        degrees_per_side: Поділіть 360 на кількість сторін та отримайте розмір кожного
          кута в градусах.
        set_sides: Скористайтесь блоком позначення числом кількості "сторін" для розв'язання
          задачі.
        set_length: Використайте цей блок для правильного визначення "довжини".
        which_equation: Яке рівняння зробить кожну сторону коротшою для фігур з більшою
          кількістю сторін?
        get_nectar: Використайте новий блок "отримати нектар".
        actions_category: Панель інструментів тепер виглядає інакше! Блоки "Дії" тепер
          знаходяться тут.
        draw_square_hint: 'Підказка: використайте квадратний цикл, створений у попередній
          вправі.'
        edit_function: Клацніть тут, щоб змінити функцію.
        create_function: Клацніть тут, щоб відкрити спливаюче вікно "Функції", а тоді
          клацніть кнопку "Створити функцію".
        house_hint: Нічого, що зображення поки не схоже на будинок. Ми це виправимо
          у наступній вправі.
        edit_draw_square: Скористайтесь цією кнопкою, щоб змінити функцію та додати
          цикл.
        edit_get_nectar: Скористайтесь цією кнопкою, щоб відредагувати функцію та
          змінити напрям, у якому Бджола повертатиме для отримання нектару.
        logic_category: Відкрийте спливаюче вікно "Логіка", щоб знайти блок "якщо/інакше".
        length_parameter: Можете оновити цю функцію так, щоб застосувати параметр
          "довжина"?
        frozen_diamond_repeat: Скористайтесь блоком повторення для створення цієї
          фігури.
        frozen_circle_function_in_circle_turn: Не забувайте повертати після малювання
          кожного кола.
        frozen_circle_function_with_parameter_circle: Використайте блок "створити
          коло" та змініть розмір фігури.
        frozen_snowflake_branch: Скористайтесь блоком "створити гілочку сніжинки"
        frozen_create_square: Додайте більше блоків, щоб вийшов квадрат
        playlab_drag_say: Перетягніть сюди блок "говорити" і надрукуйте "привіт"
        playlab_use_twice: Використайте цей блок двічі, та не забудьте змінити номер
          персонажа
        playlab_move_girl: Використайте блок "переміститися праворуч", щоб перемістити
          Тенісистку
        playlab_play_sound: Додайте блок "грати звук"
        playlab_arrow_keys: Не забудьте використати стрілки, щоб Відьмочка переміщувалась
          після запуску проекту
        playlab_add_move: Додайте блок "рухатися" всередину цього блоку повторення
        playlab_add_score: Розмістіть тут блоки додавання балу
        playlab_add_blocks: Розмістіть блоки тут
        set_variable: Перетягніть сюди блок з числом, щоб встановити значення для
          змінної
        place_variable: Перетягніть змінну всередину цього блоку
        bee_for_loop: Перетягніть сюди найбільшу кількість нектару, яку повинна зібрати
          Бджола
        place_counter_variable: Перетягніть змінну-лічильник всередину цього блоку
        function_editor_draw_square: Це визначення вашої функції. Ці блоки виконуватимуться
          щоразу, як ви використаєте блок "намалювати квадрат"
        change_here: Внесіть зміни
        write_draw_square_function: Перетягніть блоки сюди з палітри інструментів,
          для того щоб намалювати квадрат
        write_draw_triangle_function: Перетягніть блоки сюди з палітри інструментів
          для того, щоб намалювати трикутник
        edit_add_parameter: Клацніть, щоб додати параметр у свою функцію
        add_and_drag_parameter: Запишіть назву параметра, клацніть "додати" та перетягніть
          його у визначення свої функції
        fill_in_actor: Заповніть ??? числами, котрі відповідають номерам персонажів
          (1, 2 та 3)
        repeat: Розмістіть блоки всередині циклу, щоб повторювати команди
        if_bee_nectar: Скористайтесь блоком "якщо", щоб вирішити, чи бджолі потрібно
          брати нектар
        if_else_bee: За допомогою блоку "якщо-інакше" допоможіть Бджолі взяти нектар
          з квітки, і зробити мед, якщо це не квітка
        repeat_full_circle: Вкажіть, скільки разів Зомбі має переміститись для утворення
          кола
        place_length_variable: Перетягніть сюди змінну довжини, для заміни знаків
          питання
        arrows_move_actor: Скористайтесь стрілками для переміщення персонажа
        right_arrow_fireball: Скористайтесь стрілками для стрільби вогняними кулями
        name_function: Запишіть тут назву своєї функції
