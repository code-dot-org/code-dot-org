---
fr-FR:
  data:
    long_instructions:
      2-3 Artist 1 new: Bonjour, je suis un artiste. Vous pouvez écrire du code pour
        me faire dessiner presque tout. Utilisez des blocs pour me faire dessiner
        sur les lignes grises de la figure. (chaque ligne a une longueur de 100 pixels)
      2-3 Artist 4: Aide-moi à terminer la maison pour ce chat.
      2-3 Artist 9 NEW: Termine ce cerf-volant
      2-3 Artist Assessment 1: "**Évaluation :** Termine de dessiner la dernière dent.
        Elle fait 25 pixels de large et 25 pixels de haut."
      2-3 Artist Free Play: Jeu libre ! Dessine tout ce que tu veux.
      2-3 Artist Nested Loops 10: Fais boucler ce code 12 fois pour compléter le motif.
      2-3 Artist Nested Loops 12: Fais boucler ce code 12 fois pour compléter les
        boucles.
      2-3 Artist Nested Loops Free Play: Activité libre, dessine quelque chose de
        cool avec des boucles imbriquées.
      2-3 Bee Functions 1: "Functions are blocks of code that\nperform a task.  \\\r\n\\\r\nUse
        the `get 2 nectar` function to collect the nectar\nfrom each flower."
      2-3 Bee Functions Assessment 1: "**Évaluation :** Utilise les fonctions données
        pour recueillir le nectar de chaque fleur."
      2-3 Bee Functions Assessment 2: "**Évaluation :** Crée une fonction pour tourner,
        avancer et fabriquer du miel 3 fois, puis faire retourner l’abeille au point
        de départ et la retourner."
      2-3 Bee Loops 13: "**Évaluation :** Recueille tout le nectar en utilisant le
        moins de blocs possible."
      2-3 Bee Loops 3A: Peux-tu utiliser une boucle pour recueillir tout ce nectar
        ?
      2-3 Bee Loops Assessment 1: "**Évaluation :** Utilise une boucle `tant que`
        pour recueillir tout le nectar de ces fleurs."
      2-3 Maze 13: Amène-moi au cochon ! Tu ne peux utiliser qu’un seul bloc ˋavancer
        plus\` cette fois-ci
      2-3 Maze Loops Assessment 1: "**Évaluation :** Amène-moi au tournesol en n’utilisant
        que 5 blocs ! "
      4-5 Artist 3.5: "Try to figure out what happens if you\nrun this code (or just
        press \"Run\" and try it). \\\r\n\\\r\nNext, repeat the\ncode enough times
        to complete the drawing!"
      4-5 Artist 4: "How many degrees are in a circle?  \\\r\n\\\r\nLoop\nthe blocks
        to create a circle of colors."
      4-5 Artist Assessment 1: "**Évaluation :** Utilise une boucle pour dessiner
        le triangle équilatéral. Chaque côté fait 300 pixels."
      4-5 Artist Free Draw 1: Dessin libre !  Dessine tout ce qui t’inspire.
      4-5 Artist Patterns 11: Combien de fois dois-tu boucler ceci pour dessiner un
        demi-cercle ?
      4-5 Artist Patterns 7: Modifions le code du dernier puzzle pour rendre ce motif
        plus complexe. Remarque comment les losanges se chevauchent maintenant; essaie
        de changer le premier «Saut en arrière» de 100 à 50 pixels (réduction de moitié)
        - maintenant, de combien l'artiste doit-il se déplacer dans le deuxième «Saut
        en arrière» ?
      4-5 Bee Debugging Assessment 1: "**Évaluation :** Corrige le code."
      4-5 Maze Assessment 1: "**Évaluation :** Va au tournesol en utilisant le moins
        de blocs possible."
      4-5 Nested Loops 5: Insère le code fourni dans une boucle pour créer un moulin
        à vent.
      4-5 Nested Loops 9: Dessine les dents dans la bouche de l'alligator !
      4-5 Nested Loops Assessment 1: "**Évaluation :** Utilise une boucle imbriquée
        pour terminer le dessin."
      AppLab Intro 7 - Change Screen Color: "<div style=\"float:right\">\\\r\n\\\\t<img\nsrc=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54\nAM.png\"
        style=\"height:150px\"> \\\r\n</div>\\\r\n\\\r\n**Goal:** Make the screen\ngreen.
        \\\r\n\\\r\n**How:** Drag in a `setProperty()` block. Use the dropdowns\nto
        set the screen's `\"background-color\"` to `\"green\"`. Then hit \"Run\"\\\r\n\\\r\n**Stuck?\nClick
        here** ![expandable](https://images.code.org/817990cbff035c9960b84a4b228ecaba-image-1508521071643.gif)"
      AppLab Intro 7 - Change Text 2: "<div style=\"float:right\">\\\r\n<img\nsrc=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29\nPM.png\"
        style=\"height:150px;\">\\\r\n</div>\\\r\n\\\r\n**Goal:** Make the text\nbigger
        and blue.\\\r\n\\\r\n**How:**  You'll need two lines of code. Give `\"label1\"`\na
        `\"font-size\"` of `80` and `\"text-color\"` of `\"blue\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/70f1ef9698ff41c15f9825755fde3782-image-1505958989565.gif)</details>"
      AppLab Intro 7 - Full Text: "<div style=\"float:right\">\\\r\n<img\nsrc=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19\nAM.png\"
        style=\"height:200px\">\\\r\n</div>\\\r\n\\\r\n**Goal:** Make the buttons\n`\"red\"`
        and `\"blue\"`. Then change the text in the large orange label.\\\r\n\\\r\n**How:**\n\\\r\n*
        Set the `\"text\"` property of the label to anything you want, like\n`\"Welcome
        to my app!\"`.\\\r\n* Set the `\"background-color\"` of the buttons\nto `\"blue\"`
        and `\"red\"`\\\r\n* Remember you can hover over elements to see\ntheir `\"id\"`\\\r\n\\\r\n**Stuck?
        Click here:** ![expandable](https://images.code.org/709ff200e5b5f553b24d1d0a769db6ed-image-1507565545993.gif)"
      AppLab Intro 7 - onEvent intro: "<img src=\"https://images.code.org/8ac2e62d8940bfbe6e3a8ffdb94dd43b-image-1509043765361.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:**
        The screen will start\nout blue. Add code so it turns green when you click
        the \"Green-ify\" button.\\\r\n\\\r\n**How:**\nAdd code inside the `\"onEvent\"`
        that sets the screen's `\"background-color\"`\nto `\"green\"`.\\\r\n\\\r\n**Stuck?
        Click here:** ![expandable](https://images.code.org/da6f9467a7da28efcbbe2f18a7d4721f-image-1509043778833.gif)"
      AppLab Intro 7 - onEvent twoButtons: "<img src=\"https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif\"\nstyle=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:**
        Help finish this flashlight\napp. The \"On\" button already turns the screen
        white. Run the app and try\nit out. Then write code so the \"Off\" button
        makes the screen black again.\\\r\n\\\r\n**How:**\nAdd code inside the empty
        `onEvent()` that sets the `\"background-color\"`\nof the screen to `\"black\"`
        and `\"text-color\"` of the label to `\"white\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/64c83d66a723eae01d09e4aea38fbad1-image-1507567249833.gif)"
      AppLab Intro 7 - playSound: "<img src=\"https://images.code.org/2bb21cff40cc9823a4ae370895de2953-image-1508294971111.49.16\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** This sound board\napp
        is almost done! Add an image, text, and sound to the bottom right button.\\\r\n\\\r\n**How:**\nAdd
        an `onEvent()` below the others and use `playSound()` inside of it. Choose\nany
        animal sound you like from the library. Use `setProperty()` to set the\n`\"image\"`
        property of the button to either an image or icon of your choosing.\nFinally,
        set the `\"text\"` with a second `setProperty()`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/d33c2d008b3f03f7a9775a4a3a1bbfcf-image-1509047489327.gif)"
      AppLab Intro 7 - thisOrThatAddButton: "<img src=\"https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Add a second\nbutton
        to the screen that says \"Right!\" with an `\"id\"` of `\"rightButton\"`.\\\r\n\\\r\n**How:**\nIn
        Design Mode drag in a new button. Position and resize it. Then set its\n`\"id\"`,
        `\"text\"`, `\"background color\"`, and `\"font size\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)"
      AppLab Intro 7 - thisOrThatAddScreen: "<img src=\"https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59\nPM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Create a new\nscreen
        called `\"rightScreen\"`. Add a text label that says \"You went right!\".\\\r\n\\\r\n**How:**\nIn
        Design Mode drag in a new screen element. Change its `\"id\"` to `\"rightScreen\"`.\nThen
        drag a label onto the screen and change the text to \"You went right!\".\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)"
      AppLab Intro 7 - thisOrThatPersonalize: "<img src=\"https://images.code.org/fe6ff9b7605128f999e727487d87908b-image-1510169816629.35.34\nAM.png\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** Start building\nyour
        own \"Choose Your Own Adventure\" app. Don't forget to \"Share\" it\nwith
        someone!\\\r\n\\\r\n**How:** Choose the basic story you want to tell, like\nwho
        your character is and the setting. Then change the text and images of\nyour
        app to match the story. You can always add more screens as you keep building\nout
        your adventure.\\\r\n\\\r\n\n<details><summary><b>Stuck? Click here for some\nideas</b></summary>\\\r\n\\\r\n<li>Make
        an adventure about your favorite fictional\ncharacter</li>\\\r\n<li>Make an
        adventure about a famous (or not-so-famous person)\nyou're a big fan of</li>\\\r\n<li>Make
        an adventure that has a lot of unexpected\ntwists or has a difficult moral
        choice</li>\\\r\n\\\r\n</details>"
      AppLab Intro 7 - thisOrThatSetScreen: "<img src=\"https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop\n(1).gif\"
        style=\"float:right;height:200px\">\\\r\n\\\r\n**Goal:** The screen\nswitches
        to `\"rightScreen\"` when the user clicks the `\"rightButton\"`.\\\r\n\\\r\n**How:**\nIn
        Code Mode add a new `onEvent()` to your program for your \"Right!\" button.\nAdd
        a `setScreen()` block inside of it that switches screens to `\"rightScreen\"`.\\\r\n\\\r\n**Stuck?\nClick
        here:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)"
      CSD U2 CSS explore CSS: "<div style=\"float: right; height:\n250px; width: 40%;
        overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I switch between files?**</summary>\\\r\nClick\nthe name of the file you
        want to look at in the menu on the left side of the\nscreen.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#
        Adding Style\\\r\n\\\r\nThis Web Lab\nproject is using a new language to add
        style to the page. With a partner explore\nboth the `index.html` and `style.css`
        files. Be ready to discuss the following\nquestions.\\\r\n\\\r\n* What changes
        is this new language making to the page?\\\r\n*\nHow is this language different
        from HTML?\\\r\n* How are the `index.html` and\n`style.css` files connected?"
      CSD U2 CSS explore CSS_2018: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I switch between files?**</summary>\\\r\nClick\nthe name of the file you
        want to look at in the menu on the left side of the\nscreen.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#
        Adding Style\\\r\n\\\r\nThis Web Lab\nproject is using a new language to add
        style to the page. With a partner explore\nboth the `index.html` and `style.css`
        files. Be ready to discuss the following\nquestions.\\\r\n\\\r\n* What changes
        is this new language making to the page?\\\r\n*\nHow is this language different
        from HTML?\\\r\n* How are the `index.html` and\n`style.css` files connected?"
      CSD U2 CSS explore CSS_2019: "<div style=\"float: right; height:\n250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**How
        do I switch between files?**</summary>\\\r\nClick\nthe name of the file you
        want to look at in the menu on the left side of the\nscreen.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#
        Adding Style\\\r\n\\\r\nThis Web Lab\nproject is using a new language to add
        style to the page. With a partner explore\nboth the `index.html` and `style.css`
        files. Be ready to discuss the following\nquestions.\\\r\n\\\r\n* What changes
        is this new language making to the page?\\\r\n*\nHow is this language different
        from HTML?\\\r\n* How are the `index.html` and\n`style.css` files connected?"
      CSD U2 Debugging 1: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nComputer\ncode
        is written by humans, and all humans make mistakes. Part of being a good\ncomputer
        scientist is finding your mistakes and fixing them. In computer science\nwe
        call mistakes **bugs**. The process of finding and fixing those bugs is\ncalled
        **debugging**.  Over the next couple levels you are going to work on\nyour
        debugging skills.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56\nAM.png\"
        style=\"float:right;border:black solid 5px;\">\\\r\n\\\r\n* Look at the\nweb
        page code, and discuss with your partner what is causing the following\ntwo
        bugs:\\\r\n\\\\t* The heading is not big enough.\\\r\n\\\\t* The second item
        on\nthe list doesn't have a number.\\\r\n* Fix all the bugs in the code so
        that\nthe final result matches the image on the right.\\\r"
      CSD U2 Debugging 1_2018: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nComputer\ncode
        is written by humans, and all humans make mistakes. Part of being a good\ncomputer
        scientist is finding your mistakes and fixing them. In computer science\nwe
        call mistakes **bugs**. The process of finding and fixing those bugs is\ncalled
        **debugging**.  Over the next couple levels you are going to work on\nyour
        debugging skills.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56\nAM.png\"
        style=\"float:right;border:black solid 5px;\">\\\r\n\\\r\n* Look at the\nweb
        page code, and discuss with your partner what is causing the following\ntwo
        bugs:\\\r\n\\\\t* The heading is not big enough.\\\r\n\\\\t* The second item
        on\nthe list doesn't have a number.\\\r\n* Fix all the bugs in the code so
        that\nthe final result matches the image on the right.\\\r"
      CSD U2 Debugging 1_2019: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nComputer\ncode
        is written by humans, and all humans make mistakes. Part of being a good\ncomputer
        scientist is finding your mistakes and fixing them. In computer science\nwe
        call mistakes **bugs**. The process of finding and fixing those bugs is\ncalled
        **debugging**.  Over the next couple levels you are going to work on\nyour
        debugging skills.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56\nAM.png\"
        style=\"float:right;border:black solid 5px;\">\\\r\n\\\r\n* Look at the\nweb
        page code, and discuss with your partner what is causing the following\ntwo
        bugs:\\\r\n\\\\t* The heading is not big enough.\\\r\n\\\\t* The second item
        on\nthe list doesn't have a number.\\\r\n* Fix all the bugs in the code so
        that\nthe final result matches the image on the right.\\\r"
      CSD U2 Debugging 2: "# Debugging\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nMore\ndebugging
        practice!  This page is a little more challenging to debug than\nthe last
        one.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38\nAM.png\"
        style=\"float:right;border:5px black solid;width:250px\">\\\r\n\\\r\n*\nDiscuss
        with your partner what you think the bugs are in this page.\\\r\n* Find\nand
        fix all the bugs so that your page matches the one on the right."
      CSD U2 Debugging 2_2018: "# Debugging\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nMore\ndebugging
        practice!  This page is a little more challenging to debug than\nthe last
        one.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38\nAM.png\"
        style=\"float:right;border:5px black solid;width:250px\">\\\r\n\\\r\n*\nDiscuss
        with your partner what you think the bugs are in this page.\\\r\n* Find\nand
        fix all the bugs so that your page matches the one on the right."
      CSD U2 Debugging 2_2019: "# Debugging\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nMore\ndebugging
        practice!  This page is a little more challenging to debug than\nthe last
        one.\\\r\n\\\r\n# Do This\\\r\n\\\r\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38\nAM.png\"
        style=\"float:right;border:5px black solid;width:250px\">\\\r\n\\\r\n*\nDiscuss
        with your partner what you think the bugs are in this page.\\\r\n* Find\nand
        fix all the bugs so that your page matches the one on the right."
      CSD U2 Debugging 3: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        has images in it. Images make finding bugs a little more tricky. Can\nyou
        debug this page?\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Discuss with your partner
        what\nis causing the bugs in this page.\\\r\n* Fix the bugs so that your page
        matches\nthe target page shown below.\\\r\n\\\r\n![](https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24\nAM.png)"
      CSD U2 Debugging 3_2018: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        has images in it. Images make finding bugs a little more tricky. Can\nyou
        debug this page?\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Discuss with your partner
        what\nis causing the bugs in this page.\\\r\n* Fix the bugs so that your page
        matches\nthe target page shown below.\\\r\n\\\r\n![](https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24\nAM.png)"
      CSD U2 Debugging 3_2019: "# Debugging\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a bug?**</summary>\\\r\nBugs\nare mistakes in code which causes it not
        to work as planned.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        debugging?**</summary>\\\r\nDebugging is the process of finding and fixing\nbugs.
        \ Debugging is a problem solving process so use your problem solving\nsteps
        as you try to debug. \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        some examples of bugs?**</summary>\\\r\nBugs can be anything that causes\ncode
        not to work as planned.  Some examples are misspelling, putting code\nin the
        wrong place, using the wrong tag, or forgetting to close a tag.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        has images in it. Images make finding bugs a little more tricky. Can\nyou
        debug this page?\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Discuss with your partner
        what\nis causing the bugs in this page.\\\r\n* Fix the bugs so that your page
        matches\nthe target page shown below.\\\r\n\\\r\n![](https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24\nAM.png)"
      CSD U2 Debugging 4: "# Formatting\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThe\nway
        that you write your code can make it easier or harder to find bugs.  If\nyou
        use **whitespace** and **indentation**, it will make it easier to read\nand
        easier to fix.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at the code with your
        partner\nand discuss how you should format the code to make it easier to read.\\\r\n*\nMake
        the code easier to read by adding new lines and indentation.\\\r\n* Fix\nall
        the bugs so that your page matches the target page below.\\\r\n\\\r\n![](https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13\nAM.png)"
      CSD U2 Debugging 4_2018: "# Formatting\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThe\nway
        that you write your code can make it easier or harder to find bugs.  If\nyou
        use **whitespace** and **indentation**, it will make it easier to read\nand
        easier to fix.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at the code with your
        partner\nand discuss how you should format the code to make it easier to read.\\\r\n*\nMake
        the code easier to read by adding new lines and indentation.\\\r\n* Fix\nall
        the bugs so that your page matches the target page below.\\\r\n\\\r\n![](https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13\nAM.png)"
      CSD U2 Debugging 4_2019: "# Formatting\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**Why\ndoes
        the inspector sometimes stop working?**</summary>\\\r\nSometimes there\nare
        so many bugs in the HTML that the inspector cannot read the code properly\nand
        it stops working completely, even on the parts of the code that are correct.
        \ Once\nthe bugs are corrected, the inspector will work again.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThe\nway
        that you write your code can make it easier or harder to find bugs.  If\nyou
        use **whitespace** and **indentation**, it will make it easier to read\nand
        easier to fix.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at the code with your
        partner\nand discuss how you should format the code to make it easier to read.\\\r\n*\nMake
        the code easier to read by adding new lines and indentation.\\\r\n* Fix\nall
        the bugs so that your page matches the target page below.\\\r\n\\\r\n![](https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13\nAM.png)"
      CSD U2 HTML Adding Paragraphs: "# Add Text to the Body\\\r\n\n\\\r\nWhen\nyou
        start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`,\n`<head>`,
        and `<body>` tags to your project. When you add content to your\nprojects,
        you'll need to do it between the `<body>` and `</body>` tags because\nit should
        be part of the body of your webpage.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    three separate sentences about any topic you like inside of
        the body tags\n    of your web page.\\\r\n-   Hit \"Refresh and Save\" if
        you don't see the changes\n    in the preview area.\\\r\n-   Compare your
        work with a neighbor. Make sure you're\n    placing code in the same place.\\\r"
      CSD U2 HTML Adding Paragraphs pt 2: "<div style=\"float:\nright; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a paragraph element?**</summary>\\\r\nParagraphs\nare marked by opening(`<p>`)
        and closing(`</p>`) tags. Paragraphs in HTML\ncan be any length of text from
        one word to a bunch of sentences. Paragraphs\ngroup together sets of sentences
        and put some space between that group of\ntext and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make multiple paragraphs?**</summary>\\\r\nHere's an example of several\nparagraph
        tags in a row. This code would be placed inside of the body of your\nweb page.\\\r\n\\\r\n<pre>\\\r\n`<p>This
        is a paragraph. It has two sentences.</p>`\\\r\n`<p>This\nis another paragraph.</p>`\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nUse
        Paragraph Tags\\\r\n\\\r\nThe `<p>` tag or \"paragraph\" tag is placed around\ntext
        to indicate that it is part of a paragraph. Placing text in a paragraph\ntag
        lets the computer know that it should be displayed differently, usually\njust
        by spacing it out from other text.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Place
        the\ntext you just wrote inside at least two separate paragraphs by surrounding\nit
        with `<p>` and `</p>` tags\\\r\n* Compare the results with a neighbor. What\nhas
        changed about the way your text is displayed?"
      CSD U2 HTML Adding Paragraphs pt 2_2018: "<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a paragraph element?**</summary>\\\r\nParagraphs\nare marked by opening(`<p>`)
        and closing(`</p>`) tags. Paragraphs in HTML\ncan be any length of text from
        one word to a bunch of sentences. Paragraphs\ngroup together sets of sentences
        and put some space between that group of\ntext and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make multiple paragraphs?**</summary>\\\r\nHere's an example of several\nparagraph
        tags in a row. This code would be placed inside of the body of your\nweb page.\\\r\n\\\r\n<pre>\\\r\n`<p>This
        is a paragraph. It has two sentences.</p>`\\\r\n`<p>This\nis another paragraph.</p>`\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nUse
        Paragraph Tags\\\r\n\\\r\nThe `<p>` tag or \"paragraph\" tag is placed around\ntext
        to indicate that it is part of a paragraph. Placing text in a paragraph\ntag
        lets the computer know that it should be displayed differently, usually\njust
        by spacing it out from other text.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Place
        the\ntext you just wrote inside at least two separate paragraphs by surrounding\nit
        with `<p>` and `</p>` tags\\\r\n* Compare the results with a neighbor. What\nhas
        changed about the way your text is displayed?"
      CSD U2 HTML Adding Paragraphs pt 2_2019: "<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is a paragraph element?**</summary>\\\r\nParagraphs\nare marked by opening(`<p>`)
        and closing(`</p>`) tags. Paragraphs in HTML\ncan be any length of text from
        one word to a bunch of sentences. Paragraphs\ngroup together sets of sentences
        and put some space between that group of\ntext and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make multiple paragraphs?**</summary>\\\r\nHere's an example of several\nparagraph
        tags in a row. This code would be placed inside of the body of your\nweb page.\\\r\n\\\r\n<pre>\\\r\n`<p>This
        is a paragraph. It has two sentences.</p>`\\\r\n`<p>This\nis another paragraph.</p>`\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nUse
        Paragraph Tags\\\r\n\\\r\nThe `<p>` tag or \"paragraph\" tag is placed around\ntext
        to indicate that it is part of a paragraph. Placing text in a paragraph\ntag
        lets the computer know that it should be displayed differently, usually\njust
        by spacing it out from other text.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Place
        the\ntext you just wrote inside at least two separate paragraphs by surrounding\nit
        with `<p>` and `</p>` tags\\\r\n* Compare the results with a neighbor. What\nhas
        changed about the way your text is displayed?"
      CSD U2 HTML Adding Paragraphs_2018: "# Add Text to the Body\\\r\n\n\\\r\nWhen\nyou
        start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`,\n`<head>`,
        and `<body>` tags to your project. When you add content to your\nprojects,
        you'll need to do it between the `<body>` and `</body>` tags because\nit should
        be part of the body of your webpage.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    three separate sentences about any topic you like inside of
        the body tags\n    of your web page.\\\r\n-   Hit \"Refresh and Save\" if
        you don't see the changes\n    in the preview area.\\\r\n-   Compare your
        work with a neighbor. Make sure you're\n    placing code in the same place.\\\r"
      CSD U2 HTML Adding Paragraphs_2019: "# Add Text to the Body\\\r\n\n\\\r\nWhen\nyou
        start any Web Lab project, it will automatically add `<!DOCTYPE>`, `<html>`,\n`<head>`,
        and `<body>` tags to your project. When you add content to your\nprojects,
        you'll need to do it between the `<body>` and `</body>` tags because\nit should
        be part of the body of your webpage.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    three separate sentences about any topic you like inside of
        the body tags\n    of your web page.\\\r\n-   Hit \"Refresh and Save\" if
        you don't see the changes\n    in the preview area.\\\r\n-   Compare your
        work with a neighbor. Make sure you're\n    placing code in the same place.\\\r"
      CSD U2 HTML Debug Paragraphs: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary><strong>What
        is a paragraph element?</strong></summary>\\\r\nParagraphs\nare marked by
        opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML\ncan be any
        length of text from one word to a bunch of sentences. Paragraphs\ngroup together
        sets of sentences and put some space between that group of\ntext and the next
        group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        HTML seem to work even when it's broken?</strong></summary>\\\r\nHTML\nis
        read by your web browser to generate web pages. Since people often make\nlittle
        mistakes when writing their web pages, browsers are programmed to make\na
        best guess of what you intended to do. Sometimes different browsers are\neven
        programmed to make different guesses! The only way to ensure your code\nlooks
        like you intend is make sure you're always using tags correctly.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        the code sometimes turn pink?</strong></summary>\\\r\nWeb Lab is programmed\nto
        automatically detect some mistakes in HTML.  When it notices a mistake,\nit
        turns that code pink.  The mistake might be in pink, or it might be somewhere\nbefore
        the pink code.  You'll need to carefully debug to find your mistake.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#\nDebug:
        Fix the Broken Tags\\\r\n\\\r\nThis simple web page has some issues which\nare
        preventing the content from being displayed correctly. Identify and fix\nthe
        issues. This practice is also called \"debugging\" your code.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Fix the broken code so that the web page displays correctly\\\r\n*\nCompare
        the problems you fixed with a neighbor"
      CSD U2 HTML Debug Paragraphs_2018: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary><strong>What
        is a paragraph element?</strong></summary>\\\r\nParagraphs\nare marked by
        opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML\ncan be any
        length of text from one word to a bunch of sentences. Paragraphs\ngroup together
        sets of sentences and put some space between that group of\ntext and the next
        group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        HTML seem to work even when it's broken?</strong></summary>\\\r\nHTML\nis
        read by your web browser to generate web pages. Since people often make\nlittle
        mistakes when writing their web pages, browsers are programmed to make\na
        best guess of what you intended to do. Sometimes different browsers are\neven
        programmed to make different guesses! The only way to ensure your code\nlooks
        like you intend is make sure you're always using tags correctly.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        the code sometimes turn pink?</strong></summary>\\\r\nWeb Lab is programmed\nto
        automatically detect some mistakes in HTML.  When it notices a mistake,\nit
        turns that code pink.  The mistake might be in pink, or it might be somewhere\nbefore
        the pink code.  You'll need to carefully debug to find your mistake.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#\nDebug:
        Fix the Broken Tags\\\r\n\\\r\nThis simple web page has some issues which\nare
        preventing the content from being displayed correctly. Identify and fix\nthe
        issues. This practice is also called \"debugging\" your code.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Fix the broken code so that the web page displays correctly\\\r\n*\nCompare
        the problems you fixed with a neighbor"
      CSD U2 HTML Debug Paragraphs_2019: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary><strong>What
        is a paragraph element?</strong></summary>\\\r\nParagraphs\nare marked by
        opening( `<p>` ) and closing( `</p>` ) tags. Paragraphs in HTML\ncan be any
        length of text from one word to a bunch of sentences. Paragraphs\ngroup together
        sets of sentences and put some space between that group of\ntext and the next
        group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        HTML seem to work even when it's broken?</strong></summary>\\\r\nHTML\nis
        read by your web browser to generate web pages. Since people often make\nlittle
        mistakes when writing their web pages, browsers are programmed to make\na
        best guess of what you intended to do. Sometimes different browsers are\neven
        programmed to make different guesses! The only way to ensure your code\nlooks
        like you intend is make sure you're always using tags correctly.\\\r\n</details>\\\r\n<details>\\\r\n<summary><strong>Why\ndoes
        the code sometimes turn pink?</strong></summary>\\\r\nWeb Lab is programmed\nto
        automatically detect some mistakes in HTML.  When it notices a mistake,\nit
        turns that code pink.  The mistake might be in pink, or it might be somewhere\nbefore
        the pink code.  You'll need to carefully debug to find your mistake.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\n#\nDebug:
        Fix the Broken Tags\\\r\n\\\r\nThis simple web page has some issues which\nare
        preventing the content from being displayed correctly. Identify and fix\nthe
        issues. This practice is also called \"debugging\" your code.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Fix the broken code so that the web page displays correctly\\\r\n*\nCompare
        the problems you fixed with a neighbor"
      CSD U2 Heading Demo_2018: "# Headings\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are headings?**</summary>\\\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\\\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one: &lt;h1&gt;. The number\n'1'
        in the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags, which get smaller as the number gets larger.\\\r\n</h1>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        HTML?**</summary>\\\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What is an HTML\nelement?**</summary>\\\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \\\r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What
        is an\nHTML tag?**</summary>\\\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nSo far, you've organized
        your content\ninto paragraphs.  Another way HTML allows you to organize your
        code is by\nusing **headings**.  A heading is a short piece of text that goes
        at the top\nof a section of content, like a title.\\\r\n\\\r\nDo This:\\\r\n*
        Find the headings\nin the web page below and use the Inspector Tool to see
        the code that makes\nthem.\\\r\n* Make sure you and your partner agree on
        what the tags do.\\\r\n*\nChange the code so that \"Drawing\" and \"2 years\"
        match the headings on\nthe rest of the page."
      CSD U2 Heading Demo_2019: "# Headings\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are headings?**</summary>\\\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\\\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one: &lt;h1&gt;. The number\n'1'
        in the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags, which get smaller as the number gets larger.\\\r\n</h1>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        HTML?**</summary>\\\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What is an HTML\nelement?**</summary>\\\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \\\r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What
        is an\nHTML tag?**</summary>\\\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nSo far, you've organized
        your content\ninto paragraphs.  Another way HTML allows you to organize your
        code is by\nusing **headings**.  A heading is a short piece of text that goes
        at the top\nof a section of content, like a title.\\\r\n\\\r\nDo This:\\\r\n*
        Find the headings\nin the web page below and use the Inspector Tool to see
        the code that makes\nthem.\\\r\n* Make sure you and your partner agree on
        what the tags do.\\\r\n*\nChange the code so that \"Drawing\" and \"2 years\"
        match the headings on\nthe rest of the page."
      CSD U2 Heading Sizes: "# Heading Sizes\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are headings?**</summary>\\\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\\\r\nHeadings come in 6 different\nsizes.
        \ The most common heading is &lt;h1&gt; The number 1 in the HTML tag\ndesignates
        that this is the biggest heading. The smallest heading is &lt;h6&gt;.\nYou
        can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags\nwhich
        get smaller as the number gets larger.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        HTML?**</summary>\\\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What is an HTML\nelement?**</summary>\\\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \\\r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What
        is an\nHTML tag?**</summary>\\\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\nHeadings can come
        in different sizes.  In\nthis page, there are six different sized headings,
        but they are all mixed\nup.  Can you and your partner figure out how to fix
        them?\\\r\n\\\r\n\\\r\n\\\r\nDo\nThis:\\\r\n* Use the inspector tool to figure
        out what makes the headings different\nsizes\\\r\n* Make sure you and your
        partner agree on what the different heading\ntags do.\\\r\n* Change the tags
        so that the headings are in order from biggest\nto smallest, and the text
        says the correct size, as in the picture below.\n\\\r\n\\\r\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15\nPM.png\"
        style=\"width:100px\" style=\"float:left\">\\\r"
      CSD U2 Heading Sizes_2018: "# Heading Sizes\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are headings?**</summary>\\\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\\\r\nHeadings come in 6 different\nsizes.
        \ The most common heading is &lt;h1&gt; The number 1 in the HTML tag\ndesignates
        that this is the biggest heading. The smallest heading is &lt;h6&gt;.\nYou
        can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags\nwhich
        get smaller as the number gets larger.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        HTML?**</summary>\\\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What is an HTML\nelement?**</summary>\\\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \\\r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What
        is an\nHTML tag?**</summary>\\\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\nHeadings can come
        in different sizes.  In\nthis page, there are six different sized headings,
        but they are all mixed\nup.  Can you and your partner figure out how to fix
        them?\\\r\n\\\r\n\\\r\n\\\r\nDo\nThis:\\\r\n* Use the inspector tool to figure
        out what makes the headings different\nsizes\\\r\n* Make sure you and your
        partner agree on what the different heading\ntags do.\\\r\n* Change the tags
        so that the headings are in order from biggest\nto smallest, and the text
        says the correct size, as in the picture below.\n\\\r\n\\\r\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15\nPM.png\"
        style=\"width:100px\" style=\"float:left\">\\\r"
      CSD U2 Heading Sizes_2019: "# Heading Sizes\\\r\n\n\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are headings?**</summary>\\\r\nHeadings\nare the different sized section titles
        throughout a web page. Headings add\nstructure to your web page by breaking
        it up so its easier for a user to read.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\\\r\nHeadings come in 6 different\nsizes.
        \ The most common heading is &lt;h1&gt; The number 1 in the HTML tag\ndesignates
        that this is the biggest heading. The smallest heading is &lt;h6&gt;.\nYou
        can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, and &lt;h5&gt; tags\nwhich
        get smaller as the number gets larger.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        HTML?**</summary>\\\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What is an HTML\nelement?**</summary>\\\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \\\r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What
        is an\nHTML tag?**</summary>\\\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\nHeadings can come
        in different sizes.  In\nthis page, there are six different sized headings,
        but they are all mixed\nup.  Can you and your partner figure out how to fix
        them?\\\r\n\\\r\n\\\r\n\\\r\nDo\nThis:\\\r\n* Use the inspector tool to figure
        out what makes the headings different\nsizes\\\r\n* Make sure you and your
        partner agree on what the different heading\ntags do.\\\r\n* Change the tags
        so that the headings are in order from biggest\nto smallest, and the text
        says the correct size, as in the picture below.\n\\\r\n\\\r\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15\nPM.png\"
        style=\"width:100px\" style=\"float:left\">\\\r"
      CSD U2 Heading Test_2018: "# Headings and Paragraphs\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What is\na
        paragraph element?**</summary>\\\r\nParagraphs are marked by opening(`<p>`)\nand
        closing(`</p>`) tags as well. Paragraphs in HTML can be any length of\ntext
        from one word to a bunch of sentences. All of your text in your web page\nshould
        be contained in an HTML element (headings or paragraphs). Paragraphs\ngroup
        together sets of sentences and put some space between that group of\ntext
        and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I create multiple paragraphs?**</summary>\\\r\nParagraphs are marked by opening(`<p>`)\nand
        closing(`</p>`) tags as well. To create more than one paragraph you will\nwant
        multiple sets of opening and closing `<p>` tags. For example\\\r\n<pre>\\\r\n\\\\t&lt;p&gt;\\\r\n
        \   \\\\tThis\nis a paragraph.\\\r\n    &lt;/p&gt;\\\r\n\\\\t&lt;p&gt;\\\r\n
        \   \\\\tThis is another\nparagraph.\\\r\n    &lt;/p&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        headings?**</summary>\\\r\nHeadings are the different sized section titles\nthroughout
        a web page. Headings add structure to your web page by breaking\nit up so
        its easier for a user to read.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\\\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one &lt;h1&gt;. The number\n1 in
        the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags which get smaller as the number gets larger.\\\r\n</h1>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        HTML?**</summary>\\\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What is an HTML\nelement?**</summary>\\\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \\\r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What
        is an\nHTML tag?**</summary>\\\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\nThe author of this
        page added in\na lot of content, but did not think about structure.  All of
        the text is mashed\ntogether.\\\r\n\\\r\nDo This:\\\r\n* Look through the
        content with your partner\nand decide what you think the best structure should
        be.\\\r\n* Use your heading\nand paragraph tags to code the structure into
        the page.\\\r"
      CSD U2 Heading Test_2019: "# Headings and Paragraphs\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What is\na
        paragraph element?**</summary>\\\r\nParagraphs are marked by opening(`<p>`)\nand
        closing(`</p>`) tags as well. Paragraphs in HTML can be any length of\ntext
        from one word to a bunch of sentences. All of your text in your web page\nshould
        be contained in an HTML element (headings or paragraphs). Paragraphs\ngroup
        together sets of sentences and put some space between that group of\ntext
        and the next group of text.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I create multiple paragraphs?**</summary>\\\r\nParagraphs are marked by opening(`<p>`)\nand
        closing(`</p>`) tags as well. To create more than one paragraph you will\nwant
        multiple sets of opening and closing `<p>` tags. For example\\\r\n<pre>\\\r\n\\\\t&lt;p&gt;\\\r\n
        \   \\\\tThis\nis a paragraph.\\\r\n    &lt;/p&gt;\\\r\n\\\\t&lt;p&gt;\\\r\n
        \   \\\\tThis is another\nparagraph.\\\r\n    &lt;/p&gt;\\\r\n</pre>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nare
        headings?**</summary>\\\r\nHeadings are the different sized section titles\nthroughout
        a web page. Headings add structure to your web page by breaking\nit up so
        its easier for a user to read.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I make different sized headings?**</summary>\\\r\nHeadings come in 6 different\nsizes.
        So far you have primarily used the biggest one &lt;h1&gt;. The number\n1 in
        the HTML tag designates that this is the biggest heading. The smallest\nheading
        is &lt;h6&gt;. You can also try the &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;,\nand
        &lt;h5&gt; tags which get smaller as the number gets larger.\\\r\n</h1>\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        HTML?**</summary>\\\r\nHTML stands for Hypertext Markup Language. HTML is\nused
        to add structure to the content of a web page. HTML uses tags to specify\nwhere
        certain structures start and end. These tags are sets of characters\nnot found
        in the English language so that the content and structure can be\ndifferentiated.
        \\\r\n</details>\\\r\n<details>\\\r\n<summary>**What is an HTML\nelement?**</summary>\\\r\nAn
        HTML element is a piece of a website that is marked\nby a start tag and sometimes
        closed with an end tag. The element also includes\nthe content inside the
        tags. For example: \\\r\n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"\nstyle=\"width:500px\">\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What
        is an\nHTML tag?**</summary>\\\r\nAn HTML tag is the special set of characters
        that\ntells the machine where the start or end of an HTML element is and what
        type\nit is.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\nThe author of this
        page added in\na lot of content, but did not think about structure.  All of
        the text is mashed\ntogether.\\\r\n\\\r\nDo This:\\\r\n* Look through the
        content with your partner\nand decide what you think the best structure should
        be.\\\r\n* Use your heading\nand paragraph tags to code the structure into
        the page.\\\r"
      CSD U2 Info Page Final Touches: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n\\\r\n<h2>\\\r\nChecklist\\\r\n</h2>\\\r\n\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Ensure that your image is properly licensed</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Upload image into Web Lab</span>\\\r\n<input type=\"checkbox\"\nstyle=\"float:
        left\"><span style=\"display: block; margin-left: 20px; margin-bottom:\n10px\">Create
        an image tag with a descriptive alt attribute</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">If the image isn't your own, add attribution\nunderneath<br/>\\\r\n\\\r\n</div>\\\r\n\\\r\n\\\r\n#
        Adding Images to Your Site\\\r\n\\\r\nYou've\nalready created some pages with
        great content on your website, now you can\nadd some images!\\\r\n\\\r\n#
        Do This\\\r\n\\\r\nUsing either your own images or those\nfound through a
        Commons Search, add some images to the pages you've already\ncreated. Get
        creative! Use the checklist to the right to keep track of the\nsteps you need
        to follow when adding images.\\\r"
      CSD U2 Info Page Final Touches_2018: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n\\\r\n<h2>\\\r\nChecklist\\\r\n</h2>\\\r\n\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Ensure that your image is properly licensed</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Upload image into Web Lab</span>\\\r\n<input type=\"checkbox\"\nstyle=\"float:
        left\"><span style=\"display: block; margin-left: 20px; margin-bottom:\n10px\">Create
        an image tag with a descriptive alt attribute</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">If the image isn't your own, add attribution\nunderneath<br/>\\\r\n\\\r\n</div>\\\r\n\\\r\n\\\r\n#
        Adding Images to Your Site\\\r\n\\\r\nYou've\nalready created some pages with
        great content on your website, now you can\nadd some images!\\\r\n\\\r\n#
        Do This\\\r\n\\\r\nUsing either your own images or those\nfound through a
        Commons Search, add some images to the pages you've already\ncreated. Get
        creative! Use the checklist to the right to keep track of the\nsteps you need
        to follow when adding images.\\\r"
      CSD U2 Info Page Final Touches_2019: "<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n\\\r\n<h2>\\\r\nChecklist\\\r\n</h2>\\\r\n\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Ensure that your image is properly licensed</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">Upload image into Web Lab</span>\\\r\n<input type=\"checkbox\"\nstyle=\"float:
        left\"><span style=\"display: block; margin-left: 20px; margin-bottom:\n10px\">Create
        an image tag with a descriptive alt attribute</span>\\\r\n<input\ntype=\"checkbox\"
        style=\"float: left\"><span style=\"display: block; margin-left:\n20px; margin-bottom:
        10px\">If the image isn't your own, add attribution\nunderneath<br/>\\\r\n\\\r\n</div>\\\r\n\\\r\n\\\r\n#
        Adding Images to Your Site\\\r\n\\\r\nYou've\nalready created some pages with
        great content on your website, now you can\nadd some images!\\\r\n\\\r\n#
        Do This\\\r\n\\\r\nUsing either your own images or those\nfound through a
        Commons Search, add some images to the pages you've already\ncreated. Get
        creative! Use the checklist to the right to keep track of the\nsteps you need
        to follow when adding images.\\\r"
      CSD U2 Inspector Warm Up: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n<details>\\\r\n<summary>**<span>\nHow
        do I use the Inspector Tool? </span>**</summary>\\\r\nThe Inspector Tool\nis
        a great way to learn more about unfamiliar code in Web Lab. To turn on\nthe
        Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56\nPM.png\"
        style=\"width:100px\">. You will know that the Inspector Tool is\non because
        the button will turn white and say \"Inspector: On\". Once you\nturn on the
        Inspector Tool, you can hover over anything in the preview area\nand Web Lab
        will highlight the code that is making that part of the page appear.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nExplore
        HTML\\\r\n\\\r\nThis is a web page written in HTML, the language of the\nweb.
        You'll learn more about how it works, but first explore it by using\nthe Inspector
        Tool.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Click the Tip \"How do I use\nthe
        Inspector Tool?\" on the right to learn how to use the Inspector Tool.\\\r\n*\nFollow
        the instructions in the web page to explore the web page and discuss\nwith
        a partner how it is working."
      CSD U2 Inspector Warm Up_2018: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n<details>\\\r\n<summary>**<span>\nHow
        do I use the Inspector Tool? </span>**</summary>\\\r\nThe Inspector Tool\nis
        a great way to learn more about unfamiliar code in Web Lab. To turn on\nthe
        Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56\nPM.png\"
        style=\"width:100px\">. You will know that the Inspector Tool is\non because
        the button will turn white and say \"Inspector: On\". Once you\nturn on the
        Inspector Tool, you can hover over anything in the preview area\nand Web Lab
        will highlight the code that is making that part of the page appear.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nExplore
        HTML\\\r\n\\\r\nThis is a web page written in HTML, the language of the\nweb.
        You'll learn more about how it works, but first explore it by using\nthe Inspector
        Tool.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Click the Tip \"How do I use\nthe
        Inspector Tool?\" on the right to learn how to use the Inspector Tool.\\\r\n*\nFollow
        the instructions in the web page to explore the web page and discuss\nwith
        a partner how it is working."
      CSD U2 Inspector Warm Up_2019: "<div style=\"float: right;\nheight: 250px; width:
        40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\\\r\n<details>\\\r\n<summary>**<span>\nHow
        do I use the Inspector Tool? </span>**</summary>\\\r\nThe Inspector Tool\nis
        a great way to learn more about unfamiliar code in Web Lab. To turn on\nthe
        Inspector Tool, click <img src=\"https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56\nPM.png\"
        style=\"width:100px\">. You will know that the Inspector Tool is\non because
        the button will turn white and say \"Inspector: On\". Once you\nturn on the
        Inspector Tool, you can hover over anything in the preview area\nand Web Lab
        will highlight the code that is making that part of the page appear.\\\r\n</details>\\\r\n\\\r\n</div>\\\r\n\\\r\n#\nExplore
        HTML\\\r\n\\\r\nThis is a web page written in HTML, the language of the\nweb.
        You'll learn more about how it works, but first explore it by using\nthe Inspector
        Tool.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Click the Tip \"How do I use\nthe
        Inspector Tool?\" on the right to learn how to use the Inspector Tool.\\\r\n*\nFollow
        the instructions in the web page to explore the web page and discuss\nwith
        a partner how it is working."
      CSD U2 Project Start: "# Start Your Project\\\r\n\n\\\r\nNow\nthat you have
        a plan for your personal website, you can start coding it here.  Don't\nworry
        if you can't do everything you want today.  You'll have plenty of\nchances
        to improve your work as you learn more about developing websites.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Use HTML to create the page that you sketched out.
        \ Make sure\n    it includes\\\r\n-   At least **two headings of different
        sizes**\\\r\n-   At least\n    **one paragraph**\\\r\n-   **Reflect** on your
        page by comparing to your sketch\n    and showing it to your partner"
      CSD U2 Project Start_2018: "# Start Your Project\\\r\n\n\\\r\nNow\nthat you
        have a plan for your personal website, you can start coding it here.  Don't\nworry
        if you can't do everything you want today.  You'll have plenty of\nchances
        to improve your work as you learn more about developing websites.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Use HTML to create the page that you sketched out.
        \ Make sure\n    it includes\\\r\n-   At least **two headings of different
        sizes**\\\r\n-   At least\n    **one paragraph**\\\r\n-   **Reflect** on your
        page by comparing to your sketch\n    and showing it to your partner"
      CSD U2 Project Start_2019: "# Start Your Project\\\r\n\n\\\r\nNow\nthat you
        have a plan for your personal website, you can start coding it here.  Don't\nworry
        if you can't do everything you want today.  You'll have plenty of\nchances
        to improve your work as you learn more about developing websites.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Use HTML to create the page that you sketched out.
        \ Make sure\n    it includes\\\r\n-   At least **two headings of different
        sizes**\\\r\n-   At least\n    **one paragraph**\\\r\n-   **Reflect** on your
        page by comparing to your sketch\n    and showing it to your partner"
      CSD U2 add content: "# Add HTML\\\r\n\n\\\r\nNext, you should\nadd the HTML
        to your pages.\\\r\n\\\r\n\n# Do This\\\r\n\n-   For each of the new pages\n
        \   that you've created, add HTML to make the page you sketched in your project\n
        \   guide.\\\r\n-   You may also add more HTML to the pages you've already
        created.\\\r"
      CSD U2 add content_2018: "# Add HTML\\\r\n\n\\\r\nNext, you should\nadd the
        HTML to your pages.\\\r\n\\\r\n\n# Do This\\\r\n\n-   For each of the new
        pages\n    that you've created, add HTML to make the page you sketched in
        your project\n    guide.\\\r\n-   You may also add more HTML to the pages
        you've already created.\\\r"
      CSD U2 add content_2019: "# Add HTML\\\r\n\n\\\r\nNext, you should\nadd the
        HTML to your pages.\\\r\n\\\r\n\n# Do This\\\r\n\n-   For each of the new
        pages\n    that you've created, add HTML to make the page you sketched in
        your project\n    guide.\\\r\n-   You may also add more HTML to the pages
        you've already created.\\\r"
      CSD U2 challenge: "# Challenge\\\r\n\n\\\r\nCheck with your\nteacher before
        starting on this challenge.\\\r\n\\\r\nThis page is only partially\nfinished,
        and it has some bugs.  Luckily, there are comments that should help\nyou to
        finish the page as the author intended.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code and with your partner and discuss what the page should
        look like.\\\r\n-   \\*\n    Work together to finish the page, paying attention
        to formatting.\\\r\n-   Compare\n    with another pair to see whether your
        pages are the same.\\\r"
      CSD U2 challenge_2018: "# Challenge\\\r\n\n\\\r\nCheck with your\nteacher before
        starting on this challenge.\\\r\n\\\r\nThis page is only partially\nfinished,
        and it has some bugs.  Luckily, there are comments that should help\nyou to
        finish the page as the author intended.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code and with your partner and discuss what the page should
        look like.\\\r\n-   \\*\n    Work together to finish the page, paying attention
        to formatting.\\\r\n-   Compare\n    with another pair to see whether your
        pages are the same.\\\r"
      CSD U2 challenge_2019: "# Challenge\\\r\n\n\\\r\nCheck with your\nteacher before
        starting on this challenge.\\\r\n\\\r\nThis page is only partially\nfinished,
        and it has some bugs.  Luckily, there are comments that should help\nyou to
        finish the page as the author intended.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code and with your partner and discuss what the page should
        look like.\\\r\n-   \\*\n    Work together to finish the page, paying attention
        to formatting.\\\r\n-   Compare\n    with another pair to see whether your
        pages are the same.\\\r"
      CSD U2 commenting: "# Comments\\\r\n\n<div style=\"float:\nright; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou\ncan
        add **comments** to your code to explain the different parts of the code\nand
        what it should create.  Comments can help you to debug, and will also\nhelp
        other people who are trying to understand your code.\\\r\n\\\r\n<pre>\\\r\n&lt;!--\nthis
        is a comment --&gt;\\\r\n</pre>\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at
        the code\nwith your partner and find the comments.\\\r\n* Use the comments
        to help you\nfix the bugs in the HTML."
      CSD U2 commenting_2018: "# Comments\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou\ncan
        add **comments** to your code to explain the different parts of the code\nand
        what it should create.  Comments can help you to debug, and will also\nhelp
        other people who are trying to understand your code.\\\r\n\\\r\n<pre>\\\r\n&lt;!--\nthis
        is a comment --&gt;\\\r\n</pre>\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at
        the code\nwith your partner and find the comments.\\\r\n* Use the comments
        to help you\nfix the bugs in the HTML."
      CSD U2 commenting_2019: "# Comments\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        is whitespace?**</summary>\\\r\nWhitespace\nrefers to any character that shows
        up as a blank space on the screen, such\nas a space, a tab, or a new line.
        Whitespace helps separate different parts\nof the document to make it easier
        to read.  For example, in HTML code new\nelements are usually put on a new
        line, even though it doesn't make any difference\nin how the page is displayed.\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        indentation?**</summary>\\\r\nIndentation is the placement of text farther\nto
        the right, or left, to separate it from surrounding text.  Indentation\nhelps
        to convey the program's structure.  In HTML, elements that are inside\nother
        elements are usually indented.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n
        \     &lt;p&gt;This\nparagraph is inside the \"body\" element.&lt;/p&gt;\\\r\n
        \  &lt;/body&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        formatting?**</summary>\\\r\nFormatting is arranging text in a way that makes\nit
        easier to understand.  HTML is usually formatted using indentation.  That\nmeans
        that elements that are inside other elements are further to the right\nin
        code.  Here is an example:\\\r\n<pre>\\\r\n   &lt;body&gt;\\\r\n      &lt;p&gt;This\nparagraph
        is inside the \"body\" element.&lt;/p&gt;\\\r\n   &lt;/body&gt;\\\r\n</pre>\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou\ncan
        add **comments** to your code to explain the different parts of the code\nand
        what it should create.  Comments can help you to debug, and will also\nhelp
        other people who are trying to understand your code.\\\r\n\\\r\n<pre>\\\r\n&lt;!--\nthis
        is a comment --&gt;\\\r\n</pre>\\\r\n\\\r\n# Do This\\\r\n\\\r\n* Look at
        the code\nwith your partner and find the comments.\\\r\n* Use the comments
        to help you\nfix the bugs in the HTML."
      CSD U2 create page: "# Create and Name Your New Page\\\r\n\n\\\r\nBefore\nyou
        start coding, you should make sure that you have all the pages that you\nneed
        in your project.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Create a new HTML page
        and rename\n    it. (Look at <a href=\"/s/csd2/stage/6/puzzle/8\" target=\"_new\">Lesson
        6\n    Level 8</a> if you've forgotten how.)\\\r\n-   Repeat this process
        for any other\n    pages you want to add.\\\r\n    \\\r"
      CSD U2 create page_2018: "# Create and Name Your New Page\\\r\n\n\\\r\nBefore\nyou
        start coding, you should make sure that you have all the pages that you\nneed
        in your project.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Create a new HTML page
        and rename\n    it. (Look at <a href=\"/s/csd2/stage/6/puzzle/8\" target=\"_new\">Lesson
        6\n    Level 8</a> if you've forgotten how.)\\\r\n-   Repeat this process
        for any other\n    pages you want to add.\\\r\n    \\\r"
      CSD U2 create page_2019: "# Create and Name Your New Page\\\r\n\n\\\r\nBefore\nyou
        start coding, you should make sure that you have all the pages that you\nneed
        in your project.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Create a new HTML page
        and rename\n    it. (Look at <a href=\"/s/csd2/stage/6/puzzle/8\" target=\"_new\">Lesson
        6\n    Level 8</a> if you've forgotten how.)\\\r\n-   Repeat this process
        for any other\n    pages you want to add.\\\r\n    \\\r"
      CSD U2 header footer: "# Navigation Bar and Footer\\\r\n\n\\\r\nEach\nof your
        pages needs a navigation bar and a footer.\\\r\n\\\r\n\n# Do This\\\r\n\n-
        \  For\n    each page, make sure it has a navigation bar that links to other
        pages in\n    your site.  For a review of the navigation bar, go to <a href=\"/s/csd2/stage/9/puzzle/4\"\n
        \   target=\"_new\">Lesson 9 Level 4</a>.\\\r\n-   For each page, make sure
        it has\n    a footer at the bottom that explains the copyright information
        for your page.\n    (Go to <a href=\"https://creativecommons.org/choose/\"
        target=\"_new\">Creative\n    Commons</a> for help in creating this HTML.)"
      CSD U2 header footer_2018: "# Navigation Bar and Footer\\\r\n\n\\\r\nEach\nof
        your pages needs a navigation bar and a footer.\\\r\n\\\r\n\n# Do This\\\r\n\n-
        \  For\n    each page, make sure it has a navigation bar that links to other
        pages in\n    your site.  For a review of the navigation bar, go to <a href=\"/s/csd2/stage/9/puzzle/4\"\n
        \   target=\"_new\">Lesson 9 Level 4</a>.\\\r\n-   For each page, make sure
        it has\n    a footer at the bottom that explains the copyright information
        for your page.\n    (Go to <a href=\"https://creativecommons.org/choose/\"
        target=\"_new\">Creative\n    Commons</a> for help in creating this HTML.)"
      CSD U2 header footer_2019: "# Navigation Bar and Footer\\\r\n\n\\\r\nEach\nof
        your pages needs a navigation bar and a footer.\\\r\n\\\r\n\n# Do This\\\r\n\n-
        \  For\n    each page, make sure it has a navigation bar that links to other
        pages in\n    your site.  For a review of the navigation bar, go to <a href=\"/s/csd2/stage/9/puzzle/4\"\n
        \   target=\"_new\">Lesson 9 Level 4</a>.\\\r\n-   For each page, make sure
        it has\n    a footer at the bottom that explains the copyright information
        for your page.\n    (Go to <a href=\"https://creativecommons.org/choose/\"
        target=\"_new\">Creative\n    Commons</a> for help in creating this HTML.)"
      CSD U2 link demo: "# Making a Multi-page Site\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What are\nhyperlinks?**</summary>\\\r\nHyperlinks
        can connect to local web pages or external\nweb pages. To add navigation to
        your website you will need to add hyperlinks\nwhich connect your individual
        web pages. You can **add hyperlinks to your\nweb page using the `<a>` element**.
        \ The text you want to display as the hyperlink\ngoes between the opening
        and closing hyperlink tags. The `<a>` element has\nan attribute `href` which
        is the location to link to.  The location of a local\npage is just the file
        path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink to the unique
        houses page you would add the following code inside your\n`<body>` element.
        <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I add a hyperlink?**</summary>\\\r\nYou can **add hyperlinks to your web\npage
        using the `<a>` element**.  The text you want to display as the hyperlink\ngoes
        between the opening and closing hyperlink tags. The `<a>` element has\nan
        attribute `href` which is the location to link to.  The location of a local\npage
        is just the file path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink
        to the unique houses page you would add the following code inside your\n`<body>`
        element. <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nA web
        site\nshould include more than one web page, and they should connect to each
        other.   Here's\nan example of a project with multiple pages that are connected
        by hyperlinks\n(the blue underlined words that take you to another page when
        you click on\nthem).\\\r\n\\\r\n# Do This\\\r\n* Use the inspector tool to
        see the code that creates\nthe hyperlinks on the top of index.html.\\\r\n*
        Discuss with your partner how\nyou think that code works.\\\r\n* Click on
        recipe.html in the files list on\nthe left hand side.  Add a hyperlink to
        the top of this page that will take\nyou back to index.html."
      CSD U2 link demo_2018: "# Making a Multi-page Site\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What are\nhyperlinks?**</summary>\\\r\nHyperlinks
        can connect to local web pages or external\nweb pages. To add navigation to
        your website you will need to add hyperlinks\nwhich connect your individual
        web pages. You can **add hyperlinks to your\nweb page using the `<a>` element**.
        \ The text you want to display as the hyperlink\ngoes between the opening
        and closing hyperlink tags. The `<a>` element has\nan attribute `href` which
        is the location to link to.  The location of a local\npage is just the file
        path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink to the unique
        houses page you would add the following code inside your\n`<body>` element.
        <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I add a hyperlink?**</summary>\\\r\nYou can **add hyperlinks to your web\npage
        using the `<a>` element**.  The text you want to display as the hyperlink\ngoes
        between the opening and closing hyperlink tags. The `<a>` element has\nan
        attribute `href` which is the location to link to.  The location of a local\npage
        is just the file path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink
        to the unique houses page you would add the following code inside your\n`<body>`
        element. <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nA web
        site\nshould include more than one web page, and they should connect to each
        other.   Here's\nan example of a project with multiple pages that are connected
        by hyperlinks\n(the blue underlined words that take you to another page when
        you click on\nthem).\\\r\n\\\r\n# Do This\\\r\n* Use the inspector tool to
        see the code that creates\nthe hyperlinks on the top of index.html.\\\r\n*
        Discuss with your partner how\nyou think that code works.\\\r\n* Click on
        recipe.html in the files list on\nthe left hand side.  Add a hyperlink to
        the top of this page that will take\nyou back to index.html."
      CSD U2 link demo_2019: "# Making a Multi-page Site\\\r\n\n\\\r\n\n<div\nstyle=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left:\n20px;
        font-size:14px\" markdown=\"1\">\\\r\n<details>\\\r\n<summary>**What are\nhyperlinks?**</summary>\\\r\nHyperlinks
        can connect to local web pages or external\nweb pages. To add navigation to
        your website you will need to add hyperlinks\nwhich connect your individual
        web pages. You can **add hyperlinks to your\nweb page using the `<a>` element**.
        \ The text you want to display as the hyperlink\ngoes between the opening
        and closing hyperlink tags. The `<a>` element has\nan attribute `href` which
        is the location to link to.  The location of a local\npage is just the file
        path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink to the unique
        houses page you would add the following code inside your\n`<body>` element.
        <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n<details>\\\r\n<summary>**How\ndo
        I add a hyperlink?**</summary>\\\r\nYou can **add hyperlinks to your web\npage
        using the `<a>` element**.  The text you want to display as the hyperlink\ngoes
        between the opening and closing hyperlink tags. The `<a>` element has\nan
        attribute `href` which is the location to link to.  The location of a local\npage
        is just the file path for that page. <br> <br>\\\r\n\\\r\nFor example to\nlink
        to the unique houses page you would add the following code inside your\n`<body>`
        element. <br><br>\\\r\n\\\r\n<pre>\\\r\n&lt;a href=”houses.html”&gt; Unique\nHouses
        &lt;/a&gt;\\\r\n</pre>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nA web
        site\nshould include more than one web page, and they should connect to each
        other.   Here's\nan example of a project with multiple pages that are connected
        by hyperlinks\n(the blue underlined words that take you to another page when
        you click on\nthem).\\\r\n\\\r\n# Do This\\\r\n* Use the inspector tool to
        see the code that creates\nthe hyperlinks on the top of index.html.\\\r\n*
        Discuss with your partner how\nyou think that code works.\\\r\n* Click on
        recipe.html in the files list on\nthe left hand side.  Add a hyperlink to
        the top of this page that will take\nyou back to index.html."
      CSD U2 lists intro: "# Lists\\\r\n\n<div style=\"float: right;\nheight: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />\\\r\nAn unordered list element has the tag `<ul> </ul>`.\nThis is
        an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the unordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `<ul> </ul>`.  Next, add your list items **inside**\nthe
        unordered list tags.  To make each list item, use the list item tags `<li>\n</li>`
        and write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can\nbe
        helpful to indent your `<li> </li>` tags so it's clear they are contained\nin
        the `<ul> </ul>` tags.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tags\n`<ol>
        </ol>`. This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the ordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items. To make the ordered list, write\nthe ordered
        list tags `<ol> </ol>`. Next, add your list items **inside** the\nordered
        list tags. To make each list item, use the list item tags `<li> </li>`\nand
        write the list item inside the tags.\\\r\n<br /><br/>\\\r\nIt can be helpful\nto
        indent your `<li> </li>` tags so it's clear they are contained in the\n`<ol>
        </ol>` tags.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou can also use HTML
        to\nmake different types of lists on your web page.  This recipe includes
        two\ndifferent types of lists, one ordered (with numbers) and one unordered
        (with\nbullets).\\\r\n\\\r\n#  Do This\\\r\n\\\r\n* Use the inspector tool
        to see the code\nthat is making the two different kinds of lists.\\\r\n* Make
        sure you and your\npartner agree on what the different tags do.\\\r\n* Fix
        the code so that the\nsecond item in each list displays correctly"
      CSD U2 lists intro_2018: "# Lists\\\r\n\n<div style=\"float: right;\nheight:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />\\\r\nAn unordered list element has the tag `<ul> </ul>`.\nThis is
        an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the unordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `<ul> </ul>`.  Next, add your list items **inside**\nthe
        unordered list tags.  To make each list item, use the list item tags `<li>\n</li>`
        and write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can\nbe
        helpful to indent your `<li> </li>` tags so it's clear they are contained\nin
        the `<ul> </ul>` tags.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tags\n`<ol>
        </ol>`. This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the ordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items. To make the ordered list, write\nthe ordered
        list tags `<ol> </ol>`. Next, add your list items **inside** the\nordered
        list tags. To make each list item, use the list item tags `<li> </li>`\nand
        write the list item inside the tags.\\\r\n<br /><br/>\\\r\nIt can be helpful\nto
        indent your `<li> </li>` tags so it's clear they are contained in the\n`<ol>
        </ol>` tags.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou can also use HTML
        to\nmake different types of lists on your web page.  This recipe includes
        two\ndifferent types of lists, one ordered (with numbers) and one unordered
        (with\nbullets).\\\r\n\\\r\n#  Do This\\\r\n\\\r\n* Use the inspector tool
        to see the code\nthat is making the two different kinds of lists.\\\r\n* Make
        sure you and your\npartner agree on what the different tags do.\\\r\n* Fix
        the code so that the\nsecond item in each list displays correctly"
      CSD U2 lists intro_2019: "# Lists\\\r\n\n<div style=\"float: right;\nheight:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an unordered list?**</summary>\\\r\nAn unordered list is just a set of bulleted\nitems.\\\r\n<br
        /><br />\\\r\nAn unordered list element has the tag `<ul> </ul>`.\nThis is
        an abbreviation for <strong>U</strong>nordered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the unordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an unordered list?**</summary>\\\r\nMaking an unordered list has two\nsteps:
        making the list and adding the list items.  To make the unordered list,\nwrite
        the unordered list tags `<ul> </ul>`.  Next, add your list items **inside**\nthe
        unordered list tags.  To make each list item, use the list item tags `<li>\n</li>`
        and write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can\nbe
        helpful to indent your `<li> </li>` tags so it's clear they are contained\nin
        the `<ul> </ul>` tags.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tags\n`<ol>
        </ol>`. This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li> </li>`. This\nis an
        abbreviation for <strong>L</strong>ist <strong>I</strong>tem.  The list\nitem
        element is a child element, which means that it goes inside of its parent\nelement,
        the ordered list.\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items. To make the ordered list, write\nthe ordered
        list tags `<ol> </ol>`. Next, add your list items **inside** the\nordered
        list tags. To make each list item, use the list item tags `<li> </li>`\nand
        write the list item inside the tags.\\\r\n<br /><br/>\\\r\nIt can be helpful\nto
        indent your `<li> </li>` tags so it's clear they are contained in the\n`<ol>
        </ol>` tags.\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nYou can also use HTML
        to\nmake different types of lists on your web page.  This recipe includes
        two\ndifferent types of lists, one ordered (with numbers) and one unordered
        (with\nbullets).\\\r\n\\\r\n#  Do This\\\r\n\\\r\n* Use the inspector tool
        to see the code\nthat is making the two different kinds of lists.\\\r\n* Make
        sure you and your\npartner agree on what the different tags do.\\\r\n* Fix
        the code so that the\nsecond item in each list displays correctly"
      CSD U2 navigation: "# Create a Navigation Bar\\\r\n\n\\\r\nHere's\nyour project
        from before.  You'll be linking the two pages by creating a\n**navigation
        bar** at the top of the page.  Websites usually have the same\nnavigation
        bar across all of their pages so you can get back and forth between\nthings
        on the site.  You can see an example of a navigation bar on <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\"\ntarget=\"_new\">this
        page</a>\\\r\n\\\r\n\n# Do This\\\r\n\n-   In your home page (index.html),\n
        \   add two hyperlinks at the top of the page, one to your lists page, and
        one\n    to the home page.\\\r\n-   _Even though it might seem strange to
        link a page\n    to itself, it's less confusing if the navigation bar is exactly
        the same\n    on every page._\\\r\n-   Copy the code for the navigation bar,
        then add it to\n    the top of your lists page.\\\r\n-   Test your links in
        the preview area by clicking\n    on them.\\\r\n    \\\r"
      CSD U2 navigation_2018: "# Create a Navigation Bar\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be linking the two pages by creating a\n**navigation
        bar** at the top of the page.  Websites usually have the same\nnavigation
        bar across all of their pages so you can get back and forth between\nthings
        on the site.  You can see an example of a navigation bar on <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\"\ntarget=\"_new\">this
        page</a>\\\r\n\\\r\n\n# Do This\\\r\n\n-   In your home page (index.html),\n
        \   add two hyperlinks at the top of the page, one to your lists page, and
        one\n    to the home page.\\\r\n-   _Even though it might seem strange to
        link a page\n    to itself, it's less confusing if the navigation bar is exactly
        the same\n    on every page._\\\r\n-   Copy the code for the navigation bar,
        then add it to\n    the top of your lists page.\\\r\n-   Test your links in
        the preview area by clicking\n    on them.\\\r\n    \\\r"
      CSD U2 navigation_2019: "# Create a Navigation Bar\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be linking the two pages by creating a\n**navigation
        bar** at the top of the page.  Websites usually have the same\nnavigation
        bar across all of their pages so you can get back and forth between\nthings
        on the site.  You can see an example of a navigation bar on <a href=\"https://studio.code.org/projects/weblab/2KO4FIjN89QPeYnTG_NzLIjroaG8daOY3jRl5uHm1Co/\"\ntarget=\"_new\">this
        page</a>\\\r\n\\\r\n\n# Do This\\\r\n\n-   In your home page (index.html),\n
        \   add two hyperlinks at the top of the page, one to your lists page, and
        one\n    to the home page.\\\r\n-   _Even though it might seem strange to
        link a page\n    to itself, it's less confusing if the navigation bar is exactly
        the same\n    on every page._\\\r\n-   Copy the code for the navigation bar,
        then add it to\n    the top of your lists page.\\\r\n-   Test your links in
        the preview area by clicking\n    on them.\\\r\n    \\\r"
      CSD U2 new page: "# Create a New Page for Your Website.\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be adding another page.  Your new page\ncan be
        a top 10 list, a recipe, or anything you like.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nAdd
        a new HTML file by clicking  ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38\nPM.png>).
        \ The new file will appear in the files list on the left side of the\nworkspace.\\\r\n\n-
        \  Rename the file, either by right clicking it and choosing\n    \"Rename\",
        or by clicking on it when it's already highlighted.  **Make sure\n    the
        name is unique, descriptive and ends in \".html\"**.\\\r\n-   Use HTML to\n
        \   fill out your new page.  It should include:\\\r\n-   a list\\\r\n-   a
        heading\\\r\n    \\\r"
      CSD U2 new page_2018: "# Create a New Page for Your Website.\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be adding another page.  Your new page\ncan be
        a top 10 list, a recipe, or anything you like.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nAdd
        a new HTML file by clicking  ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38\nPM.png>).
        \ The new file will appear in the files list on the left side of the\nworkspace.\\\r\n\n-
        \  Rename the file, either by right clicking it and choosing\n    \"Rename\",
        or by clicking on it when it's already highlighted.  **Make sure\n    the
        name is unique, descriptive and ends in \".html\"**.\\\r\n-   Use HTML to\n
        \   fill out your new page.  It should include:\\\r\n-   a list\\\r\n-   a
        heading\\\r\n    \\\r"
      CSD U2 new page_2019: "# Create a New Page for Your Website.\\\r\n\n\\\r\nHere's\nyour
        project from before.  You'll be adding another page.  Your new page\ncan be
        a top 10 list, a recipe, or anything you like.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nAdd
        a new HTML file by clicking  ![](<https://images.code.org/9b9f9f78962ef77664333d1b0f762ff1-image-1493252448756.19.38\nPM.png>).
        \ The new file will appear in the files list on the left side of the\nworkspace.\\\r\n\n-
        \  Rename the file, either by right clicking it and choosing\n    \"Rename\",
        or by clicking on it when it's already highlighted.  **Make sure\n    the
        name is unique, descriptive and ends in \".html\"**.\\\r\n-   Use HTML to\n
        \   fill out your new page.  It should include:\\\r\n-   a list\\\r\n-   a
        heading\\\r\n    \\\r"
      CSD U2 ordered list: "# Ordered Lists\\\r\n\n<div style=\"float:\nright; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tag\n`<ol>`
        . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li>`;. This is an\nabbreviation
        for <strong>L</strong>ist <strong>I</strong>tem.  The list item\nelement is
        a child element, which means that it goes inside of its parent\nelement, the
        ordered list (`<ol>`).\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items.  To make the ordered list, write\nthe
        ordered list tags `<ol></ol>`.  Next, add your list items **inside** the\nordered
        list tags.  To make each list item, use the list item tags `<li></li>`\nand
        write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can be helpful\nto
        indent your `<li>` tags so it's clear they are contained in the `<ol>`\ntag.\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**Show
        me working code.**</summary>\\\r\n<table\nborder=\"1\">\\\r\n<tr>\\\r\n<td>Example</td>\\\r\n<td>Result</td>\\\r\n</tr>\\\r\n<tr>\\\r\n<td><pre>\n&lt;ol&gt;
        <br>   &lt;li&gt;Step 1 &lt;/li&gt; <br>   &lt;li&gt;Step 2 &lt;/li&gt;\n<br>
        \  &lt;li&gt;Step 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>\\\r\n<td><img\nsrc=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04\nPM.png\"
        style=\"width:200px\"></td>\\\r\n</tr>\\\r\n</table>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        should include an ordered list, but it's missing the list tags.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Use the `<ol>` and `<li>` tags to structure this content\ninto
        an ordered list that looks like the one below.\\\r\n\\\r\n*Hint: There will\nbe
        NO NUMBERS in your code.* \\\r\n\\\r\n![](https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03\nPM.png)"
      CSD U2 ordered list_2018: "# Ordered Lists\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tag\n`<ol>`
        . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li>`;. This is an\nabbreviation
        for <strong>L</strong>ist <strong>I</strong>tem.  The list item\nelement is
        a child element, which means that it goes inside of its parent\nelement, the
        ordered list (`<ol>`).\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items.  To make the ordered list, write\nthe
        ordered list tags `<ol></ol>`.  Next, add your list items **inside** the\nordered
        list tags.  To make each list item, use the list item tags `<li></li>`\nand
        write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can be helpful\nto
        indent your `<li>` tags so it's clear they are contained in the `<ol>`\ntag.\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**Show
        me working code.**</summary>\\\r\n<table\nborder=\"1\">\\\r\n<tr>\\\r\n<td>Example</td>\\\r\n<td>Result</td>\\\r\n</tr>\\\r\n<tr>\\\r\n<td><pre>\n&lt;ol&gt;
        <br>   &lt;li&gt;Step 1 &lt;/li&gt; <br>   &lt;li&gt;Step 2 &lt;/li&gt;\n<br>
        \  &lt;li&gt;Step 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>\\\r\n<td><img\nsrc=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04\nPM.png\"
        style=\"width:200px\"></td>\\\r\n</tr>\\\r\n</table>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        should include an ordered list, but it's missing the list tags.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Use the `<ol>` and `<li>` tags to structure this content\ninto
        an ordered list that looks like the one below.\\\r\n\\\r\n*Hint: There will\nbe
        NO NUMBERS in your code.* \\\r\n\\\r\n![](https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03\nPM.png)"
      CSD U2 ordered list_2019: "# Ordered Lists\\\r\n\n<div style=\"float:\nright;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"\nmarkdown=\"1\">\\\r\n<details>\\\r\n<summary>**What
        are the two types of lists?**</summary>\\\r\n\nThere are two types of lists
        in HTML, ordered and unordered lists.\\\r\n\n</details>\\\r\n<details>\\\r\n<summary>**What\nis
        an ordered list?**</summary>\\\r\nAn ordered list is a set of bulleted items\nwhich
        are numbered.\\\r\n<br /><br />\\\r\nAn ordered list element has the tag\n`<ol>`
        . This is an abbreviation for <strong>O</strong>rdered <strong>L</strong>ist.\nEach
        item in the list is marked by a list item element `<li>`;. This is an\nabbreviation
        for <strong>L</strong>ist <strong>I</strong>tem.  The list item\nelement is
        a child element, which means that it goes inside of its parent\nelement, the
        ordered list (`<ol>`).\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**How\ndo
        I make an ordered list?**</summary>\\\r\nMaking an ordered list has two steps:\nmaking
        the list and adding the list items.  To make the ordered list, write\nthe
        ordered list tags `<ol></ol>`.  Next, add your list items **inside** the\nordered
        list tags.  To make each list item, use the list item tags `<li></li>`\nand
        write the list item inside the tags.\\\r\n<br /><br />\\\r\nIt can be helpful\nto
        indent your `<li>` tags so it's clear they are contained in the `<ol>`\ntag.\\\r\n\\\r\n</details>\\\r\n\\\r\n<details>\\\r\n<summary>**Show
        me working code.**</summary>\\\r\n<table\nborder=\"1\">\\\r\n<tr>\\\r\n<td>Example</td>\\\r\n<td>Result</td>\\\r\n</tr>\\\r\n<tr>\\\r\n<td><pre>\n&lt;ol&gt;
        <br>   &lt;li&gt;Step 1 &lt;/li&gt; <br>   &lt;li&gt;Step 2 &lt;/li&gt;\n<br>
        \  &lt;li&gt;Step 3 &lt;/li&gt; <br> &lt;/ol&gt; </pre></td>\\\r\n<td><img\nsrc=\"https://images.code.org/3ef357cfad8ac98a8b30beb229ebcb78-image-1473446360428.39.04\nPM.png\"
        style=\"width:200px\"></td>\\\r\n</tr>\\\r\n</table>\\\r\n\\\r\n</details>\\\r\n</div>\\\r\n\\\r\nThis\npage
        should include an ordered list, but it's missing the list tags.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* Use the `<ol>` and `<li>` tags to structure this content\ninto
        an ordered list that looks like the one below.\\\r\n\\\r\n*Hint: There will\nbe
        NO NUMBERS in your code.* \\\r\n\\\r\n![](https://images.code.org/b3186e83c3e3bd2680a1a300e5abd126-image-1493238064706.17.03\nPM.png)"
      CSD U2 project review: "# Review Your Project\\\r\n\n\\\r\nYou're\nalmost ready
        to publish your project, but you should check one more time that\nyou have
        fulfilled all the requirements for this project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nCheck
        that you are comfortable sharing all the information that's on your\nsite.\\\r\n\n-
        \  Check that all of your images are correctly attributed, and that\n    you
        have the right to put them on your site.\\\r\n-   Check that your project\n
        \   includes everything included in the project rubric.\\\r\n-   Use comments
        and\n    whitespace to make your website readable.\\\r\n-   Ask your partner
        to help you\n    find any potential problems with your site.\\\r"
      CSD U2 project review_2018: "# Review Your Project\\\r\n\n\\\r\nYou're\nalmost
        ready to publish your project, but you should check one more time that\nyou
        have fulfilled all the requirements for this project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nCheck
        that you are comfortable sharing all the information that's on your\nsite.\\\r\n\n-
        \  Check that all of your images are correctly attributed, and that\n    you
        have the right to put them on your site.\\\r\n-   Check that your project\n
        \   includes everything included in the project rubric.\\\r\n-   Use comments
        and\n    whitespace to make your website readable.\\\r\n-   Ask your partner
        to help you\n    find any potential problems with your site.\\\r"
      CSD U2 project review_2019: "# Review Your Project\\\r\n\n\\\r\nYou're\nalmost
        ready to publish your project, but you should check one more time that\nyou
        have fulfilled all the requirements for this project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nCheck
        that you are comfortable sharing all the information that's on your\nsite.\\\r\n\n-
        \  Check that all of your images are correctly attributed, and that\n    you
        have the right to put them on your site.\\\r\n-   Check that your project\n
        \   includes everything included in the project rubric.\\\r\n-   Use comments
        and\n    whitespace to make your website readable.\\\r\n-   Ask your partner
        to help you\n    find any potential problems with your site.\\\r"
      CSD U2 project share: "# Share Your Project\\\r\n\n\\\r\nIt's\ntime to share
        your project with the world!\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click the\n
        \   ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27\n
        \   AM.png>) button at the top of this page.\\\r\n-   Copy the URL it gives
        you, and\n    email it to the people you want to see your page.\\\r\n    \\\r"
      CSD U2 project share_2018: "# Share Your Project\\\r\n\n\\\r\nIt's\ntime to
        share your project with the world!\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click
        the\n    ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27\n
        \   AM.png>) button at the top of this page.\\\r\n-   Copy the URL it gives
        you, and\n    email it to the people you want to see your page.\\\r\n    \\\r"
      CSD U2 project share_2019: "# Share Your Project\\\r\n\n\\\r\nIt's\ntime to
        share your project with the world!\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click
        the\n    ![](<https://images.code.org/26bcf1645e18ac064cf0631fb5ca023c-image-1493744000091.52.27\n
        \   AM.png>) button at the top of this page.\\\r\n-   Copy the URL it gives
        you, and\n    email it to the people you want to see your page.\\\r\n    \\\r"
      CSD U2 upload images: "# Upload Images\\\r\n\n\\\r\nNext, you'll\nneed to upload
        all of your images into your project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nDownload
        all the images you want onto your computer. Visit <a href=\"/s/csd2/stage/7/puzzle/5\"\ntarget=\"_new\">Lesson
        7 Level 5</a> for help if you need it.\\\r\n\n-   Make sure\n    you have
        the right to use these images.\\\r\n-   Write down all of the attribution\n
        \   information that you need.\\\r\n-   Upload all of the images into your
        project.  Visit\n    <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson
        8 Level 6</a>\n    if you've forgotten how.\\\r\n    \\\r"
      CSD U2 upload images_2018: "# Upload Images\\\r\n\n\\\r\nNext, you'll\nneed
        to upload all of your images into your project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nDownload
        all the images you want onto your computer. Visit <a href=\"/s/csd2/stage/7/puzzle/5\"\ntarget=\"_new\">Lesson
        7 Level 5</a> for help if you need it.\\\r\n\n-   Make sure\n    you have
        the right to use these images.\\\r\n-   Write down all of the attribution\n
        \   information that you need.\\\r\n-   Upload all of the images into your
        project.  Visit\n    <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson
        8 Level 6</a>\n    if you've forgotten how.\\\r\n    \\\r"
      CSD U2 upload images_2019: "# Upload Images\\\r\n\n\\\r\nNext, you'll\nneed
        to upload all of your images into your project.\\\r\n\\\r\n\n# Do This\\\r\n\n\\*\nDownload
        all the images you want onto your computer. Visit <a href=\"/s/csd2/stage/7/puzzle/5\"\ntarget=\"_new\">Lesson
        7 Level 5</a> for help if you need it.\\\r\n\n-   Make sure\n    you have
        the right to use these images.\\\r\n-   Write down all of the attribution\n
        \   information that you need.\\\r\n-   Upload all of the images into your
        project.  Visit\n    <a href=\"/s/csd2/stage/7/puzzle/5\" target=\"_new\">Lesson
        8 Level 6</a>\n    if you've forgotten how.\\\r\n    \\\r"
      CSD U3 Conditionals Apple: "# More Practice With Booleans\\\r\n\n\\\r\nLet's\nuse
        one more Boolean expression to check the condition of a sprite.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\nThere is a growing apple sprite created for you. It starts
        as green\nand should turn red when it gets to a scale of 2. We won't worry
        about making\nit red yet, let's just use a `console.log` command to check
        whether it's\nscale is 2 yet.\\\r\n\\\r\n\n-   Add a `console.log` statement.\\\r\n-
        \  Add a Boolean\n    expression inside the `console.log` that checks whether
        the `apple.scale`\n    is greater than 2."
      CSD U3 Diagonal Movement: "<img src=\"https://images.code.org/f92774863b17074adc85b8f6bbd017f2-image-1492726926884.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Diagonal Movement\\\r\n\n\\\r\nUpdating\nonly
        the `x` or `y` properties of a sprite can only make it move straight\nup and
        down or left and right. If you want a sprite to move on a diagonal\npath you'll
        need to updated _both_ of those properties.\\\r\n\\\r\nThis program\ncurrently
        makes the mouse move straight down the screen - can you update it\nso that
        it moves diagonally across the screen like the image to the right?\\\r\n\\\r\n_Challenge:\nCan
        you make the mouse point in the same direction as the image?_"
      CSD U3 Draw Loop Plugged orange and green: "<img src=\"https://images.code.org/2b5b2ce029e2f1d7377db7dcd7760cf0-image-1492031771047.15.45\nPM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Using the Draw Loop\\\r\n\n\\\r\nNow\nit's
        your turn to do some work with the draw loop. Remember that the code\ninside
        the draw loop is run by Game Lab over and over again.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        code to this program so that your drawing has orange circles being drawn,\ntoo.\\\r\n\n-
        \  Move on when your program looks like the picture to the right."
      CSD U3 Draw Loop Plugged orange and green_2018: "<img src=\"https://images.code.org/2b5b2ce029e2f1d7377db7dcd7760cf0-image-1492031771047.15.45\nPM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Using the Draw Loop\\\r\n\n\\\r\nNow\nit's
        your turn to do some work with the draw loop. Remember that the code\ninside
        the draw loop is run by Game Lab over and over again.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        code to this program so that your drawing has orange circles being drawn,\ntoo.\\\r\n\n-
        \  Move on when your program looks like the picture to the right."
      CSD U3 Draw Loop Plugged orange and green_2019: "<img src=\"https://images.code.org/2b5b2ce029e2f1d7377db7dcd7760cf0-image-1492031771047.15.45\nPM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Using the Draw Loop\\\r\n\n\\\r\nNow\nit's
        your turn to do some work with the draw loop. Remember that the code\ninside
        the draw loop is run by Game Lab over and over again.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        code to this program so that your drawing has orange circles being drawn,\ntoo.\\\r\n\n-
        \  Move on when your program looks like the picture to the right."
      CSD U3 Draw Loop Plugged predict 1: "# Draw Loop\\\r\n\n\\\r\nHere's\nan example
        of the draw loop at work.\\\r\n\\\r\n\n# Do this\\\r\n\n-   Run the code and\n
        \   see how it works.\\\r\n-   Discuss with your partner whether this looks
        like the\n    flip book you saw in the video.  Why or why not?"
      CSD U3 Draw Loop Plugged predict 1_2018: "# Draw Loop\\\r\n\n\\\r\nHere's\nan
        example of the draw loop at work.\\\r\n\\\r\n\n# Do this\\\r\n\n-   Run the
        code and\n    see how it works.\\\r\n-   Discuss with your partner whether
        this looks like the\n    flip book you saw in the video.  Why or why not?"
      CSD U3 Draw Loop Plugged predict 1_2019: "# Draw Loop\\\r\n\n\\\r\nHere's\nan
        example of the draw loop at work.\\\r\n\\\r\n\n# Do this\\\r\n\n-   Run the
        code and\n    see how it works.\\\r\n-   Discuss with your partner whether
        this looks like the\n    flip book you saw in the video.  Why or why not?"
      CSD U3 Draw Loop Plugged update your scene: "# Extend\n\nYour Scene\\\r\n\\\r\nThis
        is the sprite scene you made in the last lesson. You'll\nnow be updating it
        a little bit to use the draw loop and sprite properties.\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29\nPM.png\"
        style=\"float:right;height:100px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add\n    a draw loop to your program (you should only have one).\\\r\n-
        \  Use the lasso\n    selector (click, hold and drag) to select all your code
        and place it inside\n    your draw loop. Ctrl-Z will let you undo any mistakes
        you make.\\\r\n-   Add code\n    to your program that updates your sprites'
        `sprite.x`, `sprite.y`, or `sprite.rotation`\n    properties so that they
        move. You'll need to update them with `randomNumber()`.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged update your scene_2018: "# Extend\n\nYour Scene\\\r\n\\\r\nThis
        is the sprite scene you made in the last lesson. You'll\nnow be updating it
        a little bit to use the draw loop and sprite properties.\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29\nPM.png\"
        style=\"float:right;height:100px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add\n    a draw loop to your program (you should only have one).\\\r\n-
        \  Use the lasso\n    selector (click, hold and drag) to select all your code
        and place it inside\n    your draw loop. Ctrl-Z will let you undo any mistakes
        you make.\\\r\n-   Add code\n    to your program that updates your sprites'
        `sprite.x`, `sprite.y`, or `sprite.rotation`\n    properties so that they
        move. You'll need to update them with `randomNumber()`.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged update your scene_2019: "# Extend\n\nYour Scene\\\r\n\\\r\nThis
        is the sprite scene you made in the last lesson. You'll\nnow be updating it
        a little bit to use the draw loop and sprite properties.\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/ce257c4d91da460c9c2add1733873769-image-1492209174198.32.29\nPM.png\"
        style=\"float:right;height:100px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add\n    a draw loop to your program (you should only have one).\\\r\n-
        \  Use the lasso\n    selector (click, hold and drag) to select all your code
        and place it inside\n    your draw loop. Ctrl-Z will let you undo any mistakes
        you make.\\\r\n-   Add code\n    to your program that updates your sprites'
        `sprite.x`, `sprite.y`, or `sprite.rotation`\n    properties so that they
        move. You'll need to update them with `randomNumber()`.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite rotation: "\\<img\nsrc=\"<https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\ncombines some of the skills you've
        already seen. It's drawing ellipses in\nthe background and also updating sprite
        properties. This time it's changing\nthe sprite's `sprite.rotation` property.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation\nalready is updating one sprite's rotation
        property to make it look like it's\nshaking\\\r\n\\\r\n\n-   Run the program
        to see how it works.\\\r\n-   Add code to this\n    program to make the other
        alien shake just like the first.\\\r\n-   Move on when\n    your program looks
        like the picture to the right."
      CSD U3 Draw Loop Plugged wiggle sprite rotation_2018: "\\<img\nsrc=\"<https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\ncombines some of the skills you've
        already seen. It's drawing ellipses in\nthe background and also updating sprite
        properties. This time it's changing\nthe sprite's `sprite.rotation` property.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation\nalready is updating one sprite's rotation
        property to make it look like it's\nshaking\\\r\n\\\r\n\n-   Run the program
        to see how it works.\\\r\n-   Add code to this\n    program to make the other
        alien shake just like the first.\\\r\n-   Move on when\n    your program looks
        like the picture to the right."
      CSD U3 Draw Loop Plugged wiggle sprite rotation_2019: "\\<img\nsrc=\"<https://images.code.org/03f98fedbe59ceb5ef0a8530cb81c367-image-1492040405357.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\ncombines some of the skills you've
        already seen. It's drawing ellipses in\nthe background and also updating sprite
        properties. This time it's changing\nthe sprite's `sprite.rotation` property.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation\nalready is updating one sprite's rotation
        property to make it look like it's\nshaking\\\r\n\\\r\n\n-   Run the program
        to see how it works.\\\r\n-   Add code to this\n    program to make the other
        alien shake just like the first.\\\r\n-   Move on when\n    your program looks
        like the picture to the right."
      CSD U3 Draw Loop Plugged wiggle sprite x: "\\<img src=\"<https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nSprites\nhave properties that let the computer
        know where and how to draw them. Two\ncommon properties to use are `sprite.x`
        and `sprite.y` which control the location\nof the sprite. Assigning these
        properties a new value will move your sprite\nto a new location on the screen.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation already\nis updating one sprite's x property
        to make it look like it's shaking\\\r\n\\\r\n\\*\nRun the program to see how
        it works.\\\r\n\n-   Edit the code in this program to\n    make the second
        sprite shake like the first one.\\\r\n-   Move on when your program\n    looks
        like the picture to the right.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite x_2018: "\\<img src=\"<https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nSprites\nhave properties that let the computer
        know where and how to draw them. Two\ncommon properties to use are `sprite.x`
        and `sprite.y` which control the location\nof the sprite. Assigning these
        properties a new value will move your sprite\nto a new location on the screen.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation already\nis updating one sprite's x property
        to make it look like it's shaking\\\r\n\\\r\n\\*\nRun the program to see how
        it works.\\\r\n\n-   Edit the code in this program to\n    make the second
        sprite shake like the first one.\\\r\n-   Move on when your program\n    looks
        like the picture to the right.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite x_2019: "\\<img src=\"<https://images.code.org/71ae26edcc3286ff4d7697aaffecf144-image-1492036602240.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nSprites\nhave properties that let the computer
        know where and how to draw them. Two\ncommon properties to use are `sprite.x`
        and `sprite.y` which control the location\nof the sprite. Assigning these
        properties a new value will move your sprite\nto a new location on the screen.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThis animation already\nis updating one sprite's x property
        to make it look like it's shaking\\\r\n\\\r\n\\*\nRun the program to see how
        it works.\\\r\n\n-   Edit the code in this program to\n    make the second
        sprite shake like the first one.\\\r\n-   Move on when your program\n    looks
        like the picture to the right.\\\r\n    \\\r"
      CSD U3 Draw Loop Plugged wiggle sprite y: "\\<img src=\"<https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\nis very similar to the last,
        but this time, you'll add in the draw loop yourself.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\n-   Add the draw loop block to the bottom of this program.\\\r\n-
        \  Move\n    any blocks that need to be inside the draw loop.\\\r\n-   Move
        on when your program\n    looks like the picture to the right.\\\r"
      CSD U3 Draw Loop Plugged wiggle sprite y_2018: "\\<img src=\"<https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\nis very similar to the last,
        but this time, you'll add in the draw loop yourself.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\n-   Add the draw loop block to the bottom of this program.\\\r\n-
        \  Move\n    any blocks that need to be inside the draw loop.\\\r\n-   Move
        on when your program\n    looks like the picture to the right.\\\r"
      CSD U3 Draw Loop Plugged wiggle sprite y_2019: "\\<img src=\"<https://images.code.org/1e22fb89bcdf99168aee6324d17137ee-image-1493138232702.gif\">,\nstyle=\"float:right;height:150px\">\\\r\n\n#
        Updating Properties\\\r\n\n\\\r\nThis level\nis very similar to the last,
        but this time, you'll add in the draw loop yourself.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\n-   Add the draw loop block to the bottom of this program.\\\r\n-
        \  Move\n    any blocks that need to be inside the draw loop.\\\r\n-   Move
        on when your program\n    looks like the picture to the right.\\\r"
      CSD U3 Drawing Squares to Corners: "<img src=\"https://images.code.org/9e09a96901b1e5ad9d5869b2b1fd3897-image-1498671940133.45.12\nAM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Place Squares in Corners\\\r\n\n\\\r\nA\nbig
        part of using Game Lab is understanding position. Remember you can always\nturn
        on the grid or hover with the mouse to help find the x and y position\nyou
        want.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Place two rectangles exactly
        in the corners\n    of the screen, just like the picture."
      CSD U3 Drawing Squares to Corners_2018: "<img src=\"https://images.code.org/9e09a96901b1e5ad9d5869b2b1fd3897-image-1498671940133.45.12\nAM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Place Squares in Corners\\\r\n\n\\\r\nA\nbig
        part of using Game Lab is understanding position. Remember you can always\nturn
        on the grid or hover with the mouse to help find the x and y position\nyou
        want.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Place two rectangles exactly
        in the corners\n    of the screen, just like the picture."
      CSD U3 Drawing Squares to Corners_2019: "<img src=\"https://images.code.org/9e09a96901b1e5ad9d5869b2b1fd3897-image-1498671940133.45.12\nAM.png\"
        style=\"float:right;width:150px\">\\\r\n\\\r\n\n# Place Squares in Corners\\\r\n\n\\\r\nA\nbig
        part of using Game Lab is understanding position. Remember you can always\nturn
        on the grid or hover with the mouse to help find the x and y position\nyou
        want.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Place two rectangles exactly
        in the corners\n    of the screen, just like the picture."
      CSD U3 Entertainment Sample 1: "# Alien Jumper\\\r\n\n\\\r\nPress\n\"Run\" to
        play the game on the left.  You can make the alien jump with the\nspace bar,
        and move it to the left and right with the arrow keys.  You score\nby collecting
        stars, and if you score high enough, the background will change."
      CSD U3 Entertainment Sample 1_2018: "# Alien Jumper\\\r\n\n\\\r\nPress\n\"Run\"
        to play the game on the left.  You can make the alien jump with the\nspace
        bar, and move it to the left and right with the arrow keys.  You score\nby
        collecting stars, and if you score high enough, the background will change."
      CSD U3 Entertainment Sample 1_2019: "# Alien Jumper\\\r\n\n\\\r\nPress\n\"Run\"
        to play the game on the left.  You can make the alien jump with the\nspace
        bar, and move it to the left and right with the arrow keys.  You score\nby
        collecting stars, and if you score high enough, the background will change."
      CSD U3 Entertainment Sample 2: "# Hungry Bunny\\\r\n\n\\\r\nThe\nbunny is hungry,
        and it's looking for mushrooms and carrots for dinner.\\\r\n\\\r\nTo\nwin,
        you'll need to find a dinner bowl, then collect at least ten carrots\nand
        five mushrooms.\\\r\n\\\r\nMake sure to avoid the bugs.  Ladybugs and snails\nwill
        eat your food, and bees will sting you, making you drop everything!\\\r\n\\\r\nUse\nthe
        space bar to jump.  You can squash ladybugs and snails by jumping on them.\\\r\n\\\r\nClick\n\"Run\"
        to start the program."
      CSD U3 Entertainment Sample 2_2018: "# Hungry Bunny\\\r\n\n\\\r\nThe\nbunny
        is hungry, and it's looking for mushrooms and carrots for dinner.\\\r\n\\\r\nTo\nwin,
        you'll need to find a dinner bowl, then collect at least ten carrots\nand
        five mushrooms.\\\r\n\\\r\nMake sure to avoid the bugs.  Ladybugs and snails\nwill
        eat your food, and bees will sting you, making you drop everything!\\\r\n\\\r\nUse\nthe
        space bar to jump.  You can squash ladybugs and snails by jumping on them.\\\r\n\\\r\nClick\n\"Run\"
        to start the program."
      CSD U3 Entertainment Sample 2_2019: "# Hungry Bunny\\\r\n\n\\\r\nThe\nbunny
        is hungry, and it's looking for mushrooms and carrots for dinner.\\\r\n\\\r\nTo\nwin,
        you'll need to find a dinner bowl, then collect at least ten carrots\nand
        five mushrooms.\\\r\n\\\r\nMake sure to avoid the bugs.  Ladybugs and snails\nwill
        eat your food, and bees will sting you, making you drop everything!\\\r\n\\\r\nUse\nthe
        space bar to jump.  You can squash ladybugs and snails by jumping on them.\\\r\n\\\r\nClick\n\"Run\"
        to start the program."
      CSD U3 Entertainment Sample 3: "# Animated Comics\\\r\n\n\\\r\nCombining\nimages,
        text, and some subtle animation can make for really interesting comics\nor
        graphic stories.  Click \"Run\" to see an example.\\\r"
      CSD U3 Entertainment Sample 3_2018: "# Animated Comics\\\r\n\n\\\r\nCombining\nimages,
        text, and some subtle animation can make for really interesting comics\nor
        graphic stories.  Click \"Run\" to see an example.\\\r"
      CSD U3 Entertainment Sample 3_2019: "# Animated Comics\\\r\n\n\\\r\nCombining\nimages,
        text, and some subtle animation can make for really interesting comics\nor
        graphic stories.  Click \"Run\" to see an example.\\\r"
      CSD U3 Entertainment Sample 4: "# Stamp Pad\\\r\n\n\\\r\nClick\n\"Run\" to start
        the program, then use the stamp pad to draw pictures with\nsimple colors and
        animal stamps.\\\r"
      CSD U3 Entertainment Sample 4_2018: "# Stamp Pad\\\r\n\n\\\r\nClick\n\"Run\"
        to start the program, then use the stamp pad to draw pictures with\nsimple
        colors and animal stamps.\\\r"
      CSD U3 Entertainment Sample 4_2019: "# Stamp Pad\\\r\n\n\\\r\nClick\n\"Run\"
        to start the program, then use the stamp pad to draw pictures with\nsimple
        colors and animal stamps.\\\r"
      CSD U3 Input Fish: "# Fish With Arrows\\\r\n\n\\\r\nThe fish\nare back. Can
        you make the fish move left only when the left arrow key is\npressed down?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Add an if statement to check when\n    the left
        arrow key is pressed down.\\\r\n-   Move the commands for moving the\n    fish
        inside the if statement."
      CSD U3 Input Fish_2018: "# Fish With Arrows\\\r\n\n\\\r\nThe fish\nare back.
        Can you make the fish move left only when the left arrow key is\npressed down?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Add an if statement to check when\n    the left
        arrow key is pressed down.\\\r\n-   Move the commands for moving the\n    fish
        inside the if statement."
      CSD U3 Input Fish_2019: "# Fish With Arrows\\\r\n\n\\\r\nThe fish\nare back.
        Can you make the fish move left only when the left arrow key is\npressed down?\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Add an if statement to check when\n    the left
        arrow key is pressed down.\\\r\n-   Move the commands for moving the\n    fish
        inside the if statement."
      CSD U3 Input Gears: "# Gears with Conditionals\\\r\n\n\\\r\nLet's\nmake the
        gears spin only when the space key is being held down.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Add an `if` statement.\\\r\n-   Use `keyDown` as input to the if\n    statement
        to check when the space key is pressed.\\\r\n-   Move the code that\n    makes
        the gears rotate inside the `if`."
      CSD U3 Input Gears_2018: "# Gears with Conditionals\\\r\n\n\\\r\nLet's\nmake
        the gears spin only when the space key is being held down.\\\r\n\\\r\n\n#
        Do\n\nThis\\\r\n\\\r\n\n-   Add an `if` statement.\\\r\n-   Use `keyDown`
        as input to the if\n    statement to check when the space key is pressed.\\\r\n-
        \  Move the code that\n    makes the gears rotate inside the `if`."
      CSD U3 Input Gears_2019: "# Gears with Conditionals\\\r\n\n\\\r\nLet's\nmake
        the gears spin only when the space key is being held down.\\\r\n\\\r\n\n#
        Do\n\nThis\\\r\n\\\r\n\n-   Add an `if` statement.\\\r\n-   Use `keyDown`
        as input to the if\n    statement to check when the space key is pressed.\\\r\n-
        \  Move the code that\n    makes the gears rotate inside the `if`."
      CSD U3 Keyboard Input Challenge: "# Challenge\\\r\n\n_Check\nwith your teacher
        before trying this challenge._\\\r\n\\\r\nHere's the bug program\nyou've been
        working on for the past few levels. Choose one or more of following\nchallenges,
        or add new features of your own!\\\r\n\\\r\n\n-   Use the \"space\" key\n
        \   to control another property of your bug sprite, such as rotation or scale.\\\r\n-
        \  \\*\n    Add some randomization to your movement.\\\r\n-   Add a second
        sprite and control\n    it with a different set of keys (\"w\", \"a\", \"s\",
        and \"d\" are common\n    choices).\\\r\n-   Add some shapes to your background
        to make the scene more interesting."
      CSD U3 Keyboard Input Challenge_2018: "# Challenge\\\r\n\n_Check\nwith your
        teacher before trying this challenge._\\\r\n\\\r\nHere's the bug program\nyou've
        been working on for the past few levels. Choose one or more of following\nchallenges,
        or add new features of your own!\\\r\n\\\r\n\n-   Use the \"space\" key\n
        \   to control another property of your bug sprite, such as rotation or scale.\\\r\n-
        \  \\*\n    Add some randomization to your movement.\\\r\n-   Add a second
        sprite and control\n    it with a different set of keys (\"w\", \"a\", \"s\",
        and \"d\" are common\n    choices).\\\r\n-   Add some shapes to your background
        to make the scene more interesting."
      CSD U3 Keyboard Input Challenge_2018_2019: "# Challenge\\\r\n\n_Check\nwith
        your teacher before trying this challenge._\\\r\n\\\r\nHere's the bug program\nyou've
        been working on for the past few levels. Choose one or more of following\nchallenges,
        or add new features of your own!\\\r\n\\\r\n\n-   Use the \"space\" key\n
        \   to control another property of your bug sprite, such as rotation or scale.\\\r\n-
        \  \\*\n    Add some randomization to your movement.\\\r\n-   Add a second
        sprite and control\n    it with a different set of keys (\"w\", \"a\", \"s\",
        and \"d\" are common\n    choices).\\\r\n-   Add some shapes to your background
        to make the scene more interesting."
      CSD U3 L11 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L11 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L11 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L12 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L12 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L12 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L13 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L13 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L13 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L15 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L15 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L15 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L16 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L16 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L16 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L17 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L17 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L17 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L18 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L18 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L18 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L19 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L19 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L19 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L3 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L3 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L3 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L4 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L4 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L4 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L5 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L5 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L5 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L6 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L6 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L6 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L7 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L7 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L7 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L9 Freeplay: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned to create
        whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L9 Freeplay_2018: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 L9 Freeplay_2019: "# Free Play\\\r\n\n\\\r\nUse what you've\nlearned
        to create whatever you like.  When you're finished, you can click  ![](<https://images.code.org/2fd36aba2af21d292932b77fb0b9fd0e-image-1498689573973.36.43\nPM.png>)
        \ to send your creation to a friend, or ![](<https://images.code.org/1ddae93513aff160349643f1909590e8-image-1498689597186.36.50\nPM.png>)
        to send it to your Projects Gallery."
      CSD U3 Mouse Input Bee 2: "# Random Around Point\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\"\nstyle=\"float:right\">\\\r\n\\\r\nNow
        that you can make the bee follow the mouse,\nlets make a bee fly around the
        mouse as shown in the picture on the right.  In\norder to do this, you will
        need to **add a random amount between -50 and 50\nto the `mouseX` or `mouseY`.**\\\r\n\\\r\n\n#
        Do This\\\r\n\nYou already have a bee\nsprite that follows the mouse.\\\r\n\\\r\n\n-
        \  Update the x and y location to be\n    randomly close to the mouse.\\\r\n
        \   \\\\t\\* Add a random number between -50 and 50\n    to the `World.mouseX`
        and `World.mouseY`.\\\r\n-   If necessary, use the `World.frameRate`\n    block
        to slow down the animation and find the best frame rate.\\\r\n    \\\r\n    _Challenge:\n
        \   **Add 3 more bees** that follow the mouse in the same way to make a swarm\n
        \   of bees._"
      CSD U3 Mouse Input Bee 2_2018: "# Random Around Point\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\"\nstyle=\"float:right\">\\\r\n\\\r\nNow
        that you can make the bee follow the mouse,\nlets make a bee fly around the
        mouse as shown in the picture on the right.  In\norder to do this, you will
        need to **add a random amount between -50 and 50\nto the `mouseX` or `mouseY`.**\\\r\n\\\r\n\n#
        Do This\\\r\n\nYou already have a bee\nsprite that follows the mouse.\\\r\n\\\r\n\n-
        \  Update the x and y location to be\n    randomly close to the mouse.\\\r\n
        \   \\\\t\\* Add a random number between -50 and 50\n    to the `World.mouseX`
        and `World.mouseY`.\\\r\n-   If necessary, use the `World.frameRate`\n    block
        to slow down the animation and find the best frame rate.\\\r\n    \\\r\n    _Challenge:\n
        \   **Add 3 more bees** that follow the mouse in the same way to make a swarm\n
        \   of bees._"
      CSD U3 Mouse Input Bee 2_2019: "# Random Around Point\\\r\n\n\\\r\n<img\nsrc=\"https://images.code.org/d124946bb9e01a3623078c2a87beea8c-image-1477681483067.gif\"\nstyle=\"float:right\">\\\r\n\\\r\nNow
        that you can make the bee follow the mouse,\nlets make a bee fly around the
        mouse as shown in the picture on the right.  In\norder to do this, you will
        need to **add a random amount between -50 and 50\nto the `mouseX` or `mouseY`.**\\\r\n\\\r\n\n#
        Do This\\\r\n\nYou already have a bee\nsprite that follows the mouse.\\\r\n\\\r\n\n-
        \  Update the x and y location to be\n    randomly close to the mouse.\\\r\n
        \   \\\\t\\* Add a random number between -50 and 50\n    to the `World.mouseX`
        and `World.mouseY`.\\\r\n-   If necessary, use the `World.frameRate`\n    block
        to slow down the animation and find the best frame rate.\\\r\n    \\\r\n    _Challenge:\n
        \   **Add 3 more bees** that follow the mouse in the same way to make a swarm\n
        \   of bees._"
      CSD U3 Movement Fish: "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Fish Animation\\\r\n\n\\\r\nUsing\nthe
        counter pattern, make all three of the fish move in the image to the right.\nThe
        blue fish should move the fastest, followed by the orange fish, with the\ngreen
        fish being the slowest."
      CSD U3 Movement Fish_2018: "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Fish Animation\\\r\n\n\\\r\nUsing\nthe
        counter pattern, make all three of the fish move in the image to the right.\nThe
        blue fish should move the fastest, followed by the orange fish, with the\ngreen
        fish being the slowest."
      CSD U3 Movement Fish_2019: "<img src=\"https://images.code.org/7852ab38a8222ee827edeff2767e8efd-image-1492037897236.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Fish Animation\\\r\n\n\\\r\nUsing\nthe
        counter pattern, make all three of the fish move in the image to the right.\nThe
        blue fish should move the fastest, followed by the orange fish, with the\ngreen
        fish being the slowest."
      CSD U3 Movement Gears: "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\"\nstyle=\"width:200px;
        float:right; margin-left: 20px;\">\\\r\n\\\r\n\n# Rotation\n\nDirection\\\r\n\\\r\nWhen
        you use the counter pattern for the `rotation` property\nwith addition, the
        object will always rotate clockwise. Sometimes however\nyou will want your
        sprite to rotate the other direction. To do this you can\njust use subtraction!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThere are three gears set up\nfor you. You need to make
        the gears all look like they are rotating in sync\nwith each other.\\\r\n\\\r\n\n-
        \  Make the gears rotate so they look like they are\n    working as one system.\\\r\n-
        \  **Hint: They won't all rotate the same direction**."
      CSD U3 Movement Gears_2018: "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\"\nstyle=\"width:200px;
        float:right; margin-left: 20px;\">\\\r\n\\\r\n\n# Rotation\n\nDirection\\\r\n\\\r\nWhen
        you use the counter pattern for the `rotation` property\nwith addition, the
        object will always rotate clockwise. Sometimes however\nyou will want your
        sprite to rotate the other direction. To do this you can\njust use subtraction!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThere are three gears set up\nfor you. You need to make
        the gears all look like they are rotating in sync\nwith each other.\\\r\n\\\r\n\n-
        \  Make the gears rotate so they look like they are\n    working as one system.\\\r\n-
        \  **Hint: They won't all rotate the same direction**."
      CSD U3 Movement Gears_2019: "<img src=\"https://images.code.org/eac110e64ccad62482c82d4ef66f237b-image-1465518920408.gif\"\nstyle=\"width:200px;
        float:right; margin-left: 20px;\">\\\r\n\\\r\n\n# Rotation\n\nDirection\\\r\n\\\r\nWhen
        you use the counter pattern for the `rotation` property\nwith addition, the
        object will always rotate clockwise. Sometimes however\nyou will want your
        sprite to rotate the other direction. To do this you can\njust use subtraction!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nThere are three gears set up\nfor you. You need to make
        the gears all look like they are rotating in sync\nwith each other.\\\r\n\\\r\n\n-
        \  Make the gears rotate so they look like they are\n    working as one system.\\\r\n-
        \  **Hint: They won't all rotate the same direction**."
      CSD U3 Movement Your Own 1: "# Make an animation of your\n\nown\\\r\n\\\r\nUsing
        the counter pattern and sprite properties, make an animation\nall your own.
        You might consider building on the static images you've made\nin the past,
        or come up with a new image to create or story to tell.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nTo start, let's just get a static scene set up.\\\r\n\\\r\n\n-
        \  Add\n    images in the Animation Tab.\\\r\n-   Create sprites and assign
        images.\\\r\n-   Set\n    up the draw loop to draw a background and your sprites."
      CSD U3 Movement Your Own 1_2018: "# Make an animation of your\n\nown\\\r\n\\\r\nUsing
        the counter pattern and sprite properties, make an animation\nall your own.
        You might consider building on the static images you've made\nin the past,
        or come up with a new image to create or story to tell.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nTo start, let's just get a static scene set up.\\\r\n\\\r\n\n-
        \  Add\n    images in the Animation Tab.\\\r\n-   Create sprites and assign
        images.\\\r\n-   Set\n    up the draw loop to draw a background and your sprites."
      CSD U3 Movement Your Own 1_2019: "# Make an animation of your\n\nown\\\r\n\\\r\nUsing
        the counter pattern and sprite properties, make an animation\nall your own.
        You might consider building on the static images you've made\nin the past,
        or come up with a new image to create or story to tell.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nTo start, let's just get a static scene set up.\\\r\n\\\r\n\n-
        \  Add\n    images in the Animation Tab.\\\r\n-   Create sprites and assign
        images.\\\r\n-   Set\n    up the draw loop to draw a background and your sprites."
      CSD U3 Movement Your Own 2: "# Add movement to your animation\\\r\n\n\\\r\nWith\nyour
        static scene set up, you can now add some movement. When you are satisfied\nwith
        your program, click the \"Submit\" button to turn it in. You can always\nunsubmit
        and continue working if you want to add features.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nIn\nthe
        draw loop\\\r\n\\\r\n\n-   Identify which sprite properties to change.\\\r\n-
        \  Update\n    those properties using the counter pattern.\\\r\n    \\\r\n
        \   _Tip: If your counter pattern\n    isn't working like you expect, add
        watchers to help debug your program._"
      CSD U3 Movement Your Own 2_2018: "# Add movement to your animation\\\r\n\n\\\r\nWith\nyour
        static scene set up, you can now add some movement. When you are satisfied\nwith
        your program, click the \"Submit\" button to turn it in. You can always\nunsubmit
        and continue working if you want to add features.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nIn\nthe
        draw loop\\\r\n\\\r\n\n-   Identify which sprite properties to change.\\\r\n-
        \  Update\n    those properties using the counter pattern.\\\r\n    \\\r\n
        \   _Tip: If your counter pattern\n    isn't working like you expect, add
        watchers to help debug your program._"
      CSD U3 Movement Your Own 2_2019: "# Add movement to your animation\\\r\n\n\\\r\nWith\nyour
        static scene set up, you can now add some movement. When you are satisfied\nwith
        your program, click the \"Submit\" button to turn it in. You can always\nunsubmit
        and continue working if you want to add features.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nIn\nthe
        draw loop\\\r\n\\\r\n\n-   Identify which sprite properties to change.\\\r\n-
        \  Update\n    those properties using the counter pattern.\\\r\n    \\\r\n
        \   _Tip: If your counter pattern\n    isn't working like you expect, add
        watchers to help debug your program._"
      CSD U3 Plotting Shapes Shape Lab: "# Drawing Shapes\\\r\n\n\\\r\nExplore\nusing
        this tool that lets you draw different colored shapes. \\\r\n\\\r\nMake\nsure
        you hit \"Run\" and try out turning on the grid to help you place shapes\nprecisely.\\\r\n\\\r\n![](<https://images.code.org/d52dbc112dcc088858c4b8f54be09aa1-image-1502914103923.07.59\nPM.png>)"
      CSD U3 Plotting Shapes Shape Lab_2018: "# Drawing Shapes\\\r\n\n\\\r\nExplore\nusing
        this tool that lets you draw different colored shapes. \\\r\n\\\r\nMake\nsure
        you hit \"Run\" and try out turning on the grid to help you place shapes\nprecisely.\\\r\n\\\r\n![](<https://images.code.org/d52dbc112dcc088858c4b8f54be09aa1-image-1502914103923.07.59\nPM.png>)"
      CSD U3 Random Debug Cloud: "<img src=\"https://images.code.org/529b7e5ddda4683e6a0cc5b3028e4dbf-image-1490824752133.58.50\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Debug - Using 4 Parameters\\\r\n\n\\\r\nNow\nthat
        the grass is working, let's add a cloud to the sky. Unfortunately, it\nlooks
        a little funny right now.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Debug
        this program\n    to make the cloud wider than it is tall, like in the image.\\\r\n-
        \  Hint: You'll\n    need to change two parameters. Which ones set your cloud's
        width and height?\\\r\n    \\\r\n    _Challenge:\n    The sun is not in the
        exact same place as in the picture.  Can you change\n    the sun's coordinates
        so that the picture matches completely?_"
      CSD U3 Random Debug Grass: "<img src=\"https://images.code.org/83269268e1c4f8af8551253ff4573b43-image-1490825158453.03.45\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Debug - Using 4 Parameters\\\r\n\n\\\r\nThis\nprogram
        uses the four parameter version of `rect()` and `ellipse()` to draw\na simple
        scene.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Debug this program and correct
        the\n    error so that the grass extends across the entire bottom.\\\r\n-
        \  Hint: You only\n    have to change one number. Which parameter makes your
        rectangle (the grass)\n    wider?"
      CSD U3 Random Ellipse Behind: "<img src=\"https://images.code.org/a8ed6092389aedceceb38a83ac59fae1-image-1490832453029.07.10\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Write\n    code that makes an orange ellipse behind the green one.\\\r\n-
        \  Don't worry\n    about the exact size as long as the green ellipse is entirely
        inside the orange\n    one."
      CSD U3 Random Taller Rectangle: "<img src=\"https://images.code.org/02871e5c5d041ea1724e4a02d3697941-image-1492721665345.54.10\nPM.png\"
        style=\"float:right;height:150px; border: 1px solid #CCC\">\\\r\n\n# \n\nRectangle
        Size\\\r\n\\\r\nThese `rect` blocks have two more parameters that you\ncan
        use to control the size. Notice that the `noStroke()` block turns off\nthe
        stroke (border) for shapes.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Look
        at the code\n    and try to figure out how the last two inputs in `rect` work.\\\r\n-
        \  Change\n    the numbers in the second `rect` to make red rectangle longer
        than the blue\n    one.\\\r"
      CSD U3 Random Taller Rectangle_2018: "<img src=\"https://images.code.org/02871e5c5d041ea1724e4a02d3697941-image-1492721665345.54.10\nPM.png\"
        style=\"float:right;height:150px; border: 1px solid #CCC\">\\\r\n\n# \n\nRectangle
        Size\\\r\n\\\r\nThese `rect` blocks have two more parameters that you\ncan
        use to control the size. Notice that the `noStroke()` block turns off\nthe
        stroke (border) for shapes.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Look
        at the code\n    and try to figure out how the last two inputs in `rect` work.\\\r\n-
        \  Change\n    the numbers in the second `rect` to make red rectangle longer
        than the blue\n    one.\\\r"
      CSD U3 Random Taller Rectangle_2019: "<img src=\"https://images.code.org/02871e5c5d041ea1724e4a02d3697941-image-1492721665345.54.10\nPM.png\"
        style=\"float:right;height:150px; border: 1px solid #CCC\">\\\r\n\n# \n\nRectangle
        Size\\\r\n\\\r\nThese `rect` blocks have two more parameters that you\ncan
        use to control the size. Notice that the `noStroke()` block turns off\nthe
        stroke (border) for shapes.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Look
        at the code\n    and try to figure out how the last two inputs in `rect` work.\\\r\n-
        \  Change\n    the numbers in the second `rect` to make red rectangle longer
        than the blue\n    one.\\\r"
      CSD U3 Random background: "# Background\\\r\n\n\\\r\nSometimes\nyou'll want
        to fill the entire screen with a color.  For that, you can use\n`background`.
        \ It covers everything on the screen with the color you choose.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Run the code to see `background` work.\\\r\n-
        \  Change the background\n    from yellow to orange.\\\r\n    \\\r\n    _Challenge:
        There is a purple square that is\n    covered up by the background.  Can you
        change the order of the code so you\n    can see both the purple and blue
        squares?_"
      CSD U3 Random background2: "<img src=\"https://images.code.org/a68cfd23a13b6bdeef91dc9fd584f657-image-1491332601738.03.04\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Background\\\r\n\n\\\r\n`background()`\nwill
        draw on top of everything already in your drawing, so it's important\nto think
        about the order of your code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Use
        `background()`\n    to make a \"black\" background behind the green circle."
      CSD U3 Random background2_2018: "<img src=\"https://images.code.org/a68cfd23a13b6bdeef91dc9fd584f657-image-1491332601738.03.04\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Background\\\r\n\n\\\r\n`background()`\nwill
        draw on top of everything already in your drawing, so it's important\nto think
        about the order of your code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Use
        `background()`\n    to make a \"black\" background behind the green circle."
      CSD U3 Random background2_2019: "<img src=\"https://images.code.org/a68cfd23a13b6bdeef91dc9fd584f657-image-1491332601738.03.04\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Background\\\r\n\n\\\r\n`background()`\nwill
        draw on top of everything already in your drawing, so it's important\nto think
        about the order of your code.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Use
        `background()`\n    to make a \"black\" background behind the green circle."
      CSD U3 Random background_2018: "# Background\\\r\n\n\\\r\nSometimes\nyou'll
        want to fill the entire screen with a color.  For that, you can use\n`background`.
        \ It covers everything on the screen with the color you choose.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Run the code to see `background` work.\\\r\n-
        \  Change the background\n    from yellow to orange.\\\r\n    \\\r\n    _Challenge:
        There is a purple square that is\n    covered up by the background.  Can you
        change the order of the code so you\n    can see both the purple and blue
        squares?_"
      CSD U3 Random background_2019: "# Background\\\r\n\n\\\r\nSometimes\nyou'll
        want to fill the entire screen with a color.  For that, you can use\n`background`.
        \ It covers everything on the screen with the color you choose.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Run the code to see `background` work.\\\r\n-
        \  Change the background\n    from yellow to orange.\\\r\n    \\\r\n    _Challenge:
        There is a purple square that is\n    covered up by the background.  Can you
        change the order of the code so you\n    can see both the purple and blue
        squares?_"
      CSD U3 Random rainbow snake: "<img src=\"https://images.code.org/d1e4780e483ffa510a27e91b2b1f1963-image-1491341267537.26.14\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Rainbow Snake\\\r\n\n\\\r\nThis\nprogram
        draws a very rare breed of rainbow snake. To make the snake draw differently\nevery
        time you'll need to use random numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Run\n    the program several times to see how the starter code works.\\\r\n-
        \  Add at least\n    three new different colored circles to your rainbow snake.\\\r\n-
        \  Use `randomNumber()`\n    to make the rest of the snake's body move up
        and down like the first three.\\\r\n    \\\r\n    _Challenge:\n    Can you
        make size of some of the circles random, too?_"
      CSD U3 Random random ellipse: "# Random Numbers\\\r\n\n\\\r\n`randomNumber()`\nchooses
        a random number between a minimum and maximum value. You can use this\ncode
        instead of writing in the specific number.  If you make your drawings\nwith
        random numbers it will look a little bit different every time you run\nyour
        program.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Run the program several
        times to see\n    how it works.\\\r\n-   Change the numbers inside `randomNumber`
        and run the code\n    again a few times to see what changes."
      CSD U3 Random random ellipse2: "<img src=\"https://images.code.org/ff3be801c7e634d49584aac103df292a-image-1491334428729.33.18\nPM.png\"
        style=\"float:right;height:150px\">\\\r\n\\\r\n\n# Random Numbers\\\r\n\n\\\r\nHere's\nthe
        same sun from last time.  Right now only the x-coordinate is random, but\nyou
        can make the y-coordinate random, too.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Use `randomNumber()`\n    for the ellipse's Y parameter so the circle is
        drawn in a random Y position,\n    too.\\\r\n-   As long as your circle is
        appearing at random X and Y positions,\n    you can move on."
      CSD U3 Random random ellipse_2018: "# Random Numbers\\\r\n\n\\\r\n`randomNumber()`\nchooses
        a random number between a minimum and maximum value. You can use this\ncode
        instead of writing in the specific number.  If you make your drawings\nwith
        random numbers it will look a little bit different every time you run\nyour
        program.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Run the program several
        times to see\n    how it works.\\\r\n-   Change the numbers inside `randomNumber`
        and run the code\n    again a few times to see what changes."
      CSD U3 Random random ellipse_2018_2019: "# Random Numbers\\\r\n\n\\\r\n`randomNumber()`\nchooses
        a random number between a minimum and maximum value. You can use this\ncode
        instead of writing in the specific number.  If you make your drawings\nwith
        random numbers it will look a little bit different every time you run\nyour
        program.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Run the program several
        times to see\n    how it works.\\\r\n-   Change the numbers inside `randomNumber`
        and run the code\n    again a few times to see what changes."
      CSD U3 Scene Example: "# Sprite Scenes\\\r\n\n\\\r\nBy combining\nshapes, sprites,
        and a new block called `text`, you can create simple scenes,\nstories, or
        comics. While this example is fairly simple, you can combine as\nmany sprites
        and shapes as you like to create scenes as complex or detailed\nas you like.\\\r\n\\\r\n\n##
        Sketch It Out\\\r\n\n\\\r\nBefore moving on, take a second\nto sketch out
        a scene that you'd like to make at the end of this lesson.\nConsider the simple
        shapes that you've used in the past, sprites for your\ncharacters, and any
        text that you'd like on the screen. Once you've sketched\nout an idea, you'll
        learn about `text` and how to compose a scene.\\\r"
      CSD U3 Sprite Movement Left: "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Moving to the Left\\\r\n\n\\\r\nIf\nadding
        to a sprite's x coordinate makes it move to the right, how could you\nmake
        it move to the left?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake your program
        animate\nlike the image to the right. Update `fly.x` inside the draw loop
        so that in\neach frame the fly is drawn a little bit further to the left.\\\r\n\\\r\n_Tip:\nYou
        can make your sprites move faster by adding or subtracting larger numbers.\nThe
        fly in our example moves about twice as fast as the plane in the last\nlevel._"
      CSD U3 Sprite Movement Left_2018: "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Moving to the Left\\\r\n\n\\\r\nIf\nadding
        to a sprite's x coordinate makes it move to the right, how could you\nmake
        it move to the left?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake your program
        animate\nlike the image to the right. Update `fly.x` inside the draw loop
        so that in\neach frame the fly is drawn a little bit further to the left.\\\r\n\\\r\n_Tip:\nYou
        can make your sprites move faster by adding or subtracting larger numbers.\nThe
        fly in our example moves about twice as fast as the plane in the last\nlevel._"
      CSD U3 Sprite Movement Left_2019: "<img src=\"https://images.code.org/9f9162cb94a02d9b3aba9b6067d0281a-image-1491862771496.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Moving to the Left\\\r\n\n\\\r\nIf\nadding
        to a sprite's x coordinate makes it move to the right, how could you\nmake
        it move to the left?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake your program
        animate\nlike the image to the right. Update `fly.x` inside the draw loop
        so that in\neach frame the fly is drawn a little bit further to the left.\\\r\n\\\r\n_Tip:\nYou
        can make your sprites move faster by adding or subtracting larger numbers.\nThe
        fly in our example moves about twice as fast as the plane in the last\nlevel._"
      CSD U3 Sprite Movement Right: "<img src=\"https://images.code.org/629bc615a879f0f3dc9f290bea2358c8-image-1491861334164.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Sprite Movement\\\r\n\n\\\r\nUsing\nthe
        counter pattern, you can write programs that animate sprites smoothly.\nAdding
        to or removing from a sprite's `x` or `y` property in the draw loop\nmakes
        your sprite move just a bit each time it is redrawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\nyour
        program animate like the image to the right. We've already added a line\nto
        update `plane.x` in the draw loop, but it needs to be finished.\\\r"
      CSD U3 Sprite Movement Right_2018: "<img src=\"https://images.code.org/629bc615a879f0f3dc9f290bea2358c8-image-1491861334164.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Sprite Movement\\\r\n\n\\\r\nUsing\nthe
        counter pattern, you can write programs that animate sprites smoothly.\nAdding
        to or removing from a sprite's `x` or `y` property in the draw loop\nmakes
        your sprite move just a bit each time it is redrawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\nyour
        program animate like the image to the right. We've already added a line\nto
        update `plane.x` in the draw loop, but it needs to be finished.\\\r"
      CSD U3 Sprite Movement Right_2019: "<img src=\"https://images.code.org/629bc615a879f0f3dc9f290bea2358c8-image-1491861334164.gif\"\nstyle=\"float:
        right; margin-left: 20px\">\\\r\n\\\r\n\n# Sprite Movement\\\r\n\n\\\r\nUsing\nthe
        counter pattern, you can write programs that animate sprites smoothly.\nAdding
        to or removing from a sprite's `x` or `y` property in the draw loop\nmakes
        your sprite move just a bit each time it is redrawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\nyour
        program animate like the image to the right. We've already added a line\nto
        update `plane.x` in the draw loop, but it needs to be finished.\\\r"
      CSD U3 Sprites anitab 1: "# Images\\\r\n\n\\\r\nOver on the\n**Animations Tab**,
        you'll see three images that have been loaded for you.\nYou can get to the
        animations tab by clicking the **Animation** button above\nthe display area.\\\r\n\\\r\n<img
        src=\"https://images.code.org/f694a37bbadcf0533e7b19d8c0f5309b-image-1465580394090.35.11\nPM.png\"
        style=\"width:300px;float:right\">\\\r\n\\\r\nOnce you have created a\nsprite,
        you can **use the `sprite.setAnimation()` command to change the look\nof your
        sprite from a rectangle to a picture.** All the images you have loaded\nin
        the Animation Tab show up in the `sprite.setAnimation()` dropdown.  The\nalien
        is set up for you as an example.\\\r\n\\\r\n\n# Do This\\\r\n\nChange the
        sprite\nto your favorite image from the animations tab.\\\r\n\\\r\n\n-   A
        sprite that is\n    set to an image has already been created for you.\\\r\n-
        \  Run the code to see\n    how it works.\\\r\n-   Change the input to the
        `setAnimation` command to change\n    the look of the sprite.\\\r\n-   Try
        out all the different images."
      CSD U3 Sprites anitab 1_2018: "# Images\\\r\n\n\\\r\nOver on the\n**Animations
        Tab**, you'll see three images that have been loaded for you.\nYou can get
        to the animations tab by clicking the **Animation** button above\nthe display
        area.\\\r\n\\\r\n<img src=\"https://images.code.org/f694a37bbadcf0533e7b19d8c0f5309b-image-1465580394090.35.11\nPM.png\"
        style=\"width:300px;float:right\">\\\r\n\\\r\nOnce you have created a\nsprite,
        you can **use the `sprite.setAnimation()` command to change the look\nof your
        sprite from a rectangle to a picture.** All the images you have loaded\nin
        the Animation Tab show up in the `sprite.setAnimation()` dropdown.  The\nalien
        is set up for you as an example.\\\r\n\\\r\n\n# Do This\\\r\n\nChange the
        sprite\nto your favorite image from the animations tab.\\\r\n\\\r\n\n-   A
        sprite that is\n    set to an image has already been created for you.\\\r\n-
        \  Run the code to see\n    how it works.\\\r\n-   Change the input to the
        `setAnimation` command to change\n    the look of the sprite.\\\r\n-   Try
        out all the different images."
      CSD U3 Sprites anitab 1_2019: "# Images\\\r\n\n\\\r\nOver on the\n**Animations
        Tab**, you'll see three images that have been loaded for you.\nYou can get
        to the animations tab by clicking the **Animation** button above\nthe display
        area.\\\r\n\\\r\n<img src=\"https://images.code.org/f694a37bbadcf0533e7b19d8c0f5309b-image-1465580394090.35.11\nPM.png\"
        style=\"width:300px;float:right\">\\\r\n\\\r\nOnce you have created a\nsprite,
        you can **use the `sprite.setAnimation()` command to change the look\nof your
        sprite from a rectangle to a picture.** All the images you have loaded\nin
        the Animation Tab show up in the `sprite.setAnimation()` dropdown.  The\nalien
        is set up for you as an example.\\\r\n\\\r\n\n# Do This\\\r\n\nChange the
        sprite\nto your favorite image from the animations tab.\\\r\n\\\r\n\n-   A
        sprite that is\n    set to an image has already been created for you.\\\r\n-
        \  Run the code to see\n    how it works.\\\r\n-   Change the input to the
        `setAnimation` command to change\n    the look of the sprite.\\\r\n-   Try
        out all the different images."
      CSD U3 Sprites anitab 2: "# Upload your own image\\\r\n\n\\\r\nYou\ncan also
        use the Animation tab to upload or draw your own image.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\nYou are going to make a flying kite. You can search the web for\nan
        image or create a new animation from scratch by drawing your own kite.\\\r\n\\\r\n\\*\nDownload
        your kite image. Images with transparent backgrounds work best.\\\r\n\\*\nOpen
        the animations tab.\\\r\n\n-   Click <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05\n
        \   PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16\n
        \   PM.png\" style=\"width:50px\"> to upload an image.\\\r\n-   Select the
        file from\n    your computer.\\\r\n-   Rename your image so it is easy to
        remember. To rename\n    it click the text below the image.\\\r\n-   Back
        in code mode, use `sprite.setAnimation()`\n    to make your `kite` sprite
        show your new animation.\\\r\n    \\\r\n    Don't worry if\n    your kite
        image is too big! You'll learn how to fix that in the next level."
      CSD U3 Sprites anitab 2_2018: "# Upload your own image\\\r\n\n\\\r\nYou\ncan
        also use the Animation tab to upload or draw your own image.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\nYou are going to make a flying kite. You can search the web
        for\nan image or create a new animation from scratch by drawing your own kite.\\\r\n\\\r\n\\*\nDownload
        your kite image. Images with transparent backgrounds work best.\\\r\n\\*\nOpen
        the animations tab.\\\r\n\n-   Click <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05\n
        \   PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16\n
        \   PM.png\" style=\"width:50px\"> to upload an image.\\\r\n-   Select the
        file from\n    your computer.\\\r\n-   Rename your image so it is easy to
        remember. To rename\n    it click the text below the image.\\\r\n-   Back
        in code mode, use `sprite.setAnimation()`\n    to make your `kite` sprite
        show your new animation.\\\r\n    \\\r\n    Don't worry if\n    your kite
        image is too big! You'll learn how to fix that in the next level."
      CSD U3 Sprites anitab 2_2019: "# Upload your own image\\\r\n\n\\\r\nYou\ncan
        also use the Animation tab to upload or draw your own image.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\nYou are going to make a flying kite. You can search the web
        for\nan image or create a new animation from scratch by drawing your own kite.\\\r\n\\\r\n\\*\nDownload
        your kite image. Images with transparent backgrounds work best.\\\r\n\\*\nOpen
        the animations tab.\\\r\n\n-   Click <img src=\"https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05\n
        \   PM.png\" style=\"width:50px\"> and then <img src=\"https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16\n
        \   PM.png\" style=\"width:50px\"> to upload an image.\\\r\n-   Select the
        file from\n    your computer.\\\r\n-   Rename your image so it is easy to
        remember. To rename\n    it click the text below the image.\\\r\n-   Back
        in code mode, use `sprite.setAnimation()`\n    to make your `kite` sprite
        show your new animation.\\\r\n    \\\r\n    Don't worry if\n    your kite
        image is too big! You'll learn how to fix that in the next level."
      CSD U3 Sprites anitab 3: "# Resizing with Scale\\\r\n\n\\\r\nIn\nthe _Sprites_
        drawer of the toolbox, you'll see a new block called `sprite.scale`.\nIt lets
        you change the size of a sprite in relation to its original size.\n`sprite.scale
        = 1` is the normal size. `sprite.scale = 0.5` makes your sprite\nhalf as big,
        while `sprite.scale = 2` makes it twice as big.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThe\nprogram
        should already include your newly uploaded image, but it's probably\nnot the
        _perfect_ size. Use `sprite.scale` to change the size of your `kite`\nsprite.\\\r\n\\\r\n_Hint:
        the order of your code matters! You need to add `sprite.scale`\n**after**
        you've created the sprite, but **before** you draw the sprite with\n`drawSprites()`.
        For clarity, try to keep all of your sprite code together\nat the top of your
        program._"
      CSD U3 Sprites anitab 3_2018: "# Resizing with Scale\\\r\n\n\\\r\nIn\nthe _Sprites_
        drawer of the toolbox, you'll see a new block called `sprite.scale`.\nIt lets
        you change the size of a sprite in relation to its original size.\n`sprite.scale
        = 1` is the normal size. `sprite.scale = 0.5` makes your sprite\nhalf as big,
        while `sprite.scale = 2` makes it twice as big.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThe\nprogram
        should already include your newly uploaded image, but it's probably\nnot the
        _perfect_ size. Use `sprite.scale` to change the size of your `kite`\nsprite.\\\r\n\\\r\n_Hint:
        the order of your code matters! You need to add `sprite.scale`\n**after**
        you've created the sprite, but **before** you draw the sprite with\n`drawSprites()`.
        For clarity, try to keep all of your sprite code together\nat the top of your
        program._"
      CSD U3 Sprites anitab 3_2019: "# Resizing with Scale\\\r\n\n\\\r\nIn\nthe _Sprites_
        drawer of the toolbox, you'll see a new block called `sprite.scale`.\nIt lets
        you change the size of a sprite in relation to its original size.\n`sprite.scale
        = 1` is the normal size. `sprite.scale = 0.5` makes your sprite\nhalf as big,
        while `sprite.scale = 2` makes it twice as big.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThe\nprogram
        should already include your newly uploaded image, but it's probably\nnot the
        _perfect_ size. Use `sprite.scale` to change the size of your `kite`\nsprite.\\\r\n\\\r\n_Hint:
        the order of your code matters! You need to add `sprite.scale`\n**after**
        you've created the sprite, but **before** you draw the sprite with\n`drawSprites()`.
        For clarity, try to keep all of your sprite code together\nat the top of your
        program._"
      CSD U3 Sprites intro debug: "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\"\nstyle=\"width:
        150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\\\r\n\n#
        \n\nDebug\\\r\n\\\r\nThis program should create two new sprites, one on the
        left of\nthe screen and one on the right, but it's only drawing one. **You
        don't\nneed to add any code**, just rearrange the code already present to
        make sure\nthat both sprites show up like the picture on the right."
      CSD U3 Sprites intro debug_2018: "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\"\nstyle=\"width:
        150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\\\r\n\n#
        \n\nDebug\\\r\n\\\r\nThis program should create two new sprites, one on the
        left of\nthe screen and one on the right, but it's only drawing one. **You
        don't\nneed to add any code**, just rearrange the code already present to
        make sure\nthat both sprites show up like the picture on the right."
      CSD U3 Sprites intro debug_2019: "<img src=\"https://images.code.org/63207a624d751aacb376db18cdf09eec-image-1491255841823.png\"\nstyle=\"width:
        150px; float: right; margin-left: 20px; border: 1px solid #f2f2f2;\">\\\r\n\n#
        \n\nDebug\\\r\n\\\r\nThis program should create two new sprites, one on the
        left of\nthe screen and one on the right, but it's only drawing one. **You
        don't\nneed to add any code**, just rearrange the code already present to
        make sure\nthat both sprites show up like the picture on the right."
      CSD U3 Sprites scene challenge: "# Challenge: Extend your\n\nscene\\\r\n\\\r\n_Check
        with your teacher before starting this challenge._\\\r\n\\\r\nNow\nthat you've
        finished your scene, consider adding to it or creating another."
      CSD U3 Sprites scene challenge_2018: "# Challenge: Extend your\n\nscene\\\r\n\\\r\n_Check
        with your teacher before starting this challenge._\\\r\n\\\r\nNow\nthat you've
        finished your scene, consider adding to it or creating another."
      CSD U3 Sprites scene challenge_2019: "# Challenge: Extend your\n\nscene\\\r\n\\\r\n_Check
        with your teacher before starting this challenge._\\\r\n\\\r\nNow\nthat you've
        finished your scene, consider adding to it or creating another."
      CSD U3 Sprites scene drawing: "# Create Your Scene - Drawing\\\r\n\n\\\r\nYou're\ngoing
        to start creating a scene of your own. If you haven't already, take\na minute
        to sketch out a picture of your scene (consider using graph paper).\nOnce
        you have an idea and plan for your scene, start drawing the background.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Use a `background()` command to fill the screen
        with a color.\\\r\n-   \\*\n    Add any necessary shape commands to draw the
        non-sprite elements of your scene."
      CSD U3 Sprites scene drawing_2018: "# Create Your Scene - Drawing\\\r\n\n\\\r\nYou're\ngoing
        to start creating a scene of your own. If you haven't already, take\na minute
        to sketch out a picture of your scene (consider using graph paper).\nOnce
        you have an idea and plan for your scene, start drawing the background.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Use a `background()` command to fill the screen
        with a color.\\\r\n-   \\*\n    Add any necessary shape commands to draw the
        non-sprite elements of your scene."
      CSD U3 Sprites scene drawing_2019: "# Create Your Scene - Drawing\\\r\n\n\\\r\nYou're\ngoing
        to start creating a scene of your own. If you haven't already, take\na minute
        to sketch out a picture of your scene (consider using graph paper).\nOnce
        you have an idea and plan for your scene, start drawing the background.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Use a `background()` command to fill the screen
        with a color.\\\r\n-   \\*\n    Add any necessary shape commands to draw the
        non-sprite elements of your scene."
      CSD U3 Sprites scene sprites: "# Create Your Scene - Sprites\\\r\n\n\\\r\nWith\nyour
        background in place, it's time to add your sprites.\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        or create all of your sprite images in the Animation Tab.\\\r\n\n-   Create\n
        \   a variable for each sprite at the top of your program and use `setAnimation()`\n
        \   to assign the images you created in the Animation Tab.\\\r\n-   Call `drawSprites()`\n
        \   once at the end of your program.\\\r\n    \\\r\n    _Hint: You probably
        want to call `drawSprites()`\n    at the very end of your program so the sprites
        are on top of your background,\n    but for some designs you may want to call
        `drawSprites()` earlier so that\n    your sprites are on top of some shapes
        but below others._"
      CSD U3 Sprites scene sprites_2018: "# Create Your Scene - Sprites\\\r\n\n\\\r\nWith\nyour
        background in place, it's time to add your sprites.\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        or create all of your sprite images in the Animation Tab.\\\r\n\n-   Create\n
        \   a variable for each sprite at the top of your program and use `setAnimation()`\n
        \   to assign the images you created in the Animation Tab.\\\r\n-   Call `drawSprites()`\n
        \   once at the end of your program.\\\r\n    \\\r\n    _Hint: You probably
        want to call `drawSprites()`\n    at the very end of your program so the sprites
        are on top of your background,\n    but for some designs you may want to call
        `drawSprites()` earlier so that\n    your sprites are on top of some shapes
        but below others._"
      CSD U3 Sprites scene sprites_2019: "# Create Your Scene - Sprites\\\r\n\n\\\r\nWith\nyour
        background in place, it's time to add your sprites.\\\r\n\n# Do This\\\r\n\n\\\r\n\\*\nAdd
        or create all of your sprite images in the Animation Tab.\\\r\n\n-   Create\n
        \   a variable for each sprite at the top of your program and use `setAnimation()`\n
        \   to assign the images you created in the Animation Tab.\\\r\n-   Call `drawSprites()`\n
        \   once at the end of your program.\\\r\n    \\\r\n    _Hint: You probably
        want to call `drawSprites()`\n    at the very end of your program so the sprites
        are on top of your background,\n    but for some designs you may want to call
        `drawSprites()` earlier so that\n    your sprites are on top of some shapes
        but below others._"
      CSD U3 Sprites scene text: "# Create Your Scene - Text\\\r\n\n\\\r\nThe\nfinal
        piece of your scene is to add text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add a\n    `text()` command for each separate line of text.\\\r\n-   If
        necessary, use `fill()`\n    and `textSize()` to change the appearance of
        your text.\\\r\n    \\\r\n    _Hint: Most\n    scenes have the text on top
        of everything else, which would require your `text()`\n    commands to be
        the last lines in your program. If, however, you want the text\n    layered
        in with other elements, you might consider changing the order._"
      CSD U3 Sprites scene text_2018: "# Create Your Scene - Text\\\r\n\n\\\r\nThe\nfinal
        piece of your scene is to add text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add a\n    `text()` command for each separate line of text.\\\r\n-   If
        necessary, use `fill()`\n    and `textSize()` to change the appearance of
        your text.\\\r\n    \\\r\n    _Hint: Most\n    scenes have the text on top
        of everything else, which would require your `text()`\n    commands to be
        the last lines in your program. If, however, you want the text\n    layered
        in with other elements, you might consider changing the order._"
      CSD U3 Sprites scene text_2019: "# Create Your Scene - Text\\\r\n\n\\\r\nThe\nfinal
        piece of your scene is to add text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Add a\n    `text()` command for each separate line of text.\\\r\n-   If
        necessary, use `fill()`\n    and `textSize()` to change the appearance of
        your text.\\\r\n    \\\r\n    _Hint: Most\n    scenes have the text on top
        of everything else, which would require your `text()`\n    commands to be
        the last lines in your program. If, however, you want the text\n    layered
        in with other elements, you might consider changing the order._"
      CSD U3 Sprites text: "# Adding Text\\\r\n\n\\\r\nYou can put\ntext anywhere
        you'd like on the screen using `text`. Change the displayed\ntext in the provided
        code, then add a second `text` to write in a different\npart of the screen.\\\r\n\\\r\n_Tip:
        The default text size is pretty small, but\nyou can use the `textSize` block
        to change that. You can also use `fill` to\nchange the color of your text._"
      CSD U3 Sprites text debug: "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\"\nstyle=\"float:
        right; width: 200px; margin-left: 20px;\">\\\r\n\n# Debug\\\r\n\n\\\r\nThis\nscene
        has all the right code, but it's not in the right order. The scene\nshould
        look like the image to the right.  Can you reorder the blocks so that\neach
        part of the scene is drawn in the correct order?"
      CSD U3 Sprites text debug_2018: "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\"\nstyle=\"float:
        right; width: 200px; margin-left: 20px;\">\\\r\n\n# Debug\\\r\n\n\\\r\nThis\nscene
        has all the right code, but it's not in the right order. The scene\nshould
        look like the image to the right.  Can you reorder the blocks so that\neach
        part of the scene is drawn in the correct order?"
      CSD U3 Sprites text debug_2018_2019: "<img src=\"https://images.code.org/a313a455ef7033e840dfb21cb15cbb30-image-1491277088617.png\"\nstyle=\"float:
        right; width: 200px; margin-left: 20px;\">\\\r\n\n# Debug\\\r\n\n\\\r\nThis\nscene
        has all the right code, but it's not in the right order. The scene\nshould
        look like the image to the right.  Can you reorder the blocks so that\neach
        part of the scene is drawn in the correct order?"
      CSD U3 Sprites text_2018: "# Adding Text\\\r\n\n\\\r\nYou can put\ntext anywhere
        you'd like on the screen using `text`. Change the displayed\ntext in the provided
        code, then add a second `text` to write in a different\npart of the screen.\\\r\n\\\r\n_Tip:
        The default text size is pretty small, but\nyou can use the `textSize` block
        to change that. You can also use `fill` to\nchange the color of your text._"
      CSD U3 Sprites text_2019: "# Adding Text\\\r\n\n\\\r\nYou can put\ntext anywhere
        you'd like on the screen using `text`. Change the displayed\ntext in the provided
        code, then add a second `text` to write in a different\npart of the screen.\\\r\n\\\r\n_Tip:
        The default text size is pretty small, but\nyou can use the `textSize` block
        to change that. You can also use `fill` to\nchange the color of your text._"
      CSD U3 Variables Challenge: "# Challenge: Updating Variables\\\r\n\n\\\r\n_Check\nwith
        your teacher before tackling this challenge level._\\\r\n\\\r\nSo far we've\nonly
        ever assigned a value to a variable once, but did you know you can update\na
        variable during a program?  Read through the example program we've provided,\nrun
        it a few times to understand how it works, and then attempt to modify\nthe
        program to draw one of the following images.\\\r\n\\\r\n\\\r\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r"
      CSD U3 Variables Challenge_2018: "# Challenge: Updating Variables\\\r\n\n\\\r\n_Check\nwith
        your teacher before tackling this challenge level._\\\r\n\\\r\nSo far we've\nonly
        ever assigned a value to a variable once, but did you know you can update\na
        variable during a program?  Read through the example program we've provided,\nrun
        it a few times to understand how it works, and then attempt to modify\nthe
        program to draw one of the following images.\\\r\n\\\r\n\\\r\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r"
      CSD U3 Variables Challenge_2019: "# Challenge: Updating Variables\\\r\n\n\\\r\n_Check\nwith
        your teacher before tackling this challenge level._\\\r\n\\\r\nSo far we've\nonly
        ever assigned a value to a variable once, but did you know you can update\na
        variable during a program?  Read through the example program we've provided,\nrun
        it a few times to understand how it works, and then attempt to modify\nthe
        program to draw one of the following images.\\\r\n\\\r\n\\\r\n<img src=\"https://images.code.org/29f4d46d5aa041fb7d27aa2e3c77652e-image-1493161823337.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/629819fe91016ee1b8275c81e41770b5-image-1493161823334.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r\n<img src=\"https://images.code.org/acf7b8223b3a87594e20348306464de7-image-1493161823305.png\"\nstyle=\"width:150px;
        border: 1px solid grey; margin:20px;\">\\\r"
      CSD U3 Variables Draw Challenge: "# Challenge: Draw an\n\nImage\\\r\n\\\r\n_Check
        with your teacher before tackling this challenge level._\\\r\n\\\r\nUsing\nvariables,
        draw an image where many of the items rely on a common variable\nfor size
        or placement. For example, draw a face with variables controlling\nthe size
        and/or placement of both eyes, ears, and nostrils. Once you have\nyour drawing
        completed, try changing the values of your variables to make\nsure that the
        whole image changes together.\\\r"
      CSD U3 Variables Draw Challenge_2018: "# Challenge: Draw an\n\nImage\\\r\n\\\r\n_Check
        with your teacher before tackling this challenge level._\\\r\n\\\r\nUsing\nvariables,
        draw an image where many of the items rely on a common variable\nfor size
        or placement. For example, draw a face with variables controlling\nthe size
        and/or placement of both eyes, ears, and nostrils. Once you have\nyour drawing
        completed, try changing the values of your variables to make\nsure that the
        whole image changes together.\\\r"
      CSD U3 Variables Draw Challenge_2019: "# Challenge: Draw an\n\nImage\\\r\n\\\r\n_Check
        with your teacher before tackling this challenge level._\\\r\n\\\r\nUsing\nvariables,
        draw an image where many of the items rely on a common variable\nfor size
        or placement. For example, draw a face with variables controlling\nthe size
        and/or placement of both eyes, ears, and nostrils. Once you have\nyour drawing
        completed, try changing the values of your variables to make\nsure that the
        whole image changes together.\\\r"
      CSD U3 Variables Draw Poppy: "# Using a Variable Many\n\nTimes\\\r\n\\\r\nThis
        program has only one variable called `petalSize` but it\nuses it 8 different
        times. This makes it easy to quickly make lots of changes\nto how your picture
        is drawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change the number\n    assigned
        to `petalSize` so the red petals touch one another.\\\r\n-   Try to find\n
        \   the size that makes the most sense. Compare your answer with someone around\n
        \   you."
      CSD U3 Variables Draw Poppy_2018: "# Using a Variable Many\n\nTimes\\\r\n\\\r\nThis
        program has only one variable called `petalSize` but it\nuses it 8 different
        times. This makes it easy to quickly make lots of changes\nto how your picture
        is drawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change the number\n    assigned
        to `petalSize` so the red petals touch one another.\\\r\n-   Try to find\n
        \   the size that makes the most sense. Compare your answer with someone around\n
        \   you."
      CSD U3 Variables Draw Poppy_2019: "# Using a Variable Many\n\nTimes\\\r\n\\\r\nThis
        program has only one variable called `petalSize` but it\nuses it 8 different
        times. This makes it easy to quickly make lots of changes\nto how your picture
        is drawn.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change the number\n    assigned
        to `petalSize` so the red petals touch one another.\\\r\n-   Try to find\n
        \   the size that makes the most sense. Compare your answer with someone around\n
        \   you."
      CSD U3 Variables Predict Where X: "# Using Variables\\\r\n\n\\\r\nIn\nthis program,
        the variable `xPosition` is used to store the x-coordinate of\nthe circle.\\\r\n\\\r\n\n#
        Do This\\\r\n\n-   Run the program to see how it works.\\\r\n-   \\*\n    Change
        the number that is stored into the variable ([Show me where](#triggercallout=code_triggered))\n
        \   and run the code again."
      CSD U3 Variables Predict Where X_2018: "# Using Variables\\\r\n\n\\\r\nIn\nthis
        program, the variable `xPosition` is used to store the x-coordinate of\nthe
        circle.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Run the program to see how it works.\\\r\n-
        \  \\*\n    Change the number that is stored into the variable ([Show me where](#triggercallout=code_triggered))\n
        \   and run the code again."
      CSD U3 Variables Predict Where X_2019: "# Using Variables\\\r\n\n\\\r\nIn\nthis
        program, the variable `xPosition` is used to store the x-coordinate of\nthe
        circle.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Run the program to see how it works.\\\r\n-
        \  \\*\n    Change the number that is stored into the variable ([Show me where](#triggercallout=code_triggered))\n
        \   and run the code again."
      CSD U3 Variables change circle size: "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01\nAM.png\"
        style=\"float:right; height:150px\">\\\r\n\\\r\n\n# Debug: Using Variables\\\r\n\n\\\r\nThis\nprogram
        uses the variable `circleSize` to control the width and height of\na circle.
        \ If you make the circle big enough, it will fill up the entire screen,\nas
        in the picture on the right.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change
        the value\n    assigned to `circleSize` so that the circle takes up the entire
        screen."
      CSD U3 Variables change circle size_2018: "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01\nAM.png\"
        style=\"float:right; height:150px\">\\\r\n\\\r\n\n# Debug: Using Variables\\\r\n\n\\\r\nThis\nprogram
        uses the variable `circleSize` to control the width and height of\na circle.
        \ If you make the circle big enough, it will fill up the entire screen,\nas
        in the picture on the right.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change
        the value\n    assigned to `circleSize` so that the circle takes up the entire
        screen."
      CSD U3 Variables change circle size_2019: "<img src=\"https://images.code.org/acc7f5763a9ca1c17647f7dd9711c9f5-image-1490977696189.28.01\nAM.png\"
        style=\"float:right; height:150px\">\\\r\n\\\r\n\n# Debug: Using Variables\\\r\n\n\\\r\nThis\nprogram
        uses the variable `circleSize` to control the width and height of\na circle.
        \ If you make the circle big enough, it will fill up the entire screen,\nas
        in the picture on the right.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Change
        the value\n    assigned to `circleSize` so that the circle takes up the entire
        screen."
      CSD U3 Variables naming rules v2: "<img style=\"float:\nright\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38\nAM.png\">\\\r\n\n#
        Debug: Naming Variables\\\r\n\n\\\r\nThis program has multiple errors\ncaused
        by bad label names.  The errors prevent the program from being viewed\nin
        block mode, so the code is in text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Find the\n    rule each variable label violates.\\\r\n-   **Correct the
        errors by picking new\n    names that follow the rules you learned in the
        last level.**\\\r\n-   If your\n    program works it should draw the image
        on the right.\\\r\n    \\\r\n    <summary><em>Hint:\n    Click the arrow for
        a quick review of the rules.</em><details><ul>\\\r\n    <li>Labels\n    can't
        have spaces.</li>\\\r\n    <li>Labels can't start with a number.</li>\\\r\n
        \   <li>Capitalization\n    and spelling must be exactly the same.</li>\\\r\n
        \   </ul></details></summary>"
      CSD U3 Variables naming rules v2_2018: "<img style=\"float:\nright\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38\nAM.png\">\\\r\n\n#
        Debug: Naming Variables\\\r\n\n\\\r\nThis program has multiple errors\ncaused
        by bad label names.  The errors prevent the program from being viewed\nin
        block mode, so the code is in text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Find the\n    rule each variable label violates.\\\r\n-   **Correct the
        errors by picking new\n    names that follow the rules you learned in the
        last level.**\\\r\n-   If your\n    program works it should draw the image
        on the right.\\\r\n    \\\r\n    <summary><em>Hint:\n    Click the arrow for
        a quick review of the rules.</em><details><ul>\\\r\n    <li>Labels\n    can't
        have spaces.</li>\\\r\n    <li>Labels can't start with a number.</li>\\\r\n
        \   <li>Capitalization\n    and spelling must be exactly the same.</li>\\\r\n
        \   </ul></details></summary>"
      CSD U3 Variables naming rules v2_2018_2019: "<img style=\"float:\nright\" src=\"https://images.code.org/f4b306422763c84bb924f4f7d3a6dca6-image-1492798058864.06.38\nAM.png\">\\\r\n\n#
        Debug: Naming Variables\\\r\n\n\\\r\nThis program has multiple errors\ncaused
        by bad label names.  The errors prevent the program from being viewed\nin
        block mode, so the code is in text.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Find the\n    rule each variable label violates.\\\r\n-   **Correct the
        errors by picking new\n    names that follow the rules you learned in the
        last level.**\\\r\n-   If your\n    program works it should draw the image
        on the right.\\\r\n    \\\r\n    <summary><em>Hint:\n    Click the arrow for
        a quick review of the rules.</em><details><ul>\\\r\n    <li>Labels\n    can't
        have spaces.</li>\\\r\n    <li>Labels can't start with a number.</li>\\\r\n
        \   <li>Capitalization\n    and spelling must be exactly the same.</li>\\\r\n
        \   </ul></details></summary>"
      CSD U3 Variables random with assignment: "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n\n#
        Debug: Variables and Random Numbers\\\r\n\n\\\r\nVariables\ncan be assigned
        a random number too. This lets you save a single random value\nso that you
        can use it as many times as you want in your program.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\n`eyeSize` is assigned a random number. Unfortunately only
        one\nof the eyes is currently using it.\\\r\n\\\r\n\n-   **Run the program**
        to see how\n    it works.\\\r\n-   **Change the program** so that both eyes
        are always the same\n    random size. Hint: you'll only need to make changes
        to one line of code."
      CSD U3 Variables random with assignment_2018: "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n\n#
        Debug: Variables and Random Numbers\\\r\n\n\\\r\nVariables\ncan be assigned
        a random number too. This lets you save a single random value\nso that you
        can use it as many times as you want in your program.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\n`eyeSize` is assigned a random number. Unfortunately only
        one\nof the eyes is currently using it.\\\r\n\\\r\n\n-   **Run the program**
        to see how\n    it works.\\\r\n-   **Change the program** so that both eyes
        are always the same\n    random size. Hint: you'll only need to make changes
        to one line of code."
      CSD U3 Variables random with assignment_2019: "<img src=\"https://images.code.org/ba9592e887f52c1a538a0517560cdacf-image-1493913633878.gif\"\nstyle=\"float:right;height:150px\">\\\r\n\\\r\n\n#
        Debug: Variables and Random Numbers\\\r\n\n\\\r\nVariables\ncan be assigned
        a random number too. This lets you save a single random value\nso that you
        can use it as many times as you want in your program.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\n`eyeSize` is assigned a random number. Unfortunately only
        one\nof the eyes is currently using it.\\\r\n\\\r\n\n-   **Run the program**
        to see how\n    it works.\\\r\n-   **Change the program** so that both eyes
        are always the same\n    random size. Hint: you'll only need to make changes
        to one line of code."
      CSD U3 Watcher Debug: "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Debug: Watching the Counter\n\nPattern\\\r\n\\\r\nLet's
        practice using watchers to debug your code. This program\nshould move the
        motorcycle from the bottom left to the top right, like the\nimage to the right.
        Unfortunately the motorcycle moves off screen too quickly\nto see what's going
        wrong.\\\r\n\\\r\nUsing the provided watchers for `cycle.x`\nand `cycle.y`,
        figure out which one is moving in the wrong direction and fix\nthe program."
      CSD U3 Watcher Debug_2018: "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Debug: Watching the Counter\n\nPattern\\\r\n\\\r\nLet's
        practice using watchers to debug your code. This program\nshould move the
        motorcycle from the bottom left to the top right, like the\nimage to the right.
        Unfortunately the motorcycle moves off screen too quickly\nto see what's going
        wrong.\\\r\n\\\r\nUsing the provided watchers for `cycle.x`\nand `cycle.y`,
        figure out which one is moving in the wrong direction and fix\nthe program."
      CSD U3 Watcher Debug_2019: "<img src=\"https://images.code.org/20cc981b4b4f99b2ff96415e19af7600-image-1492034149715.gif\"\nstyle=\"float:
        right; margin-left: 20px;\">\\\r\n\\\r\n\n# Debug: Watching the Counter\n\nPattern\\\r\n\\\r\nLet's
        practice using watchers to debug your code. This program\nshould move the
        motorcycle from the bottom left to the top right, like the\nimage to the right.
        Unfortunately the motorcycle moves off screen too quickly\nto see what's going
        wrong.\\\r\n\\\r\nUsing the provided watchers for `cycle.x`\nand `cycle.y`,
        figure out which one is moving in the wrong direction and fix\nthe program."
      CSD U3 challenge face: "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\n# Challenge:\n\nFace\\\r\n\\\r\n_Check
        with your teacher before starting any of the challenges._\\\r\n\\\r\nWrite\na
        program that uses `rect`, `ellipse`, and `fill` to create the face on the\nright.
        The colors used are \"lightblue\", \"red\", and \"lightgreen\".\\\r\nOnce\nyou've
        finished, add your own personal touches to the image.\\\r\n\\\r\n\\\r"
      CSD U3 challenge face_2018: "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\n# Challenge:\n\nFace\\\r\n\\\r\n_Check
        with your teacher before starting any of the challenges._\\\r\n\\\r\nWrite\na
        program that uses `rect`, `ellipse`, and `fill` to create the face on the\nright.
        The colors used are \"lightblue\", \"red\", and \"lightgreen\".\\\r\nOnce\nyou've
        finished, add your own personal touches to the image.\\\r\n\\\r\n\\\r"
      CSD U3 challenge face_2019: "<img src=\"https://images.code.org/aa5aedbcfec082c2886d88b565e5fc09-image-1495732712591.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\n# Challenge:\n\nFace\\\r\n\\\r\n_Check
        with your teacher before starting any of the challenges._\\\r\n\\\r\nWrite\na
        program that uses `rect`, `ellipse`, and `fill` to create the face on the\nright.
        The colors used are \"lightblue\", \"red\", and \"lightgreen\".\\\r\nOnce\nyou've
        finished, add your own personal touches to the image.\\\r\n\\\r\n\\\r"
      CSD U3 challenge new shape: "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\\\r\n\n# \n\nChallenge:
        Shape of Shapes\\\r\n\\\r\n_Check with your teacher before starting\nany of
        the challenges._\\\r\n\\\r\nUsing only the `rect` and `ellipse` commands,\ncan
        you draw a new shape, such as this triangle made out of circles?"
      CSD U3 challenge new shape_2018: "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\\\r\n\n# \n\nChallenge:
        Shape of Shapes\\\r\n\\\r\n_Check with your teacher before starting\nany of
        the challenges._\\\r\n\\\r\nUsing only the `rect` and `ellipse` commands,\ncan
        you draw a new shape, such as this triangle made out of circles?"
      CSD U3 challenge new shape_2019: "<img src=\"https://images.code.org/cc725698ade5282931002db3bf762cbc-image-1495733456927.png\"\nstyle=\"float:
        right; max-width: 200px; border: 1px solid grey\">\\\r\n\\\r\n\n# \n\nChallenge:
        Shape of Shapes\\\r\n\\\r\n_Check with your teacher before starting\nany of
        the challenges._\\\r\n\\\r\nUsing only the `rect` and `ellipse` commands,\ncan
        you draw a new shape, such as this triangle made out of circles?"
      CSD U3 dancing alien: "# Sprites in the Draw Loop\\\r\n\n\\\r\nBy\nchanging
        sprite properties in the draw loop, you can animate your characters.\n\\\r\n\\\r\nThis
        animation has also been slowed down.  At the beginning of the\nprogram the
        `World.frameRate` block has been used to set the frame rate to\n\n10. Usually
        the frame rate is 30. Feel free to explore different frame rates.\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n11. Run the code to see how it works.\\\r\n12. Discuss
        with your partner\n    why some code is inside the draw loop and some code
        is outside.\\\r\n13. Try changing\n    the frame rate and running the code
        again."
      CSD U3 dancing alien_2018: "# Sprites in the Draw Loop\\\r\n\n\\\r\nBy\nchanging
        sprite properties in the draw loop, you can animate your characters.\n\\\r\n\\\r\nThis
        animation has also been slowed down.  At the beginning of the\nprogram the
        `World.frameRate` block has been used to set the frame rate to\n\n10. Usually
        the frame rate is 30. Feel free to explore different frame rates.\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n11. Run the code to see how it works.\\\r\n12. Discuss
        with your partner\n    why some code is inside the draw loop and some code
        is outside.\\\r\n13. Try changing\n    the frame rate and running the code
        again."
      CSD U3 dancing alien_2019: "# Sprites in the Draw Loop\\\r\n\n\\\r\nBy\nchanging
        sprite properties in the draw loop, you can animate your characters.\n\\\r\n\\\r\nThis
        animation has also been slowed down.  At the beginning of the\nprogram the
        `World.frameRate` block has been used to set the frame rate to\n\n10. Usually
        the frame rate is 30. Feel free to explore different frame rates.\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n11. Run the code to see how it works.\\\r\n12. Discuss
        with your partner\n    why some code is inside the draw loop and some code
        is outside.\\\r\n13. Try changing\n    the frame rate and running the code
        again."
      CSD U3 debug: "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50\nAM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# Debugging\\\r\n\n\\\r\nOften,\ncode
        doesn't work the first time it runs, and programmers have to debug it.  The\ncode
        below is supposed to make the picture on the right, but the programmer\ngot
        confused about which order the code should be in, as well as how to put\na
        square in the right place on the screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code in the workspace.\\\r\n-   Change the code so it
        makes the picture\n    on the right.\\\r\n-   (You'll need to move one line
        of code AND change the\n    coordinates of the square.)"
      CSD U3 debug_2018: "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50\nAM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# Debugging\\\r\n\n\\\r\nOften,\ncode
        doesn't work the first time it runs, and programmers have to debug it.  The\ncode
        below is supposed to make the picture on the right, but the programmer\ngot
        confused about which order the code should be in, as well as how to put\na
        square in the right place on the screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code in the workspace.\\\r\n-   Change the code so it
        makes the picture\n    on the right.\\\r\n-   (You'll need to move one line
        of code AND change the\n    coordinates of the square.)"
      CSD U3 debug_2019: "<img src=\"https://images.code.org/249f124a9bbd3da7d6327a7be8ab73c9-image-1493138569984.41.50\nAM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# Debugging\\\r\n\n\\\r\nOften,\ncode
        doesn't work the first time it runs, and programmers have to debug it.  The\ncode
        below is supposed to make the picture on the right, but the programmer\ngot
        confused about which order the code should be in, as well as how to put\na
        square in the right place on the screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the code in the workspace.\\\r\n-   Change the code so it
        makes the picture\n    on the right.\\\r\n-   (You'll need to move one line
        of code AND change the\n    coordinates of the square.)"
      CSD U3 ellipse: "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44\nPM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# ellipse\\\r\n\n\\\r\nYou
        can\nuse `ellipse` to make a circle.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look at the code\n    that makes the ellipse.\\\r\n-   Add a new ellipse
        of a different color.\\\r"
      CSD U3 ellipse_2018: "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44\nPM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# ellipse\\\r\n\n\\\r\nYou
        can\nuse `ellipse` to make a circle.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look at the code\n    that makes the ellipse.\\\r\n-   Add a new ellipse
        of a different color.\\\r"
      CSD U3 ellipse_2019: "<img src=\"https://images.code.org/2ef29be10261f6a2c5df8f214d524f4d-image-1493060602794.02.44\nPM.png\"
        style=\"float:right;width:150px;\">\\\r\n\\\r\n\n# ellipse\\\r\n\n\\\r\nYou
        can\nuse `ellipse` to make a circle.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look at the code\n    that makes the ellipse.\\\r\n-   Add a new ellipse
        of a different color.\\\r"
      CSD U3 fill: "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19\nPM.png\"
        style=\"float:right;width:200px;\">\\\r\n\n# fill(color)\\\r\n\n\\\r\nYou
        can\nalso make your rectangles different colors with `fill`. It will set the
        color\nfor every shape that comes after it in the code.\\\r\n\\\r\n\n# Do
        This\\\r\n\n\\\r\n\\*\nLook at the code that sets the color. ( [Show me where](#triggercallout=fill)\n)\\\r\n\n-
        \  Change the color from blue to yellow.\\\r\n-   Add a new square by dragging\n
        \   a `rect` block into the code area below the fill command ( [Show me where](#triggercallout=rect_block)\n
        \   ).  The new square can go any location on the screen you like.\\\r"
      CSD U3 fill_2018: "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19\nPM.png\"
        style=\"float:right;width:200px;\">\\\r\n\n# fill(color)\\\r\n\n\\\r\nYou
        can\nalso make your rectangles different colors with `fill`. It will set the
        color\nfor every shape that comes after it in the code.\\\r\n\\\r\n\n# Do
        This\\\r\n\n\\\r\n\\*\nLook at the code that sets the color. ( [Show me where](#triggercallout=fill)\n)\\\r\n\n-
        \  Change the color from blue to yellow.\\\r\n-   Add a new square by dragging\n
        \   a `rect` block into the code area below the fill command ( [Show me where](#triggercallout=rect_block)\n
        \   ).  The new square can go any location on the screen you like.\\\r"
      CSD U3 fill_2019: "<img src=\"https://images.code.org/c91390d63e52a3349c48f7b6b0057258-image-1493060802897.05.19\nPM.png\"
        style=\"float:right;width:200px;\">\\\r\n\n# fill(color)\\\r\n\n\\\r\nYou
        can\nalso make your rectangles different colors with `fill`. It will set the
        color\nfor every shape that comes after it in the code.\\\r\n\\\r\n\n# Do
        This\\\r\n\n\\\r\n\\*\nLook at the code that sets the color. ( [Show me where](#triggercallout=fill)\n)\\\r\n\n-
        \  Change the color from blue to yellow.\\\r\n-   Add a new square by dragging\n
        \   a `rect` block into the code area below the fill command ( [Show me where](#triggercallout=rect_block)\n
        \   ).  The new square can go any location on the screen you like.\\\r"
      CSD U3 keydown conditional: "# Changing Sprites\\\r\n\n\\\r\nYou\nsaw on the
        last level that `keyDown` returns `true` while you are holding\na key down
        and `false` when the key is not pressed down.   The input for the\n`keyDown`
        command is the name of key you want to check in quotes. Some examples\nare
        \"x\", \"up\" and \"space\".\\\r\n\\\r\nWe can use `keyDown` as an input to\nan
        `if` statement to change our animations based on key presses!\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\n-   Run the code and try pressing the up and down arrows.\\\r\n-
        \  Look\n    inside the `if` statement to see how the code works.\\\r\n-   Add
        a block inside\n    the third `if` statement to change the animation to a
        different animal.\\\r\n    \\\r\n    _Hint:\n    you can use the rabbit that's
        already in the Animations tab, or add a new\n    animation._"
      CSD U3 picture: "# Challenge: Draw an Image\\\r\n\n\\\r\n_Check\nwith your teacher
        before starting any of the challenges._\\\r\n\\\r\nIn the previous\nlesson
        you and your partner created several interesting images. See if you\ncan recreate
        one of them using code."
      CSD U3 picture_2018: "# Challenge: Draw an Image\\\r\n\n\\\r\n_Check\nwith your
        teacher before starting any of the challenges._\\\r\n\\\r\nIn the previous\nlesson
        you and your partner created several interesting images. See if you\ncan recreate
        one of them using code."
      CSD U3 picture_2019: "# Challenge: Draw an Image\\\r\n\n\\\r\n_Check\nwith your
        teacher before starting any of the challenges._\\\r\n\\\r\nIn the previous\nlesson
        you and your partner created several interesting images. See if you\ncan recreate
        one of them using code."
      CSD U3 rect: "# Explore Game Lab\\\r\n\n\\\r\nWelcome to Game\nLab, where you
        can create interactive animations and games!   \\\r\n\\\r\nYou've\nalready
        practiced the basics of putting shapes on a grid.  In Game Lab, you'll\ndo
        the same with the display area on the left.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the line of code in the workspace below these instructions
        ( [Show me where](#triggercallout=block_trigger)\n    ) and discuss with your
        partner where you think the shape will be drawn on\n    the grid.\\\r\n-   Click
        <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20\n
        \   PM.png\" width=100> to run the program and see what happens. ( [Show me
        where](#triggercallout=run_trigger)\n    )\\\r\n-   Change the numbers inside
        the block, then try running the program again.\\\r\n-   \\*\n    Try to place
        the rectangle near the bottom right of the screen."
      CSD U3 rect_2018: "# Explore Game Lab\\\r\n\n\\\r\nWelcome to Game\nLab, where
        you can create interactive animations and games!   \\\r\n\\\r\nYou've\nalready
        practiced the basics of putting shapes on a grid.  In Game Lab, you'll\ndo
        the same with the display area on the left.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the line of code in the workspace below these instructions
        ( [Show me where](#triggercallout=block_trigger)\n    ) and discuss with your
        partner where you think the shape will be drawn on\n    the grid.\\\r\n-   Click
        <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20\n
        \   PM.png\" width=100> to run the program and see what happens. ( [Show me
        where](#triggercallout=run_trigger)\n    )\\\r\n-   Change the numbers inside
        the block, then try running the program again.\\\r\n-   \\*\n    Try to place
        the rectangle near the bottom right of the screen."
      CSD U3 rect_2019: "# Explore Game Lab\\\r\n\n\\\r\nWelcome to Game\nLab, where
        you can create interactive animations and games!   \\\r\n\\\r\nYou've\nalready
        practiced the basics of putting shapes on a grid.  In Game Lab, you'll\ndo
        the same with the display area on the left.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-
        \  Look\n    at the line of code in the workspace below these instructions
        ( [Show me where](#triggercallout=block_trigger)\n    ) and discuss with your
        partner where you think the shape will be drawn on\n    the grid.\\\r\n-   Click
        <img src=\"https://images.code.org/9e963203e9cafd558b760730d13537ca-image-1461783998310.06.20\n
        \   PM.png\" width=100> to run the program and see what happens. ( [Show me
        where](#triggercallout=run_trigger)\n    )\\\r\n-   Change the numbers inside
        the block, then try running the program again.\\\r\n-   \\*\n    Try to place
        the rectangle near the bottom right of the screen."
      CSD U3 sequence: "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05\nPM.png\"
        style=\"float:right\">\\\r\n\n# Order Matters\\\r\n\n\\\r\nIn Game Lab, it\nmatters
        what order your code is in.  New shapes are drawn on top of the ones\nthat
        came before, covering up the shapes that are drawn first.  You can see\nthe
        difference when you use more than one color in your code.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Look at the code that draws the two rectangles.  The first is\n    drawn
        red, and the second is drawn blue.\\\r\n-   Change the red rectangle's\n    color
        to green.\\\r\n-   Change the order of the code so the green rectangle appears\n
        \   on top."
      CSD U3 sequence_2018: "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05\nPM.png\"
        style=\"float:right\">\\\r\n\n# Order Matters\\\r\n\n\\\r\nIn Game Lab, it\nmatters
        what order your code is in.  New shapes are drawn on top of the ones\nthat
        came before, covering up the shapes that are drawn first.  You can see\nthe
        difference when you use more than one color in your code.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Look at the code that draws the two rectangles.  The first is\n    drawn
        red, and the second is drawn blue.\\\r\n-   Change the red rectangle's\n    color
        to green.\\\r\n-   Change the order of the code so the green rectangle appears\n
        \   on top."
      CSD U3 sequence_2019: "<img src=\"https://images.code.org/30d68fb30db5b61187f104f46292e052-image-1493060980724.08.05\nPM.png\"
        style=\"float:right\">\\\r\n\n# Order Matters\\\r\n\n\\\r\nIn Game Lab, it\nmatters
        what order your code is in.  New shapes are drawn on top of the ones\nthat
        came before, covering up the shapes that are drawn first.  You can see\nthe
        difference when you use more than one color in your code.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Look at the code that draws the two rectangles.  The first is\n    drawn
        red, and the second is drawn blue.\\\r\n-   Change the red rectangle's\n    color
        to green.\\\r\n-   Change the order of the code so the green rectangle appears\n
        \   on top."
      CSD U5 Pizza: "# Pizza Party\\\r\n\n\\\r\nThe pizza party data\nhas been put
        into an app for you, and the answers from another class have\nbeen added.
        \ Because this is an app, we can automate the creation of the bar\nchart from
        the given data.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click \"Run\" to see the\n
        \   list of answers that the classes have given.\\\r\n-   Discuss with a partner
        what\n    you think the chart of this data will look like.\\\r\n-   Click
        \"Show Chart\"\n    to see for yourself.\\\r\n    \\\r\n    # Spreadsheet
        Version\\\r\n    \\\r\n    The pizza party data\n    has also been put into
        a spreadsheet for you, if you would like to use it\n    instead.  To use the
        spreadsheet, you'll need to make your own copy of it.\\\r\n    \\\r\n-   \\*\n
        \   This link will make you your own copy of the \"Pizza Topping Choices\"
        data:\n    [Pizza Topping Choices](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/copy)\\\r\n-
        \  \\*\n    You can also download a CSV version of the file [here](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/export?format=csv)."
      CSD U5 Pizza 2: "# Pizza Party\\\r\n\n\\\r\nWhen people work\nwith data, they
        know to leave off answers that don't make sense, and that\nsome answers, such
        as \"peppers\", \"pepppers\" and \"green peppers\", actually\nmeant the same
        thing. Computers don't know how to do this, so we have to\nclean the data
        before the computer is able to use it.\\\r\n\\\r\nThis version\nof the app
        has a second column for data to be cleaned.\\\r\n\\\r\n\n## Do this\\\r\n\n\\*\nClick
        \"Run\" to see the new list of answers to be cleaned.\\\r\n\n-   Click on\n
        \   each answer that needs to be cleaned and correct it so that the computer
        will\n    chart it properly. (You may want to delete some answers entirely.)\\\r\n-
        \  When\n    you are finished, click \"Show Chart\" to see the new chart of
        cleaned answers."
      CSD U5 Pizza 2_2018: "# Pizza Party\\\r\n\n\\\r\nWhen people work\nwith data,
        they know to leave off answers that don't make sense, and that\nsome answers,
        such as \"peppers\", \"pepppers\" and \"green peppers\", actually\nmeant the
        same thing. Computers don't know how to do this, so we have to\nclean the
        data before the computer is able to use it.\\\r\n\\\r\nThis version\nof the
        app has a second column for data to be cleaned.\\\r\n\\\r\n\n## Do this\\\r\n\n\\*\nClick
        \"Run\" to see the new list of answers to be cleaned.\\\r\n\n-   Click on\n
        \   each answer that needs to be cleaned and correct it so that the computer
        will\n    chart it properly. (You may want to delete some answers entirely.)\\\r\n-
        \  When\n    you are finished, click \"Show Chart\" to see the new chart of
        cleaned answers."
      CSD U5 Pizza 2_2019: "# Pizza Party\\\r\n\n\\\r\nWhen people work\nwith data,
        they know to leave off answers that don't make sense, and that\nsome answers,
        such as \"peppers\", \"pepppers\" and \"green peppers\", actually\nmeant the
        same thing. Computers don't know how to do this, so we have to\nclean the
        data before the computer is able to use it.\\\r\n\\\r\nThis version\nof the
        app has a second column for data to be cleaned.\\\r\n\\\r\n\n## Do this\\\r\n\n\\*\nClick
        \"Run\" to see the new list of answers to be cleaned.\\\r\n\n-   Click on\n
        \   each answer that needs to be cleaned and correct it so that the computer
        will\n    chart it properly. (You may want to delete some answers entirely.)\\\r\n-
        \  When\n    you are finished, click \"Show Chart\" to see the new chart of
        cleaned answers."
      CSD U5 Pizza_2018: "# Pizza Party\\\r\n\n\\\r\nThe pizza party data\nhas been
        put into an app for you, and the answers from another class have\nbeen added.
        \ Because this is an app, we can automate the creation of the bar\nchart from
        the given data.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click \"Run\" to see the\n
        \   list of answers that the classes have given.\\\r\n-   Discuss with a partner
        what\n    you think the chart of this data will look like.\\\r\n-   Click
        \"Show Chart\"\n    to see for yourself.\\\r\n    \\\r\n    # Spreadsheet
        Version\\\r\n    \\\r\n    The pizza party data\n    has also been put into
        a spreadsheet for you, if you would like to use it\n    instead.  To use the
        spreadsheet, you'll need to make your own copy of it.\\\r\n    \\\r\n-   \\*\n
        \   This link will make you your own copy of the \"Pizza Topping Choices\"
        data:\n    [Pizza Topping Choices](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/copy)\\\r\n-
        \  \\*\n    You can also download a CSV version of the file [here](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/export?format=csv)."
      CSD U5 Pizza_2019: "# Pizza Party\\\r\n\n\\\r\nThe pizza party data\nhas been
        put into an app for you, and the answers from another class have\nbeen added.
        \ Because this is an app, we can automate the creation of the bar\nchart from
        the given data.\\\r\n\\\r\n\n# Do This\\\r\n\n-   Click \"Run\" to see the\n
        \   list of answers that the classes have given.\\\r\n-   Discuss with a partner
        what\n    you think the chart of this data will look like.\\\r\n-   Click
        \"Show Chart\"\n    to see for yourself.\\\r\n    \\\r\n    # Spreadsheet
        Version\\\r\n    \\\r\n    The pizza party data\n    has also been put into
        a spreadsheet for you, if you would like to use it\n    instead.  To use the
        spreadsheet, you'll need to make your own copy of it.\\\r\n    \\\r\n-   \\*\n
        \   This link will make you your own copy of the \"Pizza Topping Choices\"
        data:\n    [Pizza Topping Choices](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/copy)\\\r\n-
        \  \\*\n    You can also download a CSV version of the file [here](https://docs.google.com/spreadsheets/d/1q1vdgmIlGgxiqJs_VnqHvko18UD6XvRXrnY3JSU97NQ/export?format=csv)."
      CSD U5 binary 1: "# 5-Bit Number\\\r\n\n\\\r\nWhen you only\nhad four bits,
        the highest number that you could make was fifteen.  Now you'll\nhave a chance
        to work with more bits to make higher numbers.\\\r\n\\\r\nIn this\nactivity,
        the dots are replaced with numbers, but you still add up everything\nthat's
        showing to see what number the binary code stands for.  The left-most\nbit
        doesn't have a number yet, so you'll have to give it one.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Click on the bits to turn them on and off, and see the different\n    numbers
        you can make.\\\r\n-   With your partner, discuss the pattern in the numbers.
        \ Decide\n    what number you think should go in the left most box.\\\r\n-
        \  Click \"Edit\"\n    to change the value of the left most bit.\\\r\n-   Once
        you've decided on the\n    value, try to make the following numbers: 16, 27,
        31"
      CSD U5 binary 1_2018: "# 5-Bit Number\\\r\n\n\\\r\nWhen you only\nhad four bits,
        the highest number that you could make was fifteen.  Now you'll\nhave a chance
        to work with more bits to make higher numbers.\\\r\n\\\r\nIn this\nactivity,
        the dots are replaced with numbers, but you still add up everything\nthat's
        showing to see what number the binary code stands for.  The left-most\nbit
        doesn't have a number yet, so you'll have to give it one.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Click on the bits to turn them on and off, and see the different\n    numbers
        you can make.\\\r\n-   With your partner, discuss the pattern in the numbers.
        \ Decide\n    what number you think should go in the left most box.\\\r\n-
        \  Click \"Edit\"\n    to change the value of the left most bit.\\\r\n-   Once
        you've decided on the\n    value, try to make the following numbers: 16, 27,
        31"
      CSD U5 binary 1_2019: "# 5-Bit Number\\\r\n\n\\\r\nWhen you only\nhad four bits,
        the highest number that you could make was fifteen.  Now you'll\nhave a chance
        to work with more bits to make higher numbers.\\\r\n\\\r\nIn this\nactivity,
        the dots are replaced with numbers, but you still add up everything\nthat's
        showing to see what number the binary code stands for.  The left-most\nbit
        doesn't have a number yet, so you'll have to give it one.\\\r\n\\\r\n\n# Do\n\nThis\\\r\n\\\r\n\n-
        \  Click on the bits to turn them on and off, and see the different\n    numbers
        you can make.\\\r\n-   With your partner, discuss the pattern in the numbers.
        \ Decide\n    what number you think should go in the left most box.\\\r\n-
        \  Click \"Edit\"\n    to change the value of the left most bit.\\\r\n-   Once
        you've decided on the\n    value, try to make the following numbers: 16, 27,
        31"
      CSD U5 binary 2: "# 6-Bit Number\\\r\n\n\\\r\nThis widget helps\nyou to calculate
        6-bit binary numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   With your\n
        \   partner, answer the following questions:\\\r\n    1.  What's the biggest
        number\n        you can make with this widget?\\\r\n    2.  The record for
        most skips by a dog\n        and person in one minute is 59.  How would you
        encode 59 in binary?"
      CSD U5 binary 2_2018: "# 6-Bit Number\\\r\n\n\\\r\nThis widget helps\nyou to
        calculate 6-bit binary numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   With
        your\n    partner, answer the following questions:\\\r\n    1.  What's the
        biggest number\n        you can make with this widget?\\\r\n    2.  The record
        for most skips by a dog\n        and person in one minute is 59.  How would
        you encode 59 in binary?"
      CSD U5 binary 2_2019: "# 6-Bit Number\\\r\n\n\\\r\nThis widget helps\nyou to
        calculate 6-bit binary numbers.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   With
        your\n    partner, answer the following questions:\\\r\n    1.  What's the
        biggest number\n        you can make with this widget?\\\r\n    2.  The record
        for most skips by a dog\n        and person in one minute is 59.  How would
        you encode 59 in binary?"
      CSD U5 binary 4-new: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na widget
        that can calculate numbers of 4, 5, or 6 bits.  You can use it to\nfind the
        two world records encoded in the binary string below.\\\r\n\\\r\n![](<https://images.code.org/13b0d3307e688575b53e3e6bc86fb739-image-1505426509385.01.06\nPM.png>)\\\r\n\\\r\n\n1.
        \ Most number of people lifted and thrown in two minutes.\n    (4 bits)\\\r\n2.
        \ Most canned drinks opened by a parrot in one minute. (6 bits)\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n3.  Decode the two numbers from the binary string."
      CSD U5 binary 4-new_2018: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers of 4, 5, or 6 bits.  You can use it to\nfind
        the two world records encoded in the binary string below.\\\r\n\\\r\n![](<https://images.code.org/13b0d3307e688575b53e3e6bc86fb739-image-1505426509385.01.06\nPM.png>)\\\r\n\\\r\n\n1.
        \ Most number of people lifted and thrown in two minutes.\n    (4 bits)\\\r\n2.
        \ Most canned drinks opened by a parrot in one minute. (6 bits)\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n3.  Decode the two numbers from the binary string."
      CSD U5 binary 4-new_2019: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers of 4, 5, or 6 bits.  You can use it to\nfind
        the two world records encoded in the binary string below.\\\r\n\\\r\n![](<https://images.code.org/13b0d3307e688575b53e3e6bc86fb739-image-1505426509385.01.06\nPM.png>)\\\r\n\\\r\n\n1.
        \ Most number of people lifted and thrown in two minutes.\n    (4 bits)\\\r\n2.
        \ Most canned drinks opened by a parrot in one minute. (6 bits)\\\r\n    \\\r\n
        \   # \n    Do This\\\r\n3.  Decode the two numbers from the binary string."
      CSD U5 binary 5-new: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na widget
        that can calculate numbers up to to eight bits. (If you have a shorter\nnumber,
        you can just leave the extra bits at the left off.) You can use it\nto find
        the values of the two world records below.\\\r\n\\\r\n![](<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14\nPM.png>)\\\r\n\\\r\n\n1.
        \ Longest tail on a dog (in inches) (5 bits)\\\r\n2.  Most spoons\n    balanced
        on someone's face (5 bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Decode the
        two\n    numbers from a the binary string."
      CSD U5 binary 5-new_2018: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers up to to eight bits. (If you have a shorter\nnumber,
        you can just leave the extra bits at the left off.) You can use it\nto find
        the values of the two world records below.\\\r\n\\\r\n![](<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14\nPM.png>)\\\r\n\\\r\n\n1.
        \ Longest tail on a dog (in inches) (5 bits)\\\r\n2.  Most spoons\n    balanced
        on someone's face (5 bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Decode the
        two\n    numbers from a the binary string."
      CSD U5 binary 5-new_2019: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        widget that can calculate numbers up to to eight bits. (If you have a shorter\nnumber,
        you can just leave the extra bits at the left off.) You can use it\nto find
        the values of the two world records below.\\\r\n\\\r\n![](<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14\nPM.png>)\\\r\n\\\r\n\n1.
        \ Longest tail on a dog (in inches) (5 bits)\\\r\n2.  Most spoons\n    balanced
        on someone's face (5 bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Decode the
        two\n    numbers from a the binary string."
      CSD U5 binary 6-new: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na new
        bit string.  This time, you don't know the bit length of the two numbers.
        \ Try\nto decode the numbers without knowing the bit length.\\\r\n\\\r\n![](<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46\nPM.png>)\\\r\n\\\r\n\n1.
        \ Largest wind chime, in feet (? bits)\\\r\n2.  Furthest arrow\n    shot with
        someone's feet (in feet) (? bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Try
        to\n    decode the two numbers from the binary string.\\\r\n4.  Discuss with
        your partner\n    why you cannot know for sure whether your answer is correct."
      CSD U5 binary 6-new_2018: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        new bit string.  This time, you don't know the bit length of the two numbers.
        \ Try\nto decode the numbers without knowing the bit length.\\\r\n\\\r\n![](<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46\nPM.png>)\\\r\n\\\r\n\n1.
        \ Largest wind chime, in feet (? bits)\\\r\n2.  Furthest arrow\n    shot with
        someone's feet (in feet) (? bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Try
        to\n    decode the two numbers from the binary string.\\\r\n4.  Discuss with
        your partner\n    why you cannot know for sure whether your answer is correct."
      CSD U5 binary 6-new_2019: "# Decoding multiple numbers\\\r\n\n\\\r\nHere's\na
        new bit string.  This time, you don't know the bit length of the two numbers.
        \ Try\nto decode the numbers without knowing the bit length.\\\r\n\\\r\n![](<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46\nPM.png>)\\\r\n\\\r\n\n1.
        \ Largest wind chime, in feet (? bits)\\\r\n2.  Furthest arrow\n    shot with
        someone's feet (in feet) (? bits)\\\r\n    \\\r\n    # Do This\\\r\n3.  Try
        to\n    decode the two numbers from the binary string.\\\r\n4.  Discuss with
        your partner\n    why you cannot know for sure whether your answer is correct."
      CSD U5 binary 7-new: "# Bit Length\\\r\n\n\\\r\nIf you don't\nknow how many
        bits long each number is, you won't be able to decode a string\nof numbers.\\\r\n\\\r\nFor
        example, the following binary string could be decoded\nmany different ways.\\\r\n\\\r\n![](<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46\nPM.png>)\\\r\n\\\r\nIf
        you split the string like this, the string reads 12, 84.\\\r\n\\\r\n![](<https://images.code.org/c8586b93427166ae6ecfdb8b1ff66bdd-image-1505427228630.13.01\nPM.png>)
        ![](<https://images.code.org/7d9814dc4bae8512dfaebbe459c29c9b-image-1505427230882.13.08\nPM.png>)\\\r\n\\\r\n\\\r\nIf
        you split it like this, the string reads 42, 20.\\\r\n\\\r\n![](<https://images.code.org/2e62b4a71b98b68bdf04713c508e4cb2-image-1505427233001.13.13\nPM.png>)
        ![](<https://images.code.org/10a316c870b575db4b30a687815bf481-image-1505427235482.13.19\nPM.png>)\\\r\n\\\r\nTo
        solve this problem, people agree on a fixed length for every\nnumber.  The
        following string uses the same two numbers, but each number takes\nup exactly
        eight bits, no matter how many bits it actually needs.\\\r\n\\\r\n![](<https://images.code.org/257cb728fde57421e58ef31164be5a51-image-1505427467235.13.26\nPM.png>)\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Use the binary widget to decode the string\n    that
        uses eight bit numbers.\\\r\n-   Check you answer with a partner to see whether\n
        \   you got the same answer."
      CSD U5 binary 7-new_2018: "# Bit Length\\\r\n\n\\\r\nIf you don't\nknow how
        many bits long each number is, you won't be able to decode a string\nof numbers.\\\r\n\\\r\nFor
        example, the following binary string could be decoded\nmany different ways.\\\r\n\\\r\n![](<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46\nPM.png>)\\\r\n\\\r\nIf
        you split the string like this, the string reads 12, 84.\\\r\n\\\r\n![](<https://images.code.org/c8586b93427166ae6ecfdb8b1ff66bdd-image-1505427228630.13.01\nPM.png>)
        ![](<https://images.code.org/7d9814dc4bae8512dfaebbe459c29c9b-image-1505427230882.13.08\nPM.png>)\\\r\n\\\r\n\\\r\nIf
        you split it like this, the string reads 42, 20.\\\r\n\\\r\n![](<https://images.code.org/2e62b4a71b98b68bdf04713c508e4cb2-image-1505427233001.13.13\nPM.png>)
        ![](<https://images.code.org/10a316c870b575db4b30a687815bf481-image-1505427235482.13.19\nPM.png>)\\\r\n\\\r\nTo
        solve this problem, people agree on a fixed length for every\nnumber.  The
        following string uses the same two numbers, but each number takes\nup exactly
        eight bits, no matter how many bits it actually needs.\\\r\n\\\r\n![](<https://images.code.org/257cb728fde57421e58ef31164be5a51-image-1505427467235.13.26\nPM.png>)\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Use the binary widget to decode the string\n    that
        uses eight bit numbers.\\\r\n-   Check you answer with a partner to see whether\n
        \   you got the same answer."
      CSD U5 binary 7-new_2019: "# Bit Length\\\r\n\n\\\r\nIf you don't\nknow how
        many bits long each number is, you won't be able to decode a string\nof numbers.\\\r\n\\\r\nFor
        example, the following binary string could be decoded\nmany different ways.\\\r\n\\\r\n![](<https://images.code.org/cde9a4d100147b950a9be7540453fe89-image-1505426886341.07.46\nPM.png>)\\\r\n\\\r\nIf
        you split the string like this, the string reads 12, 84.\\\r\n\\\r\n![](<https://images.code.org/c8586b93427166ae6ecfdb8b1ff66bdd-image-1505427228630.13.01\nPM.png>)
        ![](<https://images.code.org/7d9814dc4bae8512dfaebbe459c29c9b-image-1505427230882.13.08\nPM.png>)\\\r\n\\\r\n\\\r\nIf
        you split it like this, the string reads 42, 20.\\\r\n\\\r\n![](<https://images.code.org/2e62b4a71b98b68bdf04713c508e4cb2-image-1505427233001.13.13\nPM.png>)
        ![](<https://images.code.org/10a316c870b575db4b30a687815bf481-image-1505427235482.13.19\nPM.png>)\\\r\n\\\r\nTo
        solve this problem, people agree on a fixed length for every\nnumber.  The
        following string uses the same two numbers, but each number takes\nup exactly
        eight bits, no matter how many bits it actually needs.\\\r\n\\\r\n![](<https://images.code.org/257cb728fde57421e58ef31164be5a51-image-1505427467235.13.26\nPM.png>)\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   Use the binary widget to decode the string\n    that
        uses eight bit numbers.\\\r\n-   Check you answer with a partner to see whether\n
        \   you got the same answer."
      CSD U5 black white images pixelation: "# Do This\\\r\n\n\\\r\nComplete the\n\"X\"
        shape by typing 0s and 1s. You can always click \"Readable Format\"\nif you
        want to clean up your work."
      CSD U5 black white images pixelation 2: "# Do This\\\r\n\n\\\r\nUse\nthe pixelation
        widget to draw a smiley face\\\r\n\\\r\n![](<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47\nPM.png>)"
      CSD U5 black white images pixelation 2_2018: "# Do This\\\r\n\n\\\r\nUse\nthe
        pixelation widget to draw a smiley face\\\r\n\\\r\n![](<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47\nPM.png>)"
      CSD U5 black white images pixelation 2_2019: "# Do This\\\r\n\n\\\r\nUse\nthe
        pixelation widget to draw a smiley face\\\r\n\\\r\n![](<https://images.code.org/3e81e7e5c95a63173242552de2e9c094-image-1491425592286.52.47\nPM.png>)"
      CSD U5 black white images pixelation 3: "# Do This\\\r\n\n\\\r\nThe\nwidth and
        height sliders are set incorrectly for this image so it doesn't\nlook like
        anything. Change them until you find the image.\\\r\n\\\r\n![](<https://images.code.org/c2abe82051e700f22ce613e407e71536-image-1491426050751.00.17\nPM.png>)"
      CSD U5 black white images pixelation 3_2018: "# Do This\\\r\n\n\\\r\nThe\nwidth
        and height sliders are set incorrectly for this image so it doesn't\nlook
        like anything. Change them until you find the image.\\\r\n\\\r\n![](<https://images.code.org/c2abe82051e700f22ce613e407e71536-image-1491426050751.00.17\nPM.png>)"
      CSD U5 black white images pixelation 3_2019: "# Do This\\\r\n\n\\\r\nThe\nwidth
        and height sliders are set incorrectly for this image so it doesn't\nlook
        like anything. Change them until you find the image.\\\r\n\\\r\n![](<https://images.code.org/c2abe82051e700f22ce613e407e71536-image-1491426050751.00.17\nPM.png>)"
      CSD U5 black white images pixelation 4: "# Do This\\\r\n\n\\\r\nAdd\neyebrows
        to this smiley face. Remember to use the \"Readable Format\" if you\nget stuck.\\\r\n\\\r\n![](<https://images.code.org/269725fa3d9d6857912fe4a20464a830-image-1491427249017.18.37\nPM.png>)"
      CSD U5 black white images pixelation 4_2018: "# Do This\\\r\n\n\\\r\nAdd\neyebrows
        to this smiley face. Remember to use the \"Readable Format\" if you\nget stuck.\\\r\n\\\r\n![](<https://images.code.org/269725fa3d9d6857912fe4a20464a830-image-1491427249017.18.37\nPM.png>)"
      CSD U5 black white images pixelation 4_2019: "# Do This\\\r\n\n\\\r\nAdd\neyebrows
        to this smiley face. Remember to use the \"Readable Format\" if you\nget stuck.\\\r\n\\\r\n![](<https://images.code.org/269725fa3d9d6857912fe4a20464a830-image-1491427249017.18.37\nPM.png>)"
      CSD U5 black white images pixelation 5: "# Do This\\\r\n\n\\\r\nNow\nit's your
        turn. Draw anything you want in the pixelation widget. Feel free\nto change
        the width and height of your image if you wish."
      CSD U5 black white images pixelation 5_2018: "# Do This\\\r\n\n\\\r\nNow\nit's
        your turn. Draw anything you want in the pixelation widget. Feel free\nto
        change the width and height of your image if you wish."
      CSD U5 black white images pixelation 5_2019: "# Do This\\\r\n\n\\\r\nNow\nit's
        your turn. Draw anything you want in the pixelation widget. Feel free\nto
        change the width and height of your image if you wish."
      CSD U5 black white images pixelation_2018: "# Do This\\\r\n\n\\\r\nComplete
        the\n\"X\" shape by typing 0s and 1s. You can always click \"Readable Format\"\nif
        you want to clean up your work."
      CSD U5 black white images pixelation_2019: "# Do This\\\r\n\n\\\r\nComplete
        the\n\"X\" shape by typing 0s and 1s. You can always click \"Readable Format\"\nif
        you want to clean up your work."
      CSD U6 LED all: "# Lumière multi-fonction\\\r\n\n\\\r\nCette application doit
        vous permettre de choisir entre trois types d'éclairage différents: allumé,
        clignotant et pulsant. Elle doit aussi avoir un bouton qui éteint complétement
        la lumière. Pour le moment, seul le bouton \"on\" fonctionne, et il manque
        le bouton \"off\".\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour
        que les boutons \"blink\" et \"pulse\" fonctionnent.\\\r\n-   En mode Concevoir,
        ajoute un nouveau bouton \"off\".\\\r\n-   Ajoute du code pour le bouton \"off\"
        fonctionne."
      CSD U6 LED all_2018: "# Lumière multi-fonction\\\r\n\n\\\r\nCette application
        doit vous permettre de choisir entre trois types d'éclairage différents: allumé,
        clignotant et pulsant. Elle doit aussi avoir un bouton qui éteint complétement
        la lumière. Pour le moment, seul le bouton \"on\" fonctionne, et il manque
        le bouton \"off\".\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour
        que les boutons \"blink\" et \"pulse\" fonctionnent.\\\r\n-   En mode Concevoir,
        ajoute un nouveau bouton \"off\".\\\r\n-   Ajoute du code pour le bouton \"off\"
        fonctionne."
      CSD U6 LED all_2019: "# Lumière multi-fonction\\\r\n\n\\\r\nCette application
        doit vous permettre de choisir entre trois types d'éclairage différents: allumé,
        clignotant et pulsant. Elle doit aussi avoir un bouton qui éteint complétement
        la lumière. Pour le moment, seul le bouton \"on\" fonctionne, et il manque
        le bouton \"off\".\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour
        que les boutons \"blink\" et \"pulse\" fonctionnent.\\\r\n-   En mode Concevoir,
        ajoute un nouveau bouton \"off\".\\\r\n-   Ajoute du code pour le bouton \"off\"
        fonctionne."
      CSD U6 LED toggle: "# Interrupteur\\\r\n\n\\\r\nIl y a encore trois autres blocs
        que tu n'as pas encore utilisés et qui permettent de contrôler la LED. Un
        de ces blocs peut transformer le bouton en interrupteur, allumant la LED si
        elle est éteinte, et l'éteignant si elle est allumé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Essaie les blocs `blink`, `toggle` et `pulse` pour voir ce qu'ils font.\\\r\n-
        \  Utilise l'un de ces blocs pour que le bouton fonctionne comme un interrupteur.\\\r\n-
        \  Si la LED est éteinte, le bouton doit l'allumer.\\\r\n-   Si la LED est
        allumée, le bouton doit l'éteindre."
      CSD U6 LED toggle_2018: "# Interrupteur\\\r\n\n\\\r\nIl y a encore trois autres
        blocs que tu n'as pas encore utilisés et qui permettent de contrôler la LED.
        Un de ces blocs peut transformer le bouton en interrupteur, allumant la LED
        si elle est éteinte, et l'éteignant si elle est allumé.\\\r\n\\\r\n\n# Fais
        ceci\\\r\n\n-   Essaie les blocs `blink`, `toggle` et `pulse` pour voir ce
        qu'ils font.\\\r\n-   Utilise l'un de ces blocs pour que le bouton fonctionne
        comme un interrupteur.\\\r\n-   Si la LED est éteinte, le bouton doit l'allumer.\\\r\n-
        \  Si la LED est allumée, le bouton doit l'éteindre."
      CSD U6 LED toggle_2019: "# Interrupteur\\\r\n\n\\\r\nIl y a encore trois autres
        blocs que tu n'as pas encore utilisés et qui permettent de contrôler la LED.
        Un de ces blocs peut transformer le bouton en interrupteur, allumant la LED
        si elle est éteinte, et l'éteignant si elle est allumé.\\\r\n\\\r\n\n# Fais
        ceci\\\r\n\n-   Essaie les blocs `blink`, `toggle` et `pulse` pour voir ce
        qu'ils font.\\\r\n-   Utilise l'un de ces blocs pour que le bouton fonctionne
        comme un interrupteur.\\\r\n-   Si la LED est éteinte, le bouton doit l'allumer.\\\r\n-
        \  Si la LED est allumée, le bouton doit l'éteindre."
      CSD U6 add LED button: "# Utilisation des évènements\\\r\n\n\\\r\nCe programme
        a deux boutons. Le bouton \"on\" fonctionne, mais le bouton \"off\" doit être
        programmé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour que le
        second bouton éteigne la LED."
      CSD U6 add LED button_2018: "# Utilisation des évènements\\\r\n\n\\\r\nCe programme
        a deux boutons. Le bouton \"on\" fonctionne, mais le bouton \"off\" doit être
        programmé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour que le
        second bouton éteigne la LED."
      CSD U6 add LED button_2019: "# Utilisation des évènements\\\r\n\n\\\r\nCe programme
        a deux boutons. Le bouton \"on\" fonctionne, mais le bouton \"off\" doit être
        programmé.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Ajoute du code pour que le
        second bouton éteigne la LED."
      CSD U6 analog challenge: "# Challenge\\\r\n\n\\\r\n_Check with\nyour teacher
        before pursuing this challenge_\\\r\n\\\r\nNow that you've practiced\ntaking
        input from the various analog sensors and changing their scale to meet\nyour
        needs, can you come up with an interesting use for sensor data? It's\neasy
        to display the raw numbers coming out of a sensor, but far more interesting\nto
        present that data in different ways.\\\r\n\\\r\nConsider the following ways\nyou
        might communicate sensor data:\\\r\n\\\r\n\n-   Use the board outputs\\\r\n-
        \  Change\n    the width, height, or position of a UI element\\\r\n-   Use
        conditionals to display\n    different images based on sensor values"
      CSD U6 analog challenge_2018: "# Challenge\\\r\n\n\\\r\n_Check with\nyour teacher
        before pursuing this challenge_\\\r\n\\\r\nNow that you've practiced\ntaking
        input from the various analog sensors and changing their scale to meet\nyour
        needs, can you come up with an interesting use for sensor data? It's\neasy
        to display the raw numbers coming out of a sensor, but far more interesting\nto
        present that data in different ways.\\\r\n\\\r\nConsider the following ways\nyou
        might communicate sensor data:\\\r\n\\\r\n\n-   Use the board outputs\\\r\n-
        \  Change\n    the width, height, or position of a UI element\\\r\n-   Use
        conditionals to display\n    different images based on sensor values"
      CSD U6 analog challenge_2019: "# Challenge\\\r\n\n\\\r\n_Check with\nyour teacher
        before pursuing this challenge_\\\r\n\\\r\nNow that you've practiced\ntaking
        input from the various analog sensors and changing their scale to meet\nyour
        needs, can you come up with an interesting use for sensor data? It's\neasy
        to display the raw numbers coming out of a sensor, but far more interesting\nto
        present that data in different ways.\\\r\n\\\r\nConsider the following ways\nyou
        might communicate sensor data:\\\r\n\\\r\n\n-   Use the board outputs\\\r\n-
        \  Change\n    the width, height, or position of a UI element\\\r\n-   Use
        conditionals to display\n    different images based on sensor values"
      CSD U6 analog data: "# Data Event\\\r\n\n\\\r\nEach of these\nanalog sensors
        emits a special event called \"data\" which occurs every time\nnew data comes
        in from the sensor. Using this event, we can write programs\nthat continually
        update.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThis is the first program\nyou
        worked on in this lesson, let's see if we can make it continually update\nthe
        sound reading using the \"data\" event.\\\r\n\\\r\n\n-   Drag out an `onBoardEvent`\n
        \   block\\\r\n-   Choose `lightSensor` as the input to watch and \"data\"
        as the\n    event\\\r\n-   Move the existing code into your event handler"
      CSD U6 analog data_2018: "# Data Event\\\r\n\n\\\r\nEach of these\nanalog sensors
        emits a special event called \"data\" which occurs every time\nnew data comes
        in from the sensor. Using this event, we can write programs\nthat continually
        update.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThis is the first program\nyou
        worked on in this lesson, let's see if we can make it continually update\nthe
        sound reading using the \"data\" event.\\\r\n\\\r\n\n-   Drag out an `onBoardEvent`\n
        \   block\\\r\n-   Choose `lightSensor` as the input to watch and \"data\"
        as the\n    event\\\r\n-   Move the existing code into your event handler"
      CSD U6 analog data_2019: "# Data Event\\\r\n\n\\\r\nEach of these\nanalog sensors
        emits a special event called \"data\" which occurs every time\nnew data comes
        in from the sensor. Using this event, we can write programs\nthat continually
        update.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nThis is the first program\nyou
        worked on in this lesson, let's see if we can make it continually update\nthe
        sound reading using the \"data\" event.\\\r\n\\\r\n\n-   Drag out an `onBoardEvent`\n
        \   block\\\r\n-   Choose `lightSensor` as the input to watch and \"data\"
        as the\n    event\\\r\n-   Move the existing code into your event handler"
      CSD U6 analog rbg 1: "# Displaying Sensor Readings in\n\nColor\\\r\n\\\r\nIn
        the earlier prediction level you saw how the `setScale()`\nmethod can convert
        the full range of sensor readings (0-1023) into a range\nthat can be used
        for RGB values (0-255). Let's build on that idea to make\nan app that can
        communcate the current value of all three analog sensors with\na single color.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nTo start, we just need to set the\nsensor scales correctly
        - don't worry about actually setting the color of\nthe background yet.\\\r\n\\\r\n<img
        src=\"https://images.code.org/39de88e19682e905a1e08d5f12398f35-image-1488995498849.png\"\nstyle=\"float:
        right; width: 300px; margin-left: 20px;\"/>\\\r\n\\\r\n\n-   Using\n    the
        `sensor.setScale()` block, set each of the three analog sensors to the\n    right
        scale for an RGB color channel.\\\r\n-   Create a variable for each of the\n
        \   three colors and assign each one to the `.value` of a different sensor.\\\r\n-
        \  \\*\n    Use `console.log()` to test that your variables are in the correct
        range.\\\r\n    \\\r\n    _Hint:\n    Order matters. You need to set the scale
        of a sensor before checking it's\n    value_"
      CSD U6 analog rbg 1_2018: "# Displaying Sensor Readings in\n\nColor\\\r\n\\\r\nIn
        the earlier prediction level you saw how the `setScale()`\nmethod can convert
        the full range of sensor readings (0-1023) into a range\nthat can be used
        for RGB values (0-255). Let's build on that idea to make\nan app that can
        communcate the current value of all three analog sensors with\na single color.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nTo start, we just need to set the\nsensor scales correctly
        - don't worry about actually setting the color of\nthe background yet.\\\r\n\\\r\n<img
        src=\"https://images.code.org/39de88e19682e905a1e08d5f12398f35-image-1488995498849.png\"\nstyle=\"float:
        right; width: 300px; margin-left: 20px;\"/>\\\r\n\\\r\n\n-   Using\n    the
        `sensor.setScale()` block, set each of the three analog sensors to the\n    right
        scale for an RGB color channel.\\\r\n-   Create a variable for each of the\n
        \   three colors and assign each one to the `.value` of a different sensor.\\\r\n-
        \  \\*\n    Use `console.log()` to test that your variables are in the correct
        range.\\\r\n    \\\r\n    _Hint:\n    Order matters. You need to set the scale
        of a sensor before checking it's\n    value_"
      CSD U6 analog rbg 1_2019: "# Displaying Sensor Readings in\n\nColor\\\r\n\\\r\nIn
        the earlier prediction level you saw how the `setScale()`\nmethod can convert
        the full range of sensor readings (0-1023) into a range\nthat can be used
        for RGB values (0-255). Let's build on that idea to make\nan app that can
        communcate the current value of all three analog sensors with\na single color.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nTo start, we just need to set the\nsensor scales correctly
        - don't worry about actually setting the color of\nthe background yet.\\\r\n\\\r\n<img
        src=\"https://images.code.org/39de88e19682e905a1e08d5f12398f35-image-1488995498849.png\"\nstyle=\"float:
        right; width: 300px; margin-left: 20px;\"/>\\\r\n\\\r\n\n-   Using\n    the
        `sensor.setScale()` block, set each of the three analog sensors to the\n    right
        scale for an RGB color channel.\\\r\n-   Create a variable for each of the\n
        \   three colors and assign each one to the `.value` of a different sensor.\\\r\n-
        \  \\*\n    Use `console.log()` to test that your variables are in the correct
        range.\\\r\n    \\\r\n    _Hint:\n    Order matters. You need to set the scale
        of a sensor before checking it's\n    value_"
      CSD U6 analog rbg 2: "# Putting Color on the Screen\\\r\n\n\\\r\nNow\nthat your
        sensor data is in a scale that works for RGB, you can go about setting\nthe
        screen color.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a `setProperty()`
        block and\n    set it to change the \"background-color\" property of \"screen1\".\\\r\n-
        \  Add\n    an `rgb()` block to the last parameter of `setProperty()`.\\\r\n-
        \  Use the three\n    color variables you created as inputs to the `rgb()`
        block."
      CSD U6 analog rbg 2_2018: "# Putting Color on the Screen\\\r\n\n\\\r\nNow\nthat
        your sensor data is in a scale that works for RGB, you can go about setting\nthe
        screen color.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a `setProperty()`
        block and\n    set it to change the \"background-color\" property of \"screen1\".\\\r\n-
        \  Add\n    an `rgb()` block to the last parameter of `setProperty()`.\\\r\n-
        \  Use the three\n    color variables you created as inputs to the `rgb()`
        block."
      CSD U6 analog rbg 2_2019: "# Putting Color on the Screen\\\r\n\n\\\r\nNow\nthat
        your sensor data is in a scale that works for RGB, you can go about setting\nthe
        screen color.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a `setProperty()`
        block and\n    set it to change the \"background-color\" property of \"screen1\".\\\r\n-
        \  Add\n    an `rgb()` block to the last parameter of `setProperty()`.\\\r\n-
        \  Use the three\n    color variables you created as inputs to the `rgb()`
        block."
      CSD U6 analog rgb 3: "# Continuous Updates\\\r\n\n\\\r\nThis\nsensor-to-color
        app isn't super useful if it only sets the color once when\nyou start the
        app. You can use the sensors' \"data\" event to make your app\ncontinually
        update the background color every time the value changes.\\\r\n\\\r\nMove\nyour
        `setScale()` blocks into a an event handler for one of the sensors to\nmake
        the app update continually."
      CSD U6 analog rgb 3_2018: "# Continuous Updates\\\r\n\n\\\r\nThis\nsensor-to-color
        app isn't super useful if it only sets the color once when\nyou start the
        app. You can use the sensors' \"data\" event to make your app\ncontinually
        update the background color every time the value changes.\\\r\n\\\r\nMove\nyour
        `setScale()` blocks into a an event handler for one of the sensors to\nmake
        the app update continually."
      CSD U6 analog rgb 3_2019: "# Continuous Updates\\\r\n\n\\\r\nThis\nsensor-to-color
        app isn't super useful if it only sets the color once when\nyou start the
        app. You can use the sensors' \"data\" event to make your app\ncontinually
        update the background color every time the value changes.\\\r\n\\\r\nMove\nyour
        `setScale()` blocks into a an event handler for one of the sensors to\nmake
        the app update continually."
      CSD U6 analog temp: "# Make a Thermometer App\\\r\n\n\\\r\nWhile\nthe light
        and sound sensors have just a raw value with the `value` property,\nthe temperature
        sensor is a little bit smarter. Instead of `tempSensor.value`,\nthere are
        two properties `tempSensor.F` and `tempSensor.C` which convert the\nraw input
        value to either Fahrenheit or Celsius.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\na
        simple thermometer app that reads in values from the temperature sensor.\nYour
        app can display the temperature in either Fahrenheit or Celsius (or both!)\\\r\n\\\r\n_Challenge:\ncan
        you make your app continually update the temperature readings?_"
      CSD U6 analog temp_2018: "# Make a Thermometer App\\\r\n\n\\\r\nWhile\nthe light
        and sound sensors have just a raw value with the `value` property,\nthe temperature
        sensor is a little bit smarter. Instead of `tempSensor.value`,\nthere are
        two properties `tempSensor.F` and `tempSensor.C` which convert the\nraw input
        value to either Fahrenheit or Celsius.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\na
        simple thermometer app that reads in values from the temperature sensor.\nYour
        app can display the temperature in either Fahrenheit or Celsius (or both!)\\\r\n\\\r\n_Challenge:\ncan
        you make your app continually update the temperature readings?_"
      CSD U6 analog temp_2019: "# Make a Thermometer App\\\r\n\n\\\r\nWhile\nthe light
        and sound sensors have just a raw value with the `value` property,\nthe temperature
        sensor is a little bit smarter. Instead of `tempSensor.value`,\nthere are
        two properties `tempSensor.F` and `tempSensor.C` which convert the\nraw input
        value to either Fahrenheit or Celsius.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nMake\na
        simple thermometer app that reads in values from the temperature sensor.\nYour
        app can display the temperature in either Fahrenheit or Celsius (or both!)\\\r\n\\\r\n_Challenge:\ncan
        you make your app continually update the temperature readings?_"
      CSD U6 challenge motorcycle_2018: "# Challenge\\\r\n\n\\\r\nUse this\nprogram
        to experiment some more with getting and setting properties. Some\nideas you
        might try include:\\\r\n\\\r\n\n-   Use the toggle switch to change the\n
        \   motorcycle's movement to go up and down.\\\r\n-   Use a dropdown with
        color names\n    to change the motorcycle's color\\\r\n-   Make the buzzer
        or LED turn on when\n    the motorcycle reaches the top or bottom of the screen."
      CSD U6 challenge motorcycle_2019: "# Challenge\\\r\n\n\\\r\nUse this\nprogram
        to experiment some more with getting and setting properties. Some\nideas you
        might try include:\\\r\n\\\r\n\n-   Use the toggle switch to change the\n
        \   motorcycle's movement to go up and down.\\\r\n-   Use a dropdown with
        color names\n    to change the motorcycle's color\\\r\n-   Make the buzzer
        or LED turn on when\n    the motorcycle reaches the top or bottom of the screen."
      CSD U6 create LED app: "# Créé ton application - L'écran\\\r\n\n\\\r\nMaintenant,
        toi et ton binôme pouvez créer votre propre application utilisant la LED.
        Décidez entre-vous quelle application vous voulez réaliser.\\\r\n\\\r\n\n#
        Action\\\r\n\n\\\r\n\n-   Discutez entre vous quels éléments seront nécessaires
        sur l'écran de votre application. Est-ce que vous voulez...\\\r\n-   des boutons
        ?\\\r\n-   des images ?\\\r\n-   du texte ?\\\r\n-   Dans le mode Concevoir,
        ajoutez les éléments en vous assurant que vous donnez à chacun un identifiant
        significatif."
      CSD U6 create LED app 2: "# Créé ton application - Le code\\\r\n\n\\\r\nMaintenant,
        tu dois ajouter le code qui fait fonctionner ton application.\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n\\\r\n\n-   Discute avec ton binôme pour savoir de quel code
        vous aurez besoin pour l'application. Est-qu'il faut...\\\r\n-   des évènements
        ?\\\r\n-   des variables ?\\\r\n-   des accesseurs ?\\\r\n-   des nombres
        aléatoires ?\\\r\n-   Dans le mode Code, ajoute le code qui fait fonctionner
        l'application."
      CSD U6 create LED app 2_2018: "# Créé ton application - Le code\\\r\n\n\\\r\nMaintenant,
        tu dois ajouter le code qui fait fonctionner ton application.\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n\\\r\n\n-   Discute avec ton binôme pour savoir de quel code
        vous aurez besoin pour l'application. Est-qu'il faut...\\\r\n-   des évènements
        ?\\\r\n-   des variables ?\\\r\n-   des accesseurs ?\\\r\n-   des nombres
        aléatoires ?\\\r\n-   Dans le mode Code, ajoute le code qui fait fonctionner
        l'application."
      CSD U6 create LED app 2_2019: "# Créé ton application - Le code\\\r\n\n\\\r\nMaintenant,
        tu dois ajouter le code qui fait fonctionner ton application.\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n\\\r\n\n-   Discute avec ton binôme pour savoir de quel code
        vous aurez besoin pour l'application. Est-qu'il faut...\\\r\n-   des évènements
        ?\\\r\n-   des variables ?\\\r\n-   des accesseurs ?\\\r\n-   des nombres
        aléatoires ?\\\r\n-   Dans le mode Code, ajoute le code qui fait fonctionner
        l'application."
      CSD U6 create LED app_2018: "# Créé ton application - L'écran\\\r\n\n\\\r\nMaintenant,
        toi et ton binôme pouvez créer votre propre application utilisant la LED.
        Décidez entre-vous quelle application vous voulez réaliser.\\\r\n\\\r\n\n#
        Action\\\r\n\n\\\r\n\n-   Discutez entre vous quels éléments seront nécessaires
        sur l'écran de votre application. Est-ce que vous voulez...\\\r\n-   des boutons
        ?\\\r\n-   des images ?\\\r\n-   du texte ?\\\r\n-   Dans le mode Concevoir,
        ajoutez les éléments en vous assurant que vous donnez à chacun un identifiant
        significatif."
      CSD U6 create LED app_2019: "# Créé ton application - L'écran\\\r\n\n\\\r\nMaintenant,
        toi et ton binôme pouvez créer votre propre application utilisant la LED.
        Décidez entre-vous quelle application vous voulez réaliser.\\\r\n\\\r\n\n#
        Action\\\r\n\n\\\r\n\n-   Discutez entre vous quels éléments seront nécessaires
        sur l'écran de votre application. Est-ce que vous voulez...\\\r\n-   des boutons
        ?\\\r\n-   des images ?\\\r\n-   du texte ?\\\r\n-   Dans le mode Concevoir,
        ajoutez les éléments en vous assurant que vous donnez à chacun un identifiant
        significatif."
      CSD U6 design motorcycle: "# Design Mode is Back!\\\r\n\n\\\r\nNow\nthat you
        have Design Mode back, you can add some elements of your own. The\nmotorcycle
        should be able to move up and down right now, but how can you control\nits
        speed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a slider in design mode.\\\r\n
        \   -   Make\n        sure you set the min and max values of the slider in
        design mode.\\\r\n-   Create\n    an event that will trigger when the slider
        value is changed.\\\r\n-   Add code\n    to get the slider value and store
        it into the `speed` variable when the event\n    is triggered."
      CSD U6 design motorcycle_2018: "# Design Mode is Back!\\\r\n\n\\\r\nNow\nthat
        you have Design Mode back, you can add some elements of your own. The\nmotorcycle
        should be able to move up and down right now, but how can you control\nits
        speed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a slider in design mode.\\\r\n
        \   -   Make\n        sure you set the min and max values of the slider in
        design mode.\\\r\n-   Create\n    an event that will trigger when the slider
        value is changed.\\\r\n-   Add code\n    to get the slider value and store
        it into the `speed` variable when the event\n    is triggered."
      CSD U6 design motorcycle_2019: "# Design Mode is Back!\\\r\n\n\\\r\nNow\nthat
        you have Design Mode back, you can add some elements of your own. The\nmotorcycle
        should be able to move up and down right now, but how can you control\nits
        speed?\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Add a slider in design mode.\\\r\n
        \   -   Make\n        sure you set the min and max values of the slider in
        design mode.\\\r\n-   Create\n    an event that will trigger when the slider
        value is changed.\\\r\n-   Add code\n    to get the slider value and store
        it into the `speed` variable when the event\n    is triggered."
      CSD U6 emoji race demo: "# Emoji Race!\\\r\n\n\\\r\nThis is\nan example of a
        race game that you'll build by the end of this lesson. To\nplay, pair up with
        another student. The student on the left will the click\nthe left button on
        the Circuit Playground as fast as they can, while the student\non the right
        clicks the right button. Whoever can get their emoji to the bottom\nof the
        screen first wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTurn to a classmate
        and\nmake a list of the following information.\\\r\n\\\r\n\n-   What components
        of the\n    board does this program use?\\\r\n-   What events is this program
        responding to?\\\r\n-   \\*\n    What functions might you create to make this
        program work?"
      CSD U6 emoji race demo_2018: "# Emoji Race!\\\r\n\n\\\r\nThis is\nan example
        of a race game that you'll build by the end of this lesson. To\nplay, pair
        up with another student. The student on the left will the click\nthe left
        button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get their emoji to the bottom\nof
        the screen first wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTurn to a classmate
        and\nmake a list of the following information.\\\r\n\\\r\n\n-   What components
        of the\n    board does this program use?\\\r\n-   What events is this program
        responding to?\\\r\n-   \\*\n    What functions might you create to make this
        program work?"
      CSD U6 emoji race demo_2019: "# Emoji Race!\\\r\n\n\\\r\nThis is\nan example
        of a race game that you'll build by the end of this lesson. To\nplay, pair
        up with another student. The student on the left will the click\nthe left
        button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get their emoji to the bottom\nof
        the screen first wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTurn to a classmate
        and\nmake a list of the following information.\\\r\n\\\r\n\n-   What components
        of the\n    board does this program use?\\\r\n-   What events is this program
        responding to?\\\r\n-   \\*\n    What functions might you create to make this
        program work?"
      CSD U6 emotion machine 2: "# Changing Color\\\r\n\n\\\r\nIf\nyou look back at
        the example for this app, you should notice that not only\ndo the emojis change
        when you click a button, but their color changes as well.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nIn each of the event handlers, set the \"icon-color\" property\nof
        \"face\". Pick a warm color for happy and a cool color for sad."
      CSD U6 emotion machine 2_2018: "# Changing Color\\\r\n\n\\\r\nIf\nyou look back
        at the example for this app, you should notice that not only\ndo the emojis
        change when you click a button, but their color changes as well.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nIn each of the event handlers, set the \"icon-color\"
        property\nof \"face\". Pick a warm color for happy and a cool color for sad."
      CSD U6 emotion machine 2_2019: "# Changing Color\\\r\n\n\\\r\nIf\nyou look back
        at the example for this app, you should notice that not only\ndo the emojis
        change when you click a button, but their color changes as well.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nIn each of the event handlers, set the \"icon-color\"
        property\nof \"face\". Pick a warm color for happy and a cool color for sad."
      CSD U6 emotion machine 3: "# Setting Text\\\r\n\n\\\r\nYour\nhappy and sad buttons
        should be almost completely functional now. The only\nthing they still need
        to do is change the text at the bottom of the screen.\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nMake each of the event handlers change the text of \"feeling\"\nto
        the appropriate emotion (either \"happy\" or \"sad\")"
      CSD U6 emotion machine 3_2018: "# Setting Text\\\r\n\n\\\r\nYour\nhappy and
        sad buttons should be almost completely functional now. The only\nthing they
        still need to do is change the text at the bottom of the screen.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nMake each of the event handlers change the text of
        \"feeling\"\nto the appropriate emotion (either \"happy\" or \"sad\")"
      CSD U6 emotion machine 3_2019: "# Setting Text\\\r\n\n\\\r\nYour\nhappy and
        sad buttons should be almost completely functional now. The only\nthing they
        still need to do is change the text at the bottom of the screen.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nMake each of the event handlers change the text of
        \"feeling\"\nto the appropriate emotion (either \"happy\" or \"sad\")"
      CSD U6 emotion machine 4: "# Add Another Emotion\\\r\n\n\\\r\nIn\nthe example
        app you saw earlier, you could set the emotion to happy, sad,\nor meh. Your
        app only has happy and sad, can you add a third emotion?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nUsing all of the same techniques you used for the happy and\nsad
        buttons, create a third emotion button. You could stick with meh, or you\ncould
        pick an emotion of your own.\\\r\n\\\r\nWhen you're all done, feel free\nto
        add more emotions or features before submitting your final version."
      CSD U6 emotion machine 4_2018: "# Add Another Emotion\\\r\n\n\\\r\nIn\nthe example
        app you saw earlier, you could set the emotion to happy, sad,\nor meh. Your
        app only has happy and sad, can you add a third emotion?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nUsing all of the same techniques you used for the happy and\nsad
        buttons, create a third emotion button. You could stick with meh, or you\ncould
        pick an emotion of your own.\\\r\n\\\r\nWhen you're all done, feel free\nto
        add more emotions or features before submitting your final version."
      CSD U6 emotion machine 4_2019: "# Add Another Emotion\\\r\n\n\\\r\nIn\nthe example
        app you saw earlier, you could set the emotion to happy, sad,\nor meh. Your
        app only has happy and sad, can you add a third emotion?\\\r\n\\\r\n\n# \n\nDo
        This\\\r\n\\\r\nUsing all of the same techniques you used for the happy and\nsad
        buttons, create a third emotion button. You could stick with meh, or you\ncould
        pick an emotion of your own.\\\r\n\\\r\nWhen you're all done, feel free\nto
        add more emotions or features before submitting your final version."
      CSD U6 emotion machine example: "# The Emotion Machine\\\r\n\n\\\r\nCheck\nout
        this Emotion Machine app that you'll be building next. Try clicking on\nthe
        buttons to see how it works.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTry out the
        app,\nand then with a neighbor discuss:\\\r\n\\\r\n\n-   What events handlers
        does this\n    app use?\\\r\n-   Which elements are being changed with code?\\\r\n-
        \  Which properties\n    are being changed when you click a button?"
      CSD U6 emotion machine example_2018: "# The Emotion Machine\\\r\n\n\\\r\nCheck\nout
        this Emotion Machine app that you'll be building next. Try clicking on\nthe
        buttons to see how it works.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTry out the
        app,\nand then with a neighbor discuss:\\\r\n\\\r\n\n-   What events handlers
        does this\n    app use?\\\r\n-   Which elements are being changed with code?\\\r\n-
        \  Which properties\n    are being changed when you click a button?"
      CSD U6 emotion machine example_2019: "# The Emotion Machine\\\r\n\n\\\r\nCheck\nout
        this Emotion Machine app that you'll be building next. Try clicking on\nthe
        buttons to see how it works.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nTry out the
        app,\nand then with a neighbor discuss:\\\r\n\\\r\n\n-   What events handlers
        does this\n    app use?\\\r\n-   Which elements are being changed with code?\\\r\n-
        \  Which properties\n    are being changed when you click a button?"
      CSD U6 frequency: "# Frequency\\\r\n\n\\\r\nThis buzzer controller\nhas been
        expanded to control frequency as well, but the code isn't finished\nyet.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Using the `duration` variable as a model, create\n    a
        `frequency` variable that gets the value from the _frequency_ slider.\\\r\n-
        \  \\*\n    Modify the line of code that makes the buzzer sound so that it
        uses the `frequency`\n    variable rather than the default frequency of `500`."
      CSD U6 frequency_2018: "# Frequency\\\r\n\n\\\r\nThis buzzer controller\nhas
        been expanded to control frequency as well, but the code isn't finished\nyet.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Using the `duration` variable as a model, create\n    a
        `frequency` variable that gets the value from the _frequency_ slider.\\\r\n-
        \  \\*\n    Modify the line of code that makes the buzzer sound so that it
        uses the `frequency`\n    variable rather than the default frequency of `500`."
      CSD U6 frequency_2019: "# Frequency\\\r\n\n\\\r\nThis buzzer controller\nhas
        been expanded to control frequency as well, but the code isn't finished\nyet.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Using the `duration` variable as a model, create\n    a
        `frequency` variable that gets the value from the _frequency_ slider.\\\r\n-
        \  \\*\n    Modify the line of code that makes the buzzer sound so that it
        uses the `frequency`\n    variable rather than the default frequency of `500`."
      CSD U6 game project board events: "# Board Events\\\r\n\n\\\r\nGo\nback to the
        Events section of your activity guide and find any events that\nrespond to
        your board (ones that would use `onBoardEvent()`). Create event\nhandlers
        for each of those now. If these events rely on functions you haven't\nwritten
        yet, just leave yourself a comment in the code."
      CSD U6 game project board events_2018: "# Board Events\\\r\n\n\\\r\nGo\nback
        to the Events section of your activity guide and find any events that\nrespond
        to your board (ones that would use `onBoardEvent()`). Create event\nhandlers
        for each of those now. If these events rely on functions you haven't\nwritten
        yet, just leave yourself a comment in the code."
      CSD U6 game project board events_2019: "# Board Events\\\r\n\n\\\r\nGo\nback
        to the Events section of your activity guide and find any events that\nrespond
        to your board (ones that would use `onBoardEvent()`). Create event\nhandlers
        for each of those now. If these events rely on functions you haven't\nwritten
        yet, just leave yourself a comment in the code."
      CSD U6 game project finish: "# Finishing Touches and Testing\\\r\n\n\\\r\nAt\nthis
        point you should have most of your program in place. Now you need to\nadd
        whatever finishing touches are needed and do a little testing. When your\napp
        is ready, have your classmates try it out. See if you can find any bugs,\nconfusing
        design choices, or missing features you'd like to work on.\\\r\n\\\r\nOnce\nyou're
        all done with this version of your program, click Submit to turn it\nin."
      CSD U6 game project finish_2018: "# Finishing Touches and Testing\\\r\n\n\\\r\nAt\nthis
        point you should have most of your program in place. Now you need to\nadd
        whatever finishing touches are needed and do a little testing. When your\napp
        is ready, have your classmates try it out. See if you can find any bugs,\nconfusing
        design choices, or missing features you'd like to work on.\\\r\n\\\r\nOnce\nyou're
        all done with this version of your program, click Submit to turn it\nin."
      CSD U6 game project finish_2019: "# Finishing Touches and Testing\\\r\n\n\\\r\nAt\nthis
        point you should have most of your program in place. Now you need to\nadd
        whatever finishing touches are needed and do a little testing. When your\napp
        is ready, have your classmates try it out. See if you can find any bugs,\nconfusing
        design choices, or missing features you'd like to work on.\\\r\n\\\r\nOnce\nyou're
        all done with this version of your program, click Submit to turn it\nin."
      CSD U6 game project functions call: "# Calling your Functions\\\r\n\n\\\r\nWith\nyour
        functions defined, you can can call them wherever you need. Go through\nyour
        event handlers, or anywhere else in your program that your function should\nbe
        used, and add calls to the function you created."
      CSD U6 game project functions call_2018: "# Calling your Functions\\\r\n\n\\\r\nWith\nyour
        functions defined, you can can call them wherever you need. Go through\nyour
        event handlers, or anywhere else in your program that your function should\nbe
        used, and add calls to the function you created."
      CSD U6 game project functions call_2019: "# Calling your Functions\\\r\n\n\\\r\nWith\nyour
        functions defined, you can can call them wherever you need. Go through\nyour
        event handlers, or anywhere else in your program that your function should\nbe
        used, and add calls to the function you created."
      CSD U6 game project screen links: "# UI Element Events\\\r\n\n\\\r\nNow\nthat
        all of your screens are designed, you can add any event handlers that\nwill
        respond to _screen interaction_. These should be listed in the \"Events\"\nsection
        of your activity guide. If you run into new events that you hadn't\nthought
        of in the planning stage, make sure you add them to your project guide.\\\r\n\\\r\nDon't\nworry
        about making these completely functional yet. If your events rely on\nboard
        elements or your own functions, we'll take care of that in later levels."
      CSD U6 game project screen links_2018: "# UI Element Events\\\r\n\n\\\r\nNow\nthat
        all of your screens are designed, you can add any event handlers that\nwill
        respond to _screen interaction_. These should be listed in the \"Events\"\nsection
        of your activity guide. If you run into new events that you hadn't\nthought
        of in the planning stage, make sure you add them to your project guide.\\\r\n\\\r\nDon't\nworry
        about making these completely functional yet. If your events rely on\nboard
        elements or your own functions, we'll take care of that in later levels."
      CSD U6 game project screen links_2019: "# UI Element Events\\\r\n\n\\\r\nNow\nthat
        all of your screens are designed, you can add any event handlers that\nwill
        respond to _screen interaction_. These should be listed in the \"Events\"\nsection
        of your activity guide. If you run into new events that you hadn't\nthought
        of in the planning stage, make sure you add them to your project guide.\\\r\n\\\r\nDon't\nworry
        about making these completely functional yet. If your events rely on\nboard
        elements or your own functions, we'll take care of that in later levels."
      CSD U6 game project screens: "# Create Your Screens\\\r\n\n\\\r\nThe\nfirst
        thing you'll need to do is create all of the screens that you've sketched\nin
        your planning guide.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUse Design Mode to
        create\nall of the screens that your program will need. Don't forget to **pick
        sensible\nIDs** for all of your design elements."
      CSD U6 game project screens_2018: "# Create Your Screens\\\r\n\n\\\r\nThe\nfirst
        thing you'll need to do is create all of the screens that you've sketched\nin
        your planning guide.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUse Design Mode to
        create\nall of the screens that your program will need. Don't forget to **pick
        sensible\nIDs** for all of your design elements."
      CSD U6 game project screens_2019: "# Create Your Screens\\\r\n\n\\\r\nThe\nfirst
        thing you'll need to do is create all of the screens that you've sketched\nin
        your planning guide.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUse Design Mode to
        create\nall of the screens that your program will need. Don't forget to **pick
        sensible\nIDs** for all of your design elements."
      CSD U6 get toggle: "# onChange\\\r\n\n\\\r\nThis program has\nevents that detect
        three different changes: the toggle switch, the interval\nslider, and the
        duration slider.  Because there are so many different things\nthat cause the
        LED and buzzer to reset, it uses functions to organize the\ncode.\\\r\n\\\r\n\n##
        Do This\\\r\n\n\\\r\n\n-   Read the `updateLED` function to see what\n    it
        does.\\\r\n-   Add code to `updateBuzzer` to make the buzzer only turn on
        when\n    the toggle switch is open."
      CSD U6 get toggle_2018: "# onChange\\\r\n\n\\\r\nThis program has\nevents that
        detect three different changes: the toggle switch, the interval\nslider, and
        the duration slider.  Because there are so many different things\nthat cause
        the LED and buzzer to reset, it uses functions to organize the\ncode.\\\r\n\\\r\n\n##
        Do This\\\r\n\n\\\r\n\n-   Read the `updateLED` function to see what\n    it
        does.\\\r\n-   Add code to `updateBuzzer` to make the buzzer only turn on
        when\n    the toggle switch is open."
      CSD U6 get toggle_2019: "# onChange\\\r\n\n\\\r\nThis program has\nevents that
        detect three different changes: the toggle switch, the interval\nslider, and
        the duration slider.  Because there are so many different things\nthat cause
        the LED and buzzer to reset, it uses functions to organize the\ncode.\\\r\n\\\r\n\n##
        Do This\\\r\n\n\\\r\n\n-   Read the `updateLED` function to see what\n    it
        does.\\\r\n-   Add code to `updateBuzzer` to make the buzzer only turn on
        when\n    the toggle switch is open."
      CSD U6 getProperty Demo: "# Updating Properties\\\r\n\n\\\r\nHere's\nan example
        of an app that uses both `getProperty` and `setProperty` to update\nelements
        on the screen. Read through the code, and then test it out by filling\nout
        the input fields and clicking \"Save\"\\\r\n\\\r\n_Note: you don't need to\nchange
        any code here, but read through the provided code to see how it works._"
      CSD U6 getProperty Demo_2018: "# Updating Properties\\\r\n\n\\\r\nHere's\nan
        example of an app that uses both `getProperty` and `setProperty` to update\nelements
        on the screen. Read through the code, and then test it out by filling\nout
        the input fields and clicking \"Save\"\\\r\n\\\r\n_Note: you don't need to\nchange
        any code here, but read through the provided code to see how it works._"
      CSD U6 getProperty Demo_2019: "# Updating Properties\\\r\n\n\\\r\nHere's\nan
        example of an app that uses both `getProperty` and `setProperty` to update\nelements
        on the screen. Read through the code, and then test it out by filling\nout
        the input fields and clicking \"Save\"\\\r\n\\\r\n_Note: you don't need to\nchange
        any code here, but read through the provided code to see how it works._"
      CSD U6 getters debug: "# LED and Buzzer Controller\\\r\n\n\\\r\nThis\nprogram
        operates the LED and the buzzer, but it has some problems.\\\r\n\\\r\n\n##
        \n\nDo this\\\r\n\n-   Read the program to understand how it is supposed to
        work.\\\r\n-   \\*\n    Find and correct the bugs so that the program works
        properly."
      CSD U6 getters debug_2018: "# LED and Buzzer Controller\\\r\n\n\\\r\nThis\nprogram
        operates the LED and the buzzer, but it has some problems.\\\r\n\\\r\n\n##
        \n\nDo this\\\r\n\n-   Read the program to understand how it is supposed to
        work.\\\r\n-   \\*\n    Find and correct the bugs so that the program works
        properly."
      CSD U6 getters debug_2019: "# LED and Buzzer Controller\\\r\n\n\\\r\nThis\nprogram
        operates the LED and the buzzer, but it has some problems.\\\r\n\\\r\n\n##
        \n\nDo this\\\r\n\n-   Read the program to understand how it is supposed to
        work.\\\r\n-   \\*\n    Find and correct the bugs so that the program works
        properly."
      CSD U6 iter predict bubbles: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2018: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 iter predict bubbles_2019: "![](https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif)"
      CSD U6 light pattern challenge_2018: "# Challenge: More Patterns\\\r\n\n\\\r\nAdd\nsome
        more patterns to your app. Find a partner and add their pattern as an\noption.
        Make sure to put each pattern into its own function."
      CSD U6 light pattern challenge_2019: "# Challenge: More Patterns\\\r\n\n\\\r\nAdd\nsome
        more patterns to your app. Find a partner and add their pattern as an\noption.
        Make sure to put each pattern into its own function."
      CSD U6 move motorcycle: "# Movement with Properties\\\r\n\n\\\r\nEarlier\nwe
        used `setProperty` to change the x and y position of elements on the screen,\nbut
        we could only move them to either a single specific location, or a random\nlocation.
        By using `getProperty` to find out an element's current position,\nwe can
        use the **counter pattern** from Unit 3 to update that position.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Read the program and discuss with your partner
        how the left\n    button makes the motorcycle go up.\\\r\n-   Using the working
        left button as an\n    example, program the right button to make the motorcycle
        go down."
      CSD U6 move motorcycle_2018: "# Movement with Properties\\\r\n\n\\\r\nEarlier\nwe
        used `setProperty` to change the x and y position of elements on the screen,\nbut
        we could only move them to either a single specific location, or a random\nlocation.
        By using `getProperty` to find out an element's current position,\nwe can
        use the **counter pattern** from Unit 3 to update that position.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Read the program and discuss with your partner
        how the left\n    button makes the motorcycle go up.\\\r\n-   Using the working
        left button as an\n    example, program the right button to make the motorcycle
        go down."
      CSD U6 move motorcycle_2019: "# Movement with Properties\\\r\n\n\\\r\nEarlier\nwe
        used `setProperty` to change the x and y position of elements on the screen,\nbut
        we could only move them to either a single specific location, or a random\nlocation.
        By using `getProperty` to find out an element's current position,\nwe can
        use the **counter pattern** from Unit 3 to update that position.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\n\n-   Read the program and discuss with your partner
        how the left\n    button makes the motorcycle go up.\\\r\n-   Using the working
        left button as an\n    example, program the right button to make the motorcycle
        go down."
      CSD U6 setProperty Text: "# Changing the Text\\\r\n\n\\\r\nThe\n`setProperty`
        block can be used to changed lots of things about your design\nelements, including
        the text they contain.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Drag\n    out
        a `setProperty` block\\\r\n-   For the first parameter, select \"name\" (the\n
        \   element's id)\\\r\n-   For the second parameter, select \"text\" (the
        property\n    you want to set)\\\r\n-   For the third parameter, write your
        name in quotes (the\n    value to set)\\\r\n    \\\r\n    _Note: We've removed
        the Design Mode tab for now so\n    you can practice working with `setProperty`,
        but it'll come back later once\n    you're building apps of your own._"
      CSD U6 setProperty Text_2018: "# Changing the Text\\\r\n\n\\\r\nThe\n`setProperty`
        block can be used to changed lots of things about your design\nelements, including
        the text they contain.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Drag\n    out
        a `setProperty` block\\\r\n-   For the first parameter, select \"name\" (the\n
        \   element's id)\\\r\n-   For the second parameter, select \"text\" (the
        property\n    you want to set)\\\r\n-   For the third parameter, write your
        name in quotes (the\n    value to set)\\\r\n    \\\r\n    _Note: We've removed
        the Design Mode tab for now so\n    you can practice working with `setProperty`,
        but it'll come back later once\n    you're building apps of your own._"
      CSD U6 setProperty Text_2019: "# Changing the Text\\\r\n\n\\\r\nThe\n`setProperty`
        block can be used to changed lots of things about your design\nelements, including
        the text they contain.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   Drag\n    out
        a `setProperty` block\\\r\n-   For the first parameter, select \"name\" (the\n
        \   element's id)\\\r\n-   For the second parameter, select \"text\" (the
        property\n    you want to set)\\\r\n-   For the third parameter, write your
        name in quotes (the\n    value to set)\\\r\n    \\\r\n    _Note: We've removed
        the Design Mode tab for now so\n    you can practice working with `setProperty`,
        but it'll come back later once\n    you're building apps of your own._"
      CSD U6 setProperty hidden: "# Hidden\\\r\n\n\\\r\nWe are going\nto start making
        an alarm app. We have already set up an event handler for\nthe \"triggerAlarmButton\"
        which will do two things when clicked:\\\r\n\\\r\n\\*\nChange the _text_ property
        of \"statusLabel\" to \"on\"\\\r\n\n-   Set the _hidden_\n    property of
        \"stopAlarmButton\" to `false`\\\r\n    \\\r\n    # Do This\\\r\n    \\\r\n-
        \  Run the\n    program and click \"Trigger Alarm\" to see how it works\\\r\n-
        \  Add code to the\n    provided event handler that hides the \"triggerAlarmButton\"\\\r\n
        \   \\\r\n    _Note:\n    the button \"stopAlarmButton\" is already on the
        screen, but because its \"hidden\"\n    property is marked true, it isn't
        shown when the program starts._"
      CSD U6 setProperty hidden 2: "# Showing/Hiding\\\r\n\n\\\r\nThis\nalarm app
        isn't super useful if you can't turn the alarm off once it's\nbeen triggered.
        Let's fix that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd a second `onEvent`\nblock
        to watch for the \"stopAlarmButton\" to be clicked. Inside that block:\\\r\n\\\r\n\\*\nChange
        the status text to \"OFF\"\\\r\n\n-   Hide the \"stopAlarmButton\"\\\r\n    \\\r\n
        \   _Hint:\n    \"hidden\" is a boolean property. If we used `false` to make
        the button show\n    up, what should you use to make it hidden again?_"
      CSD U6 setProperty hidden 2_2018: "# Showing/Hiding\\\r\n\n\\\r\nThis\nalarm
        app isn't super useful if you can't turn the alarm off once it's\nbeen triggered.
        Let's fix that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd a second `onEvent`\nblock
        to watch for the \"stopAlarmButton\" to be clicked. Inside that block:\\\r\n\\\r\n\\*\nChange
        the status text to \"OFF\"\\\r\n\n-   Hide the \"stopAlarmButton\"\\\r\n    \\\r\n
        \   _Hint:\n    \"hidden\" is a boolean property. If we used `false` to make
        the button show\n    up, what should you use to make it hidden again?_"
      CSD U6 setProperty hidden 2_2019: "# Showing/Hiding\\\r\n\n\\\r\nThis\nalarm
        app isn't super useful if you can't turn the alarm off once it's\nbeen triggered.
        Let's fix that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nAdd a second `onEvent`\nblock
        to watch for the \"stopAlarmButton\" to be clicked. Inside that block:\\\r\n\\\r\n\\*\nChange
        the status text to \"OFF\"\\\r\n\n-   Hide the \"stopAlarmButton\"\\\r\n    \\\r\n
        \   _Hint:\n    \"hidden\" is a boolean property. If we used `false` to make
        the button show\n    up, what should you use to make it hidden again?_"
      CSD U6 setProperty hidden_2018: "# Hidden\\\r\n\n\\\r\nWe are going\nto start
        making an alarm app. We have already set up an event handler for\nthe \"triggerAlarmButton\"
        which will do two things when clicked:\\\r\n\\\r\n\\*\nChange the _text_ property
        of \"statusLabel\" to \"on\"\\\r\n\n-   Set the _hidden_\n    property of
        \"stopAlarmButton\" to `false`\\\r\n    \\\r\n    # Do This\\\r\n    \\\r\n-
        \  Run the\n    program and click \"Trigger Alarm\" to see how it works\\\r\n-
        \  Add code to the\n    provided event handler that hides the \"triggerAlarmButton\"\\\r\n
        \   \\\r\n    _Note:\n    the button \"stopAlarmButton\" is already on the
        screen, but because its \"hidden\"\n    property is marked true, it isn't
        shown when the program starts._"
      CSD U6 setProperty hidden_2019: "# Hidden\\\r\n\n\\\r\nWe are going\nto start
        making an alarm app. We have already set up an event handler for\nthe \"triggerAlarmButton\"
        which will do two things when clicked:\\\r\n\\\r\n\\*\nChange the _text_ property
        of \"statusLabel\" to \"on\"\\\r\n\n-   Set the _hidden_\n    property of
        \"stopAlarmButton\" to `false`\\\r\n    \\\r\n    # Do This\\\r\n    \\\r\n-
        \  Run the\n    program and click \"Trigger Alarm\" to see how it works\\\r\n-
        \  Add code to the\n    provided event handler that hides the \"triggerAlarmButton\"\\\r\n
        \   \\\r\n    _Note:\n    the button \"stopAlarmButton\" is already on the
        screen, but because its \"hidden\"\n    property is marked true, it isn't
        shown when the program starts._"
      CSD U6 setProperty xy click: "# Changing With a Click\\\r\n\n\\\r\nIt's\nnot
        really useful to only set a property when your program is run. After all,\nyou
        could just do all of that in Design Mode. When you use an `onEvent` block\nwith
        `setProperty`, you're able to do things you couldn't do with Design\nMode
        alone.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nWe've provided an empty `onEvent`
        block\nthat's watching the \"smiley\" image. Inside the `onEvent` block, use
        two\n`setProperty` blocks to move the smiley somewhere else (it doesn't really\nmatter
        where for now). Test your program by running it and clicking on the\nsmiley."
      CSD U6 setProperty xy click_2018: "# Changing With a Click\\\r\n\n\\\r\nIt's\nnot
        really useful to only set a property when your program is run. After all,\nyou
        could just do all of that in Design Mode. When you use an `onEvent` block\nwith
        `setProperty`, you're able to do things you couldn't do with Design\nMode
        alone.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nWe've provided an empty `onEvent`
        block\nthat's watching the \"smiley\" image. Inside the `onEvent` block, use
        two\n`setProperty` blocks to move the smiley somewhere else (it doesn't really\nmatter
        where for now). Test your program by running it and clicking on the\nsmiley."
      CSD U6 setProperty xy click_2019: "# Changing With a Click\\\r\n\n\\\r\nIt's\nnot
        really useful to only set a property when your program is run. After all,\nyou
        could just do all of that in Design Mode. When you use an `onEvent` block\nwith
        `setProperty`, you're able to do things you couldn't do with Design\nMode
        alone.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nWe've provided an empty `onEvent`
        block\nthat's watching the \"smiley\" image. Inside the `onEvent` block, use
        two\n`setProperty` blocks to move the smiley somewhere else (it doesn't really\nmatter
        where for now). Test your program by running it and clicking on the\nsmiley."
      CSD U6 setProperty xy random: "<img src=\"https://images.code.org/67c6cc358b235e2c2ae39f3f72a3e0b1-image-1507326303839.gif\"\nstyle=\"float:right;
        max-width: 150px; margin: 10px;\">\\\r\n\\\r\n\n# Randomization\\\r\n\n\\\r\nMoving\non
        the first click is fine, but this smiley would be even cooler if it moved\nsomewhere
        new _every time_ we clicked. Fortunately, we can use the `randomNumber`\nblock
        to do just that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInstead of setting the
        \"x\"\nand \"y\" properties to a specific number, use the `randomNumber` block
        to\npick a new random \"x\" and \"y\" each time the smiley is clicked.\\\r\n\\\r\n_Tip:\nThe
        App Lab screen is 320 pixels wide by 450 pixels tall. What range of random\nnumbers
        will ensure that the smiley is always visible on screen?_\\\r"
      CSD U6 setProperty xy random_2018: "<img src=\"https://images.code.org/67c6cc358b235e2c2ae39f3f72a3e0b1-image-1507326303839.gif\"\nstyle=\"float:right;
        max-width: 150px; margin: 10px;\">\\\r\n\\\r\n\n# Randomization\\\r\n\n\\\r\nMoving\non
        the first click is fine, but this smiley would be even cooler if it moved\nsomewhere
        new _every time_ we clicked. Fortunately, we can use the `randomNumber`\nblock
        to do just that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInstead of setting the
        \"x\"\nand \"y\" properties to a specific number, use the `randomNumber` block
        to\npick a new random \"x\" and \"y\" each time the smiley is clicked.\\\r\n\\\r\n_Tip:\nThe
        App Lab screen is 320 pixels wide by 450 pixels tall. What range of random\nnumbers
        will ensure that the smiley is always visible on screen?_\\\r"
      CSD U6 setProperty xy random_2019: "<img src=\"https://images.code.org/67c6cc358b235e2c2ae39f3f72a3e0b1-image-1507326303839.gif\"\nstyle=\"float:right;
        max-width: 150px; margin: 10px;\">\\\r\n\\\r\n\n# Randomization\\\r\n\n\\\r\nMoving\non
        the first click is fine, but this smiley would be even cooler if it moved\nsomewhere
        new _every time_ we clicked. Fortunately, we can use the `randomNumber`\nblock
        to do just that.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInstead of setting the
        \"x\"\nand \"y\" properties to a specific number, use the `randomNumber` block
        to\npick a new random \"x\" and \"y\" each time the smiley is clicked.\\\r\n\\\r\n_Tip:\nThe
        App Lab screen is 320 pixels wide by 450 pixels tall. What range of random\nnumbers
        will ensure that the smiley is always visible on screen?_\\\r"
      CSD U6 slider intro: "# Sliders\\\r\n\n\\\r\nLast time, your\nusers were only
        able to choose between a short and long buzz.  To give the\nuser control over
        the exact duration of the buzzer, you'll want to use a\nslider.\\\r\n\\\r\nThis
        slider lets users choose a value between 100 and 1000\nfor the duration of
        the buzz, but there's something not quite right about\nhow it's working.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Look over the code and find the\n    bug that's keeping
        the duration from being set correctly.\\\r\n    \\\\t\\* (Hint: Hover\n    over
        the yellow triangles for clues as to what might be wrong with the code.)"
      CSD U6 slider intro_2018: "# Sliders\\\r\n\n\\\r\nLast time, your\nusers were
        only able to choose between a short and long buzz.  To give the\nuser control
        over the exact duration of the buzzer, you'll want to use a\nslider.\\\r\n\\\r\nThis
        slider lets users choose a value between 100 and 1000\nfor the duration of
        the buzz, but there's something not quite right about\nhow it's working.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Look over the code and find the\n    bug that's keeping
        the duration from being set correctly.\\\r\n    \\\\t\\* (Hint: Hover\n    over
        the yellow triangles for clues as to what might be wrong with the code.)"
      CSD U6 slider intro_2019: "# Sliders\\\r\n\n\\\r\nLast time, your\nusers were
        only able to choose between a short and long buzz.  To give the\nuser control
        over the exact duration of the buzzer, you'll want to use a\nslider.\\\r\n\\\r\nThis
        slider lets users choose a value between 100 and 1000\nfor the duration of
        the buzz, but there's something not quite right about\nhow it's working.\\\r\n\\\r\n\n##
        Do This\\\r\n\n-   Look over the code and find the\n    bug that's keeping
        the duration from being set correctly.\\\r\n    \\\\t\\* (Hint: Hover\n    over
        the yellow triangles for clues as to what might be wrong with the code.)"
      CSD U6 test LED: "# Prenez le contrôle de la LED\\\r\n\n\\\r\nMaintenant que
        vous savez que le circuit est opérationnel, vous pouvez utiliser les différents
        blocs LED\\\r\n\\\r\n\n# \n\nExpérimentez ceci :\\\r\n\n-   Cliquez \"Démarrer\"
        et discuter avec votre partenaire comment le code fonctionne.\\\r\n-   Essayez
        les différents blocs LED pour voir leur action.\\\r\n-   Astuce: N'oubliez
        pas de cliquez \"Réinitialiser\" et de relancer votre programme à chaque modification"
      CSD U6 test LED_2018: "# Prenez le contrôle de la LED\\\r\n\n\\\r\nMaintenant
        que vous savez que le circuit est opérationnel, vous pouvez utiliser les différents
        blocs LED\\\r\n\\\r\n\n# \n\nExpérimentez ceci :\\\r\n\n-   Cliquez \"Démarrer\"
        et discuter avec votre partenaire comment le code fonctionne.\\\r\n-   Essayez
        les différents blocs LED pour voir leur action.\\\r\n-   Astuce: N'oubliez
        pas de cliquez \"Réinitialiser\" et de relancer votre programme à chaque modification"
      CSD U6 test LED_2019: "# Prenez le contrôle de la LED\\\r\n\n\\\r\nMaintenant
        que vous savez que le circuit est opérationnel, vous pouvez utiliser les différents
        blocs LED\\\r\n\\\r\n\n# \n\nExpérimentez ceci :\\\r\n\n-   Cliquez \"Démarrer\"
        et discuter avec votre partenaire comment le code fonctionne.\\\r\n-   Essayez
        les différents blocs LED pour voir leur action.\\\r\n-   Astuce: N'oubliez
        pas de cliquez \"Réinitialiser\" et de relancer votre programme à chaque modification"
      CSD U6 tugowar buzzer: "# Winning Buzzer\\\r\n\n\\\r\nThat last\nthing that
        that is missing from your project guide's description of this\nproject is
        the buzzer. It should buzz a high tone if player 1 wins and a low\ntone if
        player 2 wins. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSo far we've been able
        to\njust use the `player` parameter directly to report which player won, but
        that\nwon't work for buzzing different sounds. Inside the conditional that
        checks\nif a player won, you'll need to add _another_ conditional that checks
        which\nplayer it was. If `player == \"red\"` the buzzer should play a high
        note,\notherwise (else) it should play a low note."
      CSD U6 tugowar buzzer_2018: "# Winning Buzzer\\\r\n\n\\\r\nThat last\nthing
        that that is missing from your project guide's description of this\nproject
        is the buzzer. It should buzz a high tone if player 1 wins and a low\ntone
        if player 2 wins. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSo far we've been able
        to\njust use the `player` parameter directly to report which player won, but
        that\nwon't work for buzzing different sounds. Inside the conditional that
        checks\nif a player won, you'll need to add _another_ conditional that checks
        which\nplayer it was. If `player == \"red\"` the buzzer should play a high
        note,\notherwise (else) it should play a low note."
      CSD U6 tugowar buzzer_2019: "# Winning Buzzer\\\r\n\n\\\r\nThat last\nthing
        that that is missing from your project guide's description of this\nproject
        is the buzzer. It should buzz a high tone if player 1 wins and a low\ntone
        if player 2 wins. \\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSo far we've been able
        to\njust use the `player` parameter directly to report which player won, but
        that\nwon't work for buzzing different sounds. Inside the conditional that
        checks\nif a player won, you'll need to add _another_ conditional that checks
        which\nplayer it was. If `player == \"red\"` the buzzer should play a high
        note,\notherwise (else) it should play a low note."
      CSD U6 tugowar conditional: "# Check for a Winner\\\r\n\n\\\r\nYour\ngame should
        be pretty playable by now. Two players can click their respective\nbuttons,
        and their emojies will race down the screen. We still need a way\nfor a player
        to win though.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing a conditional inside\nthe
        `checkWin()` function, you want to check if a player has won each time\nthey
        click. For now, we can just use `console.log` to report the winner.\\\r\n\\\r\n\\*\nAdd
        an if statement to the bottom of `checkWin()`\\\r\n\n-   For the condition
        of\n    your if statement, check if `player_y` is greater than 350 (or use
        the bottom\n    of screen value you decided on in the last level)\\\r\n-   In
        your conditional,\n    add a `console.log` that reports which player won\\\r\n-
        \  Test your program to\n    make sure that it reports a winner when one of
        the emojis makes it to the\n    bottom of the screen"
      CSD U6 tugowar conditional_2018: "# Check for a Winner\\\r\n\n\\\r\nYour\ngame
        should be pretty playable by now. Two players can click their respective\nbuttons,
        and their emojies will race down the screen. We still need a way\nfor a player
        to win though.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing a conditional inside\nthe
        `checkWin()` function, you want to check if a player has won each time\nthey
        click. For now, we can just use `console.log` to report the winner.\\\r\n\\\r\n\\*\nAdd
        an if statement to the bottom of `checkWin()`\\\r\n\n-   For the condition
        of\n    your if statement, check if `player_y` is greater than 350 (or use
        the bottom\n    of screen value you decided on in the last level)\\\r\n-   In
        your conditional,\n    add a `console.log` that reports which player won\\\r\n-
        \  Test your program to\n    make sure that it reports a winner when one of
        the emojis makes it to the\n    bottom of the screen"
      CSD U6 tugowar conditional_2019: "# Check for a Winner\\\r\n\n\\\r\nYour\ngame
        should be pretty playable by now. Two players can click their respective\nbuttons,
        and their emojies will race down the screen. We still need a way\nfor a player
        to win though.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing a conditional inside\nthe
        `checkWin()` function, you want to check if a player has won each time\nthey
        click. For now, we can just use `console.log` to report the winner.\\\r\n\\\r\n\\*\nAdd
        an if statement to the bottom of `checkWin()`\\\r\n\n-   For the condition
        of\n    your if statement, check if `player_y` is greater than 350 (or use
        the bottom\n    of screen value you decided on in the last level)\\\r\n-   In
        your conditional,\n    add a `console.log` that reports which player won\\\r\n-
        \  Test your program to\n    make sure that it reports a winner when one of
        the emojis makes it to the\n    bottom of the screen"
      CSD U6 tugowar demo: "# Grab that Bug!\\\r\n\n\\\r\nThis is\nan example of a
        tug o' war game that you'll build by the end of this lesson.\nTo play, pair
        up with another student. The student on the left will the click\nthe left
        button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get the bug over to their\nside
        first wins."
      CSD U6 tugowar demo_2018: "# Grab that Bug!\\\r\n\n\\\r\nThis is\nan example
        of a tug o' war game that you'll build by the end of this lesson.\nTo play,
        pair up with another student. The student on the left will the click\nthe
        left button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get the bug over to their\nside
        first wins."
      CSD U6 tugowar demo_2019: "# Grab that Bug!\\\r\n\n\\\r\nThis is\nan example
        of a tug o' war game that you'll build by the end of this lesson.\nTo play,
        pair up with another student. The student on the left will the click\nthe
        left button on the Circuit Playground as fast as they can, while the student\non
        the right clicks the right button. Whoever can get the bug over to their\nside
        first wins."
      CSD U6 tugowar design 1: "# Getting Started: Screen Design\\\r\n\n\\\r\nYou\nshould
        have already reviewed the planning guide for this project. Some of\nthe work
        to turn this project guide into a working program has already been\nstarted.
        Based on the project guide you're going to do the rest of this work.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already created a \"start\" screen and included
        a title\nand \"play\" button. Using your planning guide, finish creating this
        screen.\nSpecifically you'll want to:\\\r\n\\\r\n\n-   Update the title text
        to say \"Emoji\n    Race\"\\\r\n-   Add instructions for playing using the
        ID \"instructions\"\\\r\n    \\\r\n    Feel\n    free to add any other design
        tweaks that you'd like."
      CSD U6 tugowar design 1.5: "# Game Screen Design\\\r\n\n\\\r\nWe've\nalso added
        a \"game\" screen where the game will be played. It just needs\na couple of
        tweaks.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSwitch to the \"game\" screen\nand,
        using your planning guide, fix this screen by changing the color of the\ntwo
        emoji images.\\\r\n\\\r\nFeel free to add any other design tweaks that you'd\nlike."
      CSD U6 tugowar design 1.5_2018: "# Game Screen Design\\\r\n\n\\\r\nWe've\nalso
        added a \"game\" screen where the game will be played. It just needs\na couple
        of tweaks.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSwitch to the \"game\" screen\nand,
        using your planning guide, fix this screen by changing the color of the\ntwo
        emoji images.\\\r\n\\\r\nFeel free to add any other design tweaks that you'd\nlike."
      CSD U6 tugowar design 1.5_2019: "# Game Screen Design\\\r\n\n\\\r\nWe've\nalso
        added a \"game\" screen where the game will be played. It just needs\na couple
        of tweaks.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nSwitch to the \"game\" screen\nand,
        using your planning guide, fix this screen by changing the color of the\ntwo
        emoji images.\\\r\n\\\r\nFeel free to add any other design tweaks that you'd\nlike."
      CSD U6 tugowar design 1_2018: "# Getting Started: Screen Design\\\r\n\n\\\r\nYou\nshould
        have already reviewed the planning guide for this project. Some of\nthe work
        to turn this project guide into a working program has already been\nstarted.
        Based on the project guide you're going to do the rest of this work.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already created a \"start\" screen and included
        a title\nand \"play\" button. Using your planning guide, finish creating this
        screen.\nSpecifically you'll want to:\\\r\n\\\r\n\n-   Update the title text
        to say \"Emoji\n    Race\"\\\r\n-   Add instructions for playing using the
        ID \"instructions\"\\\r\n    \\\r\n    Feel\n    free to add any other design
        tweaks that you'd like."
      CSD U6 tugowar design 1_2019: "# Getting Started: Screen Design\\\r\n\n\\\r\nYou\nshould
        have already reviewed the planning guide for this project. Some of\nthe work
        to turn this project guide into a working program has already been\nstarted.
        Based on the project guide you're going to do the rest of this work.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already created a \"start\" screen and included
        a title\nand \"play\" button. Using your planning guide, finish creating this
        screen.\nSpecifically you'll want to:\\\r\n\\\r\n\n-   Update the title text
        to say \"Emoji\n    Race\"\\\r\n-   Add instructions for playing using the
        ID \"instructions\"\\\r\n    \\\r\n    Feel\n    free to add any other design
        tweaks that you'd like."
      CSD U6 tugowar design 2: "# Designing the Win Screen\\\r\n\n\\\r\nThe\nfinal
        screen in this program shows who won. It's totally blank right now.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nSwitch to \"win\" and design it based on your project
        guide.\nMake sure to pay close attention to the ID of each element. Once you've
        added\nthe required elements, feel free to add any other design tweaks that
        you'd\nlike."
      CSD U6 tugowar design 2_2018: "# Designing the Win Screen\\\r\n\n\\\r\nThe\nfinal
        screen in this program shows who won. It's totally blank right now.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nSwitch to \"win\" and design it based on your project
        guide.\nMake sure to pay close attention to the ID of each element. Once you've
        added\nthe required elements, feel free to add any other design tweaks that
        you'd\nlike."
      CSD U6 tugowar design 2_2019: "# Designing the Win Screen\\\r\n\n\\\r\nThe\nfinal
        screen in this program shows who won. It's totally blank right now.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nSwitch to \"win\" and design it based on your project
        guide.\nMake sure to pay close attention to the ID of each element. Once you've
        added\nthe required elements, feel free to add any other design tweaks that
        you'd\nlike."
      CSD U6 tugowar setProperty: "# Display the Winner\\\r\n\n\\\r\nThe\nwinning
        screen doesn't actually know _who_ won the game. Let's fix that\nnow.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nBefore each call to `setScreen`, add a `setProperty`\nblock
        to change the \"text\" property of \"winner\" to display the actual\nwinner."
      CSD U6 tugowar setProperty_2018: "# Display the Winner\\\r\n\n\\\r\nThe\nwinning
        screen doesn't actually know _who_ won the game. Let's fix that\nnow.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nBefore each call to `setScreen`, add a `setProperty`\nblock
        to change the \"text\" property of \"winner\" to display the actual\nwinner."
      CSD U6 tugowar setProperty_2019: "# Display the Winner\\\r\n\n\\\r\nThe\nwinning
        screen doesn't actually know _who_ won the game. Let's fix that\nnow.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nBefore each call to `setScreen`, add a `setProperty`\nblock
        to change the \"text\" property of \"winner\" to display the actual\nwinner."
      CSD U6 tugowar setScreen: "# Change to the Win Screen\\\r\n\n\\\r\nNow\nthat
        we have conditionals to check which player won, let's switch to the\n\"win\"
        screen when a player wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInside the
        conditional\nthat you've created to check if a player has reached the bottom,
        add a `setScreen`\nblock to change to the \"win\" screen. Make sure you test
        that your new code\nworks before moving on!"
      CSD U6 tugowar setScreen_2018: "# Change to the Win Screen\\\r\n\n\\\r\nNow\nthat
        we have conditionals to check which player won, let's switch to the\n\"win\"
        screen when a player wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInside the
        conditional\nthat you've created to check if a player has reached the bottom,
        add a `setScreen`\nblock to change to the \"win\" screen. Make sure you test
        that your new code\nworks before moving on!"
      CSD U6 tugowar setScreen_2019: "# Change to the Win Screen\\\r\n\n\\\r\nNow\nthat
        we have conditionals to check which player won, let's switch to the\n\"win\"
        screen when a player wins.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nInside the
        conditional\nthat you've created to check if a player has reached the bottom,
        add a `setScreen`\nblock to change to the \"win\" screen. Make sure you test
        that your new code\nworks before moving on!"
      CSD U6 tugowar variables 1: "# The startGame() Function\\\r\n\n\\\r\nIf\nyou
        look at the events we planned for in the planning guide, you may notice\nthat
        two events do essentially the same thing. The events that respond to\nboth
        the \"play\" and \"replay\" buttons could be written with identical code,\nbut
        duplicate code like this is a perfect place to use a **function**.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already added blocks that call a new function
        named\n`startGame()` to the appropriate event handlers, and we've created
        an empty\nfunction for you to build out. \\\r\n\\\r\n\n-   Find the `startGame()`
        function definition\n    ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Inside the function:\\\r\n    \\\\t\\*\n    Move both of the emoji
        images to the top of the screen by setting each one's\n    \"y\" property
        to 0\\\r\n    \\\\t\\* Change the screen to \"game\"\\\r\n    \\\r\n    Once
        you've\n    fleshed out the `startGame()` function, try clicking the \"play\"
        button to\n    check that it's working."
      CSD U6 tugowar variables 1_2018: "# The startGame() Function\\\r\n\n\\\r\nIf\nyou
        look at the events we planned for in the planning guide, you may notice\nthat
        two events do essentially the same thing. The events that respond to\nboth
        the \"play\" and \"replay\" buttons could be written with identical code,\nbut
        duplicate code like this is a perfect place to use a **function**.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already added blocks that call a new function
        named\n`startGame()` to the appropriate event handlers, and we've created
        an empty\nfunction for you to build out. \\\r\n\\\r\n\n-   Find the `startGame()`
        function definition\n    ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Inside the function:\\\r\n    \\\\t\\*\n    Move both of the emoji
        images to the top of the screen by setting each one's\n    \"y\" property
        to 0\\\r\n    \\\\t\\* Change the screen to \"game\"\\\r\n    \\\r\n    Once
        you've\n    fleshed out the `startGame()` function, try clicking the \"play\"
        button to\n    check that it's working."
      CSD U6 tugowar variables 1_2019: "# The startGame() Function\\\r\n\n\\\r\nIf\nyou
        look at the events we planned for in the planning guide, you may notice\nthat
        two events do essentially the same thing. The events that respond to\nboth
        the \"play\" and \"replay\" buttons could be written with identical code,\nbut
        duplicate code like this is a perfect place to use a **function**.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nWe've already added blocks that call a new function
        named\n`startGame()` to the appropriate event handlers, and we've created
        an empty\nfunction for you to build out. \\\r\n\\\r\n\n-   Find the `startGame()`
        function definition\n    ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Inside the function:\\\r\n    \\\\t\\*\n    Move both of the emoji
        images to the top of the screen by setting each one's\n    \"y\" property
        to 0\\\r\n    \\\\t\\* Change the screen to \"game\"\\\r\n    \\\r\n    Once
        you've\n    fleshed out the `startGame()` function, try clicking the \"play\"
        button to\n    check that it's working."
      CSD U6 tugowar variables 2: "# Functions with Parameters\\\r\n\n\\\r\nMost\nof
        the existing functions you use in App Lab need inputs, or **parameters**,\nto
        pass the function necessary information. For example, when changing a screen,\nyou
        pass the ID of that screen as a parameter, which looks like `setScreen(\"win\")`.\\\r\n\\\r\nThese\nparameters
        show up as a variable that can be used inside the function, and\nyou can create
        functions that use parameters too!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/2eccd9fc9f4887aefd0bfd94d7f332c8-image-1509402194012.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\nInstead of a separate function to move
        the\nred and the blue players, we've created one function called `movePlayer()`\nthat
        takes the ID of the player image as a parameter called `player`. Inside\nthis
        function, you can use `player` any place where you need to specify the\nID
        of the player you want to control.\\\r\n\\\r\n* Find where `movePlayer()`
        is\ndefined ( [Show me where](#triggercallout=block_trigger) )\\\r\n* Inside
        the\n`movePlayer()` definition:\\\r\n  * Get the current \"y\" property of
        the player\nand save it to a variable called `player_y`\\\r\n  * Increase
        the value of `player_y`\nby 10\\\r\n  * Set the \"y\" property of player to
        your new value `player_y`\\\r\n\\\r\nOnce\nyou've added your code, test it.
        You should see that _both buttons_ work\neven though we only created one function
        - cool!"
      CSD U6 tugowar variables 2_2018: "# Functions with Parameters\\\r\n\n\\\r\nMost\nof
        the existing functions you use in App Lab need inputs, or **parameters**,\nto
        pass the function necessary information. For example, when changing a screen,\nyou
        pass the ID of that screen as a parameter, which looks like `setScreen(\"win\")`.\\\r\n\\\r\nThese\nparameters
        show up as a variable that can be used inside the function, and\nyou can create
        functions that use parameters too!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/2eccd9fc9f4887aefd0bfd94d7f332c8-image-1509402194012.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\nInstead of a separate function to move
        the\nred and the blue players, we've created one function called `movePlayer()`\nthat
        takes the ID of the player image as a parameter called `player`. Inside\nthis
        function, you can use `player` any place where you need to specify the\nID
        of the player you want to control.\\\r\n\\\r\n* Find where `movePlayer()`
        is\ndefined ( [Show me where](#triggercallout=block_trigger) )\\\r\n* Inside
        the\n`movePlayer()` definition:\\\r\n  * Get the current \"y\" property of
        the player\nand save it to a variable called `player_y`\\\r\n  * Increase
        the value of `player_y`\nby 10\\\r\n  * Set the \"y\" property of player to
        your new value `player_y`\\\r\n\\\r\nOnce\nyou've added your code, test it.
        You should see that _both buttons_ work\neven though we only created one function
        - cool!"
      CSD U6 tugowar variables 2_2019: "# Functions with Parameters\\\r\n\n\\\r\nMost\nof
        the existing functions you use in App Lab need inputs, or **parameters**,\nto
        pass the function necessary information. For example, when changing a screen,\nyou
        pass the ID of that screen as a parameter, which looks like `setScreen(\"win\")`.\\\r\n\\\r\nThese\nparameters
        show up as a variable that can be used inside the function, and\nyou can create
        functions that use parameters too!\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n<div\nmarkdown=\"1\"
        style=\"float:right; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/2eccd9fc9f4887aefd0bfd94d7f332c8-image-1509402194012.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\nInstead of a separate function to move
        the\nred and the blue players, we've created one function called `movePlayer()`\nthat
        takes the ID of the player image as a parameter called `player`. Inside\nthis
        function, you can use `player` any place where you need to specify the\nID
        of the player you want to control.\\\r\n\\\r\n* Find where `movePlayer()`
        is\ndefined ( [Show me where](#triggercallout=block_trigger) )\\\r\n* Inside
        the\n`movePlayer()` definition:\\\r\n  * Get the current \"y\" property of
        the player\nand save it to a variable called `player_y`\\\r\n  * Increase
        the value of `player_y`\nby 10\\\r\n  * Set the \"y\" property of player to
        your new value `player_y`\\\r\n\\\r\nOnce\nyou've added your code, test it.
        You should see that _both buttons_ work\neven though we only created one function
        - cool!"
      CSD U6 tugowar variables 3: "# The checkWin() Function\\\r\n\n\\\r\nThe\nlast
        function that you need to figure out is the `checkWin()` function, which\nafter
        each player is moved, and is used to both check if that player has made\nit
        to the bottom of the screen and to announce the winner if necessary. For\nnow,
        we're just going to find out where the player is and log it to the console.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nJust like the `movePlayer()` function, `checkWin()`
        takes a\nsingle parameter called `player`. If you call `checkWin(\"red\")`,
        then the\nvariable `player` will have the value \"red\".\\\r\n\\\r\n\n-   Find
        where the function\n    is defined ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Create\n    a variable called `player_y` and assign it the \"y\"
        property of the player\\\r\n-   \\*\n    Use either a `console.log()` command
        or a watcher to report the value of `player_y`\\\r\n-   \\*\n    Play the
        game with only one button, keeping an eye on the value of `player_y`\\\r\n-
        \  \\*\n    Decide what value of `player_y` should be considered the bottom
        of the screen"
      CSD U6 tugowar variables 3_2018: "# The checkWin() Function\\\r\n\n\\\r\nThe\nlast
        function that you need to figure out is the `checkWin()` function, which\nafter
        each player is moved, and is used to both check if that player has made\nit
        to the bottom of the screen and to announce the winner if necessary. For\nnow,
        we're just going to find out where the player is and log it to the console.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nJust like the `movePlayer()` function, `checkWin()`
        takes a\nsingle parameter called `player`. If you call `checkWin(\"red\")`,
        then the\nvariable `player` will have the value \"red\".\\\r\n\\\r\n\n-   Find
        where the function\n    is defined ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Create\n    a variable called `player_y` and assign it the \"y\"
        property of the player\\\r\n-   \\*\n    Use either a `console.log()` command
        or a watcher to report the value of `player_y`\\\r\n-   \\*\n    Play the
        game with only one button, keeping an eye on the value of `player_y`\\\r\n-
        \  \\*\n    Decide what value of `player_y` should be considered the bottom
        of the screen"
      CSD U6 tugowar variables 3_2019: "# The checkWin() Function\\\r\n\n\\\r\nThe\nlast
        function that you need to figure out is the `checkWin()` function, which\nafter
        each player is moved, and is used to both check if that player has made\nit
        to the bottom of the screen and to announce the winner if necessary. For\nnow,
        we're just going to find out where the player is and log it to the console.\\\r\n\\\r\n\n#
        \n\nDo This\\\r\n\\\r\nJust like the `movePlayer()` function, `checkWin()`
        takes a\nsingle parameter called `player`. If you call `checkWin(\"red\")`,
        then the\nvariable `player` will have the value \"red\".\\\r\n\\\r\n\n-   Find
        where the function\n    is defined ( [Show me where](#triggercallout=block_trigger)
        )\\\r\n-   Create\n    a variable called `player_y` and assign it the \"y\"
        property of the player\\\r\n-   \\*\n    Use either a `console.log()` command
        or a watcher to report the value of `player_y`\\\r\n-   \\*\n    Play the
        game with only one button, keeping an eye on the value of `player_y`\\\r\n-
        \  \\*\n    Decide what value of `player_y` should be considered the bottom
        of the screen"
      CSDU2 - Type Anything: |-
        <img src = "https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg" style = "width: 400px; float: right">

        # Bienvenue au Web Lab!

         La plateforme dans laquelle vous vous trouvez s'appelle Web Lab.  Il existe trois parties principales de l’écran dans Web Lab.

        # Faites ceci

        -   Essayez de taper quelque chose dans l'espace de travail.
        -   Appuyez sur <img src = "https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-149322666060.14.14 AM.png" style = "width: 150px"> pour le voir dans la zone d’aperçu!
      CSDU2 - Type Anything_2018: |-
        <img src = "https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg" style = "width: 400px; float: right">

        # Bienvenue au Web Lab!

         La plateforme dans laquelle vous vous trouvez s'appelle Web Lab.  Il existe trois parties principales de l’écran dans Web Lab.

        # Faites ceci

        -   Essayez de taper quelque chose dans l'espace de travail.
        -   Appuyez sur <img src = "https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-149322666060.14.14 AM.png" style = "width: 150px"> pour le voir dans la zone d’aperçu!
      CSDU2 - Type Anything_2019: |-
        <img src = "https://images.code.org/12ffe6980a25a3664eabe69be487a921-image-1485384422334.jpg" style = "width: 400px; float: right">

        # Bienvenue au Web Lab!

         La plateforme dans laquelle vous vous trouvez s'appelle Web Lab.  Il existe trois parties principales de l’écran dans Web Lab.

        # Faites ceci

        -   Essayez de taper quelque chose dans l'espace de travail.
        -   Appuyez sur <img src = "https://images.code.org/678619085e37ea6ce904ac8abd0df2f2-image-149322666060.14.14 AM.png" style = "width: 150px"> pour le voir dans la zone d’aperçu!
      CSDU4 Project Events: "# Linking Screens\\\r\n\n\\\r\nWith all\nof your screens
        in place you can start adding events that will change the\nscreens. When you're
        done with this step you'll actually have an interactive\nprototype!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nFor each screen of your app:\\\r\n\\\r\n\n-   Find\n
        \   all of the button IDs\\\r\n-   For each button, add an event handler that
        watches\n    that ID\\\r\n-   In each event handler, use `setScreen()` to
        move the the right\n    screen\\\r\n-   Test it all out!\\\r\n    \\\r\n    Depending
        on the number of screens and\n    buttons your app has, this can be a pretty
        involved process. Make sure that\n    you test your work often, using `console.log()`
        blocks to debug any strange\n    behavior with your app. When you think you've
        got the whole thing working,\n    compare your app with other members of your
        group to see if they work the\n    same."
      CSDU4 Project Events_2018: "# Linking Screens\\\r\n\n\\\r\nWith all\nof your
        screens in place you can start adding events that will change the\nscreens.
        When you're done with this step you'll actually have an interactive\nprototype!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nFor each screen of your app:\\\r\n\\\r\n\n-   Find\n
        \   all of the button IDs\\\r\n-   For each button, add an event handler that
        watches\n    that ID\\\r\n-   In each event handler, use `setScreen()` to
        move the the right\n    screen\\\r\n-   Test it all out!\\\r\n    \\\r\n    Depending
        on the number of screens and\n    buttons your app has, this can be a pretty
        involved process. Make sure that\n    you test your work often, using `console.log()`
        blocks to debug any strange\n    behavior with your app. When you think you've
        got the whole thing working,\n    compare your app with other members of your
        group to see if they work the\n    same."
      CSDU4 Project Events_2019: "# Linking Screens\\\r\n\n\\\r\nWith all\nof your
        screens in place you can start adding events that will change the\nscreens.
        When you're done with this step you'll actually have an interactive\nprototype!\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\nFor each screen of your app:\\\r\n\\\r\n\n-   Find\n
        \   all of the button IDs\\\r\n-   For each button, add an event handler that
        watches\n    that ID\\\r\n-   In each event handler, use `setScreen()` to
        move the the right\n    screen\\\r\n-   Test it all out!\\\r\n    \\\r\n    Depending
        on the number of screens and\n    buttons your app has, this can be a pretty
        involved process. Make sure that\n    you test your work often, using `console.log()`
        blocks to debug any strange\n    behavior with your app. When you think you've
        got the whole thing working,\n    compare your app with other members of your
        group to see if they work the\n    same."
      CSDU6 - LED buttonL: "# Utilisation des évènements du circuit\\\r\n\n\\\r\nPour
        le moment, la LED s'allume quand on appuie sur le bouton de gauche (`buttonL`).
        Elle devrait s'éteindre quand on appuie sur le bouton de droite (`buttonR`).\\\r\n\\\r\n\n<div\nstyle=\"float:right;\"
        markdown=1>\r\n\r\n![expandable](https://images.code.org/402489ec13fb6c6f38910829a9633ac3-image-1510874304220.png)\n\r\n\r\n</div>\r\n\r\n#
        Fais ceci\r\n\r\n* Ajoute un autre bloc `onBoardEvent()` pour éteindre la
        LED quand on appuie sur le bouton de droite."
      CSDU6 - LED buttonL_2018: "# Utilisation des évènements du circuit\\\r\n\n\\\r\nPour
        le moment, la LED s'allume quand on appuie sur le bouton de gauche (`buttonL`).
        Elle devrait s'éteindre quand on appuie sur le bouton de droite (`buttonR`).\\\r\n\\\r\n\n<div\nstyle=\"float:right;\"
        markdown=1>\r\n\r\n![expandable](https://images.code.org/402489ec13fb6c6f38910829a9633ac3-image-1510874304220.png)\n\r\n\r\n</div>\r\n\r\n#
        Fais ceci\r\n\r\n* Ajoute un autre bloc `onBoardEvent()` pour éteindre la
        LED quand on appuie sur le bouton de droite."
      CSDU6 - LED buttonL_2019: "# Utilisation des évènements du circuit\\\r\n\n\\\r\nPour
        le moment, la LED s'allume quand on appuie sur le bouton de gauche (`buttonL`).
        Elle devrait s'éteindre quand on appuie sur le bouton de droite (`buttonR`).\\\r\n\\\r\n\n<div\nstyle=\"float:right;\"
        markdown=1>\r\n\r\n![expandable](https://images.code.org/402489ec13fb6c6f38910829a9633ac3-image-1510874304220.png)\n\r\n\r\n</div>\r\n\r\n#
        Fais ceci\r\n\r\n* Ajoute un autre bloc `onBoardEvent()` pour éteindre la
        LED quand on appuie sur le bouton de droite."
      CSDU6 - LED toggle buttonL up: "# Autres évènements du circuit avec les boutons\\\r\n\n\\\r\nAu
        lieu d'utiliser le bouton de droite, tu peux éteindre la LED quand le bouton
        de gauche est relâché.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Créé un évènement
        'up' pour le bouton de gauche.\\\r\n-   Ajoute du code pour éteindre la LED
        quand le bouton est relâché."
      CSDU6 - LED toggle buttonL up_2018: "# Autres évènements du circuit avec les
        boutons\\\r\n\n\\\r\nAu lieu d'utiliser le bouton de droite, tu peux éteindre
        la LED quand le bouton de gauche est relâché.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Créé un évènement 'up' pour le bouton de gauche.\\\r\n-   Ajoute du code
        pour éteindre la LED quand le bouton est relâché."
      CSDU6 - LED toggle buttonL up_2019: "# Autres évènements du circuit avec les
        boutons\\\r\n\n\\\r\nAu lieu d'utiliser le bouton de droite, tu peux éteindre
        la LED quand le bouton de gauche est relâché.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Créé un évènement 'up' pour le bouton de gauche.\\\r\n-   Ajoute du code
        pour éteindre la LED quand le bouton est relâché."
      CSDU6 - board event challenge_2018: "# Challenge: Sound Board\\\r\n\n\\\r\nCheck\nwith
        your teacher before starting the challenge.\\\r\n\\\r\nNow that you know\nhow
        to use board events, the buttons, switch, and the buzzer, try making a\nprogram
        that turns your board into a sound board when you press the buttons\nor flip
        the switch. Play around with the duration and frequencies of the sounds,\nand
        listen to how it turns out."
      CSDU6 - board event challenge_2019: "# Challenge: Sound Board\\\r\n\n\\\r\nCheck\nwith
        your teacher before starting the challenge.\\\r\n\\\r\nNow that you know\nhow
        to use board events, the buttons, switch, and the buzzer, try making a\nprogram
        that turns your board into a sound board when you press the buttons\nor flip
        the switch. Play around with the duration and frequencies of the sounds,\nand
        listen to how it turns out."
      CSDU6 - buzzer duration: "# Durée du buzzer\\\r\n\n\\\r\nComme tu l'as remarqué,
        `buzzer.frequency()` a deux paramètres: la fréquence et la durée. Ces deux
        paramètres prennent un nombre en entrée.\\\r\n\\\r\n\n-   La fréquence change
        le son du buzzer. Plus tu utilises un grand nombre, puis le son du buzzer
        sera aigu.\\\r\n    \\\r\n-   La durée détermine combien de millisecondes
        le buzzer va jouer ce son.\\\r\n    \\\r\n    Pour le moment, nous allons
        nous concentrer sur la durée, le second paramètre.\\\r\n    \\\r\n    \\\r\n
        \   # Fais ceci\\\r\n    Essaie ces quelques actions sur la durée :\\\r\n
        \   \\\r\n-   Change la durée du buzzer avec une valeur plus longue que 100.\\\r\n-
        \  Essaie d'utiliser une durée de 0, que se passe-t-il?\\\r\n    \\\r\n    Démarre
        le programme plusieurs fois pour voir l'influence de tes changements avant
        de passer à la suite."
      CSDU6 - buzzer duration buttons: "# Le buzzer et les boutons\\\r\n\n\\\r\nCe
        programme doit utiliser les boutons pour jouer des sons longs ou courts\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n-   Change le paramètre de durée de `buzzer.frequency` pour
        que le bouton de gauche joue un son long, et que le bouton de droite joue
        un son court."
      CSDU6 - buzzer duration buttons_2018: "# Le buzzer et les boutons\\\r\n\n\\\r\nCe
        programme doit utiliser les boutons pour jouer des sons longs ou courts\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n-   Change le paramètre de durée de `buzzer.frequency` pour
        que le bouton de gauche joue un son long, et que le bouton de droite joue
        un son court."
      CSDU6 - buzzer duration buttons_2019: "# Le buzzer et les boutons\\\r\n\n\\\r\nCe
        programme doit utiliser les boutons pour jouer des sons longs ou courts\\\r\n\\\r\n\n#
        Fais ceci\\\r\n\n-   Change le paramètre de durée de `buzzer.frequency` pour
        que le bouton de gauche joue un son long, et que le bouton de droite joue
        un son court."
      CSDU6 - buzzer duration_2018: "# Durée du buzzer\\\r\n\n\\\r\nComme tu l'as
        remarqué, `buzzer.frequency()` a deux paramètres: la fréquence et la durée.
        Ces deux paramètres prennent un nombre en entrée.\\\r\n\\\r\n\n-   La fréquence
        change le son du buzzer. Plus tu utilises un grand nombre, puis le son du
        buzzer sera aigu.\\\r\n    \\\r\n-   La durée détermine combien de millisecondes
        le buzzer va jouer ce son.\\\r\n    \\\r\n    Pour le moment, nous allons
        nous concentrer sur la durée, le second paramètre.\\\r\n    \\\r\n    \\\r\n
        \   # Fais ceci\\\r\n    Essaie ces quelques actions sur la durée :\\\r\n
        \   \\\r\n-   Change la durée du buzzer avec une valeur plus longue que 100.\\\r\n-
        \  Essaie d'utiliser une durée de 0, que se passe-t-il?\\\r\n    \\\r\n    Démarre
        le programme plusieurs fois pour voir l'influence de tes changements avant
        de passer à la suite."
      CSDU6 - buzzer duration_2019: "# Durée du buzzer\\\r\n\n\\\r\nComme tu l'as
        remarqué, `buzzer.frequency()` a deux paramètres: la fréquence et la durée.
        Ces deux paramètres prennent un nombre en entrée.\\\r\n\\\r\n\n-   La fréquence
        change le son du buzzer. Plus tu utilises un grand nombre, puis le son du
        buzzer sera aigu.\\\r\n    \\\r\n-   La durée détermine combien de millisecondes
        le buzzer va jouer ce son.\\\r\n    \\\r\n    Pour le moment, nous allons
        nous concentrer sur la durée, le second paramètre.\\\r\n    \\\r\n    \\\r\n
        \   # Fais ceci\\\r\n    Essaie ces quelques actions sur la durée :\\\r\n
        \   \\\r\n-   Change la durée du buzzer avec une valeur plus longue que 100.\\\r\n-
        \  Essaie d'utiliser une durée de 0, que se passe-t-il?\\\r\n    \\\r\n    Démarre
        le programme plusieurs fois pour voir l'influence de tes changements avant
        de passer à la suite."
      CSDU6 - buzzer intro: "# Utilisation du buzzer\\\r\n\n\\\r\nTu peux utiliser
        le buzzer de plusieurs manières différentes, mais pour le moment, nous allons
        seulement utiliser `buzzer.frequency()`.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Prend un bloc `buzzer.frequency()` dans la boîte à outils et expérimente
        un peu avec. Tu remarqueras qu'il a deux paramètres. Que se passe-t-il si
        tu changes l'un ou l'autre de ces paramètres? Ou les deux en même temps?\\\r\n-
        \  Démarre le programme et apprécie la musique du Circuit Playground."
      CSDU6 - buzzer intro_2018: "# Utilisation du buzzer\\\r\n\n\\\r\nTu peux utiliser
        le buzzer de plusieurs manières différentes, mais pour le moment, nous allons
        seulement utiliser `buzzer.frequency()`.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Prend un bloc `buzzer.frequency()` dans la boîte à outils et expérimente
        un peu avec. Tu remarqueras qu'il a deux paramètres. Que se passe-t-il si
        tu changes l'un ou l'autre de ces paramètres? Ou les deux en même temps?\\\r\n-
        \  Démarre le programme et apprécie la musique du Circuit Playground."
      CSDU6 - buzzer intro_2019: "# Utilisation du buzzer\\\r\n\n\\\r\nTu peux utiliser
        le buzzer de plusieurs manières différentes, mais pour le moment, nous allons
        seulement utiliser `buzzer.frequency()`.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-
        \  Prend un bloc `buzzer.frequency()` dans la boîte à outils et expérimente
        un peu avec. Tu remarqueras qu'il a deux paramètres. Que se passe-t-il si
        tu changes l'un ou l'autre de ces paramètres? Ou les deux en même temps?\\\r\n-
        \  Démarre le programme et apprécie la musique du Circuit Playground."
      CSDU6 - final project 1: "# Designing the User Interface\\\r\n\n\\\r\nBefore\nworrying
        about the code for your program, start by laying out the user interface.\nAs
        you add elements in Design Mode, make sure to give everything a meaningful\nID.
        Even if you don't plan on accessing an element with code, making sure\nthat
        all of your IDs are descriptive will help make your program more readable\nand
        easier to program."
      CSDU6 - final project 1_2018: "# Designing the User Interface\\\r\n\n\\\r\nBefore\nworrying
        about the code for your program, start by laying out the user interface.\nAs
        you add elements in Design Mode, make sure to give everything a meaningful\nID.
        Even if you don't plan on accessing an element with code, making sure\nthat
        all of your IDs are descriptive will help make your program more readable\nand
        easier to program."
      CSDU6 - final project 1_2019: "# Designing the User Interface\\\r\n\n\\\r\nBefore\nworrying
        about the code for your program, start by laying out the user interface.\nAs
        you add elements in Design Mode, make sure to give everything a meaningful\nID.
        Even if you don't plan on accessing an element with code, making sure\nthat
        all of your IDs are descriptive will help make your program more readable\nand
        easier to program."
      CSDU6 - final project 2: "# Wiring Up the UI\\\r\n\n\\\r\nWith\nyour user interface
        in place, you can now add event handlers for your interface\nelements. At
        this point you may want to just include `console.log()` commands\nto make
        sure that your events are working as expected - you can add the functional\ncode
        later one."
      CSDU6 - final project 2_2018: "# Wiring Up the UI\\\r\n\n\\\r\nWith\nyour user
        interface in place, you can now add event handlers for your interface\nelements.
        At this point you may want to just include `console.log()` commands\nto make
        sure that your events are working as expected - you can add the functional\ncode
        later one."
      CSDU6 - final project 2_2019: "# Wiring Up the UI\\\r\n\n\\\r\nWith\nyour user
        interface in place, you can now add event handlers for your interface\nelements.
        At this point you may want to just include `console.log()` commands\nto make
        sure that your events are working as expected - you can add the functional\ncode
        later one."
      CSDU6 - final project 3: "# Board Input Events\\\r\n\n\\\r\nNow\nyou can add
        the events which will take input from the board. Again, feel free\nto just
        use `console.log()` statements at this point to ensure that your events\nare
        working."
      CSDU6 - final project 3_2018: "# Board Input Events\\\r\n\n\\\r\nNow\nyou can
        add the events which will take input from the board. Again, feel free\nto
        just use `console.log()` statements at this point to ensure that your events\nare
        working."
      CSDU6 - final project 3_2019: "# Board Input Events\\\r\n\n\\\r\nNow\nyou can
        add the events which will take input from the board. Again, feel free\nto
        just use `console.log()` statements at this point to ensure that your events\nare
        working."
      CSDU6 - final project 4: "# Functions\\\r\n\n\\\r\nCreate functions\nfor each
        piece of functionality in your program and call them from the event\nhandlers
        that you created earlier."
      CSDU6 - final project 4_2018: "# Functions\\\r\n\n\\\r\nCreate functions\nfor
        each piece of functionality in your program and call them from the event\nhandlers
        that you created earlier."
      CSDU6 - final project 4_2019: "# Functions\\\r\n\n\\\r\nCreate functions\nfor
        each piece of functionality in your program and call them from the event\nhandlers
        that you created earlier."
      CSDU6 - final project 5: "# Board Output\\\r\n\n\\\r\nIf you\nhaven't already,
        use some of the output elements on the board to communicate\nuseful information
        to the user."
      CSDU6 - final project 5_2018: "# Board Output\\\r\n\n\\\r\nIf you\nhaven't already,
        use some of the output elements on the board to communicate\nuseful information
        to the user."
      CSDU6 - final project 5_2019: "# Board Output\\\r\n\n\\\r\nIf you\nhaven't already,
        use some of the output elements on the board to communicate\nuseful information
        to the user."
      CSDU6 - final project 6: "# Finishing Touches\\\r\n\n\\\r\nAdd\nany finishing
        touches still needed to make your program awesome."
      CSDU6 - final project 6_2018: "# Finishing Touches\\\r\n\n\\\r\nAdd\nany finishing
        touches still needed to make your program awesome."
      CSDU6 - final project 6_2019: "# Finishing Touches\\\r\n\n\\\r\nAdd\nany finishing
        touches still needed to make your program awesome."
      CSDU6 - lightswitch toggleswitch: "# Utilisation de l'interrupteur\\\r\n\n\\\r\nL'interrupteur
        peut changer entre deux positions: allumé `open` et éteint `close`. Ce programme
        l'utilise pour faire un interrupteur pour la LED. Mais pour le moment, il
        ne peut qu'allumer la LED.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n\\\r\n\n-   Créé
        un nouvel événement pour l'interrupteur quand celui-ci devient `close`.\\\r\n-
        \  Ajoute du code pour que la lumière s'éteigne quand l'interrupteur passe
        `close`."
      CSDU6 - lightswitch toggleswitch_2018: "# Utilisation de l'interrupteur\\\r\n\n\\\r\nL'interrupteur
        peut changer entre deux positions: allumé `open` et éteint `close`. Ce programme
        l'utilise pour faire un interrupteur pour la LED. Mais pour le moment, il
        ne peut qu'allumer la LED.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n\\\r\n\n-   Créé
        un nouvel événement pour l'interrupteur quand celui-ci devient `close`.\\\r\n-
        \  Ajoute du code pour que la lumière s'éteigne quand l'interrupteur passe
        `close`."
      CSDU6 - lightswitch toggleswitch_2019: "# Utilisation de l'interrupteur\\\r\n\n\\\r\nL'interrupteur
        peut changer entre deux positions: allumé `open` et éteint `close`. Ce programme
        l'utilise pour faire un interrupteur pour la LED. Mais pour le moment, il
        ne peut qu'allumer la LED.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n\\\r\n\n-   Créé
        un nouvel événement pour l'interrupteur quand celui-ci devient `close`.\\\r\n-
        \  Ajoute du code pour que la lumière s'éteigne quand l'interrupteur passe
        `close`."
      CSDU6 - toggleswitch state setProp: "# État de l'interrupteur\\\r\n\n\\\r\nCe
        programme donne l'état de l'interrupteur, allumé ou éteint, mais il a besoin
        du bloc  `toggleSwitch.isOpen` pour fonctionner. `toggleSwitch.isOpen` est
        vrai (`true`) si l'interrupteur est allumé et faux (`false`) si l'interrupteur
        est éteint.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Complète le bloc si avec la
        propriété `toggleSwitch.isOpen`.\\\r\n-   Démarre le programme et appuie sur
        le bouton de gauche. Puis change l'interrupteur et appuie encore sur le bouton."
      CSDU6 - toggleswitch state setProp_2018: "# État de l'interrupteur\\\r\n\n\\\r\nCe
        programme donne l'état de l'interrupteur, allumé ou éteint, mais il a besoin
        du bloc  `toggleSwitch.isOpen` pour fonctionner. `toggleSwitch.isOpen` est
        vrai (`true`) si l'interrupteur est allumé et faux (`false`) si l'interrupteur
        est éteint.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Complète le bloc si avec la
        propriété `toggleSwitch.isOpen`.\\\r\n-   Démarre le programme et appuie sur
        le bouton de gauche. Puis change l'interrupteur et appuie encore sur le bouton."
      CSDU6 - toggleswitch state setProp_2019: "# État de l'interrupteur\\\r\n\n\\\r\nCe
        programme donne l'état de l'interrupteur, allumé ou éteint, mais il a besoin
        du bloc  `toggleSwitch.isOpen` pour fonctionner. `toggleSwitch.isOpen` est
        vrai (`true`) si l'interrupteur est allumé et faux (`false`) si l'interrupteur
        est éteint.\\\r\n\\\r\n\n# Fais ceci\\\r\n\n-   Complète le bloc si avec la
        propriété `toggleSwitch.isOpen`.\\\r\n-   Démarre le programme et appuie sur
        le bouton de gauche. Puis change l'interrupteur et appuie encore sur le bouton."
      CSDU6 circuit playground piano: "# Circuit Piano\\\r\n\n\\\r\nExaminez le code
        ci-dessous. Vous n'allez pas le modifier, mais essayez de comprendre ce qu'il
        fait.\\\r\n\\\r\n\n# Faite ceci\\\r\n\n\\\r\n\n-   Démarrez le programme et
        jouez avec le piano à l'écran."
      CSDU6 circuit playground piano_2018: "# Circuit Piano\\\r\n\n\\\r\nExaminez
        le code ci-dessous. Vous n'allez pas le modifier, mais essayez de comprendre
        ce qu'il fait.\\\r\n\\\r\n\n# Faite ceci\\\r\n\n\\\r\n\n-   Démarrez le programme
        et jouez avec le piano à l'écran."
      CSDU6 circuit playground piano_2019: "# Circuit Piano\\\r\n\n\\\r\nExaminez
        le code ci-dessous. Vous n'allez pas le modifier, mais essayez de comprendre
        ce qu'il fait.\\\r\n\\\r\n\n# Faite ceci\\\r\n\n\\\r\n\n-   Démarrez le programme
        et jouez avec le piano à l'écran."
      Course 4 Artist For Loops 6a: Effectue trois petits changements dans le code
        du niveau précédent pour obtenir ça !
      CourseD_Dance_Party_01: |-
        _Faisons une fête dansante !_

        Faites glisser le bloc « créer un nouveau » dans l’espace de travail, puis connectez-le à l’intérieur du bloc « configuration » pour créer votre premier danseur.

        -   _Vous pouvez également cliquer sur l'ampoule située à gauche si vous souhaitez plus d'informations ou des défis supplémentaires._
      CourseD_Dance_Party_02: |-
        Faisons danser cet orignal !

        Faites glisser le bloc <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> sur l'espace de travail. Connectez-le sous le bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Votre danseur devrait commencer un nouveau mouvement après la quatrième mesure.

        **Les mesures** sont utilisées pour compter le temps en musique. Dans ce tutoriel, une mesure dure quatre temps.
      CourseD_Dance_Party_03: |-
        _Voilà qu'on danse !_

        Ajoutez un bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> à votre espace de travail. Faites en sorte que le danseur commence un nouveau mouvement après 6 mesures.
      CourseD_Dance_Party_04: |-
        _Cette danse a besoin d'être un peu plus éclatante !_

        Recherchez un nouveau bloc dans votre boîte à outils qui ajoute un effet de fond derrière votre danseur. Regardez les effets changer avec la musique !
      CourseD_Dance_Party_05: |-
        Utilisez un autre nouveau bloc pour faire changer les mouvements du danseur **toutes les 2 mesures** !

        \*Choisir « (Suivant) », « (Précédent) » ou « (Aléatoire) » indique au danseur d'effectuer un mouvement différent à chaque fois que le programme est exécuté.
      CourseD_Dance_Party_06: |-
        _Nous avons besoin de plus de danseurs !_

        Créez un danseur de sauvegarde appelé « backup\_dancer1 » pour danser avec le chat.
      CourseD_Dance_Party_08: |-
        Chaque danseur possède un ensemble de _propriétés_ qui contrôlent son apparence.

        Vous pouvez donner l’impression qu’un danseur est à l’arrière-plan en réduisant sa _taille_. Pouvez-vous donner la même taille aux deux danseurs de sauvegarde ?
      CourseD_Dance_Party_09: |-
        Les danseurs ont une propriété « nuance » qui peut ajouter une couche de couleur. Essayez de modifier la nuance de l’un de vos danseurs.
        \*Les nuances vont mélanger la couleur que vous choisissez avec les couleurs du danseur.
      CourseD_Dance_Party_10: |-
        Nous savons maintenant comment changer les propriétés d'un danseur. Nous pouvons également faire en sorte que les mêmes propriétés correspondent automatiquement à la musique en utilisant ce bloc :
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Ce programme utilise le volume « grave » de la musique (les sons graves) pour contrôler la hauteur d'un danseur. Peux-tu aussi faire en sorte que l'autre danseur réponde à la musique ?
      CourseD_Dance_Party_11: |-
        Le bloc <xml><block type="Dancelab_whenKey"></block></xml> vous permet d'exécuter le programme lorsque vous appuyez sur la flèche dirigée vers le haut.

        Vous pouvez changer le mouvement de danse, changer les propriétés d'un danseur ou faire un mouvement rapide une seule fois. Soyez créatif et cherchez de nouveaux blocs !
      CourseD_Dance_Party_11_5: |-
        Jetez un œil à ce bloc :

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Maintenant, vous pouvez créer un groupe de danseurs à la fois !

        Essayez d’utiliser certains des blocs « tous les canards » pour concevoir un programme qui fera danser ensemble tous les canards.
      CourseD_Dance_Party_11b: Il est temps de danser ! Le Chat fait le dab lorsque
        vous appuyez sur la touche fléchée gauche. Faites le Robot faire le « drop
        » lorsque vous appuyez sur la touche fléchée droite.
      CourseD_Dance_Party_12: Prends ton rythme ! Créez votre propre danse à partager
        avec vos amis.
      CourseE_HOC 2018 Level_1: Il vous faudra du matériel pour ce voyage. Prenez
        un **bateau** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        dans le **coffre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      CourseE_HOC 2018 Level_10: Il y a une **pieuvre** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        cachée dans ce monument sous-marin, la trouverez-vous ?
      CourseE_HOC 2018 Level_11: Construisez un mur en **prismarine** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        autour du béton noir. Cela activera le **conduit** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        et vous aurez relevé le défi !
      CourseE_HOC 2018 Level_2: On avance plus facilement en bateau qu'à la nage,
        en eaux profonde ! Allez au bout du quai et montez à bord.
      CourseE_HOC 2018 Level_3: À vos rames pour naviguer sur les mers et pêcher la
        **morue** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      CourseE_HOC 2018 Level_4: Donnez la morue au **dauphin** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Utilisez un bloc répétition pour traverser l'océan plus rapidement.
      CourseE_HOC 2018 Level_5: Il y a une **coquille de nautile** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        par ici ! Explorze l'épave pour trouver le **coffre** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      CourseE_HOC 2018 Level_6: Il n'a pas l'air de faire chaud ! Attrapez un **saumon**
        ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        en allant vers les ruines sous-marines.
      CourseE_HOC 2018 Level_7a: Vous avez découvert les ruines sous-marines. Fouillez
        le grès à la recherche d'un **coffre** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        contenant un trésor de **prismarine** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      CourseE_HOC 2018 Level_8: D'abord des icebergs, et maintenant de la lave ? Traversez
        cette île volcanique et dénichez le **poisson tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        dans le récif de corail.
      CourseE_HOC 2018 Level_9b: Vous voici enfin au récif, partez à la recherche
        du **Cœur de l'océan** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) !
        Utilisez les coraux bleus et rouges pour atteindre le **coffre** au trésor ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      Dance_Party_01: |-
        _Faisons une fête dansante !_

        Faites glisser le bloc « créer un nouveau » dans l’espace de travail, puis connectez-le à l’intérieur du bloc « configuration » pour créer votre premier danseur.

        -   _Vous pouvez également cliquer sur l'ampoule située à gauche si vous souhaitez plus d'informations ou des défis supplémentaires._
      Dance_Party_02: |-
        Faisons danser cet orignal !

        Faites glisser le bloc <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> sur l'espace de travail. Connectez-le sous le bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. Votre danseur devrait commencer un nouveau mouvement après la quatrième mesure.

        **Les mesures** sont utilisées pour compter le temps en musique. Dans ce tutoriel, une mesure dure quatre temps.
      Dance_Party_03: |-
        _Voilà qu'on danse !_

        Ajoutez un bloc <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> à votre espace de travail. Faites en sorte que le danseur commence un nouveau mouvement après 6 mesures.
      Dance_Party_04: |-
        _Cette danse a besoin d'être un peu plus éclatante !_

        Recherchez un nouveau bloc dans votre boîte à outils qui ajoute un effet de fond derrière votre danseur. Regardez les effets changer avec la musique !
      Dance_Party_05: |-
        Utilisez un autre nouveau bloc pour faire changer les mouvements du danseur **toutes les 2 mesures** !

        \*Choisir « (Suivant) », « (Précédent) » ou « (Aléatoire) » indique au danseur d'effectuer un mouvement différent à chaque fois que le programme est exécuté.
      Dance_Party_06: |-
        _Nous avons besoin de plus de danseurs !_

        Créez un danseur de sauvegarde appelé « backup\_dancer1 » pour danser avec le chat.
      Dance_Party_08: |-
        Chaque danseur possède un ensemble de _propriétés_ qui contrôlent son apparence.

        Vous pouvez donner l’impression qu’un danseur est à l’arrière-plan en réduisant sa _taille_. Pouvez-vous donner la même taille aux deux danseurs de sauvegarde ?
      Dance_Party_09: |-
        Les danseurs ont une propriété « nuance » qui peut ajouter une couche de couleur. Essayez de modifier la nuance de l’un de vos danseurs.
        \*Les nuances vont mélanger la couleur que vous choisissez avec les couleurs du danseur.
      Dance_Party_10: |-
        Nous savons maintenant comment changer les propriétés d'un danseur. Nous pouvons également faire en sorte que les mêmes propriétés correspondent automatiquement à la musique en utilisant ce bloc :
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Ce programme utilise le volume « grave » de la musique (les sons graves) pour contrôler la hauteur d'un danseur. Peux-tu aussi faire en sorte que l'autre danseur réponde à la musique ?
      Dance_Party_11: |-
        Le bloc <xml><block type="Dancelab_whenKey"></block></xml> vous permet d'exécuter le programme lorsque vous appuyez sur la flèche dirigée vers le haut.

        Vous pouvez changer le mouvement de danse, changer les propriétés d'un danseur ou faire un mouvement rapide une seule fois. Soyez créatif et cherchez de nouveaux blocs !
      Dance_Party_11_5: |-
        Jetez un œil à ce bloc :

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        Maintenant, vous pouvez créer un groupe de danseurs à la fois !

        Essayez d’utiliser certains des blocs « tous les canards » pour concevoir un programme qui fera danser ensemble tous les canards.
      Dance_Party_11b: Il est temps de danser ! Le Chat fait le dab lorsque vous appuyez
        sur la touche fléchée gauche. Faites le Robot faire le « drop » lorsque vous
        appuyez sur la touche fléchée droite.
      Dance_Party_12: Prends ton rythme ! Créez votre propre danse à partager avec
        vos amis.
      Dance_Party_extras_battle: |-
        # Équipes de danse

        Voici un concours de danse entre deux équipes. Les touches fléchées contrôlent l’un des danseurs et les touches « w,a,s,d » contrôlent l’autre. Avoir une danse avec un ami, puis essayer d'améliorer cette danse.

        -   Ajouter plus de touches pour contrôler les danses
        -   Faire que les danseurs de soutien répondent également lorsque les touches sont enfoncées
        -   Alternez le danseur toutes les 4 mesures en définissant sa visibilité
      Dance_Party_extras_every_beat: |-
        # Noires

        La plupart de nos danses ont utilisé des mesures entières, mais chaque mesure est composée de 4 noires. Cette danse utilise « toutes les 0,25 mesures » pour faire applaudir le danseur sur chaque noire.

        Cette danse utilise également a _conditional_ block pour contrôler quand le bloc « toutes les 0,25 mesures » peut changer la danse. Essayez de changer les nombres dans le bloc conditionnel pour voir comment cela change la danse.

        -   Expérimentez avec d'autres durées de notes (tel que 0,5 pour une blanche ou 0,125 pour une croche).
        -   Ajoutez certains événements « après la mesure ».
        -   Changez les « mesures » en « secondes » et essayez de chronométrer vos danses de cette façon.
      Dance_Party_extras_layout: |-
        # Soyons informés !

        Découvrez cette danse qui utilise le bloc « mise en page » pour modifier la formation des danseurs de secours pendant de la danse. Essayez l’une de ces idées pour l’étendre :

        -   Créez un deuxième groupe de danseurs dans une mise en page différente
        -   Changez la mise en page quand une touche est enfoncée
        -   Modifier une propriété lorsque les danseurs changent de formation
      Dance_Party_extras_on_beat: |-
        # grave, médium et aigu

        Cette danse utilise des événements de « de pointe » pour déclencher le code lorsque différentes parties de la musique deviennent fortes. Essayez de bricoler différentes chansons pour voir comment elles changent la danse.
      Dance_Party_extras_speed: |-
        # Accélérez, ralentissez

        Cette danse finale utilise le bloc « vitesse définie » pour contrôler la rapidité avec laquelle chaque danseur se déplace. Essayez d’expérimenter avec différentes vitesses à différents moments de la chanson. N'hésitez pas à continuer à bricoler sur cette danse, ou à revenir à l'une des danses précédentes pour les rendre encore plus cool.
      Dance_Party_extras_visible: |-
        # Où iraient-ils ?

        Cette danse montre et cache deux groupes de danseurs différents. Jetez-y un coup d'œil, puis essayez d'ajouter votre propre style.

        -   Ajoutez un autre groupe de danseurs
        -   Affichez et masquez les danseurs à l'aide des touches fléchées
        -   Cachez tous les danseurs et passez à un effet d’arrière plan excitant
      Escape Room Example: "# Room Escape Dans l'atelier d'aujourd'hui, vous allez
        travailler à la création d'une application pour l'évasion de la pièce! Ce
        niveau contient un exemple d'application avec lequel vous devriez jouer pour
        avoir une idée de ce que vous allez créer. # Faites ceci - Cliquez sur Exécuter
        pour lancer l'application - Essayez de trouver la clé qui ouvrira la porte."
      Function intro Ryan: "Une **fonction** nommée « construire un pont » se trouve
        dans votre espace de travail.  Tout le code nécessaire pour traverser la rivière
        est inclus ! \\\r\n \\\r\nPlacez deux fois le petit bloc vert dans votre espace
        de travail pour corriger le chemin et amener {currentPlayerName} vers la torche
        de redstone [redstone_torch]."
      Function intro Ryan_2019: "Une **fonction** nommée « construire un pont » se
        trouve dans votre espace de travail.  Tout le code nécessaire pour traverser
        la rivière est inclus ! \\\r\n \\\r\nPlacez deux fois le petit bloc vert dans
        votre espace de travail pour corriger le chemin et amener {currentPlayerName}
        vers la torche de redstone [redstone_torch]."
      HOC 2018 Level_1: Il vous faudra du matériel pour ce voyage. Prenez un **bateau**
        ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        dans le **coffre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      HOC 2018 Level_10: Il y a une **pieuvre** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        cachée dans ce monument sous-marin, la trouverez-vous ?
      HOC 2018 Level_11: Construisez un mur en **prismarine** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        autour du béton noir. Cela activera le **conduit** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        et vous aurez relevé le défi !
      HOC 2018 Level_12: Félicitations ! Le vaste océan vous attend. Construisez un
        récif de corail ! Un volcan ! Une épave ! À vous de voir.
      HOC 2018 Level_2: On avance plus facilement en bateau qu'à la nage, en eaux
        profonde ! Allez au bout du quai et montez à bord.
      HOC 2018 Level_3: À vos rames pour naviguer sur les mers et pêcher la **morue**
        ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      HOC 2018 Level_4: Donnez la morue au **dauphin** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png).
        Utilisez un bloc répétition pour traverser l'océan plus rapidement.
      HOC 2018 Level_5: Il y a une **coquille de nautile** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        par ici ! Explorze l'épave pour trouver le **coffre** ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png).
      HOC 2018 Level_6: Il n'a pas l'air de faire chaud ! Attrapez un **saumon** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        en allant vers les ruines sous-marines.
      HOC 2018 Level_7a: Vous avez découvert les ruines sous-marines. Fouillez le
        grès à la recherche d'un **coffre** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        contenant un trésor de **prismarine** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      HOC 2018 Level_8: D'abord des icebergs, et maintenant de la lave ? Traversez
        cette île volcanique et dénichez le **poisson tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        dans le récif de corail.
      HOC 2018 Level_9b: Vous voici enfin au récif, partez à la recherche du **Cœur
        de l'océan** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png) !
        Utilisez les coraux bleus et rouges pour atteindre le **coffre** au trésor ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      InspirationalArtwork: "You've now learned everything\nyou need to know to make
        a pattern like this! \\\r\n\\\r\nIf this picture inspires\nyou, try to make
        something similar. Otherwise, create something all your own.\\\r"
      InspirationalArtwork_2018: "You've now learned everything\nyou need to know
        to make a pattern like this! \\\r\n\\\r\nIf this picture inspires\nyou, try
        to make something similar. Otherwise, create something all your own.\\\r"
      K-1 Bee Loops 5: Utilise les boucles « Répéter » pour prendre le nectar et le
        miel !
      K-1 Maze Loops 2: Utilise le bloc « Répéter » pour m'amener au cochon !
      K-1 Maze Loops 8: Utilise les boucles « Répéter » pour m'amener au cochon.
      MC_HOC_2017_01_RETRY: "Utilisez l'Agent pour libérer {currentPlayerName} de
        la maison !   \\\r\n \\\r\n   \\\r\nDéplacez un bloc « avancer » dans le bloc
        « après exécution » dans l'espace de travail afin d'amener l'Agent sur la
        plaque de détection [PressurePlate_Up]. Ensuite, appuyez sur « Démarrer »
        et utilisez les touches de direction pour déplacer {currentPlayerName} hors
        de la maison afin de récupérer le contenu du **coffre** [chest].  "
      MC_HOC_2017_01_RETRY_2019: "Utilisez l'Agent pour libérer {currentPlayerName}
        de la maison !   \\\r\n \\\r\n   \\\r\nDéplacez un bloc « avancer » dans le
        bloc « après exécution » dans l'espace de travail afin d'amener l'Agent sur
        la plaque de détection [PressurePlate_Up]. Ensuite, appuyez sur « Démarrer »
        et utilisez les touches de direction pour déplacer {currentPlayerName} hors
        de la maison afin de récupérer le contenu du **coffre** [chest].  "
      MC_HOC_2017_02_Cole: "{currentPlayerName} se lance dans l'aventure ! Pour l'aider,
        atteignez la **carte** [map_empty] située derrière la porte fermée sur la
        droite. \\\r\n \\\r\nDéplacez le code dans l'espace de travail à fin de diriger
        l'Agent sur la plaque de détection [PressurePlate_Up]. Cela permettra à {currentPlayerName}
        de passer. "
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName} se lance dans l'aventure ! Pour
        l'aider, atteignez la **carte** [map_empty] située derrière la porte fermée
        sur la droite. \\\r\n \\\r\nDéplacez le code dans l'espace de travail à fin
        de diriger l'Agent sur la plaque de détection [PressurePlate_Up]. Cela permettra
        à {currentPlayerName} de passer. "
      MC_HOC_2017_03_Cole: "{currentPlayerName} continue son aventure et a besoin
        de la **boussole** [compass] pour préparer son voyage.  \\\r\n   \\\r\nProgrammez
        l'Agent pour qu'il ouvre la porte. "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} continue son aventure et a besoin
        de la **boussole** [compass] pour préparer son voyage.  \\\r\n   \\\r\nProgrammez
        l'Agent pour qu'il ouvre la porte. "
      MC_HOC_2017_04POINT5_RYAN: "Vous avez réussi ! \\\r\n\\\r\nMaintenant, dirigez
        {currentPlayerName} en toute sécurité à travers le labyrinthe pour récupérer
        la **hache** [diamond_axe]\\\r"
      MC_HOC_2017_04POINT5_RYAN_2019: "Vous avez réussi ! \\\r\n\\\r\nMaintenant,
        dirigez {currentPlayerName} en toute sécurité à travers le labyrinthe pour
        récupérer la **hache** [diamond_axe]\\\r"
      MC_HOC_2017_04_Cole: "L'Agent peut se déplacer sur l'eau !  \\\r\n \\\r\nUtilisez
        une boucle « répéter » pour résoudre ce casse-tête et aider {currentPlayerName}
        à récupérer le **seau** [bucket_empty] derrière la porte. "
      MC_HOC_2017_04_Cole_2019: "L'Agent peut se déplacer sur l'eau !  \\\r\n \\\r\nUtilisez
        une boucle « répéter » pour résoudre ce casse-tête et aider {currentPlayerName}
        à récupérer le **seau** [bucket_empty] derrière la porte. "
      MC_HOC_2017_05_Cole: "Oh non, le pont est détruit ! \\\r\n\\\r\nProgrammez l'Agent
        pour reconstruire le pont en utilisant le bloc « placer » afin que {currentPlayerName}
        puisse atteindre la **pelle** [diamond_shovel]."
      MC_HOC_2017_05_Cole_2019: "Oh non, le pont est détruit ! \\\r\n\\\r\nProgrammez
        l'Agent pour reconstruire le pont en utilisant le bloc « placer » afin que
        {currentPlayerName} puisse atteindre la **pelle** [diamond_shovel]."
      MC_HOC_2017_06_Cole: "Encore une rivière, mais celle-ci est beaucoup plus large !
        \\\r\n \\\r\nCorrigez ce code pour aider l'Agent à reconstruire un pont à
        fin que {currentPlayerName} récupère la **pioche** [diamond_pickaxe]. "
      MC_HOC_2017_06_Cole_2019: "Encore une rivière, mais celle-ci est beaucoup plus
        large ! \\\r\n \\\r\nCorrigez ce code pour aider l'Agent à reconstruire un
        pont à fin que {currentPlayerName} récupère la **pioche** [diamond_pickaxe]. "
      MC_HOC_2017_07_Cole: "De la glace bloque passage !  \\\r\n \\\r\nLa fonction
        « supprimer obstacle » vous aidera à détruire la glace et à diriger {currentPlayerName}
        vers le wagonnet [minecart_normal] ! "
      MC_HOC_2017_07_Cole_2019: "De la glace bloque passage !  \\\r\n \\\r\nLa fonction
        « supprimer obstacle » vous aidera à détruire la glace et à diriger {currentPlayerName}
        vers le wagonnet [minecart_normal] ! "
      MC_HOC_2017_10_RETRY: "Saurez-vous remarquer la différence entre les deux fonctions
        dans votre espace de travail ? \\\r\n \\\r\nUtilisez ces fonctions avec d'autres
        codes de votre boîte à outils afin de dégager un chemin pour le wagonnet,
        puis récupérez le **briquet à silex** [flint_and_steel]. \\\r\n "
      MC_HOC_2017_10_RETRY_2019: "Saurez-vous remarquer la différence entre les deux
        fonctions dans votre espace de travail ? \\\r\n \\\r\nUtilisez ces fonctions
        avec d'autres codes de votre boîte à outils afin de dégager un chemin pour
        le wagonnet, puis récupérez le **briquet à silex** [flint_and_steel]. \\\r\n "
      MC_HOC_2017_Ali: 'Observez les fonctions ci-dessous.  Comment pouvez-vous les
        utiliser pour éviter les Ghasts et aider {currentPlayerName} à atteindre le
        **livre enchanté** en toute sécurité [book_enchanted] ?  '
      MC_HOC_2017_Ali_2019: 'Observez les fonctions ci-dessous.  Comment pouvez-vous
        les utiliser pour éviter les Ghasts et aider {currentPlayerName} à atteindre
        le **livre enchanté** en toute sécurité [book_enchanted] ?  '
      MC_HOC_2017_FP20x20: "**Jeu libre :** à votre tour ! Utilisez le code de l'Agent
        pour explorer ce monde."
      MC_HOC_2017_FP20x20_2019: "**Jeu libre :** à votre tour ! Utilisez le code de
        l'Agent pour explorer ce monde."
      NEW Course 4 Artist Params 2: Crée une fonction "Dessine un triangle" à partir
        de rien qui réalise un triangle avec des côtés de 50 pixels.
      Overworld Move to Sheep: Ajoute une deuxième commande « avancer plus » pour
        atteindre le mouton.
      Overworld Move to Sheep_2019: Ajoute une deuxième commande « avancer plus »
        pour atteindre le mouton.
      Room Escape Workshop - 1: |-
        # Mise en place des chambres

        <img src = "https://images.code.org/9d103d74f7c2da05aeccd5fc317e6ab6-image-1490368234432.08.44 AM.png" style = "width: 200px; float: right">

        Afin de faire sortir votre chambre, vous devrez créer la salle dans laquelle l'utilisateur pourra se lancer. Une partie du travail a déjà été effectuée pour vous. Il vous suffit de décider à quoi ressembleront les différentes parties de la pièce en choisissant des images!

        # Faites ceci

        -   Le niveau commence en mode conception
        -   Pour chaque élément d'image vierge (rectangle gris), ajoutez une image appropriée. Par exemple, vous aurez besoin d’une image de porte pour l’élément d’image intitulé porte.
        -   Un exemple de ce à quoi la salle pourrait ressembler sont sur la droite.
      Room Escape Workshop - 3: |-
        # Masquer le code

        <img src = "https://images.code.org/6fa80456a39d9b6417545f5f66ec83a5-image-1490368827625.png" style = "width: 400px; float: right">

        1.  En mode Conception Cliquez sur le carré blanc où il est écrit "CODE". Changez-le pour afficher un code secret de votre choix
        2.  Faites glisser la photo vers le bas pour couvrir le code secret

        \[] [0]
      Room Escape Workshop - 3-2: |-
        # Déplacer l'image

        Maintenant, faites en sorte que l'utilisateur puisse trouver le code secret en cliquant sur l'image. Quand ils cliquent sur l'image, elle devrait monter et se déplacer.

        # Faites ceci

        -   Sortez un bloc `onEvent`
        -   Changez le point id du bloc `onEvent` en image (qui est l’ID de l’élément picture)
        -   Dans le bloc `onEvent`, ajoutez le bloc`setPosition` avec les entrées suivantes
                 \- ID: photo
                 \- Les deux entrées suivantes sont les valeurs x et y - testez quelques chiffres pour que l'image bouge comme dans l'image de droite
      Room Escape Workshop - 4: |-
        # Mise en place du coffre-fort

        Vous avez généré un code secret afin que les utilisateurs puissent accéder à la deuxième pièce. Permet à l'utilisateur de saisir le code secret lorsqu'il clique sur le coffre-fort.

        # Faites ceci

        -   Ajouter un bloc `onEvent`
                 \- Choisissez l'ID du coffre-fort
        -   Dans le bloc `onEvent`, ajoutez un \<img src =" <https://images.code.org/c0964a8543728d018d5d9583319e22b9-image-1491060910093.34.36> AM.png "style =" width: 300px "> bloc
                 \- Sur le côté gauche, changez le _x_ (le nom de la variable) en _guess_
                 \- Sur le côté droit, changer \_ "Entrez une valeur" \_ (l'invite à demander à l'utilisateur) en \_ "Entrez le code" \_
      Room Escape Workshop - 5: |-
        # Vérification du code secret

        Maintenant que vous avez recueilli une estimation du code secret de l'utilisateur, vous devrez vérifier s'il est correct! Nous pouvons le faire en utilisant une déclaration `if`. Une instruction if vérifie si une condition est vraie. Dans ce cas, elle vérifiera si le nombre saisi par l'utilisateur est égal au code secret.

        # Faites ceci

        -   Dans le bloc `onEvent` pour le coffre-fort sous la commande d'invite, ajoutez un élément \<img src =" <https://images.code.org/5e9a434b1ad6b8f010db928b668127a5-image-1491061131564.37.01> AM ". déclaration
        -   Créez la condition en extrayant le bloc <img src = "https://images.code.org/f0680979704c30975550211b03ed222e-image-1491061134985.37.08 AM.png" style = "width: 100px"> qui vérifie si deux éléments sont détectés. égal
        -   D'un côté de <img src = "https://images.code.org/f0680979704c30975550211b03ed222e- image-1491061134985.37.08 AM.png" style = "width: 100px"> mettez _guess_ (le nom de la valeur que nous avons utilisée) stocker les utilisateurs devinent)
        -   De l'autre côté, mettez la valeur de votre code secret
      Room Escape Workshop - 7: |-
        # Montrer à l'intérieur du coffre-fort

        <img src = "https://images.code.org/71e74305187a46d0badeb29a9a69ac56-image-1490371014841.55.37 AM.png" style = "width: 200px; float: right">

        Une fois que le programme vérifie le code secret, vous voulez "ouvrir" le coffre-fort et afficher la clé à l'intérieur. Vous devez d’abord créer ces éléments en mode Création.

        # Faites ceci

        -   Accédez au mode Création et ajoutez une image carrée grise.
                \- Cliquez et faites glisser un élément d'image <img src = "https://images.code.org/8f4bc108415d83e5c528c9204502efc2-image-1491059181186.06.13 AM.png" style = "width: 75px"> sur l'écran
                \- Donnez-lui un bon identifiant (peut-être _insideSafe_)
                \- Trouver un carré gris à utiliser comme image
                \- Cela agira comme l'intérieur du coffre-fort car il cachera l'avant du coffre-fort lorsqu'il sera montré
        -   Ajouter une image clé
                \- Cliquez et faites glisser un élément d'image <img src = "https://images.code.org/8f4bc108415d83e5c528c9204502efc2-image-1491059181186.06.13 AM.png" style = "width: 75px"> sur l'écran
                \- Donnez-lui un bon identifiant (peut-être _key_)
                \- Trouver une image clé à utiliser
        -   Cliquez sur la propriété masquée en mode Création pour le carré gris et la clé. Quand ils sont cachés, cela ressemblera à quelque chose comme ci-dessous en mode Création.

        <img src = "https://images.code.org/2c2c7e9996515f2b30d416b558fd1360-image-1489605526794.17.55 PM.png" style = "width: 200px">
      Room Escape Workshop - 8: |-
        # Montrer à l'intérieur du coffre-fort

        Configurez maintenant le code pour afficher la clé et le carré gris lorsque l'utilisateur saisit le code correct.

        # Faites ceci

        -   Dans l'instruction `if` que vous avez créée dans la commande`onEvent` pour l'ajout sécurisé:
                 \- Le bloc `showElement` pour afficher le carré gris
                 \- Le bloc `showElement` pour afficher la clé
      Standalone_Artist_2: "Draw this diamond with 120 and 60\ndegree angles and 150
        pixel long sides.\\\r\n\\\r"
      Standalone_Artist_3: "Pouvez-vous dessiner cet hexagone avec des côtés de 100\npixels
        et des angles de 60 degrés ?\\\r\n\\\r"
      Standalone_Artist_4: "Now you've got a new block to play\nwith, the loop. This
        will repeat a set of commands. What happens if you loop\nthese commands 6
        times?\\\r\n\\\r"
      Standalone_Artist_5: "How many times do you need to loop\nthis diamond to draw
        the flower?\\\r\n\\\r"
      Standalone_Artist_5.5: "Notice how we simplified the diamond\ncode by turning
        it into a loop. You can loop that whole sequence 12 times\nto draw the flower.
        Hint: You'll need to turn 30 degrees after your diamond\nloop so you don't
        keep drawing over the same diamond.\\\r\n\\\r"
      Standalone_Artist_6: "Loop this hexagon code 6 times to\ncreate the design.
        How many degrees will you need to turn each time? Hint:\ndivide the number
        of degrees in a circle by the number of times you are looping.\\\r\n\\\r"
      Standalone_Artist_7: "A function is another programming\ntool to help you avoid
        repeating yourself. This function draws a flower, so\nyou can use it any time
        you want to draw a flower. Use this and the new jump\nblock to draw these
        flowers. Hint: The flowers are 150 pixels apart\\\r\n\\\r"
      Standalone_Artist_8: "Voici une fonction appelée « Dessiner\nune forme » que
        nous avons programmée pour dessiner des hexagones. Exécutez le code pour voir
        ce qu'il fait et puis faites des essais avec la fonction pour voir ce qui
        se passe. Pouvez-vous la faire dessiner un motif de carrés, triangles ou octogones
        ?\\\r\n\\\r"
      Standalone_Artist_9: "Now go ahead and make whatever picture\nyou'd like! You've
        even got an empty function that you can make do whatever\nyou want!\\\r\n\\\r"
      U4 Model Design 1: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Creating a digital prototype\\\r\n\\\r\nUsing\nthe
        prototype to the right (click the image to enlarge it) you're going to\ncreate
        a digital prototype of the example app \"Recycling Finder\". We've\nalready
        added a few of the elements for you, including the title, but it doesn't\nlook
        quite right yet. We'll go over each element of this as we go, but for\nnow
        let's **just focus on the title**.\\\r\n\\\r\n<!--<img src=\"https://images.code.org/66633526e03550bedb8503fefdc2ece3-image-1502921575904.png\"\nstyle=\"width:
        300px; float: right; clear: both;\">-->\\\r\n\\\r\n# Do This\\\r\n\\\r\n*\n**Make
        sure you are in Design Mode,** the switch appears above your app window\non
        the left.\\\r\n* **Click on the title text** to view its properties.\\\r\n*\n**Change
        the property \"text\"** to \"Recycling Finder\".\\\r\n* **Change the\n\"font
        size\"** to make the title larger.\\\r\n* **Change the \"text alignment\"**\nso
        the title is centered on the screen.\\\r\n\\\r\n_Note: Make sure you click\n**\"Run\"**
        before moving on to save your progress._"
      U4 Model Design 1_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Creating a digital prototype\\\r\n\\\r\nUsing\nthe
        prototype to the right (click the image to enlarge it) you're going to\ncreate
        a digital prototype of the example app \"Recycling Finder\". We've\nalready
        added a few of the elements for you, including the title, but it doesn't\nlook
        quite right yet. We'll go over each element of this as we go, but for\nnow
        let's **just focus on the title**.\\\r\n\\\r\n<!--<img src=\"https://images.code.org/66633526e03550bedb8503fefdc2ece3-image-1502921575904.png\"\nstyle=\"width:
        300px; float: right; clear: both;\">-->\\\r\n\\\r\n# Do This\\\r\n\\\r\n*\n**Make
        sure you are in Design Mode,** the switch appears above your app window\non
        the left.\\\r\n* **Click on the title text** to view its properties.\\\r\n*\n**Change
        the property \"text\"** to \"Recycling Finder\".\\\r\n* **Change the\n\"font
        size\"** to make the title larger.\\\r\n* **Change the \"text alignment\"**\nso
        the title is centered on the screen.\\\r\n\\\r\n_Note: Make sure you click\n**\"Run\"**
        before moving on to save your progress._"
      U4 Model Design 1_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Creating a digital prototype\\\r\n\\\r\nUsing\nthe
        prototype to the right (click the image to enlarge it) you're going to\ncreate
        a digital prototype of the example app \"Recycling Finder\". We've\nalready
        added a few of the elements for you, including the title, but it doesn't\nlook
        quite right yet. We'll go over each element of this as we go, but for\nnow
        let's **just focus on the title**.\\\r\n\\\r\n<!--<img src=\"https://images.code.org/66633526e03550bedb8503fefdc2ece3-image-1502921575904.png\"\nstyle=\"width:
        300px; float: right; clear: both;\">-->\\\r\n\\\r\n# Do This\\\r\n\\\r\n*\n**Make
        sure you are in Design Mode,** the switch appears above your app window\non
        the left.\\\r\n* **Click on the title text** to view its properties.\\\r\n*\n**Change
        the property \"text\"** to \"Recycling Finder\".\\\r\n* **Change the\n\"font
        size\"** to make the title larger.\\\r\n* **Change the \"text alignment\"**\nso
        the title is centered on the screen.\\\r\n\\\r\n_Note: Make sure you click\n**\"Run\"**
        before moving on to save your progress._"
      U4 Model Design 3: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/cad5b0e54f67976fee68ecf29c2a603b-image-1505758463551.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding images\\\r\n\\\r\nThe prototype
        just has\na plain black square where the logo should be - let's add an image
        to spice\nit up. The \"image\" element allows you to either upload an image
        from your\ncomputer or select from a library of graphic icons.\\\r\n\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"image\" element** and place between
        the description and\nthe title.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Click the\n\"Choose...\" link** next to the \"image\" field.\\\r\n* **Select
        the \"Icons\"\ntab** and choose an icon for your logo.\\\r\n* **Change the
        color** of the icon\nusing the \"icon color\" field."
      U4 Model Design 3_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/cad5b0e54f67976fee68ecf29c2a603b-image-1505758463551.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding images\\\r\n\\\r\nThe prototype
        just has\na plain black square where the logo should be - let's add an image
        to spice\nit up. The \"image\" element allows you to either upload an image
        from your\ncomputer or select from a library of graphic icons.\\\r\n\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"image\" element** and place between
        the description and\nthe title.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Click the\n\"Choose...\" link** next to the \"image\" field.\\\r\n* **Select
        the \"Icons\"\ntab** and choose an icon for your logo.\\\r\n* **Change the
        color** of the icon\nusing the \"icon color\" field."
      U4 Model Design 3_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/cad5b0e54f67976fee68ecf29c2a603b-image-1505758463551.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding images\\\r\n\\\r\nThe prototype
        just has\na plain black square where the logo should be - let's add an image
        to spice\nit up. The \"image\" element allows you to either upload an image
        from your\ncomputer or select from a library of graphic icons.\\\r\n\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n*\n**Drag out a new \"image\" element** and place between
        the description and\nthe title.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Click the\n\"Choose...\" link** next to the \"image\" field.\\\r\n* **Select
        the \"Icons\"\ntab** and choose an icon for your logo.\\\r\n* **Change the
        color** of the icon\nusing the \"icon color\" field."
      U4 Model Design 4: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/17b565cb2f5da12babc16fbd22685732-image-1505758655682.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding buttons\\\r\n\\\r\nButtons allow
        your\nuser to interact with your app. This prototype screen will need three
        buttons\n(each shaded gray on the prototype.) We've already added the Search
        button,\nso you just need to add Contact and About.\\\r\n\\\r\n# Do This\\\r\n\\\r\n*
        **Drag\nout a new \"button\" element** for each of the two remaining buttons.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Change the text** to match\nthe
        prototype.\\\r\n* **Modify other properties** to make the screen look like\nyou'd
        like.\\\r\n\\\r\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\"\nstyle=\"width:
        500px;\">"
      U4 Model Design 4_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/17b565cb2f5da12babc16fbd22685732-image-1505758655682.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding buttons\\\r\n\\\r\nButtons allow
        your\nuser to interact with your app. This prototype screen will need three
        buttons\n(each shaded gray on the prototype.) We've already added the Search
        button,\nso you just need to add Contact and About.\\\r\n\\\r\n# Do This\\\r\n\\\r\n*
        **Drag\nout a new \"button\" element** for each of the two remaining buttons.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Change the text** to match\nthe
        prototype.\\\r\n* **Modify other properties** to make the screen look like\nyou'd
        like.\\\r\n\\\r\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\"\nstyle=\"width:
        500px;\">"
      U4 Model Design 4_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/17b565cb2f5da12babc16fbd22685732-image-1505758655682.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Adding buttons\\\r\n\\\r\nButtons allow
        your\nuser to interact with your app. This prototype screen will need three
        buttons\n(each shaded gray on the prototype.) We've already added the Search
        button,\nso you just need to add Contact and About.\\\r\n\\\r\n# Do This\\\r\n\\\r\n*
        **Drag\nout a new \"button\" element** for each of the two remaining buttons.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Change the text** to match\nthe
        prototype.\\\r\n* **Modify other properties** to make the screen look like\nyou'd
        like.\\\r\n\\\r\n<img src=\"https://images.code.org/4cab6a5233cf07df0d8e312932762012-image-1444314797615.gif\"\nstyle=\"width:
        500px;\">"
      U4 Model Design 5: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/d257d0b06a24195a40adc60e4c96c0e1-image-1505759167176.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Making a Search Box\\\r\n\\\r\nThe search
        box\nin our prototype can be created using a \"Text Input\" element. This
        is a\nbox that your user can type into, and later your software can read what
        was\nentered and do something with it.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Add
        a Text Input**\nelement.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Add a Label**\nwith the text \"Location\" next to your text input."
      U4 Model Design 5_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/d257d0b06a24195a40adc60e4c96c0e1-image-1505759167176.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Making a Search Box\\\r\n\\\r\nThe search
        box\nin our prototype can be created using a \"Text Input\" element. This
        is a\nbox that your user can type into, and later your software can read what
        was\nentered and do something with it.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Add
        a Text Input**\nelement.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Add a Label**\nwith the text \"Location\" next to your text input."
      U4 Model Design 5_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/d257d0b06a24195a40adc60e4c96c0e1-image-1505759167176.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Making a Search Box\\\r\n\\\r\nThe search
        box\nin our prototype can be created using a \"Text Input\" element. This
        is a\nbox that your user can type into, and later your software can read what
        was\nentered and do something with it.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Add
        a Text Input**\nelement.\\\r\n* **Change the id** to match the prototype.\\\r\n*
        **Add a Label**\nwith the text \"Location\" next to your text input."
      U4 Model Design 6: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/7c8f4893c0b1f4bcd2280c950e389c95-image-1505759396699.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Checkboxes\\\r\n\\\r\nThe type of recyclables\nyou're
        searching for can be set using \"Checkbox\" elements. We already added\na
        checkbox and label for glass, so you just need to add ones for paper and\nplastic.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n* **Add a Checkbox** for each of the options.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Add labels** to describe\neach
        checkbox."
      U4 Model Design 6_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/7c8f4893c0b1f4bcd2280c950e389c95-image-1505759396699.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Checkboxes\\\r\n\\\r\nThe type of recyclables\nyou're
        searching for can be set using \"Checkbox\" elements. We already added\na
        checkbox and label for glass, so you just need to add ones for paper and\nplastic.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n* **Add a Checkbox** for each of the options.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Add labels** to describe\neach
        checkbox."
      U4 Model Design 6_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://images.code.org/7c8f4893c0b1f4bcd2280c950e389c95-image-1505759396699.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Checkboxes\\\r\n\\\r\nThe type of recyclables\nyou're
        searching for can be set using \"Checkbox\" elements. We already added\na
        checkbox and label for glass, so you just need to add ones for paper and\nplastic.\\\r\n\\\r\n#
        Do This\\\r\n\\\r\n* **Add a Checkbox** for each of the options.\\\r\n*\n**Change
        the ids** to match the prototype.\\\r\n* **Add labels** to describe\neach
        checkbox."
      U4 Model Design 7: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Finishing Touches\\\r\n\\\r\nBy now
        you should\nhave a fairly complete (though non-functional) digital version
        of the paper\nprototype we started with. All that's left to do is check back
        over your\npaper prototype and add any final touches you might have missed.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* **Check over the prototype** to make sure you've included\neverything.\\\r\n*
        **Read through your IDs** and fix any that aren't descriptive.\\\r\n*\n**Clean
        up** any rough edges by resizing or moving around elements."
      U4 Model Design 7_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Finishing Touches\\\r\n\\\r\nBy now
        you should\nhave a fairly complete (though non-functional) digital version
        of the paper\nprototype we started with. All that's left to do is check back
        over your\npaper prototype and add any final touches you might have missed.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* **Check over the prototype** to make sure you've included\neverything.\\\r\n*
        **Read through your IDs** and fix any that aren't descriptive.\\\r\n*\n**Clean
        up** any rough edges by resizing or moving around elements."
      U4 Model Design 7_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Finishing Touches\\\r\n\\\r\nBy now
        you should\nhave a fairly complete (though non-functional) digital version
        of the paper\nprototype we started with. All that's left to do is check back
        over your\npaper prototype and add any final touches you might have missed.\\\r\n\\\r\n#\nDo
        This\\\r\n\\\r\n* **Check over the prototype** to make sure you've included\neverything.\\\r\n*
        **Read through your IDs** and fix any that aren't descriptive.\\\r\n*\n**Clean
        up** any rough edges by resizing or moving around elements."
      U4 Model Program 1: "# Adding a New Screen\\\r\n\n\\\r\nTo complete\nyour app,
        you're going to need more than than just a home screen. Each card\nthat you
        created in your paper prototype is represented by a \"screen\" in\nApp Lab.
        To create more screens, just click the dropdown at the top of the\napp display
        and select \"New Screen...\"\\\r\n\\\r\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\"\nstyle=\"width:
        200px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Create a New Screen**\n
        \   and give it the ID \"about\"."
      U4 Model Program 1.5: "<div markdown=\"1\" style=\"float:\nright; margin: 20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model_about.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Design the About Screen\\\r\n\\\r\nTo
        add elements\nto your new About screen, you'll need to first select it from
        the screens\ndropdown.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Complete the About
        screen** using the\nprototype to the right.\\\r\n* **Use the screens dropdown**
        to switch between\nyour Home and About screens."
      U4 Model Program 1.5_2018: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model_about.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Design the About Screen\\\r\n\\\r\nTo
        add elements\nto your new About screen, you'll need to first select it from
        the screens\ndropdown.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Complete the About
        screen** using the\nprototype to the right.\\\r\n* **Use the screens dropdown**
        to switch between\nyour Home and About screens."
      U4 Model Program 1.5_2019: "<div markdown=\"1\" style=\"float:\nright; margin:
        20px;\">\\\r\n\\\r\n![expandable](https://curriculum.code.org/media/screen_model_about.png)\\\r\n\\\r\n<br/>\\\r\n\\\r\nClick\nto
        expand\\\r\n\\\r\n</div>\\\r\n\\\r\n# Design the About Screen\\\r\n\\\r\nTo
        add elements\nto your new About screen, you'll need to first select it from
        the screens\ndropdown.\\\r\n\\\r\n# Do This\\\r\n\\\r\n* **Complete the About
        screen** using the\nprototype to the right.\\\r\n* **Use the screens dropdown**
        to switch between\nyour Home and About screens."
      U4 Model Program 1_2018: "# Adding a New Screen\\\r\n\n\\\r\nTo complete\nyour
        app, you're going to need more than than just a home screen. Each card\nthat
        you created in your paper prototype is represented by a \"screen\" in\nApp
        Lab. To create more screens, just click the dropdown at the top of the\napp
        display and select \"New Screen...\"\\\r\n\\\r\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\"\nstyle=\"width:
        200px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Create a New Screen**\n
        \   and give it the ID \"about\"."
      U4 Model Program 1_2019: "# Adding a New Screen\\\r\n\n\\\r\nTo complete\nyour
        app, you're going to need more than than just a home screen. Each card\nthat
        you created in your paper prototype is represented by a \"screen\" in\nApp
        Lab. To create more screens, just click the dropdown at the top of the\napp
        display and select \"New Screen...\"\\\r\n\\\r\n<img src=\"https://images.code.org/2b49c36a57fb904d4fcf219ca498647d-image-1504714832027.png\"\nstyle=\"width:
        200px\">\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Create a New Screen**\n
        \   and give it the ID \"about\"."
      U4 Model Program 3_2018: "# Button Events\\\r\n\n\\\r\nWith our screens\nin
        place, it's time to start actually _programming_ the app so that it responds\nto
        button clicks. For each button on each screen, you'll want to add an `onEvent`\nblock
        that watches for that button to be clicked and responds appropriately.\nTo
        start off with we'll just watch the \"home_search_btn\" button and print\nsomething
        to the console when it's clicked\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nYou're\nnow
        in Code Mode (you can use the buttons above your app to switch between\nCode
        Mode and Design Mode). This is where you can write the code that will\nrespond
        to users interacting with your app.\\\r\n\\\r\n![](https://images.code.org/278b27dd31b6ca014c0dd32c5f964a54-image-1505764431751.png)\\\r\n\\\r\n\\*\n**Drag
        out an `onEvent` block** from the code toolbox.\\\r\n\n-   **Select \"home_search_btn\"**\n
        \   from the \"id\" dropdown.\\\r\n-   **Drag out a `console.log` block**
        from the\n    variables drawer.\\\r\n-   **Run your app**.\\\r\n-   **Click
        the Search button**\n    and look for messages in the console."
      U4 Model Program 3_2019: "# Button Events\\\r\n\n\\\r\nWith our screens\nin
        place, it's time to start actually _programming_ the app so that it responds\nto
        button clicks. For each button on each screen, you'll want to add an `onEvent`\nblock
        that watches for that button to be clicked and responds appropriately.\nTo
        start off with we'll just watch the \"home_search_btn\" button and print\nsomething
        to the console when it's clicked\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nYou're\nnow
        in Code Mode (you can use the buttons above your app to switch between\nCode
        Mode and Design Mode). This is where you can write the code that will\nrespond
        to users interacting with your app.\\\r\n\\\r\n![](https://images.code.org/278b27dd31b6ca014c0dd32c5f964a54-image-1505764431751.png)\\\r\n\\\r\n\\*\n**Drag
        out an `onEvent` block** from the code toolbox.\\\r\n\n-   **Select \"home_search_btn\"**\n
        \   from the \"id\" dropdown.\\\r\n-   **Drag out a `console.log` block**
        from the\n    variables drawer.\\\r\n-   **Run your app**.\\\r\n-   **Click
        the Search button**\n    and look for messages in the console."
      U4 Model Program 4_2018: "# Changing Screens On Click\\\r\n\n\\\r\nThe\n`setScreen`
        block will change your app to whichever screen you specify. If\nyou place
        a `setScreen` block _inside_ an `onEvent` block, you can program\nyour buttons
        to change to the correct screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing\nthe
        `onEvent` block that you've created, make your program change to the\n\"search\"
        screen when the \"home_search_btn\" is clicked.\\\r\n\\\r\n\n-   **Drag\n
        \   out a `setScreen` block** an put it inside the `onEvent` block.\\\r\n-
        \  **Select\n    \"search\"** from the `setScreen` dropdown.\\\r\n-   **Run
        your app** and test\n    the \"home_search_btn\" button."
      U4 Model Program 4_2019: "# Changing Screens On Click\\\r\n\n\\\r\nThe\n`setScreen`
        block will change your app to whichever screen you specify. If\nyou place
        a `setScreen` block _inside_ an `onEvent` block, you can program\nyour buttons
        to change to the correct screen.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\nUsing\nthe
        `onEvent` block that you've created, make your program change to the\n\"search\"
        screen when the \"home_search_btn\" is clicked.\\\r\n\\\r\n\n-   **Drag\n
        \   out a `setScreen` block** an put it inside the `onEvent` block.\\\r\n-
        \  **Select\n    \"search\"** from the `setScreen` dropdown.\\\r\n-   **Run
        your app** and test\n    the \"home_search_btn\" button."
      U4 Model Program 5: "# Wire Up the Other Buttons\\\r\n\n\\\r\nNow\nthat you've
        made one button work, just follow the same pattern for all of\nyour others.\\\r\n\\\r\n\n#
        Do This\\\r\n\n\\\r\n\n-   **Add an `onEvent` block** for each\n    button.\\\r\n-
        \  **Select the button ID** from the \"id\" dropdown.\\\r\n-   **Add\n    a
        `setScreen` block** inside each `onEvent` block.\\\r\n-   **Select the screen\n
        \   ID** from each `setScreen` dropdown.\\\r\n-   **Run your app** and test
        that all\n    of the buttons work."
      U4 Model Program 5_2018: "# Wire Up the Other Buttons\\\r\n\n\\\r\nNow\nthat
        you've made one button work, just follow the same pattern for all of\nyour
        others.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Add an `onEvent` block**
        for each\n    button.\\\r\n-   **Select the button ID** from the \"id\" dropdown.\\\r\n-
        \  **Add\n    a `setScreen` block** inside each `onEvent` block.\\\r\n-   **Select
        the screen\n    ID** from each `setScreen` dropdown.\\\r\n-   **Run your app**
        and test that all\n    of the buttons work."
      U4 Model Program 5_2019: "# Wire Up the Other Buttons\\\r\n\n\\\r\nNow\nthat
        you've made one button work, just follow the same pattern for all of\nyour
        others.\\\r\n\\\r\n\n# Do This\\\r\n\n\\\r\n\n-   **Add an `onEvent` block**
        for each\n    button.\\\r\n-   **Select the button ID** from the \"id\" dropdown.\\\r\n-
        \  **Add\n    a `setScreen` block** inside each `onEvent` block.\\\r\n-   **Select
        the screen\n    ID** from each `setScreen` dropdown.\\\r\n-   **Run your app**
        and test that all\n    of the buttons work."
      course2_artist_nestedLoops_challenge1: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      course2_artist_nestedLoops_challenge2: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make an octagon.\\\r\n-
        \  The second inner loop should make a hexagon.\\\r\n-   The\n    third inner
        loop should make a square."
      course3_artist_functions_challenge2: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      course3_playLab_challenge1: "\\*The **squirrels** are terrified\nto see that
        a **dinosaur** has come to town! Can the brave **knight** keep\nthem all from
        panicking?\\*\\\r\n\\\r\nRules:\\\r\n\n1.  _Touching the squirrels scores\n
        \   you points._\\\r\n2.  _Touching the dinosaur takes many points away._\\\r\n
        \   \\\r\n    Here\n    is a different kind of game that has already been
        started for you! Play it\n    to see how it works. \\\r\n    \\\r\n    \\\r\n
        \   Something should happen when you get enough\n    points or when you run
        out of points. Add some code to the `win game` and\n    `lose game` functions
        to make the game work the way it should. \\\r\n    Click the\n    hints for
        ideas!"
      course4_artist_binary_challenge2: "There are 256 bits\nrepresented on this grid
        - that means it's easy for a small change to cause\nbig problems. Are you
        persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      course4_artist_functions_challenge2: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      course4_artist_fwp_challenge1: Essayez d'exécuter ce programme, et apportez-y
        des modifications pour voir quels changements sont produits. Comprenez-vous
        comment cela fonctionne ? (Vous pouvez également tout supprimer et mettre
        quelque chose de totalement différent à la place.)
      course4_collector_nested_loops_challenge2: "_\"Let's\nhunt for treasure - using
        loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles of treasure
        using only the blocks in your toolbox. It is possible\nto collect all 4."
      courseA_artist_loops10: "## Time to head back to land.\n\nHelp me put down stones
        so I don't fall in!\\\r\n\\\r\n![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)"
      courseA_artist_loops10_2018: "## Time to head back to land.\n\nHelp me put down
        stones so I don't fall in!\\\r\n\\\r\n![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)"
      courseA_artist_loops10_2019: "## Time to head back to land.\n\nHelp me put down
        stones so I don't fall in!\\\r\n\\\r\n![expandable](https://images.code.org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif)"
      courseA_artist_loops11: "## Help me build steps to watch\n\nthe ship sail away.\\\r\n\\\r\n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops11_2018: "## Help me build steps to watch\n\nthe ship sail
        away.\\\r\n\\\r\n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops11_2019: "## Help me build steps to watch\n\nthe ship sail
        away.\\\r\n\\\r\n![expandable](https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif)"
      courseA_artist_loops12: "The artist saw something funny\nin the distance.  Draw
        what you think he saw.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n### Ideas\\\r\n\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops12_2018: "The artist saw something funny\nin the distance.
        \ Draw what you think he saw.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n### Ideas\\\r\n\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops12_2019: "The artist saw something funny\nin the distance.
        \ Draw what you think he saw.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n### Ideas\\\r\n\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops2: "Help the artist draw this line\ntwo times forward.\\\r\n\\\r\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)"
      courseA_artist_loops2_2018: "Help the artist draw this line\ntwo times forward.\\\r\n\\\r\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)"
      courseA_artist_loops2_2019: "Help the artist draw this line\ntwo times forward.\\\r\n\\\r\n![](https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif)"
      courseA_artist_loops3: "Our artist is trying to draw a\nline five times, but
        can't get it right. Can you help?\\\r\n\\\r\n![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)"
      courseA_artist_loops3_2018: "Our artist is trying to draw a\nline five times,
        but can't get it right. Can you help?\\\r\n\\\r\n![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)"
      courseA_artist_loops3_2019: "Our artist is trying to draw a\nline five times,
        but can't get it right. Can you help?\\\r\n\\\r\n![expandable](https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif)"
      courseA_artist_loops4: "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> loop to draw this line\nfive times!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops4_2018: "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> loop to draw this line\nfive times!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops4_2019: "Now, use a <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> loop to draw this line\nfive times!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops5: "## Draw a line seven steps long.\n\nThis will become
        our horizon.\\\r\n\\\r\n![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops5_2018: "## Draw a line seven steps long.\n\nThis will become
        our horizon.\\\r\n\\\r\n![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops5_2019: "## Draw a line seven steps long.\n\nThis will become
        our horizon.\\\r\n\\\r\n![expandable](https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif)"
      courseA_artist_loops6: "## Let's put a nice hill in the\n\nback.\\\r\n\\\r\n![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)"
      courseA_artist_loops6_2018: "## Let's put a nice hill in the\n\nback.\\\r\n\\\r\n![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)"
      courseA_artist_loops6_2019: "## Let's put a nice hill in the\n\nback.\\\r\n\\\r\n![expandable](https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif)"
      courseA_artist_loops7: "## Use the <xml><block type=\"controls_repeat_simplified_dropdown\">\\<title\n\nname=\"TIMES\"
        config=\"3-10\">???</title></block></xml> loop to add waves\nto the water.\\\r\n\\\r\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)"
      courseA_artist_loops7_2018: "## Use the <xml><block type=\"controls_repeat_simplified_dropdown\">\\<title\n\nname=\"TIMES\"
        config=\"3-10\">???</title></block></xml> loop to add waves\nto the water.\\\r\n\\\r\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)"
      courseA_artist_loops7_2019: "## Use the <xml><block type=\"controls_repeat_simplified_dropdown\">\\<title\n\nname=\"TIMES\"
        config=\"3-10\">???</title></block></xml> loop to add waves\nto the water.\\\r\n\\\r\n![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)"
      courseA_artist_loops8: "## We need a ladder up to the\n\nboat.\\\r\n\\\r\n![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)"
      courseA_artist_loops8_2018: "## We need a ladder up to the\n\nboat.\\\r\n\\\r\n![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)"
      courseA_artist_loops8_2019: "## We need a ladder up to the\n\nboat.\\\r\n\\\r\n![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)"
      courseA_artist_loops9: "## **Challenge:** The stairs down\n\nto the dock are
        broken.  Help me fix them.\\\r\n\\\r\n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops9_2018: "## **Challenge:** The stairs down\n\nto the dock
        are broken.  Help me fix them.\\\r\n\\\r\n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops9_2019: "## **Challenge:** The stairs down\n\nto the dock
        are broken.  Help me fix them.\\\r\n\\\r\n![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)"
      courseA_artist_loops_challenge1: "You can use a loop to\ndraw many lines in
        a row.\\\r\n\\\r\nCan you draw a house? Make it look just the\nway you like
        it!  Try looking for patterns that repeat!\\\r\n\\\r\nHere are some\nideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge1_2018: "You can use a loop to\ndraw many lines
        in a row.\\\r\n\\\r\nCan you draw a house? Make it look just the\nway you
        like it!  Try looking for patterns that repeat!\\\r\n\\\r\nHere are some\nideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge1_2019: "You can use a loop to\ndraw many lines
        in a row.\\\r\n\\\r\nCan you draw a house? Make it look just the\nway you
        like it!  Try looking for patterns that repeat!\\\r\n\\\r\nHere are some\nideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_collector_loops1: "**Free Play:** This is Laurel\nthe Adventurer! Move
        her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks into
        the workspace and try to figure out how to get treasure.  Get\nat least one
        item to pass this level."
      courseA_collector_loops12: "Eureka!  Get as much treasure\nas you can!  \\\r\n(You
        do not have to get it all.)"
      courseA_collector_loops12_2018: "Eureka!  Get as much treasure\nas you can!
        \ \\\r\n(You do not have to get it all.)"
      courseA_collector_loops12_2019: "Eureka!  Get as much treasure\nas you can!
        \ \\\r\n(You do not have to get it all.)"
      courseA_collector_loops1_2018: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseA_collector_loops1_2019: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseA_collector_loops2: "Get all three piles! Move\nLaurel to each piece of
        treasure, then use this block:\\\r\n  <xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_loops2_2018: "Get all three piles! Move\nLaurel to each piece
        of treasure, then use this block:\\\r\n  <xml><block type=\"collector_collect\"/></xml>"
      courseA_collector_preLoops7: "Get all three piles! Move\nLaurel to each piece
        of treasure, then use this block:\\\r\n  <xml><block type=\"collector_collect\"/></xml>"
      courseA_maze_seq10: "**Challenge:** Go around the TNT\nto get the bird to the
        pig!\\\r\n\\\r\n![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)"
      courseA_maze_seq11: "Time for a shorter puzzle!  Move\none way, then another
        to get the bird to the pig.\\\r\n\\\r\n![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)"
      courseA_maze_seq11_2018: "Time for a shorter puzzle!  Move\none way, then another
        to get the bird to the pig.\\\r\n\\\r\n![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)"
      courseA_maze_seq11_2019: "Time for a shorter puzzle!  Move\none way, then another
        to get the bird to the pig.\\\r\n\\\r\n![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)"
      courseA_maze_seq12: "Get that pig!\\\r\n\\\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq12_2018: "Get that pig!\\\r\n\\\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq12_2019: "Get that pig!\\\r\n\\\r\n![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)"
      courseA_maze_seq3: "_\"Fix the code to get me to the pig!\"_\\\r\n\\\r\n![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)"
      courseA_maze_seq4: "_\"Something is not quite right.\"_\n\\\r\n\\\r\nREMOVE
        a block to get the bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)"
      courseA_maze_seq5: "Try this one yourself from the beginning.\\\r\n\\\r\n![expandable](https://images.code.org/e4ef591b4580db478330c298d1af756f-image-1497997080163.gif)"
      courseA_maze_seq6: "Move one way, then another to get\nthe bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/8f71c406afa60c6898937d950c670205-image-1497996506419.gif)"
      courseA_maze_seq7: "Figure out what is missing and then\nadd blocks to get the
        bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)"
      courseA_maze_seq8: "Solve this level and get the bird\nto the pig!\\\r\n\\\r\n![expandable](https://images.code.org/fb4735244f74a4e001d1fa7b5c6028f9-image-1497998330218.gif)"
      courseA_maze_seq9: "**Challenge:** Debug this level by\nadding blocks to get
        the bird to the pig!\\\r\n\\\r\n![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)"
      courseA_playLab_events3: "Help Jorge the Dog get moving\nby connecting the <xml><block
        type=\"studio_move\">\\\r\n    <title name=\"SPRITE\">1</title>\\\r\n    <title\nname=\"DIR\">8</title>\\\r\n
        \ </block></xml> block to the <xml><block type=\"studio_whenArrow\">\\\r\n
        \   <title\nname=\"VALUE\">left</title>\\\r\n  </block></xml> event block
        that is already\nin the workspace.\\\r\n\\\r\nGet Jorge to the flag to finish
        this level!"
      courseA_playLab_events3_2018: "Help Jorge the Dog get moving\nby connecting
        the <xml><block type=\"studio_move\">\\\r\n    <title name=\"SPRITE\">1</title>\\\r\n
        \   <title\nname=\"DIR\">8</title>\\\r\n  </block></xml> block to the <xml><block
        type=\"studio_whenArrow\">\\\r\n    <title\nname=\"VALUE\">left</title>\\\r\n
        \ </block></xml> event block that is already\nin the workspace.\\\r\n\\\r\nGet
        Jorge to the flag to finish this level!"
      courseA_playLab_events3_2019: "Help Jorge the Dog get moving\nby connecting
        the <xml><block type=\"studio_move\">\\\r\n    <title name=\"SPRITE\">1</title>\\\r\n
        \   <title\nname=\"DIR\">8</title>\\\r\n  </block></xml> block to the <xml><block
        type=\"studio_whenArrow\">\\\r\n    <title\nname=\"VALUE\">left</title>\\\r\n
        \ </block></xml> event block that is already\nin the workspace.\\\r\n\\\r\nGet
        Jorge to the flag to finish this level!"
      courseA_playlab_events_challenge1: "_\"Where are my friends\nhiding? In this
        game, clicking on me will show my friend Olive the cat!\"_\\\r\n\\\r\nClicking\nOlive
        will make Robin appear! Can you write code to show the rest of the characters\ntoo?\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will help\nyou do this
        project step-by-step!\\\r\n\\\r\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19\nPM.png>)"
      courseA_playlab_events_challenge1_2018: "_\"Where are my friends\nhiding? In
        this game, clicking on me will show my friend Olive the cat!\"_\\\r\n\\\r\nClicking\nOlive
        will make Robin appear! Can you write code to show the rest of the characters\ntoo?\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will help\nyou do this
        project step-by-step!\\\r\n\\\r\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19\nPM.png>)"
      courseA_playlab_events_challenge1_2019: "_\"Where are my friends\nhiding? In
        this game, clicking on me will show my friend Olive the cat!\"_\\\r\n\\\r\nClicking\nOlive
        will make Robin appear! Can you write code to show the rest of the characters\ntoo?\\\r\n\\\r\nIn
        this puzzle, make sure to click for hints! The hints will help\nyou do this
        project step-by-step!\\\r\n\\\r\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19\nPM.png>)"
      courseA_playlab_events_challenge2: "_\"Let's have a party!\nGive my friends
        something to do when you click or tap them.\"_\\\r\n\\\r\nWhat\nwill the animals
        say? What else will happen?\\\r\n\\\r\n\\\r\n\\\r\nIn this puzzle,\nmake sure
        to click for hints! The hints will give you fun things to try!\\\r\n\\\r\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19\nPM.png>)"
      courseA_playlab_events_challenge2_2018: "_\"Let's have a party!\nGive my friends
        something to do when you click or tap them.\"_\\\r\n\\\r\nWhat\nwill the animals
        say? What else will happen?\\\r\n\\\r\n\\\r\n\\\r\nIn this puzzle,\nmake sure
        to click for hints! The hints will give you fun things to try!\\\r\n\\\r\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19\nPM.png>)"
      courseA_playlab_events_challenge2_2019: "_\"Let's have a party!\nGive my friends
        something to do when you click or tap them.\"_\\\r\n\\\r\nWhat\nwill the animals
        say? What else will happen?\\\r\n\\\r\n\\\r\n\\\r\nIn this puzzle,\nmake sure
        to click for hints! The hints will give you fun things to try!\\\r\n\\\r\n![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19\nPM.png>)"
      courseB_artist_loops10: "Use what you have learned to\ndraw a picture of what
        you think the artist saw when he got home.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n###
        \n\nIdeas\\\r\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseB_artist_loops10_2018: "Use what you have learned to\ndraw a picture of
        what you think the artist saw when he got home.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n###
        \n\nIdeas\\\r\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseB_artist_loops10_2019: "Use what you have learned to\ndraw a picture of
        what you think the artist saw when he got home.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n###
        \n\nIdeas\\\r\n\\\r\n![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)\\\r\n![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)\\\r\n![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)\\\r\n![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseB_collector_loops1: "**Free Play:** This is Laurel\nthe Adventurer! Move
        her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks into
        the workspace and try to figure out how to get treasure.  Get\nat least one
        item to pass this level."
      courseB_collector_loops1_2018: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseB_collector_loops1_2019: "**Free Play:** This is Laurel\nthe Adventurer!
        Move her around and get as much treasure as you can.\\\r\n\\\r\nDrag\nblocks
        into the workspace and try to figure out how to get treasure.  Get\nat least
        one item to pass this level."
      courseB_collector_loops2: "Move Laurel to the treasure,\nthen use the<xml><block
        type=\"collector_collect\"/></xml>block to pick it\nup.\\\r\n\\\r\n\\\r\nGet
        all four piles to pass this level."
      courseB_collector_loops2_2018: "Move Laurel to the treasure,\nthen use the<xml><block
        type=\"collector_collect\"/></xml>block to pick it\nup.\\\r\n\\\r\n\\\r\nGet
        all four piles to pass this level."
      courseB_collector_loops2_2019: "Move Laurel to the treasure,\nthen use the<xml><block
        type=\"collector_collect\"/></xml>block to pick it\nup.\\\r\n\\\r\n\\\r\nGet
        all four piles to pass this level."
      courseB_playLab_events1: "This game is called \"Play Lab\".  \\\r\n\\\r\nSee\nif
        you can figure out what each block does."
      courseB_playLab_events1_2018: "This game is called \"Play Lab\".  \\\r\n\\\r\nSee\nif
        you can figure out what each block does."
      courseB_playLab_events1_2019: "This game is called \"Play Lab\".  \\\r\n\\\r\nSee\nif
        you can figure out what each block does."
      courseB_playlab_events_challenge1: "It's time for the\nGreat Animal Race! Make
        the animals move down when you press `▼`. \\\r\n\\\r\nWho\nwill run the fastest?\\\r"
      courseB_playlab_events_challenge1_2018: "It's time for the\nGreat Animal Race!
        Make the animals move down when you press `▼`. \\\r\n\\\r\nWho\nwill run the
        fastest?\\\r"
      courseB_playlab_events_challenge1_2019: "It's time for the\nGreat Animal Race!
        Make the animals move down when you press `▼`. \\\r\n\\\r\nWho\nwill run the
        fastest?\\\r"
      courseB_playlab_events_challenge2: "Let's make the animals\ndisappear when you
        click on them! Try playing with the dog now, then help\nthe other animals
        join in the fun.\\\r\nYou can also add sounds and score points\nto create
        a game of Animal Tag!\\\r\n\\\r\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)"
      courseB_playlab_events_challenge2_2018: "Let's make the animals\ndisappear when
        you click on them! Try playing with the dog now, then help\nthe other animals
        join in the fun.\\\r\nYou can also add sounds and score points\nto create
        a game of Animal Tag!\\\r\n\\\r\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)"
      courseB_playlab_events_challenge2_2019: "Let's make the animals\ndisappear when
        you click on them! Try playing with the dog now, then help\nthe other animals
        join in the fun.\\\r\nYou can also add sounds and score points\nto create
        a game of Animal Tag!\\\r\n\\\r\n![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)"
      courseB_starWars_prog1: "[Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go\nget
        the scrap metal, BB-8\"_\\\r\n\\\r\nWatch out for walls and crates. Scrap\nmetal
        looks like this: [picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseB_starWars_prog1_2018: "[Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go\nget
        the scrap metal, BB-8\"_\\\r\n\\\r\nWatch out for walls and crates. Scrap\nmetal
        looks like this: [picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseB_starWars_prog1_2019: "[Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_\"Go\nget
        the scrap metal, BB-8\"_\\\r\n\\\r\nWatch out for walls and crates. Scrap\nmetal
        looks like this: [picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseB_starWars_prog8: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge**: Gather all the scrap metal."
      courseB_starWars_prog8_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge**: Gather all the scrap metal."
      courseB_starWars_prog8_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge**: Gather all the scrap metal."
      courseC_PlayLab_events_challenge1: "Use a new block to\nmake Waddles automatically
        move back to the start when he runs into the Dinosaur\nand when he scores
        a point. This will make your game more challenging and\nfun!\\\r\n\\\r\nPlay
        the game and move Waddles with the arrows until you score\nenough points.
        Waddles must be moved to the `middle left` position of the\nscreen to complete
        this challenge."
      courseC_PlayLab_events_challenge1_2018: "Use a new block to\nmake Waddles automatically
        move back to the start when he runs into the Dinosaur\nand when he scores
        a point. This will make your game more challenging and\nfun!\\\r\n\\\r\nPlay
        the game and move Waddles with the arrows until you score\nenough points.
        Waddles must be moved to the `middle left` position of the\nscreen to complete
        this challenge."
      courseC_PlayLab_events_challenge1_2019: "Use a new block to\nmake Waddles automatically
        move back to the start when he runs into the Dinosaur\nand when he scores
        a point. This will make your game more challenging and\nfun!\\\r\n\\\r\nPlay
        the game and move Waddles with the arrows until you score\nenough points.
        Waddles must be moved to the `middle left` position of the\nscreen to complete
        this challenge."
      courseC_artist_loop1: "Fantastic!  \\\r\n\\\r\nLet's add\nsome style by changing
        the brush using the `set pattern` block before our\nloop starts."
      courseC_artist_loop1_2018: "Fantastic!  \\\r\n\\\r\nLet's add\nsome style by
        changing the brush using the `set pattern` block before our\nloop starts."
      courseC_artist_loop1_2019: "Fantastic!  \\\r\n\\\r\nLet's add\nsome style by
        changing the brush using the `set pattern` block before our\nloop starts."
      courseC_artist_loops1a: "**Free Play:** Let's build something\nbigger, one step
        at a time!  \\\r\n\\\r\nUse the `jump to 200 over 200 down` to\nget the artist
        to the center of the play area, then use the `draw a sticker`\nblock to make
        a bird appear.  \\\r\n\\\r\n\\---\\\r\n\\\r\nPress \"Finish\" when you\nare
        happy with what you've made."
      courseC_artist_loops3a: "So much fun!  \\\r\n\\\r\nNow, add\na bat sticker right
        after the bird to make an image like the one below.\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops3a_2018: "So much fun!  \\\r\n\\\r\nNow, add\na bat sticker
        right after the bird to make an image like the one below.\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops3a_2019: "So much fun!  \\\r\n\\\r\nNow, add\na bat sticker
        right after the bird to make an image like the one below.\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops4a: "Edit your code so that you jump\nforward by 75 pixels
        between stamping the bird and the bat. In this puzzle,\nmake sure you have
        `jump to 200 over 200 down` inside of your loop, so you\nstay in the center!\\\r\n\\_\\_\\_\\\r\n\\\r\n![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)"
      courseC_artist_loops5a: "What happens when you replace\none or both of the stickers
        with a different creature?\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)"
      courseC_artist_loops5a_2018: "What happens when you replace\none or both of
        the stickers with a different creature?\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)"
      courseC_artist_loops5a_2019: "What happens when you replace\none or both of
        the stickers with a different creature?\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)"
      courseC_artist_loops5b: "What happens when you `move forward`\nthen `move backward`
        by 100, 200, or 400 pixels somewhere inside the loop?  \\\r\n\\-\nTry using
        the `set pattern` block before you start your loop to make a work\nof art!\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops5b_2018: "What happens when you `move forward`\nthen `move
        backward` by 100, 200, or 400 pixels somewhere inside the loop?  \\\r\n\\-\nTry
        using the `set pattern` block before you start your loop to make a work\nof
        art!\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops5b_2019: "What happens when you `move forward`\nthen `move
        backward` by 100, 200, or 400 pixels somewhere inside the loop?  \\\r\n\\-\nTry
        using the `set pattern` block before you start your loop to make a work\nof
        art!\\\r\n\\_\\_\\_\\\r\n![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops6a: "Add a third sticker anywhere\nin the loop that you
        want! What does it look like now?\\\r\n\n-   Change the pattern\n    on your
        brush for more variety!\\\r\n    \\\r\n    \\_\\_\\_\\\r\n    \\\r\n    ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)"
      courseC_artist_loops6a_2018: "Add a third sticker anywhere\nin the loop that
        you want! What does it look like now?\\\r\n\n-   Change the pattern\n    on
        your brush for more variety!\\\r\n    \\\r\n    \\_\\_\\_\\\r\n    \\\r\n
        \   ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)"
      courseC_artist_loops7a: "Try changing the `repeat` loop\nto run a different
        number of times.  How far do you have to turn to go around\nin a full circle?\\\r\n\n-
        \  Try changing how many times you spin\\\r\n    -   Try a 60\n        degree
        turn for 6 times around\\\r\n    -   Try a 20 degree turn for 18 times around\\\r\n
        \       \\_\\_\\_\\\r\n        This\n        image uses a pirate, a ninja,
        and a giraffe. They loop 18 times with a 20\n        degree turn.\\\r\n        \\\r\n
        \       ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)"
      courseC_artist_loops7a_2018: "Try changing the `repeat` loop\nto run a different
        number of times.  How far do you have to turn to go around\nin a full circle?\\\r\n\n-
        \  Try changing how many times you spin\\\r\n    -   Try a 60\n        degree
        turn for 6 times around\\\r\n    -   Try a 20 degree turn for 18 times around\\\r\n
        \       \\_\\_\\_\\\r\n        This\n        image uses a pirate, a ninja,
        and a giraffe. They loop 18 times with a 20\n        degree turn.\\\r\n        \\\r\n
        \       ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)"
      courseC_artist_loops8a: "Now make something on your own.  What\nhappens when
        you make two separate circles of different stickers?\\\r\n\\_\\_\\_\\\r\nNeed\nan
        idea? Try making a design like this one.\\\r\n\\\r\n![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)"
      courseC_artist_loops8a_2018: "Now make something on your own.  What\nhappens
        when you make two separate circles of different stickers?\\\r\n\\_\\_\\_\\\r\nNeed\nan
        idea? Try making a design like this one.\\\r\n\\\r\n![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)"
      courseC_artist_loops8a_2019: "Now make something on your own.  What\nhappens
        when you make two separate circles of different stickers?\\\r\n\\_\\_\\_\\\r\nNeed\nan
        idea? Try making a design like this one.\\\r\n\\\r\n![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)"
      courseC_artist_loopsPre1a: "Now, put this code into  a\n`repeat` block and loop
        it **6** times.\\\r\n\n-   Notice that we have added a 60\n    degree turn
        at the end of each loop to get a full rotation."
      courseC_artist_loopsPre1a_2018: "Now, put this code into  a\n`repeat` block
        and loop it **6** times.\\\r\n\n-   Notice that we have added a 60\n    degree
        turn at the end of each loop to get a full rotation."
      courseC_artist_loopsPre1a_2019: "Now, put this code into  a\n`repeat` block
        and loop it **6** times.\\\r\n\n-   Notice that we have added a 60\n    degree
        turn at the end of each loop to get a full rotation."
      courseC_collector_loops_challenge2: "_\"Let's hunt for\ntreasure - using loops!\"_\\\r\n\\\r\nHelp
        the collector by debugging this code.\nGet all of the treasure!"
      courseC_collector_loops_challenge2_2018: "_\"Let's hunt for\ntreasure - using
        loops!\"_\\\r\n\\\r\nHelp the collector by debugging this code.\nGet all of
        the treasure!"
      courseC_collector_loops_challenge2_2019: "_\"Let's hunt for\ntreasure - using
        loops!\"_\\\r\n\\\r\nHelp the collector by debugging this code.\nGet all of
        the treasure!"
      courseC_flappy_events1: "Attach the `flap a normal amount`\nblock to the `when
        click` event, then press \"Run\".   \\\r\n\\\r\n\\---\\\r\n\\\r\nClick\nor
        tap on the play space to move Flappy to the target."
      courseC_flappy_events10: "Create your own Flappy game!\n\\\r\n\\\r\nYou can
        change the visuals and the rules...even the gravity! \\\r\nWhen\nyou're done,
        click \"Finish\" to share with friends on their phones."
      courseC_flappy_events10_2018: "Create your own Flappy game!\n\\\r\n\\\r\nYou
        can change the visuals and the rules...even the gravity! \\\r\nWhen\nyou're
        done, click \"Finish\" to share with friends on their phones."
      courseC_flappy_events10_2019: "Create your own Flappy game!\n\\\r\n\\\r\nYou
        can change the visuals and the rules...even the gravity! \\\r\nWhen\nyou're
        done, click \"Finish\" to share with friends on their phones."
      courseC_flappy_events1_2018: "Attach the `flap a normal amount`\nblock to the
        `when click` event, then press \"Run\".   \\\r\n\\\r\n\\---\\\r\n\\\r\nClick\nor
        tap on the play space to move Flappy to the target."
      courseC_flappy_events1_2019: "Attach the `flap a normal amount`\nblock to the
        `when click` event, then press \"Run\".   \\\r\n\\\r\n\\---\\\r\n\\\r\nClick\nor
        tap on the play space to move Flappy to the target."
      courseC_flappy_events2: "The `when run` event allows you\nto run code as soon
        as your game starts.  \\\r\n\\\r\nTry adding a block that\nsets the level
        speed when the \"Run\" button is pressed. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and flap to the target to continue."
      courseC_flappy_events2_2018: "The `when run` event allows you\nto run code as
        soon as your game starts.  \\\r\n\\\r\nTry adding a block that\nsets the level
        speed when the \"Run\" button is pressed. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and flap to the target to continue."
      courseC_flappy_events2_2019: "The `when run` event allows you\nto run code as
        soon as your game starts.  \\\r\n\\\r\nTry adding a block that\nsets the level
        speed when the \"Run\" button is pressed. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and flap to the target to continue."
      courseC_flappy_events3: "Now we've added the ground.\n\\\r\n\\\r\nAttach the
        `end game` block to the `when hit the ground` event. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and crash the bird into the ground to continue."
      courseC_flappy_events3_2018: "Now we've added the ground.\n\\\r\n\\\r\nAttach
        the `end game` block to the `when hit the ground` event. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and crash the bird into the ground to continue."
      courseC_flappy_events3_2019: "Now we've added the ground.\n\\\r\n\\\r\nAttach
        the `end game` block to the `when hit the ground` event. \\\r\n\\\r\n\\---\\\r\n\\\r\nPlay\nthe
        game and crash the bird into the ground to continue."
      courseC_flappy_events4: "Flappy will fly right through\nobstacles unless you
        write code to make him crash. \\\r\n\\\r\nAttach a block\nto the `when hit
        an obstacle` event so that the game ends when Flappy crashes\ninto the first
        set of pipes."
      courseC_flappy_events4_2018: "Flappy will fly right through\nobstacles unless
        you write code to make him crash. \\\r\n\\\r\nAttach a block\nto the `when
        hit an obstacle` event so that the game ends when Flappy crashes\ninto the
        first set of pipes."
      courseC_flappy_events4_2019: "Flappy will fly right through\nobstacles unless
        you write code to make him crash. \\\r\n\\\r\nAttach a block\nto the `when
        hit an obstacle` event so that the game ends when Flappy crashes\ninto the
        first set of pipes."
      courseC_flappy_events5: "We've added a scoreboard to\ncount points when Flappy
        passes obstacles.  \\\r\n\\\r\nAdd a block to the `when\npass an obstacle`
        event that scores a point, then press \"Run\" to fly Flappy\nthrough the first
        set of pipes."
      courseC_flappy_events5_2018: "We've added a scoreboard to\ncount points when
        Flappy passes obstacles.  \\\r\n\\\r\nAdd a block to the `when\npass an obstacle`
        event that scores a point, then press \"Run\" to fly Flappy\nthrough the first
        set of pipes."
      courseC_flappy_events5_2019: "We've added a scoreboard to\ncount points when
        Flappy passes obstacles.  \\\r\n\\\r\nAdd a block to the `when\npass an obstacle`
        event that scores a point, then press \"Run\" to fly Flappy\nthrough the first
        set of pipes."
      courseC_flappy_events6: "Click the down arrow inside of\nthe `flap a normal
        amount` block to pick a different flapping power.  \\\r\n\\\r\nSee\nif you
        can still score a point after making Flappy flap either a smaller or\nlarger
        amount each time you click."
      courseC_flappy_events6_2018: "Click the down arrow inside of\nthe `flap a normal
        amount` block to pick a different flapping power.  \\\r\n\\\r\nSee\nif you
        can still score a point after making Flappy flap either a smaller or\nlarger
        amount each time you click."
      courseC_flappy_events6_2019: "Click the down arrow inside of\nthe `flap a normal
        amount` block to pick a different flapping power.  \\\r\n\\\r\nSee\nif you
        can still score a point after making Flappy flap either a smaller or\nlarger
        amount each time you click."
      courseC_flappy_events7: Ensuite, essaie de changer l'arrière-plan en attachant
        un autre bloc à l'évènement `quand l'exécution commence`.
      courseC_flappy_events7_2018: Ensuite, essaie de changer l'arrière-plan en attachant
        un autre bloc à l'évènement `quand l'exécution commence`.
      courseC_flappy_events7_2019: Ensuite, essaie de changer l'arrière-plan en attachant
        un autre bloc à l'évènement `quand l'exécution commence`.
      courseC_flappy_events8: "You can set the background under\nany event, not just
        when the game starts. \\\r\n\\\r\nTry setting a **random**\nscene when other
        events happen...for example, when passing an obstacle."
      courseC_flappy_events8_2018: "You can set the background under\nany event, not
        just when the game starts. \\\r\n\\\r\nTry setting a **random**\nscene when
        other events happen...for example, when passing an obstacle."
      courseC_flappy_events8_2019: "You can set the background under\nany event, not
        just when the game starts. \\\r\n\\\r\nTry setting a **random**\nscene when
        other events happen...for example, when passing an obstacle."
      courseC_flappy_events9: Pour varier un peu, au lieu de terminer le jeu lorsque
        Flappy rencontre un obstacle, essaie de remettre le score à 0.
      courseC_flappy_events9_2018: Pour varier un peu, au lieu de terminer le jeu
        lorsque Flappy rencontre un obstacle, essaie de remettre le score à 0.
      courseC_flappy_events9_2019: Pour varier un peu, au lieu de terminer le jeu
        lorsque Flappy rencontre un obstacle, essaie de remettre le score à 0.
      courseC_maze_programming4: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming4_2018: "_\"Trace the path and lead me to\nthe silly
        pig.\"_ \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming4_2019: "_\"Trace the path and lead me to\nthe silly
        pig.\"_ \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_maze_programming5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_maze_programming5_2019: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_starWars_loops1: "[](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        get the scrap metal, BB-8\"_ \\\r\n\\\r\nUse five of the same blocks to\nget
        the scrap metal. Scrap metal glows like this: [](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops10: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\\\r\n\n_\"Go
        BB-8!\"_\\\r\n\\\r\nYou are doing great! Keep it up!"
      courseC_starWars_loops10_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\\\r\n\n_\"Go
        BB-8!\"_\\\r\n\\\r\nYou are doing great! Keep it up!"
      courseC_starWars_loops10_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\\\r\n\n_\"Go
        BB-8!\"_\\\r\n\\\r\nYou are doing great! Keep it up!"
      courseC_starWars_loops11: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going, BB-8!\"_\\\r\n\\\r\nYou are almost there! This time, choose any\npath
        you like!"
      courseC_starWars_loops11_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going, BB-8!\"_\\\r\n\\\r\nYou are almost there! This time, choose any\npath
        you like!"
      courseC_starWars_loops11_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going, BB-8!\"_\\\r\n\\\r\nYou are almost there! This time, choose any\npath
        you like!"
      courseC_starWars_loops1_2018: "[](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        get the scrap metal, BB-8\"_ \\\r\n\\\r\nUse five of the same blocks to\nget
        the scrap metal. Scrap metal glows like this: [](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops1_2019: "[](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        get the scrap metal, BB-8\"_ \\\r\n\\\r\nUse five of the same blocks to\nget
        the scrap metal. Scrap metal glows like this: [](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops2: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        BB-8!\"_\\\r\n\\\r\nTo get all the scrap metal, try creating a loop that\nuses
        only one block inside of a `repeat` block."
      courseC_starWars_loops2_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        BB-8!\"_\\\r\n\\\r\nTo get all the scrap metal, try creating a loop that\nuses
        only one block inside of a `repeat` block."
      courseC_starWars_loops2_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Go
        BB-8!\"_\\\r\n\\\r\nTo get all the scrap metal, try creating a loop that\nuses
        only one block inside of a `repeat` block."
      courseC_starWars_loops4: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\nIn this puzzle, two `repeat` loops will help\nyou
        get BB-8 to all of the scrap metal with the fewest number of blocks!"
      courseC_starWars_loops4_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\nIn this puzzle, two `repeat` loops will help\nyou
        get BB-8 to all of the scrap metal with the fewest number of blocks!"
      courseC_starWars_loops4_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\nIn this puzzle, two `repeat` loops will help\nyou
        get BB-8 to all of the scrap metal with the fewest number of blocks!"
      courseC_starWars_loops6: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Can
        you get it all?\"_\\\r\n\\\r\nLoops even work with more than one block\ninside!
        \ Can you loop this sequence?"
      courseC_starWars_loops6_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Can
        you get it all?\"_\\\r\n\\\r\nLoops even work with more than one block\ninside!
        \ Can you loop this sequence?"
      courseC_starWars_loops6_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Can
        you get it all?\"_\\\r\n\\\r\nLoops even work with more than one block\ninside!
        \ Can you loop this sequence?"
      courseC_starWars_loops7: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"You
        can do it!\"_\\\r\n\\\r\nCan you try to get all the scrap metal using just\none
        loop? Try programming it all out then finding the repeating code to put\nin
        a loop."
      courseC_starWars_loops7_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"You
        can do it!\"_\\\r\n\\\r\nCan you try to get all the scrap metal using just\none
        loop? Try programming it all out then finding the repeating code to put\nin
        a loop."
      courseC_starWars_loops7_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"You
        can do it!\"_\\\r\n\\\r\nCan you try to get all the scrap metal using just\none
        loop? Try programming it all out then finding the repeating code to put\nin
        a loop."
      courseC_starWars_loops8: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge:** Combine ideas from the last\nfew
        puzzles to complete this level."
      courseC_starWars_loops8_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge:** Combine ideas from the last\nfew
        puzzles to complete this level."
      courseC_starWars_loops8_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        it up, BB-8.\"_\\\r\n\\\r\n**Challenge:** Combine ideas from the last\nfew
        puzzles to complete this level."
      courseC_starWars_loops9: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going!\"_\\\r\n\\\r\nUse what you have learned to pick up all of the scrap\nmetal!"
      courseC_starWars_loops9_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going!\"_\\\r\n\\\r\nUse what you have learned to pick up all of the scrap\nmetal!"
      courseC_starWars_loops9_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)\n_\"Keep
        going!\"_\\\r\n\\\r\nUse what you have learned to pick up all of the scrap\nmetal!"
      courseD_artist_6_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_6_2018_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_binary_challenge2_2018: "There are 256 bits\nrepresented on this
        grid - that means it's easy for a small change to cause\nbig problems. Are
        you persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_binary_challenge2_2019: "There are 256 bits\nrepresented on this
        grid - that means it's easy for a small change to cause\nbig problems. Are
        you persistent enough to restore this logo back to normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_nestedLoops9_predict1: "**Challenge:**\nCan you figure out how
        to make a picture like this?\\\r\n\\\r\n\n-   Both shapes have\n    50 pixel
        sides"
      courseD_artist_nestedLoops9_predict1_2018: "**Challenge:**\nCan you figure out
        how to make a picture like this?\\\r\n\\\r\n\n-   Both shapes have\n    50
        pixel sides"
      courseD_artist_nestedLoops9_predict1_2019: "**Challenge:**\nCan you figure out
        how to make a picture like this?\\\r\n\\\r\n\n-   Both shapes have\n    50
        pixel sides"
      courseD_artist_nestedLoops_challenge1: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      courseD_artist_nestedLoops_challenge1_2018: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      courseD_artist_nestedLoops_challenge1_2019: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   Both shapes have **50 pixel\n    sides.**\\\r\n-
        \  The _octagons_ are made with **45 degree** turns.\\\r\n-   The _triangles_\n
        \   are made with **120 degree** turns."
      courseD_artist_nestedLoops_challenge2: "Can you figure\nout how to make a picture
        like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make an octagon.\\\r\n-
        \  The second inner loop should make a hexagon.\\\r\n-   The\n    third inner
        loop should make a square."
      courseD_artist_nestedLoops_challenge2_2018: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make
        an octagon.\\\r\n-   The second inner loop should make a hexagon.\\\r\n-   The\n
        \   third inner loop should make a square."
      courseD_artist_nestedLoops_challenge2_2019: "Can you figure\nout how to make
        a picture like this?\\\r\n\\\r\n\n-   The first inner loop should\n    make
        an octagon.\\\r\n-   The second inner loop should make a hexagon.\\\r\n-   The\n
        \   third inner loop should make a square."
      courseD_artist_project1: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Hi,
        I’m Elsa of Arendelle, help me draw a shape.”_\\\r\n\\\r\nDraw a small shape,\nbetween
        **20 and 50** pixels wide.  It can be any shape that you like.  \\\r\n\n<hr/>\\\r\n\\\r\nYou\ncan
        try making a polygon, like one of these:  \\\r\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\\\r\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\\\r\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \\\r\n\\\r\n  \\\r\n  \\\r\nOr\neven an abstract shape, like one of these:
        \ \\\r\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\\\r\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\\\r\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\\\r"
      courseD_artist_project1_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Hi,
        I’m Elsa of Arendelle, help me draw a shape.”_\\\r\n\\\r\nDraw a small shape,\nbetween
        **20 and 50** pixels wide.  It can be any shape that you like.  \\\r\n\n<hr/>\\\r\n\\\r\nYou\ncan
        try making a polygon, like one of these:  \\\r\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\\\r\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\\\r\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \\\r\n\\\r\n  \\\r\n  \\\r\nOr\neven an abstract shape, like one of these:
        \ \\\r\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\\\r\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\\\r\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\\\r"
      courseD_artist_project1_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Hi,
        I’m Elsa of Arendelle, help me draw a shape.”_\\\r\n\\\r\nDraw a small shape,\nbetween
        **20 and 50** pixels wide.  It can be any shape that you like.  \\\r\n\n<hr/>\\\r\n\\\r\nYou\ncan
        try making a polygon, like one of these:  \\\r\n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\\\r\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\\\r\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \\\r\n\\\r\n  \\\r\n  \\\r\nOr\neven an abstract shape, like one of these:
        \ \\\r\n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\\\r\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\\\r\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)\\\r"
      courseD_artist_project1a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_project1a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_project1a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        try something new. This time, skate in a zig-zag.\"_\\\r\n\\\r\n\\\r\n<img\nsrc=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"\nwidth=\"200px\"
        style=\"float: left; margin: 0 15px 15px 0;\" />\\\r\nDraw a\nstair-step pattern
        that uses turns between 75 and 105 degrees -- but make\nsure that your left
        and right turns use the same angle.  \\\r\n(You will see\nwhy later.)"
      courseD_artist_project2: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Now,
        let’s draw more than one.”_\\\r\n\\\r\nNow take your shape and draw two\nor
        three in a row by jumping forward some number of pixels.  \\\r\n\\\r\n\n-
        \  If\n    you jump forward by **less** than the width of your shape, they
        might overlap\\\r\n-   \\-\n    If you jump forward by **more** than the width
        of your shape, you will get\n    a gap\\\r\n    \\\r\n    <hr/>\\\r\n    \\\r\n
        \   Your row might end up straight like with these:\\\r\n    \\\r\n    ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\\\r\n
        \   ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\\\r\n
        \   ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\\\r\n
        \   <br/>  <br/>\\\r\n    \\\r\n    \\\r\n    Or,\n    your shapes might move
        around like one of these: \\\r\n    \\\r\n    ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\\\r\n
        \   ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\\\r\n
        \   ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Now,
        let’s draw more than one.”_\\\r\n\\\r\nNow take your shape and draw two\nor
        three in a row by jumping forward some number of pixels.  \\\r\n\\\r\n\n-
        \  If\n    you jump forward by **less** than the width of your shape, they
        might overlap\\\r\n-   \\-\n    If you jump forward by **more** than the width
        of your shape, you will get\n    a gap\\\r\n    \\\r\n    <hr/>\\\r\n    \\\r\n
        \   Your row might end up straight like with these:\\\r\n    \\\r\n    ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\\\r\n
        \   ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\\\r\n
        \   ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\\\r\n
        \   <br/>  <br/>\\\r\n    \\\r\n    \\\r\n    Or,\n    your shapes might move
        around like one of these: \\\r\n    \\\r\n    ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\\\r\n
        \   ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\\\r\n
        \   ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_“Now,
        let’s draw more than one.”_\\\r\n\\\r\nNow take your shape and draw two\nor
        three in a row by jumping forward some number of pixels.  \\\r\n\\\r\n\n-
        \  If\n    you jump forward by **less** than the width of your shape, they
        might overlap\\\r\n-   \\-\n    If you jump forward by **more** than the width
        of your shape, you will get\n    a gap\\\r\n    \\\r\n    <hr/>\\\r\n    \\\r\n
        \   Your row might end up straight like with these:\\\r\n    \\\r\n    ![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\\\r\n
        \   ![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\\\r\n
        \   ![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\\\r\n
        \   <br/>  <br/>\\\r\n    \\\r\n    \\\r\n    Or,\n    your shapes might move
        around like one of these: \\\r\n    \\\r\n    ![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\\\r\n
        \   ![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\\\r\n
        \   ![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\\\r\n    \\\r\n    Here\n    is an
        example of stairs that use a 76 degree turn:\\\r\n    \\\r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\\\r\n    \\\r\n    Here\n    is an
        example of stairs that use a 76 degree turn:\\\r\n    \\\r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Now
        let’s turn and go back the way we came.\"_\\\r\n\\\r\nTurn around 180 degrees\nand
        draw the exact same stair pattern again!  \\\r\n\\\r\n\n-   The rest of this
        stage\n    will be easier if you put all of your code inside of a loop to
        make Elsa  draw,\n    turn around 180 degrees, draw, then turn around 180
        degrees again.\\\r\n    \\\r\n    <hr/>\\\r\n    \\\r\n    Here\n    is an
        example of stairs that use a 76 degree turn:\\\r\n    \\\r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project3: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\\\r\nTake a look at these examples\nwith
        polygons:  \\\r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\\\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\\\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\\\r\n\\\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \\\r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\\\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\\\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\\\r\nTake a look at these examples\nwith
        polygons:  \\\r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\\\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\\\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\\\r\n\\\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \\\r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\\\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\\\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        make it into a snowflake.\"_\\\r\n\\\r\nNext, jump Elsa back to the center\nusing
        the `jump to 200 over and 200 down` block, and spin her around to draw\nthe
        line of shapes again and again in a bunch of different directions.   \\\r\n\\\r\nWhat\namazing
        snowflakes you can make!\\\r\n\n<hr/>\\\r\nTake a look at these examples\nwith
        polygons:  \\\r\n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\\\r\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\\\r\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\\\r\n\\\r\nAbstract\nshapes
        might make a snowflake more like one of these:  \\\r\n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\\\r\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\\\r\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project3a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project3a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Let’s
        spin and make it into a snowflake.\"_\\\r\n\\\r\nSpin that shape around\n5
        or 6 times in a circle.\\\r\n\n-   If you choose 5 times,  try a turn of 72
        degrees\\\r\n-   \\-\n    If you choose 6 times,  try a turn of 60 degrees\\\r\n
        \   <hr/>\\\r\n    \\\r\n    Here's an\n    example of Elsa turning a pattern
        6 times:\\\r\n    \\\r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project4: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      courseD_artist_project4_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      courseD_artist_project4_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"What
        happens if we draw snowflakes on top of each other?\"_\\\r\n\\\r\nTry\nlayering
        two different shapes of snowflakes on top of one another with a little\nturn
        in between - see what you get! "
      courseD_artist_project4a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_project4a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_project4a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Now,\nwhat should we do? Let’s explore and create our own winter wonderland!\"_\\\r\n\\\r\nTry\nplaying
        around with what you've created. Draw whatever you like!\\\r\n\n-   What\n
        \   happens if you use two different angles in your stair step pattern?\\\r\n-
        \  What\n    happens if you make your diamond pattern longer or shorter?\\\r\n-
        \  What does\n    it look like to draw two snowflakes on top of one another?\\\r"
      courseD_artist_project5: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      courseD_artist_project5_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      courseD_artist_project5_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)\n_\"Get
        creative with shapes and angles to see what kind of new snowflakes\nwe can
        draw!\"_\\\r"
      courseD_artist_ramp11: "Great!  Now let's make a square\nusing Artist!  The
        blocks are a little different, but the idea is the same.\\\r\n\\_\\_\\_\\\r\nEach\nside
        of the square has a length of 200 pixels, and you will need to turn 90\ndegrees
        to make each angle."
      courseD_artist_ramp12: "Use what you've learned to draw\nthis triangle inside
        of a square.\\\r\n\\_\\_\\_\\\r\n\n##### The sides are each 200 pixels\n\nlong.
        You will need to turn 90 degrees to make the square and 120 degrees\nto make
        the triangle."
      courseD_bee_conditionals1_predict1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals1_predict1_2018: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals1_predict1_2019: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals7_predict2: "Sometimes a cloud\ncovers a flower, sometimes
        it covers a honeycomb! \\\r\n\\\r\nUse the `if/else`\nblock to collect nectar
        at flowers and make honey at honeycomb. Remember:\nthere will only ever bee
        _one_ honeycomb or _one_ flower behind each cloud."
      courseD_bee_conditionals7_predict2_2018: "Sometimes a cloud\ncovers a flower,
        sometimes it covers a honeycomb! \\\r\n\\\r\nUse the `if/else`\nblock to collect
        nectar at flowers and make honey at honeycomb. Remember:\nthere will only
        ever bee _one_ honeycomb or _one_ flower behind each cloud."
      courseD_bee_conditionals7_predict2_2019: "Sometimes a cloud\ncovers a flower,
        sometimes it covers a honeycomb! \\\r\n\\\r\nUse the `if/else`\nblock to collect
        nectar at flowers and make honey at honeycomb. Remember:\nthere will only
        ever bee _one_ honeycomb or _one_ flower behind each cloud."
      courseD_bee_nestedLoops8: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      courseD_bee_nestedLoops8_2018: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      courseD_bee_nestedLoops8_2019: Recueille tout le nectar de chaque fleur et fabrique
        du miel dans chaque gâteau de miel. Utilise une boucle imbriquée.
      courseD_bounce_events10s_2018: "There is now a hoop at the\ntop.  \\\r\n\\\r\nAttach
        the `score point` block to the `when ball in goal` event\nand the `score opponent
        point` block to the `when ball misses hand` event\nto make a game. \\\r\n\\\r\n\\---\\\r\n\\\r\nSee
        how many points you can score before\nyour opponent scores twice."
      courseD_bounce_events10s_2019: "There is now a hoop at the\ntop.  \\\r\n\\\r\nAttach
        the `score point` block to the `when ball in goal` event\nand the `score opponent
        point` block to the `when ball misses hand` event\nto make a game. \\\r\n\\\r\n\\---\\\r\n\\\r\nSee
        how many points you can score before\nyour opponent scores twice."
      courseD_bounce_events11s_2018: "Now, you are in control of\nthe ball!  Attach
        the `throw new ball` block in all of the places where the\ngame needs a new
        ball.\\\r\n\\\r\n\\---\\\r\n\\\r\nSee how many points you can score\nbefore
        your opponent scores twice!"
      courseD_bounce_events11s_2019: "Now, you are in control of\nthe ball!  Attach
        the `throw new ball` block in all of the places where the\ngame needs a new
        ball.\\\r\n\\\r\n\\---\\\r\n\\\r\nSee how many points you can score\nbefore
        your opponent scores twice!"
      courseD_bounce_events1s_2018: "Get the ball to the hoop!   \\\r\nAttach\na block
        to the `when left arrow` event and press \"Run\" to move the player\nto the
        net."
      courseD_bounce_events1s_2019: "Get the ball to the hoop!   \\\r\nAttach\na block
        to the `when left arrow` event and press \"Run\" to move the player\nto the
        net."
      courseD_bounce_events6s_2018: "Now the basket is at the top.  \\\r\n\\\r\nAttach\ncode
        to make the ball bounce when it hits the wall so you can solve this puzzle."
      courseD_bounce_events6s_2019: "Now the basket is at the top.  \\\r\n\\\r\nAttach\ncode
        to make the ball bounce when it hits the wall so you can solve this puzzle."
      courseD_bounce_events7s_2018: "Attach sound blocks to make\nthe net swish when
        you hit the basket and have the whistle blow when the ball\nmisses your hand.
        \ \\\r\n\\\r\n\\---\\\r\n\\\r\nBounce the ball until it hits the finish\ntarget."
      courseD_bounce_events7s_2019: "Attach sound blocks to make\nthe net swish when
        you hit the basket and have the whistle blow when the ball\nmisses your hand.
        \ \\\r\n\\\r\n\\---\\\r\n\\\r\nBounce the ball until it hits the finish\ntarget."
      courseD_collector_debugging1: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging10_predict1: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging1a_2018: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging1a_2019: "_\"Oh no! I see a problem.\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging2: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe error(s)
        to collect all of the treasure."
      courseD_collector_debugging2a_2018: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging2a_2019: "_\"You can do this!\"_\\\r\n\\\r\nFix\nthe
        error(s) to collect all of the treasure."
      courseD_collector_debugging3: "_\"Be persistent and you\nwill figure this out.\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging3a_2018: "_\"Be persistent and you\nwill figure this
        out.\"_\\\r\n\\\r\nFix the error(s) to collect all of the treasure."
      courseD_collector_debugging3a_2019: "_\"Be persistent and you\nwill figure this
        out.\"_\\\r\n\\\r\nFix the error(s) to collect all of the treasure."
      courseD_collector_debugging4: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging4a_2018: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging4a_2019: "_\"Don't get frustrated.\nYou can do it!\"_\\\r\n\\\r\nFix
        the error(s) to collect all of the treasure."
      courseD_collector_debugging5: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging5a_2018: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging5a_2019: "_\"This puzzle is making\nme loopy!\"_\\\r\n\\\r\nAll
        of the commands that you need are already here...now\nuse your debugging skills
        to figure out how to solve this puzzle."
      courseD_collector_debugging8: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging8a_2018: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging8a_2019: "_\"So much treasure!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9a_2018: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_debugging9a_2019: "_\"It's treasure island!\"_\\\r\n\\\r\nHelp\nLaurel
        fix the code to get all the treasure."
      courseD_collector_nested_loops_challenge2: "_\"Let's\nhunt for treasure - using
        loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles of treasure
        using only the blocks in your toolbox. It is possible\nto collect all 4."
      courseD_collector_nested_loops_challenge2_2018: "_\"Let's\nhunt for treasure
        - using loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles
        of treasure using only the blocks in your toolbox. It is possible\nto collect
        all 4."
      courseD_collector_nested_loops_challenge2_2019: "_\"Let's\nhunt for treasure
        - using loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles
        of treasure using only the blocks in your toolbox. It is possible\nto collect
        all 4."
      courseD_collector_nested_loops_challenge2a: "_\"Let's\nhunt for treasure - using
        loops!\"_ \\\r\n\\\r\nHelp the collector reach at least\ntwo piles of treasure
        using only the blocks in your toolbox. It is possible\nto collect all 4."
      courseD_collector_ramp8: "This puzzle is a lot like the\nlast one, but now it
        stars Laurel the Adventurer!\\\r\n\\_\\_\\_\\\r\n\\\r\nTake the same\npath
        as before, but this time, use a repeat loop to collect treasure when\nyou
        get to it.\\\r"
      courseD_farmer_condLoops3: "_\"Corn, lettuce, AND pumpkins!\nHelp me harvest
        them all.\"_\\\r\n\\\r\nEach plant will have either one piece\nof corn, one
        head of lettuce, or one pumpkin."
      courseD_farmer_condLoops3_2018: "_\"Corn, lettuce, AND pumpkins!\nHelp me harvest
        them all.\"_\\\r\n\\\r\nEach plant will have either one piece\nof corn, one
        head of lettuce, or one pumpkin."
      courseD_farmer_condLoops3_2019: "_\"Corn, lettuce, AND pumpkins!\nHelp me harvest
        them all.\"_\\\r\n\\\r\nEach plant will have either one piece\nof corn, one
        head of lettuce, or one pumpkin."
      courseD_farmer_condLoops_challenge1: "The pumpkins mark\nthe place where you
        should turn. _Turn right at the pumpkins._ Otherwise keep\ngoing forward,
        but remember to collect all of the lettuce or corn along the\nway. \\\r\n\\\r\n**Each
        hidden crop has only one corn or lettuce.**"
      courseD_farmer_condLoops_challenge1_2018: "The pumpkins mark\nthe place where
        you should turn. _Turn right at the pumpkins._ Otherwise keep\ngoing forward,
        but remember to collect all of the lettuce or corn along the\nway. \\\r\n\\\r\n**Each
        hidden crop has only one corn or lettuce.**"
      courseD_farmer_condLoops_challenge1_2019: "The pumpkins mark\nthe place where
        you should turn. _Turn right at the pumpkins._ Otherwise keep\ngoing forward,
        but remember to collect all of the lettuce or corn along the\nway. \\\r\n\\\r\n**Each
        hidden crop has only one corn or lettuce.**"
      courseD_farmer_condLoops_challenge2: "_\"It's a vegetable\nmaze!\"_ \\\r\n\\\r\nTurn
        right at pumpkins, turn left at the lettuce. Collect\neverything to complete
        the level."
      courseD_farmer_condLoops_challenge2_2018: "_\"It's a vegetable\nmaze!\"_ \\\r\n\\\r\nTurn
        right at pumpkins, turn left at the lettuce. Collect\neverything to complete
        the level."
      courseD_farmer_condLoops_challenge2_2019: "_\"It's a vegetable\nmaze!\"_ \\\r\n\\\r\nTurn
        right at pumpkins, turn left at the lettuce. Collect\neverything to complete
        the level."
      courseD_farmer_while4: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_2018: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_2019: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_predict1: "_\"I don't know how\nmuch dirt is in this pile!\"_\\\r\n\\\r\nHelp
        the farmer remove this entire pile\nusing a `while` loop."
      courseD_farmer_while4_predict1_2018: "_\"I don't know how\nmuch dirt is in this
        pile!\"_\\\r\n\\\r\nHelp the farmer remove this entire pile\nusing a `while`
        loop."
      courseD_farmer_while4_predict1_2019: "_\"I don't know how\nmuch dirt is in this
        pile!\"_\\\r\n\\\r\nHelp the farmer remove this entire pile\nusing a `while`
        loop."
      courseD_maze_nestedLoops4: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      courseD_maze_nestedLoops4_2018: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      courseD_maze_nestedLoops4_2019: |-
        Amène-moi jusqu'au tournesol !
        (Indice : tu devras utiliser une boucle « Répéter » à l'intérieur d'une autre boucle pour réussir ce niveau.)
      courseD_maze_ramp3: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by removing it from the other blocks and dragging it back to the toolbox."
      courseD_maze_ramp3_2018: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by removing it from the other blocks and dragging it back to the toolbox."
      courseD_maze_ramp3_2019: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by removing it from the other blocks and dragging it back to the toolbox."
      courseD_maze_ramp4: "_\"Trace the path and lead me to\nthe silly pig.\"_ \\\r\n\\\r\nAvoid
        TNT or feathers will fly!"
      courseD_maze_ramp4_2018: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseD_maze_ramp4_2019: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseD_maze_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp5_2019: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp6: "_\"Keep calm and help me find the\nbad pig. Otherwise I
        might get angry!\"_\\\r\n\\\r\nWhen you have several of the\nsame block in
        a row, try using a `repeat` loop, instead.  This will do the\nsame thing with
        less code!"
      courseD_maze_ramp7: "_\"It's time to get angry!\"_  \\\r\n\\\r\n\\\r\nUse\nwhat
        you've learned to get the bird to the pig!"
      courseD_playLab_cond3a: "It's time to use what we've\nlearned about conditionals
        to make this game amazing. \\\r\n\\\r\nAdd code so\nthat when Pegleg gets
        to the dragon, he gets two points _if_ the dragon is\nhappy. Otherwise, he
        should get only one point added to his score."
      courseD_playLab_cond3a_2018: "It's time to use what we've\nlearned about conditionals
        to make this game amazing. \\\r\n\\\r\nAdd code so\nthat when Pegleg gets
        to the dragon, he gets two points _if_ the dragon is\nhappy. Otherwise, he
        should get only one point added to his score."
      courseD_playLab_cond6a: "We don't want the pirate to\nstay in the \"safe zone\"
        too long!  \\\r\n\\\r\nAdd code to the `if` statement\nbelow so that if the
        pirate is in the safe zone, the program will wait one\nsecond, then deduct
        a point as long as he stays beneath the octopus line."
      courseD_playLab_cond6a_2018: "We don't want the pirate to\nstay in the \"safe
        zone\" too long!  \\\r\n\\\r\nAdd code to the `if` statement\nbelow so that
        if the pirate is in the safe zone, the program will wait one\nsecond, then
        deduct a point as long as he stays beneath the octopus line."
      courseD_scrat_ramp3: "_\"This pig is ruffling my feathers.\"_\\\r\n\\\r\nThere\nis
        one extra block that is going to cause the bird to crash.  \\\r\nThrow it\naway
        by dragging it back to the toolbox."
      courseD_scrat_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_scrat_ramp6: "_\"Keep calm and help me find the\nbad pig. Otherwise
        I might get angry!\"_\\\r\n\\\r\nWhen you have several blocks\nin a row, try
        moving them inside of a `repeat` loop.  This will do the same\nthing with
        less code!"
      courseE_artist_concept_challenge1: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time."
      courseE_artist_concept_challenge1_2018: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"\nwidth=\"200px\"/>\\\r\n\\\r\nNow
        for a challenge!  \\\r\n\\\r\nHere is a design that\nuses only blocks that
        you have already been shown.  Can you figure out how\nto recreate it?  Feel
        free to use trial and error. You are not expected to\nget it perfect the first
        time."
      courseE_artist_functions_challenge2: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      courseE_artist_functions_challenge2_2018: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      courseE_artist_functions_challenge2_2019: "Not only can you\njump to some pre-set
        locations, like the corners of the canvas, you can also\nuse a `jump to` command
        to get to absolutely any spot you like! Try this code\nto see how it works,
        then make the program your own!\\\r\n<xml>\\\r\n  <block\ntype=\"jump_to_xy\">\\\r\n
        \   <title name=\"XPOS\">???</title>\\\r\n    <title\nname=\"YPOS\">???</title>\\\r\n
        \   </block></xml>"
      courseE_artist_ramp8: "Great!  Now let's use that `repeat`\nloop to make a square
        using Artist!  The blocks for artist are a little different\nthan other puzzles,
        but the idea is the same.\\\r\n\\_\\_\\_\\\r\n\n##### Each side of\n\nthe
        square has a length of 200 pixels, and you will need to turn 90 degrees\nto
        make each angle."
      courseE_artist_ramp8_2: "Great!  Now let's use that `repeat`\nloop to make a
        square using Artist!  The blocks for artist are a little different\nthan other
        puzzles, but the idea is the same.\\\r\n\\_\\_\\_\\\r\n\n##### Each side of\n\nthe
        square has a length of 200 pixels, and you will need to turn 90 degrees\nto
        make each angle."
      courseE_artist_ramp9: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_artist_ramp9_2: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_bee_concept2: "Help the bee make all of the honey.  \\\r\n\\\r\nYou\ncan
        only make honey at a honeycomb, but you can check any space to see if\nthere
        is a honeycomb."
      courseE_bee_concept2_2018: "Help the bee make all of the honey.  \\\r\n\\\r\nYou\ncan
        only make honey at a honeycomb, but you can check any space to see if\nthere
        is a honeycomb."
      courseE_bee_functions2: "Functions are blocks of code that\nperform a task.
        \ \\\r\n\\\r\nUse the `get 2 nectar` function to collect the nectar\nfrom
        each flower."
      courseE_bee_functions3: Les fonctions sont des blocs de code qui effectuent
        une tâche. Utilise la fonction « Obtenir 5 » pour obtenir 5 nectars à la fois.
        Veille également à utiliser une boucle pour obtenir un compte de bloc idéal.
      courseE_farmer_functions2ba: "_\"I feel so functional!\"_\\\r\n\\\r\nDid\nyou
        notice that there was repeated code in the last puzzle?  It doesn't work\nto
        put it all inside of a loop, but we **can** use functions.  \\\r\n\\\r\nFor\nthis
        puzzle, we have moved the repeated code into a function called `corn\nand
        pumpkin`. Now, all you need to do is put the small `corn and pumpkin`\n**function
        call block** into the code where you need it.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n#####
        \n\nEach sprout will either grow _one_ corn or nothing."
      courseE_farmer_functions2ba_2018: "_\"I feel so functional!\"_\\\r\n\\\r\nDid\nyou
        notice that there was repeated code in the last puzzle?  It doesn't work\nto
        put it all inside of a loop, but we **can** use functions.  \\\r\n\\\r\nFor\nthis
        puzzle, we have moved the repeated code into a function called `corn\nand
        pumpkin`. Now, all you need to do is put the small `corn and pumpkin`\n**function
        call block** into the code where you need it.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n#####
        \n\nEach sprout will either grow _one_ corn or nothing."
      courseE_farmer_functions2ba_2019: "_\"I feel so functional!\"_\\\r\n\\\r\nDid\nyou
        notice that there was repeated code in the last puzzle?  It doesn't work\nto
        put it all inside of a loop, but we **can** use functions.  \\\r\n\\\r\nFor\nthis
        puzzle, we have moved the repeated code into a function called `corn\nand
        pumpkin`. Now, all you need to do is put the small `corn and pumpkin`\n**function
        call block** into the code where you need it.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n#####
        \n\nEach sprout will either grow _one_ corn or nothing."
      courseE_farmer_ramp11a: "Oh my!  This pile is so big that\nit's hard to guess
        how much dirt is in it.  \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nWe've added\na new
        block to the toolbox called the `while there is a pile` block.  Use\nthis
        to remove dirt only while there is still some to scoop! "
      courseE_farmer_ramp11a_2018: "Oh my!  This pile is so big that\nit's hard to
        guess how much dirt is in it.  \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nWe've added\na
        new block to the toolbox called the `while there is a pile` block.  Use\nthis
        to remove dirt only while there is still some to scoop! "
      courseE_farmer_ramp11a_2019: "Oh my!  This pile is so big that\nit's hard to
        guess how much dirt is in it.  \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nWe've added\na
        new block to the toolbox called the `while there is a pile` block.  Use\nthis
        to remove dirt only while there is still some to scoop! "
      courseE_farmer_ramp12c: "Goodness!  Look at all of these\nsprouts. Some of them
        will turn into corn, and others into lettuce.  \\\r\n\\\r\nTravel\nto the
        ends of the path to pick lettuce while there is lettuce, and pick corn\nwhile
        there is corn. \\\r\n\\\r"
      courseE_farmer_ramp12c_2018: "The lettuce is now only at the\nend of the path.
        \ \\\r\nTravel down the path **until** you reach a head of lettuce,\nthen
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp12c_2019: "Goodness!  Look at all of these\nsprouts. Some
        of them will turn into corn, and others into lettuce.  \\\r\n\\\r\nTravel\nto
        the ends of the path to pick lettuce while there is lettuce, and pick corn\nwhile
        there is corn. \\\r\n\\\r"
      courseE_farmer_ramp12d: "The same technique works with nectar\nand honey!  \\\r\n\\\r\nLook
        at all of these clouds. Some of them will turn into\nhoney, and others into
        nectar.   \\\r\nHelp the bee follow the path and solve\nthis puzzle.\\\r\n\\\r\n\\\r\n\\\r"
      courseE_farmer_ramp12d_2018: "The lettuce is scattered all\nover the garden.
        \ \\\r\nTravel down each path **until** you reach a head of\nlettuce, then
        continue to pick it **while** there is still some left.  "
      courseE_farmer_ramp12d_2019: "The same technique works with nectar\nand honey!
        \ \\\r\n\\\r\nLook at all of these clouds. Some of them will turn into\nhoney,
        and others into nectar.   \\\r\nHelp the bee follow the path and solve\nthis
        puzzle.\\\r\n\\\r\n\\\r\n\\\r"
      courseE_farmer_ramp12e: "The same technique works with nectar\nand honey!  \\\r\n\\\r\nLook
        at all of these clouds. Some of them will turn into\nhoney, and others into
        nectar.   \\\r\nHelp the bee follow the path and solve\nthis puzzle.\\\r\n\\\r\n\\\r\n\\\r"
      courseE_farmer_ramp12e_2018: "The same technique works with nectar\nand honey!
        \ \\\r\n\\\r\nLook at all of these clouds. Some of them will turn into\nhoney,
        and others into nectar.   \\\r\nHelp the bee follow the path and solve\nthis
        puzzle.\\\r\n\\\r\n\\\r\n\\\r"
      courseE_farmer_ramp12e_2019: "The same technique works with nectar\nand honey!
        \ \\\r\n\\\r\nLook at all of these clouds. Some of them will turn into\nhoney,
        and others into nectar.   \\\r\nHelp the bee follow the path and solve\nthis
        puzzle.\\\r\n\\\r\n\\\r\n\\\r"
      courseE_playLab_challenge1: "\\*The **squirrels** are terrified\nto see that
        a **dinosaur** has come to town! Can the brave **knight** keep\nthem all from
        panicking?\\*\\\r\n\\\r\nRules:\\\r\n\n1.  _Touching the squirrels scores\n
        \   you points._\\\r\n2.  _Touching the dinosaur takes many points away._\\\r\n
        \   \\\r\n    Here\n    is a different kind of game that has already been
        started for you! Play it\n    to see how it works. \\\r\n    \\\r\n    \\\r\n
        \   Something should happen when you get enough\n    points or when you run
        out of points. Add some code to the `win game` and\n    `lose game` functions
        to make the game work the way it should. \\\r\n    Click the\n    hints for
        ideas!"
      courseF_artist_for_challenge1: "Can you figure out how\nto re-create this drawing?
        \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge1_2018: "Can you figure out how\nto re-create this
        drawing? \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge1_2019: "Can you figure out how\nto re-create this
        drawing? \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge2: "Can you figure out how\nto re-create this drawing
        with a single loop? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge2_2018: "Can you figure out how\nto re-create this
        drawing with a single loop? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      courseF_artist_for_challenge2_2019: "Can you figure out how\nto re-create this
        drawing with a single loop? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"\nwidth=\"350px\"/>"
      courseF_artist_fwp2: "Edit the function to accept a parameter\ncalled `length`.
        \ \\\r\n\\\r\nThe sides of each square should be 25 pixels larger\nthan the
        last.  The first square has 25 pixel sides."
      courseF_artist_fwp2_predict1: "Edit the function to accept\na parameter called
        `length`.  \\\r\n\\\r\nThe sides of each square should be 25\npixels larger
        than the last.  The first square has 25 pixel sides. Replace\nthe '???' with
        the correct values to draw the picture."
      courseF_artist_fwp3: "Now try creating the function from\nscratch!  \\\r\n\\\r\nCreate
        a function called `draw a square` and use it to outline\nthese four boxes.
        \ \\\r\nMake sure to add a parameter for `length`!\\\r\n\\\r\n\\_\\_\\_\\\r\nStarting\nfrom
        the upper right, the box widths are 50, 100, 150, and 200."
      courseF_artist_fwp4: "Great job!  Now edit this function\nto add a parameter
        for the number of sides in your polygon.\\\r\n\\\r\nThe sides\nof all the
        shapes are 100 pixels long."
      courseF_artist_fwp5: "Use the function from the last puzzle\nto draw this series
        of shapes.  \\\r\n\\\r\n\\\r\nThe triangle has 21 pixel sides,\nand the sides
        in each following shape are 7 pixels longer than the last.   \\\r\nUse\nthe
        `multiplication`block to make this all happen with just one function call.\\\r\n*\\_\\_\\\r\nThe\n`multipication`
        block looks like this <xml>\\<block type=\"math*arithmetic\"\ninline=\"true\">\\\r\n
        \     <title name=\"OP\">MULTIPLY</title>\\\r\n    </block></xml>"
      courseF_artist_fwp6: "**Challenge:** Edit `draw a spiral\nedge` to use `length`
        and `sides` parameters, then recreate these shapes.\\\r\n\\\r\n\\-\nThe square
        goes from 3 pixels to 90 pixels.\\\r\n\n-   The hexagon goes from 3 pixels\n
        \   to 100 pixels.\\\r\n-   The triangle goes from 3 pixels to 95 pixels."
      courseF_artist_fwp7: "Finish off the `draw a spiral edge`\nfunction to also
        ask for a minimum length for the center of the spiral.\\\r\n\\\r\n\\-\nThe
        smallest side in the center of this square is 50 pixels long\\\r\n\n-   The\n
        \   longest side at the outside of this spiral is 200 pixels long"
      courseF_artist_fwp8: "Freeplay! Can you figure out how\nto make this drawing
        using the function that you just created?\\\r\n\\\r\n\n-   The\n    red spiral
        goes from 50 to 200 pixels\\\r\n-   The blue spiral goes from 25 to\n    150
        pixels\\\r\n-   The green spiral goes from 100 to 350 pixels"
      courseF_artist_fwp_challenge2: "Use what you learned in\nthe previous level
        to draw an image like this.\\\r\n\\\r\n_Note: The code becomes\nmore simple
        if you incorporate parameters._\\\r\n\\\r\n<br/>\\\r\n<img src=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"\nwidth=\"300px\"/>\\\r\n<br/>
        \ "
      courseF_artist_variables_challenge2: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_artist_variables_challenge2_2018: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_artist_variables_challenge2_2019: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_bee_conditionals1_predict1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseF_bee_conditionals2: "_\"It's too cloudy to see\nany flowers!\"_\\\r\n\\\r\nCheck
        underneath every cloud to see if it is hiding\na flower before you get nectar.
        If there is a flower underneath the cloud,\nthe bee will need to get nectar
        **once**.  \\\r\n\\\r\nRemember: Not all clouds\nhide the same thing!"
      courseF_bee_conditionals7_predict2: "Sometimes a cloud\ncovers a flower, sometimes
        it covers a honeycomb!\\\r\n\\\r\nUse the `if/else`\nblock to collect nectar
        at flowers and make honey at honeycomb."
      courseF_bee_conditionals8: "**Challenge:** There will\nbe either a flower or
        a honeycomb under each of those clouds!\\\r\n\\\r\nCollect\nnectar once if
        there is a flower. Otherwise, make honey once (because there\nis a honeycomb)."
      courseF_bee_for_challenge2: Résous ce puzzle avec le moins de blocs possible.
      courseF_bee_for_challenge2_2018: Résous ce puzzle avec le moins de blocs possible.
      courseF_bee_for_challenge2_2019: Résous ce puzzle avec le moins de blocs possible.
      courseF_bee_functions2: "To make things easier, it's\ntime to learn about functions!\\\r\n\\\r\nFrom
        here on out, you will be using\na new _function editor_.  This editor is a
        separate window that will appear\nwhen you go to edit a function.  You won't
        see all of the code from your\nfunction while you're coding in the workspace,
        but don't worry...it's still\nthere!  \\\r\n\\_\\_\\_\\\r\n\\\r\nLet's practice
        with this function that gets nectar\nonly if the bee is at a flower.  To see
        the code inside, click the blue \"edit\"\nbutton!\\\r\n\\\r\nUse the `get
        only nectar` function to collect the nectar from\neach flower."
      courseF_bee_functions3a: "Each cloud could be hiding either\none flower or one
        honeycomb!  Write a function that gets nectar if the bee\nis at a flower,
        otherwise it gets honey.\\\r\n\\\r\nUse your function to solve\nthe puzzle!"
      courseF_bee_functions4: "Did you know that you can call\na function from _inside_
        another function?  \\\r\n\\\r\nUse your `check nectar\nor honey` function
        inside the new `move and check` function to help the bee\nturn, go get what's
        under the cloud, then back-up and turn back around!"
      courseF_bee_functions6: "_\"This field is a-MAZE-ing!\"_\\\r\n\\\r\nBuild\nyour
        own function to help the bee through the maze by turning left at flowers\nand
        right at honeycomb.  Don't forget to collect nectar and make honey along\nthe
        way!"
      courseF_bee_functions7: "Rebuild your function from the\nlast puzzle to solve
        this maze.\\\r\n\\\r\nTurn left at the honeycomb and right\nat the flowers.
        \ \\\r\n**Note:** Some corners are unmarked!"
      courseF_bee_functions8a: "Underneath\nthis cloud, there might be a flower with
        an unknown amount of nectar, or a\nhoneycomb with an unknown amount of honey.
        \ \\\r\n\\\r\nCan you write a program\nthat can handle either?"
      courseF_bee_functionsPre7: "Now try building a function\nto solve this maze.
        \ How is it different from last time?  \\\r\n\\\r\nTurn left\nat the honeycomb
        and right at the flowers.  \\\r\n**Note:** Some corners are\nunmarked!"
      courseF_bee_fwp1: "Check beneath the clouds to see if\nthe flowers have any
        nectar.  \\\r\n\\\r\nFor this whole stage, each flower will\nhave exactly
        **one** unit of nectar, and each honeycomb will need exactly\n**one** unit
        of honey. \\\r\n\\\r\n\\\r"
      courseF_bee_fwp2: "Here's some code that solves the last\npuzzle.  \\\r\nLet's
        pull it into a function, then call the function to check\nthis row for nectar.
        \ \\\r\n\\_\\_\\_\\\r\nThis may seem like a strange step now, but\nit will
        be really helpful soon!"
      courseF_bee_fwp3: "Time to put the function to the test!\n\\\r\n\\\r\nLet's
        see if it makes collecting these three rows of nectar any easier."
      courseF_bee_fwp4: "_\"How is your function holding up?\"_   \\\r\n\\\r\nWe\nneed
        to make some adjustments here. Click \"edit\" to add a `length` parameter\nto
        the function so that it will still work when the row is a different length."
      courseF_bee_fwp5: "_\"You're doing great so far!\"_\\\r\n\\\r\nLet's\nuse this
        function to collect the nectar."
      courseF_bee_fwp6: "You can make code shorter and more\nefficient when you combine
        functions with other programming elements.  \\\r\n\\_\\_\\_\\\r\nWhat\nblocks
        can you use with your function to build a short and sweet solution\nto this
        puzzle?"
      courseF_bee_fwp_challenge2: "Let's see if you can handle\nthis one final test!
        Give it everything you've got!\\\r\n\\\r\nUse one `for loop`\nin a function
        to collect all of the vegetables in the row. Make the `for loop`\ncount to
        different maximum values by using the `length` parameter. Make your\nprogram
        as short as possible by using a second `for loop` outside the function.\\\r\n\\\r\nGood\nluck!"
      courseF_playlab_variables2b: "We can make sentences\nmore interesting by mixing
        pieces of text with variables.\\\r\n\\\r\nInsert the\nvariable `color` into
        the middle of a sentence by putting it into the empty\nslot in the `join`
        block."
      courseF_playlab_variables5c: "Let's combine the `ask`\nblock with an `if/else`
        statement to have some fun!\\\r\n\\\r\nPirate Pegleg is\ngoing to ask you
        a question.  Drag a copy of the `answer` variable into the\nconditional for
        the `if` statement to check whether or not you entered the\ncorrect color."
      courseF_playlab_variables6c: "In the rest of this stage,\nwe will use multiple
        `ask` blocks and multiple `if/else` statements to create\na game that **you**
        control!\\\r\n\\\r\nStart by setting the \"codename\" variable\nto a word
        that you can remember.  Then, use an `ask` block to get a codename\nfrom the
        users.  You will need an `if/else` block to see if the codename entered\nmatches
        the codename that you have set."
      courseF_playlab_variables7c: "Add another `ask` block\nto ask the user to guess
        a color.  \\\r\n\\\r\nKeep your `if/else` statement such\nthat your codename
        always wins the game, but every other codename always loses."
      courseF_playlab_variables_challenge2: "Now for a game\nof tag!  Tag Cat to get
        2 points. Tag Penguin to get 3 points.  Get exactly\n10 points to win!\\\r\nBut
        be careful, when Cat and Penguin tag each other,\nthey take points away.\\\r\n\\\r\n<strong>\\\r\nAdd
        the blocks necessary to make\nthis game work the way it's been explained.
        \\\r\n\n-   How will you get Dog to\n    move in all directions using the
        arrow keys?  \\\r\n-   How will you add points\n    when Dog tags Cat or Penguin?
        \ \\\r\n-   How will you subtract points when Cat\n    and Penguin touch?\\\r\n
        \   </strong>\\\r\n    \\\r\n    <hr/>\\\r"
      frozen circle: Un cercle est une forme spéciale. Peux-tu trouver par quel chiffre
        remplacer les points d'interrogation pour «Dessiner un cercle»?
      frozen circle function: Utilise le nouveau bloc «Créer un cercle» pour créer
        10 cercles superposés. N'oublie pas de «Sauter» en avant, entre les cercles.
      frozen circle function in circle: Maintenant, nous allons créer 20 cercles superposés,
        en tournant de 18 degrés entre chaque cercle.
      frozen circle function with parameter: Voici un bloc «Créer un cercle» qui peut
        faire des cercles de différentes tailles. Peux-tu utiliser ce bloc pour créer
        un petit cercle de 5 pixels et un plus grand cercle de 10 pixels ?
      frozen cross: Enveloppe un bloc «Répéter» autour de ces commandes pour créer
        un signe plus. As-tu remarqué qu'Elsa peut se déplacer vers l'avant et vers
        l'arrière ?
      frozen cross rotate: Maintenant, essaie de le répéter 10 fois. De combien de
        degrés dois-tu tourner entre chaque ligne ?
      frozen cross rotate dense: 'Répétons-le 90 fois ! Combien de fois 90 rentre
        dans 360 ? Indice : c''est un très petit nombre.'
      frozen diamond: Utilise un bloc « Répéter » autour de ces blocs pour créer un
        parallélogramme. C'est comme un rectangle, mais avec des angles différents.
        Celui-ci a des angles de 60 degrés et 120 degrés au lieu de tous les angles
        à 90 degrés.
      frozen diamond mini snowflake: Savais-tu que chaque flocon de neige est d’une
        forme différente ? Maintenant, créons un nouveau flocon de neige en utilisant
        le bloc «Répéter» pour répéter un parallélogramme 4 fois, en tournant à droite
        de 90 degrés entre chaque parallélogramme.
      frozen diamond snowflake: Maintenant, créons un nouveau flocon de neige en utilisant
        le bloc « Répéter » pour répéter un parallélogramme 10 fois, en tournant à
        droite de 36 degrés entre chacun d’entre eux.
      frozen freeplay: Tu es officiellement devenu un artiste maître ! Crée un merveilleux
        paysage hivernal.
      frozen perpendicular: Maintenant, voyons si nous pouvons créer deux lignes qui
        soient à un angle de 90 degrés l’une de l’autre. Tu devras utiliser le bloc
        «Tourner» ainsi que le bloc «Déplacer».
      frozen snowflake branch: Essaie d'utiliser le bloc «Créer une branche de flocon
        de neige» pour créer trois branches, qui commencent à ressembler à un flocon
        de neige.
      frozen snowflake full: Maintenant, répétons-le 8 fois pour faire un beau flocon
        de neige !
      frozen snowflower: Des motifs neigeux complexes peuvent être créés avec des
        formes très simples. Peux-tu faire un motif en répétant 5 cercles de 5 pixels
        et 5 cercles de 10 pixels ?
      frozen square iterative: Il semble que nous sommes à mi-chemin vers la création
        d’un carré. Mettons 4 lignes ensemble pour créer un carré.
      frozen square loop: Salut, je suis Anna de Arendelle ! Faisons un carré avec
        le bloc «Répéter», qui utilise moins de blocs. Combien de fois (???) le bloc
        «Répéter» doit boucler les blocs à l'intérieur pour en faire un carré ?
      frozen square loop 3x: Créons trois carrés, en tournant après chaque carré.
        Assure-toi de tourner de 120 degrés avant chaque nouveau carré.
      frozen square snowflake: Peux-tu créer un flocon de neige en utilisant le bloc
        «Répéter» pour faire 10 fois un carré, et le bloc «Tourner» pour tourner de
        36 degrés entre chaque carré ?
      iceage_click_hello: "Can you help Sid call for his friends\nwhen you click on
        him? \\\r\nOnce you're done, press \"Run\" to play.  Click\non Sid to see
        your code work!"
      iceage_free_play: "Time to create your\nown game or story!  \\\r\n\\\r\nWhen
        you're done, click \"Finish\" to let friends\ntry your game on their phones,
        tablets, or computers!\\\r\nDon't know what\nto make? Click the hints for
        details."
      iceage_hello1: "Sid (actor 1) wants to gather everyone\nfor a new adventure.
        Can you help him say \"Hello!\" by dragging the `say`\nblock out and connecting
        it to the bottom of the `when run` event?   \\\r\n\\\r\nDon't\nforget to type
        \"Hello!\" inside!"
      iceage_move_events: "Scrat is still looking for acorns!\n\\\r\nHelp him scamper
        around by attaching a `move actor 1` block to each of\nthe events and changing
        the direction to work for each arrow key. \\\r\nWhen\nyou’re done, click \"Run\"
        and try to collect all of the acorns."
      iceage_sound_and_points: "Here is your code from the last\npuzzle, as well as
        the code to move Granny left and right. \\\r\nCan you finish\nthe program
        to make it so that you both **play a sound** and **score a point**\nwhen Sid
        and Granny collide? \\\r\nPress \"Run\" to play the game."
      iceage_throw_hearts: "Sid wants to let his grandmother,\nGranny, know that he
        loves her.   \\\r\n\\\r\nUse the `actor __ throw` command\nto have Sid (actor
        1) throw hearts at Granny (actor 2)! \\\r\nSet Granny's\nmood to happy when
        she gets hit with the hearts."
      iceage_warn_ice_age: "Everyone needs to move faster because\nan ice storm is
        coming! \\\r\nChange the scene to an icy background and set\nSid’s (actor
        1) speed to fast.\\\r\nPress \"Run\" and move Sid to Diego to warn\nhim."
      ramp_artist_loops1: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops1_2018: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops1_2019: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops5: "Loops sure make writing code easier!\\\r\n\\\r\nUse\nloops
        to draw this staircase.\\\r\n\n-   Each stairstep is 50 pixels long and 50\n
        \   pixels tall\\\r\n-   You will need to turn 90 degrees in each direction"
      ramp_artist_loops5_2018: "Loops sure make writing code easier!\\\r\n\\\r\nUse\nloops
        to draw this staircase.\\\r\n\n-   Each stairstep is 50 pixels long and 50\n
        \   pixels tall\\\r\n-   You will need to turn 90 degrees in each direction"
      ramp_artist_loops5_2019: "Loops sure make writing code easier!\\\r\n\\\r\nUse\nloops
        to draw this staircase.\\\r\n\n-   Each stairstep is 50 pixels long and 50\n
        \   pixels tall\\\r\n-   You will need to turn 90 degrees in each direction"
      ramp_artist_loops6: "This staircase is much bigger, but\nit takes the same amount
        of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the puzzle."
      ramp_artist_loops6_2018: "This staircase is much bigger, but\nit takes the same
        amount of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the
        puzzle."
      ramp_artist_loops6_2019: "This staircase is much bigger, but\nit takes the same
        amount of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the
        puzzle."
